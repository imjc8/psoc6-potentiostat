ARM GAS  C:\Users\JC\AppData\Local\Temp\ccKBcLBo.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0plus
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"ADC_1_INT.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.Cy_SAR_GetInterruptStatus,"ax",%progbits
  20              		.align	2
  21              		.code	16
  22              		.thumb_func
  23              		.type	Cy_SAR_GetInterruptStatus, %function
  24              	Cy_SAR_GetInterruptStatus:
  25              	.LFB83:
  26              		.file 1 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/sar/cy_sar.h"
   1:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /***************************************************************************//**
   2:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \file cy_sar.h
   3:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \version 1.20
   4:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
   5:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Header file for the SAR driver.
   6:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
   7:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ********************************************************************************
   8:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \copyright
   9:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Copyright 2017-2018, Cypress Semiconductor Corporation. All rights reserved.
  10:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * You may use this file only in accordance with the license, terms, conditions,
  11:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * disclaimers, and limitations in the end user license agreement accompanying
  12:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * the software package with which this file was provided.
  13:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
  14:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
  15:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /**
  16:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \addtogroup group_sar
  17:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
  18:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This driver configures and controls the SAR ADC subsystem block.
  19:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  20:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The functions and other declarations used in this driver are in cy_sar.h. 
  21:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * You can include cy_pdl.h (ModusToolbox only) to get access to all functions 
  22:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * and declarations in the PDL. 
  23:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  24:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This SAR ADC subsystem is comprised of:
  25:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - a 12-bit SAR converter (SARADC)
  26:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - an embedded reference block (SARREF)
  27:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - a mux (\ref group_sar_sarmux "SARMUX") at the inputs of the converter
  28:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - a sequence controller (\ref group_sar_sarmux "SARSEQ") that enables multi-channel acquisition
  29:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       in a round robin fashion, without CPU intervention, to maximize scan rates.
  30:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  31:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_block_diagram.png
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccKBcLBo.s 			page 2


  32:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  33:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The high level features of the subsystem are:
  34:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - maximum sample rate of 1 Msps
  35:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Sixteen individually configurable channels (depends on device routing capabilities)
  36:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - per channel selectable
  37:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       - single-ended or differential input mode
  38:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       - input from external pin (8 channels in single-ended mode or 4 channels in differential mo
  39:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *         or from internal signals (AMUXBUS, CTB, Die Temperature Sensor)
  40:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       - choose one of four programmable acquisition times
  41:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       - averaging and accumulation
  42:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - scan can be triggered by firmware or hardware in single shot or continuous mode
  43:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - hardware averaging from 2 to 256 samples
  44:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - selectable voltage references
  45:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       - internal VDDA and VDDA/2 references
  46:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       - buffered 1.2 V bandgap reference from \ref group_sysanalog "AREF"
  47:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       - external reference from dedicated pin
  48:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Interrupt generation
  49:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  50:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_usage Usage
  51:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  52:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The high level steps to use this driver are:
  53:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  54:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   -# \ref group_sar_initialization
  55:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   -# \ref group_sar_trigger_conversions
  56:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   -# \ref group_sar_handle_interrupts
  57:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   -# \ref group_sar_retrieve_result
  58:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  59:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_initialization Initialization and Enable
  60:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  61:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * To configure the SAR subsystem, call \ref Cy_SAR_Init. Pass in a pointer to the \ref SAR_Type
  62:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * structure for the base hardware register address and pass in the configuration structure,
  63:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref cy_stc_sar_config_t.
  64:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  65:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * After initialization, call \ref Cy_SAR_Enable to enable the hardware.
  66:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  67:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Here is guidance on how to set the data fields of the configuration structure:
  68:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  69:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_ctrl uint32_t ctrl
  70:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  71:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field specifies configurations that apply to all channels such as the Vref
  72:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * source or the negative terminal selection for all single-ended channels.
  73:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Select a value from each of the following enums that begin with "cy_en_sar_ctrl_" and "OR" them t
  74:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_pwr_ctrl_vref_t
  75:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_vref_sel_t
  76:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_bypass_cap_t
  77:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_neg_sel_t
  78:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_hw_ctrl_negvref_t
  79:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_comp_delay_t
  80:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_comp_pwr_t
  81:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_sarmux_deep_sleep_t
  82:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_sarseq_routing_switches_t
  83:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  84:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SAR_CTRL
  85:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  86:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_sampleCtrl uint32_t sampleCtrl
  87:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  88:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures sampling details that apply to all channels.
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccKBcLBo.s 			page 3


  89:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Select a value from each of the following enums that begin with "cy_en_sar_sample_" and "OR" them
  90:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_result_align_t
  91:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_single_ended_format_t
  92:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_differential_format_t
  93:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_avg_cnt_t
  94:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_avg_mode_t
  95:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_trigger_mode_t
  96:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  97:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SAMPLE_CTRL
  98:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  99:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_sampleTime01 uint32_t sampleTime01
 100:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 101:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures the value for sample times 0 and 1 in ADC clock cycles.
 102:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 103:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SAR has four programmable 10-bit aperture times that are configured using two data fields,
 104:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref group_sar_init_struct_sampleTime01 and
 105:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref group_sar_init_struct_sampleTime23.
 106:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Ten bits allow for a range of 0 to 1023 cycles, however 0 and 1 are invalid.
 107:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The minimum aperture time is 167 ns. With an 18 MHz ADC clock, this is
 108:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * equal to 3 cycles or a value of 4 in this field. The actual aperture time is one cycle less than
 109:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * the value stored in this field.
 110:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 111:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Use the shifts defined in \ref cy_en_sar_sample_time_shift_t.
 112:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 113:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SAMPLE_TIME01
 114:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 115:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_sampleTime23 uint32_t sampleTime23
 116:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 117:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures the value for sample times 2 and 3 in ADC clock cycles.
 118:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Use the shifts defined in \ref cy_en_sar_sample_time_shift_t.
 119:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 120:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SAMPLE_TIME23
 121:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 122:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_rangeThres uint32_t rangeThres
 123:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 124:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures the upper and lower thresholds for the range interrupt.
 125:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * These thresholds apply on a global level for all channels with range detection enabled.
 126:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 127:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SARSEQ supports range detection to allow for automatic detection of sample values
 128:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * compared to two programmable thresholds without CPU involvement.
 129:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Range detection is done after averaging, alignment, and sign extension (if applicable). In other 
 130:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * threshold values need to have the same data format as the result data.
 131:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The values are interpreted as signed or unsigned according to each channel's configuration.
 132:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 133:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Use the shifts defined in \ref cy_en_sar_range_thres_shift_t.
 134:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 135:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The \ref Cy_SAR_SetLowLimit and \ref Cy_SAR_SetHighLimit provide run-time configurability of thes
 136:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 137:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_RANGE_THRES
 138:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 139:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_rangeCond cy_en_sar_range_detect_condition_t rangeCond
 140:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 141:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures the condition (below, inside, outside, or above) that will trigger
 142:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * the range interrupt. Select a value from the \ref cy_en_sar_range_detect_condition_t enum.
 143:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 144:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_chanEn uint32_t chanEn
 145:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccKBcLBo.s 			page 4


 146:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures which channels will be scanned.
 147:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Each bit corresponds to a channel. Bit 0 enables channel 0, bit 1 enables channel 1,
 148:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * bit 2 enables channel 2, and so on.
 149:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 150:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_chanConfig uint32_t chanConfig[16]
 151:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 152:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Each channel has its own channel configuration register.
 153:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The channel configuration specifies which pin/signal is connected to that channel
 154:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * and how the channel is sampled.
 155:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 156:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Select a value from each of the following enums that begin with "cy_en_sar_chan_config_" and "OR"
 157:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 158:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_input_mode_t
 159:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_pos_pin_addr_t
 160:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_pos_port_addr_t
 161:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_avg_en_t
 162:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_sample_time_t
 163:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_neg_pin_addr_t
 164:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_neg_port_addr_t
 165:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 166:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Some important considerations are:
 167:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - The POS_PORT_ADDR and POS_PIN_ADDR bit fields are used by the SARSEQ to select
 168:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   the connection to the positive terminal (Vplus) of the ADC for each channel.
 169:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - When the channel is an unpaired differential input (\ref CY_SAR_CHAN_DIFFERENTIAL_UNPAIRED), 
 170:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   NEG_PORT_ADDR and NEG_PIN_ADDR are used by the SARSEQ to select the connection
 171:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   to the negative terminal (Vminus) of the ADC.
 172:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - When the channel is a differential input pair (\ref CY_SAR_CHAN_DIFFERENTIAL_PAIRED), the NEG
 173:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   For differential input pairs, only the pin for the positive terminal needs to be
 174:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   specified and this pin must be even. For example, Pin 0 (positive terminal) and Pin 1 (negative
 175:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   are a pair. Pin 2 (positive terminal) and Pin 3 (negative terminal) are a pair.
 176:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 177:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * If the SARSEQ is disabled (\ref cy_en_sar_ctrl_sarseq_routing_switches_t) or
 178:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * it is not controlling any switches (\ref group_sar_init_struct_muxSwitchSqCtrl = 0), the port and
 179:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * are ignored. This is possible when there is only one channel to scan.
 180:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 181:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_CHAN_CONFIG
 182:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 183:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_intrMask uint32_t intrMask
 184:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 185:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures which interrupt events (end of scan, overflow, or firmware collision) will 
 186:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 187:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Select one or more values from the \ref cy_en_sar_intr_mask_t enum and "OR" them
 188:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * together.
 189:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 190:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_INTR_MASK
 191:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 192:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_satIntrMask uint32_t satIntrMask
 193:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 194:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures which channels will cause a saturation interrupt.
 195:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 196:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SARSEQ has a saturation detect that is always applied to every conversion.
 197:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This feature detects whether a channel's sample value is equal to the minimum or maximum values.
 198:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This allows the firmware to take action, for example, discard the result, when the SARADC saturat
 199:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The sample value is tested right after conversion, that is, before averaging. This means that it
 200:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * can happen that the interrupt is set while the averaged result in the data register is not
 201:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * equal to the minimum or maximum.
 202:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccKBcLBo.s 			page 5


 203:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Each bit corresponds to a channel. A value of 0 disables saturation detection for all channels.
 204:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 205:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_rangeIntrMask uint32_t rangeIntrMask
 206:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 207:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures which channels will cause a range detection interrupt.
 208:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Each bit corresponds to a channel. A value of 0 disables range detection for all channels.
 209:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 210:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_muxSwitch uint32_t muxSwitch
 211:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 212:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field is the firmware control of the SARMUX switches.
 213:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 214:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Use one or more values from the \ref cy_en_sar_mux_switch_fw_ctrl_t enum and "OR" them together.
 215:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * If the SARSEQ is enabled, the SARMUX switches that will be used must
 216:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * also be closed using this firmware control.
 217:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 218:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_MUX_SWITCH
 219:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 220:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Firmware control can be changed at run-time by calling \ref Cy_SAR_SetAnalogSwitch with \ref CY_S
 221:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * and the desired switch states.
 222:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 223:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_muxSwitchSqCtrl uint32_t muxSwitchSqCtrl
 224:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 225:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field enables or disables SARSEQ control of the SARMUX switches.
 226:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * To disable control of all switches, set this field to 0. To disable the SARSEQ all together,
 227:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * use \ref CY_SAR_SARSEQ_SWITCH_DISABLE when configuring the \ref group_sar_init_struct_ctrl regist
 228:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 229:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Use one or more values from the \ref cy_en_sar_mux_switch_sq_ctrl_t enum and "OR" them together.
 230:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 231:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_MUX_SQ_CTRL
 232:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 233:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * SARSEQ control can be changed at run-time by calling \ref Cy_SAR_SetSwitchSarSeqCtrl.
 234:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 235:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_configRouting bool configRouting
 236:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 237:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * If true, the \ref group_sar_init_struct_muxSwitch and \ref group_sar_init_struct_muxSwitchSqCtrl 
 238:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * will be used. If false, the fields will be ignored.
 239:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 240:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_vrefMvValue uint32_t vrefMvValue
 241:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 242:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field sets the value of the reference voltage in millivolts used. This value
 243:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * is used for converting counts to volts in the \ref Cy_SAR_CountsTo_Volts, \ref Cy_SAR_CountsTo_mV
 244:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref Cy_SAR_CountsTo_uVolts functions.
 245:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 246:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_trigger_conversions Triggering Conversions
 247:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 248:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SAR subsystem has the following modes for triggering a conversion:
 249:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * <table class="doxtable">
 250:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 251:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>Mode</th>
 252:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>Description</th>
 253:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>Usage</th>
 254:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 255:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 256:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Continuous</td>
 257:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>After completing a scan, the
 258:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     SARSEQ will immediately start the next scan. That is, the SARSEQ will always be BUSY.
 259:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     As a result all other triggers, firmware or hardware, are essentially ignored.
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccKBcLBo.s 			page 6


 260:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *  </td>
 261:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>To enter this mode, call \ref Cy_SAR_StartConvert with \ref CY_SAR_START_CONVERT_CONTINUO
 262:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     To stop continuous conversions, call \ref Cy_SAR_StopConvert.
 263:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     </td>
 264:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 265:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 266:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Firmware single shot</td>
 267:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>A single conversion of all enabled channels is triggered with a function call to \ref Cy_
 268:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     \ref CY_SAR_START_CONVERT_SINGLE_SHOT.
 269:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     </td>
 270:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>
 271:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     Firmware triggering is always available by calling \ref Cy_SAR_StartConvert with \ref CY_SAR_
 272:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     To allow only firmware triggering, or disable
 273:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     hardware triggering, set up the \ref cy_stc_sar_config_t config structure with \ref CY_SAR_TR
 274:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     </td>
 275:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 276:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 277:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Hardware edge sensitive</td>
 278:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>A single conversion of all enabled channels is triggered on the rising edge of the hardwa
 279:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     trigger signal.</td>
 280:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>To enable this mode, set up the \ref cy_stc_sar_config_t config structure with
 281:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     \ref CY_SAR_TRIGGER_MODE_FW_AND_HWEDGE.</td>
 282:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *    </tr>
 283:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *    <tr>
 284:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Hardware level sensitive</td>
 285:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Conversions are triggered continuously when the hardware trigger signal is high.</td>
 286:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>To enable this mode, set up the \ref cy_stc_sar_config_t config structure with
 287:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     \ref CY_SAR_TRIGGER_MODE_FW_AND_HWLEVEL.</td>
 288:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *    </tr>
 289:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * </table>
 290:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 291:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The trigger mode can be changed during run time with \ref Cy_SAR_SetConvertMode.
 292:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 293:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * For the hardware trigger modes, use the \ref group_trigmux driver to route an internal or externa
 294:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * signal to the SAR trigger input.
 295:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * When making the required \ref Cy_TrigMux_Connect calls, use the pre-defined enum, TRIG6_OUT_PASS_
 296:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * for the SAR trigger input.
 297:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 298:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_CONFIG_TRIGGER
 299:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 300:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_handle_interrupts Handling Interrupts
 301:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 302:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SAR can generate interrupts on these events:
 303:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 304:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - End of scan (EOS): when scanning of all enabled channels complete.
 305:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Overflow: when the result register is updated before the previous result is read.
 306:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - FW collision: when a new trigger is received while the SAR is still processing the previous t
 307:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Saturation detection: when the channel result is equal to the minimum or maximum value.
 308:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Range detection: when the channel result meets the programmed upper or lower threshold values
 309:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 310:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SAR interrupt to the NVIC is raised any time the intersection (logic and) of the interrupt
 311:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * flags and the corresponding interrupt masks are non-zero.
 312:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 313:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Implement an interrupt routine and assign it to the SAR interrupt.
 314:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Use the pre-defined enum, pass_interrupt_sar_IRQn, as the interrupt source for the SAR.
 315:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 316:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The following code snippet demonstrates how to implement a routine to handle the interrupt.
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccKBcLBo.s 			page 7


 317:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The routine gets called when any one of the SAR interrupts are triggered.
 318:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * When servicing an interrupt, the user must clear the interrupt so that subsequent
 319:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * interrupts can be handled.
 320:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 321:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_ISR
 322:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 323:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The following code snippet demonstrates how to configure and enable the interrupt.
 324:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 325:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_CONFIG_INTR
 326:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 327:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Alternately, instead of handling the interrupts, the \ref Cy_SAR_IsEndConversion function
 328:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * allows for firmware polling of the end of conversion status.
 329:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 330:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_retrieve_result Retrieve Channel Results
 331:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 332:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Retrieve the ADC result by calling \ref Cy_SAR_GetResult16 with the desired channel.
 333:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * To convert the result to a voltage, pass the ADC result to \ref Cy_SAR_CountsTo_Volts, \ref Cy_SA
 334:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref Cy_SAR_CountsTo_uVolts.
 335:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 336:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_clock SAR Clock Configuration
 337:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 338:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SAR requires a clock. Assign a clock to the SAR using the
 339:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * pre-defined enum, PCLK_PASS_CLOCK_SAR, to identify the SAR subsystem.
 340:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Set the clock divider value to achieve the desired clock rate. The SAR can support
 341:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * a maximum frequency of 18 MHz.
 342:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 343:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm4.c SAR_SNIPPET_CONFIGURE_CLOCK
 344:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 345:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_scan_time Scan Rate
 346:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 347:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The scan rate is dependent on the following:
 348:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 349:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - ADC clock rate
 350:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Number of channels
 351:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Averaging
 352:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Resolution
 353:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Acquisition times
 354:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 355:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_acquisition_time Acquisition Time
 356:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 357:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The acquisition time of a channel is based on which of the four global aperture times are selecte
 358:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * channel. The selection is done during initialization per channel with \ref group_sar_init_struct_
 359:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The four global aperture times are also set during initialization with \ref group_sar_init_struct
 360:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref group_sar_init_struct_sampleTime23. Note that these global aperture times are in SAR clock c
 361:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * acquisition time is 1 less than that value in the register.
 362:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 363:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_acquisition_time_eqn.png
 364:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 365:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_channel_sample_time Channel Sample Time
 366:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 367:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The sample time for a channel is the time required to acquire the analog signal
 368:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * and convert it to a digital code.
 369:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 370:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_channel_sample_time_eqn.png
 371:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 372:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SAR ADC is a 12-bit converter so Resolution = 12.
 373:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccKBcLBo.s 			page 8


 374:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_total_scan_time Total Scan Time
 375:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 376:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Channels using one of the sequential averaging modes (\ref CY_SAR_AVG_MODE_SEQUENTIAL_ACCUM or \r
 377:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * are sampled multiple times per scan. The number of samples averaged are set during initialization
 378:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * with \ref group_sar_init_struct_sampleCtrl using one of the values from \ref cy_en_sar_sample_ctr
 379:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Channels that are not averaged or use the \ref CY_SAR_AVG_MODE_INTERLEAVED mode are only sampled 
 380:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 381:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The total scan time is the sum of each channel's sample time multiplied by the samples per scan.
 382:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 383:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_scan_rate_eqn.png
 384:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 385:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * where N is the total number of channels in the scan.
 386:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 387:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_sarmux SARMUX and SARSEQ
 388:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 389:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SARMUX is an analog programmable multiplexer. Its switches can be controlled by the SARSEQ or
 390:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * and the inputs can come from:
 391:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - a dedicated port (can support 8 single-ended channels or 4 differential channels)
 392:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - an internal die temperature (DieTemp) sensor
 393:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - CTB output via SARBUS0/1 (if CTBs are available on the device)
 394:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - AMUXBUSA/B
 395:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 396:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The following figure shows the SARMUX switches. See the device datasheet for the exact location o
 397:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 398:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_sarmux_switches.png
 399:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 400:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * When using the SARSEQ, the following configurations must be performed:
 401:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - enable SARSEQ control of required switches (see \ref group_sar_init_struct_muxSwitchSqCtrl)
 402:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - close the required switches with firmware (see \ref group_sar_init_struct_muxSwitch)
 403:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - configure the POS_PORT_ADDR and POS_PIN_ADDR, and if used, the NEG_PORT_ADDR and NEG_PIN_ADDR
 404:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 405:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * While firmware can control every switch in the SARMUX, not every switch can be controlled by the 
 406:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Additionally, switches outside of the SARMUX such as the AMUXBUSA/B switches or
 407:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * CTB switches will require separate function calls (see \ref group_gpio "GPIO" and \ref group_ctb 
 408:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SARSEQ can control three switches in the \ref group_ctb "CTB" driver (see \ref Cy_CTB_EnableS
 409:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * These switches need to be enabled for SARSEQ control if the CTB outputs are used as the SARMUX in
 410:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 411:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The following table shows the required POS_PORT_ADDR and POS_PIN_ADDR settings
 412:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * for different input connections.
 413:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 414:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * <table class="doxtable">
 415:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 416:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>Input Connection Selection</th>
 417:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>POS_PORT_ADDR</th>
 418:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>POS_PIN_ADDR</th>
 419:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 420:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 421:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>SARMUX dedicated port</td>
 422:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_SARMUX</td>
 423:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_0 through \ref CY_SAR_CHAN_POS_PIN_ADDR_7</td>
 424:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 425:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 426:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>DieTemp sensor</td>
 427:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_SARMUX_VIRT</td>
 428:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_0</td>
 429:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 430:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccKBcLBo.s 			page 9


 431:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>AMUXBUSA</td>
 432:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_SARMUX_VIRT</td>
 433:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_2</td>
 434:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 435:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 436:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>AMUXBUSB</td>
 437:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_SARMUX_VIRT</td>
 438:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_3</td>
 439:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 440:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 441:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>CTB0 Opamp0 1x output</td>
 442:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_CTB0</td>
 443:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_2</td>
 444:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 445:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 446:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>CTB0 Opamp1 1x output</td>
 447:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_CTB0</td>
 448:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_3</td>
 449:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 450:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * </table>
 451:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 452:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_sarmux_dietemp Input from DieTemp sensor
 453:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 454:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * When using the DieTemp sensor, always use single-ended mode.
 455:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The temperature sensor can be routed to Vplus using the \ref CY_SAR_MUX_FW_TEMP_VPLUS switch.
 456:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Connecting this switch will also enable the sensor. Set the \ref group_sar_acquisition_time "acqu
 457:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * be at least 1 us to meet the settling time of the temperature sensor.
 458:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 459:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_sarmux_dietemp.png
 460:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 461:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_02.cydsn/main_cm4.c SNIPPET_SAR_SARMUX_DIETEMP
 462:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 463:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_sarmux_se_diff Input from SARMUX port
 464:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 465:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The following figure and code snippet show how two GPIOs on the SARMUX dedicated port
 466:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * are connected to the SARADC as separate single-ended channels and as a differential-pair channel.
 467:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 468:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_sarmux_dedicated_port.png
 469:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 470:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_02.cydsn/main_cm4.c SNIPPET_SAR_SARMUX_SE_DIFF
 471:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 472:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_sarmux_ctb Input from CTB output visa SARBUS0/1
 473:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 474:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The following figure and code snippet show how the two opamp outputs from the CTB
 475:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * are connected to the SARADC as separate single-ended channels and as a differential-pair channel.
 476:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Note that separate function calls are needed to configure and enable the opamps, perform required
 477:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * and enable SARSEQ control of the switches contained in the CTB.
 478:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 479:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_sarmux_ctb.png
 480:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 481:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_02.cydsn/main_cm4.c SNIPPET_SAR_SARMUX_CTB
 482:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 483:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_sarmux_amuxbus Input from other pins through AMUXBUSA/B
 484:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 485:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The following figure and code snippet show how two GPIOs on any port through the AMUXBUSA and AMU
 486:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * are connected to the SARADC as separate single-ended channels and as a differential-pair channel.
 487:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Note that separate function calls are needed to route the device pins to the SARMUX. The AMUXBUSe
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccKBcLBo.s 			page 10


 488:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * are separated into multiple segments and these segments are connected/disconnected using the AMUX
 489:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * registers in the HSIOM. In the following code snippet, to connect Port 1 to the SARMUX, the left 
 490:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * switches of AMUX_SPLIT_CTL[1] and AMUX_SPLIT_CTL[6] need to be closed.
 491:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 492:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_sarmux_amuxbus.png
 493:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 494:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_02.cydsn/main_cm4.c SNIPPET_SAR_SARMUX_AMUXBUS
 495:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 496:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_low_power Low Power Support
 497:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This SAR driver provides a callback function to handle power mode transitions.
 498:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The \ref Cy_SAR_DeepSleepCallback function ensures that SAR conversions are stopped
 499:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * before Deep Sleep entry. Upon wakeup, the callback
 500:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * enables the hardware and continuous conversions, if previously enabled.
 501:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 502:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * To trigger the callback execution, the callback must be registered before calling \ref Cy_SysPm_C
 503:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref group_syspm driver for more information about power mode transitions and
 504:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * callback registration.
 505:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 506:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Recall that during configuration of the \ref group_sar_init_struct_ctrl "ctrl" field,
 507:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * the SARMUX can be configured to remain enabled in Deep Sleep mode.
 508:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * All other blocks (SARADC, REFBUF, and SARSEQ) do not support Deep Sleep mode operation.
 509:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 510:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_more_information More Information
 511:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * For more information on the SAR ADC subsystem, refer to the technical reference manual (TRM).
 512:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 513:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_MISRA MISRA-C Compliance]
 514:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 515:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This driver has the following specific deviations:
 516:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 517:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * <table class="doxtable">
 518:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 519:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>MISRA Rule</th>
 520:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>Rule Class (Required/Advisory)</th>
 521:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>Rule Description</th>
 522:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>Description of Deviation(s)</th>
 523:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 524:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 525:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>11.4</td>
 526:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Advisory</td>
 527:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>A cast should not be performed between a pointer to object type and a different pointer t
 528:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>The cy_syspm driver defines the pointer to void in the \ref cy_stc_syspm_callback_params_
 529:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       This SAR driver implements a Deep Sleep callback conforming to the cy_syspm driver requirem
 530:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       When the callback is called, the base should point to the SAR_Type register address.
 531:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     </td>
 532:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 533:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * </table>
 534:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 535:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_changelog Changelog
 536:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * <table class="doxtable">
 537:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr><th>Version</th><th>Changes</th><th>Reason for Change</th></tr>
 538:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 539:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td rowspan="2">1.20</td>
 540:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Flattened the organization of the driver source code into the single source directory and
 541:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Driver library directory-structure simplification.</td>
 542:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 543:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 544:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Added register access layer. Use register access macros instead
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccKBcLBo.s 			page 11


 545:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *         of direct register access using dereferenced pointers.</td>
 546:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Makes register access device-independent, so that the PDL does 
 547:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *         not need to be recompiled for each supported part number.</td>
 548:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 549:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 550:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td rowspan="3">1.10</td>
 551:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td> Added workaround for parts with out of range CAP_TRIM in Init API.</td>
 552:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td> Correct CAP_TRIM is necessary achieving specified SAR ADC linearity</td>
 553:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 554:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 555:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td> Turn off the entire hardware block only if the SARMUX is not enabled 
 556:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *          for Deep Sleep operation.                
 557:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     </td>
 558:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td> Improvement of the \ref Cy_SAR_DeepSleep flow</td>
 559:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 560:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 561:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Updated "Low Power Support" section to describe registering the Deep Sleep callback.
 562:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *         Added parenthesis around logical AND operation in Sleep API.</td>
 563:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Documentation update and clarification</td>
 564:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 565:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 566:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>1.0</td>
 567:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Initial version</td>
 568:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td></td>
 569:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 570:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * </table>
 571:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 572:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \defgroup group_sar_macros Macros
 573:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \defgroup group_sar_functions Functions
 574:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   \{
 575:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_functions_basic         Initialization and Basic Functions
 576:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_functions_power         Low Power Callback
 577:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_functions_config        Run-time Configuration Functions
 578:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_functions_countsto      Counts Conversion Functions
 579:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_functions_interrupt     Interrupt Functions
 580:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_functions_switches      SARMUX Switch Control Functions
 581:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_functions_helper        Useful Configuration Query Functions
 582:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   \}
 583:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \defgroup group_sar_globals Global Variables
 584:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \defgroup group_sar_data_structures Data Structures
 585:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \defgroup group_sar_enums Enumerated Types
 586:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   \{
 587:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_ctrl_register_enums         Control Register Enums
 588:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_sample_ctrl_register_enums  Sample Control Register Enums
 589:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_sample_time_shift_enums     Sample Time Register Enums
 590:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_range_thres_register_enums  Range Interrupt Register Enums
 591:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_chan_config_register_enums  Channel Configuration Register Enums
 592:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_intr_mask_t_register_enums  Interrupt Mask Register Enums
 593:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_mux_switch_register_enums   SARMUX Switch Control Register Enums
 594:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   \}
 595:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 596:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 597:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #if !defined(CY_SAR_H)
 598:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_H
 599:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 600:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #include <stdint.h>
 601:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #include <stdbool.h>
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccKBcLBo.s 			page 12


 602:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #include <stddef.h>
 603:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #include "cy_device_headers.h"
 604:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #include "cy_syslib.h"
 605:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #include "cy_syspm.h"
 606:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #include "cy_device.h"
 607:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 608:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #ifdef CY_IP_MXS40PASS_SAR
 609:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 610:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #if defined(__cplusplus)
 611:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** extern "C" {
 612:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #endif
 613:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 614:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_macros
 615:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
 616:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 617:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 618:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Driver major version */
 619:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_DRV_VERSION_MAJOR        1
 620:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 621:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Driver minor version */
 622:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_DRV_VERSION_MINOR        20
 623:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 624:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** SAR driver identifier */
 625:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_ID                       CY_PDL_DRV_ID(0x01u)
 626:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 627:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Maximum number of channels */
 628:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_MAX_NUM_CHANNELS         (PASS_SAR_SAR_CHANNELS)
 629:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 630:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \cond INTERNAL */
 631:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_DEINIT                   (0uL)             /**< De-init value for most SAR registers
 632:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SAMPLE_TIME_DEINIT       ((3uL << SAR_SAMPLE_TIME01_SAMPLE_TIME0_Pos) | (3uL << SAR_
 633:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CLEAR_ALL_SWITCHES       (0x3FFFFFFFuL)    /**< Value to clear all SARMUX switches *
 634:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_DEINIT_SQ_CTRL           (SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P0_Msk \
 635:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P1_Msk \
 636:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P2_Msk \
 637:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P3_Msk \
 638:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P4_Msk \
 639:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P5_Msk \
 640:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P6_Msk \
 641:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P7_Msk \
 642:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_VSSA_Msk \
 643:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_TEMP_Msk \
 644:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_AMUXBUSA_Msk \
 645:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_AMUXBUSB_Msk \
 646:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_SARBUS0_Msk \
 647:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_SARBUS1_Msk)
 648:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_REG_CTRL_MASK            (SAR_CTRL_PWR_CTRL_VREF_Msk \
 649:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_VREF_SEL_Msk \
 650:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_VREF_BYP_CAP_EN_Msk \
 651:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_NEG_SEL_Msk \
 652:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_SAR_HW_CTRL_NEGVREF_Msk \
 653:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_COMP_DLY_Msk \
 654:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_REFBUF_EN_Msk \
 655:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_COMP_PWR_Msk \
 656:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_DEEPSLEEP_ON_Msk \
 657:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_DSI_SYNC_CONFIG_Msk \
 658:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_DSI_MODE_Msk \
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccKBcLBo.s 			page 13


 659:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_SWITCH_DISABLE_Msk \
 660:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_ENABLED_Msk)
 661:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_REG_SAMPLE_CTRL_MASK     (SAR_SAMPLE_CTRL_LEFT_ALIGN_Msk \
 662:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_Msk \
 663:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_DIFFERENTIAL_SIGNED_Msk \
 664:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_AVG_CNT_Msk \
 665:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_AVG_SHIFT_Msk \
 666:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_AVG_MODE_Msk \
 667:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_CONTINUOUS_Msk \
 668:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_DSI_TRIGGER_EN_Msk \
 669:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_Msk \
 670:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_DSI_SYNC_TRIGGER_Msk \
 671:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_UAB_SCAN_MODE_Msk \
 672:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_REPEAT_INVALID_Msk \
 673:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_VALID_SEL_Msk \
 674:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_VALID_SEL_EN_Msk \
 675:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_VALID_IGNORE_Msk \
 676:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_TRIGGER_OUT_EN_Msk \
 677:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_EOS_DSI_OUT_EN_Msk)
 678:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_REG_CHAN_CONFIG_MASK     (SAR_CHAN_CONFIG_POS_PIN_ADDR_Msk \
 679:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_POS_PORT_ADDR_Msk \
 680:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_DIFFERENTIAL_EN_Msk \
 681:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_AVG_EN_Msk \
 682:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_SAMPLE_TIME_SEL_Msk \
 683:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_NEG_PIN_ADDR_Msk \
 684:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_NEG_PORT_ADDR_Msk \
 685:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_NEG_ADDR_EN_Msk \
 686:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_DSI_OUT_EN_Msk)
 687:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_REG_SAMPLE_TIME_MASK     (SAR_SAMPLE_TIME01_SAMPLE_TIME0_Msk | SAR_SAMPLE_TIME01_SAM
 688:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 689:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_2US_DELAY                (2u)              /**< Delay used in Enable API function to
 690:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_10V_COUNTS               (10.0F)           /**< Value of 10 in volts */
 691:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_10MV_COUNTS              (10000)           /**< Value of 10 in millivolts */
 692:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_10UV_COUNTS              (10000000L)       /**< Value of 10 in microvolts */
 693:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_WRK_MAX_12BIT            (0x00001000uL)    /**< Maximum SAR work register value for 
 694:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_RANGE_LIMIT_MAX          (0xFFFFuL)        /**< Maximum value for the low and high r
 695:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CAP_TRIM_MAX             (0x3FuL)          /**< Maximum value for CAP_TRIM */
 696:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CAP_TRIM_MIN             (0x00uL)          /**< Maximum value for CAP_TRIM */
 697:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CAP_TRIM                 (0x0BuL)          /**< Correct cap trim value */
 698:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 699:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /**< Macros for conditions used in CY_ASSERT calls */
 700:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CHANNUM(chan)            ((chan) < CY_SAR_MAX_NUM_CHANNELS)
 701:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CHANMASK(mask)           ((mask) < (1uL << CY_SAR_MAX_NUM_CHANNELS))
 702:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_RANGECOND(cond)          ((cond) <= CY_SAR_RANGE_COND_OUTSIDE)
 703:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_INTRMASK(mask)           ((mask) <= (uint32_t)(CY_SAR_INTR_EOS_MASK | CY_SAR_INTR_OV
 704:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_TRIGGER(mode)            (((mode) == CY_SAR_TRIGGER_MODE_FW_ONLY) \
 705:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         || ((mode) == CY_SAR_TRIGGER_MODE_FW_AND_HWEDGE) \
 706:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         || ((mode) == CY_SAR_TRIGGER_MODE_FW_AND_HWLEVEL))
 707:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_RETURN(mode)             (((mode) == CY_SAR_RETURN_STATUS) || ((mode) == CY_SAR_WAIT
 708:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_STARTCONVERT(mode)       (((mode) == CY_SAR_START_CONVERT_SINGLE_SHOT) || ((mode) ==
 709:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_RANGE_LIMIT(limit)       ((limit) <= CY_SAR_RANGE_LIMIT_MAX)
 710:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SWITCHSELECT(select)     ((select) == CY_SAR_MUX_SWITCH0)
 711:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SWITCHMASK(mask)         ((mask) <= CY_SAR_CLEAR_ALL_SWITCHES)
 712:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SWITCHSTATE(state)       (((state) == CY_SAR_SWITCH_OPEN) || ((state) == CY_SAR_SWIT
 713:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SQMASK(mask)             (((mask) & (~CY_SAR_DEINIT_SQ_CTRL)) == 0uL)
 714:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SQCTRL(ctrl)             (((ctrl) == CY_SAR_SWITCH_SEQ_CTRL_ENABLE) || ((ctrl) == CY
 715:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccKBcLBo.s 			page 14


 716:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CTRL(value)              (((value) & (~CY_SAR_REG_CTRL_MASK)) == 0uL)
 717:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SAMPLE_CTRL(value)       (((value) & (~CY_SAR_REG_SAMPLE_CTRL_MASK)) == 0uL)
 718:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SAMPLE_TIME(value)       (((value) & (~CY_SAR_REG_SAMPLE_TIME_MASK)) == 0uL)
 719:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CHAN_CONFIG(value)       (((value) & (~CY_SAR_REG_CHAN_CONFIG_MASK)) == 0uL)
 720:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \endcond */
 721:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 722:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} group_sar_macro */
 723:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 724:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_globals
 725:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
 726:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 727:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /***************************************
 728:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *        Global Variables
 729:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ***************************************/
 730:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 731:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** This array is used to calibrate the offset for each channel.
 732:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 733:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * At initialization, channels that are single-ended, signed, and with Vneg = Vref
 734:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * have an offset of -(2^12)/2 = -2048. All other channels have an offset of 0.
 735:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The offset can be overridden using \ref Cy_SAR_SetOffset.
 736:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 737:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The channel offsets are used by the \ref Cy_SAR_CountsTo_Volts, \ref Cy_SAR_CountsTo_mVolts, and
 738:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref Cy_SAR_CountsTo_uVolts functions to convert counts to voltage.
 739:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 740:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 741:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** extern volatile int16_t Cy_SAR_offset[CY_SAR_MAX_NUM_CHANNELS];
 742:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 743:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** This array is used to calibrate the gain for each channel.
 744:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 745:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * It is set at initialization and the value depends on the SARADC resolution
 746:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * and voltage reference, 10*(2^12)/(2*Vref).
 747:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The gain can be overridden using \ref Cy_SAR_SetGain.
 748:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 749:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The channel gains are used by the \ref Cy_SAR_CountsTo_Volts, \ref Cy_SAR_CountsTo_mVolts, and
 750:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref Cy_SAR_CountsTo_uVolts functions to convert counts to voltage.
 751:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 752:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** extern volatile int32_t Cy_SAR_countsPer10Volt[CY_SAR_MAX_NUM_CHANNELS];
 753:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 754:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} group_sar_globals */
 755:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 756:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_enums
 757:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
 758:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 759:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 760:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /******************************************************************************
 761:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****  * Enumerations
 762:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****  *****************************************************************************/
 763:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 764:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** The SAR status/error code definitions */
 765:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 766:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 767:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SUCCESS    = 0x00uL,                                      /**< Success */
 768:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_BAD_PARAM  = CY_SAR_ID | CY_PDL_STATUS_ERROR | 0x01uL,    /**< Invalid input parameters 
 769:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_TIMEOUT    = CY_SAR_ID | CY_PDL_STATUS_ERROR | 0x02uL,    /**< A timeout occurred */
 770:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CONVERSION_NOT_COMPLETE = CY_SAR_ID | CY_PDL_STATUS_ERROR | 0x03uL,    /**< SAR conversi
 771:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_status_t;
 772:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccKBcLBo.s 			page 15


 773:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Definitions for starting a conversion used in \ref Cy_SAR_StartConvert */
 774:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 775:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 776:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_START_CONVERT_SINGLE_SHOT = 0uL, /**< Start a single scan (one shot) from firmware */
 777:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_START_CONVERT_CONTINUOUS  = 1uL, /**< Continuously scan enabled channels and ignores all
 778:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_start_convert_sel_t;
 779:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 780:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Definitions for the return mode used in \ref Cy_SAR_IsEndConversion */
 781:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 782:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 783:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RETURN_STATUS    = 0uL,      /**< Immediately returns the conversion status. */
 784:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_WAIT_FOR_RESULT  = 1uL,    /**< Does not return a result until the conversion of all seq
 785:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_return_mode_t;
 786:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 787:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Switch state definitions */
 788:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 789:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 790:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SWITCH_OPEN      = 0uL,    /**< Open the switch */
 791:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SWITCH_CLOSE     = 1uL     /**< Close the switch */
 792:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_switch_state_t;
 793:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 794:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Definitions for sequencer control of switches */
 795:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 796:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 797:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SWITCH_SEQ_CTRL_DISABLE = 0uL, /**< Disable sequencer control of switch */
 798:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SWITCH_SEQ_CTRL_ENABLE  = 1uL  /**< Enable sequencer control of switch */
 799:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_switch_sar_seq_ctrl_t;
 800:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 801:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Switch register selection for \ref Cy_SAR_SetAnalogSwitch and \ref Cy_SAR_GetAnalogSwitch */
 802:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 803:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 804:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SWITCH0  = 0uL,      /**< SARMUX switch control register */
 805:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_switch_register_sel_t;
 806:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 807:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_ctrl_register_enums
 808:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of enumerations aids in configuring the SAR CTRL register
 809:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
 810:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 811:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Reference voltage buffer power mode definitions */
 812:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 813:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 814:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_100     = 0uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< Full power (100%) */
 815:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_80      = 1uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 80% power */
 816:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_60      = 2uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 60% power */
 817:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_50      = 3uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 50% power */
 818:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_40      = 4uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 40% power */
 819:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_30      = 5uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 30% power */
 820:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_20      = 6uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 20% power */
 821:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_10      = 7uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 10% power */
 822:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_pwr_ctrl_vref_t;
 823:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 824:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Reference voltage selection definitions */
 825:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 826:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 827:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_SEL_BGR         = 4uL << SAR_CTRL_VREF_SEL_Pos,     /**< System wide bandgap from \
 828:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_SEL_EXT         = 5uL << SAR_CTRL_VREF_SEL_Pos,     /**< External Vref direct from 
 829:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_SEL_VDDA_DIV_2  = 6uL << SAR_CTRL_VREF_SEL_Pos,     /**< Vdda/2 (Vref buffer on) */
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccKBcLBo.s 			page 16


 830:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_SEL_VDDA        = 7uL << SAR_CTRL_VREF_SEL_Pos      /**< Vdda */
 831:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_vref_sel_t;
 832:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 833:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Vref bypass cap enable.
 834:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * When enabled, a bypass capacitor should
 835:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * be connected to the dedicated Vref pin of the device.
 836:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Refer to the device datasheet for the minimum bypass capacitor value to use.
 837:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 838:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 839:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 840:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_BYPASS_CAP_DISABLE = 0uL << SAR_CTRL_VREF_BYP_CAP_EN_Pos,    /**< Disable Vref bypass ca
 841:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_BYPASS_CAP_ENABLE  = 1uL << SAR_CTRL_VREF_BYP_CAP_EN_Pos     /**< Enable Vref bypass cap
 842:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_bypass_cap_t;
 843:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 844:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Negative terminal (Vminus) selection definitions for single-ended channels.
 845:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 846:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The Vminus input for single ended channels can be connected to
 847:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Vref, VSSA, or routed out to an external pin.
 848:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The options for routing to a pin are through Pin 1, Pin 3, Pin 5, or Pin 7
 849:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * of the SARMUX dedicated port or an acore wire in AROUTE, if available on the device.
 850:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 851:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref CY_SAR_NEG_SEL_VSSA_KELVIN comes straight from a Vssa pad without any shared branches
 852:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * so as to keep quiet and avoid voltage drops.
 853:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 854:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 855:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 856:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_SEL_VSSA_KELVIN  = 0uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to VSSA_KELVIN 
 857:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_SEL_P1           = 2uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to Pin 1 of SAR
 858:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_SEL_P3           = 3uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to Pin 3 of SAR
 859:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_SEL_P5           = 4uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to Pin 5 of SAR
 860:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_SEL_P7           = 5uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to Pin 6 of SAR
 861:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_SEL_ACORE        = 6uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to an ACORE in 
 862:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_SEL_VREF         = 7uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to VREF input o
 863:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_neg_sel_t;
 864:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 865:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Enable hardware control of the switch between Vref and the Vminus input */
 866:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 867:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 868:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CTRL_NEGVREF_FW_ONLY = 0uL << SAR_CTRL_SAR_HW_CTRL_NEGVREF_Pos,    /**< Only firmware co
 869:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CTRL_NEGVREF_HW      = 1uL << SAR_CTRL_SAR_HW_CTRL_NEGVREF_Pos     /**< Enable hardware 
 870:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_hw_ctrl_negvref_t;
 871:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 872:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the comparator latch delay */
 873:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 874:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 875:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CTRL_COMP_DLY_2P5    = 0uL << SAR_CTRL_COMP_DLY_Pos,    /**< 2.5 ns delay, use for SAR c
 876:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CTRL_COMP_DLY_4      = 1uL << SAR_CTRL_COMP_DLY_Pos,    /**< 4 ns delay, use for SAR con
 877:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CTRL_COMP_DLY_10     = 2uL << SAR_CTRL_COMP_DLY_Pos,    /**< 10 ns delay, use for SAR co
 878:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CTRL_COMP_DLY_12     = 3uL << SAR_CTRL_COMP_DLY_Pos     /**< 12 ns delay, use for SAR co
 879:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_comp_delay_t;
 880:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 881:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the comparator power mode */
 882:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 883:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 884:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_100     = 0uL << SAR_CTRL_COMP_PWR_Pos,      /**< 100% power, use this for > 2 
 885:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_80      = 1uL << SAR_CTRL_COMP_PWR_Pos,      /**< 80% power, use this for 1.5 -
 886:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_60      = 2uL << SAR_CTRL_COMP_PWR_Pos,      /**< 60% power, use this for 1.0 -
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccKBcLBo.s 			page 17


 887:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_50      = 3uL << SAR_CTRL_COMP_PWR_Pos,      /**< 50% power, use this for 500 k
 888:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_40      = 4uL << SAR_CTRL_COMP_PWR_Pos,      /**< 40% power, use this for 250 -
 889:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_30      = 5uL << SAR_CTRL_COMP_PWR_Pos,      /**< 30% power, use this for 100 -
 890:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_20      = 6uL << SAR_CTRL_COMP_PWR_Pos,      /**< 20% power, use this for TDB s
 891:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_10      = 7uL << SAR_CTRL_COMP_PWR_Pos,      /**< 10% power, use this for < 100
 892:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_comp_pwr_t;
 893:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 894:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Enable or disable the SARMUX during Deep Sleep power mode. */
 895:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 896:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 897:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_DEEPSLEEP_SARMUX_OFF = 0uL << SAR_CTRL_DEEPSLEEP_ON_Pos,    /**< Disable SARMUX operatio
 898:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_DEEPSLEEP_SARMUX_ON  = 1uL << SAR_CTRL_DEEPSLEEP_ON_Pos     /**< Enable SARMUX operation
 899:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_sarmux_deep_sleep_t;
 900:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 901:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Enable or disable the SARSEQ control of routing switches */
 902:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 903:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 904:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SARSEQ_SWITCH_ENABLE    = 0uL << SAR_CTRL_SWITCH_DISABLE_Pos,    /**< Enable the SARSEQ 
 905:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SARSEQ_SWITCH_DISABLE   = 1uL << SAR_CTRL_SWITCH_DISABLE_Pos     /**< Disable the SARSEQ
 906:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_sarseq_routing_switches_t;
 907:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 908:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /* \} */
 909:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 910:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_sample_ctrl_register_enums
 911:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of enumerations are used in configuring the SAR SAMPLE_CTRL register
 912:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
 913:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 914:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure result alignment, either left or right aligned.
 915:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 916:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \note
 917:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Averaging always uses right alignment. If the \ref CY_SAR_LEFT_ALIGN
 918:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * is selected with averaging enabled, it is ignored.
 919:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 920:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \note
 921:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The voltage conversion functions (\ref Cy_SAR_CountsTo_Volts, \ref Cy_SAR_CountsTo_mVolts,
 922:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref Cy_SAR_CountsTo_uVolts) are only valid for right alignment.
 923:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * */
 924:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 925:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 926:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RIGHT_ALIGN  = 0uL << SAR_SAMPLE_CTRL_LEFT_ALIGN_Pos,    /**< Right align result data to
 927:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_LEFT_ALIGN   = 1uL << SAR_SAMPLE_CTRL_LEFT_ALIGN_Pos     /**< Left align result data to 
 928:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_sample_ctrl_result_align_t;
 929:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 930:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure format, signed or unsigned, of single-ended channels */
 931:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 932:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 933:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SINGLE_ENDED_UNSIGNED  = 0uL << SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_Pos,    /**< Result 
 934:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SINGLE_ENDED_SIGNED    = 1uL << SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_Pos     /**< Result 
 935:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_sample_ctrl_single_ended_format_t;
 936:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 937:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure format, signed or unsigned, of differential channels */
 938:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 939:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 940:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_DIFFERENTIAL_UNSIGNED  = 0uL << SAR_SAMPLE_CTRL_DIFFERENTIAL_SIGNED_Pos,    /**< Result 
 941:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_DIFFERENTIAL_SIGNED    = 1uL << SAR_SAMPLE_CTRL_DIFFERENTIAL_SIGNED_Pos     /**< Result 
 942:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_sample_ctrl_differential_format_t;
 943:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccKBcLBo.s 			page 18


 944:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure number of samples for averaging.
 945:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This applies only to channels with averaging enabled.
 946:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 947:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 948:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 949:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_2          = 0uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 950:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_4          = 1uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 951:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_8          = 2uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 952:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_16         = 3uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 953:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_32         = 4uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 954:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_64         = 5uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 955:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_128        = 6uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 956:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_256        = 7uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos     /**< Set samples averaged to
 957:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_sample_ctrl_avg_cnt_t;
 958:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 959:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the averaging mode.
 960:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 961:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Sequential accumulate and dump: a channel will be sampled back to back.
 962:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   The result is added to a running sum in a 20-bit register. At the end
 963:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   of the scan, the accumulated value is shifted right to fit into 16 bits
 964:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   and stored into the CHAN_RESULT register.
 965:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Sequential fixed:  a channel will be sampled back to back.
 966:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   The result is added to a running sum in a 20-bit register. At the end
 967:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   of the scan, the accumulated value is shifted right to fit into 12 bits
 968:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   and stored into the CHAN_RESULT register.
 969:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Interleaved: a channel will be sampled once per scan.
 970:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   The result is added to a running sum in a 16-bit register.
 971:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   In the scan where the final averaging count is reached,
 972:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   the accumulated value is shifted right to fit into 12 bits
 973:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   and stored into the CHAN_RESULT register.
 974:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   In all other scans, the CHAN_RESULT will have an invalid result.
 975:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   In interleaved mode, make sure that the averaging
 976:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   count is low enough to ensure that the intermediate value does not exceed 16 bits,
 977:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   that is averaging count is 16 or less. Otherwise, the MSBs will be lost.
 978:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   In the special case that averaging is enabled for all enabled channels
 979:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   and interleaved mode is used, the interrupt frequency
 980:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   will be reduced by a factor of the number of samples averaged.
 981:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 982:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 983:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 984:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_MODE_SEQUENTIAL_ACCUM    = 0uL,                               /**< Set mode to seque
 985:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_MODE_SEQUENTIAL_FIXED    = SAR_SAMPLE_CTRL_AVG_SHIFT_Msk,     /**< Set mode to seque
 986:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_MODE_INTERLEAVED         = SAR_SAMPLE_CTRL_AVG_MODE_Msk,      /**< Set mode to inter
 987:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_sample_ctrl_avg_mode_t;
 988:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 989:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the trigger mode.
 990:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 991:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Firmware triggering is always enabled and can be single shot or continuous.
 992:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Additionally, hardware triggering can be enabled with the option to be
 993:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * edge or level sensitive.
 994:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 995:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 996:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 997:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_TRIGGER_MODE_FW_ONLY        = 0uL,                                /**< Firmware trigger 
 998:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_TRIGGER_MODE_FW_AND_HWEDGE  = SAR_SAMPLE_CTRL_DSI_TRIGGER_EN_Msk, /**< Enable edge sensi
 999:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_TRIGGER_MODE_FW_AND_HWLEVEL = SAR_SAMPLE_CTRL_DSI_TRIGGER_EN_Msk | SAR_SAMPLE_CTRL_DSI_T
1000:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_sample_ctrl_trigger_mode_t;
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccKBcLBo.s 			page 19


1001:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1002:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /* \} */
1003:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1004:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_sample_time_shift_enums
1005:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of enumerations aids in configuring the SAR SAMPLE_TIME* registers
1006:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1007:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1008:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the sample time by using these shifts */
1009:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1010:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1011:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SAMPLE_TIME0_SHIFT       = SAR_SAMPLE_TIME01_SAMPLE_TIME0_Pos,             /**< Shift fo
1012:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SAMPLE_TIME1_SHIFT       = SAR_SAMPLE_TIME01_SAMPLE_TIME1_Pos,             /**< Shift fo
1013:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SAMPLE_TIME2_SHIFT       = SAR_SAMPLE_TIME23_SAMPLE_TIME2_Pos,             /**< Shift fo
1014:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SAMPLE_TIME3_SHIFT       = SAR_SAMPLE_TIME23_SAMPLE_TIME3_Pos,             /**< Shift fo
1015:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_sample_time_shift_t;
1016:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /* \} */
1017:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1018:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_range_thres_register_enums
1019:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of enumerations aids in configuring the SAR RANGE* registers
1020:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1021:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1022:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the lower and upper thresholds for range detection
1023:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1024:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SARSEQ supports range detection to allow for automatic detection of sample
1025:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * values compared to two programmable thresholds without CPU involvement.
1026:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Range detection is defined by two global thresholds and a condition.
1027:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The RANGE_LOW value defines the lower threshold and RANGE_HIGH defines
1028:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * the upper threshold of the range.
1029:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1030:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Range detect is done after averaging, alignment, and sign extension (if applicable).
1031:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * In other words, the thresholds values must have the same data format as the result data.
1032:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Range detection is always done for all channels scanned. By making RANGE_INTR_MASK=0,
1033:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * the firmware can choose to ignore the range detect interrupt for any channel.
1034:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1035:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1036:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1037:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RANGE_LOW_SHIFT      = SAR_RANGE_THRES_RANGE_LOW_Pos,        /**< Shift for setting lowe
1038:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RANGE_HIGH_SHIFT     = SAR_RANGE_THRES_RANGE_HIGH_Pos,       /**< Shift for setting uppe
1039:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_range_thres_shift_t;
1040:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1041:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the condition (below, inside, above, or outside) of the range detection interrupt */
1042:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1043:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1044:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RANGE_COND_BELOW     = 0uL,  /**< Range interrupt detected when result < RANGE_LOW */
1045:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RANGE_COND_INSIDE    = 1uL,  /**< Range interrupt detected when RANGE_LOW <= result < RA
1046:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RANGE_COND_ABOVE     = 2uL,  /**< Range interrupt detected when RANGE_HIGH <= result */
1047:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RANGE_COND_OUTSIDE   = 3uL,  /**< Range interrupt detected when result < RANGE_LOW || RA
1048:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_range_detect_condition_t;
1049:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /* \} */
1050:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1051:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_chan_config_register_enums
1052:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of enumerations aids in configuring the SAR CHAN_CONFIG register
1053:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1054:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1055:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the input mode of the channel
1056:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1057:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Single ended channel: the \ref cy_en_sar_ctrl_neg_sel_t selection in the \ref group_sar_init_st
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccKBcLBo.s 			page 20


1058:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   determines what drives the Vminus pin
1059:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Differential paired: Vplus and Vminus are a pair. Bit 0 of \ref cy_en_sar_chan_config_pos_pin_a
1060:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   is ignored and considered to be 0.
1061:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   In other words, \ref cy_en_sar_chan_config_pos_pin_addr_t "POS_PIN_ADDR" points to the even pin
1062:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   The even pin is connected to Vplus and the odd pin is connected to Vminus.
1063:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   \ref cy_en_sar_chan_config_pos_port_addr_t "POS_PORT_ADDR" is used to identify the port that co
1064:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Differential unpaired: The \ref cy_en_sar_chan_config_neg_pin_addr_t "NEG_PIN_ADDR" and
1065:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   \ref cy_en_sar_chan_config_neg_port_addr_t "NEG_PORT_ADDR" determine what drives the Vminus pin
1066:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   This is a variation of differential mode with no even-odd pair limitation
1067:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1068:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1069:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1070:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_SINGLE_ENDED            = 0uL,                                     /**< Single ende
1071:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_DIFFERENTIAL_PAIRED     = SAR_CHAN_CONFIG_DIFFERENTIAL_EN_Msk,     /**< Differentia
1072:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_DIFFERENTIAL_UNPAIRED   = SAR_CHAN_CONFIG_NEG_ADDR_EN_Msk          /**< Differentia
1073:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_chan_config_input_mode_t;
1074:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1075:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure address of the pin connected to the Vplus terminal of the SARADC. */
1076:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1077:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1078:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_0     = 0uL,                                            /**< Pin 0 on 
1079:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_1     = 1uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 1 on 
1080:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_2     = 2uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 2 on 
1081:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_3     = 3uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 3 on 
1082:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_4     = 4uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 4 on 
1083:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_5     = 5uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 5 on 
1084:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_6     = 6uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 6 on 
1085:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_7     = 7uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 7 on 
1086:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_chan_config_pos_pin_addr_t;
1087:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1088:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure address of the port that contains the pin connected to the Vplus terminal of the SARA
1089:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1090:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - \ref CY_SAR_POS_PORT_ADDR_SARMUX is for the dedicated SARMUX port (8 pins)
1091:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Port 1 through 4 are respectively the pins of CTB0, CTB1, CTB2, and CTB3 (if present)
1092:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Port 7, 5, and 6 (VPORT0/1/2) are the groups of internal signals that can be selected
1093:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   in the SARMUX or AROUTE (if present).
1094:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1095:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * See the \ref group_sar_sarmux section for more guidance.
1096:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1097:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1098:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1099:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_SARMUX         = 0uL,                                       /**< Dedicated
1100:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_CTB0           = 1uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< Outputs f
1101:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_CTB1           = 2uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< Outputs f
1102:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_CTB2           = 3uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< Outputs f
1103:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_CTB3           = 4uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< Outputs f
1104:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_AROUTE_VIRT2   = 5uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< AROUTE vi
1105:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_AROUTE_VIRT1   = 6uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< AROUTE vi
1106:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_SARMUX_VIRT    = 7uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< SARMUX vi
1107:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_chan_config_pos_port_addr_t;
1108:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1109:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Enable or disable averaging for the channel */
1110:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1111:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1112:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_AVG_DISABLE      = 0uL,                                 /**< Disable averaging for 
1113:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_AVG_ENABLE       = 1uL << SAR_CHAN_CONFIG_AVG_EN_Pos    /**< Enable averaging for t
1114:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_chan_config_avg_en_t;
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccKBcLBo.s 			page 21


1115:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1116:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Select which sample time to use for the channel.
1117:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * There are four global samples times available set by \ref group_sar_init_struct_sampleTime01 and
1118:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref group_sar_init_struct_sampleTime23.
1119:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1120:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1121:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1122:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_SAMPLE_TIME_0     = 0uL,                                          /**< Use sample t
1123:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_SAMPLE_TIME_1     = 1uL << SAR_CHAN_CONFIG_SAMPLE_TIME_SEL_Pos,   /**< Use sample t
1124:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_SAMPLE_TIME_2     = 2uL << SAR_CHAN_CONFIG_SAMPLE_TIME_SEL_Pos,   /**< Use sample t
1125:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_SAMPLE_TIME_3     = 3uL << SAR_CHAN_CONFIG_SAMPLE_TIME_SEL_Pos,   /**< Use sample t
1126:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_chan_config_sample_time_t;
1127:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1128:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure address of the pin connected to the Vminus terminal of the SARADC. */
1129:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1130:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1131:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_0     = 0uL,                                            /**< Pin 0 on 
1132:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_1     = 1uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 1 on 
1133:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_2     = 2uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 2 on 
1134:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_3     = 3uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 3 on 
1135:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_4     = 4uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 4 on 
1136:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_5     = 5uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 5 on 
1137:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_6     = 6uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 6 on 
1138:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_7     = 7uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 7 on 
1139:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_chan_config_neg_pin_addr_t;
1140:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1141:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure address of the port that contains the pin connected to the Vminus terminal of the SAR
1142:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1143:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Port 0 is 8 pins of the SARMUX
1144:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Port 7, 5, and 6 (VPORT0/1/2) are the groups of internal signals that can be selected
1145:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   in the SARMUX or AROUTE (if present).
1146:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1147:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1148:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1149:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_PORT_ADDR_SARMUX         = 0uL,                                       /**< Dedicated
1150:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_PORT_ADDR_AROUTE_VIRT2   = 5uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< AROUTE vi
1151:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_PORT_ADDR_AROUTE_VIRT1   = 6uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< AROUTE vi
1152:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_PORT_ADDR_SARMUX_VIRT    = 7uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< SARMUX vi
1153:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_chan_config_neg_port_addr_t;
1154:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1155:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /* \} */
1156:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1157:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_intr_mask_t_register_enums
1158:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of enumerations aids in configuring the SAR INTR_MASK register
1159:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1160:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1161:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure which signal will cause an interrupt event.
1162:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1163:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - End of scan (EOS): occurs after completing a scan of all enabled channels
1164:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Overflow: occurs when hardware sets a new EOS interrupt while the previous interrupt
1165:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   has not be cleared by the firmware
1166:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Firmware collision: occurs when firmware attempts to start one-shot
1167:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   conversion while the SAR is busy.
1168:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1169:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Enable all, one, or none of the interrupt events.
1170:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1171:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccKBcLBo.s 			page 22


1172:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1173:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_INTR_MASK_NONE           = 0uL,                                  /**< Disable all interr
1174:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_INTR_EOS_MASK            = SAR_INTR_MASK_EOS_MASK_Msk,           /**< Enable end of scan
1175:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_INTR_OVERFLOW_MASK       = SAR_INTR_MASK_OVERFLOW_MASK_Msk,      /**< Enable overflow in
1176:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_INTR_FW_COLLISION_MASK   = SAR_INTR_MASK_FW_COLLISION_MASK_Msk,  /**< Enable firmware co
1177:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_intr_mask_t;
1178:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1179:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /* \} */
1180:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1181:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_mux_switch_register_enums
1182:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of enumerations aids in configuring the \ref group_sar_init_struct_muxSwitch and \ref gr
1183:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1184:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1185:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1186:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Firmware control for the SARMUX switches to connect analog signals to the SAR ADC
1187:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1188:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * To close multiple switches, "OR" the enum values together.
1189:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1190:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * See the \ref group_sar_sarmux section for more guidance.
1191:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1192:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1193:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1194:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     /* SARMUX pins to Vplus */
1195:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P0_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P0_VPLUS_Msk,    /**< Switch between Pi
1196:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P1_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P1_VPLUS_Msk,    /**< Switch between Pi
1197:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P2_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P2_VPLUS_Msk,    /**< Switch between Pi
1198:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P3_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P3_VPLUS_Msk,    /**< Switch between Pi
1199:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P4_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P4_VPLUS_Msk,    /**< Switch between Pi
1200:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P5_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P5_VPLUS_Msk,    /**< Switch between Pi
1201:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P6_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P6_VPLUS_Msk,    /**< Switch between Pi
1202:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P7_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P7_VPLUS_Msk,    /**< Switch between Pi
1203:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1204:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     /* SARMUX pins to Vminus */
1205:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P0_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P0_VMINUS_Msk,   /**< Switch between Pi
1206:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P1_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P1_VMINUS_Msk,   /**< Switch between Pi
1207:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P2_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P2_VMINUS_Msk,   /**< Switch between Pi
1208:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P3_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P3_VMINUS_Msk,   /**< Switch between Pi
1209:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P4_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P4_VMINUS_Msk,   /**< Switch between Pi
1210:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P5_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P5_VMINUS_Msk,   /**< Switch between Pi
1211:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P6_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P6_VMINUS_Msk,   /**< Switch between Pi
1212:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P7_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P7_VMINUS_Msk,   /**< Switch between Pi
1213:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1214:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     /* Vssa to Vminus and temperature sensor to Vplus */
1215:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_VSSA_VMINUS      = SAR_MUX_SWITCH0_MUX_FW_VSSA_VMINUS_Msk,    /**< Switch between
1216:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_TEMP_VPLUS       = SAR_MUX_SWITCH0_MUX_FW_TEMP_VPLUS_Msk,     /**< Switch between
1217:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1218:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     /* Amuxbus A and B to Vplus and Vminus */
1219:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_AMUXBUSA_VPLUS   = SAR_MUX_SWITCH0_MUX_FW_AMUXBUSA_VPLUS_Msk,     /**< Switch bet
1220:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_AMUXBUSB_VPLUS   = SAR_MUX_SWITCH0_MUX_FW_AMUXBUSB_VPLUS_Msk,     /**< Switch bet
1221:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_AMUXBUSA_VMINUS  = SAR_MUX_SWITCH0_MUX_FW_AMUXBUSA_VMINUS_Msk,    /**< Switch bet
1222:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_AMUXBUSB_VMINUS  = SAR_MUX_SWITCH0_MUX_FW_AMUXBUSB_VMINUS_Msk,    /**< Switch bet
1223:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1224:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     /* Sarbus 0 and 1 to Vplus and Vminus */
1225:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_SARBUS0_VPLUS    = SAR_MUX_SWITCH0_MUX_FW_SARBUS0_VPLUS_Msk,      /**< Switch bet
1226:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_SARBUS1_VPLUS    = SAR_MUX_SWITCH0_MUX_FW_SARBUS1_VPLUS_Msk,      /**< Switch bet
1227:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_SARBUS0_VMINUS   = SAR_MUX_SWITCH0_MUX_FW_SARBUS0_VMINUS_Msk,     /**< Switch bet
1228:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_SARBUS1_VMINUS   = SAR_MUX_SWITCH0_MUX_FW_SARBUS1_VMINUS_Msk,     /**< Switch bet
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccKBcLBo.s 			page 23


1229:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1230:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     /* SARMUX pins to Core IO */
1231:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P4_COREIO0       = SAR_MUX_SWITCH0_MUX_FW_P4_COREIO0_Msk,      /**< Switch betwee
1232:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P5_COREIO1       = SAR_MUX_SWITCH0_MUX_FW_P5_COREIO1_Msk,      /**< Switch betwee
1233:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P6_COREIO2       = SAR_MUX_SWITCH0_MUX_FW_P6_COREIO2_Msk,      /**< Switch betwee
1234:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P7_COREIO3       = SAR_MUX_SWITCH0_MUX_FW_P7_COREIO3_Msk,      /**< Switch betwee
1235:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_mux_switch_fw_ctrl_t;
1236:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1237:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Mask definitions of SARMUX switches that can be controlled by the SARSEQ.
1238:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1239:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * To enable sequencer control of multiple switches, "OR" the enum values together.
1240:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1241:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * See the \ref group_sar_sarmux section for more guidance.
1242:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1243:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1244:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1245:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P0           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P0_Msk,        /**< Enable
1246:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P1           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P1_Msk,        /**< Enable
1247:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P2           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P2_Msk,        /**< Enable
1248:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P3           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P3_Msk,        /**< Enable
1249:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P4           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P4_Msk,        /**< Enable
1250:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P5           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P5_Msk,        /**< Enable
1251:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P6           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P6_Msk,        /**< Enable
1252:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P7           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P7_Msk,        /**< Enable
1253:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_VSSA         = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_VSSA_Msk,      /**< Enable
1254:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_TEMP         = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_TEMP_Msk,      /**< Enable
1255:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_AMUXBUSA     = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_AMUXBUSA_Msk,  /**< Enable
1256:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_AMUXBUSB     = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_AMUXBUSB_Msk,  /**< Enable
1257:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_SARBUS0      = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_SARBUS0_Msk,   /**< Enable
1258:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_SARBUS1      = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_SARBUS1_Msk,   /**< Enable
1259:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_mux_switch_sq_ctrl_t;
1260:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1261:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /* \} */
1262:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1263:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} group_sar_enums */
1264:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1265:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_data_structures
1266:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1267:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1268:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1269:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /***************************************
1270:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       Configuration Structures
1271:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ***************************************/
1272:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1273:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** This structure is used to initialize the SAR ADC subsystem.
1274:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1275:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SAR ADC subsystem is highly configurable with many options.
1276:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * When calling \ref Cy_SAR_Init, provide a pointer to the structure containing this configuration d
1277:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * A set of enumerations is provided in this
1278:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * driver to help with configuring this structure.
1279:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1280:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * See the \ref group_sar_initialization section for guidance.
1281:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** **/
1282:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef struct
1283:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1284:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t ctrl;                                      /**< Control register settings (applies to 
1285:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t sampleCtrl;                                /**< Sample control register settings (appl
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccKBcLBo.s 			page 24


1286:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t sampleTime01;                              /**< Sample time in ADC clocks for Sample T
1287:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t sampleTime23;                              /**< Sample time in ADC clocks for Sample T
1288:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t rangeThres;                                /**< Range detect threshold register for al
1289:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     cy_en_sar_range_detect_condition_t rangeCond;       /**< Range detect condition (below, inside,
1290:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t chanEn;                                    /**< Enable bits for the channels */
1291:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t chanConfig[CY_SAR_MAX_NUM_CHANNELS];       /**< Channel configuration */
1292:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t intrMask;                                  /**< Interrupt enable mask */
1293:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t satIntrMask;                               /**< Saturation detection interrupt enable 
1294:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t rangeIntrMask;                             /**< Range detection interrupt enable mask 
1295:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t muxSwitch;                                 /**< SARMUX firmware switches to connect an
1296:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t muxSwitchSqCtrl;                           /**< Enable SARSEQ control of specific SARM
1297:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     bool configRouting;                                 /**< Configure or ignore routing related re
1298:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t vrefMvValue;                               /**< Reference voltage in millivolts used i
1299:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** } cy_stc_sar_config_t;
1300:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1301:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** This structure is used by the driver to backup the state of the SAR
1302:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * before entering sleep so that it can be re-enabled after waking up */
1303:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef struct
1304:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1305:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t hwEnabled;         /**< SAR enabled state */
1306:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t continuous;        /**< State of the continuous bit */
1307:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** } cy_stc_sar_state_backup_t;
1308:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1309:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} group_sar_data_structures */
1310:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1311:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions
1312:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1313:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1314:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1315:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** This macro is for backward compatibility macro for driver v1.10 and before, 
1316:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****  * the preferred API is \ref Cy_SAR_DeepSleep */
1317:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define Cy_SAR_Sleep    Cy_SAR_DeepSleep
1318:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1319:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /***************************************
1320:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *        Function Prototypes
1321:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ***************************************/
1322:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1323:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_basic
1324:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of functions is for initialization and basic usage
1325:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1326:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1327:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** cy_en_sar_status_t Cy_SAR_Init(SAR_Type *base, const cy_stc_sar_config_t *config);
1328:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** cy_en_sar_status_t Cy_SAR_DeInit(SAR_Type *base, bool deInitRouting);
1329:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_Enable(SAR_Type *base);
1330:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_Disable(SAR_Type *base);
1331:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_StartConvert(SAR_Type *base, cy_en_sar_start_convert_sel_t startSelect);
1332:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_StopConvert(SAR_Type *base);
1333:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** cy_en_sar_status_t Cy_SAR_IsEndConversion(SAR_Type *base, cy_en_sar_return_mode_t retMode);
1334:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** int16_t Cy_SAR_GetResult16(const SAR_Type *base, uint32_t chan);
1335:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** int32_t Cy_SAR_GetResult32(const SAR_Type *base, uint32_t chan);
1336:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetChanResultUpdated(const SAR_Type *base);
1337:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1338:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1339:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_power
1340:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of functions is for Deep Sleep entry and exit
1341:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1342:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccKBcLBo.s 			page 25


1343:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** cy_en_syspm_status_t Cy_SAR_DeepSleepCallback(cy_stc_syspm_callback_params_t *callbackParams, cy_en
1344:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_DeepSleep(SAR_Type *base);
1345:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_Wakeup(SAR_Type *base);
1346:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1347:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1348:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_config
1349:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of functions allows changes to the SAR configuration
1350:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * after initialization.
1351:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1352:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1353:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_SetConvertMode(SAR_Type *base, cy_en_sar_sample_ctrl_trigger_mode_t mode);
1354:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetChanMask(SAR_Type *base, uint32_t enableMask);
1355:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_SetLowLimit(SAR_Type *base, uint32_t lowLimit);
1356:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_SetHighLimit(SAR_Type *base, uint32_t highLimit);
1357:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetRangeCond(SAR_Type *base, cy_en_sar_range_detect_condition_t cond);
1358:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1359:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1360:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_countsto
1361:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of functions performs counts to *volts conversions.
1362:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1363:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1364:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** int16_t Cy_SAR_RawCounts2Counts(const SAR_Type *base, uint32_t chan, int16_t adcCounts);
1365:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** float32_t Cy_SAR_CountsTo_Volts(const SAR_Type *base, uint32_t chan, int16_t adcCounts);
1366:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** int16_t Cy_SAR_CountsTo_mVolts(const SAR_Type *base, uint32_t chan, int16_t adcCounts);
1367:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** int32_t Cy_SAR_CountsTo_uVolts(const SAR_Type *base, uint32_t chan, int16_t adcCounts);
1368:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** cy_en_sar_status_t Cy_SAR_SetOffset(uint32_t chan, int16_t offset);
1369:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** cy_en_sar_status_t Cy_SAR_SetGain(uint32_t chan, int32_t adcGain);
1370:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1371:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1372:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_switches
1373:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of functions is for controlling/querying the SARMUX switches
1374:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1375:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1376:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_SetAnalogSwitch(SAR_Type *base, cy_en_sar_switch_register_sel_t switchSelect, uint32_t 
1377:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** uint32_t Cy_SAR_GetAnalogSwitch(const SAR_Type *base, cy_en_sar_switch_register_sel_t switchSelect)
1378:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetVssaVminusSwitch(SAR_Type *base, cy_en_sar_switch_state_t state);
1379:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_SetSwitchSarSeqCtrl(SAR_Type *base, uint32_t switchMask, cy_en_sar_switch_sar_seq_ctrl_
1380:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetVssaSarSeqCtrl(SAR_Type *base, cy_en_sar_switch_sar_seq_ctrl_t ctrl)
1381:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1382:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1383:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_interrupt
1384:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of functions are related to SAR interrupts.
1385:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1386:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1387:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetInterruptStatus(const SAR_Type *base);
1388:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_ClearInterrupt(SAR_Type *base, uint32_t intrMask);
1389:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetInterrupt(SAR_Type *base, uint32_t intrMask);
1390:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetInterruptMask(SAR_Type *base, uint32_t intrMask);
1391:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetInterruptMask(const SAR_Type *base);
1392:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetInterruptStatusMasked(const SAR_Type *base);
1393:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1394:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetRangeInterruptStatus(const SAR_Type *base);
1395:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_ClearRangeInterrupt(SAR_Type *base, uint32_t chanMask);
1396:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetRangeInterrupt(SAR_Type *base, uint32_t chanMask);
1397:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetRangeInterruptMask(SAR_Type *base, uint32_t chanMask);
1398:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetRangeInterruptMask(const SAR_Type *base);
1399:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetRangeInterruptStatusMasked(const SAR_Type *base);
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccKBcLBo.s 			page 26


1400:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1401:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetSatInterruptStatus(const SAR_Type *base);
1402:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_ClearSatInterrupt(SAR_Type *base, uint32_t chanMask);
1403:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetSatInterrupt(SAR_Type *base, uint32_t chanMask);
1404:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetSatInterruptMask(SAR_Type *base, uint32_t chanMask);
1405:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetSatInterruptMask(const SAR_Type *base);
1406:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetSatInterruptStatusMasked(const SAR_Type *base);
1407:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1408:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetInterruptCause(const SAR_Type *base);
1409:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1410:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1411:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1412:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_helper
1413:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of functions is for useful configuration query
1414:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1415:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1416:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** bool Cy_SAR_IsChannelSigned(const SAR_Type *base, uint32_t chan);
1417:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** bool Cy_SAR_IsChannelSingleEnded(const SAR_Type *base, uint32_t chan);
1418:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE bool Cy_SAR_IsChannelDifferential(const SAR_Type *base, uint32_t chan);
1419:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1420:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1421:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_basic
1422:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1423:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1424:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1425:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1426:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1427:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_Disable
1428:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1429:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1430:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Turn off the hardware block.
1431:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1432:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1433:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1434:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1435:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return None
1436:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1437:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
1438:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_Disable(SAR_Type *base)
1439:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1440:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     SAR_CTRL(base) &= ~SAR_CTRL_ENABLED_Msk;
1441:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
1442:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1443:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1444:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1445:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_GetChanResultUpdated
1446:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1447:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1448:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Return whether the RESULT register has been updated or not.
1449:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * If the bit is high, the corresponding channel RESULT register was updated,
1450:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * i.e. was sampled during the previous scan and, in case of Interleaved averaging,
1451:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * reached the averaging count.
1452:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * If the bit is low, the corresponding channel is not enabled or the averaging count
1453:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * is not yet reached for Interleaved averaging.
1454:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1455:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1456:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccKBcLBo.s 			page 27


1457:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1458:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return
1459:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Each bit of the result corresponds to the channel.
1460:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Bit 0 is for channel 0, etc.
1461:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1462:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \funcusage
1463:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1464:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_GET_CHAN_RESULT_UPDATED
1465:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1466:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
1467:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetChanResultUpdated(const SAR_Type *base)
1468:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1469:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     return SAR_CHAN_RESULT_UPDATED(base);
1470:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
1471:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1472:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1473:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_config
1474:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1475:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1476:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1477:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1478:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1479:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_SetChanMask
1480:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1481:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1482:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Set the enable/disable mask for the channels.
1483:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1484:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1485:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1486:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1487:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param enableMask
1488:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Channel enable/disable mask. Each bit corresponds to a channel.
1489:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - 0: the corresponding channel is disabled.
1490:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - 1: the corresponding channel is enabled; it will be included in the next scan.
1491:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1492:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return None
1493:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1494:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \funcusage
1495:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1496:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SET_CHAN_MASK
1497:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1498:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
1499:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetChanMask(SAR_Type *base, uint32_t enableMask)
1500:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1501:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_ASSERT_L2(CY_SAR_CHANMASK(enableMask));
1502:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1503:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     SAR_CHAN_EN(base) = enableMask;
1504:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
1505:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1506:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1507:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1508:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_SetRangeCond
1509:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1510:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1511:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Set the condition in which range detection interrupts are triggered.
1512:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1513:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccKBcLBo.s 			page 28


1514:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1515:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1516:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param cond
1517:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * A value of the enum \ref cy_en_sar_range_detect_condition_t.
1518:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1519:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return None
1520:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1521:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \funcusage
1522:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1523:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SET_RANGE_COND
1524:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1525:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
1526:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetRangeCond(SAR_Type *base, cy_en_sar_range_detect_condition_t cond)
1527:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1528:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_ASSERT_L3(CY_SAR_RANGECOND(cond));
1529:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1530:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     SAR_RANGE_COND(base) = (uint32_t)cond << SAR_RANGE_COND_RANGE_COND_Pos;
1531:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
1532:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1533:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1534:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1535:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_interrupt
1536:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1537:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1538:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1539:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_GetInterruptStatus
1540:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1541:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1542:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Return the interrupt register status.
1543:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1544:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1545:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1546:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1547:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return Interrupt status
1548:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1549:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \funcusage
1550:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1551:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_ISR
1552:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1553:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
1554:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetInterruptStatus(const SAR_Type *base)
1555:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
  27              		.loc 1 1555 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 8
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31 0000 80B5     		push	{r7, lr}
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 7, -8
  34              		.cfi_offset 14, -4
  35 0002 82B0     		sub	sp, sp, #8
  36              		.cfi_def_cfa_offset 16
  37 0004 00AF     		add	r7, sp, #0
  38              		.cfi_def_cfa_register 7
  39 0006 7860     		str	r0, [r7, #4]
1556:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     return SAR_INTR(base);
  40              		.loc 1 1556 0
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccKBcLBo.s 			page 29


  41 0008 7A68     		ldr	r2, [r7, #4]
  42 000a 8423     		movs	r3, #132
  43 000c 9B00     		lsls	r3, r3, #2
  44 000e D358     		ldr	r3, [r2, r3]
1557:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
  45              		.loc 1 1557 0
  46 0010 1800     		movs	r0, r3
  47 0012 BD46     		mov	sp, r7
  48 0014 02B0     		add	sp, sp, #8
  49              		@ sp needed
  50 0016 80BD     		pop	{r7, pc}
  51              		.cfi_endproc
  52              	.LFE83:
  53              		.size	Cy_SAR_GetInterruptStatus, .-Cy_SAR_GetInterruptStatus
  54              		.section	.rodata
  55              		.align	2
  56              	.LC0:
  57 0000 47656E65 		.ascii	"Generated_Source\\PSoC6\\pdl\\drivers/peripheral/sa"
  57      72617465 
  57      645F536F 
  57      75726365 
  57      5C50536F 
  58 0030 722F6379 		.ascii	"r/cy_sar.h\000"
  58      5F736172 
  58      2E6800
  59              		.section	.text.Cy_SAR_ClearInterrupt,"ax",%progbits
  60              		.align	2
  61              		.code	16
  62              		.thumb_func
  63              		.type	Cy_SAR_ClearInterrupt, %function
  64              	Cy_SAR_ClearInterrupt:
  65              	.LFB84:
1558:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1559:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1560:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1561:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_ClearInterrupt
1562:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1563:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1564:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Clear the interrupt.
1565:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The interrupt must be cleared with this function so that the hardware
1566:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * can set subsequent interrupts and those interrupts can be forwarded
1567:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * to the interrupt controller, if enabled.
1568:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1569:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1570:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1571:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1572:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param intrMask
1573:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The mask of interrupts to clear. Typically this will be the value returned
1574:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * from \ref Cy_SAR_GetInterruptStatus.
1575:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Alternately, select one or more values from \ref cy_en_sar_intr_mask_t and "OR" them together.
1576:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - \ref CY_SAR_INTR_EOS_MASK
1577:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - \ref CY_SAR_INTR_OVERFLOW_MASK
1578:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - \ref CY_SAR_INTR_FW_COLLISION_MASK
1579:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1580:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return None
1581:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1582:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccKBcLBo.s 			page 30


1583:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_ClearInterrupt(SAR_Type *base, uint32_t intrMask)
1584:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
  66              		.loc 1 1584 0
  67              		.cfi_startproc
  68              		@ args = 0, pretend = 0, frame = 8
  69              		@ frame_needed = 1, uses_anonymous_args = 0
  70 0000 80B5     		push	{r7, lr}
  71              		.cfi_def_cfa_offset 8
  72              		.cfi_offset 7, -8
  73              		.cfi_offset 14, -4
  74 0002 82B0     		sub	sp, sp, #8
  75              		.cfi_def_cfa_offset 16
  76 0004 00AF     		add	r7, sp, #0
  77              		.cfi_def_cfa_register 7
  78 0006 7860     		str	r0, [r7, #4]
  79 0008 3960     		str	r1, [r7]
1585:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_ASSERT_L2(CY_SAR_INTRMASK(intrMask));
  80              		.loc 1 1585 0
  81 000a 3B68     		ldr	r3, [r7]
  82 000c 072B     		cmp	r3, #7
  83 000e 05D9     		bls	.L4
  84              		.loc 1 1585 0 is_stmt 0 discriminator 1
  85 0010 094A     		ldr	r2, .L5
  86 0012 0A4B     		ldr	r3, .L5+4
  87 0014 1100     		movs	r1, r2
  88 0016 1800     		movs	r0, r3
  89 0018 FFF7FEFF 		bl	Cy_SysLib_AssertFailed
  90              	.L4:
1586:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1587:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     SAR_INTR(base) = intrMask;
  91              		.loc 1 1587 0 is_stmt 1
  92 001c 7A68     		ldr	r2, [r7, #4]
  93 001e 8423     		movs	r3, #132
  94 0020 9B00     		lsls	r3, r3, #2
  95 0022 3968     		ldr	r1, [r7]
  96 0024 D150     		str	r1, [r2, r3]
1588:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1589:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     /* Dummy read for buffered writes. */
1590:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     (void) SAR_INTR(base);
  97              		.loc 1 1590 0
  98 0026 7A68     		ldr	r2, [r7, #4]
  99 0028 8423     		movs	r3, #132
 100 002a 9B00     		lsls	r3, r3, #2
 101 002c D358     		ldr	r3, [r2, r3]
1591:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
 102              		.loc 1 1591 0
 103 002e C046     		nop
 104 0030 BD46     		mov	sp, r7
 105 0032 02B0     		add	sp, sp, #8
 106              		@ sp needed
 107 0034 80BD     		pop	{r7, pc}
 108              	.L6:
 109 0036 C046     		.align	2
 110              	.L5:
 111 0038 31060000 		.word	1585
 112 003c 00000000 		.word	.LC0
 113              		.cfi_endproc
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccKBcLBo.s 			page 31


 114              	.LFE84:
 115              		.size	Cy_SAR_ClearInterrupt, .-Cy_SAR_ClearInterrupt
 116              		.section	.text.ADC_1_ISR,"ax",%progbits
 117              		.align	2
 118              		.global	ADC_1_ISR
 119              		.code	16
 120              		.thumb_func
 121              		.type	ADC_1_ISR, %function
 122              	ADC_1_ISR:
 123              	.LFB184:
 124              		.file 2 "Generated_Source\\PSoC6\\ADC_1_INT.c"
   1:Generated_Source\PSoC6/ADC_1_INT.c **** /***************************************************************************//**
   2:Generated_Source\PSoC6/ADC_1_INT.c **** * \file     ADC_1_INT.c
   3:Generated_Source\PSoC6/ADC_1_INT.c **** * \version  3.10
   4:Generated_Source\PSoC6/ADC_1_INT.c **** *
   5:Generated_Source\PSoC6/ADC_1_INT.c **** * \brief
   6:Generated_Source\PSoC6/ADC_1_INT.c **** * Provides the initialization data structure for the ADC_1 Component.
   7:Generated_Source\PSoC6/ADC_1_INT.c **** *
   8:Generated_Source\PSoC6/ADC_1_INT.c **** ********************************************************************************
   9:Generated_Source\PSoC6/ADC_1_INT.c **** * \copyright
  10:Generated_Source\PSoC6/ADC_1_INT.c **** * (c) 2017-2018, Cypress Semiconductor Corporation. All rights reserved.
  11:Generated_Source\PSoC6/ADC_1_INT.c **** * This software, including source code, documentation and related
  12:Generated_Source\PSoC6/ADC_1_INT.c **** * materials ("Software"), is owned by Cypress Semiconductor
  13:Generated_Source\PSoC6/ADC_1_INT.c **** * Corporation ("Cypress") and is protected by and subject to worldwide
  14:Generated_Source\PSoC6/ADC_1_INT.c **** * patent protection (United States and foreign), United States copyright
  15:Generated_Source\PSoC6/ADC_1_INT.c **** * laws and international treaty provisions. Therefore, you may use this
  16:Generated_Source\PSoC6/ADC_1_INT.c **** * Software only as provided in the license agreement accompanying the
  17:Generated_Source\PSoC6/ADC_1_INT.c **** * software package from which you obtained this Software ("EULA").
  18:Generated_Source\PSoC6/ADC_1_INT.c **** * If no EULA applies, Cypress hereby grants you a personal, nonexclusive,
  19:Generated_Source\PSoC6/ADC_1_INT.c **** * non-transferable license to copy, modify, and compile the
  20:Generated_Source\PSoC6/ADC_1_INT.c **** * Software source code solely for use in connection with Cypress's
  21:Generated_Source\PSoC6/ADC_1_INT.c **** * integrated circuit products. Any reproduction, modification, translation,
  22:Generated_Source\PSoC6/ADC_1_INT.c **** * compilation, or representation of this Software except as specified
  23:Generated_Source\PSoC6/ADC_1_INT.c **** * above is prohibited without the express written permission of Cypress.
  24:Generated_Source\PSoC6/ADC_1_INT.c **** * Disclaimer: THIS SOFTWARE IS PROVIDED AS-IS, WITH NO
  25:Generated_Source\PSoC6/ADC_1_INT.c **** * WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING,
  26:Generated_Source\PSoC6/ADC_1_INT.c **** * BUT NOT LIMITED TO, NONINFRINGEMENT, IMPLIED
  27:Generated_Source\PSoC6/ADC_1_INT.c **** * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
  28:Generated_Source\PSoC6/ADC_1_INT.c **** * PARTICULAR PURPOSE. Cypress reserves the right to make
  29:Generated_Source\PSoC6/ADC_1_INT.c **** * changes to the Software without notice. Cypress does not assume any
  30:Generated_Source\PSoC6/ADC_1_INT.c **** * liability arising out of the application or use of the Software or any
  31:Generated_Source\PSoC6/ADC_1_INT.c **** * product or circuit described in the Software. Cypress does not
  32:Generated_Source\PSoC6/ADC_1_INT.c **** * authorize its products for use in any products where a malfunction or
  33:Generated_Source\PSoC6/ADC_1_INT.c **** * failure of the Cypress product may reasonably be expected to result in
  34:Generated_Source\PSoC6/ADC_1_INT.c **** * significant property damage, injury or death ("High Risk Product"). By
  35:Generated_Source\PSoC6/ADC_1_INT.c **** * including Cypress's product in a High Risk Product, the manufacturer
  36:Generated_Source\PSoC6/ADC_1_INT.c **** * of such system or application assumes all risk of such use and in doing
  37:Generated_Source\PSoC6/ADC_1_INT.c **** * so agrees to indemnify Cypress against all liability.
  38:Generated_Source\PSoC6/ADC_1_INT.c **** *******************************************************************************/
  39:Generated_Source\PSoC6/ADC_1_INT.c **** #include "ADC_1.h"
  40:Generated_Source\PSoC6/ADC_1_INT.c **** #include "cyapicallbacks.h"
  41:Generated_Source\PSoC6/ADC_1_INT.c **** 
  42:Generated_Source\PSoC6/ADC_1_INT.c **** /******************************************************************************
  43:Generated_Source\PSoC6/ADC_1_INT.c **** * Custom Declarations and Variables
  44:Generated_Source\PSoC6/ADC_1_INT.c **** * - add user include files, prototypes and variables between the following
  45:Generated_Source\PSoC6/ADC_1_INT.c **** *   #START and #END tags
  46:Generated_Source\PSoC6/ADC_1_INT.c **** ******************************************************************************/
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccKBcLBo.s 			page 32


  47:Generated_Source\PSoC6/ADC_1_INT.c **** /* `#START ADC_1_SYS_VAR`  */
  48:Generated_Source\PSoC6/ADC_1_INT.c **** 
  49:Generated_Source\PSoC6/ADC_1_INT.c **** /* `#END`  */
  50:Generated_Source\PSoC6/ADC_1_INT.c **** 
  51:Generated_Source\PSoC6/ADC_1_INT.c **** /******************************************************************************
  52:Generated_Source\PSoC6/ADC_1_INT.c **** * Function Name: ADC_1_ISR
  53:Generated_Source\PSoC6/ADC_1_INT.c **** *******************************************************************************
  54:Generated_Source\PSoC6/ADC_1_INT.c **** *
  55:Generated_Source\PSoC6/ADC_1_INT.c **** * \brief Handle Interrupt Service Routine.
  56:Generated_Source\PSoC6/ADC_1_INT.c **** *
  57:Generated_Source\PSoC6/ADC_1_INT.c **** * \param None
  58:Generated_Source\PSoC6/ADC_1_INT.c **** *
  59:Generated_Source\PSoC6/ADC_1_INT.c **** * \return None
  60:Generated_Source\PSoC6/ADC_1_INT.c **** *
  61:Generated_Source\PSoC6/ADC_1_INT.c **** * \sideeffect None
  62:Generated_Source\PSoC6/ADC_1_INT.c **** *
  63:Generated_Source\PSoC6/ADC_1_INT.c **** ******************************************************************************/
  64:Generated_Source\PSoC6/ADC_1_INT.c **** void ADC_1_ISR(void)
  65:Generated_Source\PSoC6/ADC_1_INT.c **** {
 125              		.loc 2 65 0
 126              		.cfi_startproc
 127              		@ args = 0, pretend = 0, frame = 8
 128              		@ frame_needed = 1, uses_anonymous_args = 0
 129 0000 80B5     		push	{r7, lr}
 130              		.cfi_def_cfa_offset 8
 131              		.cfi_offset 7, -8
 132              		.cfi_offset 14, -4
 133 0002 82B0     		sub	sp, sp, #8
 134              		.cfi_def_cfa_offset 16
 135 0004 00AF     		add	r7, sp, #0
 136              		.cfi_def_cfa_register 7
  66:Generated_Source\PSoC6/ADC_1_INT.c ****     uint32_t intr_status;
  67:Generated_Source\PSoC6/ADC_1_INT.c **** 
  68:Generated_Source\PSoC6/ADC_1_INT.c ****     /* Read interrupt status register */
  69:Generated_Source\PSoC6/ADC_1_INT.c ****     intr_status = Cy_SAR_GetInterruptStatus(ADC_1_SAR__HW);
 137              		.loc 2 69 0
 138 0006 0A4B     		ldr	r3, .L8
 139 0008 1800     		movs	r0, r3
 140 000a FFF7FEFF 		bl	Cy_SAR_GetInterruptStatus
 141 000e 0300     		movs	r3, r0
 142 0010 7B60     		str	r3, [r7, #4]
  70:Generated_Source\PSoC6/ADC_1_INT.c **** 
  71:Generated_Source\PSoC6/ADC_1_INT.c ****     /* ISR Macro Callback */
  72:Generated_Source\PSoC6/ADC_1_INT.c ****     #ifdef ADC_1_ISR_CALLBACK
  73:Generated_Source\PSoC6/ADC_1_INT.c ****         ADC_1_ISR_Callback();
  74:Generated_Source\PSoC6/ADC_1_INT.c ****     #endif
  75:Generated_Source\PSoC6/ADC_1_INT.c **** 
  76:Generated_Source\PSoC6/ADC_1_INT.c ****     /************************************************************************
  77:Generated_Source\PSoC6/ADC_1_INT.c ****     *  Custom Code
  78:Generated_Source\PSoC6/ADC_1_INT.c ****     *  - add user ISR code between the following #START and #END tags
  79:Generated_Source\PSoC6/ADC_1_INT.c ****     *************************************************************************/
  80:Generated_Source\PSoC6/ADC_1_INT.c ****     /* `#START MAIN_ADC_1_ISR`  */
  81:Generated_Source\PSoC6/ADC_1_INT.c **** 
  82:Generated_Source\PSoC6/ADC_1_INT.c ****     /* `#END`  */
  83:Generated_Source\PSoC6/ADC_1_INT.c **** 
  84:Generated_Source\PSoC6/ADC_1_INT.c ****     /* Clear handled interrupt */
  85:Generated_Source\PSoC6/ADC_1_INT.c ****     Cy_SAR_ClearInterrupt(ADC_1_SAR__HW, intr_status);
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccKBcLBo.s 			page 33


 143              		.loc 2 85 0
 144 0012 7B68     		ldr	r3, [r7, #4]
 145 0014 064A     		ldr	r2, .L8
 146 0016 1900     		movs	r1, r3
 147 0018 1000     		movs	r0, r2
 148 001a FFF7FEFF 		bl	Cy_SAR_ClearInterrupt
  86:Generated_Source\PSoC6/ADC_1_INT.c ****     /* Read interrupt status register to ensure write completed due to buffered writes */
  87:Generated_Source\PSoC6/ADC_1_INT.c ****     (void)Cy_SAR_GetInterruptStatus(ADC_1_SAR__HW);
 149              		.loc 2 87 0
 150 001e 044B     		ldr	r3, .L8
 151 0020 1800     		movs	r0, r3
 152 0022 FFF7FEFF 		bl	Cy_SAR_GetInterruptStatus
  88:Generated_Source\PSoC6/ADC_1_INT.c **** }
 153              		.loc 2 88 0
 154 0026 C046     		nop
 155 0028 BD46     		mov	sp, r7
 156 002a 02B0     		add	sp, sp, #8
 157              		@ sp needed
 158 002c 80BD     		pop	{r7, pc}
 159              	.L9:
 160 002e C046     		.align	2
 161              	.L8:
 162 0030 00001D41 		.word	1092419584
 163              		.cfi_endproc
 164              	.LFE184:
 165              		.size	ADC_1_ISR, .-ADC_1_ISR
 166              		.text
 167              	.Letext0:
 168              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 169              		.file 4 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 170              		.file 5 "Generated_Source\\PSoC6\\pdl\\devices/psoc6/include/ip/cyip_sar.h"
 171              		.file 6 "Generated_Source\\PSoC6\\pdl\\devices/psoc6/include/psoc6_01_config.h"
 172              		.file 7 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/device/cy_device.h"
 173              		.file 8 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/syslib/cy_syslib.h"
 174              		.file 9 "Generated_Source\\PSoC6\\ADC_1.h"
 175              		.section	.debug_info,"",%progbits
 176              	.Ldebug_info0:
 177 0000 3B0B0000 		.4byte	0xb3b
 178 0004 0400     		.2byte	0x4
 179 0006 00000000 		.4byte	.Ldebug_abbrev0
 180 000a 04       		.byte	0x4
 181 000b 01       		.uleb128 0x1
 182 000c 57050000 		.4byte	.LASF198
 183 0010 0C       		.byte	0xc
 184 0011 FB080000 		.4byte	.LASF199
 185 0015 200B0000 		.4byte	.LASF200
 186 0019 00000000 		.4byte	.Ldebug_ranges0+0
 187 001d 00000000 		.4byte	0
 188 0021 00000000 		.4byte	.Ldebug_line0
 189 0025 02       		.uleb128 0x2
 190 0026 02       		.byte	0x2
 191 0027 05       		.byte	0x5
 192 0028 C9080000 		.4byte	.LASF0
 193 002c 02       		.uleb128 0x2
 194 002d 01       		.byte	0x1
 195 002e 08       		.byte	0x8
 196 002f 8D080000 		.4byte	.LASF1
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccKBcLBo.s 			page 34


 197 0033 02       		.uleb128 0x2
 198 0034 01       		.byte	0x1
 199 0035 06       		.byte	0x6
 200 0036 E8010000 		.4byte	.LASF2
 201 003a 03       		.uleb128 0x3
 202 003b BC000000 		.4byte	.LASF3
 203 003f 03       		.byte	0x3
 204 0040 1D       		.byte	0x1d
 205 0041 2C000000 		.4byte	0x2c
 206 0045 03       		.uleb128 0x3
 207 0046 F9030000 		.4byte	.LASF4
 208 004a 03       		.byte	0x3
 209 004b 29       		.byte	0x29
 210 004c 25000000 		.4byte	0x25
 211 0050 03       		.uleb128 0x3
 212 0051 DD090000 		.4byte	.LASF5
 213 0055 03       		.byte	0x3
 214 0056 2B       		.byte	0x2b
 215 0057 5B000000 		.4byte	0x5b
 216 005b 02       		.uleb128 0x2
 217 005c 02       		.byte	0x2
 218 005d 07       		.byte	0x7
 219 005e 87030000 		.4byte	.LASF6
 220 0062 02       		.uleb128 0x2
 221 0063 04       		.byte	0x4
 222 0064 05       		.byte	0x5
 223 0065 B9020000 		.4byte	.LASF7
 224 0069 03       		.uleb128 0x3
 225 006a C4030000 		.4byte	.LASF8
 226 006e 03       		.byte	0x3
 227 006f 41       		.byte	0x41
 228 0070 74000000 		.4byte	0x74
 229 0074 02       		.uleb128 0x2
 230 0075 04       		.byte	0x4
 231 0076 07       		.byte	0x7
 232 0077 81040000 		.4byte	.LASF9
 233 007b 02       		.uleb128 0x2
 234 007c 08       		.byte	0x8
 235 007d 05       		.byte	0x5
 236 007e DA010000 		.4byte	.LASF10
 237 0082 02       		.uleb128 0x2
 238 0083 08       		.byte	0x8
 239 0084 07       		.byte	0x7
 240 0085 22010000 		.4byte	.LASF11
 241 0089 04       		.uleb128 0x4
 242 008a 04       		.byte	0x4
 243 008b 05       		.byte	0x5
 244 008c 696E7400 		.ascii	"int\000"
 245 0090 02       		.uleb128 0x2
 246 0091 04       		.byte	0x4
 247 0092 07       		.byte	0x7
 248 0093 52040000 		.4byte	.LASF12
 249 0097 03       		.uleb128 0x3
 250 0098 FB090000 		.4byte	.LASF13
 251 009c 04       		.byte	0x4
 252 009d 18       		.byte	0x18
 253 009e 3A000000 		.4byte	0x3a
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccKBcLBo.s 			page 35


 254 00a2 03       		.uleb128 0x3
 255 00a3 BE010000 		.4byte	.LASF14
 256 00a7 04       		.byte	0x4
 257 00a8 20       		.byte	0x20
 258 00a9 45000000 		.4byte	0x45
 259 00ad 03       		.uleb128 0x3
 260 00ae F5050000 		.4byte	.LASF15
 261 00b2 04       		.byte	0x4
 262 00b3 24       		.byte	0x24
 263 00b4 50000000 		.4byte	0x50
 264 00b8 03       		.uleb128 0x3
 265 00b9 8B090000 		.4byte	.LASF16
 266 00bd 04       		.byte	0x4
 267 00be 30       		.byte	0x30
 268 00bf 69000000 		.4byte	0x69
 269 00c3 02       		.uleb128 0x2
 270 00c4 04       		.byte	0x4
 271 00c5 07       		.byte	0x7
 272 00c6 5F040000 		.4byte	.LASF17
 273 00ca 05       		.uleb128 0x5
 274 00cb B8000000 		.4byte	0xb8
 275 00cf 06       		.uleb128 0x6
 276 00d0 CA000000 		.4byte	0xca
 277 00d4 07       		.uleb128 0x7
 278 00d5 CF000000 		.4byte	0xcf
 279 00d9 E4000000 		.4byte	0xe4
 280 00dd 08       		.uleb128 0x8
 281 00de C3000000 		.4byte	0xc3
 282 00e2 01       		.byte	0x1
 283 00e3 00       		.byte	0
 284 00e4 07       		.uleb128 0x7
 285 00e5 CA000000 		.4byte	0xca
 286 00e9 F4000000 		.4byte	0xf4
 287 00ed 08       		.uleb128 0x8
 288 00ee C3000000 		.4byte	0xc3
 289 00f2 0F       		.byte	0xf
 290 00f3 00       		.byte	0
 291 00f4 07       		.uleb128 0x7
 292 00f5 CF000000 		.4byte	0xcf
 293 00f9 04010000 		.4byte	0x104
 294 00fd 08       		.uleb128 0x8
 295 00fe C3000000 		.4byte	0xc3
 296 0102 0F       		.byte	0xf
 297 0103 00       		.byte	0
 298 0104 07       		.uleb128 0x7
 299 0105 CF000000 		.4byte	0xcf
 300 0109 14010000 		.4byte	0x114
 301 010d 08       		.uleb128 0x8
 302 010e C3000000 		.4byte	0xc3
 303 0112 02       		.byte	0x2
 304 0113 00       		.byte	0
 305 0114 07       		.uleb128 0x7
 306 0115 CF000000 		.4byte	0xcf
 307 0119 24010000 		.4byte	0x124
 308 011d 08       		.uleb128 0x8
 309 011e C3000000 		.4byte	0xc3
 310 0122 0E       		.byte	0xe
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccKBcLBo.s 			page 36


 311 0123 00       		.byte	0
 312 0124 09       		.uleb128 0x9
 313 0125 080F     		.2byte	0xf08
 314 0127 05       		.byte	0x5
 315 0128 21       		.byte	0x21
 316 0129 AC030000 		.4byte	0x3ac
 317 012d 0A       		.uleb128 0xa
 318 012e 8D0A0000 		.4byte	.LASF18
 319 0132 05       		.byte	0x5
 320 0133 22       		.byte	0x22
 321 0134 CA000000 		.4byte	0xca
 322 0138 00       		.byte	0
 323 0139 0A       		.uleb128 0xa
 324 013a 44070000 		.4byte	.LASF19
 325 013e 05       		.byte	0x5
 326 013f 23       		.byte	0x23
 327 0140 CA000000 		.4byte	0xca
 328 0144 04       		.byte	0x4
 329 0145 0A       		.uleb128 0xa
 330 0146 E6080000 		.4byte	.LASF20
 331 014a 05       		.byte	0x5
 332 014b 24       		.byte	0x24
 333 014c B1030000 		.4byte	0x3b1
 334 0150 08       		.byte	0x8
 335 0151 0A       		.uleb128 0xa
 336 0152 EB030000 		.4byte	.LASF21
 337 0156 05       		.byte	0x5
 338 0157 25       		.byte	0x25
 339 0158 CA000000 		.4byte	0xca
 340 015c 10       		.byte	0x10
 341 015d 0A       		.uleb128 0xa
 342 015e 75070000 		.4byte	.LASF22
 343 0162 05       		.byte	0x5
 344 0163 26       		.byte	0x26
 345 0164 CA000000 		.4byte	0xca
 346 0168 14       		.byte	0x14
 347 0169 0A       		.uleb128 0xa
 348 016a 50070000 		.4byte	.LASF23
 349 016e 05       		.byte	0x5
 350 016f 27       		.byte	0x27
 351 0170 CA000000 		.4byte	0xca
 352 0174 18       		.byte	0x18
 353 0175 0A       		.uleb128 0xa
 354 0176 FE000000 		.4byte	.LASF24
 355 017a 05       		.byte	0x5
 356 017b 28       		.byte	0x28
 357 017c CA000000 		.4byte	0xca
 358 0180 1C       		.byte	0x1c
 359 0181 0A       		.uleb128 0xa
 360 0182 6D070000 		.4byte	.LASF25
 361 0186 05       		.byte	0x5
 362 0187 29       		.byte	0x29
 363 0188 CA000000 		.4byte	0xca
 364 018c 20       		.byte	0x20
 365 018d 0A       		.uleb128 0xa
 366 018e 7F060000 		.4byte	.LASF26
 367 0192 05       		.byte	0x5
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccKBcLBo.s 			page 37


 368 0193 2A       		.byte	0x2a
 369 0194 CA000000 		.4byte	0xca
 370 0198 24       		.byte	0x24
 371 0199 0A       		.uleb128 0xa
 372 019a 03080000 		.4byte	.LASF27
 373 019e 05       		.byte	0x5
 374 019f 2B       		.byte	0x2b
 375 01a0 CB030000 		.4byte	0x3cb
 376 01a4 28       		.byte	0x28
 377 01a5 0A       		.uleb128 0xa
 378 01a6 11040000 		.4byte	.LASF28
 379 01aa 05       		.byte	0x5
 380 01ab 2C       		.byte	0x2c
 381 01ac D0030000 		.4byte	0x3d0
 382 01b0 80       		.byte	0x80
 383 01b1 0A       		.uleb128 0xa
 384 01b2 47090000 		.4byte	.LASF29
 385 01b6 05       		.byte	0x5
 386 01b7 2D       		.byte	0x2d
 387 01b8 DA030000 		.4byte	0x3da
 388 01bc C0       		.byte	0xc0
 389 01bd 0B       		.uleb128 0xb
 390 01be 630A0000 		.4byte	.LASF30
 391 01c2 05       		.byte	0x5
 392 01c3 2E       		.byte	0x2e
 393 01c4 E4030000 		.4byte	0x3e4
 394 01c8 0001     		.2byte	0x100
 395 01ca 0B       		.uleb128 0xb
 396 01cb 17080000 		.4byte	.LASF31
 397 01cf 05       		.byte	0x5
 398 01d0 2F       		.byte	0x2f
 399 01d1 EE030000 		.4byte	0x3ee
 400 01d5 4001     		.2byte	0x140
 401 01d7 0B       		.uleb128 0xb
 402 01d8 E7060000 		.4byte	.LASF32
 403 01dc 05       		.byte	0x5
 404 01dd 30       		.byte	0x30
 405 01de F8030000 		.4byte	0x3f8
 406 01e2 8001     		.2byte	0x180
 407 01e4 0B       		.uleb128 0xb
 408 01e5 5F090000 		.4byte	.LASF33
 409 01e9 05       		.byte	0x5
 410 01ea 31       		.byte	0x31
 411 01eb 02040000 		.4byte	0x402
 412 01ef C001     		.2byte	0x1c0
 413 01f1 0B       		.uleb128 0xb
 414 01f2 45050000 		.4byte	.LASF34
 415 01f6 05       		.byte	0x5
 416 01f7 32       		.byte	0x32
 417 01f8 CF000000 		.4byte	0xcf
 418 01fc 0002     		.2byte	0x200
 419 01fe 0B       		.uleb128 0xb
 420 01ff F80A0000 		.4byte	.LASF35
 421 0203 05       		.byte	0x5
 422 0204 33       		.byte	0x33
 423 0205 CF000000 		.4byte	0xcf
 424 0209 0402     		.2byte	0x204
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccKBcLBo.s 			page 38


 425 020b 0B       		.uleb128 0xb
 426 020c A0040000 		.4byte	.LASF36
 427 0210 05       		.byte	0x5
 428 0211 34       		.byte	0x34
 429 0212 CF000000 		.4byte	0xcf
 430 0216 0802     		.2byte	0x208
 431 0218 0B       		.uleb128 0xb
 432 0219 32090000 		.4byte	.LASF37
 433 021d 05       		.byte	0x5
 434 021e 35       		.byte	0x35
 435 021f CF000000 		.4byte	0xcf
 436 0223 0C02     		.2byte	0x20c
 437 0225 0B       		.uleb128 0xb
 438 0226 230A0000 		.4byte	.LASF38
 439 022a 05       		.byte	0x5
 440 022b 36       		.byte	0x36
 441 022c CA000000 		.4byte	0xca
 442 0230 1002     		.2byte	0x210
 443 0232 0B       		.uleb128 0xb
 444 0233 8A060000 		.4byte	.LASF39
 445 0237 05       		.byte	0x5
 446 0238 37       		.byte	0x37
 447 0239 CA000000 		.4byte	0xca
 448 023d 1402     		.2byte	0x214
 449 023f 0B       		.uleb128 0xb
 450 0240 D1040000 		.4byte	.LASF40
 451 0244 05       		.byte	0x5
 452 0245 38       		.byte	0x38
 453 0246 CA000000 		.4byte	0xca
 454 024a 1802     		.2byte	0x218
 455 024c 0B       		.uleb128 0xb
 456 024d C6070000 		.4byte	.LASF41
 457 0251 05       		.byte	0x5
 458 0252 39       		.byte	0x39
 459 0253 CF000000 		.4byte	0xcf
 460 0257 1C02     		.2byte	0x21c
 461 0259 0B       		.uleb128 0xb
 462 025a 03040000 		.4byte	.LASF42
 463 025e 05       		.byte	0x5
 464 025f 3A       		.byte	0x3a
 465 0260 CA000000 		.4byte	0xca
 466 0264 2002     		.2byte	0x220
 467 0266 0B       		.uleb128 0xb
 468 0267 B4070000 		.4byte	.LASF43
 469 026b 05       		.byte	0x5
 470 026c 3B       		.byte	0x3b
 471 026d CA000000 		.4byte	0xca
 472 0271 2402     		.2byte	0x224
 473 0273 0B       		.uleb128 0xb
 474 0274 100A0000 		.4byte	.LASF44
 475 0278 05       		.byte	0x5
 476 0279 3C       		.byte	0x3c
 477 027a CA000000 		.4byte	0xca
 478 027e 2802     		.2byte	0x228
 479 0280 0B       		.uleb128 0xb
 480 0281 1C0C0000 		.4byte	.LASF45
 481 0285 05       		.byte	0x5
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccKBcLBo.s 			page 39


 482 0286 3D       		.byte	0x3d
 483 0287 CF000000 		.4byte	0xcf
 484 028b 2C02     		.2byte	0x22c
 485 028d 0B       		.uleb128 0xb
 486 028e 3A050000 		.4byte	.LASF46
 487 0292 05       		.byte	0x5
 488 0293 3E       		.byte	0x3e
 489 0294 CA000000 		.4byte	0xca
 490 0298 3002     		.2byte	0x230
 491 029a 0B       		.uleb128 0xb
 492 029b B40B0000 		.4byte	.LASF47
 493 029f 05       		.byte	0x5
 494 02a0 3F       		.byte	0x3f
 495 02a1 CA000000 		.4byte	0xca
 496 02a5 3402     		.2byte	0x234
 497 02a7 0B       		.uleb128 0xb
 498 02a8 AE010000 		.4byte	.LASF48
 499 02ac 05       		.byte	0x5
 500 02ad 40       		.byte	0x40
 501 02ae CA000000 		.4byte	0xca
 502 02b2 3802     		.2byte	0x238
 503 02b4 0B       		.uleb128 0xb
 504 02b5 F40B0000 		.4byte	.LASF49
 505 02b9 05       		.byte	0x5
 506 02ba 41       		.byte	0x41
 507 02bb CF000000 		.4byte	0xcf
 508 02bf 3C02     		.2byte	0x23c
 509 02c1 0B       		.uleb128 0xb
 510 02c2 D4020000 		.4byte	.LASF50
 511 02c6 05       		.byte	0x5
 512 02c7 42       		.byte	0x42
 513 02c8 CF000000 		.4byte	0xcf
 514 02cc 4002     		.2byte	0x240
 515 02ce 0B       		.uleb128 0xb
 516 02cf 2D080000 		.4byte	.LASF51
 517 02d3 05       		.byte	0x5
 518 02d4 43       		.byte	0x43
 519 02d5 0C040000 		.4byte	0x40c
 520 02d9 4402     		.2byte	0x244
 521 02db 0B       		.uleb128 0xb
 522 02dc 1F000000 		.4byte	.LASF52
 523 02e0 05       		.byte	0x5
 524 02e1 44       		.byte	0x44
 525 02e2 CA000000 		.4byte	0xca
 526 02e6 8002     		.2byte	0x280
 527 02e8 0B       		.uleb128 0xb
 528 02e9 37080000 		.4byte	.LASF53
 529 02ed 05       		.byte	0x5
 530 02ee 45       		.byte	0x45
 531 02ef 16040000 		.4byte	0x416
 532 02f3 8402     		.2byte	0x284
 533 02f5 0B       		.uleb128 0xb
 534 02f6 ED020000 		.4byte	.LASF54
 535 02fa 05       		.byte	0x5
 536 02fb 46       		.byte	0x46
 537 02fc CF000000 		.4byte	0xcf
 538 0300 9002     		.2byte	0x290
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccKBcLBo.s 			page 40


 539 0302 0B       		.uleb128 0xb
 540 0303 41080000 		.4byte	.LASF55
 541 0307 05       		.byte	0x5
 542 0308 47       		.byte	0x47
 543 0309 20040000 		.4byte	0x420
 544 030d 9402     		.2byte	0x294
 545 030f 0B       		.uleb128 0xb
 546 0310 B70A0000 		.4byte	.LASF56
 547 0314 05       		.byte	0x5
 548 0315 48       		.byte	0x48
 549 0316 CF000000 		.4byte	0xcf
 550 031a A002     		.2byte	0x2a0
 551 031c 0B       		.uleb128 0xb
 552 031d 16000000 		.4byte	.LASF57
 553 0321 05       		.byte	0x5
 554 0322 49       		.byte	0x49
 555 0323 CF000000 		.4byte	0xcf
 556 0327 A402     		.2byte	0x2a4
 557 0329 0B       		.uleb128 0xb
 558 032a 4B080000 		.4byte	.LASF58
 559 032e 05       		.byte	0x5
 560 032f 4A       		.byte	0x4a
 561 0330 2A040000 		.4byte	0x42a
 562 0334 A802     		.2byte	0x2a8
 563 0336 0B       		.uleb128 0xb
 564 0337 A2000000 		.4byte	.LASF59
 565 033b 05       		.byte	0x5
 566 033c 4B       		.byte	0x4b
 567 033d CA000000 		.4byte	0xca
 568 0341 0003     		.2byte	0x300
 569 0343 0B       		.uleb128 0xb
 570 0344 51030000 		.4byte	.LASF60
 571 0348 05       		.byte	0x5
 572 0349 4C       		.byte	0x4c
 573 034a CA000000 		.4byte	0xca
 574 034e 0403     		.2byte	0x304
 575 0350 0B       		.uleb128 0xb
 576 0351 55080000 		.4byte	.LASF61
 577 0355 05       		.byte	0x5
 578 0356 4D       		.byte	0x4d
 579 0357 44040000 		.4byte	0x444
 580 035b 0803     		.2byte	0x308
 581 035d 0B       		.uleb128 0xb
 582 035e BE040000 		.4byte	.LASF62
 583 0362 05       		.byte	0x5
 584 0363 4E       		.byte	0x4e
 585 0364 CA000000 		.4byte	0xca
 586 0368 4003     		.2byte	0x340
 587 036a 0B       		.uleb128 0xb
 588 036b 7A0A0000 		.4byte	.LASF63
 589 036f 05       		.byte	0x5
 590 0370 4F       		.byte	0x4f
 591 0371 CA000000 		.4byte	0xca
 592 0375 4403     		.2byte	0x344
 593 0377 0B       		.uleb128 0xb
 594 0378 C2020000 		.4byte	.LASF64
 595 037c 05       		.byte	0x5
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccKBcLBo.s 			page 41


 596 037d 50       		.byte	0x50
 597 037e CF000000 		.4byte	0xcf
 598 0382 4803     		.2byte	0x348
 599 0384 0B       		.uleb128 0xb
 600 0385 60020000 		.4byte	.LASF65
 601 0389 05       		.byte	0x5
 602 038a 51       		.byte	0x51
 603 038b 5F040000 		.4byte	0x45f
 604 038f 4C03     		.2byte	0x34c
 605 0391 0B       		.uleb128 0xb
 606 0392 9A010000 		.4byte	.LASF66
 607 0396 05       		.byte	0x5
 608 0397 52       		.byte	0x52
 609 0398 CA000000 		.4byte	0xca
 610 039c 000F     		.2byte	0xf00
 611 039e 0B       		.uleb128 0xb
 612 039f A4010000 		.4byte	.LASF67
 613 03a3 05       		.byte	0x5
 614 03a4 53       		.byte	0x53
 615 03a5 CA000000 		.4byte	0xca
 616 03a9 040F     		.2byte	0xf04
 617 03ab 00       		.byte	0
 618 03ac 05       		.uleb128 0x5
 619 03ad D4000000 		.4byte	0xd4
 620 03b1 06       		.uleb128 0x6
 621 03b2 AC030000 		.4byte	0x3ac
 622 03b6 07       		.uleb128 0x7
 623 03b7 CF000000 		.4byte	0xcf
 624 03bb C6030000 		.4byte	0x3c6
 625 03bf 08       		.uleb128 0x8
 626 03c0 C3000000 		.4byte	0xc3
 627 03c4 15       		.byte	0x15
 628 03c5 00       		.byte	0
 629 03c6 05       		.uleb128 0x5
 630 03c7 B6030000 		.4byte	0x3b6
 631 03cb 06       		.uleb128 0x6
 632 03cc C6030000 		.4byte	0x3c6
 633 03d0 05       		.uleb128 0x5
 634 03d1 E4000000 		.4byte	0xe4
 635 03d5 05       		.uleb128 0x5
 636 03d6 F4000000 		.4byte	0xf4
 637 03da 06       		.uleb128 0x6
 638 03db D5030000 		.4byte	0x3d5
 639 03df 05       		.uleb128 0x5
 640 03e0 F4000000 		.4byte	0xf4
 641 03e4 06       		.uleb128 0x6
 642 03e5 DF030000 		.4byte	0x3df
 643 03e9 05       		.uleb128 0x5
 644 03ea F4000000 		.4byte	0xf4
 645 03ee 06       		.uleb128 0x6
 646 03ef E9030000 		.4byte	0x3e9
 647 03f3 05       		.uleb128 0x5
 648 03f4 F4000000 		.4byte	0xf4
 649 03f8 06       		.uleb128 0x6
 650 03f9 F3030000 		.4byte	0x3f3
 651 03fd 05       		.uleb128 0x5
 652 03fe F4000000 		.4byte	0xf4
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccKBcLBo.s 			page 42


 653 0402 06       		.uleb128 0x6
 654 0403 FD030000 		.4byte	0x3fd
 655 0407 05       		.uleb128 0x5
 656 0408 14010000 		.4byte	0x114
 657 040c 06       		.uleb128 0x6
 658 040d 07040000 		.4byte	0x407
 659 0411 05       		.uleb128 0x5
 660 0412 04010000 		.4byte	0x104
 661 0416 06       		.uleb128 0x6
 662 0417 11040000 		.4byte	0x411
 663 041b 05       		.uleb128 0x5
 664 041c 04010000 		.4byte	0x104
 665 0420 06       		.uleb128 0x6
 666 0421 1B040000 		.4byte	0x41b
 667 0425 05       		.uleb128 0x5
 668 0426 B6030000 		.4byte	0x3b6
 669 042a 06       		.uleb128 0x6
 670 042b 25040000 		.4byte	0x425
 671 042f 07       		.uleb128 0x7
 672 0430 CF000000 		.4byte	0xcf
 673 0434 3F040000 		.4byte	0x43f
 674 0438 08       		.uleb128 0x8
 675 0439 C3000000 		.4byte	0xc3
 676 043d 0D       		.byte	0xd
 677 043e 00       		.byte	0
 678 043f 05       		.uleb128 0x5
 679 0440 2F040000 		.4byte	0x42f
 680 0444 06       		.uleb128 0x6
 681 0445 3F040000 		.4byte	0x43f
 682 0449 07       		.uleb128 0x7
 683 044a CF000000 		.4byte	0xcf
 684 044e 5A040000 		.4byte	0x45a
 685 0452 0C       		.uleb128 0xc
 686 0453 C3000000 		.4byte	0xc3
 687 0457 EC02     		.2byte	0x2ec
 688 0459 00       		.byte	0
 689 045a 05       		.uleb128 0x5
 690 045b 49040000 		.4byte	0x449
 691 045f 06       		.uleb128 0x6
 692 0460 5A040000 		.4byte	0x45a
 693 0464 03       		.uleb128 0x3
 694 0465 EF080000 		.4byte	.LASF68
 695 0469 05       		.byte	0x5
 696 046a 54       		.byte	0x54
 697 046b 24010000 		.4byte	0x124
 698 046f 0D       		.uleb128 0xd
 699 0470 E4040000 		.4byte	.LASF69
 700 0474 06       		.byte	0x6
 701 0475 5206     		.2byte	0x652
 702 0477 64040000 		.4byte	0x464
 703 047b 02       		.uleb128 0x2
 704 047c 08       		.byte	0x8
 705 047d 04       		.byte	0x4
 706 047e B2090000 		.4byte	.LASF70
 707 0482 0E       		.uleb128 0xe
 708 0483 B8       		.byte	0xb8
 709 0484 07       		.byte	0x7
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccKBcLBo.s 			page 43


 710 0485 34       		.byte	0x34
 711 0486 93080000 		.4byte	0x893
 712 048a 0A       		.uleb128 0xa
 713 048b 09010000 		.4byte	.LASF71
 714 048f 07       		.byte	0x7
 715 0490 37       		.byte	0x37
 716 0491 B8000000 		.4byte	0xb8
 717 0495 00       		.byte	0
 718 0496 0A       		.uleb128 0xa
 719 0497 97000000 		.4byte	.LASF72
 720 049b 07       		.byte	0x7
 721 049c 38       		.byte	0x38
 722 049d B8000000 		.4byte	0xb8
 723 04a1 04       		.byte	0x4
 724 04a2 0A       		.uleb128 0xa
 725 04a3 F8020000 		.4byte	.LASF73
 726 04a7 07       		.byte	0x7
 727 04a8 39       		.byte	0x39
 728 04a9 B8000000 		.4byte	0xb8
 729 04ad 08       		.byte	0x8
 730 04ae 0A       		.uleb128 0xa
 731 04af 66080000 		.4byte	.LASF74
 732 04b3 07       		.byte	0x7
 733 04b4 3A       		.byte	0x3a
 734 04b5 B8000000 		.4byte	0xb8
 735 04b9 0C       		.byte	0xc
 736 04ba 0A       		.uleb128 0xa
 737 04bb 37020000 		.4byte	.LASF75
 738 04bf 07       		.byte	0x7
 739 04c0 3B       		.byte	0x3b
 740 04c1 B8000000 		.4byte	0xb8
 741 04c5 10       		.byte	0x10
 742 04c6 0A       		.uleb128 0xa
 743 04c7 6B020000 		.4byte	.LASF76
 744 04cb 07       		.byte	0x7
 745 04cc 3C       		.byte	0x3c
 746 04cd B8000000 		.4byte	0xb8
 747 04d1 14       		.byte	0x14
 748 04d2 0A       		.uleb128 0xa
 749 04d3 DB040000 		.4byte	.LASF77
 750 04d7 07       		.byte	0x7
 751 04d8 3D       		.byte	0x3d
 752 04d9 B8000000 		.4byte	0xb8
 753 04dd 18       		.byte	0x18
 754 04de 0A       		.uleb128 0xa
 755 04df 8E000000 		.4byte	.LASF78
 756 04e3 07       		.byte	0x7
 757 04e4 3E       		.byte	0x3e
 758 04e5 B8000000 		.4byte	0xb8
 759 04e9 1C       		.byte	0x1c
 760 04ea 0A       		.uleb128 0xa
 761 04eb EC0B0000 		.4byte	.LASF79
 762 04ef 07       		.byte	0x7
 763 04f0 3F       		.byte	0x3f
 764 04f1 B8000000 		.4byte	0xb8
 765 04f5 20       		.byte	0x20
 766 04f6 0A       		.uleb128 0xa
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccKBcLBo.s 			page 44


 767 04f7 9C070000 		.4byte	.LASF80
 768 04fb 07       		.byte	0x7
 769 04fc 40       		.byte	0x40
 770 04fd B8000000 		.4byte	0xb8
 771 0501 24       		.byte	0x24
 772 0502 0A       		.uleb128 0xa
 773 0503 93060000 		.4byte	.LASF81
 774 0507 07       		.byte	0x7
 775 0508 43       		.byte	0x43
 776 0509 97000000 		.4byte	0x97
 777 050d 28       		.byte	0x28
 778 050e 0A       		.uleb128 0xa
 779 050f 74000000 		.4byte	.LASF82
 780 0513 07       		.byte	0x7
 781 0514 44       		.byte	0x44
 782 0515 97000000 		.4byte	0x97
 783 0519 29       		.byte	0x29
 784 051a 0A       		.uleb128 0xa
 785 051b E20B0000 		.4byte	.LASF83
 786 051f 07       		.byte	0x7
 787 0520 45       		.byte	0x45
 788 0521 97000000 		.4byte	0x97
 789 0525 2A       		.byte	0x2a
 790 0526 0A       		.uleb128 0xa
 791 0527 8E070000 		.4byte	.LASF84
 792 052b 07       		.byte	0x7
 793 052c 46       		.byte	0x46
 794 052d 97000000 		.4byte	0x97
 795 0531 2B       		.byte	0x2b
 796 0532 0A       		.uleb128 0xa
 797 0533 E9050000 		.4byte	.LASF85
 798 0537 07       		.byte	0x7
 799 0538 47       		.byte	0x47
 800 0539 97000000 		.4byte	0x97
 801 053d 2C       		.byte	0x2c
 802 053e 0A       		.uleb128 0xa
 803 053f 030A0000 		.4byte	.LASF86
 804 0543 07       		.byte	0x7
 805 0544 48       		.byte	0x48
 806 0545 97000000 		.4byte	0x97
 807 0549 2D       		.byte	0x2d
 808 054a 0A       		.uleb128 0xa
 809 054b 40020000 		.4byte	.LASF87
 810 054f 07       		.byte	0x7
 811 0550 49       		.byte	0x49
 812 0551 97000000 		.4byte	0x97
 813 0555 2E       		.byte	0x2e
 814 0556 0A       		.uleb128 0xa
 815 0557 A5060000 		.4byte	.LASF88
 816 055b 07       		.byte	0x7
 817 055c 4A       		.byte	0x4a
 818 055d 97000000 		.4byte	0x97
 819 0561 2F       		.byte	0x2f
 820 0562 0A       		.uleb128 0xa
 821 0563 C3090000 		.4byte	.LASF89
 822 0567 07       		.byte	0x7
 823 0568 4B       		.byte	0x4b
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccKBcLBo.s 			page 45


 824 0569 97000000 		.4byte	0x97
 825 056d 30       		.byte	0x30
 826 056e 0A       		.uleb128 0xa
 827 056f B3040000 		.4byte	.LASF90
 828 0573 07       		.byte	0x7
 829 0574 4E       		.byte	0x4e
 830 0575 97000000 		.4byte	0x97
 831 0579 31       		.byte	0x31
 832 057a 0A       		.uleb128 0xa
 833 057b AE000000 		.4byte	.LASF91
 834 057f 07       		.byte	0x7
 835 0580 4F       		.byte	0x4f
 836 0581 97000000 		.4byte	0x97
 837 0585 32       		.byte	0x32
 838 0586 0A       		.uleb128 0xa
 839 0587 46040000 		.4byte	.LASF92
 840 058b 07       		.byte	0x7
 841 058c 50       		.byte	0x50
 842 058d 97000000 		.4byte	0x97
 843 0591 33       		.byte	0x33
 844 0592 0A       		.uleb128 0xa
 845 0593 F3060000 		.4byte	.LASF93
 846 0597 07       		.byte	0x7
 847 0598 51       		.byte	0x51
 848 0599 97000000 		.4byte	0x97
 849 059d 34       		.byte	0x34
 850 059e 0A       		.uleb128 0xa
 851 059f 6D0A0000 		.4byte	.LASF94
 852 05a3 07       		.byte	0x7
 853 05a4 52       		.byte	0x52
 854 05a5 A2000000 		.4byte	0xa2
 855 05a9 36       		.byte	0x36
 856 05aa 0A       		.uleb128 0xa
 857 05ab 2A030000 		.4byte	.LASF95
 858 05af 07       		.byte	0x7
 859 05b0 53       		.byte	0x53
 860 05b1 A2000000 		.4byte	0xa2
 861 05b5 38       		.byte	0x38
 862 05b6 0A       		.uleb128 0xa
 863 05b7 C80A0000 		.4byte	.LASF96
 864 05bb 07       		.byte	0x7
 865 05bc 54       		.byte	0x54
 866 05bd A2000000 		.4byte	0xa2
 867 05c1 3A       		.byte	0x3a
 868 05c2 0A       		.uleb128 0xa
 869 05c3 C30B0000 		.4byte	.LASF97
 870 05c7 07       		.byte	0x7
 871 05c8 55       		.byte	0x55
 872 05c9 97000000 		.4byte	0x97
 873 05cd 3C       		.byte	0x3c
 874 05ce 0A       		.uleb128 0xa
 875 05cf 63030000 		.4byte	.LASF98
 876 05d3 07       		.byte	0x7
 877 05d4 56       		.byte	0x56
 878 05d5 97000000 		.4byte	0x97
 879 05d9 3D       		.byte	0x3d
 880 05da 0A       		.uleb128 0xa
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccKBcLBo.s 			page 46


 881 05db 51090000 		.4byte	.LASF99
 882 05df 07       		.byte	0x7
 883 05e0 57       		.byte	0x57
 884 05e1 97000000 		.4byte	0x97
 885 05e5 3E       		.byte	0x3e
 886 05e6 0A       		.uleb128 0xa
 887 05e7 82000000 		.4byte	.LASF100
 888 05eb 07       		.byte	0x7
 889 05ec 58       		.byte	0x58
 890 05ed 97000000 		.4byte	0x97
 891 05f1 3F       		.byte	0x3f
 892 05f2 0A       		.uleb128 0xa
 893 05f3 A7070000 		.4byte	.LASF101
 894 05f7 07       		.byte	0x7
 895 05f8 59       		.byte	0x59
 896 05f9 97000000 		.4byte	0x97
 897 05fd 40       		.byte	0x40
 898 05fe 0A       		.uleb128 0xa
 899 05ff CF030000 		.4byte	.LASF102
 900 0603 07       		.byte	0x7
 901 0604 5A       		.byte	0x5a
 902 0605 97000000 		.4byte	0x97
 903 0609 41       		.byte	0x41
 904 060a 0A       		.uleb128 0xa
 905 060b 31060000 		.4byte	.LASF103
 906 060f 07       		.byte	0x7
 907 0610 5B       		.byte	0x5b
 908 0611 97000000 		.4byte	0x97
 909 0615 42       		.byte	0x42
 910 0616 0A       		.uleb128 0xa
 911 0617 83070000 		.4byte	.LASF104
 912 061b 07       		.byte	0x7
 913 061c 5C       		.byte	0x5c
 914 061d 97000000 		.4byte	0x97
 915 0621 43       		.byte	0x43
 916 0622 0A       		.uleb128 0xa
 917 0623 01030000 		.4byte	.LASF105
 918 0627 07       		.byte	0x7
 919 0628 5D       		.byte	0x5d
 920 0629 97000000 		.4byte	0x97
 921 062d 44       		.byte	0x44
 922 062e 0A       		.uleb128 0xa
 923 062f 94090000 		.4byte	.LASF106
 924 0633 07       		.byte	0x7
 925 0634 5E       		.byte	0x5e
 926 0635 B8000000 		.4byte	0xb8
 927 0639 48       		.byte	0x48
 928 063a 0A       		.uleb128 0xa
 929 063b DF020000 		.4byte	.LASF107
 930 063f 07       		.byte	0x7
 931 0640 5F       		.byte	0x5f
 932 0641 B8000000 		.4byte	0xb8
 933 0645 4C       		.byte	0x4c
 934 0646 0A       		.uleb128 0xa
 935 0647 430C0000 		.4byte	.LASF108
 936 064b 07       		.byte	0x7
 937 064c 60       		.byte	0x60
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccKBcLBo.s 			page 47


 938 064d 97000000 		.4byte	0x97
 939 0651 50       		.byte	0x50
 940 0652 0A       		.uleb128 0xa
 941 0653 88010000 		.4byte	.LASF109
 942 0657 07       		.byte	0x7
 943 0658 61       		.byte	0x61
 944 0659 97000000 		.4byte	0x97
 945 065d 51       		.byte	0x51
 946 065e 0A       		.uleb128 0xa
 947 065f DD0A0000 		.4byte	.LASF110
 948 0663 07       		.byte	0x7
 949 0664 62       		.byte	0x62
 950 0665 97000000 		.4byte	0x97
 951 0669 52       		.byte	0x52
 952 066a 0A       		.uleb128 0xa
 953 066b 310C0000 		.4byte	.LASF111
 954 066f 07       		.byte	0x7
 955 0670 63       		.byte	0x63
 956 0671 97000000 		.4byte	0x97
 957 0675 53       		.byte	0x53
 958 0676 0A       		.uleb128 0xa
 959 0677 69090000 		.4byte	.LASF112
 960 067b 07       		.byte	0x7
 961 067c 64       		.byte	0x64
 962 067d 97000000 		.4byte	0x97
 963 0681 54       		.byte	0x54
 964 0682 0A       		.uleb128 0xa
 965 0683 A30A0000 		.4byte	.LASF113
 966 0687 07       		.byte	0x7
 967 0688 65       		.byte	0x65
 968 0689 97000000 		.4byte	0x97
 969 068d 55       		.byte	0x55
 970 068e 0A       		.uleb128 0xa
 971 068f 2D0A0000 		.4byte	.LASF114
 972 0693 07       		.byte	0x7
 973 0694 66       		.byte	0x66
 974 0695 97000000 		.4byte	0x97
 975 0699 56       		.byte	0x56
 976 069a 0A       		.uleb128 0xa
 977 069b ED040000 		.4byte	.LASF115
 978 069f 07       		.byte	0x7
 979 06a0 67       		.byte	0x67
 980 06a1 97000000 		.4byte	0x97
 981 06a5 57       		.byte	0x57
 982 06a6 0A       		.uleb128 0xa
 983 06a7 2F000000 		.4byte	.LASF116
 984 06ab 07       		.byte	0x7
 985 06ac 68       		.byte	0x68
 986 06ad 97000000 		.4byte	0x97
 987 06b1 58       		.byte	0x58
 988 06b2 0A       		.uleb128 0xa
 989 06b3 B5080000 		.4byte	.LASF117
 990 06b7 07       		.byte	0x7
 991 06b8 69       		.byte	0x69
 992 06b9 97000000 		.4byte	0x97
 993 06bd 59       		.byte	0x59
 994 06be 0A       		.uleb128 0xa
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccKBcLBo.s 			page 48


 995 06bf DC060000 		.4byte	.LASF118
 996 06c3 07       		.byte	0x7
 997 06c4 6E       		.byte	0x6e
 998 06c5 AD000000 		.4byte	0xad
 999 06c9 5A       		.byte	0x5a
 1000 06ca 0A       		.uleb128 0xa
 1001 06cb 4C0A0000 		.4byte	.LASF119
 1002 06cf 07       		.byte	0x7
 1003 06d0 6F       		.byte	0x6f
 1004 06d1 AD000000 		.4byte	0xad
 1005 06d5 5C       		.byte	0x5c
 1006 06d6 0A       		.uleb128 0xa
 1007 06d7 13010000 		.4byte	.LASF120
 1008 06db 07       		.byte	0x7
 1009 06dc 70       		.byte	0x70
 1010 06dd 97000000 		.4byte	0x97
 1011 06e1 5E       		.byte	0x5e
 1012 06e2 0A       		.uleb128 0xa
 1013 06e3 AE030000 		.4byte	.LASF121
 1014 06e7 07       		.byte	0x7
 1015 06e8 71       		.byte	0x71
 1016 06e9 97000000 		.4byte	0x97
 1017 06ed 5F       		.byte	0x5f
 1018 06ee 0A       		.uleb128 0xa
 1019 06ef 5C070000 		.4byte	.LASF122
 1020 06f3 07       		.byte	0x7
 1021 06f4 72       		.byte	0x72
 1022 06f5 97000000 		.4byte	0x97
 1023 06f9 60       		.byte	0x60
 1024 06fa 0A       		.uleb128 0xa
 1025 06fb D8070000 		.4byte	.LASF123
 1026 06ff 07       		.byte	0x7
 1027 0700 73       		.byte	0x73
 1028 0701 B8000000 		.4byte	0xb8
 1029 0705 64       		.byte	0x64
 1030 0706 0A       		.uleb128 0xa
 1031 0707 4E010000 		.4byte	.LASF124
 1032 070b 07       		.byte	0x7
 1033 070c 76       		.byte	0x76
 1034 070d AD000000 		.4byte	0xad
 1035 0711 68       		.byte	0x68
 1036 0712 0A       		.uleb128 0xa
 1037 0713 6F040000 		.4byte	.LASF125
 1038 0717 07       		.byte	0x7
 1039 0718 77       		.byte	0x77
 1040 0719 AD000000 		.4byte	0xad
 1041 071d 6A       		.byte	0x6a
 1042 071e 0A       		.uleb128 0xa
 1043 071f 01050000 		.4byte	.LASF126
 1044 0723 07       		.byte	0x7
 1045 0724 78       		.byte	0x78
 1046 0725 AD000000 		.4byte	0xad
 1047 0729 6C       		.byte	0x6c
 1048 072a 0A       		.uleb128 0xa
 1049 072b 93040000 		.4byte	.LASF127
 1050 072f 07       		.byte	0x7
 1051 0730 79       		.byte	0x79
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccKBcLBo.s 			page 49


 1052 0731 AD000000 		.4byte	0xad
 1053 0735 6E       		.byte	0x6e
 1054 0736 0A       		.uleb128 0xa
 1055 0737 1E090000 		.4byte	.LASF128
 1056 073b 07       		.byte	0x7
 1057 073c 7B       		.byte	0x7b
 1058 073d 97000000 		.4byte	0x97
 1059 0741 70       		.byte	0x70
 1060 0742 0A       		.uleb128 0xa
 1061 0743 F4010000 		.4byte	.LASF129
 1062 0747 07       		.byte	0x7
 1063 0748 7C       		.byte	0x7c
 1064 0749 97000000 		.4byte	0x97
 1065 074d 71       		.byte	0x71
 1066 074e 0A       		.uleb128 0xa
 1067 074f 060C0000 		.4byte	.LASF130
 1068 0753 07       		.byte	0x7
 1069 0754 7D       		.byte	0x7d
 1070 0755 97000000 		.4byte	0x97
 1071 0759 72       		.byte	0x72
 1072 075a 0A       		.uleb128 0xa
 1073 075b 11070000 		.4byte	.LASF131
 1074 075f 07       		.byte	0x7
 1075 0760 7E       		.byte	0x7e
 1076 0761 97000000 		.4byte	0x97
 1077 0765 73       		.byte	0x73
 1078 0766 0A       		.uleb128 0xa
 1079 0767 79090000 		.4byte	.LASF132
 1080 076b 07       		.byte	0x7
 1081 076c 80       		.byte	0x80
 1082 076d AD000000 		.4byte	0xad
 1083 0771 74       		.byte	0x74
 1084 0772 0A       		.uleb128 0xa
 1085 0773 E8090000 		.4byte	.LASF133
 1086 0777 07       		.byte	0x7
 1087 0778 81       		.byte	0x81
 1088 0779 AD000000 		.4byte	0xad
 1089 077d 76       		.byte	0x76
 1090 077e 0A       		.uleb128 0xa
 1091 077f 3C030000 		.4byte	.LASF134
 1092 0783 07       		.byte	0x7
 1093 0784 82       		.byte	0x82
 1094 0785 AD000000 		.4byte	0xad
 1095 0789 78       		.byte	0x78
 1096 078a 0A       		.uleb128 0xa
 1097 078b D2000000 		.4byte	.LASF135
 1098 078f 07       		.byte	0x7
 1099 0790 83       		.byte	0x83
 1100 0791 AD000000 		.4byte	0xad
 1101 0795 7A       		.byte	0x7a
 1102 0796 0A       		.uleb128 0xa
 1103 0797 6F0B0000 		.4byte	.LASF136
 1104 079b 07       		.byte	0x7
 1105 079c 86       		.byte	0x86
 1106 079d 97000000 		.4byte	0x97
 1107 07a1 7C       		.byte	0x7c
 1108 07a2 0A       		.uleb128 0xa
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccKBcLBo.s 			page 50


 1109 07a3 920A0000 		.4byte	.LASF137
 1110 07a7 07       		.byte	0x7
 1111 07a8 87       		.byte	0x87
 1112 07a9 97000000 		.4byte	0x97
 1113 07ad 7D       		.byte	0x7d
 1114 07ae 0A       		.uleb128 0xa
 1115 07af 43000000 		.4byte	.LASF138
 1116 07b3 07       		.byte	0x7
 1117 07b4 88       		.byte	0x88
 1118 07b5 97000000 		.4byte	0x97
 1119 07b9 7E       		.byte	0x7e
 1120 07ba 0A       		.uleb128 0xa
 1121 07bb 9A030000 		.4byte	.LASF139
 1122 07bf 07       		.byte	0x7
 1123 07c0 89       		.byte	0x89
 1124 07c1 97000000 		.4byte	0x97
 1125 07c5 7F       		.byte	0x7f
 1126 07c6 0A       		.uleb128 0xa
 1127 07c7 32040000 		.4byte	.LASF140
 1128 07cb 07       		.byte	0x7
 1129 07cc 8A       		.byte	0x8a
 1130 07cd 97000000 		.4byte	0x97
 1131 07d1 80       		.byte	0x80
 1132 07d2 0A       		.uleb128 0xa
 1133 07d3 68060000 		.4byte	.LASF141
 1134 07d7 07       		.byte	0x7
 1135 07d8 8D       		.byte	0x8d
 1136 07d9 B8000000 		.4byte	0xb8
 1137 07dd 84       		.byte	0x84
 1138 07de 0A       		.uleb128 0xa
 1139 07df E7000000 		.4byte	.LASF142
 1140 07e3 07       		.byte	0x7
 1141 07e4 8E       		.byte	0x8e
 1142 07e5 B8000000 		.4byte	0xb8
 1143 07e9 88       		.byte	0x88
 1144 07ea 0A       		.uleb128 0xa
 1145 07eb 5A0B0000 		.4byte	.LASF143
 1146 07ef 07       		.byte	0x7
 1147 07f0 8F       		.byte	0x8f
 1148 07f1 B8000000 		.4byte	0xb8
 1149 07f5 8C       		.byte	0x8c
 1150 07f6 0A       		.uleb128 0xa
 1151 07f7 B1060000 		.4byte	.LASF144
 1152 07fb 07       		.byte	0x7
 1153 07fc 90       		.byte	0x90
 1154 07fd B8000000 		.4byte	0xb8
 1155 0801 90       		.byte	0x90
 1156 0802 0A       		.uleb128 0xa
 1157 0803 1D040000 		.4byte	.LASF145
 1158 0807 07       		.byte	0x7
 1159 0808 91       		.byte	0x91
 1160 0809 B8000000 		.4byte	0xb8
 1161 080d 94       		.byte	0x94
 1162 080e 0A       		.uleb128 0xa
 1163 080f 52060000 		.4byte	.LASF146
 1164 0813 07       		.byte	0x7
 1165 0814 92       		.byte	0x92
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccKBcLBo.s 			page 51


 1166 0815 B8000000 		.4byte	0xb8
 1167 0819 98       		.byte	0x98
 1168 081a 0A       		.uleb128 0xa
 1169 081b 9E0B0000 		.4byte	.LASF147
 1170 081f 07       		.byte	0x7
 1171 0820 93       		.byte	0x93
 1172 0821 B8000000 		.4byte	0xb8
 1173 0825 9C       		.byte	0x9c
 1174 0826 0A       		.uleb128 0xa
 1175 0827 5E010000 		.4byte	.LASF148
 1176 082b 07       		.byte	0x7
 1177 082c 94       		.byte	0x94
 1178 082d B8000000 		.4byte	0xb8
 1179 0831 A0       		.byte	0xa0
 1180 0832 0A       		.uleb128 0xa
 1181 0833 4B020000 		.4byte	.LASF149
 1182 0837 07       		.byte	0x7
 1183 0838 95       		.byte	0x95
 1184 0839 AD000000 		.4byte	0xad
 1185 083d A4       		.byte	0xa4
 1186 083e 0A       		.uleb128 0xa
 1187 083f 3D060000 		.4byte	.LASF150
 1188 0843 07       		.byte	0x7
 1189 0844 96       		.byte	0x96
 1190 0845 AD000000 		.4byte	0xad
 1191 0849 A6       		.byte	0xa6
 1192 084a 0A       		.uleb128 0xa
 1193 084b 21080000 		.4byte	.LASF151
 1194 084f 07       		.byte	0x7
 1195 0850 97       		.byte	0x97
 1196 0851 AD000000 		.4byte	0xad
 1197 0855 A8       		.byte	0xa8
 1198 0856 0A       		.uleb128 0xa
 1199 0857 CF090000 		.4byte	.LASF152
 1200 085b 07       		.byte	0x7
 1201 085c 98       		.byte	0x98
 1202 085d AD000000 		.4byte	0xad
 1203 0861 AA       		.byte	0xaa
 1204 0862 0A       		.uleb128 0xa
 1205 0863 10050000 		.4byte	.LASF153
 1206 0867 07       		.byte	0x7
 1207 0868 99       		.byte	0x99
 1208 0869 AD000000 		.4byte	0xad
 1209 086d AC       		.byte	0xac
 1210 086e 0A       		.uleb128 0xa
 1211 086f 28070000 		.4byte	.LASF154
 1212 0873 07       		.byte	0x7
 1213 0874 9A       		.byte	0x9a
 1214 0875 AD000000 		.4byte	0xad
 1215 0879 AE       		.byte	0xae
 1216 087a 0A       		.uleb128 0xa
 1217 087b 550A0000 		.4byte	.LASF155
 1218 087f 07       		.byte	0x7
 1219 0880 9D       		.byte	0x9d
 1220 0881 AD000000 		.4byte	0xad
 1221 0885 B0       		.byte	0xb0
 1222 0886 0A       		.uleb128 0xa
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccKBcLBo.s 			page 52


 1223 0887 56000000 		.4byte	.LASF156
 1224 088b 07       		.byte	0x7
 1225 088c 9E       		.byte	0x9e
 1226 088d B8000000 		.4byte	0xb8
 1227 0891 B4       		.byte	0xb4
 1228 0892 00       		.byte	0
 1229 0893 03       		.uleb128 0x3
 1230 0894 0A060000 		.4byte	.LASF157
 1231 0898 07       		.byte	0x7
 1232 0899 9F       		.byte	0x9f
 1233 089a 82040000 		.4byte	0x482
 1234 089e 0D       		.uleb128 0xd
 1235 089f 68040000 		.4byte	.LASF158
 1236 08a3 08       		.byte	0x8
 1237 08a4 F601     		.2byte	0x1f6
 1238 08a6 AA080000 		.4byte	0x8aa
 1239 08aa 02       		.uleb128 0x2
 1240 08ab 01       		.byte	0x1
 1241 08ac 08       		.byte	0x8
 1242 08ad BE090000 		.4byte	.LASF159
 1243 08b1 02       		.uleb128 0x2
 1244 08b2 04       		.byte	0x4
 1245 08b3 04       		.byte	0x4
 1246 08b4 D2070000 		.4byte	.LASF160
 1247 08b8 02       		.uleb128 0x2
 1248 08b9 08       		.byte	0x8
 1249 08ba 04       		.byte	0x4
 1250 08bb 35030000 		.4byte	.LASF161
 1251 08bf 0F       		.uleb128 0xf
 1252 08c0 01       		.byte	0x1
 1253 08c1 2C000000 		.4byte	0x2c
 1254 08c5 01       		.byte	0x1
 1255 08c6 1304     		.2byte	0x413
 1256 08c8 E5080000 		.4byte	0x8e5
 1257 08cc 10       		.uleb128 0x10
 1258 08cd 83020000 		.4byte	.LASF162
 1259 08d1 00       		.byte	0
 1260 08d2 10       		.uleb128 0x10
 1261 08d3 6E080000 		.4byte	.LASF163
 1262 08d7 01       		.byte	0x1
 1263 08d8 10       		.uleb128 0x10
 1264 08d9 12030000 		.4byte	.LASF164
 1265 08dd 02       		.byte	0x2
 1266 08de 10       		.uleb128 0x10
 1267 08df 840B0000 		.4byte	.LASF165
 1268 08e3 03       		.byte	0x3
 1269 08e4 00       		.byte	0
 1270 08e5 0D       		.uleb128 0xd
 1271 08e6 09020000 		.4byte	.LASF166
 1272 08ea 01       		.byte	0x1
 1273 08eb 1804     		.2byte	0x418
 1274 08ed BF080000 		.4byte	0x8bf
 1275 08f1 0F       		.uleb128 0xf
 1276 08f2 01       		.byte	0x1
 1277 08f3 2C000000 		.4byte	0x2c
 1278 08f7 01       		.byte	0x1
 1279 08f8 9404     		.2byte	0x494
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccKBcLBo.s 			page 53


 1280 08fa 17090000 		.4byte	0x917
 1281 08fe 10       		.uleb128 0x10
 1282 08ff C6060000 		.4byte	.LASF167
 1283 0903 00       		.byte	0
 1284 0904 10       		.uleb128 0x10
 1285 0905 39010000 		.4byte	.LASF168
 1286 0909 01       		.byte	0x1
 1287 090a 10       		.uleb128 0x10
 1288 090b 9B080000 		.4byte	.LASF169
 1289 090f 02       		.byte	0x2
 1290 0910 10       		.uleb128 0x10
 1291 0911 9B020000 		.4byte	.LASF170
 1292 0915 04       		.byte	0x4
 1293 0916 00       		.byte	0
 1294 0917 11       		.uleb128 0x11
 1295 0918 78       		.byte	0x78
 1296 0919 01       		.byte	0x1
 1297 091a 0205     		.2byte	0x502
 1298 091c E4090000 		.4byte	0x9e4
 1299 0920 12       		.uleb128 0x12
 1300 0921 280A0000 		.4byte	.LASF171
 1301 0925 01       		.byte	0x1
 1302 0926 0405     		.2byte	0x504
 1303 0928 B8000000 		.4byte	0xb8
 1304 092c 00       		.byte	0
 1305 092d 12       		.uleb128 0x12
 1306 092e ED0A0000 		.4byte	.LASF172
 1307 0932 01       		.byte	0x1
 1308 0933 0505     		.2byte	0x505
 1309 0935 B8000000 		.4byte	0xb8
 1310 0939 04       		.byte	0x4
 1311 093a 12       		.uleb128 0x12
 1312 093b 7A030000 		.4byte	.LASF173
 1313 093f 01       		.byte	0x1
 1314 0940 0605     		.2byte	0x506
 1315 0942 B8000000 		.4byte	0xb8
 1316 0946 08       		.byte	0x8
 1317 0947 12       		.uleb128 0x12
 1318 0948 04070000 		.4byte	.LASF174
 1319 094c 01       		.byte	0x1
 1320 094d 0705     		.2byte	0x507
 1321 094f B8000000 		.4byte	0xb8
 1322 0953 0C       		.byte	0xc
 1323 0954 12       		.uleb128 0x12
 1324 0955 2F050000 		.4byte	.LASF175
 1325 0959 01       		.byte	0x1
 1326 095a 0805     		.2byte	0x508
 1327 095c B8000000 		.4byte	0xb8
 1328 0960 10       		.byte	0x10
 1329 0961 12       		.uleb128 0x12
 1330 0962 BE0A0000 		.4byte	.LASF176
 1331 0966 01       		.byte	0x1
 1332 0967 0905     		.2byte	0x509
 1333 0969 E5080000 		.4byte	0x8e5
 1334 096d 14       		.byte	0x14
 1335 096e 12       		.uleb128 0x12
 1336 096f 5F080000 		.4byte	.LASF177
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccKBcLBo.s 			page 54


 1337 0973 01       		.byte	0x1
 1338 0974 0A05     		.2byte	0x50a
 1339 0976 B8000000 		.4byte	0xb8
 1340 097a 18       		.byte	0x18
 1341 097b 12       		.uleb128 0x12
 1342 097c 1A060000 		.4byte	.LASF178
 1343 0980 01       		.byte	0x1
 1344 0981 0B05     		.2byte	0x50b
 1345 0983 E4090000 		.4byte	0x9e4
 1346 0987 1C       		.byte	0x1c
 1347 0988 12       		.uleb128 0x12
 1348 0989 DD080000 		.4byte	.LASF179
 1349 098d 01       		.byte	0x1
 1350 098e 0C05     		.2byte	0x50c
 1351 0990 B8000000 		.4byte	0xb8
 1352 0994 5C       		.byte	0x5c
 1353 0995 12       		.uleb128 0x12
 1354 0996 C6000000 		.4byte	.LASF180
 1355 099a 01       		.byte	0x1
 1356 099b 0D05     		.2byte	0x50d
 1357 099d B8000000 		.4byte	0xb8
 1358 09a1 60       		.byte	0x60
 1359 09a2 12       		.uleb128 0x12
 1360 09a3 75020000 		.4byte	.LASF181
 1361 09a7 01       		.byte	0x1
 1362 09a8 0E05     		.2byte	0x50e
 1363 09aa B8000000 		.4byte	0xb8
 1364 09ae 64       		.byte	0x64
 1365 09af 12       		.uleb128 0x12
 1366 09b0 D3080000 		.4byte	.LASF182
 1367 09b4 01       		.byte	0x1
 1368 09b5 0F05     		.2byte	0x50f
 1369 09b7 B8000000 		.4byte	0xb8
 1370 09bb 68       		.byte	0x68
 1371 09bc 12       		.uleb128 0x12
 1372 09bd D20B0000 		.4byte	.LASF183
 1373 09c1 01       		.byte	0x1
 1374 09c2 1005     		.2byte	0x510
 1375 09c4 B8000000 		.4byte	0xb8
 1376 09c8 6C       		.byte	0x6c
 1377 09c9 12       		.uleb128 0x12
 1378 09ca 36070000 		.4byte	.LASF184
 1379 09ce 01       		.byte	0x1
 1380 09cf 1105     		.2byte	0x511
 1381 09d1 F4090000 		.4byte	0x9f4
 1382 09d5 70       		.byte	0x70
 1383 09d6 12       		.uleb128 0x12
 1384 09d7 A6090000 		.4byte	.LASF185
 1385 09db 01       		.byte	0x1
 1386 09dc 1205     		.2byte	0x512
 1387 09de B8000000 		.4byte	0xb8
 1388 09e2 74       		.byte	0x74
 1389 09e3 00       		.byte	0
 1390 09e4 07       		.uleb128 0x7
 1391 09e5 B8000000 		.4byte	0xb8
 1392 09e9 F4090000 		.4byte	0x9f4
 1393 09ed 08       		.uleb128 0x8
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccKBcLBo.s 			page 55


 1394 09ee C3000000 		.4byte	0xc3
 1395 09f2 0F       		.byte	0xf
 1396 09f3 00       		.byte	0
 1397 09f4 02       		.uleb128 0x2
 1398 09f5 01       		.byte	0x1
 1399 09f6 02       		.byte	0x2
 1400 09f7 87080000 		.4byte	.LASF186
 1401 09fb 0D       		.uleb128 0xd
 1402 09fc C6010000 		.4byte	.LASF187
 1403 0a00 01       		.byte	0x1
 1404 0a01 1305     		.2byte	0x513
 1405 0a03 17090000 		.4byte	0x917
 1406 0a07 0E       		.uleb128 0xe
 1407 0a08 14       		.byte	0x14
 1408 0a09 09       		.byte	0x9
 1409 0a0a 3B       		.byte	0x3b
 1410 0a0b 4C0A0000 		.4byte	0xa4c
 1411 0a0f 0A       		.uleb128 0xa
 1412 0a10 25060000 		.4byte	.LASF188
 1413 0a14 09       		.byte	0x9
 1414 0a15 3D       		.byte	0x3d
 1415 0a16 B8000000 		.4byte	0xb8
 1416 0a1a 00       		.byte	0
 1417 0a1b 0A       		.uleb128 0xa
 1418 0a1c FE050000 		.4byte	.LASF189
 1419 0a20 09       		.byte	0x9
 1420 0a21 3E       		.byte	0x3e
 1421 0a22 B8000000 		.4byte	0xb8
 1422 0a26 04       		.byte	0x4
 1423 0a27 0A       		.uleb128 0xa
 1424 0a28 DF030000 		.4byte	.LASF190
 1425 0a2c 09       		.byte	0x9
 1426 0a2d 3F       		.byte	0x3f
 1427 0a2e 4C0A0000 		.4byte	0xa4c
 1428 0a32 08       		.byte	0x8
 1429 0a33 0A       		.uleb128 0xa
 1430 0a34 410A0000 		.4byte	.LASF191
 1431 0a38 09       		.byte	0x9
 1432 0a39 40       		.byte	0x40
 1433 0a3a B8000000 		.4byte	0xb8
 1434 0a3e 0C       		.byte	0xc
 1435 0a3f 0A       		.uleb128 0xa
 1436 0a40 2C020000 		.4byte	.LASF192
 1437 0a44 09       		.byte	0x9
 1438 0a45 45       		.byte	0x45
 1439 0a46 B8000000 		.4byte	0xb8
 1440 0a4a 10       		.byte	0x10
 1441 0a4b 00       		.byte	0
 1442 0a4c 13       		.uleb128 0x13
 1443 0a4d 04       		.byte	0x4
 1444 0a4e 520A0000 		.4byte	0xa52
 1445 0a52 06       		.uleb128 0x6
 1446 0a53 FB090000 		.4byte	0x9fb
 1447 0a57 03       		.uleb128 0x3
 1448 0a58 0C0B0000 		.4byte	.LASF193
 1449 0a5c 09       		.byte	0x9
 1450 0a5d 48       		.byte	0x48
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccKBcLBo.s 			page 56


 1451 0a5e 070A0000 		.4byte	0xa07
 1452 0a62 14       		.uleb128 0x14
 1453 0a63 E9070000 		.4byte	.LASF201
 1454 0a67 01       		.byte	0x1
 1455 0a68 1206     		.2byte	0x612
 1456 0a6a B8000000 		.4byte	0xb8
 1457 0a6e 00000000 		.4byte	.LFB83
 1458 0a72 18000000 		.4byte	.LFE83-.LFB83
 1459 0a76 01       		.uleb128 0x1
 1460 0a77 9C       		.byte	0x9c
 1461 0a78 8C0A0000 		.4byte	0xa8c
 1462 0a7c 15       		.uleb128 0x15
 1463 0a7d A0060000 		.4byte	.LASF194
 1464 0a81 01       		.byte	0x1
 1465 0a82 1206     		.2byte	0x612
 1466 0a84 8C0A0000 		.4byte	0xa8c
 1467 0a88 02       		.uleb128 0x2
 1468 0a89 91       		.byte	0x91
 1469 0a8a 74       		.sleb128 -12
 1470 0a8b 00       		.byte	0
 1471 0a8c 13       		.uleb128 0x13
 1472 0a8d 04       		.byte	0x4
 1473 0a8e 920A0000 		.4byte	0xa92
 1474 0a92 06       		.uleb128 0x6
 1475 0a93 6F040000 		.4byte	0x46f
 1476 0a97 16       		.uleb128 0x16
 1477 0a98 00000000 		.4byte	.LASF202
 1478 0a9c 01       		.byte	0x1
 1479 0a9d 2F06     		.2byte	0x62f
 1480 0a9f 00000000 		.4byte	.LFB84
 1481 0aa3 40000000 		.4byte	.LFE84-.LFB84
 1482 0aa7 01       		.uleb128 0x1
 1483 0aa8 9C       		.byte	0x9c
 1484 0aa9 CC0A0000 		.4byte	0xacc
 1485 0aad 15       		.uleb128 0x15
 1486 0aae A0060000 		.4byte	.LASF194
 1487 0ab2 01       		.byte	0x1
 1488 0ab3 2F06     		.2byte	0x62f
 1489 0ab5 CC0A0000 		.4byte	0xacc
 1490 0ab9 02       		.uleb128 0x2
 1491 0aba 91       		.byte	0x91
 1492 0abb 74       		.sleb128 -12
 1493 0abc 15       		.uleb128 0x15
 1494 0abd DD080000 		.4byte	.LASF179
 1495 0ac1 01       		.byte	0x1
 1496 0ac2 2F06     		.2byte	0x62f
 1497 0ac4 B8000000 		.4byte	0xb8
 1498 0ac8 02       		.uleb128 0x2
 1499 0ac9 91       		.byte	0x91
 1500 0aca 70       		.sleb128 -16
 1501 0acb 00       		.byte	0
 1502 0acc 13       		.uleb128 0x13
 1503 0acd 04       		.byte	0x4
 1504 0ace 6F040000 		.4byte	0x46f
 1505 0ad2 17       		.uleb128 0x17
 1506 0ad3 6A000000 		.4byte	.LASF203
 1507 0ad7 02       		.byte	0x2
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccKBcLBo.s 			page 57


 1508 0ad8 40       		.byte	0x40
 1509 0ad9 00000000 		.4byte	.LFB184
 1510 0add 34000000 		.4byte	.LFE184-.LFB184
 1511 0ae1 01       		.uleb128 0x1
 1512 0ae2 9C       		.byte	0x9c
 1513 0ae3 F60A0000 		.4byte	0xaf6
 1514 0ae7 18       		.uleb128 0x18
 1515 0ae8 6E030000 		.4byte	.LASF204
 1516 0aec 02       		.byte	0x2
 1517 0aed 42       		.byte	0x42
 1518 0aee B8000000 		.4byte	0xb8
 1519 0af2 02       		.uleb128 0x2
 1520 0af3 91       		.byte	0x91
 1521 0af4 74       		.sleb128 -12
 1522 0af5 00       		.byte	0
 1523 0af6 19       		.uleb128 0x19
 1524 0af7 0D080000 		.4byte	.LASF195
 1525 0afb 07       		.byte	0x7
 1526 0afc A7       		.byte	0xa7
 1527 0afd 010B0000 		.4byte	0xb01
 1528 0b01 13       		.uleb128 0x13
 1529 0b02 04       		.byte	0x4
 1530 0b03 070B0000 		.4byte	0xb07
 1531 0b07 06       		.uleb128 0x6
 1532 0b08 93080000 		.4byte	0x893
 1533 0b0c 1A       		.uleb128 0x1a
 1534 0b0d 74010000 		.4byte	.LASF196
 1535 0b11 09       		.byte	0x9
 1536 0b12 6001     		.2byte	0x160
 1537 0b14 B8000000 		.4byte	0xb8
 1538 0b18 07       		.uleb128 0x7
 1539 0b19 280B0000 		.4byte	0xb28
 1540 0b1d 280B0000 		.4byte	0xb28
 1541 0b21 08       		.uleb128 0x8
 1542 0b22 C3000000 		.4byte	0xc3
 1543 0b26 00       		.byte	0
 1544 0b27 00       		.byte	0
 1545 0b28 06       		.uleb128 0x6
 1546 0b29 570A0000 		.4byte	0xa57
 1547 0b2d 1A       		.uleb128 0x1a
 1548 0b2e 1E050000 		.4byte	.LASF197
 1549 0b32 09       		.byte	0x9
 1550 0b33 6401     		.2byte	0x164
 1551 0b35 390B0000 		.4byte	0xb39
 1552 0b39 06       		.uleb128 0x6
 1553 0b3a 180B0000 		.4byte	0xb18
 1554 0b3e 00       		.byte	0
 1555              		.section	.debug_abbrev,"",%progbits
 1556              	.Ldebug_abbrev0:
 1557 0000 01       		.uleb128 0x1
 1558 0001 11       		.uleb128 0x11
 1559 0002 01       		.byte	0x1
 1560 0003 25       		.uleb128 0x25
 1561 0004 0E       		.uleb128 0xe
 1562 0005 13       		.uleb128 0x13
 1563 0006 0B       		.uleb128 0xb
 1564 0007 03       		.uleb128 0x3
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccKBcLBo.s 			page 58


 1565 0008 0E       		.uleb128 0xe
 1566 0009 1B       		.uleb128 0x1b
 1567 000a 0E       		.uleb128 0xe
 1568 000b 55       		.uleb128 0x55
 1569 000c 17       		.uleb128 0x17
 1570 000d 11       		.uleb128 0x11
 1571 000e 01       		.uleb128 0x1
 1572 000f 10       		.uleb128 0x10
 1573 0010 17       		.uleb128 0x17
 1574 0011 00       		.byte	0
 1575 0012 00       		.byte	0
 1576 0013 02       		.uleb128 0x2
 1577 0014 24       		.uleb128 0x24
 1578 0015 00       		.byte	0
 1579 0016 0B       		.uleb128 0xb
 1580 0017 0B       		.uleb128 0xb
 1581 0018 3E       		.uleb128 0x3e
 1582 0019 0B       		.uleb128 0xb
 1583 001a 03       		.uleb128 0x3
 1584 001b 0E       		.uleb128 0xe
 1585 001c 00       		.byte	0
 1586 001d 00       		.byte	0
 1587 001e 03       		.uleb128 0x3
 1588 001f 16       		.uleb128 0x16
 1589 0020 00       		.byte	0
 1590 0021 03       		.uleb128 0x3
 1591 0022 0E       		.uleb128 0xe
 1592 0023 3A       		.uleb128 0x3a
 1593 0024 0B       		.uleb128 0xb
 1594 0025 3B       		.uleb128 0x3b
 1595 0026 0B       		.uleb128 0xb
 1596 0027 49       		.uleb128 0x49
 1597 0028 13       		.uleb128 0x13
 1598 0029 00       		.byte	0
 1599 002a 00       		.byte	0
 1600 002b 04       		.uleb128 0x4
 1601 002c 24       		.uleb128 0x24
 1602 002d 00       		.byte	0
 1603 002e 0B       		.uleb128 0xb
 1604 002f 0B       		.uleb128 0xb
 1605 0030 3E       		.uleb128 0x3e
 1606 0031 0B       		.uleb128 0xb
 1607 0032 03       		.uleb128 0x3
 1608 0033 08       		.uleb128 0x8
 1609 0034 00       		.byte	0
 1610 0035 00       		.byte	0
 1611 0036 05       		.uleb128 0x5
 1612 0037 35       		.uleb128 0x35
 1613 0038 00       		.byte	0
 1614 0039 49       		.uleb128 0x49
 1615 003a 13       		.uleb128 0x13
 1616 003b 00       		.byte	0
 1617 003c 00       		.byte	0
 1618 003d 06       		.uleb128 0x6
 1619 003e 26       		.uleb128 0x26
 1620 003f 00       		.byte	0
 1621 0040 49       		.uleb128 0x49
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccKBcLBo.s 			page 59


 1622 0041 13       		.uleb128 0x13
 1623 0042 00       		.byte	0
 1624 0043 00       		.byte	0
 1625 0044 07       		.uleb128 0x7
 1626 0045 01       		.uleb128 0x1
 1627 0046 01       		.byte	0x1
 1628 0047 49       		.uleb128 0x49
 1629 0048 13       		.uleb128 0x13
 1630 0049 01       		.uleb128 0x1
 1631 004a 13       		.uleb128 0x13
 1632 004b 00       		.byte	0
 1633 004c 00       		.byte	0
 1634 004d 08       		.uleb128 0x8
 1635 004e 21       		.uleb128 0x21
 1636 004f 00       		.byte	0
 1637 0050 49       		.uleb128 0x49
 1638 0051 13       		.uleb128 0x13
 1639 0052 2F       		.uleb128 0x2f
 1640 0053 0B       		.uleb128 0xb
 1641 0054 00       		.byte	0
 1642 0055 00       		.byte	0
 1643 0056 09       		.uleb128 0x9
 1644 0057 13       		.uleb128 0x13
 1645 0058 01       		.byte	0x1
 1646 0059 0B       		.uleb128 0xb
 1647 005a 05       		.uleb128 0x5
 1648 005b 3A       		.uleb128 0x3a
 1649 005c 0B       		.uleb128 0xb
 1650 005d 3B       		.uleb128 0x3b
 1651 005e 0B       		.uleb128 0xb
 1652 005f 01       		.uleb128 0x1
 1653 0060 13       		.uleb128 0x13
 1654 0061 00       		.byte	0
 1655 0062 00       		.byte	0
 1656 0063 0A       		.uleb128 0xa
 1657 0064 0D       		.uleb128 0xd
 1658 0065 00       		.byte	0
 1659 0066 03       		.uleb128 0x3
 1660 0067 0E       		.uleb128 0xe
 1661 0068 3A       		.uleb128 0x3a
 1662 0069 0B       		.uleb128 0xb
 1663 006a 3B       		.uleb128 0x3b
 1664 006b 0B       		.uleb128 0xb
 1665 006c 49       		.uleb128 0x49
 1666 006d 13       		.uleb128 0x13
 1667 006e 38       		.uleb128 0x38
 1668 006f 0B       		.uleb128 0xb
 1669 0070 00       		.byte	0
 1670 0071 00       		.byte	0
 1671 0072 0B       		.uleb128 0xb
 1672 0073 0D       		.uleb128 0xd
 1673 0074 00       		.byte	0
 1674 0075 03       		.uleb128 0x3
 1675 0076 0E       		.uleb128 0xe
 1676 0077 3A       		.uleb128 0x3a
 1677 0078 0B       		.uleb128 0xb
 1678 0079 3B       		.uleb128 0x3b
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccKBcLBo.s 			page 60


 1679 007a 0B       		.uleb128 0xb
 1680 007b 49       		.uleb128 0x49
 1681 007c 13       		.uleb128 0x13
 1682 007d 38       		.uleb128 0x38
 1683 007e 05       		.uleb128 0x5
 1684 007f 00       		.byte	0
 1685 0080 00       		.byte	0
 1686 0081 0C       		.uleb128 0xc
 1687 0082 21       		.uleb128 0x21
 1688 0083 00       		.byte	0
 1689 0084 49       		.uleb128 0x49
 1690 0085 13       		.uleb128 0x13
 1691 0086 2F       		.uleb128 0x2f
 1692 0087 05       		.uleb128 0x5
 1693 0088 00       		.byte	0
 1694 0089 00       		.byte	0
 1695 008a 0D       		.uleb128 0xd
 1696 008b 16       		.uleb128 0x16
 1697 008c 00       		.byte	0
 1698 008d 03       		.uleb128 0x3
 1699 008e 0E       		.uleb128 0xe
 1700 008f 3A       		.uleb128 0x3a
 1701 0090 0B       		.uleb128 0xb
 1702 0091 3B       		.uleb128 0x3b
 1703 0092 05       		.uleb128 0x5
 1704 0093 49       		.uleb128 0x49
 1705 0094 13       		.uleb128 0x13
 1706 0095 00       		.byte	0
 1707 0096 00       		.byte	0
 1708 0097 0E       		.uleb128 0xe
 1709 0098 13       		.uleb128 0x13
 1710 0099 01       		.byte	0x1
 1711 009a 0B       		.uleb128 0xb
 1712 009b 0B       		.uleb128 0xb
 1713 009c 3A       		.uleb128 0x3a
 1714 009d 0B       		.uleb128 0xb
 1715 009e 3B       		.uleb128 0x3b
 1716 009f 0B       		.uleb128 0xb
 1717 00a0 01       		.uleb128 0x1
 1718 00a1 13       		.uleb128 0x13
 1719 00a2 00       		.byte	0
 1720 00a3 00       		.byte	0
 1721 00a4 0F       		.uleb128 0xf
 1722 00a5 04       		.uleb128 0x4
 1723 00a6 01       		.byte	0x1
 1724 00a7 0B       		.uleb128 0xb
 1725 00a8 0B       		.uleb128 0xb
 1726 00a9 49       		.uleb128 0x49
 1727 00aa 13       		.uleb128 0x13
 1728 00ab 3A       		.uleb128 0x3a
 1729 00ac 0B       		.uleb128 0xb
 1730 00ad 3B       		.uleb128 0x3b
 1731 00ae 05       		.uleb128 0x5
 1732 00af 01       		.uleb128 0x1
 1733 00b0 13       		.uleb128 0x13
 1734 00b1 00       		.byte	0
 1735 00b2 00       		.byte	0
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccKBcLBo.s 			page 61


 1736 00b3 10       		.uleb128 0x10
 1737 00b4 28       		.uleb128 0x28
 1738 00b5 00       		.byte	0
 1739 00b6 03       		.uleb128 0x3
 1740 00b7 0E       		.uleb128 0xe
 1741 00b8 1C       		.uleb128 0x1c
 1742 00b9 0B       		.uleb128 0xb
 1743 00ba 00       		.byte	0
 1744 00bb 00       		.byte	0
 1745 00bc 11       		.uleb128 0x11
 1746 00bd 13       		.uleb128 0x13
 1747 00be 01       		.byte	0x1
 1748 00bf 0B       		.uleb128 0xb
 1749 00c0 0B       		.uleb128 0xb
 1750 00c1 3A       		.uleb128 0x3a
 1751 00c2 0B       		.uleb128 0xb
 1752 00c3 3B       		.uleb128 0x3b
 1753 00c4 05       		.uleb128 0x5
 1754 00c5 01       		.uleb128 0x1
 1755 00c6 13       		.uleb128 0x13
 1756 00c7 00       		.byte	0
 1757 00c8 00       		.byte	0
 1758 00c9 12       		.uleb128 0x12
 1759 00ca 0D       		.uleb128 0xd
 1760 00cb 00       		.byte	0
 1761 00cc 03       		.uleb128 0x3
 1762 00cd 0E       		.uleb128 0xe
 1763 00ce 3A       		.uleb128 0x3a
 1764 00cf 0B       		.uleb128 0xb
 1765 00d0 3B       		.uleb128 0x3b
 1766 00d1 05       		.uleb128 0x5
 1767 00d2 49       		.uleb128 0x49
 1768 00d3 13       		.uleb128 0x13
 1769 00d4 38       		.uleb128 0x38
 1770 00d5 0B       		.uleb128 0xb
 1771 00d6 00       		.byte	0
 1772 00d7 00       		.byte	0
 1773 00d8 13       		.uleb128 0x13
 1774 00d9 0F       		.uleb128 0xf
 1775 00da 00       		.byte	0
 1776 00db 0B       		.uleb128 0xb
 1777 00dc 0B       		.uleb128 0xb
 1778 00dd 49       		.uleb128 0x49
 1779 00de 13       		.uleb128 0x13
 1780 00df 00       		.byte	0
 1781 00e0 00       		.byte	0
 1782 00e1 14       		.uleb128 0x14
 1783 00e2 2E       		.uleb128 0x2e
 1784 00e3 01       		.byte	0x1
 1785 00e4 03       		.uleb128 0x3
 1786 00e5 0E       		.uleb128 0xe
 1787 00e6 3A       		.uleb128 0x3a
 1788 00e7 0B       		.uleb128 0xb
 1789 00e8 3B       		.uleb128 0x3b
 1790 00e9 05       		.uleb128 0x5
 1791 00ea 27       		.uleb128 0x27
 1792 00eb 19       		.uleb128 0x19
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccKBcLBo.s 			page 62


 1793 00ec 49       		.uleb128 0x49
 1794 00ed 13       		.uleb128 0x13
 1795 00ee 11       		.uleb128 0x11
 1796 00ef 01       		.uleb128 0x1
 1797 00f0 12       		.uleb128 0x12
 1798 00f1 06       		.uleb128 0x6
 1799 00f2 40       		.uleb128 0x40
 1800 00f3 18       		.uleb128 0x18
 1801 00f4 9742     		.uleb128 0x2117
 1802 00f6 19       		.uleb128 0x19
 1803 00f7 01       		.uleb128 0x1
 1804 00f8 13       		.uleb128 0x13
 1805 00f9 00       		.byte	0
 1806 00fa 00       		.byte	0
 1807 00fb 15       		.uleb128 0x15
 1808 00fc 05       		.uleb128 0x5
 1809 00fd 00       		.byte	0
 1810 00fe 03       		.uleb128 0x3
 1811 00ff 0E       		.uleb128 0xe
 1812 0100 3A       		.uleb128 0x3a
 1813 0101 0B       		.uleb128 0xb
 1814 0102 3B       		.uleb128 0x3b
 1815 0103 05       		.uleb128 0x5
 1816 0104 49       		.uleb128 0x49
 1817 0105 13       		.uleb128 0x13
 1818 0106 02       		.uleb128 0x2
 1819 0107 18       		.uleb128 0x18
 1820 0108 00       		.byte	0
 1821 0109 00       		.byte	0
 1822 010a 16       		.uleb128 0x16
 1823 010b 2E       		.uleb128 0x2e
 1824 010c 01       		.byte	0x1
 1825 010d 03       		.uleb128 0x3
 1826 010e 0E       		.uleb128 0xe
 1827 010f 3A       		.uleb128 0x3a
 1828 0110 0B       		.uleb128 0xb
 1829 0111 3B       		.uleb128 0x3b
 1830 0112 05       		.uleb128 0x5
 1831 0113 27       		.uleb128 0x27
 1832 0114 19       		.uleb128 0x19
 1833 0115 11       		.uleb128 0x11
 1834 0116 01       		.uleb128 0x1
 1835 0117 12       		.uleb128 0x12
 1836 0118 06       		.uleb128 0x6
 1837 0119 40       		.uleb128 0x40
 1838 011a 18       		.uleb128 0x18
 1839 011b 9642     		.uleb128 0x2116
 1840 011d 19       		.uleb128 0x19
 1841 011e 01       		.uleb128 0x1
 1842 011f 13       		.uleb128 0x13
 1843 0120 00       		.byte	0
 1844 0121 00       		.byte	0
 1845 0122 17       		.uleb128 0x17
 1846 0123 2E       		.uleb128 0x2e
 1847 0124 01       		.byte	0x1
 1848 0125 3F       		.uleb128 0x3f
 1849 0126 19       		.uleb128 0x19
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccKBcLBo.s 			page 63


 1850 0127 03       		.uleb128 0x3
 1851 0128 0E       		.uleb128 0xe
 1852 0129 3A       		.uleb128 0x3a
 1853 012a 0B       		.uleb128 0xb
 1854 012b 3B       		.uleb128 0x3b
 1855 012c 0B       		.uleb128 0xb
 1856 012d 27       		.uleb128 0x27
 1857 012e 19       		.uleb128 0x19
 1858 012f 11       		.uleb128 0x11
 1859 0130 01       		.uleb128 0x1
 1860 0131 12       		.uleb128 0x12
 1861 0132 06       		.uleb128 0x6
 1862 0133 40       		.uleb128 0x40
 1863 0134 18       		.uleb128 0x18
 1864 0135 9642     		.uleb128 0x2116
 1865 0137 19       		.uleb128 0x19
 1866 0138 01       		.uleb128 0x1
 1867 0139 13       		.uleb128 0x13
 1868 013a 00       		.byte	0
 1869 013b 00       		.byte	0
 1870 013c 18       		.uleb128 0x18
 1871 013d 34       		.uleb128 0x34
 1872 013e 00       		.byte	0
 1873 013f 03       		.uleb128 0x3
 1874 0140 0E       		.uleb128 0xe
 1875 0141 3A       		.uleb128 0x3a
 1876 0142 0B       		.uleb128 0xb
 1877 0143 3B       		.uleb128 0x3b
 1878 0144 0B       		.uleb128 0xb
 1879 0145 49       		.uleb128 0x49
 1880 0146 13       		.uleb128 0x13
 1881 0147 02       		.uleb128 0x2
 1882 0148 18       		.uleb128 0x18
 1883 0149 00       		.byte	0
 1884 014a 00       		.byte	0
 1885 014b 19       		.uleb128 0x19
 1886 014c 34       		.uleb128 0x34
 1887 014d 00       		.byte	0
 1888 014e 03       		.uleb128 0x3
 1889 014f 0E       		.uleb128 0xe
 1890 0150 3A       		.uleb128 0x3a
 1891 0151 0B       		.uleb128 0xb
 1892 0152 3B       		.uleb128 0x3b
 1893 0153 0B       		.uleb128 0xb
 1894 0154 49       		.uleb128 0x49
 1895 0155 13       		.uleb128 0x13
 1896 0156 3F       		.uleb128 0x3f
 1897 0157 19       		.uleb128 0x19
 1898 0158 3C       		.uleb128 0x3c
 1899 0159 19       		.uleb128 0x19
 1900 015a 00       		.byte	0
 1901 015b 00       		.byte	0
 1902 015c 1A       		.uleb128 0x1a
 1903 015d 34       		.uleb128 0x34
 1904 015e 00       		.byte	0
 1905 015f 03       		.uleb128 0x3
 1906 0160 0E       		.uleb128 0xe
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccKBcLBo.s 			page 64


 1907 0161 3A       		.uleb128 0x3a
 1908 0162 0B       		.uleb128 0xb
 1909 0163 3B       		.uleb128 0x3b
 1910 0164 05       		.uleb128 0x5
 1911 0165 49       		.uleb128 0x49
 1912 0166 13       		.uleb128 0x13
 1913 0167 3F       		.uleb128 0x3f
 1914 0168 19       		.uleb128 0x19
 1915 0169 3C       		.uleb128 0x3c
 1916 016a 19       		.uleb128 0x19
 1917 016b 00       		.byte	0
 1918 016c 00       		.byte	0
 1919 016d 00       		.byte	0
 1920              		.section	.debug_aranges,"",%progbits
 1921 0000 2C000000 		.4byte	0x2c
 1922 0004 0200     		.2byte	0x2
 1923 0006 00000000 		.4byte	.Ldebug_info0
 1924 000a 04       		.byte	0x4
 1925 000b 00       		.byte	0
 1926 000c 0000     		.2byte	0
 1927 000e 0000     		.2byte	0
 1928 0010 00000000 		.4byte	.LFB83
 1929 0014 18000000 		.4byte	.LFE83-.LFB83
 1930 0018 00000000 		.4byte	.LFB84
 1931 001c 40000000 		.4byte	.LFE84-.LFB84
 1932 0020 00000000 		.4byte	.LFB184
 1933 0024 34000000 		.4byte	.LFE184-.LFB184
 1934 0028 00000000 		.4byte	0
 1935 002c 00000000 		.4byte	0
 1936              		.section	.debug_ranges,"",%progbits
 1937              	.Ldebug_ranges0:
 1938 0000 00000000 		.4byte	.LFB83
 1939 0004 18000000 		.4byte	.LFE83
 1940 0008 00000000 		.4byte	.LFB84
 1941 000c 40000000 		.4byte	.LFE84
 1942 0010 00000000 		.4byte	.LFB184
 1943 0014 34000000 		.4byte	.LFE184
 1944 0018 00000000 		.4byte	0
 1945 001c 00000000 		.4byte	0
 1946              		.section	.debug_line,"",%progbits
 1947              	.Ldebug_line0:
 1948 0000 DA020000 		.section	.debug_str,"MS",%progbits,1
 1948      02008F02 
 1948      00000201 
 1948      FB0E0D00 
 1948      01010101 
 1949              	.LASF202:
 1950 0000 43795F53 		.ascii	"Cy_SAR_ClearInterrupt\000"
 1950      41525F43 
 1950      6C656172 
 1950      496E7465 
 1950      72727570 
 1951              	.LASF57:
 1952 0016 4156475F 		.ascii	"AVG_STAT\000"
 1952      53544154 
 1952      00
 1953              	.LASF52:
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccKBcLBo.s 			page 65


 1954 001f 494E4A5F 		.ascii	"INJ_CHAN_CONFIG\000"
 1954      4348414E 
 1954      5F434F4E 
 1954      46494700 
 1955              	.LASF116:
 1956 002f 666C6173 		.ascii	"flashCtlMainWs3Freq\000"
 1956      6843746C 
 1956      4D61696E 
 1956      57733346 
 1956      72657100 
 1957              	.LASF138:
 1958 0043 6770696F 		.ascii	"gpioPrtCfgInOffset\000"
 1958      50727443 
 1958      6667496E 
 1958      4F666673 
 1958      657400
 1959              	.LASF156:
 1960 0056 6970634C 		.ascii	"ipcLockStatusOffset\000"
 1960      6F636B53 
 1960      74617475 
 1960      734F6666 
 1960      73657400 
 1961              	.LASF203:
 1962 006a 4144435F 		.ascii	"ADC_1_ISR\000"
 1962      315F4953 
 1962      5200
 1963              	.LASF82:
 1964 0074 63727970 		.ascii	"cryptoVersion\000"
 1964      746F5665 
 1964      7273696F 
 1964      6E00
 1965              	.LASF100:
 1966 0082 70657269 		.ascii	"periClockNr\000"
 1966      436C6F63 
 1966      6B4E7200 
 1967              	.LASF78:
 1968 008e 70617373 		.ascii	"passBase\000"
 1968      42617365 
 1968      00
 1969              	.LASF72:
 1970 0097 666C6173 		.ascii	"flashcBase\000"
 1970      68634261 
 1970      736500
 1971              	.LASF59:
 1972 00a2 4D55585F 		.ascii	"MUX_SWITCH0\000"
 1972      53574954 
 1972      43483000 
 1973              	.LASF91:
 1974 00ae 63707573 		.ascii	"cpussIpcIrqNr\000"
 1974      73497063 
 1974      4972714E 
 1974      7200
 1975              	.LASF3:
 1976 00bc 5F5F7569 		.ascii	"__uint8_t\000"
 1976      6E74385F 
 1976      7400
 1977              	.LASF180:
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccKBcLBo.s 			page 66


 1978 00c6 73617449 		.ascii	"satIntrMask\000"
 1978      6E74724D 
 1978      61736B00 
 1979              	.LASF135:
 1980 00d2 70657269 		.ascii	"periDiv24_5CtlOffset\000"
 1980      44697632 
 1980      345F3543 
 1980      746C4F66 
 1980      66736574 
 1981              	.LASF142:
 1982 00e7 63707573 		.ascii	"cpussCm4ClockCtlOffset\000"
 1982      73436D34 
 1982      436C6F63 
 1982      6B43746C 
 1982      4F666673 
 1983              	.LASF24:
 1984 00fe 52414E47 		.ascii	"RANGE_COND\000"
 1984      455F434F 
 1984      4E4400
 1985              	.LASF71:
 1986 0109 63707573 		.ascii	"cpussBase\000"
 1986      73426173 
 1986      6500
 1987              	.LASF120:
 1988 0113 64774368 		.ascii	"dwChCtlPrioPos\000"
 1988      43746C50 
 1988      72696F50 
 1988      6F7300
 1989              	.LASF11:
 1990 0122 6C6F6E67 		.ascii	"long long unsigned int\000"
 1990      206C6F6E 
 1990      6720756E 
 1990      7369676E 
 1990      65642069 
 1991              	.LASF168:
 1992 0139 43595F53 		.ascii	"CY_SAR_INTR_EOS_MASK\000"
 1992      41525F49 
 1992      4E54525F 
 1992      454F535F 
 1992      4D41534B 
 1993              	.LASF124:
 1994 014e 70657269 		.ascii	"periTrCmdOffset\000"
 1994      5472436D 
 1994      644F6666 
 1994      73657400 
 1995              	.LASF148:
 1996 015e 63707573 		.ascii	"cpussSysTickCtlOffset\000"
 1996      73537973 
 1996      5469636B 
 1996      43746C4F 
 1996      66667365 
 1997              	.LASF196:
 1998 0174 4144435F 		.ascii	"ADC_1_currentConfig\000"
 1998      315F6375 
 1998      7272656E 
 1998      74436F6E 
 1998      66696700 
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccKBcLBo.s 			page 67


 1999              	.LASF109:
 2000 0188 666C6173 		.ascii	"flashPipeRequired\000"
 2000      68506970 
 2000      65526571 
 2000      75697265 
 2000      6400
 2001              	.LASF66:
 2002 019a 414E415F 		.ascii	"ANA_TRIM0\000"
 2002      5452494D 
 2002      3000
 2003              	.LASF67:
 2004 01a4 414E415F 		.ascii	"ANA_TRIM1\000"
 2004      5452494D 
 2004      3100
 2005              	.LASF48:
 2006 01ae 52414E47 		.ascii	"RANGE_INTR_MASK\000"
 2006      455F494E 
 2006      54525F4D 
 2006      41534B00 
 2007              	.LASF14:
 2008 01be 696E7431 		.ascii	"int16_t\000"
 2008      365F7400 
 2009              	.LASF187:
 2010 01c6 63795F73 		.ascii	"cy_stc_sar_config_t\000"
 2010      74635F73 
 2010      61725F63 
 2010      6F6E6669 
 2010      675F7400 
 2011              	.LASF10:
 2012 01da 6C6F6E67 		.ascii	"long long int\000"
 2012      206C6F6E 
 2012      6720696E 
 2012      7400
 2013              	.LASF2:
 2014 01e8 7369676E 		.ascii	"signed char\000"
 2014      65642063 
 2014      68617200 
 2015              	.LASF129:
 2016 01f4 70657269 		.ascii	"periDivCmdTypeSelPos\000"
 2016      44697643 
 2016      6D645479 
 2016      70655365 
 2016      6C506F73 
 2017              	.LASF166:
 2018 0209 63795F65 		.ascii	"cy_en_sar_range_detect_condition_t\000"
 2018      6E5F7361 
 2018      725F7261 
 2018      6E67655F 
 2018      64657465 
 2019              	.LASF192:
 2020 022c 636C6B44 		.ascii	"clkDivider\000"
 2020      69766964 
 2020      657200
 2021              	.LASF75:
 2022 0237 70726F74 		.ascii	"protBase\000"
 2022      42617365 
 2022      00
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccKBcLBo.s 			page 68


 2023              	.LASF87:
 2024 0240 69706356 		.ascii	"ipcVersion\000"
 2024      65727369 
 2024      6F6E00
 2025              	.LASF149:
 2026 024b 63707573 		.ascii	"cpussCm0NmiCtlOffset\000"
 2026      73436D30 
 2026      4E6D6943 
 2026      746C4F66 
 2026      66736574 
 2027              	.LASF65:
 2028 0260 52455345 		.ascii	"RESERVED10\000"
 2028      52564544 
 2028      313000
 2029              	.LASF76:
 2030 026b 6873696F 		.ascii	"hsiomBase\000"
 2030      6D426173 
 2030      6500
 2031              	.LASF181:
 2032 0275 72616E67 		.ascii	"rangeIntrMask\000"
 2032      65496E74 
 2032      724D6173 
 2032      6B00
 2033              	.LASF162:
 2034 0283 43595F53 		.ascii	"CY_SAR_RANGE_COND_BELOW\000"
 2034      41525F52 
 2034      414E4745 
 2034      5F434F4E 
 2034      445F4245 
 2035              	.LASF170:
 2036 029b 43595F53 		.ascii	"CY_SAR_INTR_FW_COLLISION_MASK\000"
 2036      41525F49 
 2036      4E54525F 
 2036      46575F43 
 2036      4F4C4C49 
 2037              	.LASF7:
 2038 02b9 6C6F6E67 		.ascii	"long int\000"
 2038      20696E74 
 2038      00
 2039              	.LASF64:
 2040 02c2 4D55585F 		.ascii	"MUX_SWITCH_STATUS\000"
 2040      53574954 
 2040      43485F53 
 2040      54415455 
 2040      5300
 2041              	.LASF50:
 2042 02d4 494E5452 		.ascii	"INTR_CAUSE\000"
 2042      5F434155 
 2042      534500
 2043              	.LASF107:
 2044 02df 63727970 		.ascii	"cryptoMemSize\000"
 2044      746F4D65 
 2044      6D53697A 
 2044      6500
 2045              	.LASF54:
 2046 02ed 494E4A5F 		.ascii	"INJ_RESULT\000"
 2046      52455355 
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccKBcLBo.s 			page 69


 2046      4C5400
 2047              	.LASF73:
 2048 02f8 70657269 		.ascii	"periBase\000"
 2048      42617365 
 2048      00
 2049              	.LASF105:
 2050 0301 73797350 		.ascii	"sysPmSimoPresent\000"
 2050      6D53696D 
 2050      6F507265 
 2050      73656E74 
 2050      00
 2051              	.LASF164:
 2052 0312 43595F53 		.ascii	"CY_SAR_RANGE_COND_ABOVE\000"
 2052      41525F52 
 2052      414E4745 
 2052      5F434F4E 
 2052      445F4142 
 2053              	.LASF95:
 2054 032a 63707573 		.ascii	"cpussFmIrq\000"
 2054      73466D49 
 2054      727100
 2055              	.LASF161:
 2056 0335 646F7562 		.ascii	"double\000"
 2056      6C6500
 2057              	.LASF134:
 2058 033c 70657269 		.ascii	"periDiv16_5CtlOffset\000"
 2058      44697631 
 2058      365F3543 
 2058      746C4F66 
 2058      66736574 
 2059              	.LASF60:
 2060 0351 4D55585F 		.ascii	"MUX_SWITCH_CLEAR0\000"
 2060      53574954 
 2060      43485F43 
 2060      4C454152 
 2060      3000
 2061              	.LASF98:
 2062 0363 73727373 		.ascii	"srssNumPll\000"
 2062      4E756D50 
 2062      6C6C00
 2063              	.LASF204:
 2064 036e 696E7472 		.ascii	"intr_status\000"
 2064      5F737461 
 2064      74757300 
 2065              	.LASF173:
 2066 037a 73616D70 		.ascii	"sampleTime01\000"
 2066      6C655469 
 2066      6D653031 
 2066      00
 2067              	.LASF6:
 2068 0387 73686F72 		.ascii	"short unsigned int\000"
 2068      7420756E 
 2068      7369676E 
 2068      65642069 
 2068      6E7400
 2069              	.LASF139:
 2070 039a 6770696F 		.ascii	"gpioPrtCfgOutOffset\000"
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccKBcLBo.s 			page 70


 2070      50727443 
 2070      66674F75 
 2070      744F6666 
 2070      73657400 
 2071              	.LASF121:
 2072 03ae 64774368 		.ascii	"dwChCtlPreemptablePos\000"
 2072      43746C50 
 2072      7265656D 
 2072      70746162 
 2072      6C65506F 
 2073              	.LASF8:
 2074 03c4 5F5F7569 		.ascii	"__uint32_t\000"
 2074      6E743332 
 2074      5F7400
 2075              	.LASF102:
 2076 03cf 70617373 		.ascii	"passSarChannels\000"
 2076      53617243 
 2076      68616E6E 
 2076      656C7300 
 2077              	.LASF190:
 2078 03df 6877436F 		.ascii	"hwConfigStc\000"
 2078      6E666967 
 2078      53746300 
 2079              	.LASF21:
 2080 03eb 53414D50 		.ascii	"SAMPLE_TIME01\000"
 2080      4C455F54 
 2080      494D4530 
 2080      3100
 2081              	.LASF4:
 2082 03f9 5F5F696E 		.ascii	"__int16_t\000"
 2082      7431365F 
 2082      7400
 2083              	.LASF42:
 2084 0403 53415455 		.ascii	"SATURATE_INTR\000"
 2084      52415445 
 2084      5F494E54 
 2084      5200
 2085              	.LASF28:
 2086 0411 4348414E 		.ascii	"CHAN_CONFIG\000"
 2086      5F434F4E 
 2086      46494700 
 2087              	.LASF145:
 2088 041d 63707573 		.ascii	"cpussCm4PwrCtlOffset\000"
 2088      73436D34 
 2088      50777243 
 2088      746C4F66 
 2088      66736574 
 2089              	.LASF140:
 2090 0432 6770696F 		.ascii	"gpioPrtCfgSioOffset\000"
 2090      50727443 
 2090      66675369 
 2090      6F4F6666 
 2090      73657400 
 2091              	.LASF92:
 2092 0446 63707573 		.ascii	"cpussDwChNr\000"
 2092      73447743 
 2092      684E7200 
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccKBcLBo.s 			page 71


 2093              	.LASF12:
 2094 0452 756E7369 		.ascii	"unsigned int\000"
 2094      676E6564 
 2094      20696E74 
 2094      00
 2095              	.LASF17:
 2096 045f 73697A65 		.ascii	"sizetype\000"
 2096      74797065 
 2096      00
 2097              	.LASF158:
 2098 0468 63686172 		.ascii	"char_t\000"
 2098      5F7400
 2099              	.LASF125:
 2100 046f 70657269 		.ascii	"periTrCmdGrSelMsk\000"
 2100      5472436D 
 2100      64477253 
 2100      656C4D73 
 2100      6B00
 2101              	.LASF9:
 2102 0481 6C6F6E67 		.ascii	"long unsigned int\000"
 2102      20756E73 
 2102      69676E65 
 2102      6420696E 
 2102      7400
 2103              	.LASF127:
 2104 0493 70657269 		.ascii	"periTrGrSize\000"
 2104      54724772 
 2104      53697A65 
 2104      00
 2105              	.LASF36:
 2106 04a0 4348414E 		.ascii	"CHAN_WORK_NEWVALUE\000"
 2106      5F574F52 
 2106      4B5F4E45 
 2106      5756414C 
 2106      554500
 2107              	.LASF90:
 2108 04b3 63707573 		.ascii	"cpussIpcNr\000"
 2108      73497063 
 2108      4E7200
 2109              	.LASF62:
 2110 04be 4D55585F 		.ascii	"MUX_SWITCH_DS_CTRL\000"
 2110      53574954 
 2110      43485F44 
 2110      535F4354 
 2110      524C00
 2111              	.LASF40:
 2112 04d1 494E5452 		.ascii	"INTR_MASK\000"
 2112      5F4D4153 
 2112      4B00
 2113              	.LASF77:
 2114 04db 6770696F 		.ascii	"gpioBase\000"
 2114      42617365 
 2114      00
 2115              	.LASF69:
 2116 04e4 5341525F 		.ascii	"SAR_Type\000"
 2116      54797065 
 2116      00
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccKBcLBo.s 			page 72


 2117              	.LASF115:
 2118 04ed 666C6173 		.ascii	"flashCtlMainWs2Freq\000"
 2118      6843746C 
 2118      4D61696E 
 2118      57733246 
 2118      72657100 
 2119              	.LASF126:
 2120 0501 70657269 		.ascii	"periTrGrOffset\000"
 2120      54724772 
 2120      4F666673 
 2120      657400
 2121              	.LASF153:
 2122 0510 63707573 		.ascii	"cpussRam1Ctl0\000"
 2122      7352616D 
 2122      3143746C 
 2122      3000
 2123              	.LASF197:
 2124 051e 4144435F 		.ascii	"ADC_1_allConfigs\000"
 2124      315F616C 
 2124      6C436F6E 
 2124      66696773 
 2124      00
 2125              	.LASF175:
 2126 052f 72616E67 		.ascii	"rangeThres\000"
 2126      65546872 
 2126      657300
 2127              	.LASF46:
 2128 053a 52414E47 		.ascii	"RANGE_INTR\000"
 2128      455F494E 
 2128      545200
 2129              	.LASF34:
 2130 0545 4348414E 		.ascii	"CHAN_WORK_UPDATED\000"
 2130      5F574F52 
 2130      4B5F5550 
 2130      44415445 
 2130      4400
 2131              	.LASF198:
 2132 0557 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2132      43313120 
 2132      352E342E 
 2132      31203230 
 2132      31363036 
 2133 058a 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0plus -mthumb -"
 2133      20726576 
 2133      6973696F 
 2133      6E203233 
 2133      37373135 
 2134 05bd 67202D4F 		.ascii	"g -O0 -ffunction-sections -ffat-lto-objects\000"
 2134      30202D66 
 2134      66756E63 
 2134      74696F6E 
 2134      2D736563 
 2135              	.LASF85:
 2136 05e9 6770696F 		.ascii	"gpioVersion\000"
 2136      56657273 
 2136      696F6E00 
 2137              	.LASF15:
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccKBcLBo.s 			page 73


 2138 05f5 75696E74 		.ascii	"uint16_t\000"
 2138      31365F74 
 2138      00
 2139              	.LASF189:
 2140 05fe 6E756D43 		.ascii	"numChannels\000"
 2140      68616E6E 
 2140      656C7300 
 2141              	.LASF157:
 2142 060a 63795F73 		.ascii	"cy_stc_device_t\000"
 2142      74635F64 
 2142      65766963 
 2142      655F7400 
 2143              	.LASF178:
 2144 061a 6368616E 		.ascii	"chanConfig\000"
 2144      436F6E66 
 2144      696700
 2145              	.LASF188:
 2146 0625 6368616E 		.ascii	"channelBase\000"
 2146      6E656C42 
 2146      61736500 
 2147              	.LASF103:
 2148 0631 65704D6F 		.ascii	"epMonitorNr\000"
 2148      6E69746F 
 2148      724E7200 
 2149              	.LASF150:
 2150 063d 63707573 		.ascii	"cpussCm4NmiCtlOffset\000"
 2150      73436D34 
 2150      4E6D6943 
 2150      746C4F66 
 2150      66736574 
 2151              	.LASF146:
 2152 0652 63707573 		.ascii	"cpussTrimRamCtlOffset\000"
 2152      73547269 
 2152      6D52616D 
 2152      43746C4F 
 2152      66667365 
 2153              	.LASF141:
 2154 0668 63707573 		.ascii	"cpussCm0ClockCtlOffset\000"
 2154      73436D30 
 2154      436C6F63 
 2154      6B43746C 
 2154      4F666673 
 2155              	.LASF26:
 2156 067f 53544152 		.ascii	"START_CTRL\000"
 2156      545F4354 
 2156      524C00
 2157              	.LASF39:
 2158 068a 494E5452 		.ascii	"INTR_SET\000"
 2158      5F534554 
 2158      00
 2159              	.LASF81:
 2160 0693 63707573 		.ascii	"cpussVersion\000"
 2160      73566572 
 2160      73696F6E 
 2160      00
 2161              	.LASF194:
 2162 06a0 62617365 		.ascii	"base\000"
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccKBcLBo.s 			page 74


 2162      00
 2163              	.LASF88:
 2164 06a5 70657269 		.ascii	"periVersion\000"
 2164      56657273 
 2164      696F6E00 
 2165              	.LASF144:
 2166 06b1 63707573 		.ascii	"cpussCm0StatusOffset\000"
 2166      73436D30 
 2166      53746174 
 2166      75734F66 
 2166      66736574 
 2167              	.LASF167:
 2168 06c6 43595F53 		.ascii	"CY_SAR_INTR_MASK_NONE\000"
 2168      41525F49 
 2168      4E54525F 
 2168      4D41534B 
 2168      5F4E4F4E 
 2169              	.LASF118:
 2170 06dc 64774368 		.ascii	"dwChOffset\000"
 2170      4F666673 
 2170      657400
 2171              	.LASF32:
 2172 06e7 4348414E 		.ascii	"CHAN_RESULT\000"
 2172      5F524553 
 2172      554C5400 
 2173              	.LASF93:
 2174 06f3 63707573 		.ascii	"cpussFlashPaSize\000"
 2174      73466C61 
 2174      73685061 
 2174      53697A65 
 2174      00
 2175              	.LASF174:
 2176 0704 73616D70 		.ascii	"sampleTime23\000"
 2176      6C655469 
 2176      6D653233 
 2176      00
 2177              	.LASF131:
 2178 0711 70657269 		.ascii	"periDivCmdPaTypeSelPos\000"
 2178      44697643 
 2178      6D645061 
 2178      54797065 
 2178      53656C50 
 2179              	.LASF154:
 2180 0728 63707573 		.ascii	"cpussRam2Ctl0\000"
 2180      7352616D 
 2180      3243746C 
 2180      3000
 2181              	.LASF184:
 2182 0736 636F6E66 		.ascii	"configRouting\000"
 2182      6967526F 
 2182      7574696E 
 2182      6700
 2183              	.LASF19:
 2184 0744 53414D50 		.ascii	"SAMPLE_CTRL\000"
 2184      4C455F43 
 2184      54524C00 
 2185              	.LASF23:
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccKBcLBo.s 			page 75


 2186 0750 52414E47 		.ascii	"RANGE_THRES\000"
 2186      455F5448 
 2186      52455300 
 2187              	.LASF122:
 2188 075c 64775374 		.ascii	"dwStatusChIdxPos\000"
 2188      61747573 
 2188      43684964 
 2188      78506F73 
 2188      00
 2189              	.LASF25:
 2190 076d 4348414E 		.ascii	"CHAN_EN\000"
 2190      5F454E00 
 2191              	.LASF22:
 2192 0775 53414D50 		.ascii	"SAMPLE_TIME23\000"
 2192      4C455F54 
 2192      494D4532 
 2192      3300
 2193              	.LASF104:
 2194 0783 75646250 		.ascii	"udbPresent\000"
 2194      72657365 
 2194      6E7400
 2195              	.LASF84:
 2196 078e 666C6173 		.ascii	"flashcVersion\000"
 2196      68635665 
 2196      7273696F 
 2196      6E00
 2197              	.LASF80:
 2198 079c 63727970 		.ascii	"cryptoBase\000"
 2198      746F4261 
 2198      736500
 2199              	.LASF101:
 2200 07a7 736D6966 		.ascii	"smifDeviceNr\000"
 2200      44657669 
 2200      63654E72 
 2200      00
 2201              	.LASF43:
 2202 07b4 53415455 		.ascii	"SATURATE_INTR_SET\000"
 2202      52415445 
 2202      5F494E54 
 2202      525F5345 
 2202      5400
 2203              	.LASF41:
 2204 07c6 494E5452 		.ascii	"INTR_MASKED\000"
 2204      5F4D4153 
 2204      4B454400 
 2205              	.LASF160:
 2206 07d2 666C6F61 		.ascii	"float\000"
 2206      7400
 2207              	.LASF123:
 2208 07d8 64775374 		.ascii	"dwStatusChIdxMsk\000"
 2208      61747573 
 2208      43684964 
 2208      784D736B 
 2208      00
 2209              	.LASF201:
 2210 07e9 43795F53 		.ascii	"Cy_SAR_GetInterruptStatus\000"
 2210      41525F47 
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccKBcLBo.s 			page 76


 2210      6574496E 
 2210      74657272 
 2210      75707453 
 2211              	.LASF27:
 2212 0803 52455345 		.ascii	"RESERVED1\000"
 2212      52564544 
 2212      3100
 2213              	.LASF195:
 2214 080d 63795F64 		.ascii	"cy_device\000"
 2214      65766963 
 2214      6500
 2215              	.LASF31:
 2216 0817 52455345 		.ascii	"RESERVED3\000"
 2216      52564544 
 2216      3300
 2217              	.LASF151:
 2218 0821 63707573 		.ascii	"cpussRomCtl\000"
 2218      73526F6D 
 2218      43746C00 
 2219              	.LASF51:
 2220 082d 52455345 		.ascii	"RESERVED5\000"
 2220      52564544 
 2220      3500
 2221              	.LASF53:
 2222 0837 52455345 		.ascii	"RESERVED6\000"
 2222      52564544 
 2222      3600
 2223              	.LASF55:
 2224 0841 52455345 		.ascii	"RESERVED7\000"
 2224      52564544 
 2224      3700
 2225              	.LASF58:
 2226 084b 52455345 		.ascii	"RESERVED8\000"
 2226      52564544 
 2226      3800
 2227              	.LASF61:
 2228 0855 52455345 		.ascii	"RESERVED9\000"
 2228      52564544 
 2228      3900
 2229              	.LASF177:
 2230 085f 6368616E 		.ascii	"chanEn\000"
 2230      456E00
 2231              	.LASF74:
 2232 0866 75646242 		.ascii	"udbBase\000"
 2232      61736500 
 2233              	.LASF163:
 2234 086e 43595F53 		.ascii	"CY_SAR_RANGE_COND_INSIDE\000"
 2234      41525F52 
 2234      414E4745 
 2234      5F434F4E 
 2234      445F494E 
 2235              	.LASF186:
 2236 0887 5F426F6F 		.ascii	"_Bool\000"
 2236      6C00
 2237              	.LASF1:
 2238 088d 756E7369 		.ascii	"unsigned char\000"
 2238      676E6564 
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccKBcLBo.s 			page 77


 2238      20636861 
 2238      7200
 2239              	.LASF169:
 2240 089b 43595F53 		.ascii	"CY_SAR_INTR_OVERFLOW_MASK\000"
 2240      41525F49 
 2240      4E54525F 
 2240      4F564552 
 2240      464C4F57 
 2241              	.LASF117:
 2242 08b5 666C6173 		.ascii	"flashCtlMainWs4Freq\000"
 2242      6843746C 
 2242      4D61696E 
 2242      57733446 
 2242      72657100 
 2243              	.LASF0:
 2244 08c9 73686F72 		.ascii	"short int\000"
 2244      7420696E 
 2244      7400
 2245              	.LASF182:
 2246 08d3 6D757853 		.ascii	"muxSwitch\000"
 2246      77697463 
 2246      6800
 2247              	.LASF179:
 2248 08dd 696E7472 		.ascii	"intrMask\000"
 2248      4D61736B 
 2248      00
 2249              	.LASF20:
 2250 08e6 52455345 		.ascii	"RESERVED\000"
 2250      52564544 
 2250      00
 2251              	.LASF68:
 2252 08ef 5341525F 		.ascii	"SAR_V1_Type\000"
 2252      56315F54 
 2252      79706500 
 2253              	.LASF199:
 2254 08fb 47656E65 		.ascii	"Generated_Source\\PSoC6\\ADC_1_INT.c\000"
 2254      72617465 
 2254      645F536F 
 2254      75726365 
 2254      5C50536F 
 2255              	.LASF128:
 2256 091e 70657269 		.ascii	"periDivCmdDivSelMsk\000"
 2256      44697643 
 2256      6D644469 
 2256      7653656C 
 2256      4D736B00 
 2257              	.LASF37:
 2258 0932 4348414E 		.ascii	"CHAN_RESULT_NEWVALUE\000"
 2258      5F524553 
 2258      554C545F 
 2258      4E455756 
 2258      414C5545 
 2259              	.LASF29:
 2260 0947 52455345 		.ascii	"RESERVED2\000"
 2260      52564544 
 2260      3200
 2261              	.LASF99:
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccKBcLBo.s 			page 78


 2262 0951 73727373 		.ascii	"srssNumHfroot\000"
 2262      4E756D48 
 2262      66726F6F 
 2262      7400
 2263              	.LASF33:
 2264 095f 52455345 		.ascii	"RESERVED4\000"
 2264      52564544 
 2264      3400
 2265              	.LASF112:
 2266 0969 666C6173 		.ascii	"flashEraseDelay\000"
 2266      68457261 
 2266      73654465 
 2266      6C617900 
 2267              	.LASF132:
 2268 0979 70657269 		.ascii	"periDiv8CtlOffset\000"
 2268      44697638 
 2268      43746C4F 
 2268      66667365 
 2268      7400
 2269              	.LASF16:
 2270 098b 75696E74 		.ascii	"uint32_t\000"
 2270      33325F74 
 2270      00
 2271              	.LASF106:
 2272 0994 70726F74 		.ascii	"protBusMasterMask\000"
 2272      4275734D 
 2272      61737465 
 2272      724D6173 
 2272      6B00
 2273              	.LASF185:
 2274 09a6 76726566 		.ascii	"vrefMvValue\000"
 2274      4D765661 
 2274      6C756500 
 2275              	.LASF70:
 2276 09b2 6C6F6E67 		.ascii	"long double\000"
 2276      20646F75 
 2276      626C6500 
 2277              	.LASF159:
 2278 09be 63686172 		.ascii	"char\000"
 2278      00
 2279              	.LASF89:
 2280 09c3 70726F74 		.ascii	"protVersion\000"
 2280      56657273 
 2280      696F6E00 
 2281              	.LASF152:
 2282 09cf 63707573 		.ascii	"cpussRam0Ctl0\000"
 2282      7352616D 
 2282      3043746C 
 2282      3000
 2283              	.LASF5:
 2284 09dd 5F5F7569 		.ascii	"__uint16_t\000"
 2284      6E743136 
 2284      5F7400
 2285              	.LASF133:
 2286 09e8 70657269 		.ascii	"periDiv16CtlOffset\000"
 2286      44697631 
 2286      3643746C 
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccKBcLBo.s 			page 79


 2286      4F666673 
 2286      657400
 2287              	.LASF13:
 2288 09fb 75696E74 		.ascii	"uint8_t\000"
 2288      385F7400 
 2289              	.LASF86:
 2290 0a03 6873696F 		.ascii	"hsiomVersion\000"
 2290      6D566572 
 2290      73696F6E 
 2290      00
 2291              	.LASF44:
 2292 0a10 53415455 		.ascii	"SATURATE_INTR_MASK\000"
 2292      52415445 
 2292      5F494E54 
 2292      525F4D41 
 2292      534B00
 2293              	.LASF38:
 2294 0a23 494E5452 		.ascii	"INTR\000"
 2294      00
 2295              	.LASF171:
 2296 0a28 6374726C 		.ascii	"ctrl\000"
 2296      00
 2297              	.LASF114:
 2298 0a2d 666C6173 		.ascii	"flashCtlMainWs1Freq\000"
 2298      6843746C 
 2298      4D61696E 
 2298      57733146 
 2298      72657100 
 2299              	.LASF191:
 2300 0a41 6D697363 		.ascii	"miscConfig\000"
 2300      436F6E66 
 2300      696700
 2301              	.LASF119:
 2302 0a4c 64774368 		.ascii	"dwChSize\000"
 2302      53697A65 
 2302      00
 2303              	.LASF155:
 2304 0a55 69706353 		.ascii	"ipcStructSize\000"
 2304      74727563 
 2304      7453697A 
 2304      6500
 2305              	.LASF30:
 2306 0a63 4348414E 		.ascii	"CHAN_WORK\000"
 2306      5F574F52 
 2306      4B00
 2307              	.LASF94:
 2308 0a6d 63707573 		.ascii	"cpussIpc0Irq\000"
 2308      73497063 
 2308      30497271 
 2308      00
 2309              	.LASF63:
 2310 0a7a 4D55585F 		.ascii	"MUX_SWITCH_SQ_CTRL\000"
 2310      53574954 
 2310      43485F53 
 2310      515F4354 
 2310      524C00
 2311              	.LASF18:
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccKBcLBo.s 			page 80


 2312 0a8d 4354524C 		.ascii	"CTRL\000"
 2312      00
 2313              	.LASF137:
 2314 0a92 6770696F 		.ascii	"gpioPrtCfgOffset\000"
 2314      50727443 
 2314      66674F66 
 2314      66736574 
 2314      00
 2315              	.LASF113:
 2316 0aa3 666C6173 		.ascii	"flashCtlMainWs0Freq\000"
 2316      6843746C 
 2316      4D61696E 
 2316      57733046 
 2316      72657100 
 2317              	.LASF56:
 2318 0ab7 53544154 		.ascii	"STATUS\000"
 2318      555300
 2319              	.LASF176:
 2320 0abe 72616E67 		.ascii	"rangeCond\000"
 2320      65436F6E 
 2320      6400
 2321              	.LASF96:
 2322 0ac8 63707573 		.ascii	"cpussNotConnectedIrq\000"
 2322      734E6F74 
 2322      436F6E6E 
 2322      65637465 
 2322      64497271 
 2323              	.LASF110:
 2324 0add 666C6173 		.ascii	"flashWriteDelay\000"
 2324      68577269 
 2324      74654465 
 2324      6C617900 
 2325              	.LASF172:
 2326 0aed 73616D70 		.ascii	"sampleCtrl\000"
 2326      6C654374 
 2326      726C00
 2327              	.LASF35:
 2328 0af8 4348414E 		.ascii	"CHAN_RESULT_UPDATED\000"
 2328      5F524553 
 2328      554C545F 
 2328      55504441 
 2328      54454400 
 2329              	.LASF193:
 2330 0b0c 4144435F 		.ascii	"ADC_1_CONFIG_STRUCT\000"
 2330      315F434F 
 2330      4E464947 
 2330      5F535452 
 2330      55435400 
 2331              	.LASF200:
 2332 0b20 443A5C4F 		.ascii	"D:\\OneDrive - UNSW\\Documents\\thesis\\VDAC_Saw_Ex"
 2332      6E654472 
 2332      69766520 
 2332      2D20554E 
 2332      53575C44 
 2333 0b4f 706F7274 		.ascii	"port.cydsn\000"
 2333      2E637964 
 2333      736E00
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccKBcLBo.s 			page 81


 2334              	.LASF143:
 2335 0b5a 63707573 		.ascii	"cpussCm4StatusOffset\000"
 2335      73436D34 
 2335      53746174 
 2335      75734F66 
 2335      66736574 
 2336              	.LASF136:
 2337 0b6f 6770696F 		.ascii	"gpioPrtIntrCfgOffset\000"
 2337      50727449 
 2337      6E747243 
 2337      66674F66 
 2337      66736574 
 2338              	.LASF165:
 2339 0b84 43595F53 		.ascii	"CY_SAR_RANGE_COND_OUTSIDE\000"
 2339      41525F52 
 2339      414E4745 
 2339      5F434F4E 
 2339      445F4F55 
 2340              	.LASF147:
 2341 0b9e 63707573 		.ascii	"cpussTrimRomCtlOffset\000"
 2341      73547269 
 2341      6D526F6D 
 2341      43746C4F 
 2341      66667365 
 2342              	.LASF47:
 2343 0bb4 52414E47 		.ascii	"RANGE_INTR_SET\000"
 2343      455F494E 
 2343      54525F53 
 2343      455400
 2344              	.LASF97:
 2345 0bc3 73727373 		.ascii	"srssNumClkpath\000"
 2345      4E756D43 
 2345      6C6B7061 
 2345      746800
 2346              	.LASF183:
 2347 0bd2 6D757853 		.ascii	"muxSwitchSqCtrl\000"
 2347      77697463 
 2347      68537143 
 2347      74726C00 
 2348              	.LASF83:
 2349 0be2 64775665 		.ascii	"dwVersion\000"
 2349      7273696F 
 2349      6E00
 2350              	.LASF79:
 2351 0bec 69706342 		.ascii	"ipcBase\000"
 2351      61736500 
 2352              	.LASF49:
 2353 0bf4 52414E47 		.ascii	"RANGE_INTR_MASKED\000"
 2353      455F494E 
 2353      54525F4D 
 2353      41534B45 
 2353      4400
 2354              	.LASF130:
 2355 0c06 70657269 		.ascii	"periDivCmdPaDivSelPos\000"
 2355      44697643 
 2355      6D645061 
 2355      44697653 
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccKBcLBo.s 			page 82


 2355      656C506F 
 2356              	.LASF45:
 2357 0c1c 53415455 		.ascii	"SATURATE_INTR_MASKED\000"
 2357      52415445 
 2357      5F494E54 
 2357      525F4D41 
 2357      534B4544 
 2358              	.LASF111:
 2359 0c31 666C6173 		.ascii	"flashProgramDelay\000"
 2359      6850726F 
 2359      6772616D 
 2359      44656C61 
 2359      7900
 2360              	.LASF108:
 2361 0c43 666C6173 		.ascii	"flashRwwRequired\000"
 2361      68527777 
 2361      52657175 
 2361      69726564 
 2361      00
 2362              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
