ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0plus
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"cy_sar.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.Cy_SAR_IsChannelDifferential,"ax",%progbits
  20              		.align	2
  21              		.code	16
  22              		.thumb_func
  23              		.type	Cy_SAR_IsChannelDifferential, %function
  24              	Cy_SAR_IsChannelDifferential:
  25              	.LFB102:
  26              		.file 1 "Generated_Source\\PSoC6\\pdl\\drivers\\peripheral\\sar\\cy_sar.h"
   1:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /***************************************************************************//**
   2:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \file cy_sar.h
   3:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \version 1.20
   4:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
   5:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Header file for the SAR driver.
   6:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
   7:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** ********************************************************************************
   8:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \copyright
   9:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Copyright 2017-2018, Cypress Semiconductor Corporation. All rights reserved.
  10:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * You may use this file only in accordance with the license, terms, conditions,
  11:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * disclaimers, and limitations in the end user license agreement accompanying
  12:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * the software package with which this file was provided.
  13:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *******************************************************************************/
  14:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
  15:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /**
  16:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \addtogroup group_sar
  17:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \{
  18:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This driver configures and controls the SAR ADC subsystem block.
  19:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
  20:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The functions and other declarations used in this driver are in cy_sar.h. 
  21:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * You can include cy_pdl.h (ModusToolbox only) to get access to all functions 
  22:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * and declarations in the PDL. 
  23:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
  24:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This SAR ADC subsystem is comprised of:
  25:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - a 12-bit SAR converter (SARADC)
  26:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - an embedded reference block (SARREF)
  27:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - a mux (\ref group_sar_sarmux "SARMUX") at the inputs of the converter
  28:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - a sequence controller (\ref group_sar_sarmux "SARSEQ") that enables multi-channel acquisition
  29:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *       in a round robin fashion, without CPU intervention, to maximize scan rates.
  30:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
  31:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \image html sar_block_diagram.png
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 2


  32:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
  33:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The high level features of the subsystem are:
  34:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - maximum sample rate of 1 Msps
  35:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - Sixteen individually configurable channels (depends on device routing capabilities)
  36:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - per channel selectable
  37:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *       - single-ended or differential input mode
  38:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *       - input from external pin (8 channels in single-ended mode or 4 channels in differential mo
  39:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *         or from internal signals (AMUXBUS, CTB, Die Temperature Sensor)
  40:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *       - choose one of four programmable acquisition times
  41:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *       - averaging and accumulation
  42:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - scan can be triggered by firmware or hardware in single shot or continuous mode
  43:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - hardware averaging from 2 to 256 samples
  44:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - selectable voltage references
  45:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *       - internal VDDA and VDDA/2 references
  46:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *       - buffered 1.2 V bandgap reference from \ref group_sysanalog "AREF"
  47:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *       - external reference from dedicated pin
  48:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - Interrupt generation
  49:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
  50:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \section group_sar_usage Usage
  51:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
  52:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The high level steps to use this driver are:
  53:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
  54:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   -# \ref group_sar_initialization
  55:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   -# \ref group_sar_trigger_conversions
  56:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   -# \ref group_sar_handle_interrupts
  57:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   -# \ref group_sar_retrieve_result
  58:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
  59:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \section group_sar_initialization Initialization and Enable
  60:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
  61:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * To configure the SAR subsystem, call \ref Cy_SAR_Init. Pass in a pointer to the \ref SAR_Type
  62:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * structure for the base hardware register address and pass in the configuration structure,
  63:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \ref cy_stc_sar_config_t.
  64:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
  65:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * After initialization, call \ref Cy_SAR_Enable to enable the hardware.
  66:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
  67:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Here is guidance on how to set the data fields of the configuration structure:
  68:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
  69:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \subsection group_sar_init_struct_ctrl uint32_t ctrl
  70:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
  71:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This field specifies configurations that apply to all channels such as the Vref
  72:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * source or the negative terminal selection for all single-ended channels.
  73:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Select a value from each of the following enums that begin with "cy_en_sar_ctrl_" and "OR" them t
  74:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_pwr_ctrl_vref_t
  75:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_vref_sel_t
  76:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_bypass_cap_t
  77:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_neg_sel_t
  78:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_hw_ctrl_negvref_t
  79:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_comp_delay_t
  80:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_comp_pwr_t
  81:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_sarmux_deep_sleep_t
  82:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_sarseq_routing_switches_t
  83:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
  84:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SAR_CTRL
  85:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
  86:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \subsection group_sar_init_struct_sampleCtrl uint32_t sampleCtrl
  87:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
  88:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This field configures sampling details that apply to all channels.
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 3


  89:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Select a value from each of the following enums that begin with "cy_en_sar_sample_" and "OR" them
  90:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_result_align_t
  91:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_single_ended_format_t
  92:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_differential_format_t
  93:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_avg_cnt_t
  94:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_avg_mode_t
  95:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_trigger_mode_t
  96:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
  97:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SAMPLE_CTRL
  98:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
  99:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \subsection group_sar_init_struct_sampleTime01 uint32_t sampleTime01
 100:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 101:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This field configures the value for sample times 0 and 1 in ADC clock cycles.
 102:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 103:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The SAR has four programmable 10-bit aperture times that are configured using two data fields,
 104:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \ref group_sar_init_struct_sampleTime01 and
 105:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \ref group_sar_init_struct_sampleTime23.
 106:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Ten bits allow for a range of 0 to 1023 cycles, however 0 and 1 are invalid.
 107:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The minimum aperture time is 167 ns. With an 18 MHz ADC clock, this is
 108:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * equal to 3 cycles or a value of 4 in this field. The actual aperture time is one cycle less than
 109:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * the value stored in this field.
 110:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 111:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Use the shifts defined in \ref cy_en_sar_sample_time_shift_t.
 112:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 113:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SAMPLE_TIME01
 114:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 115:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \subsection group_sar_init_struct_sampleTime23 uint32_t sampleTime23
 116:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 117:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This field configures the value for sample times 2 and 3 in ADC clock cycles.
 118:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Use the shifts defined in \ref cy_en_sar_sample_time_shift_t.
 119:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 120:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SAMPLE_TIME23
 121:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 122:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \subsection group_sar_init_struct_rangeThres uint32_t rangeThres
 123:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 124:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This field configures the upper and lower thresholds for the range interrupt.
 125:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * These thresholds apply on a global level for all channels with range detection enabled.
 126:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 127:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The SARSEQ supports range detection to allow for automatic detection of sample values
 128:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * compared to two programmable thresholds without CPU involvement.
 129:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Range detection is done after averaging, alignment, and sign extension (if applicable). In other 
 130:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * threshold values need to have the same data format as the result data.
 131:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The values are interpreted as signed or unsigned according to each channel's configuration.
 132:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 133:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Use the shifts defined in \ref cy_en_sar_range_thres_shift_t.
 134:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 135:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The \ref Cy_SAR_SetLowLimit and \ref Cy_SAR_SetHighLimit provide run-time configurability of thes
 136:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 137:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_RANGE_THRES
 138:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 139:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \subsection group_sar_init_struct_rangeCond cy_en_sar_range_detect_condition_t rangeCond
 140:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 141:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This field configures the condition (below, inside, outside, or above) that will trigger
 142:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * the range interrupt. Select a value from the \ref cy_en_sar_range_detect_condition_t enum.
 143:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 144:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \subsection group_sar_init_struct_chanEn uint32_t chanEn
 145:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 4


 146:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This field configures which channels will be scanned.
 147:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Each bit corresponds to a channel. Bit 0 enables channel 0, bit 1 enables channel 1,
 148:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * bit 2 enables channel 2, and so on.
 149:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 150:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \subsection group_sar_init_struct_chanConfig uint32_t chanConfig[16]
 151:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 152:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Each channel has its own channel configuration register.
 153:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The channel configuration specifies which pin/signal is connected to that channel
 154:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * and how the channel is sampled.
 155:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 156:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Select a value from each of the following enums that begin with "cy_en_sar_chan_config_" and "OR"
 157:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 158:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_input_mode_t
 159:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_pos_pin_addr_t
 160:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_pos_port_addr_t
 161:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_avg_en_t
 162:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_sample_time_t
 163:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_neg_pin_addr_t
 164:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_neg_port_addr_t
 165:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 166:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Some important considerations are:
 167:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - The POS_PORT_ADDR and POS_PIN_ADDR bit fields are used by the SARSEQ to select
 168:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   the connection to the positive terminal (Vplus) of the ADC for each channel.
 169:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - When the channel is an unpaired differential input (\ref CY_SAR_CHAN_DIFFERENTIAL_UNPAIRED), 
 170:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   NEG_PORT_ADDR and NEG_PIN_ADDR are used by the SARSEQ to select the connection
 171:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   to the negative terminal (Vminus) of the ADC.
 172:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - When the channel is a differential input pair (\ref CY_SAR_CHAN_DIFFERENTIAL_PAIRED), the NEG
 173:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   For differential input pairs, only the pin for the positive terminal needs to be
 174:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   specified and this pin must be even. For example, Pin 0 (positive terminal) and Pin 1 (negative
 175:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   are a pair. Pin 2 (positive terminal) and Pin 3 (negative terminal) are a pair.
 176:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 177:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * If the SARSEQ is disabled (\ref cy_en_sar_ctrl_sarseq_routing_switches_t) or
 178:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * it is not controlling any switches (\ref group_sar_init_struct_muxSwitchSqCtrl = 0), the port and
 179:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * are ignored. This is possible when there is only one channel to scan.
 180:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 181:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_CHAN_CONFIG
 182:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 183:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \subsection group_sar_init_struct_intrMask uint32_t intrMask
 184:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 185:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This field configures which interrupt events (end of scan, overflow, or firmware collision) will 
 186:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 187:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Select one or more values from the \ref cy_en_sar_intr_mask_t enum and "OR" them
 188:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * together.
 189:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 190:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_INTR_MASK
 191:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 192:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \subsection group_sar_init_struct_satIntrMask uint32_t satIntrMask
 193:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 194:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This field configures which channels will cause a saturation interrupt.
 195:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 196:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The SARSEQ has a saturation detect that is always applied to every conversion.
 197:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This feature detects whether a channel's sample value is equal to the minimum or maximum values.
 198:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This allows the firmware to take action, for example, discard the result, when the SARADC saturat
 199:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The sample value is tested right after conversion, that is, before averaging. This means that it
 200:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * can happen that the interrupt is set while the averaged result in the data register is not
 201:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * equal to the minimum or maximum.
 202:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 5


 203:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Each bit corresponds to a channel. A value of 0 disables saturation detection for all channels.
 204:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 205:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \subsection group_sar_init_struct_rangeIntrMask uint32_t rangeIntrMask
 206:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 207:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This field configures which channels will cause a range detection interrupt.
 208:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Each bit corresponds to a channel. A value of 0 disables range detection for all channels.
 209:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 210:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \subsection group_sar_init_struct_muxSwitch uint32_t muxSwitch
 211:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 212:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This field is the firmware control of the SARMUX switches.
 213:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 214:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Use one or more values from the \ref cy_en_sar_mux_switch_fw_ctrl_t enum and "OR" them together.
 215:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * If the SARSEQ is enabled, the SARMUX switches that will be used must
 216:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * also be closed using this firmware control.
 217:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 218:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_MUX_SWITCH
 219:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 220:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Firmware control can be changed at run-time by calling \ref Cy_SAR_SetAnalogSwitch with \ref CY_S
 221:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * and the desired switch states.
 222:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 223:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \subsection group_sar_init_struct_muxSwitchSqCtrl uint32_t muxSwitchSqCtrl
 224:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 225:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This field enables or disables SARSEQ control of the SARMUX switches.
 226:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * To disable control of all switches, set this field to 0. To disable the SARSEQ all together,
 227:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * use \ref CY_SAR_SARSEQ_SWITCH_DISABLE when configuring the \ref group_sar_init_struct_ctrl regist
 228:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 229:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Use one or more values from the \ref cy_en_sar_mux_switch_sq_ctrl_t enum and "OR" them together.
 230:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 231:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_MUX_SQ_CTRL
 232:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 233:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * SARSEQ control can be changed at run-time by calling \ref Cy_SAR_SetSwitchSarSeqCtrl.
 234:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 235:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \subsection group_sar_init_struct_configRouting bool configRouting
 236:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 237:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * If true, the \ref group_sar_init_struct_muxSwitch and \ref group_sar_init_struct_muxSwitchSqCtrl 
 238:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * will be used. If false, the fields will be ignored.
 239:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 240:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \subsection group_sar_init_struct_vrefMvValue uint32_t vrefMvValue
 241:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 242:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This field sets the value of the reference voltage in millivolts used. This value
 243:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * is used for converting counts to volts in the \ref Cy_SAR_CountsTo_Volts, \ref Cy_SAR_CountsTo_mV
 244:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \ref Cy_SAR_CountsTo_uVolts functions.
 245:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 246:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \section group_sar_trigger_conversions Triggering Conversions
 247:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 248:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The SAR subsystem has the following modes for triggering a conversion:
 249:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * <table class="doxtable">
 250:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   <tr>
 251:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <th>Mode</th>
 252:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <th>Description</th>
 253:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <th>Usage</th>
 254:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   </tr>
 255:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   <tr>
 256:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>Continuous</td>
 257:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>After completing a scan, the
 258:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     SARSEQ will immediately start the next scan. That is, the SARSEQ will always be BUSY.
 259:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     As a result all other triggers, firmware or hardware, are essentially ignored.
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 6


 260:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *  </td>
 261:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>To enter this mode, call \ref Cy_SAR_StartConvert with \ref CY_SAR_START_CONVERT_CONTINUO
 262:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     To stop continuous conversions, call \ref Cy_SAR_StopConvert.
 263:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     </td>
 264:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   </tr>
 265:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   <tr>
 266:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>Firmware single shot</td>
 267:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>A single conversion of all enabled channels is triggered with a function call to \ref Cy_
 268:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     \ref CY_SAR_START_CONVERT_SINGLE_SHOT.
 269:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     </td>
 270:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>
 271:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     Firmware triggering is always available by calling \ref Cy_SAR_StartConvert with \ref CY_SAR_
 272:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     To allow only firmware triggering, or disable
 273:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     hardware triggering, set up the \ref cy_stc_sar_config_t config structure with \ref CY_SAR_TR
 274:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     </td>
 275:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   </tr>
 276:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   <tr>
 277:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>Hardware edge sensitive</td>
 278:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>A single conversion of all enabled channels is triggered on the rising edge of the hardwa
 279:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     trigger signal.</td>
 280:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>To enable this mode, set up the \ref cy_stc_sar_config_t config structure with
 281:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     \ref CY_SAR_TRIGGER_MODE_FW_AND_HWEDGE.</td>
 282:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *    </tr>
 283:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *    <tr>
 284:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>Hardware level sensitive</td>
 285:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>Conversions are triggered continuously when the hardware trigger signal is high.</td>
 286:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>To enable this mode, set up the \ref cy_stc_sar_config_t config structure with
 287:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     \ref CY_SAR_TRIGGER_MODE_FW_AND_HWLEVEL.</td>
 288:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *    </tr>
 289:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * </table>
 290:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 291:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The trigger mode can be changed during run time with \ref Cy_SAR_SetConvertMode.
 292:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 293:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * For the hardware trigger modes, use the \ref group_trigmux driver to route an internal or externa
 294:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * signal to the SAR trigger input.
 295:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * When making the required \ref Cy_TrigMux_Connect calls, use the pre-defined enum, TRIG6_OUT_PASS_
 296:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * for the SAR trigger input.
 297:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 298:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_CONFIG_TRIGGER
 299:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 300:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \section group_sar_handle_interrupts Handling Interrupts
 301:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 302:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The SAR can generate interrupts on these events:
 303:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 304:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - End of scan (EOS): when scanning of all enabled channels complete.
 305:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - Overflow: when the result register is updated before the previous result is read.
 306:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - FW collision: when a new trigger is received while the SAR is still processing the previous t
 307:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - Saturation detection: when the channel result is equal to the minimum or maximum value.
 308:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - Range detection: when the channel result meets the programmed upper or lower threshold values
 309:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 310:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The SAR interrupt to the NVIC is raised any time the intersection (logic and) of the interrupt
 311:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * flags and the corresponding interrupt masks are non-zero.
 312:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 313:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Implement an interrupt routine and assign it to the SAR interrupt.
 314:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Use the pre-defined enum, pass_interrupt_sar_IRQn, as the interrupt source for the SAR.
 315:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 316:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The following code snippet demonstrates how to implement a routine to handle the interrupt.
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 7


 317:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The routine gets called when any one of the SAR interrupts are triggered.
 318:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * When servicing an interrupt, the user must clear the interrupt so that subsequent
 319:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * interrupts can be handled.
 320:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 321:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_ISR
 322:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 323:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The following code snippet demonstrates how to configure and enable the interrupt.
 324:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 325:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_CONFIG_INTR
 326:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 327:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Alternately, instead of handling the interrupts, the \ref Cy_SAR_IsEndConversion function
 328:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * allows for firmware polling of the end of conversion status.
 329:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 330:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \section group_sar_retrieve_result Retrieve Channel Results
 331:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 332:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Retrieve the ADC result by calling \ref Cy_SAR_GetResult16 with the desired channel.
 333:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * To convert the result to a voltage, pass the ADC result to \ref Cy_SAR_CountsTo_Volts, \ref Cy_SA
 334:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \ref Cy_SAR_CountsTo_uVolts.
 335:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 336:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \section group_sar_clock SAR Clock Configuration
 337:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 338:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The SAR requires a clock. Assign a clock to the SAR using the
 339:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * pre-defined enum, PCLK_PASS_CLOCK_SAR, to identify the SAR subsystem.
 340:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Set the clock divider value to achieve the desired clock rate. The SAR can support
 341:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * a maximum frequency of 18 MHz.
 342:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 343:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm4.c SAR_SNIPPET_CONFIGURE_CLOCK
 344:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 345:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \section group_sar_scan_time Scan Rate
 346:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 347:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The scan rate is dependent on the following:
 348:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 349:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - ADC clock rate
 350:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - Number of channels
 351:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - Averaging
 352:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - Resolution
 353:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - Acquisition times
 354:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 355:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \subsection group_sar_acquisition_time Acquisition Time
 356:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 357:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The acquisition time of a channel is based on which of the four global aperture times are selecte
 358:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * channel. The selection is done during initialization per channel with \ref group_sar_init_struct_
 359:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The four global aperture times are also set during initialization with \ref group_sar_init_struct
 360:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \ref group_sar_init_struct_sampleTime23. Note that these global aperture times are in SAR clock c
 361:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * acquisition time is 1 less than that value in the register.
 362:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 363:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \image html sar_acquisition_time_eqn.png
 364:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 365:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \subsection group_sar_channel_sample_time Channel Sample Time
 366:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 367:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The sample time for a channel is the time required to acquire the analog signal
 368:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * and convert it to a digital code.
 369:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 370:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \image html sar_channel_sample_time_eqn.png
 371:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 372:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The SAR ADC is a 12-bit converter so Resolution = 12.
 373:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 8


 374:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \subsection group_sar_total_scan_time Total Scan Time
 375:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 376:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Channels using one of the sequential averaging modes (\ref CY_SAR_AVG_MODE_SEQUENTIAL_ACCUM or \r
 377:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * are sampled multiple times per scan. The number of samples averaged are set during initialization
 378:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * with \ref group_sar_init_struct_sampleCtrl using one of the values from \ref cy_en_sar_sample_ctr
 379:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Channels that are not averaged or use the \ref CY_SAR_AVG_MODE_INTERLEAVED mode are only sampled 
 380:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 381:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The total scan time is the sum of each channel's sample time multiplied by the samples per scan.
 382:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 383:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \image html sar_scan_rate_eqn.png
 384:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 385:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * where N is the total number of channels in the scan.
 386:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 387:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \section group_sar_sarmux SARMUX and SARSEQ
 388:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 389:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The SARMUX is an analog programmable multiplexer. Its switches can be controlled by the SARSEQ or
 390:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * and the inputs can come from:
 391:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - a dedicated port (can support 8 single-ended channels or 4 differential channels)
 392:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - an internal die temperature (DieTemp) sensor
 393:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - CTB output via SARBUS0/1 (if CTBs are available on the device)
 394:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - AMUXBUSA/B
 395:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 396:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The following figure shows the SARMUX switches. See the device datasheet for the exact location o
 397:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 398:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \image html sar_sarmux_switches.png
 399:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 400:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * When using the SARSEQ, the following configurations must be performed:
 401:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - enable SARSEQ control of required switches (see \ref group_sar_init_struct_muxSwitchSqCtrl)
 402:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - close the required switches with firmware (see \ref group_sar_init_struct_muxSwitch)
 403:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - configure the POS_PORT_ADDR and POS_PIN_ADDR, and if used, the NEG_PORT_ADDR and NEG_PIN_ADDR
 404:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 405:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * While firmware can control every switch in the SARMUX, not every switch can be controlled by the 
 406:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Additionally, switches outside of the SARMUX such as the AMUXBUSA/B switches or
 407:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * CTB switches will require separate function calls (see \ref group_gpio "GPIO" and \ref group_ctb 
 408:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The SARSEQ can control three switches in the \ref group_ctb "CTB" driver (see \ref Cy_CTB_EnableS
 409:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * These switches need to be enabled for SARSEQ control if the CTB outputs are used as the SARMUX in
 410:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 411:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The following table shows the required POS_PORT_ADDR and POS_PIN_ADDR settings
 412:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * for different input connections.
 413:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 414:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * <table class="doxtable">
 415:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   <tr>
 416:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <th>Input Connection Selection</th>
 417:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <th>POS_PORT_ADDR</th>
 418:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <th>POS_PIN_ADDR</th>
 419:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   </tr>
 420:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   <tr>
 421:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>SARMUX dedicated port</td>
 422:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_SARMUX</td>
 423:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_0 through \ref CY_SAR_CHAN_POS_PIN_ADDR_7</td>
 424:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   </tr>
 425:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   <tr>
 426:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>DieTemp sensor</td>
 427:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_SARMUX_VIRT</td>
 428:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_0</td>
 429:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   </tr>
 430:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   <tr>
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 9


 431:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>AMUXBUSA</td>
 432:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_SARMUX_VIRT</td>
 433:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_2</td>
 434:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   </tr>
 435:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   <tr>
 436:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>AMUXBUSB</td>
 437:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_SARMUX_VIRT</td>
 438:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_3</td>
 439:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   </tr>
 440:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   <tr>
 441:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>CTB0 Opamp0 1x output</td>
 442:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_CTB0</td>
 443:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_2</td>
 444:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   </tr>
 445:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   <tr>
 446:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>CTB0 Opamp1 1x output</td>
 447:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_CTB0</td>
 448:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_3</td>
 449:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   </tr>
 450:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * </table>
 451:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 452:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \subsection group_sar_sarmux_dietemp Input from DieTemp sensor
 453:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 454:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * When using the DieTemp sensor, always use single-ended mode.
 455:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The temperature sensor can be routed to Vplus using the \ref CY_SAR_MUX_FW_TEMP_VPLUS switch.
 456:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Connecting this switch will also enable the sensor. Set the \ref group_sar_acquisition_time "acqu
 457:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * be at least 1 us to meet the settling time of the temperature sensor.
 458:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 459:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \image html sar_sarmux_dietemp.png
 460:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 461:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \snippet sar_sut_02.cydsn/main_cm4.c SNIPPET_SAR_SARMUX_DIETEMP
 462:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 463:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \subsection group_sar_sarmux_se_diff Input from SARMUX port
 464:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 465:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The following figure and code snippet show how two GPIOs on the SARMUX dedicated port
 466:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * are connected to the SARADC as separate single-ended channels and as a differential-pair channel.
 467:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 468:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \image html sar_sarmux_dedicated_port.png
 469:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 470:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \snippet sar_sut_02.cydsn/main_cm4.c SNIPPET_SAR_SARMUX_SE_DIFF
 471:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 472:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \subsection group_sar_sarmux_ctb Input from CTB output visa SARBUS0/1
 473:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 474:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The following figure and code snippet show how the two opamp outputs from the CTB
 475:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * are connected to the SARADC as separate single-ended channels and as a differential-pair channel.
 476:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Note that separate function calls are needed to configure and enable the opamps, perform required
 477:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * and enable SARSEQ control of the switches contained in the CTB.
 478:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 479:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \image html sar_sarmux_ctb.png
 480:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 481:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \snippet sar_sut_02.cydsn/main_cm4.c SNIPPET_SAR_SARMUX_CTB
 482:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 483:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \subsection group_sar_sarmux_amuxbus Input from other pins through AMUXBUSA/B
 484:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 485:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The following figure and code snippet show how two GPIOs on any port through the AMUXBUSA and AMU
 486:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * are connected to the SARADC as separate single-ended channels and as a differential-pair channel.
 487:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Note that separate function calls are needed to route the device pins to the SARMUX. The AMUXBUSe
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 10


 488:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * are separated into multiple segments and these segments are connected/disconnected using the AMUX
 489:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * registers in the HSIOM. In the following code snippet, to connect Port 1 to the SARMUX, the left 
 490:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * switches of AMUX_SPLIT_CTL[1] and AMUX_SPLIT_CTL[6] need to be closed.
 491:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 492:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \image html sar_sarmux_amuxbus.png
 493:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 494:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \snippet sar_sut_02.cydsn/main_cm4.c SNIPPET_SAR_SARMUX_AMUXBUS
 495:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 496:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \section group_sar_low_power Low Power Support
 497:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This SAR driver provides a callback function to handle power mode transitions.
 498:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The \ref Cy_SAR_DeepSleepCallback function ensures that SAR conversions are stopped
 499:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * before Deep Sleep entry. Upon wakeup, the callback
 500:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * enables the hardware and continuous conversions, if previously enabled.
 501:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 502:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * To trigger the callback execution, the callback must be registered before calling \ref Cy_SysPm_C
 503:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \ref group_syspm driver for more information about power mode transitions and
 504:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * callback registration.
 505:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 506:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Recall that during configuration of the \ref group_sar_init_struct_ctrl "ctrl" field,
 507:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * the SARMUX can be configured to remain enabled in Deep Sleep mode.
 508:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * All other blocks (SARADC, REFBUF, and SARSEQ) do not support Deep Sleep mode operation.
 509:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 510:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \section group_sar_more_information More Information
 511:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * For more information on the SAR ADC subsystem, refer to the technical reference manual (TRM).
 512:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 513:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \section group_sar_MISRA MISRA-C Compliance]
 514:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 515:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This driver has the following specific deviations:
 516:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 517:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * <table class="doxtable">
 518:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   <tr>
 519:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <th>MISRA Rule</th>
 520:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <th>Rule Class (Required/Advisory)</th>
 521:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <th>Rule Description</th>
 522:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <th>Description of Deviation(s)</th>
 523:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   </tr>
 524:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   <tr>
 525:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>11.4</td>
 526:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>Advisory</td>
 527:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>A cast should not be performed between a pointer to object type and a different pointer t
 528:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>The cy_syspm driver defines the pointer to void in the \ref cy_stc_syspm_callback_params_
 529:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *       This SAR driver implements a Deep Sleep callback conforming to the cy_syspm driver requirem
 530:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *       When the callback is called, the base should point to the SAR_Type register address.
 531:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     </td>
 532:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   </tr>
 533:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * </table>
 534:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 535:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \section group_sar_changelog Changelog
 536:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * <table class="doxtable">
 537:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   <tr><th>Version</th><th>Changes</th><th>Reason for Change</th></tr>
 538:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   <tr>
 539:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td rowspan="2">1.20</td>
 540:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>Flattened the organization of the driver source code into the single source directory and
 541:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>Driver library directory-structure simplification.</td>
 542:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   </tr>
 543:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   <tr>
 544:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>Added register access layer. Use register access macros instead
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 11


 545:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *         of direct register access using dereferenced pointers.</td>
 546:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>Makes register access device-independent, so that the PDL does 
 547:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *         not need to be recompiled for each supported part number.</td>
 548:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   </tr>
 549:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   <tr>
 550:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td rowspan="3">1.10</td>
 551:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td> Added workaround for parts with out of range CAP_TRIM in Init API.</td>
 552:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td> Correct CAP_TRIM is necessary achieving specified SAR ADC linearity</td>
 553:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   </tr>
 554:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   <tr>
 555:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td> Turn off the entire hardware block only if the SARMUX is not enabled 
 556:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *          for Deep Sleep operation.                
 557:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     </td>
 558:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td> Improvement of the \ref Cy_SAR_DeepSleep flow</td>
 559:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   </tr>
 560:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   <tr>
 561:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>Updated "Low Power Support" section to describe registering the Deep Sleep callback.
 562:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *         Added parenthesis around logical AND operation in Sleep API.</td>
 563:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>Documentation update and clarification</td>
 564:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   </tr>
 565:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   <tr>
 566:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>1.0</td>
 567:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>Initial version</td>
 568:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td></td>
 569:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   </tr>
 570:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * </table>
 571:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 572:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \defgroup group_sar_macros Macros
 573:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \defgroup group_sar_functions Functions
 574:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   \{
 575:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *       \defgroup group_sar_functions_basic         Initialization and Basic Functions
 576:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *       \defgroup group_sar_functions_power         Low Power Callback
 577:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *       \defgroup group_sar_functions_config        Run-time Configuration Functions
 578:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *       \defgroup group_sar_functions_countsto      Counts Conversion Functions
 579:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *       \defgroup group_sar_functions_interrupt     Interrupt Functions
 580:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *       \defgroup group_sar_functions_switches      SARMUX Switch Control Functions
 581:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *       \defgroup group_sar_functions_helper        Useful Configuration Query Functions
 582:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   \}
 583:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \defgroup group_sar_globals Global Variables
 584:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \defgroup group_sar_data_structures Data Structures
 585:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \defgroup group_sar_enums Enumerated Types
 586:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   \{
 587:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *       \defgroup group_sar_ctrl_register_enums         Control Register Enums
 588:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *       \defgroup group_sar_sample_ctrl_register_enums  Sample Control Register Enums
 589:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *       \defgroup group_sar_sample_time_shift_enums     Sample Time Register Enums
 590:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *       \defgroup group_sar_range_thres_register_enums  Range Interrupt Register Enums
 591:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *       \defgroup group_sar_chan_config_register_enums  Channel Configuration Register Enums
 592:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *       \defgroup group_sar_intr_mask_t_register_enums  Interrupt Mask Register Enums
 593:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *       \defgroup group_sar_mux_switch_register_enums   SARMUX Switch Control Register Enums
 594:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   \}
 595:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
 596:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 597:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #if !defined(CY_SAR_H)
 598:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_H
 599:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 600:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #include <stdint.h>
 601:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #include <stdbool.h>
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 12


 602:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #include <stddef.h>
 603:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #include "cy_device_headers.h"
 604:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #include "cy_syslib.h"
 605:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #include "cy_syspm.h"
 606:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #include "cy_device.h"
 607:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 608:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #ifdef CY_IP_MXS40PASS_SAR
 609:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 610:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #if defined(__cplusplus)
 611:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** extern "C" {
 612:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #endif
 613:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 614:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \addtogroup group_sar_macros
 615:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \{
 616:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
 617:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 618:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Driver major version */
 619:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_DRV_VERSION_MAJOR        1
 620:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 621:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Driver minor version */
 622:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_DRV_VERSION_MINOR        20
 623:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 624:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** SAR driver identifier */
 625:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_ID                       CY_PDL_DRV_ID(0x01u)
 626:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 627:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Maximum number of channels */
 628:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_MAX_NUM_CHANNELS         (PASS_SAR_SAR_CHANNELS)
 629:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 630:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \cond INTERNAL */
 631:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_DEINIT                   (0uL)             /**< De-init value for most SAR registers
 632:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_SAMPLE_TIME_DEINIT       ((3uL << SAR_SAMPLE_TIME01_SAMPLE_TIME0_Pos) | (3uL << SAR_
 633:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_CLEAR_ALL_SWITCHES       (0x3FFFFFFFuL)    /**< Value to clear all SARMUX switches *
 634:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_DEINIT_SQ_CTRL           (SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P0_Msk \
 635:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P1_Msk \
 636:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P2_Msk \
 637:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P3_Msk \
 638:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P4_Msk \
 639:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P5_Msk \
 640:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P6_Msk \
 641:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P7_Msk \
 642:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_VSSA_Msk \
 643:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_TEMP_Msk \
 644:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_AMUXBUSA_Msk \
 645:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_AMUXBUSB_Msk \
 646:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_SARBUS0_Msk \
 647:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_SARBUS1_Msk)
 648:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_REG_CTRL_MASK            (SAR_CTRL_PWR_CTRL_VREF_Msk \
 649:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_CTRL_VREF_SEL_Msk \
 650:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_CTRL_VREF_BYP_CAP_EN_Msk \
 651:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_CTRL_NEG_SEL_Msk \
 652:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_CTRL_SAR_HW_CTRL_NEGVREF_Msk \
 653:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_CTRL_COMP_DLY_Msk \
 654:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_CTRL_REFBUF_EN_Msk \
 655:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_CTRL_COMP_PWR_Msk \
 656:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_CTRL_DEEPSLEEP_ON_Msk \
 657:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_CTRL_DSI_SYNC_CONFIG_Msk \
 658:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_CTRL_DSI_MODE_Msk \
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 13


 659:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_CTRL_SWITCH_DISABLE_Msk \
 660:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_CTRL_ENABLED_Msk)
 661:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_REG_SAMPLE_CTRL_MASK     (SAR_SAMPLE_CTRL_LEFT_ALIGN_Msk \
 662:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_Msk \
 663:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_DIFFERENTIAL_SIGNED_Msk \
 664:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_AVG_CNT_Msk \
 665:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_AVG_SHIFT_Msk \
 666:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_AVG_MODE_Msk \
 667:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_CONTINUOUS_Msk \
 668:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_DSI_TRIGGER_EN_Msk \
 669:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_Msk \
 670:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_DSI_SYNC_TRIGGER_Msk \
 671:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_UAB_SCAN_MODE_Msk \
 672:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_REPEAT_INVALID_Msk \
 673:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_VALID_SEL_Msk \
 674:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_VALID_SEL_EN_Msk \
 675:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_VALID_IGNORE_Msk \
 676:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_TRIGGER_OUT_EN_Msk \
 677:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_EOS_DSI_OUT_EN_Msk)
 678:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_REG_CHAN_CONFIG_MASK     (SAR_CHAN_CONFIG_POS_PIN_ADDR_Msk \
 679:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_POS_PORT_ADDR_Msk \
 680:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_DIFFERENTIAL_EN_Msk \
 681:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_AVG_EN_Msk \
 682:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_SAMPLE_TIME_SEL_Msk \
 683:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_NEG_PIN_ADDR_Msk \
 684:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_NEG_PORT_ADDR_Msk \
 685:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_NEG_ADDR_EN_Msk \
 686:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_DSI_OUT_EN_Msk)
 687:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_REG_SAMPLE_TIME_MASK     (SAR_SAMPLE_TIME01_SAMPLE_TIME0_Msk | SAR_SAMPLE_TIME01_SAM
 688:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 689:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_2US_DELAY                (2u)              /**< Delay used in Enable API function to
 690:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_10V_COUNTS               (10.0F)           /**< Value of 10 in volts */
 691:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_10MV_COUNTS              (10000)           /**< Value of 10 in millivolts */
 692:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_10UV_COUNTS              (10000000L)       /**< Value of 10 in microvolts */
 693:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_WRK_MAX_12BIT            (0x00001000uL)    /**< Maximum SAR work register value for 
 694:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_RANGE_LIMIT_MAX          (0xFFFFuL)        /**< Maximum value for the low and high r
 695:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_CAP_TRIM_MAX             (0x3FuL)          /**< Maximum value for CAP_TRIM */
 696:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_CAP_TRIM_MIN             (0x00uL)          /**< Maximum value for CAP_TRIM */
 697:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_CAP_TRIM                 (0x0BuL)          /**< Correct cap trim value */
 698:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 699:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /**< Macros for conditions used in CY_ASSERT calls */
 700:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_CHANNUM(chan)            ((chan) < CY_SAR_MAX_NUM_CHANNELS)
 701:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_CHANMASK(mask)           ((mask) < (1uL << CY_SAR_MAX_NUM_CHANNELS))
 702:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_RANGECOND(cond)          ((cond) <= CY_SAR_RANGE_COND_OUTSIDE)
 703:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_INTRMASK(mask)           ((mask) <= (uint32_t)(CY_SAR_INTR_EOS_MASK | CY_SAR_INTR_OV
 704:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_TRIGGER(mode)            (((mode) == CY_SAR_TRIGGER_MODE_FW_ONLY) \
 705:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         || ((mode) == CY_SAR_TRIGGER_MODE_FW_AND_HWEDGE) \
 706:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         || ((mode) == CY_SAR_TRIGGER_MODE_FW_AND_HWLEVEL))
 707:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_RETURN(mode)             (((mode) == CY_SAR_RETURN_STATUS) || ((mode) == CY_SAR_WAIT
 708:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_STARTCONVERT(mode)       (((mode) == CY_SAR_START_CONVERT_SINGLE_SHOT) || ((mode) ==
 709:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_RANGE_LIMIT(limit)       ((limit) <= CY_SAR_RANGE_LIMIT_MAX)
 710:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_SWITCHSELECT(select)     ((select) == CY_SAR_MUX_SWITCH0)
 711:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_SWITCHMASK(mask)         ((mask) <= CY_SAR_CLEAR_ALL_SWITCHES)
 712:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_SWITCHSTATE(state)       (((state) == CY_SAR_SWITCH_OPEN) || ((state) == CY_SAR_SWIT
 713:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_SQMASK(mask)             (((mask) & (~CY_SAR_DEINIT_SQ_CTRL)) == 0uL)
 714:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_SQCTRL(ctrl)             (((ctrl) == CY_SAR_SWITCH_SEQ_CTRL_ENABLE) || ((ctrl) == CY
 715:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 14


 716:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_CTRL(value)              (((value) & (~CY_SAR_REG_CTRL_MASK)) == 0uL)
 717:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_SAMPLE_CTRL(value)       (((value) & (~CY_SAR_REG_SAMPLE_CTRL_MASK)) == 0uL)
 718:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_SAMPLE_TIME(value)       (((value) & (~CY_SAR_REG_SAMPLE_TIME_MASK)) == 0uL)
 719:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_CHAN_CONFIG(value)       (((value) & (~CY_SAR_REG_CHAN_CONFIG_MASK)) == 0uL)
 720:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \endcond */
 721:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 722:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \} group_sar_macro */
 723:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 724:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \addtogroup group_sar_globals
 725:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \{
 726:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
 727:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /***************************************
 728:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *        Global Variables
 729:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** ***************************************/
 730:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 731:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** This array is used to calibrate the offset for each channel.
 732:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 733:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * At initialization, channels that are single-ended, signed, and with Vneg = Vref
 734:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * have an offset of -(2^12)/2 = -2048. All other channels have an offset of 0.
 735:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The offset can be overridden using \ref Cy_SAR_SetOffset.
 736:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 737:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The channel offsets are used by the \ref Cy_SAR_CountsTo_Volts, \ref Cy_SAR_CountsTo_mVolts, and
 738:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \ref Cy_SAR_CountsTo_uVolts functions to convert counts to voltage.
 739:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 740:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
 741:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** extern volatile int16_t Cy_SAR_offset[CY_SAR_MAX_NUM_CHANNELS];
 742:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 743:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** This array is used to calibrate the gain for each channel.
 744:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 745:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * It is set at initialization and the value depends on the SARADC resolution
 746:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * and voltage reference, 10*(2^12)/(2*Vref).
 747:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The gain can be overridden using \ref Cy_SAR_SetGain.
 748:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 749:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The channel gains are used by the \ref Cy_SAR_CountsTo_Volts, \ref Cy_SAR_CountsTo_mVolts, and
 750:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \ref Cy_SAR_CountsTo_uVolts functions to convert counts to voltage.
 751:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
 752:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** extern volatile int32_t Cy_SAR_countsPer10Volt[CY_SAR_MAX_NUM_CHANNELS];
 753:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 754:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \} group_sar_globals */
 755:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 756:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \addtogroup group_sar_enums
 757:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \{
 758:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
 759:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 760:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /******************************************************************************
 761:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****  * Enumerations
 762:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****  *****************************************************************************/
 763:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 764:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** The SAR status/error code definitions */
 765:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
 766:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
 767:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_SUCCESS    = 0x00uL,                                      /**< Success */
 768:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_BAD_PARAM  = CY_SAR_ID | CY_PDL_STATUS_ERROR | 0x01uL,    /**< Invalid input parameters 
 769:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_TIMEOUT    = CY_SAR_ID | CY_PDL_STATUS_ERROR | 0x02uL,    /**< A timeout occurred */
 770:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CONVERSION_NOT_COMPLETE = CY_SAR_ID | CY_PDL_STATUS_ERROR | 0x03uL,    /**< SAR conversi
 771:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_status_t;
 772:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 15


 773:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Definitions for starting a conversion used in \ref Cy_SAR_StartConvert */
 774:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
 775:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
 776:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_START_CONVERT_SINGLE_SHOT = 0uL, /**< Start a single scan (one shot) from firmware */
 777:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_START_CONVERT_CONTINUOUS  = 1uL, /**< Continuously scan enabled channels and ignores all
 778:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_start_convert_sel_t;
 779:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 780:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Definitions for the return mode used in \ref Cy_SAR_IsEndConversion */
 781:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
 782:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
 783:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_RETURN_STATUS    = 0uL,      /**< Immediately returns the conversion status. */
 784:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_WAIT_FOR_RESULT  = 1uL,    /**< Does not return a result until the conversion of all seq
 785:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_return_mode_t;
 786:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 787:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Switch state definitions */
 788:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
 789:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
 790:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_SWITCH_OPEN      = 0uL,    /**< Open the switch */
 791:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_SWITCH_CLOSE     = 1uL     /**< Close the switch */
 792:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_switch_state_t;
 793:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 794:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Definitions for sequencer control of switches */
 795:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
 796:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
 797:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_SWITCH_SEQ_CTRL_DISABLE = 0uL, /**< Disable sequencer control of switch */
 798:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_SWITCH_SEQ_CTRL_ENABLE  = 1uL  /**< Enable sequencer control of switch */
 799:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_switch_sar_seq_ctrl_t;
 800:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 801:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Switch register selection for \ref Cy_SAR_SetAnalogSwitch and \ref Cy_SAR_GetAnalogSwitch */
 802:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
 803:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
 804:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_SWITCH0  = 0uL,      /**< SARMUX switch control register */
 805:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_switch_register_sel_t;
 806:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 807:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \addtogroup group_sar_ctrl_register_enums
 808:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This set of enumerations aids in configuring the SAR CTRL register
 809:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \{
 810:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
 811:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Reference voltage buffer power mode definitions */
 812:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
 813:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
 814:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_VREF_PWR_100     = 0uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< Full power (100%) */
 815:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_VREF_PWR_80      = 1uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 80% power */
 816:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_VREF_PWR_60      = 2uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 60% power */
 817:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_VREF_PWR_50      = 3uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 50% power */
 818:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_VREF_PWR_40      = 4uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 40% power */
 819:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_VREF_PWR_30      = 5uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 30% power */
 820:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_VREF_PWR_20      = 6uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 20% power */
 821:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_VREF_PWR_10      = 7uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 10% power */
 822:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_ctrl_pwr_ctrl_vref_t;
 823:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 824:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Reference voltage selection definitions */
 825:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
 826:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
 827:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_VREF_SEL_BGR         = 4uL << SAR_CTRL_VREF_SEL_Pos,     /**< System wide bandgap from \
 828:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_VREF_SEL_EXT         = 5uL << SAR_CTRL_VREF_SEL_Pos,     /**< External Vref direct from 
 829:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_VREF_SEL_VDDA_DIV_2  = 6uL << SAR_CTRL_VREF_SEL_Pos,     /**< Vdda/2 (Vref buffer on) */
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 16


 830:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_VREF_SEL_VDDA        = 7uL << SAR_CTRL_VREF_SEL_Pos      /**< Vdda */
 831:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_ctrl_vref_sel_t;
 832:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 833:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Vref bypass cap enable.
 834:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * When enabled, a bypass capacitor should
 835:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * be connected to the dedicated Vref pin of the device.
 836:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Refer to the device datasheet for the minimum bypass capacitor value to use.
 837:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
 838:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
 839:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
 840:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_BYPASS_CAP_DISABLE = 0uL << SAR_CTRL_VREF_BYP_CAP_EN_Pos,    /**< Disable Vref bypass ca
 841:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_BYPASS_CAP_ENABLE  = 1uL << SAR_CTRL_VREF_BYP_CAP_EN_Pos     /**< Enable Vref bypass cap
 842:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_ctrl_bypass_cap_t;
 843:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 844:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Negative terminal (Vminus) selection definitions for single-ended channels.
 845:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 846:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The Vminus input for single ended channels can be connected to
 847:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Vref, VSSA, or routed out to an external pin.
 848:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The options for routing to a pin are through Pin 1, Pin 3, Pin 5, or Pin 7
 849:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * of the SARMUX dedicated port or an acore wire in AROUTE, if available on the device.
 850:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 851:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \ref CY_SAR_NEG_SEL_VSSA_KELVIN comes straight from a Vssa pad without any shared branches
 852:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * so as to keep quiet and avoid voltage drops.
 853:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
 854:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
 855:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
 856:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_NEG_SEL_VSSA_KELVIN  = 0uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to VSSA_KELVIN 
 857:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_NEG_SEL_P1           = 2uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to Pin 1 of SAR
 858:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_NEG_SEL_P3           = 3uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to Pin 3 of SAR
 859:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_NEG_SEL_P5           = 4uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to Pin 5 of SAR
 860:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_NEG_SEL_P7           = 5uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to Pin 6 of SAR
 861:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_NEG_SEL_ACORE        = 6uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to an ACORE in 
 862:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_NEG_SEL_VREF         = 7uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to VREF input o
 863:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_ctrl_neg_sel_t;
 864:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 865:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Enable hardware control of the switch between Vref and the Vminus input */
 866:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
 867:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
 868:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CTRL_NEGVREF_FW_ONLY = 0uL << SAR_CTRL_SAR_HW_CTRL_NEGVREF_Pos,    /**< Only firmware co
 869:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CTRL_NEGVREF_HW      = 1uL << SAR_CTRL_SAR_HW_CTRL_NEGVREF_Pos     /**< Enable hardware 
 870:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_ctrl_hw_ctrl_negvref_t;
 871:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 872:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Configure the comparator latch delay */
 873:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
 874:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
 875:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CTRL_COMP_DLY_2P5    = 0uL << SAR_CTRL_COMP_DLY_Pos,    /**< 2.5 ns delay, use for SAR c
 876:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CTRL_COMP_DLY_4      = 1uL << SAR_CTRL_COMP_DLY_Pos,    /**< 4 ns delay, use for SAR con
 877:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CTRL_COMP_DLY_10     = 2uL << SAR_CTRL_COMP_DLY_Pos,    /**< 10 ns delay, use for SAR co
 878:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CTRL_COMP_DLY_12     = 3uL << SAR_CTRL_COMP_DLY_Pos     /**< 12 ns delay, use for SAR co
 879:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_ctrl_comp_delay_t;
 880:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 881:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Configure the comparator power mode */
 882:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
 883:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
 884:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_COMP_PWR_100     = 0uL << SAR_CTRL_COMP_PWR_Pos,      /**< 100% power, use this for > 2 
 885:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_COMP_PWR_80      = 1uL << SAR_CTRL_COMP_PWR_Pos,      /**< 80% power, use this for 1.5 -
 886:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_COMP_PWR_60      = 2uL << SAR_CTRL_COMP_PWR_Pos,      /**< 60% power, use this for 1.0 -
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 17


 887:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_COMP_PWR_50      = 3uL << SAR_CTRL_COMP_PWR_Pos,      /**< 50% power, use this for 500 k
 888:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_COMP_PWR_40      = 4uL << SAR_CTRL_COMP_PWR_Pos,      /**< 40% power, use this for 250 -
 889:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_COMP_PWR_30      = 5uL << SAR_CTRL_COMP_PWR_Pos,      /**< 30% power, use this for 100 -
 890:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_COMP_PWR_20      = 6uL << SAR_CTRL_COMP_PWR_Pos,      /**< 20% power, use this for TDB s
 891:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_COMP_PWR_10      = 7uL << SAR_CTRL_COMP_PWR_Pos,      /**< 10% power, use this for < 100
 892:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_ctrl_comp_pwr_t;
 893:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 894:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Enable or disable the SARMUX during Deep Sleep power mode. */
 895:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
 896:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
 897:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_DEEPSLEEP_SARMUX_OFF = 0uL << SAR_CTRL_DEEPSLEEP_ON_Pos,    /**< Disable SARMUX operatio
 898:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_DEEPSLEEP_SARMUX_ON  = 1uL << SAR_CTRL_DEEPSLEEP_ON_Pos     /**< Enable SARMUX operation
 899:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_ctrl_sarmux_deep_sleep_t;
 900:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 901:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Enable or disable the SARSEQ control of routing switches */
 902:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
 903:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
 904:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_SARSEQ_SWITCH_ENABLE    = 0uL << SAR_CTRL_SWITCH_DISABLE_Pos,    /**< Enable the SARSEQ 
 905:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_SARSEQ_SWITCH_DISABLE   = 1uL << SAR_CTRL_SWITCH_DISABLE_Pos     /**< Disable the SARSEQ
 906:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_ctrl_sarseq_routing_switches_t;
 907:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 908:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /* \} */
 909:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 910:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \addtogroup group_sar_sample_ctrl_register_enums
 911:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This set of enumerations are used in configuring the SAR SAMPLE_CTRL register
 912:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \{
 913:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
 914:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Configure result alignment, either left or right aligned.
 915:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 916:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \note
 917:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Averaging always uses right alignment. If the \ref CY_SAR_LEFT_ALIGN
 918:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * is selected with averaging enabled, it is ignored.
 919:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 920:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \note
 921:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The voltage conversion functions (\ref Cy_SAR_CountsTo_Volts, \ref Cy_SAR_CountsTo_mVolts,
 922:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \ref Cy_SAR_CountsTo_uVolts) are only valid for right alignment.
 923:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * */
 924:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
 925:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
 926:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_RIGHT_ALIGN  = 0uL << SAR_SAMPLE_CTRL_LEFT_ALIGN_Pos,    /**< Right align result data to
 927:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_LEFT_ALIGN   = 1uL << SAR_SAMPLE_CTRL_LEFT_ALIGN_Pos     /**< Left align result data to 
 928:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_sample_ctrl_result_align_t;
 929:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 930:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Configure format, signed or unsigned, of single-ended channels */
 931:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
 932:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
 933:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_SINGLE_ENDED_UNSIGNED  = 0uL << SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_Pos,    /**< Result 
 934:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_SINGLE_ENDED_SIGNED    = 1uL << SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_Pos     /**< Result 
 935:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_sample_ctrl_single_ended_format_t;
 936:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 937:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Configure format, signed or unsigned, of differential channels */
 938:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
 939:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
 940:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_DIFFERENTIAL_UNSIGNED  = 0uL << SAR_SAMPLE_CTRL_DIFFERENTIAL_SIGNED_Pos,    /**< Result 
 941:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_DIFFERENTIAL_SIGNED    = 1uL << SAR_SAMPLE_CTRL_DIFFERENTIAL_SIGNED_Pos     /**< Result 
 942:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_sample_ctrl_differential_format_t;
 943:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 18


 944:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Configure number of samples for averaging.
 945:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This applies only to channels with averaging enabled.
 946:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
 947:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
 948:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
 949:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_AVG_CNT_2          = 0uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 950:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_AVG_CNT_4          = 1uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 951:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_AVG_CNT_8          = 2uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 952:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_AVG_CNT_16         = 3uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 953:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_AVG_CNT_32         = 4uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 954:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_AVG_CNT_64         = 5uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 955:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_AVG_CNT_128        = 6uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 956:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_AVG_CNT_256        = 7uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos     /**< Set samples averaged to
 957:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_sample_ctrl_avg_cnt_t;
 958:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 959:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Configure the averaging mode.
 960:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 961:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * - Sequential accumulate and dump: a channel will be sampled back to back.
 962:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   The result is added to a running sum in a 20-bit register. At the end
 963:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   of the scan, the accumulated value is shifted right to fit into 16 bits
 964:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   and stored into the CHAN_RESULT register.
 965:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * - Sequential fixed:  a channel will be sampled back to back.
 966:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   The result is added to a running sum in a 20-bit register. At the end
 967:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   of the scan, the accumulated value is shifted right to fit into 12 bits
 968:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   and stored into the CHAN_RESULT register.
 969:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * - Interleaved: a channel will be sampled once per scan.
 970:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   The result is added to a running sum in a 16-bit register.
 971:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   In the scan where the final averaging count is reached,
 972:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   the accumulated value is shifted right to fit into 12 bits
 973:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   and stored into the CHAN_RESULT register.
 974:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   In all other scans, the CHAN_RESULT will have an invalid result.
 975:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   In interleaved mode, make sure that the averaging
 976:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   count is low enough to ensure that the intermediate value does not exceed 16 bits,
 977:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   that is averaging count is 16 or less. Otherwise, the MSBs will be lost.
 978:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   In the special case that averaging is enabled for all enabled channels
 979:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   and interleaved mode is used, the interrupt frequency
 980:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   will be reduced by a factor of the number of samples averaged.
 981:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
 982:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
 983:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
 984:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_AVG_MODE_SEQUENTIAL_ACCUM    = 0uL,                               /**< Set mode to seque
 985:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_AVG_MODE_SEQUENTIAL_FIXED    = SAR_SAMPLE_CTRL_AVG_SHIFT_Msk,     /**< Set mode to seque
 986:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_AVG_MODE_INTERLEAVED         = SAR_SAMPLE_CTRL_AVG_MODE_Msk,      /**< Set mode to inter
 987:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_sample_ctrl_avg_mode_t;
 988:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 989:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Configure the trigger mode.
 990:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 991:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Firmware triggering is always enabled and can be single shot or continuous.
 992:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Additionally, hardware triggering can be enabled with the option to be
 993:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * edge or level sensitive.
 994:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
 995:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
 996:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
 997:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_TRIGGER_MODE_FW_ONLY        = 0uL,                                /**< Firmware trigger 
 998:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_TRIGGER_MODE_FW_AND_HWEDGE  = SAR_SAMPLE_CTRL_DSI_TRIGGER_EN_Msk, /**< Enable edge sensi
 999:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_TRIGGER_MODE_FW_AND_HWLEVEL = SAR_SAMPLE_CTRL_DSI_TRIGGER_EN_Msk | SAR_SAMPLE_CTRL_DSI_T
1000:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_sample_ctrl_trigger_mode_t;
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 19


1001:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1002:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /* \} */
1003:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1004:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \addtogroup group_sar_sample_time_shift_enums
1005:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This set of enumerations aids in configuring the SAR SAMPLE_TIME* registers
1006:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \{
1007:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
1008:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Configure the sample time by using these shifts */
1009:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
1010:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1011:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_SAMPLE_TIME0_SHIFT       = SAR_SAMPLE_TIME01_SAMPLE_TIME0_Pos,             /**< Shift fo
1012:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_SAMPLE_TIME1_SHIFT       = SAR_SAMPLE_TIME01_SAMPLE_TIME1_Pos,             /**< Shift fo
1013:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_SAMPLE_TIME2_SHIFT       = SAR_SAMPLE_TIME23_SAMPLE_TIME2_Pos,             /**< Shift fo
1014:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_SAMPLE_TIME3_SHIFT       = SAR_SAMPLE_TIME23_SAMPLE_TIME3_Pos,             /**< Shift fo
1015:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_sample_time_shift_t;
1016:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /* \} */
1017:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1018:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \addtogroup group_sar_range_thres_register_enums
1019:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This set of enumerations aids in configuring the SAR RANGE* registers
1020:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \{
1021:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
1022:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Configure the lower and upper thresholds for range detection
1023:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1024:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The SARSEQ supports range detection to allow for automatic detection of sample
1025:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * values compared to two programmable thresholds without CPU involvement.
1026:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Range detection is defined by two global thresholds and a condition.
1027:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The RANGE_LOW value defines the lower threshold and RANGE_HIGH defines
1028:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * the upper threshold of the range.
1029:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1030:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Range detect is done after averaging, alignment, and sign extension (if applicable).
1031:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * In other words, the thresholds values must have the same data format as the result data.
1032:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Range detection is always done for all channels scanned. By making RANGE_INTR_MASK=0,
1033:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * the firmware can choose to ignore the range detect interrupt for any channel.
1034:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
1035:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
1036:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1037:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_RANGE_LOW_SHIFT      = SAR_RANGE_THRES_RANGE_LOW_Pos,        /**< Shift for setting lowe
1038:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_RANGE_HIGH_SHIFT     = SAR_RANGE_THRES_RANGE_HIGH_Pos,       /**< Shift for setting uppe
1039:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_range_thres_shift_t;
1040:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1041:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Configure the condition (below, inside, above, or outside) of the range detection interrupt */
1042:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
1043:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1044:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_RANGE_COND_BELOW     = 0uL,  /**< Range interrupt detected when result < RANGE_LOW */
1045:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_RANGE_COND_INSIDE    = 1uL,  /**< Range interrupt detected when RANGE_LOW <= result < RA
1046:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_RANGE_COND_ABOVE     = 2uL,  /**< Range interrupt detected when RANGE_HIGH <= result */
1047:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_RANGE_COND_OUTSIDE   = 3uL,  /**< Range interrupt detected when result < RANGE_LOW || RA
1048:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_range_detect_condition_t;
1049:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /* \} */
1050:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1051:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \addtogroup group_sar_chan_config_register_enums
1052:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This set of enumerations aids in configuring the SAR CHAN_CONFIG register
1053:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \{
1054:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
1055:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Configure the input mode of the channel
1056:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1057:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * - Single ended channel: the \ref cy_en_sar_ctrl_neg_sel_t selection in the \ref group_sar_init_st
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 20


1058:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   determines what drives the Vminus pin
1059:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * - Differential paired: Vplus and Vminus are a pair. Bit 0 of \ref cy_en_sar_chan_config_pos_pin_a
1060:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   is ignored and considered to be 0.
1061:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   In other words, \ref cy_en_sar_chan_config_pos_pin_addr_t "POS_PIN_ADDR" points to the even pin
1062:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   The even pin is connected to Vplus and the odd pin is connected to Vminus.
1063:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   \ref cy_en_sar_chan_config_pos_port_addr_t "POS_PORT_ADDR" is used to identify the port that co
1064:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * - Differential unpaired: The \ref cy_en_sar_chan_config_neg_pin_addr_t "NEG_PIN_ADDR" and
1065:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   \ref cy_en_sar_chan_config_neg_port_addr_t "NEG_PORT_ADDR" determine what drives the Vminus pin
1066:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   This is a variation of differential mode with no even-odd pair limitation
1067:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
1068:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
1069:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1070:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CHAN_SINGLE_ENDED            = 0uL,                                     /**< Single ende
1071:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CHAN_DIFFERENTIAL_PAIRED     = SAR_CHAN_CONFIG_DIFFERENTIAL_EN_Msk,     /**< Differentia
1072:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CHAN_DIFFERENTIAL_UNPAIRED   = SAR_CHAN_CONFIG_NEG_ADDR_EN_Msk          /**< Differentia
1073:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_chan_config_input_mode_t;
1074:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1075:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Configure address of the pin connected to the Vplus terminal of the SARADC. */
1076:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
1077:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1078:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_0     = 0uL,                                            /**< Pin 0 on 
1079:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_1     = 1uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 1 on 
1080:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_2     = 2uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 2 on 
1081:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_3     = 3uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 3 on 
1082:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_4     = 4uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 4 on 
1083:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_5     = 5uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 5 on 
1084:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_6     = 6uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 6 on 
1085:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_7     = 7uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 7 on 
1086:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_chan_config_pos_pin_addr_t;
1087:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1088:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Configure address of the port that contains the pin connected to the Vplus terminal of the SARA
1089:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1090:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * - \ref CY_SAR_POS_PORT_ADDR_SARMUX is for the dedicated SARMUX port (8 pins)
1091:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * - Port 1 through 4 are respectively the pins of CTB0, CTB1, CTB2, and CTB3 (if present)
1092:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * - Port 7, 5, and 6 (VPORT0/1/2) are the groups of internal signals that can be selected
1093:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   in the SARMUX or AROUTE (if present).
1094:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1095:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * See the \ref group_sar_sarmux section for more guidance.
1096:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
1097:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
1098:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1099:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_SARMUX         = 0uL,                                       /**< Dedicated
1100:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_CTB0           = 1uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< Outputs f
1101:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_CTB1           = 2uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< Outputs f
1102:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_CTB2           = 3uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< Outputs f
1103:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_CTB3           = 4uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< Outputs f
1104:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_AROUTE_VIRT2   = 5uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< AROUTE vi
1105:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_AROUTE_VIRT1   = 6uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< AROUTE vi
1106:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_SARMUX_VIRT    = 7uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< SARMUX vi
1107:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_chan_config_pos_port_addr_t;
1108:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1109:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Enable or disable averaging for the channel */
1110:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
1111:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1112:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CHAN_AVG_DISABLE      = 0uL,                                 /**< Disable averaging for 
1113:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CHAN_AVG_ENABLE       = 1uL << SAR_CHAN_CONFIG_AVG_EN_Pos    /**< Enable averaging for t
1114:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_chan_config_avg_en_t;
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 21


1115:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1116:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Select which sample time to use for the channel.
1117:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * There are four global samples times available set by \ref group_sar_init_struct_sampleTime01 and
1118:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \ref group_sar_init_struct_sampleTime23.
1119:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
1120:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
1121:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1122:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CHAN_SAMPLE_TIME_0     = 0uL,                                          /**< Use sample t
1123:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CHAN_SAMPLE_TIME_1     = 1uL << SAR_CHAN_CONFIG_SAMPLE_TIME_SEL_Pos,   /**< Use sample t
1124:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CHAN_SAMPLE_TIME_2     = 2uL << SAR_CHAN_CONFIG_SAMPLE_TIME_SEL_Pos,   /**< Use sample t
1125:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CHAN_SAMPLE_TIME_3     = 3uL << SAR_CHAN_CONFIG_SAMPLE_TIME_SEL_Pos,   /**< Use sample t
1126:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_chan_config_sample_time_t;
1127:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1128:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Configure address of the pin connected to the Vminus terminal of the SARADC. */
1129:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
1130:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1131:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_0     = 0uL,                                            /**< Pin 0 on 
1132:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_1     = 1uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 1 on 
1133:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_2     = 2uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 2 on 
1134:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_3     = 3uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 3 on 
1135:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_4     = 4uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 4 on 
1136:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_5     = 5uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 5 on 
1137:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_6     = 6uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 6 on 
1138:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_7     = 7uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 7 on 
1139:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_chan_config_neg_pin_addr_t;
1140:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1141:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Configure address of the port that contains the pin connected to the Vminus terminal of the SAR
1142:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1143:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * - Port 0 is 8 pins of the SARMUX
1144:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * - Port 7, 5, and 6 (VPORT0/1/2) are the groups of internal signals that can be selected
1145:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   in the SARMUX or AROUTE (if present).
1146:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
1147:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
1148:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1149:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_NEG_PORT_ADDR_SARMUX         = 0uL,                                       /**< Dedicated
1150:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_NEG_PORT_ADDR_AROUTE_VIRT2   = 5uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< AROUTE vi
1151:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_NEG_PORT_ADDR_AROUTE_VIRT1   = 6uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< AROUTE vi
1152:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_NEG_PORT_ADDR_SARMUX_VIRT    = 7uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< SARMUX vi
1153:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_chan_config_neg_port_addr_t;
1154:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1155:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /* \} */
1156:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1157:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \addtogroup group_sar_intr_mask_t_register_enums
1158:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This set of enumerations aids in configuring the SAR INTR_MASK register
1159:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \{
1160:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
1161:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Configure which signal will cause an interrupt event.
1162:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1163:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * - End of scan (EOS): occurs after completing a scan of all enabled channels
1164:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * - Overflow: occurs when hardware sets a new EOS interrupt while the previous interrupt
1165:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   has not be cleared by the firmware
1166:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * - Firmware collision: occurs when firmware attempts to start one-shot
1167:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   conversion while the SAR is busy.
1168:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1169:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Enable all, one, or none of the interrupt events.
1170:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
1171:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 22


1172:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1173:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_INTR_MASK_NONE           = 0uL,                                  /**< Disable all interr
1174:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_INTR_EOS_MASK            = SAR_INTR_MASK_EOS_MASK_Msk,           /**< Enable end of scan
1175:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_INTR_OVERFLOW_MASK       = SAR_INTR_MASK_OVERFLOW_MASK_Msk,      /**< Enable overflow in
1176:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_INTR_FW_COLLISION_MASK   = SAR_INTR_MASK_FW_COLLISION_MASK_Msk,  /**< Enable firmware co
1177:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_intr_mask_t;
1178:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1179:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /* \} */
1180:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1181:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \addtogroup group_sar_mux_switch_register_enums
1182:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This set of enumerations aids in configuring the \ref group_sar_init_struct_muxSwitch and \ref gr
1183:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \{
1184:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
1185:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1186:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Firmware control for the SARMUX switches to connect analog signals to the SAR ADC
1187:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1188:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * To close multiple switches, "OR" the enum values together.
1189:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1190:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * See the \ref group_sar_sarmux section for more guidance.
1191:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
1192:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
1193:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1194:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     /* SARMUX pins to Vplus */
1195:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_FW_P0_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P0_VPLUS_Msk,    /**< Switch between Pi
1196:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_FW_P1_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P1_VPLUS_Msk,    /**< Switch between Pi
1197:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_FW_P2_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P2_VPLUS_Msk,    /**< Switch between Pi
1198:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_FW_P3_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P3_VPLUS_Msk,    /**< Switch between Pi
1199:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_FW_P4_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P4_VPLUS_Msk,    /**< Switch between Pi
1200:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_FW_P5_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P5_VPLUS_Msk,    /**< Switch between Pi
1201:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_FW_P6_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P6_VPLUS_Msk,    /**< Switch between Pi
1202:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_FW_P7_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P7_VPLUS_Msk,    /**< Switch between Pi
1203:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1204:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     /* SARMUX pins to Vminus */
1205:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_FW_P0_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P0_VMINUS_Msk,   /**< Switch between Pi
1206:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_FW_P1_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P1_VMINUS_Msk,   /**< Switch between Pi
1207:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_FW_P2_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P2_VMINUS_Msk,   /**< Switch between Pi
1208:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_FW_P3_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P3_VMINUS_Msk,   /**< Switch between Pi
1209:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_FW_P4_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P4_VMINUS_Msk,   /**< Switch between Pi
1210:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_FW_P5_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P5_VMINUS_Msk,   /**< Switch between Pi
1211:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_FW_P6_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P6_VMINUS_Msk,   /**< Switch between Pi
1212:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_FW_P7_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P7_VMINUS_Msk,   /**< Switch between Pi
1213:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1214:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     /* Vssa to Vminus and temperature sensor to Vplus */
1215:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_FW_VSSA_VMINUS      = SAR_MUX_SWITCH0_MUX_FW_VSSA_VMINUS_Msk,    /**< Switch between
1216:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_FW_TEMP_VPLUS       = SAR_MUX_SWITCH0_MUX_FW_TEMP_VPLUS_Msk,     /**< Switch between
1217:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1218:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     /* Amuxbus A and B to Vplus and Vminus */
1219:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_FW_AMUXBUSA_VPLUS   = SAR_MUX_SWITCH0_MUX_FW_AMUXBUSA_VPLUS_Msk,     /**< Switch bet
1220:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_FW_AMUXBUSB_VPLUS   = SAR_MUX_SWITCH0_MUX_FW_AMUXBUSB_VPLUS_Msk,     /**< Switch bet
1221:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_FW_AMUXBUSA_VMINUS  = SAR_MUX_SWITCH0_MUX_FW_AMUXBUSA_VMINUS_Msk,    /**< Switch bet
1222:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_FW_AMUXBUSB_VMINUS  = SAR_MUX_SWITCH0_MUX_FW_AMUXBUSB_VMINUS_Msk,    /**< Switch bet
1223:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1224:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     /* Sarbus 0 and 1 to Vplus and Vminus */
1225:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_FW_SARBUS0_VPLUS    = SAR_MUX_SWITCH0_MUX_FW_SARBUS0_VPLUS_Msk,      /**< Switch bet
1226:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_FW_SARBUS1_VPLUS    = SAR_MUX_SWITCH0_MUX_FW_SARBUS1_VPLUS_Msk,      /**< Switch bet
1227:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_FW_SARBUS0_VMINUS   = SAR_MUX_SWITCH0_MUX_FW_SARBUS0_VMINUS_Msk,     /**< Switch bet
1228:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_FW_SARBUS1_VMINUS   = SAR_MUX_SWITCH0_MUX_FW_SARBUS1_VMINUS_Msk,     /**< Switch bet
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 23


1229:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1230:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     /* SARMUX pins to Core IO */
1231:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_FW_P4_COREIO0       = SAR_MUX_SWITCH0_MUX_FW_P4_COREIO0_Msk,      /**< Switch betwee
1232:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_FW_P5_COREIO1       = SAR_MUX_SWITCH0_MUX_FW_P5_COREIO1_Msk,      /**< Switch betwee
1233:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_FW_P6_COREIO2       = SAR_MUX_SWITCH0_MUX_FW_P6_COREIO2_Msk,      /**< Switch betwee
1234:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_FW_P7_COREIO3       = SAR_MUX_SWITCH0_MUX_FW_P7_COREIO3_Msk,      /**< Switch betwee
1235:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_mux_switch_fw_ctrl_t;
1236:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1237:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Mask definitions of SARMUX switches that can be controlled by the SARSEQ.
1238:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1239:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * To enable sequencer control of multiple switches, "OR" the enum values together.
1240:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1241:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * See the \ref group_sar_sarmux section for more guidance.
1242:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
1243:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
1244:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1245:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P0           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P0_Msk,        /**< Enable
1246:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P1           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P1_Msk,        /**< Enable
1247:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P2           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P2_Msk,        /**< Enable
1248:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P3           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P3_Msk,        /**< Enable
1249:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P4           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P4_Msk,        /**< Enable
1250:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P5           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P5_Msk,        /**< Enable
1251:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P6           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P6_Msk,        /**< Enable
1252:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P7           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P7_Msk,        /**< Enable
1253:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_VSSA         = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_VSSA_Msk,      /**< Enable
1254:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_TEMP         = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_TEMP_Msk,      /**< Enable
1255:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_AMUXBUSA     = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_AMUXBUSA_Msk,  /**< Enable
1256:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_AMUXBUSB     = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_AMUXBUSB_Msk,  /**< Enable
1257:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_SARBUS0      = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_SARBUS0_Msk,   /**< Enable
1258:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_SARBUS1      = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_SARBUS1_Msk,   /**< Enable
1259:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_mux_switch_sq_ctrl_t;
1260:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1261:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /* \} */
1262:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1263:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \} group_sar_enums */
1264:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1265:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \addtogroup group_sar_data_structures
1266:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \{
1267:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
1268:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1269:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /***************************************
1270:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *       Configuration Structures
1271:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** ***************************************/
1272:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1273:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** This structure is used to initialize the SAR ADC subsystem.
1274:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1275:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The SAR ADC subsystem is highly configurable with many options.
1276:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * When calling \ref Cy_SAR_Init, provide a pointer to the structure containing this configuration d
1277:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * A set of enumerations is provided in this
1278:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * driver to help with configuring this structure.
1279:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1280:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * See the \ref group_sar_initialization section for guidance.
1281:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** **/
1282:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef struct
1283:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1284:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     uint32_t ctrl;                                      /**< Control register settings (applies to 
1285:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     uint32_t sampleCtrl;                                /**< Sample control register settings (appl
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 24


1286:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     uint32_t sampleTime01;                              /**< Sample time in ADC clocks for Sample T
1287:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     uint32_t sampleTime23;                              /**< Sample time in ADC clocks for Sample T
1288:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     uint32_t rangeThres;                                /**< Range detect threshold register for al
1289:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     cy_en_sar_range_detect_condition_t rangeCond;       /**< Range detect condition (below, inside,
1290:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     uint32_t chanEn;                                    /**< Enable bits for the channels */
1291:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     uint32_t chanConfig[CY_SAR_MAX_NUM_CHANNELS];       /**< Channel configuration */
1292:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     uint32_t intrMask;                                  /**< Interrupt enable mask */
1293:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     uint32_t satIntrMask;                               /**< Saturation detection interrupt enable 
1294:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     uint32_t rangeIntrMask;                             /**< Range detection interrupt enable mask 
1295:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     uint32_t muxSwitch;                                 /**< SARMUX firmware switches to connect an
1296:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     uint32_t muxSwitchSqCtrl;                           /**< Enable SARSEQ control of specific SARM
1297:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     bool configRouting;                                 /**< Configure or ignore routing related re
1298:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     uint32_t vrefMvValue;                               /**< Reference voltage in millivolts used i
1299:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** } cy_stc_sar_config_t;
1300:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1301:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** This structure is used by the driver to backup the state of the SAR
1302:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * before entering sleep so that it can be re-enabled after waking up */
1303:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef struct
1304:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1305:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     uint32_t hwEnabled;         /**< SAR enabled state */
1306:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     uint32_t continuous;        /**< State of the continuous bit */
1307:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** } cy_stc_sar_state_backup_t;
1308:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1309:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \} group_sar_data_structures */
1310:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1311:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \addtogroup group_sar_functions
1312:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \{
1313:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
1314:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1315:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** This macro is for backward compatibility macro for driver v1.10 and before, 
1316:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****  * the preferred API is \ref Cy_SAR_DeepSleep */
1317:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define Cy_SAR_Sleep    Cy_SAR_DeepSleep
1318:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1319:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /***************************************
1320:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *        Function Prototypes
1321:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** ***************************************/
1322:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1323:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \addtogroup group_sar_functions_basic
1324:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This set of functions is for initialization and basic usage
1325:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \{
1326:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
1327:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** cy_en_sar_status_t Cy_SAR_Init(SAR_Type *base, const cy_stc_sar_config_t *config);
1328:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** cy_en_sar_status_t Cy_SAR_DeInit(SAR_Type *base, bool deInitRouting);
1329:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** void Cy_SAR_Enable(SAR_Type *base);
1330:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_Disable(SAR_Type *base);
1331:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** void Cy_SAR_StartConvert(SAR_Type *base, cy_en_sar_start_convert_sel_t startSelect);
1332:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** void Cy_SAR_StopConvert(SAR_Type *base);
1333:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** cy_en_sar_status_t Cy_SAR_IsEndConversion(SAR_Type *base, cy_en_sar_return_mode_t retMode);
1334:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** int16_t Cy_SAR_GetResult16(const SAR_Type *base, uint32_t chan);
1335:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** int32_t Cy_SAR_GetResult32(const SAR_Type *base, uint32_t chan);
1336:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetChanResultUpdated(const SAR_Type *base);
1337:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \} */
1338:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1339:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \addtogroup group_sar_functions_power
1340:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This set of functions is for Deep Sleep entry and exit
1341:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \{
1342:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 25


1343:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** cy_en_syspm_status_t Cy_SAR_DeepSleepCallback(cy_stc_syspm_callback_params_t *callbackParams, cy_en
1344:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** void Cy_SAR_DeepSleep(SAR_Type *base);
1345:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** void Cy_SAR_Wakeup(SAR_Type *base);
1346:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \} */
1347:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1348:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \addtogroup group_sar_functions_config
1349:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This set of functions allows changes to the SAR configuration
1350:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * after initialization.
1351:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \{
1352:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
1353:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** void Cy_SAR_SetConvertMode(SAR_Type *base, cy_en_sar_sample_ctrl_trigger_mode_t mode);
1354:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetChanMask(SAR_Type *base, uint32_t enableMask);
1355:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** void Cy_SAR_SetLowLimit(SAR_Type *base, uint32_t lowLimit);
1356:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** void Cy_SAR_SetHighLimit(SAR_Type *base, uint32_t highLimit);
1357:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetRangeCond(SAR_Type *base, cy_en_sar_range_detect_condition_t cond);
1358:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \} */
1359:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1360:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \addtogroup group_sar_functions_countsto
1361:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This set of functions performs counts to *volts conversions.
1362:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \{
1363:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
1364:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** int16_t Cy_SAR_RawCounts2Counts(const SAR_Type *base, uint32_t chan, int16_t adcCounts);
1365:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** float32_t Cy_SAR_CountsTo_Volts(const SAR_Type *base, uint32_t chan, int16_t adcCounts);
1366:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** int16_t Cy_SAR_CountsTo_mVolts(const SAR_Type *base, uint32_t chan, int16_t adcCounts);
1367:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** int32_t Cy_SAR_CountsTo_uVolts(const SAR_Type *base, uint32_t chan, int16_t adcCounts);
1368:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** cy_en_sar_status_t Cy_SAR_SetOffset(uint32_t chan, int16_t offset);
1369:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** cy_en_sar_status_t Cy_SAR_SetGain(uint32_t chan, int32_t adcGain);
1370:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \} */
1371:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1372:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \addtogroup group_sar_functions_switches
1373:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This set of functions is for controlling/querying the SARMUX switches
1374:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \{
1375:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
1376:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** void Cy_SAR_SetAnalogSwitch(SAR_Type *base, cy_en_sar_switch_register_sel_t switchSelect, uint32_t 
1377:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** uint32_t Cy_SAR_GetAnalogSwitch(const SAR_Type *base, cy_en_sar_switch_register_sel_t switchSelect)
1378:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetVssaVminusSwitch(SAR_Type *base, cy_en_sar_switch_state_t state);
1379:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** void Cy_SAR_SetSwitchSarSeqCtrl(SAR_Type *base, uint32_t switchMask, cy_en_sar_switch_sar_seq_ctrl_
1380:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetVssaSarSeqCtrl(SAR_Type *base, cy_en_sar_switch_sar_seq_ctrl_t ctrl)
1381:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \} */
1382:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1383:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \addtogroup group_sar_functions_interrupt
1384:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This set of functions are related to SAR interrupts.
1385:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \{
1386:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
1387:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetInterruptStatus(const SAR_Type *base);
1388:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_ClearInterrupt(SAR_Type *base, uint32_t intrMask);
1389:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetInterrupt(SAR_Type *base, uint32_t intrMask);
1390:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetInterruptMask(SAR_Type *base, uint32_t intrMask);
1391:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetInterruptMask(const SAR_Type *base);
1392:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetInterruptStatusMasked(const SAR_Type *base);
1393:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1394:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetRangeInterruptStatus(const SAR_Type *base);
1395:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_ClearRangeInterrupt(SAR_Type *base, uint32_t chanMask);
1396:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetRangeInterrupt(SAR_Type *base, uint32_t chanMask);
1397:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetRangeInterruptMask(SAR_Type *base, uint32_t chanMask);
1398:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetRangeInterruptMask(const SAR_Type *base);
1399:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetRangeInterruptStatusMasked(const SAR_Type *base);
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 26


1400:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1401:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetSatInterruptStatus(const SAR_Type *base);
1402:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_ClearSatInterrupt(SAR_Type *base, uint32_t chanMask);
1403:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetSatInterrupt(SAR_Type *base, uint32_t chanMask);
1404:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetSatInterruptMask(SAR_Type *base, uint32_t chanMask);
1405:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetSatInterruptMask(const SAR_Type *base);
1406:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetSatInterruptStatusMasked(const SAR_Type *base);
1407:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1408:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetInterruptCause(const SAR_Type *base);
1409:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \} */
1410:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1411:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1412:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \addtogroup group_sar_functions_helper
1413:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This set of functions is for useful configuration query
1414:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \{
1415:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
1416:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** bool Cy_SAR_IsChannelSigned(const SAR_Type *base, uint32_t chan);
1417:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** bool Cy_SAR_IsChannelSingleEnded(const SAR_Type *base, uint32_t chan);
1418:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE bool Cy_SAR_IsChannelDifferential(const SAR_Type *base, uint32_t chan);
1419:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \} */
1420:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1421:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \addtogroup group_sar_functions_basic
1422:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \{
1423:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
1424:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1425:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1426:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /*******************************************************************************
1427:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Function Name: Cy_SAR_Disable
1428:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** ****************************************************************************//**
1429:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1430:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Turn off the hardware block.
1431:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1432:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param base
1433:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Pointer to structure describing registers
1434:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1435:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \return None
1436:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1437:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *******************************************************************************/
1438:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_Disable(SAR_Type *base)
1439:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1440:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     SAR_CTRL(base) &= ~SAR_CTRL_ENABLED_Msk;
1441:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }
1442:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1443:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1444:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /*******************************************************************************
1445:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Function Name: Cy_SAR_GetChanResultUpdated
1446:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** ****************************************************************************//**
1447:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1448:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Return whether the RESULT register has been updated or not.
1449:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * If the bit is high, the corresponding channel RESULT register was updated,
1450:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * i.e. was sampled during the previous scan and, in case of Interleaved averaging,
1451:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * reached the averaging count.
1452:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * If the bit is low, the corresponding channel is not enabled or the averaging count
1453:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * is not yet reached for Interleaved averaging.
1454:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1455:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param base
1456:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Pointer to structure describing registers
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 27


1457:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1458:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \return
1459:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Each bit of the result corresponds to the channel.
1460:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Bit 0 is for channel 0, etc.
1461:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1462:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \funcusage
1463:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1464:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_GET_CHAN_RESULT_UPDATED
1465:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1466:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *******************************************************************************/
1467:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetChanResultUpdated(const SAR_Type *base)
1468:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1469:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     return SAR_CHAN_RESULT_UPDATED(base);
1470:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }
1471:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \} */
1472:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1473:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \addtogroup group_sar_functions_config
1474:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \{
1475:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
1476:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1477:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1478:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /*******************************************************************************
1479:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Function Name: Cy_SAR_SetChanMask
1480:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** ****************************************************************************//**
1481:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1482:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Set the enable/disable mask for the channels.
1483:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1484:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param base
1485:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Pointer to structure describing registers
1486:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1487:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param enableMask
1488:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Channel enable/disable mask. Each bit corresponds to a channel.
1489:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * - 0: the corresponding channel is disabled.
1490:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * - 1: the corresponding channel is enabled; it will be included in the next scan.
1491:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1492:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \return None
1493:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1494:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \funcusage
1495:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1496:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SET_CHAN_MASK
1497:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1498:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *******************************************************************************/
1499:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetChanMask(SAR_Type *base, uint32_t enableMask)
1500:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1501:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_ASSERT_L2(CY_SAR_CHANMASK(enableMask));
1502:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1503:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     SAR_CHAN_EN(base) = enableMask;
1504:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }
1505:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1506:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1507:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /*******************************************************************************
1508:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Function Name: Cy_SAR_SetRangeCond
1509:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** ****************************************************************************//**
1510:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1511:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Set the condition in which range detection interrupts are triggered.
1512:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1513:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param base
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 28


1514:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Pointer to structure describing registers
1515:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1516:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param cond
1517:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * A value of the enum \ref cy_en_sar_range_detect_condition_t.
1518:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1519:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \return None
1520:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1521:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \funcusage
1522:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1523:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SET_RANGE_COND
1524:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1525:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *******************************************************************************/
1526:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetRangeCond(SAR_Type *base, cy_en_sar_range_detect_condition_t cond)
1527:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1528:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_ASSERT_L3(CY_SAR_RANGECOND(cond));
1529:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1530:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     SAR_RANGE_COND(base) = (uint32_t)cond << SAR_RANGE_COND_RANGE_COND_Pos;
1531:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }
1532:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1533:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \} */
1534:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1535:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \addtogroup group_sar_functions_interrupt
1536:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \{
1537:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
1538:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /*******************************************************************************
1539:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Function Name: Cy_SAR_GetInterruptStatus
1540:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** ****************************************************************************//**
1541:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1542:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Return the interrupt register status.
1543:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1544:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param base
1545:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Pointer to structure describing registers
1546:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1547:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \return Interrupt status
1548:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1549:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \funcusage
1550:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1551:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_ISR
1552:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1553:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *******************************************************************************/
1554:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetInterruptStatus(const SAR_Type *base)
1555:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1556:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     return SAR_INTR(base);
1557:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }
1558:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1559:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1560:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /*******************************************************************************
1561:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Function Name: Cy_SAR_ClearInterrupt
1562:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** ****************************************************************************//**
1563:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1564:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Clear the interrupt.
1565:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The interrupt must be cleared with this function so that the hardware
1566:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * can set subsequent interrupts and those interrupts can be forwarded
1567:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * to the interrupt controller, if enabled.
1568:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1569:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param base
1570:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Pointer to structure describing registers
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 29


1571:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1572:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param intrMask
1573:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The mask of interrupts to clear. Typically this will be the value returned
1574:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * from \ref Cy_SAR_GetInterruptStatus.
1575:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Alternately, select one or more values from \ref cy_en_sar_intr_mask_t and "OR" them together.
1576:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * - \ref CY_SAR_INTR_EOS_MASK
1577:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * - \ref CY_SAR_INTR_OVERFLOW_MASK
1578:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * - \ref CY_SAR_INTR_FW_COLLISION_MASK
1579:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1580:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \return None
1581:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1582:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *******************************************************************************/
1583:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_ClearInterrupt(SAR_Type *base, uint32_t intrMask)
1584:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1585:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_ASSERT_L2(CY_SAR_INTRMASK(intrMask));
1586:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1587:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     SAR_INTR(base) = intrMask;
1588:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1589:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     /* Dummy read for buffered writes. */
1590:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     (void) SAR_INTR(base);
1591:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }
1592:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1593:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1594:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /*******************************************************************************
1595:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Function Name: Cy_SAR_SetInterrupt
1596:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** ****************************************************************************//**
1597:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1598:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Trigger an interrupt with software.
1599:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1600:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param base
1601:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Pointer to structure describing registers
1602:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1603:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param intrMask
1604:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The mask of interrupts to set.
1605:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Select one or more values from \ref cy_en_sar_intr_mask_t and "OR" them together.
1606:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * - \ref CY_SAR_INTR_EOS_MASK
1607:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * - \ref CY_SAR_INTR_OVERFLOW_MASK
1608:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * - \ref CY_SAR_INTR_FW_COLLISION_MASK
1609:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1610:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \return None
1611:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1612:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *******************************************************************************/
1613:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetInterrupt(SAR_Type *base, uint32_t intrMask)
1614:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1615:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_ASSERT_L2(CY_SAR_INTRMASK(intrMask));
1616:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1617:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     SAR_INTR_SET(base) = intrMask;
1618:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }
1619:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1620:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1621:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /*******************************************************************************
1622:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Function Name: Cy_SAR_SetInterruptMask
1623:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** ****************************************************************************//**
1624:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1625:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Enable which interrupts can trigger the CPU interrupt controller.
1626:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1627:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param base
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 30


1628:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Pointer to structure describing registers
1629:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1630:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param intrMask
1631:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The mask of interrupts. Select one or more values from \ref cy_en_sar_intr_mask_t
1632:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * and "OR" them together.
1633:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * - \ref CY_SAR_INTR_MASK_NONE : Disable EOS, overflow, and firmware collision interrupts.
1634:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * - \ref CY_SAR_INTR_EOS_MASK
1635:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * - \ref CY_SAR_INTR_OVERFLOW_MASK
1636:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * - \ref CY_SAR_INTR_FW_COLLISION_MASK
1637:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1638:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \return None
1639:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1640:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \funcusage
1641:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1642:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SET_INTERRUPT_MASK
1643:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1644:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *******************************************************************************/
1645:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetInterruptMask(SAR_Type *base, uint32_t intrMask)
1646:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1647:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_ASSERT_L2(CY_SAR_INTRMASK(intrMask));
1648:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1649:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     SAR_INTR_MASK(base) = intrMask;
1650:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }
1651:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1652:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1653:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /*******************************************************************************
1654:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Function Name: Cy_SAR_GetInterruptMask
1655:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** ****************************************************************************//**
1656:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1657:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Return which interrupts can trigger the CPU interrupt controller
1658:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * as configured by \ref Cy_SAR_SetInterruptMask.
1659:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1660:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param base
1661:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Pointer to structure describing registers
1662:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1663:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \return
1664:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Interrupt mask. Compare this value with masks in \ref cy_en_sar_intr_mask_t.
1665:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1666:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \funcusage
1667:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1668:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_GET_INTERRUPT_MASK
1669:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1670:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *******************************************************************************/
1671:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetInterruptMask(const SAR_Type *base)
1672:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1673:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     return SAR_INTR_MASK(base);
1674:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }
1675:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1676:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1677:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /*******************************************************************************
1678:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Function Name: Cy_SAR_GetInterruptStatusMasked
1679:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** ****************************************************************************//**
1680:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1681:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Return the bitwise AND between the interrupt request and mask registers.
1682:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * See \ref Cy_SAR_GetInterruptStatus and \ref Cy_SAR_GetInterruptMask.
1683:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1684:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param base
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 31


1685:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Pointer to structure describing registers
1686:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1687:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \return
1688:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Bitwise AND of the interrupt request and mask registers
1689:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1690:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *******************************************************************************/
1691:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetInterruptStatusMasked(const SAR_Type *base)
1692:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1693:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     return SAR_INTR_MASKED(base);
1694:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }
1695:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1696:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1697:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /*******************************************************************************
1698:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Function Name: Cy_SAR_GetRangeInterruptStatus
1699:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** ****************************************************************************//**
1700:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1701:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Return the range interrupt register status.
1702:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * If the status bit is low for a channel, the channel may not be enabled
1703:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * (\ref Cy_SAR_SetChanMask), range detection is not enabled for the
1704:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * channel (\ref Cy_SAR_SetRangeInterruptMask), or range detection was not
1705:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * triggered for the channel.
1706:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1707:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param base
1708:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Pointer to structure describing registers
1709:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1710:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \return
1711:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The range interrupt status for all channels. Bit 0 is for channel 0, etc.
1712:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1713:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \funcusage
1714:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1715:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_GET_RANGE_INTERRUPT_STATUS
1716:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1717:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *******************************************************************************/
1718:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetRangeInterruptStatus(const SAR_Type *base)
1719:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1720:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     return SAR_RANGE_INTR(base);
1721:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }
1722:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1723:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1724:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /*******************************************************************************
1725:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Function Name: Cy_SAR_ClearRangeInterrupt
1726:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** ****************************************************************************//**
1727:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1728:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Clear the range interrupt for the specified channel mask.
1729:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The interrupt must be cleared with this function so that
1730:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * the hardware can set subset interrupts and those interrupts can
1731:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * be forwarded to the interrupt controller, if enabled.
1732:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1733:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param base
1734:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Pointer to structure describing registers
1735:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1736:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param chanMask
1737:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The channel mask. Bit 0 is for channel 0, etc.
1738:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Typically, this is the value returned from \ref Cy_SAR_GetRangeInterruptStatus.
1739:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1740:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \return None
1741:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 32


1742:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *******************************************************************************/
1743:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_ClearRangeInterrupt(SAR_Type *base, uint32_t chanMask)
1744:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1745:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_ASSERT_L2(CY_SAR_CHANMASK(chanMask));
1746:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1747:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     SAR_RANGE_INTR(base) = chanMask;
1748:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1749:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     /* Dummy read for buffered writes. */
1750:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     (void) SAR_RANGE_INTR(base);
1751:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }
1752:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1753:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1754:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /*******************************************************************************
1755:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Function Name: Cy_SAR_SetRangeInterrupt
1756:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** ****************************************************************************//**
1757:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1758:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Trigger a range interrupt with software for the specific channel mask.
1759:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1760:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param base
1761:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Pointer to structure describing registers
1762:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1763:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param chanMask
1764:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The channel mask. Bit 0 is for channel 0, etc.
1765:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1766:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \return None
1767:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1768:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *******************************************************************************/
1769:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetRangeInterrupt(SAR_Type *base, uint32_t chanMask)
1770:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1771:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_ASSERT_L2(CY_SAR_CHANMASK(chanMask));
1772:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1773:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     SAR_RANGE_INTR_SET(base) = chanMask;
1774:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }
1775:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1776:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1777:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /*******************************************************************************
1778:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Function Name: Cy_SAR_SetRangeInterruptMask
1779:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** ****************************************************************************//**
1780:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1781:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Enable which channels can trigger a range interrupt.
1782:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1783:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param base
1784:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Pointer to structure describing registers
1785:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1786:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param chanMask
1787:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The channel mask. Bit 0 is for channel 0, etc.
1788:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1789:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \return None
1790:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1791:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \funcusage
1792:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1793:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SET_RANGE_INTERRUPT_MASK
1794:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1795:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *******************************************************************************/
1796:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetRangeInterruptMask(SAR_Type *base, uint32_t chanMask)
1797:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1798:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_ASSERT_L2(CY_SAR_CHANMASK(chanMask));
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 33


1799:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1800:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     SAR_RANGE_INTR_MASK(base) = chanMask;
1801:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }
1802:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1803:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1804:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /*******************************************************************************
1805:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Function Name: Cy_SAR_GetRangeInterruptMask
1806:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** ****************************************************************************//**
1807:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1808:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Return which interrupts can trigger a range interrupt as configured by
1809:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \ref Cy_SAR_SetRangeInterruptMask.
1810:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1811:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param base
1812:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Pointer to structure describing registers
1813:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1814:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \return
1815:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The range interrupt mask
1816:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1817:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *******************************************************************************/
1818:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetRangeInterruptMask(const SAR_Type *base)
1819:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1820:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     return SAR_RANGE_INTR_MASK(base);
1821:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }
1822:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1823:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1824:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /*******************************************************************************
1825:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Function Name: Cy_SAR_GetRangeInterruptStatusMasked
1826:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** ****************************************************************************//**
1827:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1828:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Return the bitwise AND between the range interrupt request and mask registers.
1829:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * See \ref Cy_SAR_GetRangeInterruptStatus and \ref Cy_SAR_GetRangeInterruptMask.
1830:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1831:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param base
1832:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Pointer to structure describing registers
1833:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1834:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \return
1835:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Bitwise AND between of range interrupt request and mask
1836:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1837:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *******************************************************************************/
1838:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetRangeInterruptStatusMasked(const SAR_Type *base)
1839:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1840:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     return SAR_RANGE_INTR_MASKED(base);
1841:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }
1842:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1843:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1844:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /*******************************************************************************
1845:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Function Name: Cy_SAR_GetSatInterruptStatus
1846:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** ****************************************************************************//**
1847:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1848:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Return the saturate interrupt register status.
1849:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * If the status bit is low for a channel, the channel may not be enabled
1850:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * (\ref Cy_SAR_SetChanMask), saturation detection is not enabled for the
1851:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * channel (\ref Cy_SAR_SetSatInterruptMask), or saturation detection was not
1852:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * triggered for the channel.
1853:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1854:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param base
1855:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Pointer to structure describing registers
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 34


1856:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1857:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \return
1858:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The saturate interrupt status for all channels. Bit 0 is for channel 0, etc.
1859:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1860:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \funcusage
1861:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1862:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_GET_SAT_INTERRUPT_STATUS
1863:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1864:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *******************************************************************************/
1865:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetSatInterruptStatus(const SAR_Type *base)
1866:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1867:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     return SAR_SATURATE_INTR(base);
1868:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }
1869:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1870:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1871:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /*******************************************************************************
1872:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Function Name: Cy_SAR_ClearSatInterrupt
1873:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** ****************************************************************************//**
1874:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1875:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Clear the saturate interrupt for the specified channel mask.
1876:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The interrupt must be cleared with this function so that the hardware
1877:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * can set subsequent interrupts and those interrupts can be forwarded
1878:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * to the interrupt controller, if enabled.
1879:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1880:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param base
1881:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Pointer to structure describing registers
1882:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1883:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param chanMask
1884:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The channel mask. Bit 0 is for channel 0, etc.
1885:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Typically, this is the value returned from \ref Cy_SAR_GetSatInterruptStatus.
1886:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1887:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \return None
1888:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1889:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *******************************************************************************/
1890:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_ClearSatInterrupt(SAR_Type *base, uint32_t chanMask)
1891:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1892:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_ASSERT_L2(CY_SAR_CHANMASK(chanMask));
1893:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1894:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     SAR_SATURATE_INTR(base) = chanMask;
1895:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1896:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     /* Dummy read for buffered writes. */
1897:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     (void) SAR_SATURATE_INTR(base);
1898:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }
1899:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1900:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1901:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /*******************************************************************************
1902:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Function Name: Cy_SAR_SetSatInterrupt
1903:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** ****************************************************************************//**
1904:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1905:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Trigger a saturate interrupt with software for the specific channel mask.
1906:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1907:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param base
1908:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Pointer to structure describing registers
1909:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1910:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param chanMask
1911:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The channel mask. Bit 0 is for channel 0, etc.
1912:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 35


1913:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \return None
1914:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1915:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *******************************************************************************/
1916:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetSatInterrupt(SAR_Type *base, uint32_t chanMask)
1917:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1918:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_ASSERT_L2(CY_SAR_CHANMASK(chanMask));
1919:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1920:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     SAR_SATURATE_INTR_SET(base) = chanMask;
1921:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }
1922:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1923:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1924:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /*******************************************************************************
1925:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Function Name: Cy_SAR_SetSatInterruptMask
1926:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** ****************************************************************************//**
1927:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1928:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Enable which channels can trigger a saturate interrupt.
1929:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1930:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param base
1931:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Pointer to structure describing registers
1932:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1933:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param chanMask
1934:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The channel mask. Bit 0 is for channel 0, etc.
1935:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1936:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \return None
1937:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1938:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \funcusage
1939:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1940:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_GET_SAT_INTERRUPT_MASK
1941:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1942:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *******************************************************************************/
1943:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetSatInterruptMask(SAR_Type *base, uint32_t chanMask)
1944:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1945:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_ASSERT_L2(CY_SAR_CHANMASK(chanMask));
1946:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1947:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     SAR_SATURATE_INTR_MASK(base) = chanMask;
1948:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }
1949:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1950:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1951:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /*******************************************************************************
1952:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Function Name: Cy_SAR_GetSatInterruptMask
1953:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** ****************************************************************************//**
1954:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1955:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Return which interrupts can trigger a saturate interrupt as configured
1956:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * by \ref Cy_SAR_SetSatInterruptMask.
1957:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1958:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param base
1959:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Pointer to structure describing registers
1960:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1961:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \return
1962:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The saturate interrupt mask. Bit 0 is for channel 0, etc.
1963:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1964:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *******************************************************************************/
1965:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetSatInterruptMask(const SAR_Type *base)
1966:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1967:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     return SAR_SATURATE_INTR_MASK(base);
1968:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }
1969:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 36


1970:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /*******************************************************************************
1971:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Function Name: Cy_SAR_GetSatInterruptStatusMasked
1972:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** ****************************************************************************//**
1973:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1974:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Return the bitwise AND between the saturate interrupt request and mask registers.
1975:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * See \ref Cy_SAR_GetSatInterruptStatus and \ref Cy_SAR_GetSatInterruptMask.
1976:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1977:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param base
1978:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Pointer to structure describing registers
1979:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1980:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \return
1981:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Bitwise AND of the saturate interrupt request and mask
1982:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1983:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *******************************************************************************/
1984:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetSatInterruptStatusMasked(const SAR_Type *base)
1985:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1986:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     return SAR_SATURATE_INTR_MASKED(base);
1987:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }
1988:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1989:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1990:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /*******************************************************************************
1991:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Function Name: Cy_SAR_GetInterruptCause
1992:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** ****************************************************************************//**
1993:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1994:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Return the cause of the interrupt.
1995:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The interrupt routine can be called due to one of the following events:
1996:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - End of scan (EOS)
1997:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - Overflow
1998:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - Firmware collision
1999:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - Saturation detected on one or more channels
2000:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - Range detected on one or more channels
2001:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
2002:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param base
2003:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Pointer to structure describing registers
2004:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
2005:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \return
2006:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Mask of what caused the interrupt. Compare this value with one of these masks:
2007:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - SAR_INTR_CAUSE_EOS_MASKED_MIR_Msk : EOS caused the interrupt
2008:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - SAR_INTR_CAUSE_OVERFLOW_MASKED_MIR_Msk : Overflow caused the interrupt
2009:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - SAR_INTR_CAUSE_FW_COLLISION_MASKED_MIR_Msk : Firmware collision cause the interrupt
2010:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - SAR_INTR_CAUSE_SATURATE_MASKED_RED_Msk : Saturation detection on one or more channels caused 
2011:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - SAR_INTR_CAUSE_RANGE_MASKED_RED_Msk : Range detection on one or more channels caused the inte
2012:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
2013:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *******************************************************************************/
2014:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetInterruptCause(const SAR_Type *base)
2015:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
2016:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     return SAR_INTR_CAUSE(base);
2017:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }
2018:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \} */
2019:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
2020:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \addtogroup group_sar_functions_helper
2021:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \{
2022:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
2023:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
2024:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
2025:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /*******************************************************************************
2026:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Function Name: Cy_SAR_IsChannelDifferential
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 37


2027:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** ****************************************************************************//**
2028:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
2029:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Return true of channel is differential, else false.
2030:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
2031:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param base
2032:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Pointer to structure describing registers
2033:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
2034:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param chan
2035:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The channel to check, starting at 0.
2036:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
2037:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \return
2038:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * A false is return if chan is invalid.
2039:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
2040:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \funcusage
2041:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
2042:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_IS_CHANNEL_DIFF
2043:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
2044:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *******************************************************************************/
2045:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE bool Cy_SAR_IsChannelDifferential(const SAR_Type *base, uint32_t chan)
2046:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
  27              		.loc 1 2046 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 8
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31 0000 80B5     		push	{r7, lr}
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 7, -8
  34              		.cfi_offset 14, -4
  35 0002 82B0     		sub	sp, sp, #8
  36              		.cfi_def_cfa_offset 16
  37 0004 00AF     		add	r7, sp, #0
  38              		.cfi_def_cfa_register 7
  39 0006 7860     		str	r0, [r7, #4]
  40 0008 3960     		str	r1, [r7]
2047:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     return !Cy_SAR_IsChannelSingleEnded(base, chan);
  41              		.loc 1 2047 0
  42 000a 3A68     		ldr	r2, [r7]
  43 000c 7B68     		ldr	r3, [r7, #4]
  44 000e 1100     		movs	r1, r2
  45 0010 1800     		movs	r0, r3
  46 0012 FFF7FEFF 		bl	Cy_SAR_IsChannelSingleEnded
  47 0016 0300     		movs	r3, r0
  48 0018 5A1E     		subs	r2, r3, #1
  49 001a 9341     		sbcs	r3, r3, r2
  50 001c DBB2     		uxtb	r3, r3
  51 001e 0122     		movs	r2, #1
  52 0020 5340     		eors	r3, r2
  53 0022 DBB2     		uxtb	r3, r3
  54 0024 1A1C     		adds	r2, r3, #0
  55 0026 0123     		movs	r3, #1
  56 0028 1340     		ands	r3, r2
  57 002a DBB2     		uxtb	r3, r3
2048:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }
  58              		.loc 1 2048 0
  59 002c 1800     		movs	r0, r3
  60 002e BD46     		mov	sp, r7
  61 0030 02B0     		add	sp, sp, #8
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 38


  62              		@ sp needed
  63 0032 80BD     		pop	{r7, pc}
  64              		.cfi_endproc
  65              	.LFE102:
  66              		.size	Cy_SAR_IsChannelDifferential, .-Cy_SAR_IsChannelDifferential
  67              		.bss
  68              		.align	2
  69              	enabledBeforeSleep:
  70 0000 00000000 		.space	8
  70      00000000 
  71              		.comm	Cy_SAR_offset,32,4
  72              		.comm	Cy_SAR_countsPer10Volt,64,4
  73              		.section	.rodata
  74              		.align	2
  75              	.LC0:
  76 0000 47656E65 		.ascii	"Generated_Source\\PSoC6\\pdl\\drivers\\peripheral\\"
  76      72617465 
  76      645F536F 
  76      75726365 
  76      5C50536F 
  77 002e 7361725C 		.ascii	"sar\\cy_sar.c\000"
  77      63795F73 
  77      61722E63 
  77      00
  78              		.global	__aeabi_idiv
  79              		.section	.text.Cy_SAR_Init,"ax",%progbits
  80              		.align	2
  81              		.global	Cy_SAR_Init
  82              		.code	16
  83              		.thumb_func
  84              		.type	Cy_SAR_Init, %function
  85              	Cy_SAR_Init:
  86              	.LFB105:
  87              		.file 2 "Generated_Source\\PSoC6\\pdl\\drivers\\peripheral\\sar\\cy_sar.c"
   1:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** /***************************************************************************//**
   2:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \file cy_sar.c
   3:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \version 1.20
   4:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
   5:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Provides the public functions for the API for the SAR driver.
   6:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
   7:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** ********************************************************************************
   8:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \copyright
   9:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Copyright 2017-2018, Cypress Semiconductor Corporation. All rights reserved.
  10:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * You may use this file only in accordance with the license, terms, conditions,
  11:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * disclaimers, and limitations in the end user license agreement accompanying
  12:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * the software package with which this file was provided.
  13:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *******************************************************************************/
  14:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** #include "cy_sar.h"
  15:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
  16:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** #ifdef CY_IP_MXS40PASS_SAR
  17:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
  18:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** #if defined(__cplusplus)
  19:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** extern "C" {
  20:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** #endif
  21:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
  22:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** static cy_stc_sar_state_backup_t enabledBeforeSleep =
  23:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** {
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 39


  24:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     0uL,
  25:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     0uL
  26:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** };
  27:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
  28:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** volatile int16_t Cy_SAR_offset[CY_SAR_MAX_NUM_CHANNELS];
  29:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** volatile int32_t Cy_SAR_countsPer10Volt[CY_SAR_MAX_NUM_CHANNELS];
  30:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
  31:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
  32:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** /*******************************************************************************
  33:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Function Name: Cy_SAR_Init
  34:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** ****************************************************************************//**
  35:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
  36:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Initialize all SAR configuration registers.
  37:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * If routing is to be configured, all switches will be cleared before
  38:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * being initialized.
  39:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
  40:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param base
  41:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Pointer to structure describing registers
  42:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
  43:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param config
  44:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Pointer to structure containing configuration data. See \ref cy_stc_sar_config_t
  45:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * and guidance in the \ref group_sar_initialization section.
  46:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
  47:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \return
  48:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - \ref CY_SAR_SUCCESS : initialization complete
  49:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - \ref CY_SAR_BAD_PARAM : input pointers are null, initialization incomplete
  50:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
  51:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \funcusage
  52:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
  53:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_INIT_CUSTOM
  54:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
  55:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *******************************************************************************/
  56:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** cy_en_sar_status_t Cy_SAR_Init(SAR_Type *base, const cy_stc_sar_config_t *config)
  57:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** {
  88              		.loc 2 57 0
  89              		.cfi_startproc
  90              		@ args = 0, pretend = 0, frame = 24
  91              		@ frame_needed = 1, uses_anonymous_args = 0
  92 0000 90B5     		push	{r4, r7, lr}
  93              		.cfi_def_cfa_offset 12
  94              		.cfi_offset 4, -12
  95              		.cfi_offset 7, -8
  96              		.cfi_offset 14, -4
  97 0002 87B0     		sub	sp, sp, #28
  98              		.cfi_def_cfa_offset 40
  99 0004 00AF     		add	r7, sp, #0
 100              		.cfi_def_cfa_register 7
 101 0006 7860     		str	r0, [r7, #4]
 102 0008 3960     		str	r1, [r7]
  58:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     CY_ASSERT_L1(NULL != base);
 103              		.loc 2 58 0
 104 000a 7B68     		ldr	r3, [r7, #4]
 105 000c 002B     		cmp	r3, #0
 106 000e 04D1     		bne	.L4
 107              		.loc 2 58 0 is_stmt 0 discriminator 1
 108 0010 C54B     		ldr	r3, .L30
 109 0012 3A21     		movs	r1, #58
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 40


 110 0014 1800     		movs	r0, r3
 111 0016 FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 112              	.L4:
  59:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     CY_ASSERT_L1(NULL != config);
 113              		.loc 2 59 0 is_stmt 1
 114 001a 3B68     		ldr	r3, [r7]
 115 001c 002B     		cmp	r3, #0
 116 001e 04D1     		bne	.L5
 117              		.loc 2 59 0 is_stmt 0 discriminator 1
 118 0020 C14B     		ldr	r3, .L30
 119 0022 3B21     		movs	r1, #59
 120 0024 1800     		movs	r0, r3
 121 0026 FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 122              	.L5:
  60:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
  61:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     cy_en_sar_status_t result;
  62:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     uint8_t chan;
  63:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     int32_t counts;
  64:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     bool vrefNegSelect;
  65:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     bool singleEndedSigned;
  66:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     bool chanSingleEnded;
  67:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
  68:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     if ((NULL == base) || (NULL == config))
 123              		.loc 2 68 0 is_stmt 1
 124 002a 7B68     		ldr	r3, [r7, #4]
 125 002c 002B     		cmp	r3, #0
 126 002e 02D0     		beq	.L6
 127              		.loc 2 68 0 is_stmt 0 discriminator 1
 128 0030 3B68     		ldr	r3, [r7]
 129 0032 002B     		cmp	r3, #0
 130 0034 02D1     		bne	.L7
 131              	.L6:
  69:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     {
  70:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         result = CY_SAR_BAD_PARAM;
 132              		.loc 2 70 0 is_stmt 1
 133 0036 BD4B     		ldr	r3, .L30+4
 134 0038 7B61     		str	r3, [r7, #20]
 135 003a 70E1     		b	.L8
 136              	.L7:
  71:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
  72:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     else
  73:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     {
  74:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         CY_ASSERT_L2(CY_SAR_CTRL(config->ctrl));
 137              		.loc 2 74 0
 138 003c 3B68     		ldr	r3, [r7]
 139 003e 1B68     		ldr	r3, [r3]
 140 0040 BB4A     		ldr	r2, .L30+8
 141 0042 1340     		ands	r3, r2
 142 0044 04D0     		beq	.L9
 143              		.loc 2 74 0 is_stmt 0 discriminator 1
 144 0046 B84B     		ldr	r3, .L30
 145 0048 4A21     		movs	r1, #74
 146 004a 1800     		movs	r0, r3
 147 004c FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 148              	.L9:
  75:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         CY_ASSERT_L2(CY_SAR_SAMPLE_CTRL(config->sampleCtrl));
 149              		.loc 2 75 0 is_stmt 1
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 41


 150 0050 3B68     		ldr	r3, [r7]
 151 0052 5B68     		ldr	r3, [r3, #4]
 152 0054 B74A     		ldr	r2, .L30+12
 153 0056 1340     		ands	r3, r2
 154 0058 04D0     		beq	.L10
 155              		.loc 2 75 0 is_stmt 0 discriminator 1
 156 005a B34B     		ldr	r3, .L30
 157 005c 4B21     		movs	r1, #75
 158 005e 1800     		movs	r0, r3
 159 0060 FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 160              	.L10:
  76:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         CY_ASSERT_L2(CY_SAR_SAMPLE_TIME(config->sampleTime01));
 161              		.loc 2 76 0 is_stmt 1
 162 0064 3B68     		ldr	r3, [r7]
 163 0066 9B68     		ldr	r3, [r3, #8]
 164 0068 B34A     		ldr	r2, .L30+16
 165 006a 1340     		ands	r3, r2
 166 006c 04D0     		beq	.L11
 167              		.loc 2 76 0 is_stmt 0 discriminator 1
 168 006e AE4B     		ldr	r3, .L30
 169 0070 4C21     		movs	r1, #76
 170 0072 1800     		movs	r0, r3
 171 0074 FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 172              	.L11:
  77:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         CY_ASSERT_L2(CY_SAR_SAMPLE_TIME(config->sampleTime23));
 173              		.loc 2 77 0 is_stmt 1
 174 0078 3B68     		ldr	r3, [r7]
 175 007a DB68     		ldr	r3, [r3, #12]
 176 007c AE4A     		ldr	r2, .L30+16
 177 007e 1340     		ands	r3, r2
 178 0080 04D0     		beq	.L12
 179              		.loc 2 77 0 is_stmt 0 discriminator 1
 180 0082 A94B     		ldr	r3, .L30
 181 0084 4D21     		movs	r1, #77
 182 0086 1800     		movs	r0, r3
 183 0088 FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 184              	.L12:
  78:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         CY_ASSERT_L3(CY_SAR_RANGECOND(config->rangeCond));
 185              		.loc 2 78 0 is_stmt 1
 186 008c 3B68     		ldr	r3, [r7]
 187 008e 1B7D     		ldrb	r3, [r3, #20]
 188 0090 032B     		cmp	r3, #3
 189 0092 04D9     		bls	.L13
 190              		.loc 2 78 0 is_stmt 0 discriminator 1
 191 0094 A44B     		ldr	r3, .L30
 192 0096 4E21     		movs	r1, #78
 193 0098 1800     		movs	r0, r3
 194 009a FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 195              	.L13:
  79:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         CY_ASSERT_L2(CY_SAR_CHANMASK(config->chanEn));
 196              		.loc 2 79 0 is_stmt 1
 197 009e 3B68     		ldr	r3, [r7]
 198 00a0 9B69     		ldr	r3, [r3, #24]
 199 00a2 A64A     		ldr	r2, .L30+20
 200 00a4 9342     		cmp	r3, r2
 201 00a6 04D9     		bls	.L14
 202              		.loc 2 79 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 42


 203 00a8 9F4B     		ldr	r3, .L30
 204 00aa 4F21     		movs	r1, #79
 205 00ac 1800     		movs	r0, r3
 206 00ae FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 207              	.L14:
  80:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         CY_ASSERT_L2(CY_SAR_INTRMASK(config->intrMask));
 208              		.loc 2 80 0 is_stmt 1
 209 00b2 3B68     		ldr	r3, [r7]
 210 00b4 DB6D     		ldr	r3, [r3, #92]
 211 00b6 072B     		cmp	r3, #7
 212 00b8 04D9     		bls	.L15
 213              		.loc 2 80 0 is_stmt 0 discriminator 1
 214 00ba 9B4B     		ldr	r3, .L30
 215 00bc 5021     		movs	r1, #80
 216 00be 1800     		movs	r0, r3
 217 00c0 FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 218              	.L15:
  81:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         CY_ASSERT_L2(CY_SAR_CHANMASK(config->satIntrMask));
 219              		.loc 2 81 0 is_stmt 1
 220 00c4 3B68     		ldr	r3, [r7]
 221 00c6 1B6E     		ldr	r3, [r3, #96]
 222 00c8 9C4A     		ldr	r2, .L30+20
 223 00ca 9342     		cmp	r3, r2
 224 00cc 04D9     		bls	.L16
 225              		.loc 2 81 0 is_stmt 0 discriminator 1
 226 00ce 964B     		ldr	r3, .L30
 227 00d0 5121     		movs	r1, #81
 228 00d2 1800     		movs	r0, r3
 229 00d4 FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 230              	.L16:
  82:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         CY_ASSERT_L2(CY_SAR_CHANMASK(config->rangeIntrMask));
 231              		.loc 2 82 0 is_stmt 1
 232 00d8 3B68     		ldr	r3, [r7]
 233 00da 5B6E     		ldr	r3, [r3, #100]
 234 00dc 974A     		ldr	r2, .L30+20
 235 00de 9342     		cmp	r3, r2
 236 00e0 04D9     		bls	.L17
 237              		.loc 2 82 0 is_stmt 0 discriminator 1
 238 00e2 914B     		ldr	r3, .L30
 239 00e4 5221     		movs	r1, #82
 240 00e6 1800     		movs	r0, r3
 241 00e8 FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 242              	.L17:
  83:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
  84:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         /* Set the EOS_DSI_OUT_EN bit so the EOS signal can be routed */
  85:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_SAMPLE_CTRL(base) = config->sampleCtrl | SAR_SAMPLE_CTRL_EOS_DSI_OUT_EN_Msk;
 243              		.loc 2 85 0 is_stmt 1
 244 00ec 3B68     		ldr	r3, [r7]
 245 00ee 5B68     		ldr	r3, [r3, #4]
 246 00f0 8022     		movs	r2, #128
 247 00f2 1206     		lsls	r2, r2, #24
 248 00f4 1A43     		orrs	r2, r3
 249 00f6 7B68     		ldr	r3, [r7, #4]
 250 00f8 5A60     		str	r2, [r3, #4]
  86:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_SAMPLE_TIME01(base) = config->sampleTime01;
 251              		.loc 2 86 0
 252 00fa 3B68     		ldr	r3, [r7]
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 43


 253 00fc 9A68     		ldr	r2, [r3, #8]
 254 00fe 7B68     		ldr	r3, [r7, #4]
 255 0100 1A61     		str	r2, [r3, #16]
  87:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_SAMPLE_TIME23(base) = config->sampleTime23;
 256              		.loc 2 87 0
 257 0102 3B68     		ldr	r3, [r7]
 258 0104 DA68     		ldr	r2, [r3, #12]
 259 0106 7B68     		ldr	r3, [r7, #4]
 260 0108 5A61     		str	r2, [r3, #20]
  88:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_RANGE_THRES(base) = config->rangeThres;
 261              		.loc 2 88 0
 262 010a 3B68     		ldr	r3, [r7]
 263 010c 1A69     		ldr	r2, [r3, #16]
 264 010e 7B68     		ldr	r3, [r7, #4]
 265 0110 9A61     		str	r2, [r3, #24]
  89:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_RANGE_COND(base) = (uint32_t)config->rangeCond << SAR_RANGE_COND_RANGE_COND_Pos;
 266              		.loc 2 89 0
 267 0112 3B68     		ldr	r3, [r7]
 268 0114 1B7D     		ldrb	r3, [r3, #20]
 269 0116 9A07     		lsls	r2, r3, #30
 270 0118 7B68     		ldr	r3, [r7, #4]
 271 011a DA61     		str	r2, [r3, #28]
  90:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_CHAN_EN(base) = config->chanEn;
 272              		.loc 2 90 0
 273 011c 3B68     		ldr	r3, [r7]
 274 011e 9A69     		ldr	r2, [r3, #24]
 275 0120 7B68     		ldr	r3, [r7, #4]
 276 0122 1A62     		str	r2, [r3, #32]
  91:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
  92:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         /* Check whether NEG_SEL is set for VREF */
  93:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         vrefNegSelect = ((uint32_t)CY_SAR_NEG_SEL_VREF == (config->ctrl & SAR_CTRL_NEG_SEL_Msk))? t
 277              		.loc 2 93 0
 278 0124 3B68     		ldr	r3, [r7]
 279 0126 1A68     		ldr	r2, [r3]
 280 0128 E023     		movs	r3, #224
 281 012a 1B01     		lsls	r3, r3, #4
 282 012c 1A40     		ands	r2, r3
 283 012e 1223     		movs	r3, #18
 284 0130 FB18     		adds	r3, r7, r3
 285 0132 8349     		ldr	r1, .L30+24
 286 0134 8C46     		mov	ip, r1
 287 0136 6244     		add	r2, r2, ip
 288 0138 5142     		rsbs	r1, r2, #0
 289 013a 4A41     		adcs	r2, r2, r1
 290 013c 1A70     		strb	r2, [r3]
  94:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         /* Check whether single ended channels are set to signed */
  95:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         singleEndedSigned = (SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_Msk == (config->sampleCtrl & SAR_S
 291              		.loc 2 95 0
 292 013e 3B68     		ldr	r3, [r7]
 293 0140 5B68     		ldr	r3, [r3, #4]
 294 0142 0422     		movs	r2, #4
 295 0144 1A40     		ands	r2, r3
 296 0146 1123     		movs	r3, #17
 297 0148 FB18     		adds	r3, r7, r3
 298 014a 511E     		subs	r1, r2, #1
 299 014c 8A41     		sbcs	r2, r2, r1
 300 014e 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 44


  96:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
  97:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         for (chan = 0u; chan < CY_SAR_MAX_NUM_CHANNELS; chan++)
 301              		.loc 2 97 0
 302 0150 1323     		movs	r3, #19
 303 0152 FB18     		adds	r3, r7, r3
 304 0154 0022     		movs	r2, #0
 305 0156 1A70     		strb	r2, [r3]
 306 0158 74E0     		b	.L18
 307              	.L23:
  98:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         {
  99:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             CY_ASSERT_L2(CY_SAR_CHAN_CONFIG(config->chanConfig[chan]));
 308              		.loc 2 99 0
 309 015a 1323     		movs	r3, #19
 310 015c FB18     		adds	r3, r7, r3
 311 015e 1B78     		ldrb	r3, [r3]
 312 0160 3A68     		ldr	r2, [r7]
 313 0162 0633     		adds	r3, r3, #6
 314 0164 9B00     		lsls	r3, r3, #2
 315 0166 D318     		adds	r3, r2, r3
 316 0168 0433     		adds	r3, r3, #4
 317 016a 1B68     		ldr	r3, [r3]
 318 016c 754A     		ldr	r2, .L30+28
 319 016e 1340     		ands	r3, r2
 320 0170 04D0     		beq	.L19
 321              		.loc 2 99 0 is_stmt 0 discriminator 1
 322 0172 6D4B     		ldr	r3, .L30
 323 0174 6321     		movs	r1, #99
 324 0176 1800     		movs	r0, r3
 325 0178 FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 326              	.L19:
 100:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 101:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             SAR_CHAN_CONFIG(base, chan) = config->chanConfig[chan];
 327              		.loc 2 101 0 is_stmt 1
 328 017c 1323     		movs	r3, #19
 329 017e FB18     		adds	r3, r7, r3
 330 0180 1A78     		ldrb	r2, [r3]
 331 0182 1323     		movs	r3, #19
 332 0184 FB18     		adds	r3, r7, r3
 333 0186 1B78     		ldrb	r3, [r3]
 334 0188 3968     		ldr	r1, [r7]
 335 018a 0633     		adds	r3, r3, #6
 336 018c 9B00     		lsls	r3, r3, #2
 337 018e CB18     		adds	r3, r1, r3
 338 0190 0433     		adds	r3, r3, #4
 339 0192 1968     		ldr	r1, [r3]
 340 0194 7B68     		ldr	r3, [r7, #4]
 341 0196 2032     		adds	r2, r2, #32
 342 0198 9200     		lsls	r2, r2, #2
 343 019a D150     		str	r1, [r2, r3]
 102:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 103:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             counts = (int32_t) CY_SAR_WRK_MAX_12BIT;
 344              		.loc 2 103 0
 345 019c 8023     		movs	r3, #128
 346 019e 5B01     		lsls	r3, r3, #5
 347 01a0 FB60     		str	r3, [r7, #12]
 104:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 105:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             /* For signed single ended channels with NEG_SEL set to VREF,
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 45


 106:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****              * set the offset to minus half scale to convert results to unsigned format */
 107:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             chanSingleEnded = (0uL == (config->chanConfig[chan] & (SAR_CHAN_CONFIG_DIFFERENTIAL_EN_
 348              		.loc 2 107 0
 349 01a2 1323     		movs	r3, #19
 350 01a4 FB18     		adds	r3, r7, r3
 351 01a6 1B78     		ldrb	r3, [r3]
 352 01a8 3A68     		ldr	r2, [r7]
 353 01aa 0633     		adds	r3, r3, #6
 354 01ac 9B00     		lsls	r3, r3, #2
 355 01ae D318     		adds	r3, r2, r3
 356 01b0 0433     		adds	r3, r3, #4
 357 01b2 1B68     		ldr	r3, [r3]
 358 01b4 644A     		ldr	r2, .L30+32
 359 01b6 1A40     		ands	r2, r3
 360 01b8 0B23     		movs	r3, #11
 361 01ba FB18     		adds	r3, r7, r3
 362 01bc 5142     		rsbs	r1, r2, #0
 363 01be 4A41     		adcs	r2, r2, r1
 364 01c0 1A70     		strb	r2, [r3]
 108:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             if (chanSingleEnded && vrefNegSelect && singleEndedSigned)
 365              		.loc 2 108 0
 366 01c2 0B23     		movs	r3, #11
 367 01c4 FB18     		adds	r3, r7, r3
 368 01c6 1B78     		ldrb	r3, [r3]
 369 01c8 002B     		cmp	r3, #0
 370 01ca 17D0     		beq	.L20
 371              		.loc 2 108 0 is_stmt 0 discriminator 1
 372 01cc 1223     		movs	r3, #18
 373 01ce FB18     		adds	r3, r7, r3
 374 01d0 1B78     		ldrb	r3, [r3]
 375 01d2 002B     		cmp	r3, #0
 376 01d4 12D0     		beq	.L20
 377              		.loc 2 108 0 discriminator 2
 378 01d6 1123     		movs	r3, #17
 379 01d8 FB18     		adds	r3, r7, r3
 380 01da 1B78     		ldrb	r3, [r3]
 381 01dc 002B     		cmp	r3, #0
 382 01de 0DD0     		beq	.L20
 109:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             {
 110:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****                 Cy_SAR_offset[chan] = (int16_t) (counts / -2);
 383              		.loc 2 110 0 is_stmt 1
 384 01e0 1323     		movs	r3, #19
 385 01e2 FB18     		adds	r3, r7, r3
 386 01e4 1A78     		ldrb	r2, [r3]
 387 01e6 FB68     		ldr	r3, [r7, #12]
 388 01e8 002B     		cmp	r3, #0
 389 01ea 00DA     		bge	.L21
 390 01ec 0133     		adds	r3, r3, #1
 391              	.L21:
 392 01ee 5B10     		asrs	r3, r3, #1
 393 01f0 5B42     		rsbs	r3, r3, #0
 394 01f2 19B2     		sxth	r1, r3
 395 01f4 554B     		ldr	r3, .L30+36
 396 01f6 5200     		lsls	r2, r2, #1
 397 01f8 D152     		strh	r1, [r2, r3]
 398 01fa 06E0     		b	.L22
 399              	.L20:
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 46


 111:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             }
 112:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             else
 113:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             {
 114:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****                 Cy_SAR_offset[chan] = 0;
 400              		.loc 2 114 0
 401 01fc 1323     		movs	r3, #19
 402 01fe FB18     		adds	r3, r7, r3
 403 0200 1A78     		ldrb	r2, [r3]
 404 0202 524B     		ldr	r3, .L30+36
 405 0204 5200     		lsls	r2, r2, #1
 406 0206 0021     		movs	r1, #0
 407 0208 D152     		strh	r1, [r2, r3]
 408              	.L22:
 115:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             }
 116:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 117:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             /* Calculate gain in counts per 10 volts with rounding */
 118:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             Cy_SAR_countsPer10Volt[chan] = (int16_t)(((counts * CY_SAR_10MV_COUNTS) + (int32_t)conf
 409              		.loc 2 118 0 discriminator 2
 410 020a 1323     		movs	r3, #19
 411 020c FB18     		adds	r3, r7, r3
 412 020e 1C78     		ldrb	r4, [r3]
 413 0210 FB68     		ldr	r3, [r7, #12]
 414 0212 4F4A     		ldr	r2, .L30+40
 415 0214 5A43     		muls	r2, r3
 416 0216 3B68     		ldr	r3, [r7]
 417 0218 5B6F     		ldr	r3, [r3, #116]
 418 021a D218     		adds	r2, r2, r3
 419 021c 3B68     		ldr	r3, [r7]
 420 021e 5B6F     		ldr	r3, [r3, #116]
 421 0220 5B00     		lsls	r3, r3, #1
 422 0222 1900     		movs	r1, r3
 423 0224 1000     		movs	r0, r2
 424 0226 FFF7FEFF 		bl	__aeabi_idiv
 425 022a 0300     		movs	r3, r0
 426 022c 1BB2     		sxth	r3, r3
 427 022e 1900     		movs	r1, r3
 428 0230 484B     		ldr	r3, .L30+44
 429 0232 A200     		lsls	r2, r4, #2
 430 0234 D150     		str	r1, [r2, r3]
  97:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         {
 431              		.loc 2 97 0 discriminator 2
 432 0236 1323     		movs	r3, #19
 433 0238 FB18     		adds	r3, r7, r3
 434 023a 1A78     		ldrb	r2, [r3]
 435 023c 1323     		movs	r3, #19
 436 023e FB18     		adds	r3, r7, r3
 437 0240 0132     		adds	r2, r2, #1
 438 0242 1A70     		strb	r2, [r3]
 439              	.L18:
  97:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         {
 440              		.loc 2 97 0 is_stmt 0 discriminator 1
 441 0244 1323     		movs	r3, #19
 442 0246 FB18     		adds	r3, r7, r3
 443 0248 1B78     		ldrb	r3, [r3]
 444 024a 0F2B     		cmp	r3, #15
 445 024c 85D9     		bls	.L23
 119:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         }
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 47


 120:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_INTR_MASK(base) = config->intrMask;
 446              		.loc 2 120 0 is_stmt 1
 447 024e 3B68     		ldr	r3, [r7]
 448 0250 D96D     		ldr	r1, [r3, #92]
 449 0252 7A68     		ldr	r2, [r7, #4]
 450 0254 8623     		movs	r3, #134
 451 0256 9B00     		lsls	r3, r3, #2
 452 0258 D150     		str	r1, [r2, r3]
 121:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_INTR(base) = config->intrMask;
 453              		.loc 2 121 0
 454 025a 3B68     		ldr	r3, [r7]
 455 025c D96D     		ldr	r1, [r3, #92]
 456 025e 7A68     		ldr	r2, [r7, #4]
 457 0260 8423     		movs	r3, #132
 458 0262 9B00     		lsls	r3, r3, #2
 459 0264 D150     		str	r1, [r2, r3]
 122:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_SATURATE_INTR_MASK(base) = config->satIntrMask;
 460              		.loc 2 122 0
 461 0266 3B68     		ldr	r3, [r7]
 462 0268 196E     		ldr	r1, [r3, #96]
 463 026a 7A68     		ldr	r2, [r7, #4]
 464 026c 8A23     		movs	r3, #138
 465 026e 9B00     		lsls	r3, r3, #2
 466 0270 D150     		str	r1, [r2, r3]
 123:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_SATURATE_INTR(base) = config->satIntrMask;
 467              		.loc 2 123 0
 468 0272 3B68     		ldr	r3, [r7]
 469 0274 196E     		ldr	r1, [r3, #96]
 470 0276 7A68     		ldr	r2, [r7, #4]
 471 0278 8823     		movs	r3, #136
 472 027a 9B00     		lsls	r3, r3, #2
 473 027c D150     		str	r1, [r2, r3]
 124:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_RANGE_INTR_MASK(base) = config->rangeIntrMask;
 474              		.loc 2 124 0
 475 027e 3B68     		ldr	r3, [r7]
 476 0280 596E     		ldr	r1, [r3, #100]
 477 0282 7A68     		ldr	r2, [r7, #4]
 478 0284 8E23     		movs	r3, #142
 479 0286 9B00     		lsls	r3, r3, #2
 480 0288 D150     		str	r1, [r2, r3]
 125:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_RANGE_INTR(base) = config->rangeIntrMask;
 481              		.loc 2 125 0
 482 028a 3B68     		ldr	r3, [r7]
 483 028c 596E     		ldr	r1, [r3, #100]
 484 028e 7A68     		ldr	r2, [r7, #4]
 485 0290 8C23     		movs	r3, #140
 486 0292 9B00     		lsls	r3, r3, #2
 487 0294 D150     		str	r1, [r2, r3]
 126:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 127:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         /* Set routing related registers if enabled */
 128:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         if (true == config->configRouting)
 488              		.loc 2 128 0
 489 0296 3B68     		ldr	r3, [r7]
 490 0298 7022     		movs	r2, #112
 491 029a 9B5C     		ldrb	r3, [r3, r2]
 492 029c 002B     		cmp	r3, #0
 493 029e 24D0     		beq	.L24
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 48


 129:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         {
 130:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             CY_ASSERT_L2(CY_SAR_SWITCHMASK(config->muxSwitch));
 494              		.loc 2 130 0
 495 02a0 3B68     		ldr	r3, [r7]
 496 02a2 9B6E     		ldr	r3, [r3, #104]
 497 02a4 2C4A     		ldr	r2, .L30+48
 498 02a6 9342     		cmp	r3, r2
 499 02a8 04D9     		bls	.L25
 500              		.loc 2 130 0 is_stmt 0 discriminator 1
 501 02aa 1F4B     		ldr	r3, .L30
 502 02ac 8221     		movs	r1, #130
 503 02ae 1800     		movs	r0, r3
 504 02b0 FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 505              	.L25:
 131:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             CY_ASSERT_L2(CY_SAR_SQMASK(config->muxSwitchSqCtrl));
 506              		.loc 2 131 0 is_stmt 1
 507 02b4 3B68     		ldr	r3, [r7]
 508 02b6 DB6E     		ldr	r3, [r3, #108]
 509 02b8 284A     		ldr	r2, .L30+52
 510 02ba 1340     		ands	r3, r2
 511 02bc 04D0     		beq	.L26
 512              		.loc 2 131 0 is_stmt 0 discriminator 1
 513 02be 1A4B     		ldr	r3, .L30
 514 02c0 8321     		movs	r1, #131
 515 02c2 1800     		movs	r0, r3
 516 02c4 FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 517              	.L26:
 132:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 133:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             /* Clear out all the switches so that only the desired switches in the config structure
 134:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             SAR_MUX_SWITCH_CLEAR0(base) = CY_SAR_CLEAR_ALL_SWITCHES;
 518              		.loc 2 134 0 is_stmt 1
 519 02c8 7A68     		ldr	r2, [r7, #4]
 520 02ca C123     		movs	r3, #193
 521 02cc 9B00     		lsls	r3, r3, #2
 522 02ce 2249     		ldr	r1, .L30+48
 523 02d0 D150     		str	r1, [r2, r3]
 135:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 136:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             SAR_MUX_SWITCH0(base) = config->muxSwitch;
 524              		.loc 2 136 0
 525 02d2 3B68     		ldr	r3, [r7]
 526 02d4 996E     		ldr	r1, [r3, #104]
 527 02d6 7A68     		ldr	r2, [r7, #4]
 528 02d8 C023     		movs	r3, #192
 529 02da 9B00     		lsls	r3, r3, #2
 530 02dc D150     		str	r1, [r2, r3]
 137:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             SAR_MUX_SWITCH_SQ_CTRL(base) = config->muxSwitchSqCtrl;
 531              		.loc 2 137 0
 532 02de 3B68     		ldr	r3, [r7]
 533 02e0 D96E     		ldr	r1, [r3, #108]
 534 02e2 7A68     		ldr	r2, [r7, #4]
 535 02e4 D123     		movs	r3, #209
 536 02e6 9B00     		lsls	r3, r3, #2
 537 02e8 D150     		str	r1, [r2, r3]
 538              	.L24:
 138:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         }
 139:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 140:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         /* Set the Cap trim if it was trimmed out of range from sflash */
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 49


 141:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         if ((CY_SAR_CAP_TRIM_MAX == SAR_ANA_TRIM0(base)) || (CY_SAR_CAP_TRIM_MIN == SAR_ANA_TRIM0(b
 539              		.loc 2 141 0
 540 02ea 7A68     		ldr	r2, [r7, #4]
 541 02ec F023     		movs	r3, #240
 542 02ee 1B01     		lsls	r3, r3, #4
 543 02f0 D358     		ldr	r3, [r2, r3]
 544 02f2 3F2B     		cmp	r3, #63
 545 02f4 05D0     		beq	.L27
 546              		.loc 2 141 0 is_stmt 0 discriminator 1
 547 02f6 7A68     		ldr	r2, [r7, #4]
 548 02f8 F023     		movs	r3, #240
 549 02fa 1B01     		lsls	r3, r3, #4
 550 02fc D358     		ldr	r3, [r2, r3]
 551 02fe 002B     		cmp	r3, #0
 552 0300 04D1     		bne	.L28
 553              	.L27:
 142:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         {
 143:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             SAR_ANA_TRIM0(base) = CY_SAR_CAP_TRIM;
 554              		.loc 2 143 0 is_stmt 1
 555 0302 7A68     		ldr	r2, [r7, #4]
 556 0304 F023     		movs	r3, #240
 557 0306 1B01     		lsls	r3, r3, #4
 558 0308 0B21     		movs	r1, #11
 559 030a D150     		str	r1, [r2, r3]
 560              	.L28:
 144:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         }
 145:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         
 146:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         /* Set the REFBUF_EN bit as this is required for proper operation. */
 147:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_CTRL(base) = config->ctrl | SAR_CTRL_REFBUF_EN_Msk;
 561              		.loc 2 147 0
 562 030c 3B68     		ldr	r3, [r7]
 563 030e 1B68     		ldr	r3, [r3]
 564 0310 8022     		movs	r2, #128
 565 0312 9203     		lsls	r2, r2, #14
 566 0314 1A43     		orrs	r2, r3
 567 0316 7B68     		ldr	r3, [r7, #4]
 568 0318 1A60     		str	r2, [r3]
 148:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 149:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         result = CY_SAR_SUCCESS;
 569              		.loc 2 149 0
 570 031a 0023     		movs	r3, #0
 571 031c 7B61     		str	r3, [r7, #20]
 572              	.L8:
 150:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
 151:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 152:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     return result;
 573              		.loc 2 152 0
 574 031e 7B69     		ldr	r3, [r7, #20]
 153:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** }
 575              		.loc 2 153 0
 576 0320 1800     		movs	r0, r3
 577 0322 BD46     		mov	sp, r7
 578 0324 07B0     		add	sp, sp, #28
 579              		@ sp needed
 580 0326 90BD     		pop	{r4, r7, pc}
 581              	.L31:
 582              		.align	2
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 50


 583              	.L30:
 584 0328 00000000 		.word	.LC0
 585 032c 01000600 		.word	393217
 586 0330 0811DF00 		.word	14618888
 587 0334 01FE3020 		.word	540081665
 588 0338 00FC00FC 		.word	-67044352
 589 033c FFFF0000 		.word	65535
 590 0340 00F2FFFF 		.word	-3584
 591 0344 88CA887E 		.word	2122893960
 592 0348 00010001 		.word	16777472
 593 034c 00000000 		.word	Cy_SAR_offset
 594 0350 10270000 		.word	10000
 595 0354 00000000 		.word	Cy_SAR_countsPer10Volt
 596 0358 FFFFFF3F 		.word	1073741823
 597 035c 00FF30FF 		.word	-13566208
 598              		.cfi_endproc
 599              	.LFE105:
 600              		.size	Cy_SAR_Init, .-Cy_SAR_Init
 601              		.section	.text.Cy_SAR_DeInit,"ax",%progbits
 602              		.align	2
 603              		.global	Cy_SAR_DeInit
 604              		.code	16
 605              		.thumb_func
 606              		.type	Cy_SAR_DeInit, %function
 607              	Cy_SAR_DeInit:
 608              	.LFB106:
 154:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 155:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 156:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** /*******************************************************************************
 157:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Function Name: Cy_SAR_DeInit
 158:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** ****************************************************************************//**
 159:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 160:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Reset SAR registers back to power on reset defaults.
 161:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * The \ref Cy_SAR_offset and \ref Cy_SAR_countsPer10Volt arrays are NOT reset.
 162:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 163:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param base
 164:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Pointer to structure describing registers
 165:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 166:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param deInitRouting
 167:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * If true, all SARMUX switches are opened and switch control registers are reset
 168:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * to zero. If false, switch registers are untouched.
 169:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 170:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \return
 171:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - \ref CY_SAR_SUCCESS : de-initialization complete
 172:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - \ref CY_SAR_BAD_PARAM : input pointers are null, de-initialization incomplete
 173:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 174:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \funcusage
 175:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 176:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_DEINIT
 177:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 178:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *******************************************************************************/
 179:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** cy_en_sar_status_t Cy_SAR_DeInit(SAR_Type *base, bool deInitRouting)
 180:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** {
 609              		.loc 2 180 0
 610              		.cfi_startproc
 611              		@ args = 0, pretend = 0, frame = 16
 612              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 51


 613 0000 80B5     		push	{r7, lr}
 614              		.cfi_def_cfa_offset 8
 615              		.cfi_offset 7, -8
 616              		.cfi_offset 14, -4
 617 0002 84B0     		sub	sp, sp, #16
 618              		.cfi_def_cfa_offset 24
 619 0004 00AF     		add	r7, sp, #0
 620              		.cfi_def_cfa_register 7
 621 0006 7860     		str	r0, [r7, #4]
 622 0008 0A00     		movs	r2, r1
 623 000a FB1C     		adds	r3, r7, #3
 624 000c 1A70     		strb	r2, [r3]
 181:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     CY_ASSERT_L1(NULL != base);
 625              		.loc 2 181 0
 626 000e 7B68     		ldr	r3, [r7, #4]
 627 0010 002B     		cmp	r3, #0
 628 0012 04D1     		bne	.L33
 629              		.loc 2 181 0 is_stmt 0 discriminator 1
 630 0014 304B     		ldr	r3, .L40
 631 0016 B521     		movs	r1, #181
 632 0018 1800     		movs	r0, r3
 633 001a FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 634              	.L33:
 182:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 183:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     cy_en_sar_status_t result;
 184:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     uint8_t chan;
 185:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 186:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     if (NULL == base)
 635              		.loc 2 186 0 is_stmt 1
 636 001e 7B68     		ldr	r3, [r7, #4]
 637 0020 002B     		cmp	r3, #0
 638 0022 02D1     		bne	.L34
 187:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     {
 188:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****        result = CY_SAR_BAD_PARAM;
 639              		.loc 2 188 0
 640 0024 2D4B     		ldr	r3, .L40+4
 641 0026 FB60     		str	r3, [r7, #12]
 642 0028 51E0     		b	.L35
 643              	.L34:
 189:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
 190:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     else
 191:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     {
 192:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_CTRL(base) = CY_SAR_DEINIT;
 644              		.loc 2 192 0
 645 002a 7B68     		ldr	r3, [r7, #4]
 646 002c 0022     		movs	r2, #0
 647 002e 1A60     		str	r2, [r3]
 193:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_SAMPLE_CTRL(base) = CY_SAR_DEINIT;
 648              		.loc 2 193 0
 649 0030 7B68     		ldr	r3, [r7, #4]
 650 0032 0022     		movs	r2, #0
 651 0034 5A60     		str	r2, [r3, #4]
 194:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_SAMPLE_TIME01(base) = CY_SAR_SAMPLE_TIME_DEINIT;
 652              		.loc 2 194 0
 653 0036 7B68     		ldr	r3, [r7, #4]
 654 0038 294A     		ldr	r2, .L40+8
 655 003a 1A61     		str	r2, [r3, #16]
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 52


 195:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_SAMPLE_TIME23(base) = CY_SAR_SAMPLE_TIME_DEINIT;
 656              		.loc 2 195 0
 657 003c 7B68     		ldr	r3, [r7, #4]
 658 003e 284A     		ldr	r2, .L40+8
 659 0040 5A61     		str	r2, [r3, #20]
 196:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_RANGE_THRES(base) = CY_SAR_DEINIT;
 660              		.loc 2 196 0
 661 0042 7B68     		ldr	r3, [r7, #4]
 662 0044 0022     		movs	r2, #0
 663 0046 9A61     		str	r2, [r3, #24]
 197:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_RANGE_COND(base) = CY_SAR_DEINIT;
 664              		.loc 2 197 0
 665 0048 7B68     		ldr	r3, [r7, #4]
 666 004a 0022     		movs	r2, #0
 667 004c DA61     		str	r2, [r3, #28]
 198:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_CHAN_EN(base) = CY_SAR_DEINIT;
 668              		.loc 2 198 0
 669 004e 7B68     		ldr	r3, [r7, #4]
 670 0050 0022     		movs	r2, #0
 671 0052 1A62     		str	r2, [r3, #32]
 199:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         for (chan = 0u; chan < CY_SAR_MAX_NUM_CHANNELS; chan++)
 672              		.loc 2 199 0
 673 0054 0B23     		movs	r3, #11
 674 0056 FB18     		adds	r3, r7, r3
 675 0058 0022     		movs	r2, #0
 676 005a 1A70     		strb	r2, [r3]
 677 005c 0EE0     		b	.L36
 678              	.L37:
 200:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         {
 201:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             SAR_CHAN_CONFIG(base, chan) = CY_SAR_DEINIT;
 679              		.loc 2 201 0 discriminator 3
 680 005e 0B23     		movs	r3, #11
 681 0060 FB18     		adds	r3, r7, r3
 682 0062 1A78     		ldrb	r2, [r3]
 683 0064 7B68     		ldr	r3, [r7, #4]
 684 0066 2032     		adds	r2, r2, #32
 685 0068 9200     		lsls	r2, r2, #2
 686 006a 0021     		movs	r1, #0
 687 006c D150     		str	r1, [r2, r3]
 199:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         for (chan = 0u; chan < CY_SAR_MAX_NUM_CHANNELS; chan++)
 688              		.loc 2 199 0 discriminator 3
 689 006e 0B23     		movs	r3, #11
 690 0070 FB18     		adds	r3, r7, r3
 691 0072 1A78     		ldrb	r2, [r3]
 692 0074 0B23     		movs	r3, #11
 693 0076 FB18     		adds	r3, r7, r3
 694 0078 0132     		adds	r2, r2, #1
 695 007a 1A70     		strb	r2, [r3]
 696              	.L36:
 199:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         for (chan = 0u; chan < CY_SAR_MAX_NUM_CHANNELS; chan++)
 697              		.loc 2 199 0 is_stmt 0 discriminator 1
 698 007c 0B23     		movs	r3, #11
 699 007e FB18     		adds	r3, r7, r3
 700 0080 1B78     		ldrb	r3, [r3]
 701 0082 0F2B     		cmp	r3, #15
 702 0084 EBD9     		bls	.L37
 202:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         }
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 53


 203:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_INTR_MASK(base) = CY_SAR_DEINIT;
 703              		.loc 2 203 0 is_stmt 1
 704 0086 7A68     		ldr	r2, [r7, #4]
 705 0088 8623     		movs	r3, #134
 706 008a 9B00     		lsls	r3, r3, #2
 707 008c 0021     		movs	r1, #0
 708 008e D150     		str	r1, [r2, r3]
 204:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_SATURATE_INTR_MASK(base) = CY_SAR_DEINIT;
 709              		.loc 2 204 0
 710 0090 7A68     		ldr	r2, [r7, #4]
 711 0092 8A23     		movs	r3, #138
 712 0094 9B00     		lsls	r3, r3, #2
 713 0096 0021     		movs	r1, #0
 714 0098 D150     		str	r1, [r2, r3]
 205:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_RANGE_INTR_MASK(base) = CY_SAR_DEINIT;
 715              		.loc 2 205 0
 716 009a 7A68     		ldr	r2, [r7, #4]
 717 009c 8E23     		movs	r3, #142
 718 009e 9B00     		lsls	r3, r3, #2
 719 00a0 0021     		movs	r1, #0
 720 00a2 D150     		str	r1, [r2, r3]
 206:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         if (true == deInitRouting)
 721              		.loc 2 206 0
 722 00a4 FB1C     		adds	r3, r7, #3
 723 00a6 1B78     		ldrb	r3, [r3]
 724 00a8 002B     		cmp	r3, #0
 725 00aa 0ED0     		beq	.L38
 207:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         {
 208:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             SAR_MUX_SWITCH_CLEAR0(base) = CY_SAR_CLEAR_ALL_SWITCHES;
 726              		.loc 2 208 0
 727 00ac 7A68     		ldr	r2, [r7, #4]
 728 00ae C123     		movs	r3, #193
 729 00b0 9B00     		lsls	r3, r3, #2
 730 00b2 0C49     		ldr	r1, .L40+12
 731 00b4 D150     		str	r1, [r2, r3]
 209:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             SAR_MUX_SWITCH_DS_CTRL(base) = CY_SAR_DEINIT;
 732              		.loc 2 209 0
 733 00b6 7A68     		ldr	r2, [r7, #4]
 734 00b8 D023     		movs	r3, #208
 735 00ba 9B00     		lsls	r3, r3, #2
 736 00bc 0021     		movs	r1, #0
 737 00be D150     		str	r1, [r2, r3]
 210:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             SAR_MUX_SWITCH_SQ_CTRL(base) = CY_SAR_DEINIT;
 738              		.loc 2 210 0
 739 00c0 7A68     		ldr	r2, [r7, #4]
 740 00c2 D123     		movs	r3, #209
 741 00c4 9B00     		lsls	r3, r3, #2
 742 00c6 0021     		movs	r1, #0
 743 00c8 D150     		str	r1, [r2, r3]
 744              	.L38:
 211:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         }
 212:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         result = CY_SAR_SUCCESS;
 745              		.loc 2 212 0
 746 00ca 0023     		movs	r3, #0
 747 00cc FB60     		str	r3, [r7, #12]
 748              	.L35:
 213:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 54


 214:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 215:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     return result;
 749              		.loc 2 215 0
 750 00ce FB68     		ldr	r3, [r7, #12]
 216:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** }
 751              		.loc 2 216 0
 752 00d0 1800     		movs	r0, r3
 753 00d2 BD46     		mov	sp, r7
 754 00d4 04B0     		add	sp, sp, #16
 755              		@ sp needed
 756 00d6 80BD     		pop	{r7, pc}
 757              	.L41:
 758              		.align	2
 759              	.L40:
 760 00d8 00000000 		.word	.LC0
 761 00dc 01000600 		.word	393217
 762 00e0 03000300 		.word	196611
 763 00e4 FFFFFF3F 		.word	1073741823
 764              		.cfi_endproc
 765              	.LFE106:
 766              		.size	Cy_SAR_DeInit, .-Cy_SAR_DeInit
 767              		.section	.text.Cy_SAR_Enable,"ax",%progbits
 768              		.align	2
 769              		.global	Cy_SAR_Enable
 770              		.code	16
 771              		.thumb_func
 772              		.type	Cy_SAR_Enable, %function
 773              	Cy_SAR_Enable:
 774              	.LFB107:
 217:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 218:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 219:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** /*******************************************************************************
 220:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Function Name: Cy_SAR_Enable
 221:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** ****************************************************************************//**
 222:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 223:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Power up the SAR ADC subsystem block. The hardware is ready to use
 224:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * after 2 us, which is included in this function.
 225:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 226:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param base
 227:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Pointer to structure describing registers
 228:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 229:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \return None
 230:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 231:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *******************************************************************************/
 232:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** void Cy_SAR_Enable(SAR_Type *base)
 233:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** {
 775              		.loc 2 233 0
 776              		.cfi_startproc
 777              		@ args = 0, pretend = 0, frame = 8
 778              		@ frame_needed = 1, uses_anonymous_args = 0
 779 0000 80B5     		push	{r7, lr}
 780              		.cfi_def_cfa_offset 8
 781              		.cfi_offset 7, -8
 782              		.cfi_offset 14, -4
 783 0002 82B0     		sub	sp, sp, #8
 784              		.cfi_def_cfa_offset 16
 785 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 55


 786              		.cfi_def_cfa_register 7
 787 0006 7860     		str	r0, [r7, #4]
 234:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     if (0uL == (SAR_CTRL(base) & SAR_CTRL_ENABLED_Msk))
 788              		.loc 2 234 0
 789 0008 7B68     		ldr	r3, [r7, #4]
 790 000a 1B68     		ldr	r3, [r3]
 791 000c 002B     		cmp	r3, #0
 792 000e 10DB     		blt	.L45
 235:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     {
 236:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         while (0uL != (SAR_STATUS(base) & SAR_STATUS_BUSY_Msk))
 793              		.loc 2 236 0
 794 0010 C046     		nop
 795              	.L44:
 796              		.loc 2 236 0 is_stmt 0 discriminator 1
 797 0012 7A68     		ldr	r2, [r7, #4]
 798 0014 A823     		movs	r3, #168
 799 0016 9B00     		lsls	r3, r3, #2
 800 0018 D358     		ldr	r3, [r2, r3]
 801 001a 002B     		cmp	r3, #0
 802 001c F9DB     		blt	.L44
 237:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         {
 238:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             /* Wait for SAR to go idle to avoid deadlock */
 239:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         }
 240:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 241:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_CTRL(base) |= SAR_CTRL_ENABLED_Msk;
 803              		.loc 2 241 0 is_stmt 1
 804 001e 7B68     		ldr	r3, [r7, #4]
 805 0020 1B68     		ldr	r3, [r3]
 806 0022 8022     		movs	r2, #128
 807 0024 1206     		lsls	r2, r2, #24
 808 0026 1A43     		orrs	r2, r3
 809 0028 7B68     		ldr	r3, [r7, #4]
 810 002a 1A60     		str	r2, [r3]
 242:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 243:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         /* The block is ready to use 2 us after the enable signal is set high. */
 244:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         Cy_SysLib_DelayUs(CY_SAR_2US_DELAY);
 811              		.loc 2 244 0
 812 002c 0220     		movs	r0, #2
 813 002e FFF7FEFF 		bl	Cy_SysLib_DelayUs
 814              	.L45:
 245:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
 246:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** }
 815              		.loc 2 246 0
 816 0032 C046     		nop
 817 0034 BD46     		mov	sp, r7
 818 0036 02B0     		add	sp, sp, #8
 819              		@ sp needed
 820 0038 80BD     		pop	{r7, pc}
 821              		.cfi_endproc
 822              	.LFE107:
 823              		.size	Cy_SAR_Enable, .-Cy_SAR_Enable
 824 003a C046     		.section	.text.Cy_SAR_DeepSleep,"ax",%progbits
 825              		.align	2
 826              		.global	Cy_SAR_DeepSleep
 827              		.code	16
 828              		.thumb_func
 829              		.type	Cy_SAR_DeepSleep, %function
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 56


 830              	Cy_SAR_DeepSleep:
 831              	.LFB108:
 247:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 248:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 249:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** /*******************************************************************************
 250:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Function Name: Cy_SAR_DeepSleep
 251:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** ****************************************************************************//**
 252:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 253:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * This is the preferred routine to prepare the hardware for Deep Sleep.
 254:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 255:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * It will call \ref Cy_SAR_StopConvert to disable continuous conversions
 256:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * and wait for SAR conversions to stop before entering Deep Sleep.
 257:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * If the SARMUX is not configured for Deep Sleep operation, the entire SAR hardware
 258:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * block will be turned off.
 259:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 260:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param base
 261:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Pointer to structure describing registers
 262:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 263:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \return None
 264:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 265:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \funcusage
 266:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 267:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * This function is used in the \ref Cy_SAR_DeepSleepCallback. There is no
 268:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * need to call this function directly.
 269:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 270:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *******************************************************************************/
 271:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** void Cy_SAR_DeepSleep(SAR_Type *base)
 272:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** {
 832              		.loc 2 272 0
 833              		.cfi_startproc
 834              		@ args = 0, pretend = 0, frame = 16
 835              		@ frame_needed = 1, uses_anonymous_args = 0
 836 0000 80B5     		push	{r7, lr}
 837              		.cfi_def_cfa_offset 8
 838              		.cfi_offset 7, -8
 839              		.cfi_offset 14, -4
 840 0002 84B0     		sub	sp, sp, #16
 841              		.cfi_def_cfa_offset 24
 842 0004 00AF     		add	r7, sp, #0
 843              		.cfi_def_cfa_register 7
 844 0006 7860     		str	r0, [r7, #4]
 273:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     uint32_t ctrlReg = SAR_CTRL(base);
 845              		.loc 2 273 0
 846 0008 7B68     		ldr	r3, [r7, #4]
 847 000a 1B68     		ldr	r3, [r3]
 848 000c FB60     		str	r3, [r7, #12]
 274:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 275:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     enabledBeforeSleep.hwEnabled = ctrlReg & SAR_CTRL_ENABLED_Msk;
 849              		.loc 2 275 0
 850 000e FB68     		ldr	r3, [r7, #12]
 851 0010 DB0F     		lsrs	r3, r3, #31
 852 0012 DA07     		lsls	r2, r3, #31
 853 0014 174B     		ldr	r3, .L49
 854 0016 1A60     		str	r2, [r3]
 276:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 277:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     /* Turn off the reference buffer */
 278:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     ctrlReg &= ~SAR_CTRL_REFBUF_EN_Msk;
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 57


 855              		.loc 2 278 0
 856 0018 FB68     		ldr	r3, [r7, #12]
 857 001a 174A     		ldr	r2, .L49+4
 858 001c 1340     		ands	r3, r2
 859 001e FB60     		str	r3, [r7, #12]
 279:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 280:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     if (SAR_CTRL_ENABLED_Msk == enabledBeforeSleep.hwEnabled)
 860              		.loc 2 280 0
 861 0020 144B     		ldr	r3, .L49
 862 0022 1A68     		ldr	r2, [r3]
 863 0024 8023     		movs	r3, #128
 864 0026 1B06     		lsls	r3, r3, #24
 865 0028 9A42     		cmp	r2, r3
 866 002a 1CD1     		bne	.L47
 281:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     {
 282:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 283:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         /* Save state of CONTINUOUS bit so that conversions can be re-started upon wake-up */
 284:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         enabledBeforeSleep.continuous = SAR_SAMPLE_CTRL(base) & SAR_SAMPLE_CTRL_CONTINUOUS_Msk;
 867              		.loc 2 284 0
 868 002c 7B68     		ldr	r3, [r7, #4]
 869 002e 5A68     		ldr	r2, [r3, #4]
 870 0030 8023     		movs	r3, #128
 871 0032 5B02     		lsls	r3, r3, #9
 872 0034 1A40     		ands	r2, r3
 873 0036 0F4B     		ldr	r3, .L49
 874 0038 5A60     		str	r2, [r3, #4]
 285:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 286:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         Cy_SAR_StopConvert(base);
 875              		.loc 2 286 0
 876 003a 7B68     		ldr	r3, [r7, #4]
 877 003c 1800     		movs	r0, r3
 878 003e FFF7FEFF 		bl	Cy_SAR_StopConvert
 287:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 288:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         while (0uL != (SAR_STATUS(base) & SAR_STATUS_BUSY_Msk))
 879              		.loc 2 288 0
 880 0042 C046     		nop
 881              	.L48:
 882              		.loc 2 288 0 is_stmt 0 discriminator 1
 883 0044 7A68     		ldr	r2, [r7, #4]
 884 0046 A823     		movs	r3, #168
 885 0048 9B00     		lsls	r3, r3, #2
 886 004a D358     		ldr	r3, [r2, r3]
 887 004c 002B     		cmp	r3, #0
 888 004e F9DB     		blt	.L48
 289:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         {
 290:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             /* Wait for SAR to stop conversions before entering low power */
 291:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         }
 292:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 293:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         /* Turn off the entire hardware block only if the SARMUX is not
 294:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****          * enabled for Deep Sleep operation. */
 295:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         if (SAR_CTRL_DEEPSLEEP_ON_Msk != (ctrlReg & SAR_CTRL_DEEPSLEEP_ON_Msk))
 889              		.loc 2 295 0 is_stmt 1
 890 0050 FA68     		ldr	r2, [r7, #12]
 891 0052 8023     		movs	r3, #128
 892 0054 1B05     		lsls	r3, r3, #20
 893 0056 1340     		ands	r3, r2
 894 0058 05D1     		bne	.L47
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 58


 296:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         {
 297:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             SAR_CTRL(base) &= ~SAR_CTRL_ENABLED_Msk;
 895              		.loc 2 297 0
 896 005a 7B68     		ldr	r3, [r7, #4]
 897 005c 1B68     		ldr	r3, [r3]
 898 005e 5B00     		lsls	r3, r3, #1
 899 0060 5A08     		lsrs	r2, r3, #1
 900 0062 7B68     		ldr	r3, [r7, #4]
 901 0064 1A60     		str	r2, [r3]
 902              	.L47:
 298:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         }
 299:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
 300:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 301:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     SAR_CTRL(base) = ctrlReg;
 903              		.loc 2 301 0
 904 0066 7B68     		ldr	r3, [r7, #4]
 905 0068 FA68     		ldr	r2, [r7, #12]
 906 006a 1A60     		str	r2, [r3]
 302:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** }
 907              		.loc 2 302 0
 908 006c C046     		nop
 909 006e BD46     		mov	sp, r7
 910 0070 04B0     		add	sp, sp, #16
 911              		@ sp needed
 912 0072 80BD     		pop	{r7, pc}
 913              	.L50:
 914              		.align	2
 915              	.L49:
 916 0074 00000000 		.word	enabledBeforeSleep
 917 0078 FFFFDFFF 		.word	-2097153
 918              		.cfi_endproc
 919              	.LFE108:
 920              		.size	Cy_SAR_DeepSleep, .-Cy_SAR_DeepSleep
 921              		.section	.text.Cy_SAR_Wakeup,"ax",%progbits
 922              		.align	2
 923              		.global	Cy_SAR_Wakeup
 924              		.code	16
 925              		.thumb_func
 926              		.type	Cy_SAR_Wakeup, %function
 927              	Cy_SAR_Wakeup:
 928              	.LFB109:
 303:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 304:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 305:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** /*******************************************************************************
 306:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Function Name: Cy_SAR_Wakeup
 307:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** ****************************************************************************//**
 308:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 309:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * This is the preferred routine to restore the hardware to the state after calling
 310:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \ref Cy_SAR_DeepSleep. Restoring the hardware involves re-enabling the hardware,
 311:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * the reference buffer, and continuous scanning if it was previously
 312:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * enabled before entering sleep.
 313:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 314:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param base
 315:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Pointer to structure describing registers
 316:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 317:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \sideeffect
 318:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Calling this function without previously calling \ref Cy_SAR_DeepSleep can lead to
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 59


 319:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * unpredictable results.
 320:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 321:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \return None
 322:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 323:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \funcusage
 324:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 325:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * This function is used in the \ref Cy_SAR_DeepSleepCallback. There is no
 326:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * need to call this function directly.
 327:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 328:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *******************************************************************************/
 329:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** void Cy_SAR_Wakeup(SAR_Type *base)
 330:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** {
 929              		.loc 2 330 0
 930              		.cfi_startproc
 931              		@ args = 0, pretend = 0, frame = 8
 932              		@ frame_needed = 1, uses_anonymous_args = 0
 933 0000 80B5     		push	{r7, lr}
 934              		.cfi_def_cfa_offset 8
 935              		.cfi_offset 7, -8
 936              		.cfi_offset 14, -4
 937 0002 82B0     		sub	sp, sp, #8
 938              		.cfi_def_cfa_offset 16
 939 0004 00AF     		add	r7, sp, #0
 940              		.cfi_def_cfa_register 7
 941 0006 7860     		str	r0, [r7, #4]
 331:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     /* Turn on the reference buffer */
 332:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     SAR_CTRL(base) |= SAR_CTRL_REFBUF_EN_Msk;
 942              		.loc 2 332 0
 943 0008 7B68     		ldr	r3, [r7, #4]
 944 000a 1B68     		ldr	r3, [r3]
 945 000c 8022     		movs	r2, #128
 946 000e 9203     		lsls	r2, r2, #14
 947 0010 1A43     		orrs	r2, r3
 948 0012 7B68     		ldr	r3, [r7, #4]
 949 0014 1A60     		str	r2, [r3]
 333:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 334:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     if (SAR_CTRL_ENABLED_Msk == enabledBeforeSleep.hwEnabled)
 950              		.loc 2 334 0
 951 0016 0C4B     		ldr	r3, .L54
 952 0018 1A68     		ldr	r2, [r3]
 953 001a 8023     		movs	r3, #128
 954 001c 1B06     		lsls	r3, r3, #24
 955 001e 9A42     		cmp	r2, r3
 956 0020 0ED1     		bne	.L53
 335:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     {
 336:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         Cy_SAR_Enable(base);
 957              		.loc 2 336 0
 958 0022 7B68     		ldr	r3, [r7, #4]
 959 0024 1800     		movs	r0, r3
 960 0026 FFF7FEFF 		bl	Cy_SAR_Enable
 337:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 338:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         if (SAR_SAMPLE_CTRL_CONTINUOUS_Msk == enabledBeforeSleep.continuous)
 961              		.loc 2 338 0
 962 002a 074B     		ldr	r3, .L54
 963 002c 5A68     		ldr	r2, [r3, #4]
 964 002e 8023     		movs	r3, #128
 965 0030 5B02     		lsls	r3, r3, #9
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 60


 966 0032 9A42     		cmp	r2, r3
 967 0034 04D1     		bne	.L53
 339:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         {
 340:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             Cy_SAR_StartConvert(base, CY_SAR_START_CONVERT_CONTINUOUS);
 968              		.loc 2 340 0
 969 0036 7B68     		ldr	r3, [r7, #4]
 970 0038 0121     		movs	r1, #1
 971 003a 1800     		movs	r0, r3
 972 003c FFF7FEFF 		bl	Cy_SAR_StartConvert
 973              	.L53:
 341:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         }
 342:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
 343:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** }
 974              		.loc 2 343 0
 975 0040 C046     		nop
 976 0042 BD46     		mov	sp, r7
 977 0044 02B0     		add	sp, sp, #8
 978              		@ sp needed
 979 0046 80BD     		pop	{r7, pc}
 980              	.L55:
 981              		.align	2
 982              	.L54:
 983 0048 00000000 		.word	enabledBeforeSleep
 984              		.cfi_endproc
 985              	.LFE109:
 986              		.size	Cy_SAR_Wakeup, .-Cy_SAR_Wakeup
 987              		.section	.text.Cy_SAR_StartConvert,"ax",%progbits
 988              		.align	2
 989              		.global	Cy_SAR_StartConvert
 990              		.code	16
 991              		.thumb_func
 992              		.type	Cy_SAR_StartConvert, %function
 993              	Cy_SAR_StartConvert:
 994              	.LFB110:
 344:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 345:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 346:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** /*******************************************************************************
 347:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Function Name: Cy_SAR_StartConvert
 348:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** ****************************************************************************//**
 349:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 350:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Start a single scan (one shot) of all enabled channels or start scanning
 351:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * continuously. When in continuous mode, all firmware and hardware triggers
 352:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * are ignored. To stop continuous scanning, call \ref Cy_SAR_StopConvert.
 353:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 354:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param base
 355:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Pointer to structure describing registers
 356:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 357:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param startSelect
 358:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * A value of the enum \ref cy_en_sar_start_convert_sel_t
 359:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 360:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \return None
 361:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 362:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \funcusage
 363:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 364:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_START_CONVERT
 365:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 366:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *******************************************************************************/
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 61


 367:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** void Cy_SAR_StartConvert(SAR_Type *base, cy_en_sar_start_convert_sel_t startSelect)
 368:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** {
 995              		.loc 2 368 0
 996              		.cfi_startproc
 997              		@ args = 0, pretend = 0, frame = 8
 998              		@ frame_needed = 1, uses_anonymous_args = 0
 999 0000 80B5     		push	{r7, lr}
 1000              		.cfi_def_cfa_offset 8
 1001              		.cfi_offset 7, -8
 1002              		.cfi_offset 14, -4
 1003 0002 82B0     		sub	sp, sp, #8
 1004              		.cfi_def_cfa_offset 16
 1005 0004 00AF     		add	r7, sp, #0
 1006              		.cfi_def_cfa_register 7
 1007 0006 7860     		str	r0, [r7, #4]
 1008 0008 0A00     		movs	r2, r1
 1009 000a FB1C     		adds	r3, r7, #3
 1010 000c 1A70     		strb	r2, [r3]
 369:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     CY_ASSERT_L3(CY_SAR_STARTCONVERT(startSelect));
 1011              		.loc 2 369 0
 1012 000e FB1C     		adds	r3, r7, #3
 1013 0010 1B78     		ldrb	r3, [r3]
 1014 0012 002B     		cmp	r3, #0
 1015 0014 0BD0     		beq	.L57
 1016              		.loc 2 369 0 is_stmt 0 discriminator 1
 1017 0016 FB1C     		adds	r3, r7, #3
 1018 0018 1B78     		ldrb	r3, [r3]
 1019 001a 012B     		cmp	r3, #1
 1020 001c 07D0     		beq	.L57
 1021              		.loc 2 369 0 discriminator 2
 1022 001e 7223     		movs	r3, #114
 1023 0020 FF33     		adds	r3, r3, #255
 1024 0022 1A00     		movs	r2, r3
 1025 0024 0C4B     		ldr	r3, .L62
 1026 0026 1100     		movs	r1, r2
 1027 0028 1800     		movs	r0, r3
 1028 002a FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 1029              	.L57:
 370:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 371:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     switch(startSelect)
 1030              		.loc 2 371 0 is_stmt 1
 1031 002e FB1C     		adds	r3, r7, #3
 1032 0030 1B78     		ldrb	r3, [r3]
 1033 0032 012B     		cmp	r3, #1
 1034 0034 07D1     		bne	.L61
 372:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     {
 373:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     case CY_SAR_START_CONVERT_CONTINUOUS:
 374:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_SAMPLE_CTRL(base) |= SAR_SAMPLE_CTRL_CONTINUOUS_Msk;
 1035              		.loc 2 374 0
 1036 0036 7B68     		ldr	r3, [r7, #4]
 1037 0038 5B68     		ldr	r3, [r3, #4]
 1038 003a 8022     		movs	r2, #128
 1039 003c 5202     		lsls	r2, r2, #9
 1040 003e 1A43     		orrs	r2, r3
 1041 0040 7B68     		ldr	r3, [r7, #4]
 1042 0042 5A60     		str	r2, [r3, #4]
 375:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         break;
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 62


 1043              		.loc 2 375 0
 1044 0044 03E0     		b	.L60
 1045              	.L61:
 376:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     case CY_SAR_START_CONVERT_SINGLE_SHOT:
 377:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     default:
 378:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_START_CTRL(base) = SAR_START_CTRL_FW_TRIGGER_Msk;
 1046              		.loc 2 378 0
 1047 0046 7B68     		ldr	r3, [r7, #4]
 1048 0048 0122     		movs	r2, #1
 1049 004a 5A62     		str	r2, [r3, #36]
 379:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         break;
 1050              		.loc 2 379 0
 1051 004c C046     		nop
 1052              	.L60:
 380:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
 381:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** }
 1053              		.loc 2 381 0
 1054 004e C046     		nop
 1055 0050 BD46     		mov	sp, r7
 1056 0052 02B0     		add	sp, sp, #8
 1057              		@ sp needed
 1058 0054 80BD     		pop	{r7, pc}
 1059              	.L63:
 1060 0056 C046     		.align	2
 1061              	.L62:
 1062 0058 00000000 		.word	.LC0
 1063              		.cfi_endproc
 1064              	.LFE110:
 1065              		.size	Cy_SAR_StartConvert, .-Cy_SAR_StartConvert
 1066              		.section	.text.Cy_SAR_StopConvert,"ax",%progbits
 1067              		.align	2
 1068              		.global	Cy_SAR_StopConvert
 1069              		.code	16
 1070              		.thumb_func
 1071              		.type	Cy_SAR_StopConvert, %function
 1072              	Cy_SAR_StopConvert:
 1073              	.LFB111:
 382:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 383:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 384:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** /*******************************************************************************
 385:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Function Name: Cy_SAR_StopConvert
 386:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** ****************************************************************************//**
 387:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 388:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Stop continuous scanning of enabled channels.
 389:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * If a conversion is currently executing, that conversion will complete,
 390:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * but no further conversions will occur until the next call to
 391:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \ref Cy_SAR_StartConvert or the next hardware trigger, if enabled.
 392:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 393:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param base
 394:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Pointer to structure describing registers
 395:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 396:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \return None
 397:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 398:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \funcusage
 399:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 400:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_STOP_CONVERT
 401:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 63


 402:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *******************************************************************************/
 403:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** void Cy_SAR_StopConvert(SAR_Type *base)
 404:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** {
 1074              		.loc 2 404 0
 1075              		.cfi_startproc
 1076              		@ args = 0, pretend = 0, frame = 8
 1077              		@ frame_needed = 1, uses_anonymous_args = 0
 1078 0000 80B5     		push	{r7, lr}
 1079              		.cfi_def_cfa_offset 8
 1080              		.cfi_offset 7, -8
 1081              		.cfi_offset 14, -4
 1082 0002 82B0     		sub	sp, sp, #8
 1083              		.cfi_def_cfa_offset 16
 1084 0004 00AF     		add	r7, sp, #0
 1085              		.cfi_def_cfa_register 7
 1086 0006 7860     		str	r0, [r7, #4]
 405:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     if (SAR_SAMPLE_CTRL_CONTINUOUS_Msk == (SAR_SAMPLE_CTRL(base) & SAR_SAMPLE_CTRL_CONTINUOUS_Msk))
 1087              		.loc 2 405 0
 1088 0008 7B68     		ldr	r3, [r7, #4]
 1089 000a 5A68     		ldr	r2, [r3, #4]
 1090 000c 8023     		movs	r3, #128
 1091 000e 5B02     		lsls	r3, r3, #9
 1092 0010 1340     		ands	r3, r2
 1093 0012 05D0     		beq	.L66
 406:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     {
 407:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_SAMPLE_CTRL(base) &= ~SAR_SAMPLE_CTRL_CONTINUOUS_Msk;
 1094              		.loc 2 407 0
 1095 0014 7B68     		ldr	r3, [r7, #4]
 1096 0016 5B68     		ldr	r3, [r3, #4]
 1097 0018 034A     		ldr	r2, .L67
 1098 001a 1A40     		ands	r2, r3
 1099 001c 7B68     		ldr	r3, [r7, #4]
 1100 001e 5A60     		str	r2, [r3, #4]
 1101              	.L66:
 408:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
 409:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** }
 1102              		.loc 2 409 0
 1103 0020 C046     		nop
 1104 0022 BD46     		mov	sp, r7
 1105 0024 02B0     		add	sp, sp, #8
 1106              		@ sp needed
 1107 0026 80BD     		pop	{r7, pc}
 1108              	.L68:
 1109              		.align	2
 1110              	.L67:
 1111 0028 FFFFFEFF 		.word	-65537
 1112              		.cfi_endproc
 1113              	.LFE111:
 1114              		.size	Cy_SAR_StopConvert, .-Cy_SAR_StopConvert
 1115              		.section	.text.Cy_SAR_SetConvertMode,"ax",%progbits
 1116              		.align	2
 1117              		.global	Cy_SAR_SetConvertMode
 1118              		.code	16
 1119              		.thumb_func
 1120              		.type	Cy_SAR_SetConvertMode, %function
 1121              	Cy_SAR_SetConvertMode:
 1122              	.LFB112:
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 64


 410:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 411:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 412:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** /*******************************************************************************
 413:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Function Name: Cy_SAR_SetConvertMode
 414:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** ****************************************************************************//**
 415:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 416:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Set the mode in which conversions are triggered. This function does
 417:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * not start any conversions; it only configures the mode for subsequent conversions.
 418:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 419:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * There are three modes:
 420:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *   - firmware only; hardware triggering is disabled
 421:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *   - firmware and edge sensitive hardware triggering
 422:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *   - firmware and level sensitive hardware triggering
 423:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 424:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Note that firmware triggering is always enabled.
 425:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 426:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param base
 427:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Pointer to structure describing registers
 428:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 429:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param mode
 430:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * A value of the enum \ref cy_en_sar_sample_ctrl_trigger_mode_t
 431:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 432:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \return None
 433:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 434:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \funcusage
 435:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 436:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \snippet sar_sut_01.cydsn/main_cm4.c SAR_SNIPPET_SET_CONVERT_MODE
 437:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 438:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *******************************************************************************/
 439:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** void Cy_SAR_SetConvertMode(SAR_Type *base, cy_en_sar_sample_ctrl_trigger_mode_t mode)
 440:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** {
 1123              		.loc 2 440 0
 1124              		.cfi_startproc
 1125              		@ args = 0, pretend = 0, frame = 16
 1126              		@ frame_needed = 1, uses_anonymous_args = 0
 1127 0000 80B5     		push	{r7, lr}
 1128              		.cfi_def_cfa_offset 8
 1129              		.cfi_offset 7, -8
 1130              		.cfi_offset 14, -4
 1131 0002 84B0     		sub	sp, sp, #16
 1132              		.cfi_def_cfa_offset 24
 1133 0004 00AF     		add	r7, sp, #0
 1134              		.cfi_def_cfa_register 7
 1135 0006 7860     		str	r0, [r7, #4]
 1136 0008 3960     		str	r1, [r7]
 441:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     CY_ASSERT_L3(CY_SAR_TRIGGER(mode));
 1137              		.loc 2 441 0
 1138 000a 3B68     		ldr	r3, [r7]
 1139 000c 002B     		cmp	r3, #0
 1140 000e 11D0     		beq	.L70
 1141              		.loc 2 441 0 is_stmt 0 discriminator 1
 1142 0010 3A68     		ldr	r2, [r7]
 1143 0012 8023     		movs	r3, #128
 1144 0014 9B02     		lsls	r3, r3, #10
 1145 0016 9A42     		cmp	r2, r3
 1146 0018 0CD0     		beq	.L70
 1147              		.loc 2 441 0 discriminator 2
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 65


 1148 001a 3A68     		ldr	r2, [r7]
 1149 001c C023     		movs	r3, #192
 1150 001e DB02     		lsls	r3, r3, #11
 1151 0020 9A42     		cmp	r2, r3
 1152 0022 07D0     		beq	.L70
 1153              		.loc 2 441 0 discriminator 3
 1154 0024 BA23     		movs	r3, #186
 1155 0026 FF33     		adds	r3, r3, #255
 1156 0028 1A00     		movs	r2, r3
 1157 002a 094B     		ldr	r3, .L71
 1158 002c 1100     		movs	r1, r2
 1159 002e 1800     		movs	r0, r3
 1160 0030 FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 1161              	.L70:
 442:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 443:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     /* Clear the TRIGGER_EN and TRIGGER_LEVEL bits */
 444:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     uint32_t sampleCtrlReg = SAR_SAMPLE_CTRL(base) & ~(SAR_SAMPLE_CTRL_DSI_TRIGGER_EN_Msk | SAR_SAM
 1162              		.loc 2 444 0 is_stmt 1
 1163 0034 7B68     		ldr	r3, [r7, #4]
 1164 0036 5B68     		ldr	r3, [r3, #4]
 1165 0038 064A     		ldr	r2, .L71+4
 1166 003a 1340     		ands	r3, r2
 1167 003c FB60     		str	r3, [r7, #12]
 445:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 446:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     SAR_SAMPLE_CTRL(base) = sampleCtrlReg | mode;
 1168              		.loc 2 446 0
 1169 003e FA68     		ldr	r2, [r7, #12]
 1170 0040 3B68     		ldr	r3, [r7]
 1171 0042 1A43     		orrs	r2, r3
 1172 0044 7B68     		ldr	r3, [r7, #4]
 1173 0046 5A60     		str	r2, [r3, #4]
 447:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** }
 1174              		.loc 2 447 0
 1175 0048 C046     		nop
 1176 004a BD46     		mov	sp, r7
 1177 004c 04B0     		add	sp, sp, #16
 1178              		@ sp needed
 1179 004e 80BD     		pop	{r7, pc}
 1180              	.L72:
 1181              		.align	2
 1182              	.L71:
 1183 0050 00000000 		.word	.LC0
 1184 0054 FFFFF9FF 		.word	-393217
 1185              		.cfi_endproc
 1186              	.LFE112:
 1187              		.size	Cy_SAR_SetConvertMode, .-Cy_SAR_SetConvertMode
 1188              		.section	.text.Cy_SAR_IsEndConversion,"ax",%progbits
 1189              		.align	2
 1190              		.global	Cy_SAR_IsEndConversion
 1191              		.code	16
 1192              		.thumb_func
 1193              		.type	Cy_SAR_IsEndConversion, %function
 1194              	Cy_SAR_IsEndConversion:
 1195              	.LFB113:
 448:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 449:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 450:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** /*******************************************************************************
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 66


 451:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Function Name: Cy_SAR_IsEndConversion
 452:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** ****************************************************************************//**
 453:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 454:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Immediately return the status of the conversion or does not return (blocking)
 455:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * until the conversion completes, depending on the retMode parameter.
 456:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * In blocking mode, there is a time out of about 10 seconds for a CPU speed of
 457:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * 100 MHz.
 458:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 459:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param base
 460:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Pointer to structure describing registers
 461:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 462:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param retMode
 463:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * A value of the enum \ref cy_en_sar_return_mode_t
 464:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 465:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \return
 466:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - \ref CY_SAR_SUCCESS : the last conversion is complete
 467:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - \ref CY_SAR_CONVERSION_NOT_COMPLETE : the conversion has not completed
 468:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - \ref CY_SAR_TIMEOUT : the watchdog timer has expired in blocking mode
 469:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 470:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \sideeffect
 471:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * This function reads the end of conversion status and clears it after.
 472:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 473:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \funcusage
 474:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 475:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_IS_END_CONVERSION
 476:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 477:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *******************************************************************************/
 478:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** cy_en_sar_status_t Cy_SAR_IsEndConversion(SAR_Type *base, cy_en_sar_return_mode_t retMode)
 479:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** {
 1196              		.loc 2 479 0
 1197              		.cfi_startproc
 1198              		@ args = 0, pretend = 0, frame = 24
 1199              		@ frame_needed = 1, uses_anonymous_args = 0
 1200 0000 80B5     		push	{r7, lr}
 1201              		.cfi_def_cfa_offset 8
 1202              		.cfi_offset 7, -8
 1203              		.cfi_offset 14, -4
 1204 0002 86B0     		sub	sp, sp, #24
 1205              		.cfi_def_cfa_offset 32
 1206 0004 00AF     		add	r7, sp, #0
 1207              		.cfi_def_cfa_register 7
 1208 0006 7860     		str	r0, [r7, #4]
 1209 0008 0A00     		movs	r2, r1
 1210 000a FB1C     		adds	r3, r7, #3
 1211 000c 1A70     		strb	r2, [r3]
 480:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     CY_ASSERT_L3(CY_SAR_RETURN(retMode));
 1212              		.loc 2 480 0
 1213 000e FB1C     		adds	r3, r7, #3
 1214 0010 1B78     		ldrb	r3, [r3]
 1215 0012 002B     		cmp	r3, #0
 1216 0014 0AD0     		beq	.L74
 1217              		.loc 2 480 0 is_stmt 0 discriminator 1
 1218 0016 FB1C     		adds	r3, r7, #3
 1219 0018 1B78     		ldrb	r3, [r3]
 1220 001a 012B     		cmp	r3, #1
 1221 001c 06D0     		beq	.L74
 1222              		.loc 2 480 0 discriminator 2
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 67


 1223 001e F023     		movs	r3, #240
 1224 0020 5A00     		lsls	r2, r3, #1
 1225 0022 204B     		ldr	r3, .L86
 1226 0024 1100     		movs	r1, r2
 1227 0026 1800     		movs	r0, r3
 1228 0028 FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 1229              	.L74:
 481:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 482:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     cy_en_sar_status_t result;
 483:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 484:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     uint32_t endOfConversion = SAR_INTR(base) & SAR_INTR_EOS_INTR_Msk;
 1230              		.loc 2 484 0 is_stmt 1
 1231 002c 7A68     		ldr	r2, [r7, #4]
 1232 002e 8423     		movs	r3, #132
 1233 0030 9B00     		lsls	r3, r3, #2
 1234 0032 D358     		ldr	r3, [r2, r3]
 1235 0034 0122     		movs	r2, #1
 1236 0036 1340     		ands	r3, r2
 1237 0038 3B61     		str	r3, [r7, #16]
 485:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     uint32_t wdt = 0x1555555uL; /* Watchdog timer for blocking while loop */
 1238              		.loc 2 485 0
 1239 003a 1B4B     		ldr	r3, .L86+4
 1240 003c FB60     		str	r3, [r7, #12]
 486:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 487:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     switch(retMode)
 1241              		.loc 2 487 0
 1242 003e FB1C     		adds	r3, r7, #3
 1243 0040 1B78     		ldrb	r3, [r3]
 1244 0042 012B     		cmp	r3, #1
 1245 0044 0AD0     		beq	.L77
 488:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     {
 489:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     case CY_SAR_WAIT_FOR_RESULT:
 490:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         while((0uL == endOfConversion) && (0uL != wdt))
 491:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         {
 492:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             endOfConversion = SAR_INTR(base) & SAR_INTR_EOS_INTR_Msk;
 493:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             wdt--;
 494:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         }
 495:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         break;
 496:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     case CY_SAR_RETURN_STATUS:
 497:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     default:
 498:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         break;
 1246              		.loc 2 498 0
 1247 0046 10E0     		b	.L80
 1248              	.L79:
 492:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             wdt--;
 1249              		.loc 2 492 0
 1250 0048 7A68     		ldr	r2, [r7, #4]
 1251 004a 8423     		movs	r3, #132
 1252 004c 9B00     		lsls	r3, r3, #2
 1253 004e D358     		ldr	r3, [r2, r3]
 1254 0050 0122     		movs	r2, #1
 1255 0052 1340     		ands	r3, r2
 1256 0054 3B61     		str	r3, [r7, #16]
 493:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         }
 1257              		.loc 2 493 0
 1258 0056 FB68     		ldr	r3, [r7, #12]
 1259 0058 013B     		subs	r3, r3, #1
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 68


 1260 005a FB60     		str	r3, [r7, #12]
 1261              	.L77:
 490:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         {
 1262              		.loc 2 490 0
 1263 005c 3B69     		ldr	r3, [r7, #16]
 1264 005e 002B     		cmp	r3, #0
 1265 0060 02D1     		bne	.L85
 490:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         {
 1266              		.loc 2 490 0 is_stmt 0 discriminator 1
 1267 0062 FB68     		ldr	r3, [r7, #12]
 1268 0064 002B     		cmp	r3, #0
 1269 0066 EFD1     		bne	.L79
 1270              	.L85:
 495:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     case CY_SAR_RETURN_STATUS:
 1271              		.loc 2 495 0 is_stmt 1
 1272 0068 C046     		nop
 1273              	.L80:
 499:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
 500:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 501:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     /* Clear the EOS bit */
 502:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     if (SAR_INTR_EOS_INTR_Msk == endOfConversion)
 1274              		.loc 2 502 0
 1275 006a 3B69     		ldr	r3, [r7, #16]
 1276 006c 012B     		cmp	r3, #1
 1277 006e 0BD1     		bne	.L81
 503:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     {
 504:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         result = CY_SAR_SUCCESS;
 1278              		.loc 2 504 0
 1279 0070 0023     		movs	r3, #0
 1280 0072 7B61     		str	r3, [r7, #20]
 505:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_INTR(base) = SAR_INTR_EOS_INTR_Msk;
 1281              		.loc 2 505 0
 1282 0074 7A68     		ldr	r2, [r7, #4]
 1283 0076 8423     		movs	r3, #132
 1284 0078 9B00     		lsls	r3, r3, #2
 1285 007a 0121     		movs	r1, #1
 1286 007c D150     		str	r1, [r2, r3]
 506:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         /* Do a dummy read after write for buffered write */
 507:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         (void) SAR_INTR(base);
 1287              		.loc 2 507 0
 1288 007e 7A68     		ldr	r2, [r7, #4]
 1289 0080 8423     		movs	r3, #132
 1290 0082 9B00     		lsls	r3, r3, #2
 1291 0084 D358     		ldr	r3, [r2, r3]
 1292 0086 07E0     		b	.L82
 1293              	.L81:
 508:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
 509:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     else if (0uL == wdt)
 1294              		.loc 2 509 0
 1295 0088 FB68     		ldr	r3, [r7, #12]
 1296 008a 002B     		cmp	r3, #0
 1297 008c 02D1     		bne	.L83
 510:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     {
 511:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         result = CY_SAR_TIMEOUT;
 1298              		.loc 2 511 0
 1299 008e 074B     		ldr	r3, .L86+8
 1300 0090 7B61     		str	r3, [r7, #20]
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 69


 1301 0092 01E0     		b	.L82
 1302              	.L83:
 512:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
 513:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     else
 514:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     {
 515:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         result = CY_SAR_CONVERSION_NOT_COMPLETE;
 1303              		.loc 2 515 0
 1304 0094 064B     		ldr	r3, .L86+12
 1305 0096 7B61     		str	r3, [r7, #20]
 1306              	.L82:
 516:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
 517:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 518:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     return result;
 1307              		.loc 2 518 0
 1308 0098 7B69     		ldr	r3, [r7, #20]
 519:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** }
 1309              		.loc 2 519 0
 1310 009a 1800     		movs	r0, r3
 1311 009c BD46     		mov	sp, r7
 1312 009e 06B0     		add	sp, sp, #24
 1313              		@ sp needed
 1314 00a0 80BD     		pop	{r7, pc}
 1315              	.L87:
 1316 00a2 C046     		.align	2
 1317              	.L86:
 1318 00a4 00000000 		.word	.LC0
 1319 00a8 55555501 		.word	22369621
 1320 00ac 02000600 		.word	393218
 1321 00b0 03000600 		.word	393219
 1322              		.cfi_endproc
 1323              	.LFE113:
 1324              		.size	Cy_SAR_IsEndConversion, .-Cy_SAR_IsEndConversion
 1325              		.section	.text.Cy_SAR_IsChannelSigned,"ax",%progbits
 1326              		.align	2
 1327              		.global	Cy_SAR_IsChannelSigned
 1328              		.code	16
 1329              		.thumb_func
 1330              		.type	Cy_SAR_IsChannelSigned, %function
 1331              	Cy_SAR_IsChannelSigned:
 1332              	.LFB114:
 520:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 521:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 522:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** /*******************************************************************************
 523:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Function Name: Cy_SAR_IsChannelSigned
 524:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** ****************************************************************************//**
 525:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 526:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Return true if channel result is configured for signed format, else false.
 527:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * The formats for single-ended and differential channels are independent.
 528:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * This function will first check whether the channel is single-ended or differential.
 529:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 530:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param base
 531:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Pointer to structure describing registers
 532:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 533:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param chan
 534:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * The channel to check, between 0 and \ref CY_SAR_MAX_NUM_CHANNELS - 1
 535:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 536:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \return
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 70


 537:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * If channel number is invalid, false is returned
 538:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 539:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \funcusage
 540:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 541:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_IS_CHANNEL_SIGNED
 542:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 543:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *******************************************************************************/
 544:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** bool Cy_SAR_IsChannelSigned(const SAR_Type *base, uint32_t chan)
 545:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** {
 1333              		.loc 2 545 0
 1334              		.cfi_startproc
 1335              		@ args = 0, pretend = 0, frame = 16
 1336              		@ frame_needed = 1, uses_anonymous_args = 0
 1337 0000 80B5     		push	{r7, lr}
 1338              		.cfi_def_cfa_offset 8
 1339              		.cfi_offset 7, -8
 1340              		.cfi_offset 14, -4
 1341 0002 84B0     		sub	sp, sp, #16
 1342              		.cfi_def_cfa_offset 24
 1343 0004 00AF     		add	r7, sp, #0
 1344              		.cfi_def_cfa_register 7
 1345 0006 7860     		str	r0, [r7, #4]
 1346 0008 3960     		str	r1, [r7]
 546:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     CY_ASSERT_L2(CY_SAR_CHANNUM(chan));
 1347              		.loc 2 546 0
 1348 000a 3B68     		ldr	r3, [r7]
 1349 000c 0F2B     		cmp	r3, #15
 1350 000e 05D9     		bls	.L89
 1351              		.loc 2 546 0 is_stmt 0 discriminator 1
 1352 0010 174A     		ldr	r2, .L94
 1353 0012 184B     		ldr	r3, .L94+4
 1354 0014 1100     		movs	r1, r2
 1355 0016 1800     		movs	r0, r3
 1356 0018 FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 1357              	.L89:
 547:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 548:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     bool isSigned = false;
 1358              		.loc 2 548 0 is_stmt 1
 1359 001c 0F23     		movs	r3, #15
 1360 001e FB18     		adds	r3, r7, r3
 1361 0020 0022     		movs	r2, #0
 1362 0022 1A70     		strb	r2, [r3]
 549:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 550:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     if (chan < CY_SAR_MAX_NUM_CHANNELS)
 1363              		.loc 2 550 0
 1364 0024 3B68     		ldr	r3, [r7]
 1365 0026 0F2B     		cmp	r3, #15
 1366 0028 1AD8     		bhi	.L90
 551:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     {
 552:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 553:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         /* Sign bits are stored separately for differential and single ended channels. */
 554:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         if (true == Cy_SAR_IsChannelDifferential(base, chan))
 1367              		.loc 2 554 0
 1368 002a 3A68     		ldr	r2, [r7]
 1369 002c 7B68     		ldr	r3, [r7, #4]
 1370 002e 1100     		movs	r1, r2
 1371 0030 1800     		movs	r0, r3
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 71


 1372 0032 FFF7FEFF 		bl	Cy_SAR_IsChannelDifferential
 1373 0036 031E     		subs	r3, r0, #0
 1374 0038 09D0     		beq	.L91
 555:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         { /* Differential channel */
 556:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             if (SAR_SAMPLE_CTRL_DIFFERENTIAL_SIGNED_Msk == (SAR_SAMPLE_CTRL(base) & SAR_SAMPLE_CTRL
 1375              		.loc 2 556 0
 1376 003a 7B68     		ldr	r3, [r7, #4]
 1377 003c 5B68     		ldr	r3, [r3, #4]
 1378 003e 0822     		movs	r2, #8
 1379 0040 1340     		ands	r3, r2
 1380 0042 0DD0     		beq	.L90
 557:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             {
 558:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****                 isSigned = true;
 1381              		.loc 2 558 0
 1382 0044 0F23     		movs	r3, #15
 1383 0046 FB18     		adds	r3, r7, r3
 1384 0048 0122     		movs	r2, #1
 1385 004a 1A70     		strb	r2, [r3]
 1386 004c 08E0     		b	.L90
 1387              	.L91:
 559:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             }
 560:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         }
 561:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         else
 562:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         { /* Single ended channel */
 563:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             if (SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_Msk == (SAR_SAMPLE_CTRL(base) & SAR_SAMPLE_CTRL
 1388              		.loc 2 563 0
 1389 004e 7B68     		ldr	r3, [r7, #4]
 1390 0050 5B68     		ldr	r3, [r3, #4]
 1391 0052 0422     		movs	r2, #4
 1392 0054 1340     		ands	r3, r2
 1393 0056 03D0     		beq	.L90
 564:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             {
 565:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****                 isSigned = true;
 1394              		.loc 2 565 0
 1395 0058 0F23     		movs	r3, #15
 1396 005a FB18     		adds	r3, r7, r3
 1397 005c 0122     		movs	r2, #1
 1398 005e 1A70     		strb	r2, [r3]
 1399              	.L90:
 566:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             }
 567:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         }
 568:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
 569:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 570:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     return isSigned;
 1400              		.loc 2 570 0
 1401 0060 0F23     		movs	r3, #15
 1402 0062 FB18     		adds	r3, r7, r3
 1403 0064 1B78     		ldrb	r3, [r3]
 571:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** }
 1404              		.loc 2 571 0
 1405 0066 1800     		movs	r0, r3
 1406 0068 BD46     		mov	sp, r7
 1407 006a 04B0     		add	sp, sp, #16
 1408              		@ sp needed
 1409 006c 80BD     		pop	{r7, pc}
 1410              	.L95:
 1411 006e C046     		.align	2
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 72


 1412              	.L94:
 1413 0070 22020000 		.word	546
 1414 0074 00000000 		.word	.LC0
 1415              		.cfi_endproc
 1416              	.LFE114:
 1417              		.size	Cy_SAR_IsChannelSigned, .-Cy_SAR_IsChannelSigned
 1418              		.section	.text.Cy_SAR_IsChannelSingleEnded,"ax",%progbits
 1419              		.align	2
 1420              		.global	Cy_SAR_IsChannelSingleEnded
 1421              		.code	16
 1422              		.thumb_func
 1423              		.type	Cy_SAR_IsChannelSingleEnded, %function
 1424              	Cy_SAR_IsChannelSingleEnded:
 1425              	.LFB115:
 572:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 573:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 574:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** /*******************************************************************************
 575:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Function Name: Cy_SAR_IsChannelSingleEnded
 576:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** ****************************************************************************//**
 577:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 578:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Return true if channel is single ended, else false
 579:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 580:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param base
 581:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Pointer to structure describing registers
 582:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 583:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param chan
 584:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * The channel to check, between 0 and \ref CY_SAR_MAX_NUM_CHANNELS - 1
 585:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 586:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \return
 587:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * If channel number is invalid, false is returned
 588:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 589:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \funcusage
 590:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 591:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_IS_CHANNEL_SE
 592:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 593:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *******************************************************************************/
 594:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** bool Cy_SAR_IsChannelSingleEnded(const SAR_Type *base, uint32_t chan)
 595:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** {
 1426              		.loc 2 595 0
 1427              		.cfi_startproc
 1428              		@ args = 0, pretend = 0, frame = 16
 1429              		@ frame_needed = 1, uses_anonymous_args = 0
 1430 0000 80B5     		push	{r7, lr}
 1431              		.cfi_def_cfa_offset 8
 1432              		.cfi_offset 7, -8
 1433              		.cfi_offset 14, -4
 1434 0002 84B0     		sub	sp, sp, #16
 1435              		.cfi_def_cfa_offset 24
 1436 0004 00AF     		add	r7, sp, #0
 1437              		.cfi_def_cfa_register 7
 1438 0006 7860     		str	r0, [r7, #4]
 1439 0008 3960     		str	r1, [r7]
 596:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     CY_ASSERT_L2(CY_SAR_CHANNUM(chan));
 1440              		.loc 2 596 0
 1441 000a 3B68     		ldr	r3, [r7]
 1442 000c 0F2B     		cmp	r3, #15
 1443 000e 06D9     		bls	.L97
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 73


 1444              		.loc 2 596 0 is_stmt 0 discriminator 1
 1445 0010 9523     		movs	r3, #149
 1446 0012 9A00     		lsls	r2, r3, #2
 1447 0014 0F4B     		ldr	r3, .L100
 1448 0016 1100     		movs	r1, r2
 1449 0018 1800     		movs	r0, r3
 1450 001a FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 1451              	.L97:
 597:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 598:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     bool isSingleEnded = false;
 1452              		.loc 2 598 0 is_stmt 1
 1453 001e 0F23     		movs	r3, #15
 1454 0020 FB18     		adds	r3, r7, r3
 1455 0022 0022     		movs	r2, #0
 1456 0024 1A70     		strb	r2, [r3]
 599:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 600:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     if (chan < CY_SAR_MAX_NUM_CHANNELS)
 1457              		.loc 2 600 0
 1458 0026 3B68     		ldr	r3, [r7]
 1459 0028 0F2B     		cmp	r3, #15
 1460 002a 0BD8     		bhi	.L98
 601:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     {
 602:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         if (0uL == (SAR_CHAN_CONFIG(base, chan) & (SAR_CHAN_CONFIG_DIFFERENTIAL_EN_Msk | SAR_CHAN_C
 1461              		.loc 2 602 0
 1462 002c 7B68     		ldr	r3, [r7, #4]
 1463 002e 3A68     		ldr	r2, [r7]
 1464 0030 2032     		adds	r2, r2, #32
 1465 0032 9200     		lsls	r2, r2, #2
 1466 0034 D358     		ldr	r3, [r2, r3]
 1467 0036 084A     		ldr	r2, .L100+4
 1468 0038 1340     		ands	r3, r2
 1469 003a 03D1     		bne	.L98
 603:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             isSingleEnded = true;
 1470              		.loc 2 603 0
 1471 003c 0F23     		movs	r3, #15
 1472 003e FB18     		adds	r3, r7, r3
 1473 0040 0122     		movs	r2, #1
 1474 0042 1A70     		strb	r2, [r3]
 1475              	.L98:
 604:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         }
 605:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
 606:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 607:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     return isSingleEnded;
 1476              		.loc 2 607 0
 1477 0044 0F23     		movs	r3, #15
 1478 0046 FB18     		adds	r3, r7, r3
 1479 0048 1B78     		ldrb	r3, [r3]
 608:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** }
 1480              		.loc 2 608 0
 1481 004a 1800     		movs	r0, r3
 1482 004c BD46     		mov	sp, r7
 1483 004e 04B0     		add	sp, sp, #16
 1484              		@ sp needed
 1485 0050 80BD     		pop	{r7, pc}
 1486              	.L101:
 1487 0052 C046     		.align	2
 1488              	.L100:
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 74


 1489 0054 00000000 		.word	.LC0
 1490 0058 00010001 		.word	16777472
 1491              		.cfi_endproc
 1492              	.LFE115:
 1493              		.size	Cy_SAR_IsChannelSingleEnded, .-Cy_SAR_IsChannelSingleEnded
 1494              		.section	.text.Cy_SAR_GetResult16,"ax",%progbits
 1495              		.align	2
 1496              		.global	Cy_SAR_GetResult16
 1497              		.code	16
 1498              		.thumb_func
 1499              		.type	Cy_SAR_GetResult16, %function
 1500              	Cy_SAR_GetResult16:
 1501              	.LFB116:
 609:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 610:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 611:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** /*******************************************************************************
 612:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Function Name: Cy_SAR_GetResult16
 613:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** ****************************************************************************//**
 614:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 615:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Return the data available in the channel result data register as a signed
 616:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * 16-bit integer.
 617:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 618:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param base
 619:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Pointer to structure describing registers
 620:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 621:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param chan
 622:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * The channel to read the result from, between 0 and \ref CY_SAR_MAX_NUM_CHANNELS - 1
 623:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 624:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \return
 625:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Data is returned as a signed 16-bit integer.
 626:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * If channel number is invalid, 0 is returned.
 627:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 628:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \funcusage
 629:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 630:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_GET_RESULT16
 631:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 632:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *******************************************************************************/
 633:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** int16_t Cy_SAR_GetResult16(const SAR_Type *base, uint32_t chan)
 634:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** {
 1502              		.loc 2 634 0
 1503              		.cfi_startproc
 1504              		@ args = 0, pretend = 0, frame = 16
 1505              		@ frame_needed = 1, uses_anonymous_args = 0
 1506 0000 80B5     		push	{r7, lr}
 1507              		.cfi_def_cfa_offset 8
 1508              		.cfi_offset 7, -8
 1509              		.cfi_offset 14, -4
 1510 0002 84B0     		sub	sp, sp, #16
 1511              		.cfi_def_cfa_offset 24
 1512 0004 00AF     		add	r7, sp, #0
 1513              		.cfi_def_cfa_register 7
 1514 0006 7860     		str	r0, [r7, #4]
 1515 0008 3960     		str	r1, [r7]
 635:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     CY_ASSERT_L2(CY_SAR_CHANNUM(chan));
 1516              		.loc 2 635 0
 1517 000a 3B68     		ldr	r3, [r7]
 1518 000c 0F2B     		cmp	r3, #15
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 75


 1519 000e 05D9     		bls	.L103
 1520              		.loc 2 635 0 is_stmt 0 discriminator 1
 1521 0010 0C4A     		ldr	r2, .L106
 1522 0012 0D4B     		ldr	r3, .L106+4
 1523 0014 1100     		movs	r1, r2
 1524 0016 1800     		movs	r0, r3
 1525 0018 FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 1526              	.L103:
 636:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 637:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     uint32_t adcResult = 0uL;
 1527              		.loc 2 637 0 is_stmt 1
 1528 001c 0023     		movs	r3, #0
 1529 001e FB60     		str	r3, [r7, #12]
 638:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 639:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     if (chan < CY_SAR_MAX_NUM_CHANNELS)
 1530              		.loc 2 639 0
 1531 0020 3B68     		ldr	r3, [r7]
 1532 0022 0F2B     		cmp	r3, #15
 1533 0024 07D8     		bhi	.L104
 640:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     {
 641:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         adcResult = SAR_CHAN_RESULT(base, chan) & SAR_CHAN_RESULT_RESULT_Msk;
 1534              		.loc 2 641 0
 1535 0026 7B68     		ldr	r3, [r7, #4]
 1536 0028 3A68     		ldr	r2, [r7]
 1537 002a 6032     		adds	r2, r2, #96
 1538 002c 9200     		lsls	r2, r2, #2
 1539 002e D358     		ldr	r3, [r2, r3]
 1540 0030 1B04     		lsls	r3, r3, #16
 1541 0032 1B0C     		lsrs	r3, r3, #16
 1542 0034 FB60     		str	r3, [r7, #12]
 1543              	.L104:
 642:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
 643:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 644:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     return (int16_t) adcResult;
 1544              		.loc 2 644 0
 1545 0036 FB68     		ldr	r3, [r7, #12]
 1546 0038 1BB2     		sxth	r3, r3
 645:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** }
 1547              		.loc 2 645 0
 1548 003a 1800     		movs	r0, r3
 1549 003c BD46     		mov	sp, r7
 1550 003e 04B0     		add	sp, sp, #16
 1551              		@ sp needed
 1552 0040 80BD     		pop	{r7, pc}
 1553              	.L107:
 1554 0042 C046     		.align	2
 1555              	.L106:
 1556 0044 7B020000 		.word	635
 1557 0048 00000000 		.word	.LC0
 1558              		.cfi_endproc
 1559              	.LFE116:
 1560              		.size	Cy_SAR_GetResult16, .-Cy_SAR_GetResult16
 1561              		.section	.text.Cy_SAR_GetResult32,"ax",%progbits
 1562              		.align	2
 1563              		.global	Cy_SAR_GetResult32
 1564              		.code	16
 1565              		.thumb_func
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 76


 1566              		.type	Cy_SAR_GetResult32, %function
 1567              	Cy_SAR_GetResult32:
 1568              	.LFB117:
 646:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 647:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 648:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** /*******************************************************************************
 649:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Function Name: Cy_SAR_GetResult32
 650:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** ****************************************************************************//**
 651:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 652:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Return the data available in the channel result data register as a signed
 653:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * 32-bit integer.
 654:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 655:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param base
 656:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Pointer to structure describing registers
 657:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 658:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param chan
 659:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * The channel to read the result from, between 0 and \ref CY_SAR_MAX_NUM_CHANNELS - 1
 660:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 661:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \return
 662:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Data is returned as a signed 32-bit integer.
 663:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * If channel number is invalid, 0 is returned.
 664:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 665:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \funcusage
 666:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 667:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_GET_RESULT32
 668:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 669:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *******************************************************************************/
 670:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** int32_t Cy_SAR_GetResult32(const SAR_Type *base, uint32_t chan)
 671:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** {
 1569              		.loc 2 671 0
 1570              		.cfi_startproc
 1571              		@ args = 0, pretend = 0, frame = 24
 1572              		@ frame_needed = 1, uses_anonymous_args = 0
 1573 0000 80B5     		push	{r7, lr}
 1574              		.cfi_def_cfa_offset 8
 1575              		.cfi_offset 7, -8
 1576              		.cfi_offset 14, -4
 1577 0002 86B0     		sub	sp, sp, #24
 1578              		.cfi_def_cfa_offset 32
 1579 0004 00AF     		add	r7, sp, #0
 1580              		.cfi_def_cfa_register 7
 1581 0006 7860     		str	r0, [r7, #4]
 1582 0008 3960     		str	r1, [r7]
 672:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     CY_ASSERT_L2(CY_SAR_CHANNUM(chan));
 1583              		.loc 2 672 0
 1584 000a 3B68     		ldr	r3, [r7]
 1585 000c 0F2B     		cmp	r3, #15
 1586 000e 06D9     		bls	.L109
 1587              		.loc 2 672 0 is_stmt 0 discriminator 1
 1588 0010 A823     		movs	r3, #168
 1589 0012 9A00     		lsls	r2, r3, #2
 1590 0014 154B     		ldr	r3, .L114
 1591 0016 1100     		movs	r1, r2
 1592 0018 1800     		movs	r0, r3
 1593 001a FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 1594              	.L109:
 673:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 77


 674:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     uint32_t adcResult = 0uL;
 1595              		.loc 2 674 0 is_stmt 1
 1596 001e 0023     		movs	r3, #0
 1597 0020 7B61     		str	r3, [r7, #20]
 675:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     int16_t adcResult16;
 676:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     int32_t finalResult;
 677:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 678:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     if (chan < CY_SAR_MAX_NUM_CHANNELS)
 1598              		.loc 2 678 0
 1599 0022 3B68     		ldr	r3, [r7]
 1600 0024 0F2B     		cmp	r3, #15
 1601 0026 07D8     		bhi	.L110
 679:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     {
 680:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         adcResult = SAR_CHAN_RESULT(base, chan) & SAR_CHAN_RESULT_RESULT_Msk;
 1602              		.loc 2 680 0
 1603 0028 7B68     		ldr	r3, [r7, #4]
 1604 002a 3A68     		ldr	r2, [r7]
 1605 002c 6032     		adds	r2, r2, #96
 1606 002e 9200     		lsls	r2, r2, #2
 1607 0030 D358     		ldr	r3, [r2, r3]
 1608 0032 1B04     		lsls	r3, r3, #16
 1609 0034 1B0C     		lsrs	r3, r3, #16
 1610 0036 7B61     		str	r3, [r7, #20]
 1611              	.L110:
 681:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
 682:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 683:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     if (true == Cy_SAR_IsChannelSigned(base, chan))
 1612              		.loc 2 683 0
 1613 0038 3A68     		ldr	r2, [r7]
 1614 003a 7B68     		ldr	r3, [r7, #4]
 1615 003c 1100     		movs	r1, r2
 1616 003e 1800     		movs	r0, r3
 1617 0040 FFF7FEFF 		bl	Cy_SAR_IsChannelSigned
 1618 0044 031E     		subs	r3, r0, #0
 1619 0046 09D0     		beq	.L111
 684:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     {
 685:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         adcResult16 = (int16_t) adcResult;
 1620              		.loc 2 685 0
 1621 0048 0E23     		movs	r3, #14
 1622 004a FB18     		adds	r3, r7, r3
 1623 004c 7A69     		ldr	r2, [r7, #20]
 1624 004e 1A80     		strh	r2, [r3]
 686:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         finalResult = (int32_t) adcResult16;
 1625              		.loc 2 686 0
 1626 0050 0E23     		movs	r3, #14
 1627 0052 FB18     		adds	r3, r7, r3
 1628 0054 0022     		movs	r2, #0
 1629 0056 9B5E     		ldrsh	r3, [r3, r2]
 1630 0058 3B61     		str	r3, [r7, #16]
 1631 005a 01E0     		b	.L112
 1632              	.L111:
 687:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
 688:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     else
 689:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     {
 690:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         finalResult = (int32_t) adcResult;
 1633              		.loc 2 690 0
 1634 005c 7B69     		ldr	r3, [r7, #20]
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 78


 1635 005e 3B61     		str	r3, [r7, #16]
 1636              	.L112:
 691:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
 692:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 693:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     return finalResult;
 1637              		.loc 2 693 0
 1638 0060 3B69     		ldr	r3, [r7, #16]
 694:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** }
 1639              		.loc 2 694 0
 1640 0062 1800     		movs	r0, r3
 1641 0064 BD46     		mov	sp, r7
 1642 0066 06B0     		add	sp, sp, #24
 1643              		@ sp needed
 1644 0068 80BD     		pop	{r7, pc}
 1645              	.L115:
 1646 006a C046     		.align	2
 1647              	.L114:
 1648 006c 00000000 		.word	.LC0
 1649              		.cfi_endproc
 1650              	.LFE117:
 1651              		.size	Cy_SAR_GetResult32, .-Cy_SAR_GetResult32
 1652              		.section	.text.Cy_SAR_SetLowLimit,"ax",%progbits
 1653              		.align	2
 1654              		.global	Cy_SAR_SetLowLimit
 1655              		.code	16
 1656              		.thumb_func
 1657              		.type	Cy_SAR_SetLowLimit, %function
 1658              	Cy_SAR_SetLowLimit:
 1659              	.LFB118:
 695:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 696:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 697:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** /*******************************************************************************
 698:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Function Name: Cy_SAR_SetLowLimit
 699:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** ****************************************************************************//**
 700:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 701:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Set the low threshold for range detection. The values are interpreted
 702:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * as signed or unsigned according to the channel configuration. Range
 703:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * detection is done on the value stored in the result register. That is, after
 704:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * averaging, shifting sign extension, and left/right alignment.
 705:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 706:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param base
 707:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Pointer to structure describing registers
 708:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 709:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param lowLimit
 710:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * The low threshold for range detection
 711:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 712:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \return None
 713:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 714:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \funcusage
 715:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 716:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SET_LOWHIGH_LIMIT
 717:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 718:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *******************************************************************************/
 719:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** void Cy_SAR_SetLowLimit(SAR_Type *base, uint32_t lowLimit)
 720:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** {
 1660              		.loc 2 720 0
 1661              		.cfi_startproc
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 79


 1662              		@ args = 0, pretend = 0, frame = 16
 1663              		@ frame_needed = 1, uses_anonymous_args = 0
 1664 0000 80B5     		push	{r7, lr}
 1665              		.cfi_def_cfa_offset 8
 1666              		.cfi_offset 7, -8
 1667              		.cfi_offset 14, -4
 1668 0002 84B0     		sub	sp, sp, #16
 1669              		.cfi_def_cfa_offset 24
 1670 0004 00AF     		add	r7, sp, #0
 1671              		.cfi_def_cfa_register 7
 1672 0006 7860     		str	r0, [r7, #4]
 1673 0008 3960     		str	r1, [r7]
 721:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     CY_ASSERT_L2(CY_SAR_RANGE_LIMIT(lowLimit));
 1674              		.loc 2 721 0
 1675 000a 3B68     		ldr	r3, [r7]
 1676 000c 0D4A     		ldr	r2, .L118
 1677 000e 9342     		cmp	r3, r2
 1678 0010 05D9     		bls	.L117
 1679              		.loc 2 721 0 is_stmt 0 discriminator 1
 1680 0012 0D4A     		ldr	r2, .L118+4
 1681 0014 0D4B     		ldr	r3, .L118+8
 1682 0016 1100     		movs	r1, r2
 1683 0018 1800     		movs	r0, r3
 1684 001a FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 1685              	.L117:
 722:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 723:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     uint32_t rangeThresReg;
 724:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 725:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     /* Preserve the RANGE_HIGH field value when changing the RANGE_LOW field value */
 726:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     rangeThresReg = SAR_RANGE_THRES(base) & ~SAR_RANGE_THRES_RANGE_LOW_Msk;
 1686              		.loc 2 726 0 is_stmt 1
 1687 001e 7B68     		ldr	r3, [r7, #4]
 1688 0020 9B69     		ldr	r3, [r3, #24]
 1689 0022 1B0C     		lsrs	r3, r3, #16
 1690 0024 1B04     		lsls	r3, r3, #16
 1691 0026 FB60     		str	r3, [r7, #12]
 727:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     rangeThresReg |= lowLimit  & SAR_RANGE_THRES_RANGE_LOW_Msk;
 1692              		.loc 2 727 0
 1693 0028 3B68     		ldr	r3, [r7]
 1694 002a 1B04     		lsls	r3, r3, #16
 1695 002c 1B0C     		lsrs	r3, r3, #16
 1696 002e FA68     		ldr	r2, [r7, #12]
 1697 0030 1343     		orrs	r3, r2
 1698 0032 FB60     		str	r3, [r7, #12]
 728:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     SAR_RANGE_THRES(base) = rangeThresReg;
 1699              		.loc 2 728 0
 1700 0034 7B68     		ldr	r3, [r7, #4]
 1701 0036 FA68     		ldr	r2, [r7, #12]
 1702 0038 9A61     		str	r2, [r3, #24]
 729:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** }
 1703              		.loc 2 729 0
 1704 003a C046     		nop
 1705 003c BD46     		mov	sp, r7
 1706 003e 04B0     		add	sp, sp, #16
 1707              		@ sp needed
 1708 0040 80BD     		pop	{r7, pc}
 1709              	.L119:
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 80


 1710 0042 C046     		.align	2
 1711              	.L118:
 1712 0044 FFFF0000 		.word	65535
 1713 0048 D1020000 		.word	721
 1714 004c 00000000 		.word	.LC0
 1715              		.cfi_endproc
 1716              	.LFE118:
 1717              		.size	Cy_SAR_SetLowLimit, .-Cy_SAR_SetLowLimit
 1718              		.section	.text.Cy_SAR_SetHighLimit,"ax",%progbits
 1719              		.align	2
 1720              		.global	Cy_SAR_SetHighLimit
 1721              		.code	16
 1722              		.thumb_func
 1723              		.type	Cy_SAR_SetHighLimit, %function
 1724              	Cy_SAR_SetHighLimit:
 1725              	.LFB119:
 730:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 731:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 732:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** /*******************************************************************************
 733:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Function Name: Cy_SAR_SetHighLimit
 734:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** ****************************************************************************//**
 735:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 736:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Set the high threshold for range detection. The values are interpreted
 737:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * as signed or unsigned according to the channel configuration. Range
 738:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * detection is done on the value stored in the result register. That is, after
 739:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * averaging, shifting sign extension, and left/right alignment.
 740:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 741:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param base
 742:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Pointer to structure describing registers
 743:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 744:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param highLimit
 745:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * The high threshold for range detection
 746:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 747:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \return None
 748:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 749:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \funcusage
 750:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 751:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SET_LOWHIGH_LIMIT
 752:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 753:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *******************************************************************************/
 754:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** void Cy_SAR_SetHighLimit(SAR_Type *base, uint32_t highLimit)
 755:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** {
 1726              		.loc 2 755 0
 1727              		.cfi_startproc
 1728              		@ args = 0, pretend = 0, frame = 16
 1729              		@ frame_needed = 1, uses_anonymous_args = 0
 1730 0000 80B5     		push	{r7, lr}
 1731              		.cfi_def_cfa_offset 8
 1732              		.cfi_offset 7, -8
 1733              		.cfi_offset 14, -4
 1734 0002 84B0     		sub	sp, sp, #16
 1735              		.cfi_def_cfa_offset 24
 1736 0004 00AF     		add	r7, sp, #0
 1737              		.cfi_def_cfa_register 7
 1738 0006 7860     		str	r0, [r7, #4]
 1739 0008 3960     		str	r1, [r7]
 756:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     CY_ASSERT_L2(CY_SAR_RANGE_LIMIT(highLimit));
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 81


 1740              		.loc 2 756 0
 1741 000a 3B68     		ldr	r3, [r7]
 1742 000c 0D4A     		ldr	r2, .L122
 1743 000e 9342     		cmp	r3, r2
 1744 0010 06D9     		bls	.L121
 1745              		.loc 2 756 0 is_stmt 0 discriminator 1
 1746 0012 BD23     		movs	r3, #189
 1747 0014 9A00     		lsls	r2, r3, #2
 1748 0016 0C4B     		ldr	r3, .L122+4
 1749 0018 1100     		movs	r1, r2
 1750 001a 1800     		movs	r0, r3
 1751 001c FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 1752              	.L121:
 757:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 758:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     uint32_t rangeThresReg;
 759:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 760:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     rangeThresReg = SAR_RANGE_THRES(base) & ~SAR_RANGE_THRES_RANGE_HIGH_Msk;
 1753              		.loc 2 760 0 is_stmt 1
 1754 0020 7B68     		ldr	r3, [r7, #4]
 1755 0022 9B69     		ldr	r3, [r3, #24]
 1756 0024 1B04     		lsls	r3, r3, #16
 1757 0026 1B0C     		lsrs	r3, r3, #16
 1758 0028 FB60     		str	r3, [r7, #12]
 761:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     rangeThresReg |= (highLimit << SAR_RANGE_THRES_RANGE_HIGH_Pos) & SAR_RANGE_THRES_RANGE_HIGH_Msk
 1759              		.loc 2 761 0
 1760 002a 3B68     		ldr	r3, [r7]
 1761 002c 1B04     		lsls	r3, r3, #16
 1762 002e FA68     		ldr	r2, [r7, #12]
 1763 0030 1343     		orrs	r3, r2
 1764 0032 FB60     		str	r3, [r7, #12]
 762:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     SAR_RANGE_THRES(base) = rangeThresReg;
 1765              		.loc 2 762 0
 1766 0034 7B68     		ldr	r3, [r7, #4]
 1767 0036 FA68     		ldr	r2, [r7, #12]
 1768 0038 9A61     		str	r2, [r3, #24]
 763:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** }
 1769              		.loc 2 763 0
 1770 003a C046     		nop
 1771 003c BD46     		mov	sp, r7
 1772 003e 04B0     		add	sp, sp, #16
 1773              		@ sp needed
 1774 0040 80BD     		pop	{r7, pc}
 1775              	.L123:
 1776 0042 C046     		.align	2
 1777              	.L122:
 1778 0044 FFFF0000 		.word	65535
 1779 0048 00000000 		.word	.LC0
 1780              		.cfi_endproc
 1781              	.LFE119:
 1782              		.size	Cy_SAR_SetHighLimit, .-Cy_SAR_SetHighLimit
 1783              		.section	.text.Cy_SAR_SetOffset,"ax",%progbits
 1784              		.align	2
 1785              		.global	Cy_SAR_SetOffset
 1786              		.code	16
 1787              		.thumb_func
 1788              		.type	Cy_SAR_SetOffset, %function
 1789              	Cy_SAR_SetOffset:
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 82


 1790              	.LFB120:
 764:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 765:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 766:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** /*******************************************************************************
 767:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Function Name: Cy_SAR_SetOffset
 768:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** ****************************************************************************//**
 769:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 770:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Override the channel offset stored in the \ref Cy_SAR_offset array
 771:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * for the voltage conversion functions.
 772:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 773:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Offset is applied to counts before unit scaling and gain.
 774:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * See \ref Cy_SAR_CountsTo_Volts for more about this formula.
 775:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 776:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * To change channel 0's offset based on a known V_offset_mV, use:
 777:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 778:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *     Cy_SAR_SetOffset(0uL, -1 * V_offset_mV * (1uL << Resolution) / (2 * V_ref_mV));
 779:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 780:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param chan
 781:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * The channel number, between 0 and \ref CY_SAR_MAX_NUM_CHANNELS - 1.
 782:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 783:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param offset
 784:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * The count value measured when the inputs are shorted or
 785:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * connected to the same input voltage.
 786:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 787:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \return
 788:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - \ref CY_SAR_SUCCESS : offset was set successfully
 789:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - \ref CY_SAR_BAD_PARAM : channel number is equal to or greater than \ref CY_SAR_MAX_NUM_CHANNELS
 790:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 791:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *******************************************************************************/
 792:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** cy_en_sar_status_t Cy_SAR_SetOffset(uint32_t chan, int16_t offset)
 793:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** {
 1791              		.loc 2 793 0
 1792              		.cfi_startproc
 1793              		@ args = 0, pretend = 0, frame = 16
 1794              		@ frame_needed = 1, uses_anonymous_args = 0
 1795 0000 80B5     		push	{r7, lr}
 1796              		.cfi_def_cfa_offset 8
 1797              		.cfi_offset 7, -8
 1798              		.cfi_offset 14, -4
 1799 0002 84B0     		sub	sp, sp, #16
 1800              		.cfi_def_cfa_offset 24
 1801 0004 00AF     		add	r7, sp, #0
 1802              		.cfi_def_cfa_register 7
 1803 0006 7860     		str	r0, [r7, #4]
 1804 0008 0A00     		movs	r2, r1
 1805 000a BB1C     		adds	r3, r7, #2
 1806 000c 1A80     		strh	r2, [r3]
 794:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     CY_ASSERT_L2(CY_SAR_CHANNUM(chan));
 1807              		.loc 2 794 0
 1808 000e 7B68     		ldr	r3, [r7, #4]
 1809 0010 0F2B     		cmp	r3, #15
 1810 0012 05D9     		bls	.L125
 1811              		.loc 2 794 0 is_stmt 0 discriminator 1
 1812 0014 0B4A     		ldr	r2, .L128
 1813 0016 0C4B     		ldr	r3, .L128+4
 1814 0018 1100     		movs	r1, r2
 1815 001a 1800     		movs	r0, r3
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 83


 1816 001c FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 1817              	.L125:
 795:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 796:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     cy_en_sar_status_t result = CY_SAR_BAD_PARAM;
 1818              		.loc 2 796 0 is_stmt 1
 1819 0020 0A4B     		ldr	r3, .L128+8
 1820 0022 FB60     		str	r3, [r7, #12]
 797:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 798:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     if (chan < CY_SAR_MAX_NUM_CHANNELS)
 1821              		.loc 2 798 0
 1822 0024 7B68     		ldr	r3, [r7, #4]
 1823 0026 0F2B     		cmp	r3, #15
 1824 0028 07D8     		bhi	.L126
 799:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     {
 800:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         Cy_SAR_offset[chan] = offset;
 1825              		.loc 2 800 0
 1826 002a 094B     		ldr	r3, .L128+12
 1827 002c 7A68     		ldr	r2, [r7, #4]
 1828 002e 5200     		lsls	r2, r2, #1
 1829 0030 B91C     		adds	r1, r7, #2
 1830 0032 0988     		ldrh	r1, [r1]
 1831 0034 D152     		strh	r1, [r2, r3]
 801:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         result = CY_SAR_SUCCESS;
 1832              		.loc 2 801 0
 1833 0036 0023     		movs	r3, #0
 1834 0038 FB60     		str	r3, [r7, #12]
 1835              	.L126:
 802:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
 803:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 804:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     return result;
 1836              		.loc 2 804 0
 1837 003a FB68     		ldr	r3, [r7, #12]
 805:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** }
 1838              		.loc 2 805 0
 1839 003c 1800     		movs	r0, r3
 1840 003e BD46     		mov	sp, r7
 1841 0040 04B0     		add	sp, sp, #16
 1842              		@ sp needed
 1843 0042 80BD     		pop	{r7, pc}
 1844              	.L129:
 1845              		.align	2
 1846              	.L128:
 1847 0044 1A030000 		.word	794
 1848 0048 00000000 		.word	.LC0
 1849 004c 01000600 		.word	393217
 1850 0050 00000000 		.word	Cy_SAR_offset
 1851              		.cfi_endproc
 1852              	.LFE120:
 1853              		.size	Cy_SAR_SetOffset, .-Cy_SAR_SetOffset
 1854              		.section	.text.Cy_SAR_SetGain,"ax",%progbits
 1855              		.align	2
 1856              		.global	Cy_SAR_SetGain
 1857              		.code	16
 1858              		.thumb_func
 1859              		.type	Cy_SAR_SetGain, %function
 1860              	Cy_SAR_SetGain:
 1861              	.LFB121:
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 84


 806:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 807:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 808:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** /*******************************************************************************
 809:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Function Name: Cy_SAR_SetGain
 810:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** ****************************************************************************//**
 811:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 812:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Override the gain stored in the \ref Cy_SAR_countsPer10Volt array for the voltage conversion func
 813:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * The gain is configured at initialization in \ref Cy_SAR_Init
 814:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * based on the SARADC resolution and voltage reference.
 815:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 816:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Gain is applied after offset and unit scaling.
 817:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * See \ref Cy_SAR_CountsTo_Volts for more about this formula.
 818:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 819:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * To change channel 0's gain based on a known V_ref_mV, use:
 820:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 821:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *     Cy_SAR_SetGain(0uL, 10000 * (1uL << Resolution) / (2 * V_ref_mV));
 822:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 823:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param chan
 824:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * The channel number, between 0 and \ref CY_SAR_MAX_NUM_CHANNELS - 1.
 825:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 826:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param adcGain
 827:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * The gain in counts per 10 volt.
 828:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 829:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \return
 830:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - \ref CY_SAR_SUCCESS : gain was set successfully
 831:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - \ref CY_SAR_BAD_PARAM : channel number is equal to or greater than \ref CY_SAR_MAX_NUM_CHANNELS
 832:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 833:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *******************************************************************************/
 834:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** cy_en_sar_status_t Cy_SAR_SetGain(uint32_t chan, int32_t adcGain)
 835:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** {
 1862              		.loc 2 835 0
 1863              		.cfi_startproc
 1864              		@ args = 0, pretend = 0, frame = 16
 1865              		@ frame_needed = 1, uses_anonymous_args = 0
 1866 0000 80B5     		push	{r7, lr}
 1867              		.cfi_def_cfa_offset 8
 1868              		.cfi_offset 7, -8
 1869              		.cfi_offset 14, -4
 1870 0002 84B0     		sub	sp, sp, #16
 1871              		.cfi_def_cfa_offset 24
 1872 0004 00AF     		add	r7, sp, #0
 1873              		.cfi_def_cfa_register 7
 1874 0006 7860     		str	r0, [r7, #4]
 1875 0008 3960     		str	r1, [r7]
 836:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     CY_ASSERT_L2(CY_SAR_CHANNUM(chan));
 1876              		.loc 2 836 0
 1877 000a 7B68     		ldr	r3, [r7, #4]
 1878 000c 0F2B     		cmp	r3, #15
 1879 000e 06D9     		bls	.L131
 1880              		.loc 2 836 0 is_stmt 0 discriminator 1
 1881 0010 D123     		movs	r3, #209
 1882 0012 9A00     		lsls	r2, r3, #2
 1883 0014 0A4B     		ldr	r3, .L134
 1884 0016 1100     		movs	r1, r2
 1885 0018 1800     		movs	r0, r3
 1886 001a FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 1887              	.L131:
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 85


 837:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 838:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     cy_en_sar_status_t result = CY_SAR_BAD_PARAM;
 1888              		.loc 2 838 0 is_stmt 1
 1889 001e 094B     		ldr	r3, .L134+4
 1890 0020 FB60     		str	r3, [r7, #12]
 839:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 840:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     if (chan < CY_SAR_MAX_NUM_CHANNELS)
 1891              		.loc 2 840 0
 1892 0022 7B68     		ldr	r3, [r7, #4]
 1893 0024 0F2B     		cmp	r3, #15
 1894 0026 06D8     		bhi	.L132
 841:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     {
 842:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         Cy_SAR_countsPer10Volt[chan] = adcGain;
 1895              		.loc 2 842 0
 1896 0028 074B     		ldr	r3, .L134+8
 1897 002a 7A68     		ldr	r2, [r7, #4]
 1898 002c 9200     		lsls	r2, r2, #2
 1899 002e 3968     		ldr	r1, [r7]
 1900 0030 D150     		str	r1, [r2, r3]
 843:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         result = CY_SAR_SUCCESS;
 1901              		.loc 2 843 0
 1902 0032 0023     		movs	r3, #0
 1903 0034 FB60     		str	r3, [r7, #12]
 1904              	.L132:
 844:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
 845:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 846:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     return result;
 1905              		.loc 2 846 0
 1906 0036 FB68     		ldr	r3, [r7, #12]
 847:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** }
 1907              		.loc 2 847 0
 1908 0038 1800     		movs	r0, r3
 1909 003a BD46     		mov	sp, r7
 1910 003c 04B0     		add	sp, sp, #16
 1911              		@ sp needed
 1912 003e 80BD     		pop	{r7, pc}
 1913              	.L135:
 1914              		.align	2
 1915              	.L134:
 1916 0040 00000000 		.word	.LC0
 1917 0044 01000600 		.word	393217
 1918 0048 00000000 		.word	Cy_SAR_countsPer10Volt
 1919              		.cfi_endproc
 1920              	.LFE121:
 1921              		.size	Cy_SAR_SetGain, .-Cy_SAR_SetGain
 1922              		.global	__aeabi_uidiv
 1923              		.section	.text.Cy_SAR_RawCounts2Counts,"ax",%progbits
 1924              		.align	2
 1925              		.global	Cy_SAR_RawCounts2Counts
 1926              		.code	16
 1927              		.thumb_func
 1928              		.type	Cy_SAR_RawCounts2Counts, %function
 1929              	Cy_SAR_RawCounts2Counts:
 1930              	.LFB122:
 848:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 849:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 850:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** /*******************************************************************************
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 86


 851:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Function Name: Cy_SAR_RawCounts2Counts
 852:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** ****************************************************************************//**
 853:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 854:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Convert the channel result to a consistent result after accounting for
 855:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * averaging and subtracting the offset.
 856:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * The equation used is:
 857:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 858:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *     Counts = (RawCounts/AvgDivider - Offset)
 859:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 860:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * where,
 861:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - RawCounts: Raw counts from SAR 16-bit CHAN_RESULT register
 862:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - AvgDivider: divider based on averaging mode (\ref cy_en_sar_sample_ctrl_avg_mode_t) and number 
 863:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *   (\ref cy_en_sar_sample_ctrl_avg_cnt_t)
 864:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *   - \ref CY_SAR_AVG_MODE_SEQUENTIAL_ACCUM : AvgDivider is the number of samples averaged or 16, w
 865:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *   - \ref CY_SAR_AVG_MODE_SEQUENTIAL_FIXED : AvgDivider is 1
 866:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *   - \ref CY_SAR_AVG_MODE_INTERLEAVED : AvgDivider is the number of samples averaged
 867:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - Offset: Value from \ref Cy_SAR_offset
 868:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 869:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param base
 870:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Pointer to structure describing registers
 871:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 872:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param chan
 873:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * The channel number, between 0 and \ref CY_SAR_MAX_NUM_CHANNELS - 1
 874:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 875:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param adcCounts
 876:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Conversion result from \ref Cy_SAR_GetResult16
 877:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 878:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \return
 879:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * adcCounts after averaging and offset adjustments.
 880:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * If channel number is invalid, adcCounts is returned unmodified.
 881:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 882:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \funcusage
 883:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 884:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * This function is used by \ref Cy_SAR_CountsTo_Volts, \ref Cy_SAR_CountsTo_mVolts,
 885:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * and \ref Cy_SAR_CountsTo_uVolts. Calling this function directly is usually
 886:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * not needed.
 887:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 888:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *******************************************************************************/
 889:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** int16_t Cy_SAR_RawCounts2Counts(const SAR_Type *base, uint32_t chan, int16_t adcCounts)
 890:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** {
 1931              		.loc 2 890 0
 1932              		.cfi_startproc
 1933              		@ args = 0, pretend = 0, frame = 24
 1934              		@ frame_needed = 1, uses_anonymous_args = 0
 1935 0000 80B5     		push	{r7, lr}
 1936              		.cfi_def_cfa_offset 8
 1937              		.cfi_offset 7, -8
 1938              		.cfi_offset 14, -4
 1939 0002 86B0     		sub	sp, sp, #24
 1940              		.cfi_def_cfa_offset 32
 1941 0004 00AF     		add	r7, sp, #0
 1942              		.cfi_def_cfa_register 7
 1943 0006 F860     		str	r0, [r7, #12]
 1944 0008 B960     		str	r1, [r7, #8]
 1945 000a BB1D     		adds	r3, r7, #6
 1946 000c 1A80     		strh	r2, [r3]
 891:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     CY_ASSERT_L2(CY_SAR_CHANNUM(chan));
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 87


 1947              		.loc 2 891 0
 1948 000e BB68     		ldr	r3, [r7, #8]
 1949 0010 0F2B     		cmp	r3, #15
 1950 0012 05D9     		bls	.L137
 1951              		.loc 2 891 0 is_stmt 0 discriminator 1
 1952 0014 334A     		ldr	r2, .L143
 1953 0016 344B     		ldr	r3, .L143+4
 1954 0018 1100     		movs	r1, r2
 1955 001a 1800     		movs	r0, r3
 1956 001c FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 1957              	.L137:
 892:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 893:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     uint32_t temp;
 894:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     uint32_t averageAdcSamplesDiv;
 895:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 896:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     if (chan < CY_SAR_MAX_NUM_CHANNELS)
 1958              		.loc 2 896 0 is_stmt 1
 1959 0020 BB68     		ldr	r3, [r7, #8]
 1960 0022 0F2B     		cmp	r3, #15
 1961 0024 56D8     		bhi	.L138
 897:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     {
 898:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 899:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 900:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         if (SAR_SAMPLE_CTRL_AVG_SHIFT_Msk != (SAR_SAMPLE_CTRL(base) & SAR_SAMPLE_CTRL_AVG_SHIFT_Msk
 1962              		.loc 2 900 0
 1963 0026 FB68     		ldr	r3, [r7, #12]
 1964 0028 5B68     		ldr	r3, [r3, #4]
 1965 002a 8022     		movs	r2, #128
 1966 002c 1340     		ands	r3, r2
 1967 002e 45D1     		bne	.L139
 901:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         { /* If Average mode != fixed */
 902:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 903:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             if (SAR_CHAN_CONFIG_AVG_EN_Msk == (SAR_CHAN_CONFIG(base, chan) & SAR_CHAN_CONFIG_AVG_EN
 1968              		.loc 2 903 0
 1969 0030 FB68     		ldr	r3, [r7, #12]
 1970 0032 BA68     		ldr	r2, [r7, #8]
 1971 0034 2032     		adds	r2, r2, #32
 1972 0036 9200     		lsls	r2, r2, #2
 1973 0038 D258     		ldr	r2, [r2, r3]
 1974 003a 8023     		movs	r3, #128
 1975 003c DB00     		lsls	r3, r3, #3
 1976 003e 1340     		ands	r3, r2
 1977 0040 3CD0     		beq	.L139
 904:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             { /* If channel uses averaging */
 905:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 906:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****                 /* Divide by 2^(AVG_CNT + 1) */
 907:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****                 averageAdcSamplesDiv = (SAR_SAMPLE_CTRL(base) & SAR_SAMPLE_CTRL_AVG_CNT_Msk) >> SAR
 1978              		.loc 2 907 0
 1979 0042 FB68     		ldr	r3, [r7, #12]
 1980 0044 5B68     		ldr	r3, [r3, #4]
 1981 0046 7022     		movs	r2, #112
 1982 0048 1340     		ands	r3, r2
 1983 004a 1B09     		lsrs	r3, r3, #4
 1984 004c 7B61     		str	r3, [r7, #20]
 908:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****                 averageAdcSamplesDiv = (1uL << (averageAdcSamplesDiv + 1uL));
 1985              		.loc 2 908 0
 1986 004e 7B69     		ldr	r3, [r7, #20]
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 88


 1987 0050 0133     		adds	r3, r3, #1
 1988 0052 0122     		movs	r2, #1
 1989 0054 9A40     		lsls	r2, r2, r3
 1990 0056 1300     		movs	r3, r2
 1991 0058 7B61     		str	r3, [r7, #20]
 909:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 910:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****                 /* If averaging mode is ACCUNDUMP (channel will be sampled back to back and average
 911:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****                 * divider limit is 16 */
 912:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****                 if (SAR_SAMPLE_CTRL_AVG_MODE_Msk != (SAR_SAMPLE_CTRL(base) & SAR_SAMPLE_CTRL_AVG_MO
 1992              		.loc 2 912 0
 1993 005a FB68     		ldr	r3, [r7, #12]
 1994 005c 5A68     		ldr	r2, [r3, #4]
 1995 005e 8023     		movs	r3, #128
 1996 0060 5B00     		lsls	r3, r3, #1
 1997 0062 1340     		ands	r3, r2
 1998 0064 04D1     		bne	.L140
 913:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****                 {
 914:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****                     if (averageAdcSamplesDiv > 16uL)
 1999              		.loc 2 914 0
 2000 0066 7B69     		ldr	r3, [r7, #20]
 2001 0068 102B     		cmp	r3, #16
 2002 006a 01D9     		bls	.L140
 915:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****                     {
 916:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****                         averageAdcSamplesDiv = 16uL;
 2003              		.loc 2 916 0
 2004 006c 1023     		movs	r3, #16
 2005 006e 7B61     		str	r3, [r7, #20]
 2006              	.L140:
 917:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****                     }
 918:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****                 }
 919:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 920:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****                 /* If unsigned format, prevent sign extension */
 921:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****                 if (false == Cy_SAR_IsChannelSigned(base, chan))
 2007              		.loc 2 921 0
 2008 0070 BA68     		ldr	r2, [r7, #8]
 2009 0072 FB68     		ldr	r3, [r7, #12]
 2010 0074 1100     		movs	r1, r2
 2011 0076 1800     		movs	r0, r3
 2012 0078 FFF7FEFF 		bl	Cy_SAR_IsChannelSigned
 2013 007c 0300     		movs	r3, r0
 2014 007e 1A00     		movs	r2, r3
 2015 0080 0123     		movs	r3, #1
 2016 0082 5340     		eors	r3, r2
 2017 0084 DBB2     		uxtb	r3, r3
 2018 0086 002B     		cmp	r3, #0
 2019 0088 0BD0     		beq	.L141
 922:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****                 {
 923:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****                     temp = ((uint16) adcCounts / averageAdcSamplesDiv);
 2020              		.loc 2 923 0
 2021 008a BB1D     		adds	r3, r7, #6
 2022 008c 1B88     		ldrh	r3, [r3]
 2023 008e 7969     		ldr	r1, [r7, #20]
 2024 0090 1800     		movs	r0, r3
 2025 0092 FFF7FEFF 		bl	__aeabi_uidiv
 2026 0096 0300     		movs	r3, r0
 2027 0098 3B61     		str	r3, [r7, #16]
 924:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****                     adcCounts = (int16_t) temp;
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 89


 2028              		.loc 2 924 0
 2029 009a BB1D     		adds	r3, r7, #6
 2030 009c 3A69     		ldr	r2, [r7, #16]
 2031 009e 1A80     		strh	r2, [r3]
 2032 00a0 0CE0     		b	.L139
 2033              	.L141:
 925:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****                 }
 926:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****                 else
 927:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****                 {
 928:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****                     adcCounts /= (int16_t) averageAdcSamplesDiv;
 2034              		.loc 2 928 0
 2035 00a2 BB1D     		adds	r3, r7, #6
 2036 00a4 0022     		movs	r2, #0
 2037 00a6 9B5E     		ldrsh	r3, [r3, r2]
 2038 00a8 7A69     		ldr	r2, [r7, #20]
 2039 00aa 12B2     		sxth	r2, r2
 2040 00ac 1100     		movs	r1, r2
 2041 00ae 1800     		movs	r0, r3
 2042 00b0 FFF7FEFF 		bl	__aeabi_idiv
 2043 00b4 0300     		movs	r3, r0
 2044 00b6 1A00     		movs	r2, r3
 2045 00b8 BB1D     		adds	r3, r7, #6
 2046 00ba 1A80     		strh	r2, [r3]
 2047              	.L139:
 929:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****                 }
 930:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             }
 931:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         }
 932:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 933:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         /* Subtract ADC offset */
 934:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         adcCounts -= Cy_SAR_offset[chan];
 2048              		.loc 2 934 0
 2049 00bc 0B4B     		ldr	r3, .L143+8
 2050 00be BA68     		ldr	r2, [r7, #8]
 2051 00c0 5200     		lsls	r2, r2, #1
 2052 00c2 D35A     		ldrh	r3, [r2, r3]
 2053 00c4 19B2     		sxth	r1, r3
 2054 00c6 BB1D     		adds	r3, r7, #6
 2055 00c8 1A88     		ldrh	r2, [r3]
 2056 00ca 8BB2     		uxth	r3, r1
 2057 00cc D31A     		subs	r3, r2, r3
 2058 00ce 9AB2     		uxth	r2, r3
 2059 00d0 BB1D     		adds	r3, r7, #6
 2060 00d2 1A80     		strh	r2, [r3]
 2061              	.L138:
 935:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
 936:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 937:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     return adcCounts;
 2062              		.loc 2 937 0
 2063 00d4 BB1D     		adds	r3, r7, #6
 2064 00d6 0022     		movs	r2, #0
 2065 00d8 9B5E     		ldrsh	r3, [r3, r2]
 938:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** }
 2066              		.loc 2 938 0
 2067 00da 1800     		movs	r0, r3
 2068 00dc BD46     		mov	sp, r7
 2069 00de 06B0     		add	sp, sp, #24
 2070              		@ sp needed
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 90


 2071 00e0 80BD     		pop	{r7, pc}
 2072              	.L144:
 2073 00e2 C046     		.align	2
 2074              	.L143:
 2075 00e4 7B030000 		.word	891
 2076 00e8 00000000 		.word	.LC0
 2077 00ec 00000000 		.word	Cy_SAR_offset
 2078              		.cfi_endproc
 2079              	.LFE122:
 2080              		.size	Cy_SAR_RawCounts2Counts, .-Cy_SAR_RawCounts2Counts
 2081              		.global	__aeabi_i2f
 2082              		.global	__aeabi_fmul
 2083              		.global	__aeabi_fdiv
 2084              		.section	.text.Cy_SAR_CountsTo_Volts,"ax",%progbits
 2085              		.align	2
 2086              		.global	Cy_SAR_CountsTo_Volts
 2087              		.code	16
 2088              		.thumb_func
 2089              		.type	Cy_SAR_CountsTo_Volts, %function
 2090              	Cy_SAR_CountsTo_Volts:
 2091              	.LFB123:
 939:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 940:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 941:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** /*******************************************************************************
 942:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Function Name: Cy_SAR_CountsTo_Volts
 943:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** ****************************************************************************//**
 944:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 945:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Convert the ADC output to Volts as a float32. For example, if the ADC
 946:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * measured 0.534 volts, the return value would be 0.534.
 947:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * The calculation of voltage depends on the contents of \ref Cy_SAR_offset,
 948:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \ref Cy_SAR_countsPer10Volt, and other parameters.
 949:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * The equation used is:
 950:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 951:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *     V = (RawCounts/AvgDivider - Offset)*TEN_VOLT/Gain
 952:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 953:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * where,
 954:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - RawCounts: Raw counts from SAR 16-bit CHAN_RESULT register
 955:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - AvgDivider: divider based on averaging mode (\ref cy_en_sar_sample_ctrl_avg_mode_t) and number 
 956:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *   (\ref cy_en_sar_sample_ctrl_avg_cnt_t)
 957:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *   - \ref CY_SAR_AVG_MODE_SEQUENTIAL_ACCUM : AvgDivider is the number of samples averaged or 16, w
 958:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *   - \ref CY_SAR_AVG_MODE_SEQUENTIAL_FIXED : AvgDivider is 1
 959:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *   - \ref CY_SAR_AVG_MODE_INTERLEAVED : AvgDivider is the number of samples averaged
 960:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - Offset: Value from \ref Cy_SAR_offset
 961:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - TEN_VOLT: 10 V constant since the gain is in counts per 10 volts.
 962:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - Gain: Value from \ref Cy_SAR_countsPer10Volt
 963:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 964:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \note
 965:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * This funtion is only valid when result alignment is right aligned.
 966:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 967:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param base
 968:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Pointer to structure describing registers
 969:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 970:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param chan
 971:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * The channel number, between 0 and \ref CY_SAR_MAX_NUM_CHANNELS - 1
 972:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 973:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param adcCounts
 974:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Conversion result from \ref Cy_SAR_GetResult16
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 91


 975:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 976:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \return
 977:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Result in Volts.
 978:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - If channel number is invalid, 0 is returned.
 979:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - If channel is left aligned, 0 is returned.
 980:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 981:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \funcusage
 982:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 983:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_COUNTSTO_VOLTS
 984:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 985:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *******************************************************************************/
 986:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** float32_t Cy_SAR_CountsTo_Volts(const SAR_Type *base, uint32_t chan, int16_t adcCounts)
 987:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** {
 2092              		.loc 2 987 0
 2093              		.cfi_startproc
 2094              		@ args = 0, pretend = 0, frame = 24
 2095              		@ frame_needed = 1, uses_anonymous_args = 0
 2096 0000 90B5     		push	{r4, r7, lr}
 2097              		.cfi_def_cfa_offset 12
 2098              		.cfi_offset 4, -12
 2099              		.cfi_offset 7, -8
 2100              		.cfi_offset 14, -4
 2101 0002 87B0     		sub	sp, sp, #28
 2102              		.cfi_def_cfa_offset 40
 2103 0004 00AF     		add	r7, sp, #0
 2104              		.cfi_def_cfa_register 7
 2105 0006 F860     		str	r0, [r7, #12]
 2106 0008 B960     		str	r1, [r7, #8]
 2107 000a BB1D     		adds	r3, r7, #6
 2108 000c 1A80     		strh	r2, [r3]
 988:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     CY_ASSERT_L2(CY_SAR_CHANNUM(chan));
 2109              		.loc 2 988 0
 2110 000e BB68     		ldr	r3, [r7, #8]
 2111 0010 0F2B     		cmp	r3, #15
 2112 0012 06D9     		bls	.L146
 2113              		.loc 2 988 0 is_stmt 0 discriminator 1
 2114 0014 F723     		movs	r3, #247
 2115 0016 9A00     		lsls	r2, r3, #2
 2116 0018 1C4B     		ldr	r3, .L149
 2117 001a 1100     		movs	r1, r2
 2118 001c 1800     		movs	r0, r3
 2119 001e FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 2120              	.L146:
 989:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 990:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     float32_t result_Volts = 0.0f;
 2121              		.loc 2 990 0 is_stmt 1
 2122 0022 0023     		movs	r3, #0
 2123 0024 7B61     		str	r3, [r7, #20]
 991:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 992:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     if (chan < CY_SAR_MAX_NUM_CHANNELS)
 2124              		.loc 2 992 0
 2125 0026 BB68     		ldr	r3, [r7, #8]
 2126 0028 0F2B     		cmp	r3, #15
 2127 002a 2AD8     		bhi	.L147
 993:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     {
 994:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         if (SAR_SAMPLE_CTRL_LEFT_ALIGN_Msk != (SAR_SAMPLE_CTRL(base) & SAR_SAMPLE_CTRL_LEFT_ALIGN_M
 2128              		.loc 2 994 0
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 92


 2129 002c FB68     		ldr	r3, [r7, #12]
 2130 002e 5B68     		ldr	r3, [r3, #4]
 2131 0030 0222     		movs	r2, #2
 2132 0032 1340     		ands	r3, r2
 2133 0034 25D1     		bne	.L147
 995:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         {
 996:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             adcCounts = Cy_SAR_RawCounts2Counts(base, chan, adcCounts);
 2134              		.loc 2 996 0
 2135 0036 BC1D     		adds	r4, r7, #6
 2136 0038 BB1D     		adds	r3, r7, #6
 2137 003a 0022     		movs	r2, #0
 2138 003c 9A5E     		ldrsh	r2, [r3, r2]
 2139 003e B968     		ldr	r1, [r7, #8]
 2140 0040 FB68     		ldr	r3, [r7, #12]
 2141 0042 1800     		movs	r0, r3
 2142 0044 FFF7FEFF 		bl	Cy_SAR_RawCounts2Counts
 2143 0048 0300     		movs	r3, r0
 2144 004a 2380     		strh	r3, [r4]
 997:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 998:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             result_Volts = (float32_t)adcCounts * CY_SAR_10V_COUNTS;
 2145              		.loc 2 998 0
 2146 004c BB1D     		adds	r3, r7, #6
 2147 004e 0022     		movs	r2, #0
 2148 0050 9B5E     		ldrsh	r3, [r3, r2]
 2149 0052 1800     		movs	r0, r3
 2150 0054 FFF7FEFF 		bl	__aeabi_i2f
 2151 0058 031C     		adds	r3, r0, #0
 2152 005a 0D49     		ldr	r1, .L149+4
 2153 005c 181C     		adds	r0, r3, #0
 2154 005e FFF7FEFF 		bl	__aeabi_fmul
 2155 0062 031C     		adds	r3, r0, #0
 2156 0064 7B61     		str	r3, [r7, #20]
 999:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             result_Volts /= (float32_t)Cy_SAR_countsPer10Volt[chan];
 2157              		.loc 2 999 0
 2158 0066 0B4B     		ldr	r3, .L149+8
 2159 0068 BA68     		ldr	r2, [r7, #8]
 2160 006a 9200     		lsls	r2, r2, #2
 2161 006c D358     		ldr	r3, [r2, r3]
 2162 006e 1800     		movs	r0, r3
 2163 0070 FFF7FEFF 		bl	__aeabi_i2f
 2164 0074 031C     		adds	r3, r0, #0
 2165 0076 191C     		adds	r1, r3, #0
 2166 0078 7869     		ldr	r0, [r7, #20]
 2167 007a FFF7FEFF 		bl	__aeabi_fdiv
 2168 007e 031C     		adds	r3, r0, #0
 2169 0080 7B61     		str	r3, [r7, #20]
 2170              	.L147:
1000:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         }
1001:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
1002:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
1003:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     return result_Volts;
 2171              		.loc 2 1003 0
 2172 0082 7B69     		ldr	r3, [r7, #20]
1004:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** }
 2173              		.loc 2 1004 0
 2174 0084 181C     		adds	r0, r3, #0
 2175 0086 BD46     		mov	sp, r7
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 93


 2176 0088 07B0     		add	sp, sp, #28
 2177              		@ sp needed
 2178 008a 90BD     		pop	{r4, r7, pc}
 2179              	.L150:
 2180              		.align	2
 2181              	.L149:
 2182 008c 00000000 		.word	.LC0
 2183 0090 00002041 		.word	1092616192
 2184 0094 00000000 		.word	Cy_SAR_countsPer10Volt
 2185              		.cfi_endproc
 2186              	.LFE123:
 2187              		.size	Cy_SAR_CountsTo_Volts, .-Cy_SAR_CountsTo_Volts
 2188              		.section	.text.Cy_SAR_CountsTo_mVolts,"ax",%progbits
 2189              		.align	2
 2190              		.global	Cy_SAR_CountsTo_mVolts
 2191              		.code	16
 2192              		.thumb_func
 2193              		.type	Cy_SAR_CountsTo_mVolts, %function
 2194              	Cy_SAR_CountsTo_mVolts:
 2195              	.LFB124:
1005:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
1006:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
1007:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** /*******************************************************************************
1008:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Function Name: Cy_SAR_CountsTo_mVolts
1009:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** ****************************************************************************//**
1010:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1011:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Convert the ADC output to millivolts as an int16. For example, if the ADC
1012:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * measured 0.534 volts, the return value would be 534.
1013:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * The calculation of voltage depends on the contents of \ref Cy_SAR_offset,
1014:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \ref Cy_SAR_countsPer10Volt, and other parameters.
1015:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * The equation used is:
1016:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1017:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *     V = (RawCounts/AvgDivider - Offset)*TEN_VOLT/Gain
1018:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *     mV = V * 1000
1019:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1020:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * where,
1021:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - RawCounts: Raw counts from SAR 16-bit CHAN_RESULT register
1022:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - AvgDivider: divider based on averaging mode (\ref cy_en_sar_sample_ctrl_avg_mode_t) and number 
1023:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *   (\ref cy_en_sar_sample_ctrl_avg_cnt_t)
1024:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *   - \ref CY_SAR_AVG_MODE_SEQUENTIAL_ACCUM : AvgDivider is the number of samples averaged or 16, w
1025:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *   - \ref CY_SAR_AVG_MODE_SEQUENTIAL_FIXED : AvgDivider is 1
1026:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *   - \ref CY_SAR_AVG_MODE_INTERLEAVED : AvgDivider is the number of samples averaged
1027:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - Offset: Value from \ref Cy_SAR_offset
1028:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - TEN_VOLT: 10 V constant since the gain is in counts per 10 volts.
1029:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - Gain: Value from \ref Cy_SAR_countsPer10Volt
1030:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1031:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \note
1032:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * This funtion is only valid when result alignment is right aligned.
1033:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1034:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param base
1035:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Pointer to structure describing registers
1036:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1037:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param chan
1038:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * The channel number, between 0 and \ref CY_SAR_MAX_NUM_CHANNELS - 1
1039:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1040:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param adcCounts
1041:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Conversion result from \ref Cy_SAR_GetResult16
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 94


1042:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1043:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \return
1044:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Result in millivolts.
1045:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - If channel number is invalid, 0 is returned.
1046:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - If channel is left aligned, 0 is returned.
1047:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1048:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \funcusage
1049:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1050:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_COUNTSTO_MVOLTS
1051:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1052:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *******************************************************************************/
1053:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** int16_t Cy_SAR_CountsTo_mVolts(const SAR_Type *base, uint32_t chan, int16_t adcCounts)
1054:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** {
 2196              		.loc 2 1054 0
 2197              		.cfi_startproc
 2198              		@ args = 0, pretend = 0, frame = 24
 2199              		@ frame_needed = 1, uses_anonymous_args = 0
 2200 0000 90B5     		push	{r4, r7, lr}
 2201              		.cfi_def_cfa_offset 12
 2202              		.cfi_offset 4, -12
 2203              		.cfi_offset 7, -8
 2204              		.cfi_offset 14, -4
 2205 0002 87B0     		sub	sp, sp, #28
 2206              		.cfi_def_cfa_offset 40
 2207 0004 00AF     		add	r7, sp, #0
 2208              		.cfi_def_cfa_register 7
 2209 0006 F860     		str	r0, [r7, #12]
 2210 0008 B960     		str	r1, [r7, #8]
 2211 000a BB1D     		adds	r3, r7, #6
 2212 000c 1A80     		strh	r2, [r3]
1055:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     CY_ASSERT_L2(CY_SAR_CHANNUM(chan));
 2213              		.loc 2 1055 0
 2214 000e BB68     		ldr	r3, [r7, #8]
 2215 0010 0F2B     		cmp	r3, #15
 2216 0012 05D9     		bls	.L152
 2217              		.loc 2 1055 0 is_stmt 0 discriminator 1
 2218 0014 274A     		ldr	r2, .L159
 2219 0016 284B     		ldr	r3, .L159+4
 2220 0018 1100     		movs	r1, r2
 2221 001a 1800     		movs	r0, r3
 2222 001c FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 2223              	.L152:
1056:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
1057:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     int32_t result_mVolts = 0;
 2224              		.loc 2 1057 0 is_stmt 1
 2225 0020 0023     		movs	r3, #0
 2226 0022 7B61     		str	r3, [r7, #20]
1058:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
1059:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     if (chan < CY_SAR_MAX_NUM_CHANNELS)
 2227              		.loc 2 1059 0
 2228 0024 BB68     		ldr	r3, [r7, #8]
 2229 0026 0F2B     		cmp	r3, #15
 2230 0028 3DD8     		bhi	.L153
1060:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     {
1061:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         if (SAR_SAMPLE_CTRL_LEFT_ALIGN_Msk != (SAR_SAMPLE_CTRL(base) & SAR_SAMPLE_CTRL_LEFT_ALIGN_M
 2231              		.loc 2 1061 0
 2232 002a FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 95


 2233 002c 5B68     		ldr	r3, [r3, #4]
 2234 002e 0222     		movs	r2, #2
 2235 0030 1340     		ands	r3, r2
 2236 0032 38D1     		bne	.L153
1062:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         {
1063:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             adcCounts = Cy_SAR_RawCounts2Counts(base, chan, adcCounts);
 2237              		.loc 2 1063 0
 2238 0034 BC1D     		adds	r4, r7, #6
 2239 0036 BB1D     		adds	r3, r7, #6
 2240 0038 0022     		movs	r2, #0
 2241 003a 9A5E     		ldrsh	r2, [r3, r2]
 2242 003c B968     		ldr	r1, [r7, #8]
 2243 003e FB68     		ldr	r3, [r7, #12]
 2244 0040 1800     		movs	r0, r3
 2245 0042 FFF7FEFF 		bl	Cy_SAR_RawCounts2Counts
 2246 0046 0300     		movs	r3, r0
 2247 0048 2380     		strh	r3, [r4]
1064:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
1065:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             result_mVolts = ((int32_t)adcCounts * CY_SAR_10MV_COUNTS);
 2248              		.loc 2 1065 0
 2249 004a BB1D     		adds	r3, r7, #6
 2250 004c 0022     		movs	r2, #0
 2251 004e 9B5E     		ldrsh	r3, [r3, r2]
 2252 0050 1A4A     		ldr	r2, .L159+8
 2253 0052 5343     		muls	r3, r2
 2254 0054 7B61     		str	r3, [r7, #20]
1066:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             if (adcCounts > 0)
 2255              		.loc 2 1066 0
 2256 0056 BB1D     		adds	r3, r7, #6
 2257 0058 0022     		movs	r2, #0
 2258 005a 9B5E     		ldrsh	r3, [r3, r2]
 2259 005c 002B     		cmp	r3, #0
 2260 005e 0CDD     		ble	.L154
1067:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             {
1068:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****                 result_mVolts += Cy_SAR_countsPer10Volt[chan] / 2;
 2261              		.loc 2 1068 0
 2262 0060 174B     		ldr	r3, .L159+12
 2263 0062 BA68     		ldr	r2, [r7, #8]
 2264 0064 9200     		lsls	r2, r2, #2
 2265 0066 D358     		ldr	r3, [r2, r3]
 2266 0068 002B     		cmp	r3, #0
 2267 006a 00DA     		bge	.L155
 2268 006c 0133     		adds	r3, r3, #1
 2269              	.L155:
 2270 006e 5B10     		asrs	r3, r3, #1
 2271 0070 1A00     		movs	r2, r3
 2272 0072 7B69     		ldr	r3, [r7, #20]
 2273 0074 9B18     		adds	r3, r3, r2
 2274 0076 7B61     		str	r3, [r7, #20]
 2275 0078 0BE0     		b	.L156
 2276              	.L154:
1069:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             }
1070:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             else
1071:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             {
1072:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****                 result_mVolts -= Cy_SAR_countsPer10Volt[chan] / 2;
 2277              		.loc 2 1072 0
 2278 007a 114B     		ldr	r3, .L159+12
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 96


 2279 007c BA68     		ldr	r2, [r7, #8]
 2280 007e 9200     		lsls	r2, r2, #2
 2281 0080 D358     		ldr	r3, [r2, r3]
 2282 0082 002B     		cmp	r3, #0
 2283 0084 00DA     		bge	.L157
 2284 0086 0133     		adds	r3, r3, #1
 2285              	.L157:
 2286 0088 5B10     		asrs	r3, r3, #1
 2287 008a 1A00     		movs	r2, r3
 2288 008c 7B69     		ldr	r3, [r7, #20]
 2289 008e 9B1A     		subs	r3, r3, r2
 2290 0090 7B61     		str	r3, [r7, #20]
 2291              	.L156:
1073:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             }
1074:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             result_mVolts /= Cy_SAR_countsPer10Volt[chan];
 2292              		.loc 2 1074 0
 2293 0092 0B4B     		ldr	r3, .L159+12
 2294 0094 BA68     		ldr	r2, [r7, #8]
 2295 0096 9200     		lsls	r2, r2, #2
 2296 0098 D358     		ldr	r3, [r2, r3]
 2297 009a 1900     		movs	r1, r3
 2298 009c 7869     		ldr	r0, [r7, #20]
 2299 009e FFF7FEFF 		bl	__aeabi_idiv
 2300 00a2 0300     		movs	r3, r0
 2301 00a4 7B61     		str	r3, [r7, #20]
 2302              	.L153:
1075:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         }
1076:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
1077:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
1078:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     return (int16_t) result_mVolts;
 2303              		.loc 2 1078 0
 2304 00a6 7B69     		ldr	r3, [r7, #20]
 2305 00a8 1BB2     		sxth	r3, r3
1079:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** }
 2306              		.loc 2 1079 0
 2307 00aa 1800     		movs	r0, r3
 2308 00ac BD46     		mov	sp, r7
 2309 00ae 07B0     		add	sp, sp, #28
 2310              		@ sp needed
 2311 00b0 90BD     		pop	{r4, r7, pc}
 2312              	.L160:
 2313 00b2 C046     		.align	2
 2314              	.L159:
 2315 00b4 1F040000 		.word	1055
 2316 00b8 00000000 		.word	.LC0
 2317 00bc 10270000 		.word	10000
 2318 00c0 00000000 		.word	Cy_SAR_countsPer10Volt
 2319              		.cfi_endproc
 2320              	.LFE124:
 2321              		.size	Cy_SAR_CountsTo_mVolts, .-Cy_SAR_CountsTo_mVolts
 2322              		.global	__aeabi_lmul
 2323              		.global	__aeabi_ldivmod
 2324              		.section	.text.Cy_SAR_CountsTo_uVolts,"ax",%progbits
 2325              		.align	2
 2326              		.global	Cy_SAR_CountsTo_uVolts
 2327              		.code	16
 2328              		.thumb_func
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 97


 2329              		.type	Cy_SAR_CountsTo_uVolts, %function
 2330              	Cy_SAR_CountsTo_uVolts:
 2331              	.LFB125:
1080:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
1081:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
1082:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** /*******************************************************************************
1083:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Function Name: Cy_SAR_CountsTo_uVolts
1084:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** ****************************************************************************//**
1085:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1086:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Convert the ADC output to microvolts as a int32. For example, if the ADC
1087:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * measured 0.534 volts, the return value would be 534000.
1088:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * The calculation of voltage depends on the contents of \ref Cy_SAR_offset,
1089:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \ref Cy_SAR_countsPer10Volt, and other parameters.
1090:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * The equation used is:
1091:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1092:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *     V = (RawCounts/AvgDivider - Offset)*TEN_VOLT/Gain
1093:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *     uV = V * 1000000
1094:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1095:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * where,
1096:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - RawCounts: Raw counts from SAR 16-bit CHAN_RESULT register
1097:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - AvgDivider: divider based on averaging mode (\ref cy_en_sar_sample_ctrl_avg_mode_t) and number 
1098:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *   (\ref cy_en_sar_sample_ctrl_avg_cnt_t)
1099:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *   - \ref CY_SAR_AVG_MODE_SEQUENTIAL_ACCUM : AvgDivider is the number of samples averaged or 16, w
1100:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *   - \ref CY_SAR_AVG_MODE_SEQUENTIAL_FIXED : AvgDivider is 1
1101:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *   - \ref CY_SAR_AVG_MODE_INTERLEAVED : AvgDivider is the number of samples averaged
1102:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - Offset: Value from \ref Cy_SAR_offset
1103:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - TEN_VOLT: 10 V constant since the gain is in counts per 10 volts.
1104:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - Gain: Value from \ref Cy_SAR_countsPer10Volt
1105:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1106:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \note
1107:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * This funtion is only valid when result alignment is right aligned.
1108:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1109:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param base
1110:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Pointer to structure describing registers
1111:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1112:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param chan
1113:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * The channel number, between 0 and \ref CY_SAR_MAX_NUM_CHANNELS - 1
1114:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1115:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param adcCounts
1116:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Conversion result from \ref Cy_SAR_GetResult16
1117:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1118:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \return
1119:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Result in microvolts.
1120:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - If channel number is valid, 0 is returned.
1121:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - If channel is left aligned, 0 is returned.
1122:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1123:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \funcusage
1124:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1125:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_COUNTSTO_UVOLTS
1126:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1127:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *******************************************************************************/
1128:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** int32_t Cy_SAR_CountsTo_uVolts(const SAR_Type *base, uint32_t chan, int16_t adcCounts)
1129:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** {
 2332              		.loc 2 1129 0
 2333              		.cfi_startproc
 2334              		@ args = 0, pretend = 0, frame = 32
 2335              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 98


 2336 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 2337              		.cfi_def_cfa_offset 20
 2338              		.cfi_offset 4, -20
 2339              		.cfi_offset 5, -16
 2340              		.cfi_offset 6, -12
 2341              		.cfi_offset 7, -8
 2342              		.cfi_offset 14, -4
 2343 0002 89B0     		sub	sp, sp, #36
 2344              		.cfi_def_cfa_offset 56
 2345 0004 00AF     		add	r7, sp, #0
 2346              		.cfi_def_cfa_register 7
 2347 0006 7861     		str	r0, [r7, #20]
 2348 0008 3961     		str	r1, [r7, #16]
 2349 000a 0E23     		movs	r3, #14
 2350 000c FB18     		adds	r3, r7, r3
 2351 000e 1A80     		strh	r2, [r3]
1130:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     CY_ASSERT_L2(CY_SAR_CHANNUM(chan));
 2352              		.loc 2 1130 0
 2353 0010 3B69     		ldr	r3, [r7, #16]
 2354 0012 0F2B     		cmp	r3, #15
 2355 0014 05D9     		bls	.L162
 2356              		.loc 2 1130 0 is_stmt 0 discriminator 1
 2357 0016 234A     		ldr	r2, .L165
 2358 0018 234B     		ldr	r3, .L165+4
 2359 001a 1100     		movs	r1, r2
 2360 001c 1800     		movs	r0, r3
 2361 001e FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 2362              	.L162:
1131:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
1132:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     int64_t result_uVolts = 0;
 2363              		.loc 2 1132 0 is_stmt 1
 2364 0022 0023     		movs	r3, #0
 2365 0024 0024     		movs	r4, #0
 2366 0026 BB61     		str	r3, [r7, #24]
 2367 0028 FC61     		str	r4, [r7, #28]
1133:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
1134:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     if (chan < CY_SAR_MAX_NUM_CHANNELS)
 2368              		.loc 2 1134 0
 2369 002a 3B69     		ldr	r3, [r7, #16]
 2370 002c 0F2B     		cmp	r3, #15
 2371 002e 33D8     		bhi	.L163
1135:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     {
1136:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         if (SAR_SAMPLE_CTRL_LEFT_ALIGN_Msk != (SAR_SAMPLE_CTRL(base) & SAR_SAMPLE_CTRL_LEFT_ALIGN_M
 2372              		.loc 2 1136 0
 2373 0030 7B69     		ldr	r3, [r7, #20]
 2374 0032 5B68     		ldr	r3, [r3, #4]
 2375 0034 0222     		movs	r2, #2
 2376 0036 1340     		ands	r3, r2
 2377 0038 2ED1     		bne	.L163
1137:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         {
1138:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             adcCounts = Cy_SAR_RawCounts2Counts(base, chan, adcCounts);
 2378              		.loc 2 1138 0
 2379 003a 0E23     		movs	r3, #14
 2380 003c FC18     		adds	r4, r7, r3
 2381 003e 0E23     		movs	r3, #14
 2382 0040 FB18     		adds	r3, r7, r3
 2383 0042 0022     		movs	r2, #0
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 99


 2384 0044 9A5E     		ldrsh	r2, [r3, r2]
 2385 0046 3969     		ldr	r1, [r7, #16]
 2386 0048 7B69     		ldr	r3, [r7, #20]
 2387 004a 1800     		movs	r0, r3
 2388 004c FFF7FEFF 		bl	Cy_SAR_RawCounts2Counts
 2389 0050 0300     		movs	r3, r0
 2390 0052 2380     		strh	r3, [r4]
1139:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             result_uVolts = (int64_t)adcCounts * CY_SAR_10UV_COUNTS;
 2391              		.loc 2 1139 0
 2392 0054 0E23     		movs	r3, #14
 2393 0056 FB18     		adds	r3, r7, r3
 2394 0058 1B88     		ldrh	r3, [r3]
 2395 005a 1BB2     		sxth	r3, r3
 2396 005c 3B60     		str	r3, [r7]
 2397 005e DB17     		asrs	r3, r3, #31
 2398 0060 7B60     		str	r3, [r7, #4]
 2399 0062 124A     		ldr	r2, .L165+8
 2400 0064 0023     		movs	r3, #0
 2401 0066 3868     		ldr	r0, [r7]
 2402 0068 7968     		ldr	r1, [r7, #4]
 2403 006a FFF7FEFF 		bl	__aeabi_lmul
 2404 006e 0300     		movs	r3, r0
 2405 0070 0C00     		movs	r4, r1
 2406 0072 BB61     		str	r3, [r7, #24]
 2407 0074 FC61     		str	r4, [r7, #28]
1140:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             result_uVolts /= Cy_SAR_countsPer10Volt[chan];
 2408              		.loc 2 1140 0
 2409 0076 0E4B     		ldr	r3, .L165+12
 2410 0078 3A69     		ldr	r2, [r7, #16]
 2411 007a 9200     		lsls	r2, r2, #2
 2412 007c D358     		ldr	r3, [r2, r3]
 2413 007e 1D00     		movs	r5, r3
 2414 0080 DB17     		asrs	r3, r3, #31
 2415 0082 1E00     		movs	r6, r3
 2416 0084 2A00     		movs	r2, r5
 2417 0086 3300     		movs	r3, r6
 2418 0088 B869     		ldr	r0, [r7, #24]
 2419 008a F969     		ldr	r1, [r7, #28]
 2420 008c FFF7FEFF 		bl	__aeabi_ldivmod
 2421 0090 0300     		movs	r3, r0
 2422 0092 0C00     		movs	r4, r1
 2423 0094 BB61     		str	r3, [r7, #24]
 2424 0096 FC61     		str	r4, [r7, #28]
 2425              	.L163:
1141:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         }
1142:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
1143:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
1144:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     return (int32_t)result_uVolts;
 2426              		.loc 2 1144 0
 2427 0098 BB69     		ldr	r3, [r7, #24]
1145:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** }
 2428              		.loc 2 1145 0
 2429 009a 1800     		movs	r0, r3
 2430 009c BD46     		mov	sp, r7
 2431 009e 09B0     		add	sp, sp, #36
 2432              		@ sp needed
 2433 00a0 F0BD     		pop	{r4, r5, r6, r7, pc}
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 100


 2434              	.L166:
 2435 00a2 C046     		.align	2
 2436              	.L165:
 2437 00a4 6A040000 		.word	1130
 2438 00a8 00000000 		.word	.LC0
 2439 00ac 80969800 		.word	10000000
 2440 00b0 00000000 		.word	Cy_SAR_countsPer10Volt
 2441              		.cfi_endproc
 2442              	.LFE125:
 2443              		.size	Cy_SAR_CountsTo_uVolts, .-Cy_SAR_CountsTo_uVolts
 2444              		.section	.text.Cy_SAR_SetAnalogSwitch,"ax",%progbits
 2445              		.align	2
 2446              		.global	Cy_SAR_SetAnalogSwitch
 2447              		.code	16
 2448              		.thumb_func
 2449              		.type	Cy_SAR_SetAnalogSwitch, %function
 2450              	Cy_SAR_SetAnalogSwitch:
 2451              	.LFB126:
1146:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
1147:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
1148:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** /*******************************************************************************
1149:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Function Name: Cy_SAR_SetAnalogSwitch
1150:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** ****************************************************************************//**
1151:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1152:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Provide firmware control of the SARMUX switches for firmware sequencing.
1153:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Each call to this function can open or close a set of switches.
1154:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Previously configured switches are untouched.
1155:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1156:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * If the SARSEQ is enabled, there is no need to use this function.
1157:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1158:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param base
1159:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Pointer to structure describing registers
1160:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1161:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param switchSelect
1162:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * The switch register that contains the desired switches. Select a value
1163:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * from \ref cy_en_sar_switch_register_sel_t.
1164:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1165:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param switchMask
1166:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * The mask of the switches to either open or close.
1167:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Select one or more values from the \ref cy_en_sar_mux_switch_fw_ctrl_t enum
1168:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * and "OR" them together.
1169:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1170:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param state
1171:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Open or close the desired swithces. Select a value from \ref cy_en_sar_switch_state_t.
1172:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1173:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \return None
1174:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1175:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \funcusage
1176:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1177:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \snippet sar_sut_01.cydsn/main_cm4.c SAR_SNIPPET_SET_ANALOG_SWITCH
1178:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1179:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *******************************************************************************/
1180:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** void Cy_SAR_SetAnalogSwitch(SAR_Type *base, cy_en_sar_switch_register_sel_t switchSelect, uint32_t 
1181:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** {
 2452              		.loc 2 1181 0
 2453              		.cfi_startproc
 2454              		@ args = 0, pretend = 0, frame = 24
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 101


 2455              		@ frame_needed = 1, uses_anonymous_args = 0
 2456 0000 80B5     		push	{r7, lr}
 2457              		.cfi_def_cfa_offset 8
 2458              		.cfi_offset 7, -8
 2459              		.cfi_offset 14, -4
 2460 0002 86B0     		sub	sp, sp, #24
 2461              		.cfi_def_cfa_offset 32
 2462 0004 00AF     		add	r7, sp, #0
 2463              		.cfi_def_cfa_register 7
 2464 0006 F860     		str	r0, [r7, #12]
 2465 0008 0800     		movs	r0, r1
 2466 000a 7A60     		str	r2, [r7, #4]
 2467 000c 1900     		movs	r1, r3
 2468 000e 0B23     		movs	r3, #11
 2469 0010 FB18     		adds	r3, r7, r3
 2470 0012 021C     		adds	r2, r0, #0
 2471 0014 1A70     		strb	r2, [r3]
 2472 0016 0A23     		movs	r3, #10
 2473 0018 FB18     		adds	r3, r7, r3
 2474 001a 0A1C     		adds	r2, r1, #0
 2475 001c 1A70     		strb	r2, [r3]
1182:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     CY_ASSERT_L3(CY_SAR_SWITCHSELECT(switchSelect));
 2476              		.loc 2 1182 0
 2477 001e 0B23     		movs	r3, #11
 2478 0020 FB18     		adds	r3, r7, r3
 2479 0022 1B78     		ldrb	r3, [r3]
 2480 0024 002B     		cmp	r3, #0
 2481 0026 05D0     		beq	.L168
 2482              		.loc 2 1182 0 is_stmt 0 discriminator 1
 2483 0028 204A     		ldr	r2, .L175
 2484 002a 214B     		ldr	r3, .L175+4
 2485 002c 1100     		movs	r1, r2
 2486 002e 1800     		movs	r0, r3
 2487 0030 FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 2488              	.L168:
1183:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     CY_ASSERT_L2(CY_SAR_SWITCHMASK(switchMask));
 2489              		.loc 2 1183 0 is_stmt 1
 2490 0034 7B68     		ldr	r3, [r7, #4]
 2491 0036 1F4A     		ldr	r2, .L175+8
 2492 0038 9342     		cmp	r3, r2
 2493 003a 05D9     		bls	.L169
 2494              		.loc 2 1183 0 is_stmt 0 discriminator 1
 2495 003c 1E4A     		ldr	r2, .L175+12
 2496 003e 1C4B     		ldr	r3, .L175+4
 2497 0040 1100     		movs	r1, r2
 2498 0042 1800     		movs	r0, r3
 2499 0044 FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 2500              	.L169:
1184:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     CY_ASSERT_L3(CY_SAR_SWITCHSTATE(state));
 2501              		.loc 2 1184 0 is_stmt 1
 2502 0048 0A23     		movs	r3, #10
 2503 004a FB18     		adds	r3, r7, r3
 2504 004c 1B78     		ldrb	r3, [r3]
 2505 004e 002B     		cmp	r3, #0
 2506 0050 0BD0     		beq	.L170
 2507              		.loc 2 1184 0 is_stmt 0 discriminator 1
 2508 0052 0A23     		movs	r3, #10
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 102


 2509 0054 FB18     		adds	r3, r7, r3
 2510 0056 1B78     		ldrb	r3, [r3]
 2511 0058 012B     		cmp	r3, #1
 2512 005a 06D0     		beq	.L170
 2513              		.loc 2 1184 0 discriminator 2
 2514 005c 9423     		movs	r3, #148
 2515 005e DA00     		lsls	r2, r3, #3
 2516 0060 134B     		ldr	r3, .L175+4
 2517 0062 1100     		movs	r1, r2
 2518 0064 1800     		movs	r0, r3
 2519 0066 FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 2520              	.L170:
1185:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
1186:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     __IOM uint32_t *switchReg;
1187:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     __IOM uint32_t *switchClearReg;
1188:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
1189:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     switchReg = &SAR_MUX_SWITCH0(base);
 2521              		.loc 2 1189 0 is_stmt 1
 2522 006a FB68     		ldr	r3, [r7, #12]
 2523 006c C022     		movs	r2, #192
 2524 006e 9200     		lsls	r2, r2, #2
 2525 0070 9446     		mov	ip, r2
 2526 0072 6344     		add	r3, r3, ip
 2527 0074 7B61     		str	r3, [r7, #20]
1190:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     switchClearReg = &SAR_MUX_SWITCH_CLEAR0(base);
 2528              		.loc 2 1190 0
 2529 0076 FB68     		ldr	r3, [r7, #12]
 2530 0078 C122     		movs	r2, #193
 2531 007a 9200     		lsls	r2, r2, #2
 2532 007c 9446     		mov	ip, r2
 2533 007e 6344     		add	r3, r3, ip
 2534 0080 3B61     		str	r3, [r7, #16]
1191:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
1192:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     switch(state)
 2535              		.loc 2 1192 0
 2536 0082 0A23     		movs	r3, #10
 2537 0084 FB18     		adds	r3, r7, r3
 2538 0086 1B78     		ldrb	r3, [r3]
 2539 0088 012B     		cmp	r3, #1
 2540 008a 06D1     		bne	.L174
1193:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     {
1194:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     case CY_SAR_SWITCH_CLOSE:
1195:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         *switchReg |= switchMask;
 2541              		.loc 2 1195 0
 2542 008c 7B69     		ldr	r3, [r7, #20]
 2543 008e 1A68     		ldr	r2, [r3]
 2544 0090 7B68     		ldr	r3, [r7, #4]
 2545 0092 1A43     		orrs	r2, r3
 2546 0094 7B69     		ldr	r3, [r7, #20]
 2547 0096 1A60     		str	r2, [r3]
1196:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         break;
 2548              		.loc 2 1196 0
 2549 0098 03E0     		b	.L173
 2550              	.L174:
1197:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     case CY_SAR_SWITCH_OPEN:
1198:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     default:
1199:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 103


1200:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         /* Unlike the close case, we are not OR'ing the register. Set 1 to clear.*/
1201:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         *switchClearReg = switchMask;
 2551              		.loc 2 1201 0
 2552 009a 3B69     		ldr	r3, [r7, #16]
 2553 009c 7A68     		ldr	r2, [r7, #4]
 2554 009e 1A60     		str	r2, [r3]
1202:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         break;
 2555              		.loc 2 1202 0
 2556 00a0 C046     		nop
 2557              	.L173:
1203:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
1204:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** }
 2558              		.loc 2 1204 0
 2559 00a2 C046     		nop
 2560 00a4 BD46     		mov	sp, r7
 2561 00a6 06B0     		add	sp, sp, #24
 2562              		@ sp needed
 2563 00a8 80BD     		pop	{r7, pc}
 2564              	.L176:
 2565 00aa C046     		.align	2
 2566              	.L175:
 2567 00ac 9E040000 		.word	1182
 2568 00b0 00000000 		.word	.LC0
 2569 00b4 FFFFFF3F 		.word	1073741823
 2570 00b8 9F040000 		.word	1183
 2571              		.cfi_endproc
 2572              	.LFE126:
 2573              		.size	Cy_SAR_SetAnalogSwitch, .-Cy_SAR_SetAnalogSwitch
 2574              		.section	.text.Cy_SAR_GetAnalogSwitch,"ax",%progbits
 2575              		.align	2
 2576              		.global	Cy_SAR_GetAnalogSwitch
 2577              		.code	16
 2578              		.thumb_func
 2579              		.type	Cy_SAR_GetAnalogSwitch, %function
 2580              	Cy_SAR_GetAnalogSwitch:
 2581              	.LFB127:
1205:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
1206:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
1207:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** /*******************************************************************************
1208:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Function Name: Cy_SAR_GetAnalogSwitch
1209:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** ****************************************************************************//**
1210:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1211:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Return the state (open or close) of SARMUX switches.
1212:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1213:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param base
1214:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Pointer to structure describing registers
1215:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1216:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param switchSelect
1217:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * The switch register that contains the desired switches. Select a value
1218:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * from \ref cy_en_sar_switch_register_sel_t.
1219:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1220:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \return
1221:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Each bit corresponds to a single switch, where a bit value of 0 is open
1222:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * and 1 is closed.
1223:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Compare this value to the switch masks in \ref cy_en_sar_mux_switch_fw_ctrl_t.
1224:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1225:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *******************************************************************************/
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 104


1226:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** uint32_t Cy_SAR_GetAnalogSwitch(const SAR_Type *base, cy_en_sar_switch_register_sel_t switchSelect)
1227:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** {
 2582              		.loc 2 1227 0
 2583              		.cfi_startproc
 2584              		@ args = 0, pretend = 0, frame = 8
 2585              		@ frame_needed = 1, uses_anonymous_args = 0
 2586 0000 80B5     		push	{r7, lr}
 2587              		.cfi_def_cfa_offset 8
 2588              		.cfi_offset 7, -8
 2589              		.cfi_offset 14, -4
 2590 0002 82B0     		sub	sp, sp, #8
 2591              		.cfi_def_cfa_offset 16
 2592 0004 00AF     		add	r7, sp, #0
 2593              		.cfi_def_cfa_register 7
 2594 0006 7860     		str	r0, [r7, #4]
 2595 0008 0A00     		movs	r2, r1
 2596 000a FB1C     		adds	r3, r7, #3
 2597 000c 1A70     		strb	r2, [r3]
1228:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     CY_ASSERT_L3(CY_SAR_SWITCHSELECT(switchSelect));
 2598              		.loc 2 1228 0
 2599 000e FB1C     		adds	r3, r7, #3
 2600 0010 1B78     		ldrb	r3, [r3]
 2601 0012 002B     		cmp	r3, #0
 2602 0014 05D0     		beq	.L178
 2603              		.loc 2 1228 0 is_stmt 0 discriminator 1
 2604 0016 074A     		ldr	r2, .L180
 2605 0018 074B     		ldr	r3, .L180+4
 2606 001a 1100     		movs	r1, r2
 2607 001c 1800     		movs	r0, r3
 2608 001e FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 2609              	.L178:
1229:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
1230:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     return SAR_MUX_SWITCH0(base);
 2610              		.loc 2 1230 0 is_stmt 1
 2611 0022 7A68     		ldr	r2, [r7, #4]
 2612 0024 C023     		movs	r3, #192
 2613 0026 9B00     		lsls	r3, r3, #2
 2614 0028 D358     		ldr	r3, [r2, r3]
1231:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** }
 2615              		.loc 2 1231 0
 2616 002a 1800     		movs	r0, r3
 2617 002c BD46     		mov	sp, r7
 2618 002e 02B0     		add	sp, sp, #8
 2619              		@ sp needed
 2620 0030 80BD     		pop	{r7, pc}
 2621              	.L181:
 2622 0032 C046     		.align	2
 2623              	.L180:
 2624 0034 CC040000 		.word	1228
 2625 0038 00000000 		.word	.LC0
 2626              		.cfi_endproc
 2627              	.LFE127:
 2628              		.size	Cy_SAR_GetAnalogSwitch, .-Cy_SAR_GetAnalogSwitch
 2629              		.section	.text.Cy_SAR_SetSwitchSarSeqCtrl,"ax",%progbits
 2630              		.align	2
 2631              		.global	Cy_SAR_SetSwitchSarSeqCtrl
 2632              		.code	16
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 105


 2633              		.thumb_func
 2634              		.type	Cy_SAR_SetSwitchSarSeqCtrl, %function
 2635              	Cy_SAR_SetSwitchSarSeqCtrl:
 2636              	.LFB128:
1232:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
1233:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
1234:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** /*******************************************************************************
1235:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Function Name: Cy_SAR_SetSwitchSarSeqCtrl
1236:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** ****************************************************************************//**
1237:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1238:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Enable or disable SARSEQ control of one or more switches.
1239:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Previously configured switches are untouched.
1240:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1241:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param base
1242:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Pointer to structure describing registers
1243:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1244:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param switchMask
1245:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * The mask of the switches.
1246:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Select one or more values from the \ref cy_en_sar_mux_switch_sq_ctrl_t enum
1247:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * and "OR" them together.
1248:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1249:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param ctrl
1250:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Enable or disable SARSEQ control. Select a value from \ref cy_en_sar_switch_sar_seq_ctrl_t.
1251:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1252:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \return None
1253:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1254:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \funcusage
1255:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1256:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \snippet sar_sut_01.cydsn/main_cm4.c SAR_SNIPPET_SET_SWITCH_SAR_SEQ_CTRL
1257:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1258:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *******************************************************************************/
1259:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** void Cy_SAR_SetSwitchSarSeqCtrl(SAR_Type *base, uint32_t switchMask, cy_en_sar_switch_sar_seq_ctrl_
1260:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** {
 2637              		.loc 2 1260 0
 2638              		.cfi_startproc
 2639              		@ args = 0, pretend = 0, frame = 16
 2640              		@ frame_needed = 1, uses_anonymous_args = 0
 2641 0000 80B5     		push	{r7, lr}
 2642              		.cfi_def_cfa_offset 8
 2643              		.cfi_offset 7, -8
 2644              		.cfi_offset 14, -4
 2645 0002 84B0     		sub	sp, sp, #16
 2646              		.cfi_def_cfa_offset 24
 2647 0004 00AF     		add	r7, sp, #0
 2648              		.cfi_def_cfa_register 7
 2649 0006 F860     		str	r0, [r7, #12]
 2650 0008 B960     		str	r1, [r7, #8]
 2651 000a FB1D     		adds	r3, r7, #7
 2652 000c 1A70     		strb	r2, [r3]
1261:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     CY_ASSERT_L2(CY_SAR_SQMASK(switchMask));
 2653              		.loc 2 1261 0
 2654 000e BB68     		ldr	r3, [r7, #8]
 2655 0010 1B4A     		ldr	r2, .L189
 2656 0012 1340     		ands	r3, r2
 2657 0014 05D0     		beq	.L183
 2658              		.loc 2 1261 0 is_stmt 0 discriminator 1
 2659 0016 1B4A     		ldr	r2, .L189+4
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 106


 2660 0018 1B4B     		ldr	r3, .L189+8
 2661 001a 1100     		movs	r1, r2
 2662 001c 1800     		movs	r0, r3
 2663 001e FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 2664              	.L183:
1262:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     CY_ASSERT_L3(CY_SAR_SQCTRL(ctrl));
 2665              		.loc 2 1262 0 is_stmt 1
 2666 0022 FB1D     		adds	r3, r7, #7
 2667 0024 1B78     		ldrb	r3, [r3]
 2668 0026 012B     		cmp	r3, #1
 2669 0028 09D0     		beq	.L184
 2670              		.loc 2 1262 0 is_stmt 0 discriminator 1
 2671 002a FB1D     		adds	r3, r7, #7
 2672 002c 1B78     		ldrb	r3, [r3]
 2673 002e 002B     		cmp	r3, #0
 2674 0030 05D0     		beq	.L184
 2675              		.loc 2 1262 0 discriminator 2
 2676 0032 164A     		ldr	r2, .L189+12
 2677 0034 144B     		ldr	r3, .L189+8
 2678 0036 1100     		movs	r1, r2
 2679 0038 1800     		movs	r0, r3
 2680 003a FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 2681              	.L184:
1263:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
1264:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     switch(ctrl)
 2682              		.loc 2 1264 0 is_stmt 1
 2683 003e FB1D     		adds	r3, r7, #7
 2684 0040 1B78     		ldrb	r3, [r3]
 2685 0042 012B     		cmp	r3, #1
 2686 0044 0BD1     		bne	.L188
1265:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     {
1266:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     case CY_SAR_SWITCH_SEQ_CTRL_ENABLE:
1267:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_MUX_SWITCH_SQ_CTRL(base) |= switchMask;
 2687              		.loc 2 1267 0
 2688 0046 FA68     		ldr	r2, [r7, #12]
 2689 0048 D123     		movs	r3, #209
 2690 004a 9B00     		lsls	r3, r3, #2
 2691 004c D258     		ldr	r2, [r2, r3]
 2692 004e BB68     		ldr	r3, [r7, #8]
 2693 0050 1A43     		orrs	r2, r3
 2694 0052 1100     		movs	r1, r2
 2695 0054 FA68     		ldr	r2, [r7, #12]
 2696 0056 D123     		movs	r3, #209
 2697 0058 9B00     		lsls	r3, r3, #2
 2698 005a D150     		str	r1, [r2, r3]
1268:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         break;
 2699              		.loc 2 1268 0
 2700 005c 0CE0     		b	.L187
 2701              	.L188:
1269:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     case CY_SAR_SWITCH_SEQ_CTRL_DISABLE:
1270:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     default:
1271:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_MUX_SWITCH_SQ_CTRL(base) &= ~switchMask;
 2702              		.loc 2 1271 0
 2703 005e FA68     		ldr	r2, [r7, #12]
 2704 0060 D123     		movs	r3, #209
 2705 0062 9B00     		lsls	r3, r3, #2
 2706 0064 D358     		ldr	r3, [r2, r3]
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 107


 2707 0066 BA68     		ldr	r2, [r7, #8]
 2708 0068 D243     		mvns	r2, r2
 2709 006a 1A40     		ands	r2, r3
 2710 006c 1100     		movs	r1, r2
 2711 006e FA68     		ldr	r2, [r7, #12]
 2712 0070 D123     		movs	r3, #209
 2713 0072 9B00     		lsls	r3, r3, #2
 2714 0074 D150     		str	r1, [r2, r3]
1272:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         break;
 2715              		.loc 2 1272 0
 2716 0076 C046     		nop
 2717              	.L187:
1273:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
1274:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** }
 2718              		.loc 2 1274 0
 2719 0078 C046     		nop
 2720 007a BD46     		mov	sp, r7
 2721 007c 04B0     		add	sp, sp, #16
 2722              		@ sp needed
 2723 007e 80BD     		pop	{r7, pc}
 2724              	.L190:
 2725              		.align	2
 2726              	.L189:
 2727 0080 00FF30FF 		.word	-13566208
 2728 0084 ED040000 		.word	1261
 2729 0088 00000000 		.word	.LC0
 2730 008c EE040000 		.word	1262
 2731              		.cfi_endproc
 2732              	.LFE128:
 2733              		.size	Cy_SAR_SetSwitchSarSeqCtrl, .-Cy_SAR_SetSwitchSarSeqCtrl
 2734              		.section	.text.Cy_SAR_DeepSleepCallback,"ax",%progbits
 2735              		.align	2
 2736              		.global	Cy_SAR_DeepSleepCallback
 2737              		.code	16
 2738              		.thumb_func
 2739              		.type	Cy_SAR_DeepSleepCallback, %function
 2740              	Cy_SAR_DeepSleepCallback:
 2741              	.LFB129:
1275:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
1276:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
1277:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** /*******************************************************************************
1278:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Function Name: Cy_SAR_DeepSleepCallback
1279:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** ****************************************************************************//**
1280:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1281:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Callback to prepare the SAR before entering Deep Sleep
1282:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * and to re-enable the SAR after exiting Deep Sleep.
1283:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1284:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param callbackParams
1285:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Pointer to structure of type \ref cy_stc_syspm_callback_params_t
1286:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1287:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param mode
1288:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Callback mode, see \ref cy_en_syspm_callback_mode_t
1289:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1290:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \return
1291:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * See \ref cy_en_syspm_status_t
1292:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1293:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \funcusage
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 108


1294:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1295:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_DEEPSLEEP_CALLBACK
1296:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1297:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *******************************************************************************/
1298:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** cy_en_syspm_status_t Cy_SAR_DeepSleepCallback(cy_stc_syspm_callback_params_t *callbackParams, cy_en
1299:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** {
 2742              		.loc 2 1299 0
 2743              		.cfi_startproc
 2744              		@ args = 0, pretend = 0, frame = 16
 2745              		@ frame_needed = 1, uses_anonymous_args = 0
 2746 0000 80B5     		push	{r7, lr}
 2747              		.cfi_def_cfa_offset 8
 2748              		.cfi_offset 7, -8
 2749              		.cfi_offset 14, -4
 2750 0002 84B0     		sub	sp, sp, #16
 2751              		.cfi_def_cfa_offset 24
 2752 0004 00AF     		add	r7, sp, #0
 2753              		.cfi_def_cfa_register 7
 2754 0006 7860     		str	r0, [r7, #4]
 2755 0008 0A00     		movs	r2, r1
 2756 000a FB1C     		adds	r3, r7, #3
 2757 000c 1A70     		strb	r2, [r3]
1300:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     cy_en_syspm_status_t returnValue = CY_SYSPM_SUCCESS;
 2758              		.loc 2 1300 0
 2759 000e 0023     		movs	r3, #0
 2760 0010 FB60     		str	r3, [r7, #12]
1301:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
1302:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     if (CY_SYSPM_BEFORE_TRANSITION == mode)
 2761              		.loc 2 1302 0
 2762 0012 FB1C     		adds	r3, r7, #3
 2763 0014 1B78     		ldrb	r3, [r3]
 2764 0016 042B     		cmp	r3, #4
 2765 0018 05D1     		bne	.L192
1303:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     { /* Actions that should be done before entering the Deep Sleep mode */
1304:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         Cy_SAR_DeepSleep((SAR_V1_Type *)callbackParams->base);
 2766              		.loc 2 1304 0
 2767 001a 7B68     		ldr	r3, [r7, #4]
 2768 001c 1B68     		ldr	r3, [r3]
 2769 001e 1800     		movs	r0, r3
 2770 0020 FFF7FEFF 		bl	Cy_SAR_DeepSleep
 2771 0024 08E0     		b	.L193
 2772              	.L192:
1305:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
1306:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     else if (CY_SYSPM_AFTER_TRANSITION == mode)
 2773              		.loc 2 1306 0
 2774 0026 FB1C     		adds	r3, r7, #3
 2775 0028 1B78     		ldrb	r3, [r3]
 2776 002a 082B     		cmp	r3, #8
 2777 002c 04D1     		bne	.L193
1307:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     { /* Actions that should be done after exiting the Deep Sleep mode */
1308:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         Cy_SAR_Wakeup((SAR_V1_Type *)callbackParams->base);
 2778              		.loc 2 1308 0
 2779 002e 7B68     		ldr	r3, [r7, #4]
 2780 0030 1B68     		ldr	r3, [r3]
 2781 0032 1800     		movs	r0, r3
 2782 0034 FFF7FEFF 		bl	Cy_SAR_Wakeup
 2783              	.L193:
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 109


1309:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
1310:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     else
1311:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     { /* Does nothing in other modes */
1312:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
1313:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
1314:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     return returnValue;
 2784              		.loc 2 1314 0
 2785 0038 FB68     		ldr	r3, [r7, #12]
1315:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** }
 2786              		.loc 2 1315 0
 2787 003a 1800     		movs	r0, r3
 2788 003c BD46     		mov	sp, r7
 2789 003e 04B0     		add	sp, sp, #16
 2790              		@ sp needed
 2791 0040 80BD     		pop	{r7, pc}
 2792              		.cfi_endproc
 2793              	.LFE129:
 2794              		.size	Cy_SAR_DeepSleepCallback, .-Cy_SAR_DeepSleepCallback
 2795 0042 C046     		.text
 2796              	.Letext0:
 2797              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 2798              		.file 4 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 2799              		.file 5 "Generated_Source\\PSoC6\\pdl\\devices/psoc6/include/ip/cyip_sar.h"
 2800              		.file 6 "Generated_Source\\PSoC6\\pdl\\devices/psoc6/include/psoc6_01_config.h"
 2801              		.file 7 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/device/cy_device.h"
 2802              		.file 8 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/syslib/cy_syslib.h"
 2803              		.file 9 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/syspm/cy_syspm.h"
 2804              		.section	.debug_info,"",%progbits
 2805              	.Ldebug_info0:
 2806 0000 C1140000 		.4byte	0x14c1
 2807 0004 0400     		.2byte	0x4
 2808 0006 00000000 		.4byte	.Ldebug_abbrev0
 2809 000a 04       		.byte	0x4
 2810 000b 01       		.uleb128 0x1
 2811 000c AF110000 		.4byte	.LASF308
 2812 0010 0C       		.byte	0xc
 2813 0011 6F0E0000 		.4byte	.LASF309
 2814 0015 0B060000 		.4byte	.LASF310
 2815 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2816 001d 00000000 		.4byte	0
 2817 0021 00000000 		.4byte	.Ldebug_line0
 2818 0025 02       		.uleb128 0x2
 2819 0026 01       		.byte	0x1
 2820 0027 06       		.byte	0x6
 2821 0028 74110000 		.4byte	.LASF0
 2822 002c 03       		.uleb128 0x3
 2823 002d 650E0000 		.4byte	.LASF2
 2824 0031 03       		.byte	0x3
 2825 0032 1D       		.byte	0x1d
 2826 0033 37000000 		.4byte	0x37
 2827 0037 02       		.uleb128 0x2
 2828 0038 01       		.byte	0x1
 2829 0039 08       		.byte	0x8
 2830 003a EF0B0000 		.4byte	.LASF1
 2831 003e 03       		.uleb128 0x3
 2832 003f 080A0000 		.4byte	.LASF3
 2833 0043 03       		.byte	0x3
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 110


 2834 0044 29       		.byte	0x29
 2835 0045 49000000 		.4byte	0x49
 2836 0049 02       		.uleb128 0x2
 2837 004a 02       		.byte	0x2
 2838 004b 05       		.byte	0x5
 2839 004c 39020000 		.4byte	.LASF4
 2840 0050 03       		.uleb128 0x3
 2841 0051 11050000 		.4byte	.LASF5
 2842 0055 03       		.byte	0x3
 2843 0056 2B       		.byte	0x2b
 2844 0057 5B000000 		.4byte	0x5b
 2845 005b 02       		.uleb128 0x2
 2846 005c 02       		.byte	0x2
 2847 005d 07       		.byte	0x7
 2848 005e 730B0000 		.4byte	.LASF6
 2849 0062 03       		.uleb128 0x3
 2850 0063 9D010000 		.4byte	.LASF7
 2851 0067 03       		.byte	0x3
 2852 0068 3F       		.byte	0x3f
 2853 0069 6D000000 		.4byte	0x6d
 2854 006d 02       		.uleb128 0x2
 2855 006e 04       		.byte	0x4
 2856 006f 05       		.byte	0x5
 2857 0070 110D0000 		.4byte	.LASF8
 2858 0074 03       		.uleb128 0x3
 2859 0075 14100000 		.4byte	.LASF9
 2860 0079 03       		.byte	0x3
 2861 007a 41       		.byte	0x41
 2862 007b 7F000000 		.4byte	0x7f
 2863 007f 02       		.uleb128 0x2
 2864 0080 04       		.byte	0x4
 2865 0081 07       		.byte	0x7
 2866 0082 2F0F0000 		.4byte	.LASF10
 2867 0086 03       		.uleb128 0x3
 2868 0087 5F0B0000 		.4byte	.LASF11
 2869 008b 03       		.byte	0x3
 2870 008c 59       		.byte	0x59
 2871 008d 91000000 		.4byte	0x91
 2872 0091 02       		.uleb128 0x2
 2873 0092 08       		.byte	0x8
 2874 0093 05       		.byte	0x5
 2875 0094 43090000 		.4byte	.LASF12
 2876 0098 02       		.uleb128 0x2
 2877 0099 08       		.byte	0x8
 2878 009a 07       		.byte	0x7
 2879 009b 75040000 		.4byte	.LASF13
 2880 009f 04       		.uleb128 0x4
 2881 00a0 04       		.byte	0x4
 2882 00a1 05       		.byte	0x5
 2883 00a2 696E7400 		.ascii	"int\000"
 2884 00a6 02       		.uleb128 0x2
 2885 00a7 04       		.byte	0x4
 2886 00a8 07       		.byte	0x7
 2887 00a9 2C010000 		.4byte	.LASF14
 2888 00ad 03       		.uleb128 0x3
 2889 00ae 6F080000 		.4byte	.LASF15
 2890 00b2 04       		.byte	0x4
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 111


 2891 00b3 18       		.byte	0x18
 2892 00b4 2C000000 		.4byte	0x2c
 2893 00b8 03       		.uleb128 0x3
 2894 00b9 53040000 		.4byte	.LASF16
 2895 00bd 04       		.byte	0x4
 2896 00be 20       		.byte	0x20
 2897 00bf 3E000000 		.4byte	0x3e
 2898 00c3 03       		.uleb128 0x3
 2899 00c4 920B0000 		.4byte	.LASF17
 2900 00c8 04       		.byte	0x4
 2901 00c9 24       		.byte	0x24
 2902 00ca 50000000 		.4byte	0x50
 2903 00ce 03       		.uleb128 0x3
 2904 00cf 600F0000 		.4byte	.LASF18
 2905 00d3 04       		.byte	0x4
 2906 00d4 2C       		.byte	0x2c
 2907 00d5 62000000 		.4byte	0x62
 2908 00d9 03       		.uleb128 0x3
 2909 00da FB030000 		.4byte	.LASF19
 2910 00de 04       		.byte	0x4
 2911 00df 30       		.byte	0x30
 2912 00e0 74000000 		.4byte	0x74
 2913 00e4 03       		.uleb128 0x3
 2914 00e5 DA050000 		.4byte	.LASF20
 2915 00e9 04       		.byte	0x4
 2916 00ea 38       		.byte	0x38
 2917 00eb 86000000 		.4byte	0x86
 2918 00ef 02       		.uleb128 0x2
 2919 00f0 08       		.byte	0x8
 2920 00f1 04       		.byte	0x4
 2921 00f2 860B0000 		.4byte	.LASF21
 2922 00f6 02       		.uleb128 0x2
 2923 00f7 04       		.byte	0x4
 2924 00f8 07       		.byte	0x7
 2925 00f9 3F0C0000 		.4byte	.LASF22
 2926 00fd 05       		.uleb128 0x5
 2927 00fe D9000000 		.4byte	0xd9
 2928 0102 06       		.uleb128 0x6
 2929 0103 FD000000 		.4byte	0xfd
 2930 0107 07       		.uleb128 0x7
 2931 0108 02010000 		.4byte	0x102
 2932 010c 17010000 		.4byte	0x117
 2933 0110 08       		.uleb128 0x8
 2934 0111 F6000000 		.4byte	0xf6
 2935 0115 01       		.byte	0x1
 2936 0116 00       		.byte	0
 2937 0117 07       		.uleb128 0x7
 2938 0118 FD000000 		.4byte	0xfd
 2939 011c 27010000 		.4byte	0x127
 2940 0120 08       		.uleb128 0x8
 2941 0121 F6000000 		.4byte	0xf6
 2942 0125 0F       		.byte	0xf
 2943 0126 00       		.byte	0
 2944 0127 07       		.uleb128 0x7
 2945 0128 02010000 		.4byte	0x102
 2946 012c 37010000 		.4byte	0x137
 2947 0130 08       		.uleb128 0x8
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 112


 2948 0131 F6000000 		.4byte	0xf6
 2949 0135 0F       		.byte	0xf
 2950 0136 00       		.byte	0
 2951 0137 07       		.uleb128 0x7
 2952 0138 02010000 		.4byte	0x102
 2953 013c 47010000 		.4byte	0x147
 2954 0140 08       		.uleb128 0x8
 2955 0141 F6000000 		.4byte	0xf6
 2956 0145 02       		.byte	0x2
 2957 0146 00       		.byte	0
 2958 0147 07       		.uleb128 0x7
 2959 0148 02010000 		.4byte	0x102
 2960 014c 57010000 		.4byte	0x157
 2961 0150 08       		.uleb128 0x8
 2962 0151 F6000000 		.4byte	0xf6
 2963 0155 0E       		.byte	0xe
 2964 0156 00       		.byte	0
 2965 0157 09       		.uleb128 0x9
 2966 0158 080F     		.2byte	0xf08
 2967 015a 05       		.byte	0x5
 2968 015b 21       		.byte	0x21
 2969 015c DF030000 		.4byte	0x3df
 2970 0160 0A       		.uleb128 0xa
 2971 0161 BD130000 		.4byte	.LASF23
 2972 0165 05       		.byte	0x5
 2973 0166 22       		.byte	0x22
 2974 0167 FD000000 		.4byte	0xfd
 2975 016b 00       		.byte	0
 2976 016c 0A       		.uleb128 0xa
 2977 016d 810A0000 		.4byte	.LASF24
 2978 0171 05       		.byte	0x5
 2979 0172 23       		.byte	0x23
 2980 0173 FD000000 		.4byte	0xfd
 2981 0177 04       		.byte	0x4
 2982 0178 0A       		.uleb128 0xa
 2983 0179 2B000000 		.4byte	.LASF25
 2984 017d 05       		.byte	0x5
 2985 017e 24       		.byte	0x24
 2986 017f E4030000 		.4byte	0x3e4
 2987 0183 08       		.byte	0x8
 2988 0184 0A       		.uleb128 0xa
 2989 0185 51020000 		.4byte	.LASF26
 2990 0189 05       		.byte	0x5
 2991 018a 25       		.byte	0x25
 2992 018b FD000000 		.4byte	0xfd
 2993 018f 10       		.byte	0x10
 2994 0190 0A       		.uleb128 0xa
 2995 0191 F8040000 		.4byte	.LASF27
 2996 0195 05       		.byte	0x5
 2997 0196 26       		.byte	0x26
 2998 0197 FD000000 		.4byte	0xfd
 2999 019b 14       		.byte	0x14
 3000 019c 0A       		.uleb128 0xa
 3001 019d AC0D0000 		.4byte	.LASF28
 3002 01a1 05       		.byte	0x5
 3003 01a2 27       		.byte	0x27
 3004 01a3 FD000000 		.4byte	0xfd
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 113


 3005 01a7 18       		.byte	0x18
 3006 01a8 0A       		.uleb128 0xa
 3007 01a9 58060000 		.4byte	.LASF29
 3008 01ad 05       		.byte	0x5
 3009 01ae 28       		.byte	0x28
 3010 01af FD000000 		.4byte	0xfd
 3011 01b3 1C       		.byte	0x1c
 3012 01b4 0A       		.uleb128 0xa
 3013 01b5 BF000000 		.4byte	.LASF30
 3014 01b9 05       		.byte	0x5
 3015 01ba 29       		.byte	0x29
 3016 01bb FD000000 		.4byte	0xfd
 3017 01bf 20       		.byte	0x20
 3018 01c0 0A       		.uleb128 0xa
 3019 01c1 160B0000 		.4byte	.LASF31
 3020 01c5 05       		.byte	0x5
 3021 01c6 2A       		.byte	0x2a
 3022 01c7 FD000000 		.4byte	0xfd
 3023 01cb 24       		.byte	0x24
 3024 01cc 0A       		.uleb128 0xa
 3025 01cd B2120000 		.4byte	.LASF32
 3026 01d1 05       		.byte	0x5
 3027 01d2 2B       		.byte	0x2b
 3028 01d3 FE030000 		.4byte	0x3fe
 3029 01d7 28       		.byte	0x28
 3030 01d8 0A       		.uleb128 0xa
 3031 01d9 C50F0000 		.4byte	.LASF33
 3032 01dd 05       		.byte	0x5
 3033 01de 2C       		.byte	0x2c
 3034 01df 03040000 		.4byte	0x403
 3035 01e3 80       		.byte	0x80
 3036 01e4 0A       		.uleb128 0xa
 3037 01e5 920C0000 		.4byte	.LASF34
 3038 01e9 05       		.byte	0x5
 3039 01ea 2D       		.byte	0x2d
 3040 01eb 0D040000 		.4byte	0x40d
 3041 01ef C0       		.byte	0xc0
 3042 01f0 0B       		.uleb128 0xb
 3043 01f1 FB0D0000 		.4byte	.LASF35
 3044 01f5 05       		.byte	0x5
 3045 01f6 2E       		.byte	0x2e
 3046 01f7 17040000 		.4byte	0x417
 3047 01fb 0001     		.2byte	0x100
 3048 01fd 0B       		.uleb128 0xb
 3049 01fe 9C0C0000 		.4byte	.LASF36
 3050 0202 05       		.byte	0x5
 3051 0203 2F       		.byte	0x2f
 3052 0204 21040000 		.4byte	0x421
 3053 0208 4001     		.2byte	0x140
 3054 020a 0B       		.uleb128 0xb
 3055 020b 300A0000 		.4byte	.LASF37
 3056 020f 05       		.byte	0x5
 3057 0210 30       		.byte	0x30
 3058 0211 2B040000 		.4byte	0x42b
 3059 0215 8001     		.2byte	0x180
 3060 0217 0B       		.uleb128 0xb
 3061 0218 A60C0000 		.4byte	.LASF38
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 114


 3062 021c 05       		.byte	0x5
 3063 021d 31       		.byte	0x31
 3064 021e 35040000 		.4byte	0x435
 3065 0222 C001     		.2byte	0x1c0
 3066 0224 0B       		.uleb128 0xb
 3067 0225 46000000 		.4byte	.LASF39
 3068 0229 05       		.byte	0x5
 3069 022a 32       		.byte	0x32
 3070 022b 02010000 		.4byte	0x102
 3071 022f 0002     		.2byte	0x200
 3072 0231 0B       		.uleb128 0xb
 3073 0232 740F0000 		.4byte	.LASF40
 3074 0236 05       		.byte	0x5
 3075 0237 33       		.byte	0x33
 3076 0238 02010000 		.4byte	0x102
 3077 023c 0402     		.2byte	0x204
 3078 023e 0B       		.uleb128 0xb
 3079 023f A7010000 		.4byte	.LASF41
 3080 0243 05       		.byte	0x5
 3081 0244 34       		.byte	0x34
 3082 0245 02010000 		.4byte	0x102
 3083 0249 0802     		.2byte	0x208
 3084 024b 0B       		.uleb128 0xb
 3085 024c 19080000 		.4byte	.LASF42
 3086 0250 05       		.byte	0x5
 3087 0251 35       		.byte	0x35
 3088 0252 02010000 		.4byte	0x102
 3089 0256 0C02     		.2byte	0x20c
 3090 0258 0B       		.uleb128 0xb
 3091 0259 18040000 		.4byte	.LASF43
 3092 025d 05       		.byte	0x5
 3093 025e 36       		.byte	0x36
 3094 025f FD000000 		.4byte	0xfd
 3095 0263 1002     		.2byte	0x210
 3096 0265 0B       		.uleb128 0xb
 3097 0266 A6020000 		.4byte	.LASF44
 3098 026a 05       		.byte	0x5
 3099 026b 37       		.byte	0x37
 3100 026c FD000000 		.4byte	0xfd
 3101 0270 1402     		.2byte	0x214
 3102 0272 0B       		.uleb128 0xb
 3103 0273 770A0000 		.4byte	.LASF45
 3104 0277 05       		.byte	0x5
 3105 0278 38       		.byte	0x38
 3106 0279 FD000000 		.4byte	0xfd
 3107 027d 1802     		.2byte	0x218
 3108 027f 0B       		.uleb128 0xb
 3109 0280 E50E0000 		.4byte	.LASF46
 3110 0284 05       		.byte	0x5
 3111 0285 39       		.byte	0x39
 3112 0286 02010000 		.4byte	0x102
 3113 028a 1C02     		.2byte	0x21c
 3114 028c 0B       		.uleb128 0xb
 3115 028d 43020000 		.4byte	.LASF47
 3116 0291 05       		.byte	0x5
 3117 0292 3A       		.byte	0x3a
 3118 0293 FD000000 		.4byte	0xfd
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 115


 3119 0297 2002     		.2byte	0x220
 3120 0299 0B       		.uleb128 0xb
 3121 029a 8E070000 		.4byte	.LASF48
 3122 029e 05       		.byte	0x5
 3123 029f 3B       		.byte	0x3b
 3124 02a0 FD000000 		.4byte	0xfd
 3125 02a4 2402     		.2byte	0x224
 3126 02a6 0B       		.uleb128 0xb
 3127 02a7 71100000 		.4byte	.LASF49
 3128 02ab 05       		.byte	0x5
 3129 02ac 3C       		.byte	0x3c
 3130 02ad FD000000 		.4byte	0xfd
 3131 02b1 2802     		.2byte	0x228
 3132 02b3 0B       		.uleb128 0xb
 3133 02b4 67070000 		.4byte	.LASF50
 3134 02b8 05       		.byte	0x5
 3135 02b9 3D       		.byte	0x3d
 3136 02ba 02010000 		.4byte	0x102
 3137 02be 2C02     		.2byte	0x22c
 3138 02c0 0B       		.uleb128 0xb
 3139 02c1 600A0000 		.4byte	.LASF51
 3140 02c5 05       		.byte	0x5
 3141 02c6 3E       		.byte	0x3e
 3142 02c7 FD000000 		.4byte	0xfd
 3143 02cb 3002     		.2byte	0x230
 3144 02cd 0B       		.uleb128 0xb
 3145 02ce 0C090000 		.4byte	.LASF52
 3146 02d2 05       		.byte	0x5
 3147 02d3 3F       		.byte	0x3f
 3148 02d4 FD000000 		.4byte	0xfd
 3149 02d8 3402     		.2byte	0x234
 3150 02da 0B       		.uleb128 0xb
 3151 02db F4050000 		.4byte	.LASF53
 3152 02df 05       		.byte	0x5
 3153 02e0 40       		.byte	0x40
 3154 02e1 FD000000 		.4byte	0xfd
 3155 02e5 3802     		.2byte	0x238
 3156 02e7 0B       		.uleb128 0xb
 3157 02e8 34000000 		.4byte	.LASF54
 3158 02ec 05       		.byte	0x5
 3159 02ed 41       		.byte	0x41
 3160 02ee 02010000 		.4byte	0x102
 3161 02f2 3C02     		.2byte	0x23c
 3162 02f4 0B       		.uleb128 0xb
 3163 02f5 39010000 		.4byte	.LASF55
 3164 02f9 05       		.byte	0x5
 3165 02fa 42       		.byte	0x42
 3166 02fb 02010000 		.4byte	0x102
 3167 02ff 4002     		.2byte	0x240
 3168 0301 0B       		.uleb128 0xb
 3169 0302 B00C0000 		.4byte	.LASF56
 3170 0306 05       		.byte	0x5
 3171 0307 43       		.byte	0x43
 3172 0308 3F040000 		.4byte	0x43f
 3173 030c 4402     		.2byte	0x244
 3174 030e 0B       		.uleb128 0xb
 3175 030f 2E080000 		.4byte	.LASF57
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 116


 3176 0313 05       		.byte	0x5
 3177 0314 44       		.byte	0x44
 3178 0315 FD000000 		.4byte	0xfd
 3179 0319 8002     		.2byte	0x280
 3180 031b 0B       		.uleb128 0xb
 3181 031c BA0C0000 		.4byte	.LASF58
 3182 0320 05       		.byte	0x5
 3183 0321 45       		.byte	0x45
 3184 0322 49040000 		.4byte	0x449
 3185 0326 8402     		.2byte	0x284
 3186 0328 0B       		.uleb128 0xb
 3187 0329 76020000 		.4byte	.LASF59
 3188 032d 05       		.byte	0x5
 3189 032e 46       		.byte	0x46
 3190 032f 02010000 		.4byte	0x102
 3191 0333 9002     		.2byte	0x290
 3192 0335 0B       		.uleb128 0xb
 3193 0336 C40C0000 		.4byte	.LASF60
 3194 033a 05       		.byte	0x5
 3195 033b 47       		.byte	0x47
 3196 033c 53040000 		.4byte	0x453
 3197 0340 9402     		.2byte	0x294
 3198 0342 0B       		.uleb128 0xb
 3199 0343 CB120000 		.4byte	.LASF61
 3200 0347 05       		.byte	0x5
 3201 0348 48       		.byte	0x48
 3202 0349 02010000 		.4byte	0x102
 3203 034d A002     		.2byte	0x2a0
 3204 034f 0B       		.uleb128 0xb
 3205 0350 55080000 		.4byte	.LASF62
 3206 0354 05       		.byte	0x5
 3207 0355 49       		.byte	0x49
 3208 0356 02010000 		.4byte	0x102
 3209 035a A402     		.2byte	0x2a4
 3210 035c 0B       		.uleb128 0xb
 3211 035d CE0C0000 		.4byte	.LASF63
 3212 0361 05       		.byte	0x5
 3213 0362 4A       		.byte	0x4a
 3214 0363 5D040000 		.4byte	0x45d
 3215 0367 A802     		.2byte	0x2a8
 3216 0369 0B       		.uleb128 0xb
 3217 036a 680F0000 		.4byte	.LASF64
 3218 036e 05       		.byte	0x5
 3219 036f 4B       		.byte	0x4b
 3220 0370 FD000000 		.4byte	0xfd
 3221 0374 0003     		.2byte	0x300
 3222 0376 0B       		.uleb128 0xb
 3223 0377 A20A0000 		.4byte	.LASF65
 3224 037b 05       		.byte	0x5
 3225 037c 4C       		.byte	0x4c
 3226 037d FD000000 		.4byte	0xfd
 3227 0381 0403     		.2byte	0x304
 3228 0383 0B       		.uleb128 0xb
 3229 0384 D80C0000 		.4byte	.LASF66
 3230 0388 05       		.byte	0x5
 3231 0389 4D       		.byte	0x4d
 3232 038a 77040000 		.4byte	0x477
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 117


 3233 038e 0803     		.2byte	0x308
 3234 0390 0B       		.uleb128 0xb
 3235 0391 77060000 		.4byte	.LASF67
 3236 0395 05       		.byte	0x5
 3237 0396 4E       		.byte	0x4e
 3238 0397 FD000000 		.4byte	0xfd
 3239 039b 4003     		.2byte	0x340
 3240 039d 0B       		.uleb128 0xb
 3241 039e FE0C0000 		.4byte	.LASF68
 3242 03a2 05       		.byte	0x5
 3243 03a3 4F       		.byte	0x4f
 3244 03a4 FD000000 		.4byte	0xfd
 3245 03a8 4403     		.2byte	0x344
 3246 03aa 0B       		.uleb128 0xb
 3247 03ab 61120000 		.4byte	.LASF69
 3248 03af 05       		.byte	0x5
 3249 03b0 50       		.byte	0x50
 3250 03b1 02010000 		.4byte	0x102
 3251 03b5 4803     		.2byte	0x348
 3252 03b7 0B       		.uleb128 0xb
 3253 03b8 8C100000 		.4byte	.LASF70
 3254 03bc 05       		.byte	0x5
 3255 03bd 51       		.byte	0x51
 3256 03be 92040000 		.4byte	0x492
 3257 03c2 4C03     		.2byte	0x34c
 3258 03c4 0B       		.uleb128 0xb
 3259 03c5 00100000 		.4byte	.LASF71
 3260 03c9 05       		.byte	0x5
 3261 03ca 52       		.byte	0x52
 3262 03cb FD000000 		.4byte	0xfd
 3263 03cf 000F     		.2byte	0xf00
 3264 03d1 0B       		.uleb128 0xb
 3265 03d2 0A100000 		.4byte	.LASF72
 3266 03d6 05       		.byte	0x5
 3267 03d7 53       		.byte	0x53
 3268 03d8 FD000000 		.4byte	0xfd
 3269 03dc 040F     		.2byte	0xf04
 3270 03de 00       		.byte	0
 3271 03df 05       		.uleb128 0x5
 3272 03e0 07010000 		.4byte	0x107
 3273 03e4 06       		.uleb128 0x6
 3274 03e5 DF030000 		.4byte	0x3df
 3275 03e9 07       		.uleb128 0x7
 3276 03ea 02010000 		.4byte	0x102
 3277 03ee F9030000 		.4byte	0x3f9
 3278 03f2 08       		.uleb128 0x8
 3279 03f3 F6000000 		.4byte	0xf6
 3280 03f7 15       		.byte	0x15
 3281 03f8 00       		.byte	0
 3282 03f9 05       		.uleb128 0x5
 3283 03fa E9030000 		.4byte	0x3e9
 3284 03fe 06       		.uleb128 0x6
 3285 03ff F9030000 		.4byte	0x3f9
 3286 0403 05       		.uleb128 0x5
 3287 0404 17010000 		.4byte	0x117
 3288 0408 05       		.uleb128 0x5
 3289 0409 27010000 		.4byte	0x127
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 118


 3290 040d 06       		.uleb128 0x6
 3291 040e 08040000 		.4byte	0x408
 3292 0412 05       		.uleb128 0x5
 3293 0413 27010000 		.4byte	0x127
 3294 0417 06       		.uleb128 0x6
 3295 0418 12040000 		.4byte	0x412
 3296 041c 05       		.uleb128 0x5
 3297 041d 27010000 		.4byte	0x127
 3298 0421 06       		.uleb128 0x6
 3299 0422 1C040000 		.4byte	0x41c
 3300 0426 05       		.uleb128 0x5
 3301 0427 27010000 		.4byte	0x127
 3302 042b 06       		.uleb128 0x6
 3303 042c 26040000 		.4byte	0x426
 3304 0430 05       		.uleb128 0x5
 3305 0431 27010000 		.4byte	0x127
 3306 0435 06       		.uleb128 0x6
 3307 0436 30040000 		.4byte	0x430
 3308 043a 05       		.uleb128 0x5
 3309 043b 47010000 		.4byte	0x147
 3310 043f 06       		.uleb128 0x6
 3311 0440 3A040000 		.4byte	0x43a
 3312 0444 05       		.uleb128 0x5
 3313 0445 37010000 		.4byte	0x137
 3314 0449 06       		.uleb128 0x6
 3315 044a 44040000 		.4byte	0x444
 3316 044e 05       		.uleb128 0x5
 3317 044f 37010000 		.4byte	0x137
 3318 0453 06       		.uleb128 0x6
 3319 0454 4E040000 		.4byte	0x44e
 3320 0458 05       		.uleb128 0x5
 3321 0459 E9030000 		.4byte	0x3e9
 3322 045d 06       		.uleb128 0x6
 3323 045e 58040000 		.4byte	0x458
 3324 0462 07       		.uleb128 0x7
 3325 0463 02010000 		.4byte	0x102
 3326 0467 72040000 		.4byte	0x472
 3327 046b 08       		.uleb128 0x8
 3328 046c F6000000 		.4byte	0xf6
 3329 0470 0D       		.byte	0xd
 3330 0471 00       		.byte	0
 3331 0472 05       		.uleb128 0x5
 3332 0473 62040000 		.4byte	0x462
 3333 0477 06       		.uleb128 0x6
 3334 0478 72040000 		.4byte	0x472
 3335 047c 07       		.uleb128 0x7
 3336 047d 02010000 		.4byte	0x102
 3337 0481 8D040000 		.4byte	0x48d
 3338 0485 0C       		.uleb128 0xc
 3339 0486 F6000000 		.4byte	0xf6
 3340 048a EC02     		.2byte	0x2ec
 3341 048c 00       		.byte	0
 3342 048d 05       		.uleb128 0x5
 3343 048e 7C040000 		.4byte	0x47c
 3344 0492 06       		.uleb128 0x6
 3345 0493 8D040000 		.4byte	0x48d
 3346 0497 03       		.uleb128 0x3
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 119


 3347 0498 27070000 		.4byte	.LASF73
 3348 049c 05       		.byte	0x5
 3349 049d 54       		.byte	0x54
 3350 049e 57010000 		.4byte	0x157
 3351 04a2 0D       		.uleb128 0xd
 3352 04a3 50030000 		.4byte	.LASF74
 3353 04a7 06       		.byte	0x6
 3354 04a8 5206     		.2byte	0x652
 3355 04aa 97040000 		.4byte	0x497
 3356 04ae 0E       		.uleb128 0xe
 3357 04af B8       		.byte	0xb8
 3358 04b0 07       		.byte	0x7
 3359 04b1 34       		.byte	0x34
 3360 04b2 BF080000 		.4byte	0x8bf
 3361 04b6 0A       		.uleb128 0xa
 3362 04b7 CC010000 		.4byte	.LASF75
 3363 04bb 07       		.byte	0x7
 3364 04bc 37       		.byte	0x37
 3365 04bd D9000000 		.4byte	0xd9
 3366 04c1 00       		.byte	0
 3367 04c2 0A       		.uleb128 0xa
 3368 04c3 48040000 		.4byte	.LASF76
 3369 04c7 07       		.byte	0x7
 3370 04c8 38       		.byte	0x38
 3371 04c9 D9000000 		.4byte	0xd9
 3372 04cd 04       		.byte	0x4
 3373 04ce 0A       		.uleb128 0xa
 3374 04cf DC000000 		.4byte	.LASF77
 3375 04d3 07       		.byte	0x7
 3376 04d4 39       		.byte	0x39
 3377 04d5 D9000000 		.4byte	0xd9
 3378 04d9 08       		.byte	0x8
 3379 04da 0A       		.uleb128 0xa
 3380 04db B7000000 		.4byte	.LASF78
 3381 04df 07       		.byte	0x7
 3382 04e0 3A       		.byte	0x3a
 3383 04e1 D9000000 		.4byte	0xd9
 3384 04e5 0C       		.byte	0xc
 3385 04e6 0A       		.uleb128 0xa
 3386 04e7 9B0B0000 		.4byte	.LASF79
 3387 04eb 07       		.byte	0x7
 3388 04ec 3B       		.byte	0x3b
 3389 04ed D9000000 		.4byte	0xd9
 3390 04f1 10       		.byte	0x10
 3391 04f2 0A       		.uleb128 0xa
 3392 04f3 120A0000 		.4byte	.LASF80
 3393 04f7 07       		.byte	0x7
 3394 04f8 3C       		.byte	0x3c
 3395 04f9 D9000000 		.4byte	0xd9
 3396 04fd 14       		.byte	0x14
 3397 04fe 0A       		.uleb128 0xa
 3398 04ff 9F060000 		.4byte	.LASF81
 3399 0503 07       		.byte	0x7
 3400 0504 3D       		.byte	0x3d
 3401 0505 D9000000 		.4byte	0xd9
 3402 0509 18       		.byte	0x18
 3403 050a 0A       		.uleb128 0xa
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 120


 3404 050b A9120000 		.4byte	.LASF82
 3405 050f 07       		.byte	0x7
 3406 0510 3E       		.byte	0x3e
 3407 0511 D9000000 		.4byte	0xd9
 3408 0515 1C       		.byte	0x1c
 3409 0516 0A       		.uleb128 0xa
 3410 0517 51090000 		.4byte	.LASF83
 3411 051b 07       		.byte	0x7
 3412 051c 3F       		.byte	0x3f
 3413 051d D9000000 		.4byte	0xd9
 3414 0521 20       		.byte	0x20
 3415 0522 0A       		.uleb128 0xa
 3416 0523 68090000 		.4byte	.LASF84
 3417 0527 07       		.byte	0x7
 3418 0528 40       		.byte	0x40
 3419 0529 D9000000 		.4byte	0xd9
 3420 052d 24       		.byte	0x24
 3421 052e 0A       		.uleb128 0xa
 3422 052f 340D0000 		.4byte	.LASF85
 3423 0533 07       		.byte	0x7
 3424 0534 43       		.byte	0x43
 3425 0535 AD000000 		.4byte	0xad
 3426 0539 28       		.byte	0x28
 3427 053a 0A       		.uleb128 0xa
 3428 053b 23040000 		.4byte	.LASF86
 3429 053f 07       		.byte	0x7
 3430 0540 44       		.byte	0x44
 3431 0541 AD000000 		.4byte	0xad
 3432 0545 29       		.byte	0x29
 3433 0546 0A       		.uleb128 0xa
 3434 0547 D10B0000 		.4byte	.LASF87
 3435 054b 07       		.byte	0x7
 3436 054c 45       		.byte	0x45
 3437 054d AD000000 		.4byte	0xad
 3438 0551 2A       		.byte	0x2a
 3439 0552 0A       		.uleb128 0xa
 3440 0553 620D0000 		.4byte	.LASF88
 3441 0557 07       		.byte	0x7
 3442 0558 46       		.byte	0x46
 3443 0559 AD000000 		.4byte	0xad
 3444 055d 2B       		.byte	0x2b
 3445 055e 0A       		.uleb128 0xa
 3446 055f 560D0000 		.4byte	.LASF89
 3447 0563 07       		.byte	0x7
 3448 0564 47       		.byte	0x47
 3449 0565 AD000000 		.4byte	0xad
 3450 0569 2C       		.byte	0x2c
 3451 056a 0A       		.uleb128 0xa
 3452 056b 220F0000 		.4byte	.LASF90
 3453 056f 07       		.byte	0x7
 3454 0570 48       		.byte	0x48
 3455 0571 AD000000 		.4byte	0xad
 3456 0575 2D       		.byte	0x2d
 3457 0576 0A       		.uleb128 0xa
 3458 0577 82130000 		.4byte	.LASF91
 3459 057b 07       		.byte	0x7
 3460 057c 49       		.byte	0x49
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 121


 3461 057d AD000000 		.4byte	0xad
 3462 0581 2E       		.byte	0x2e
 3463 0582 0A       		.uleb128 0xa
 3464 0583 73120000 		.4byte	.LASF92
 3465 0587 07       		.byte	0x7
 3466 0588 4A       		.byte	0x4a
 3467 0589 AD000000 		.4byte	0xad
 3468 058d 2F       		.byte	0x2f
 3469 058e 0A       		.uleb128 0xa
 3470 058f 23030000 		.4byte	.LASF93
 3471 0593 07       		.byte	0x7
 3472 0594 4B       		.byte	0x4b
 3473 0595 AD000000 		.4byte	0xad
 3474 0599 30       		.byte	0x30
 3475 059a 0A       		.uleb128 0xa
 3476 059b 970A0000 		.4byte	.LASF94
 3477 059f 07       		.byte	0x7
 3478 05a0 4E       		.byte	0x4e
 3479 05a1 AD000000 		.4byte	0xad
 3480 05a5 31       		.byte	0x31
 3481 05a6 0A       		.uleb128 0xa
 3482 05a7 8B110000 		.4byte	.LASF95
 3483 05ab 07       		.byte	0x7
 3484 05ac 4F       		.byte	0x4f
 3485 05ad AD000000 		.4byte	0xad
 3486 05b1 32       		.byte	0x32
 3487 05b2 0A       		.uleb128 0xa
 3488 05b3 6B0A0000 		.4byte	.LASF96
 3489 05b7 07       		.byte	0x7
 3490 05b8 50       		.byte	0x50
 3491 05b9 AD000000 		.4byte	0xad
 3492 05bd 33       		.byte	0x33
 3493 05be 0A       		.uleb128 0xa
 3494 05bf 73010000 		.4byte	.LASF97
 3495 05c3 07       		.byte	0x7
 3496 05c4 51       		.byte	0x51
 3497 05c5 AD000000 		.4byte	0xad
 3498 05c9 34       		.byte	0x34
 3499 05ca 0A       		.uleb128 0xa
 3500 05cb 410D0000 		.4byte	.LASF98
 3501 05cf 07       		.byte	0x7
 3502 05d0 52       		.byte	0x52
 3503 05d1 B8000000 		.4byte	0xb8
 3504 05d5 36       		.byte	0x36
 3505 05d6 0A       		.uleb128 0xa
 3506 05d7 FA010000 		.4byte	.LASF99
 3507 05db 07       		.byte	0x7
 3508 05dc 53       		.byte	0x53
 3509 05dd B8000000 		.4byte	0xb8
 3510 05e1 38       		.byte	0x38
 3511 05e2 0A       		.uleb128 0xa
 3512 05e3 24020000 		.4byte	.LASF100
 3513 05e7 07       		.byte	0x7
 3514 05e8 54       		.byte	0x54
 3515 05e9 B8000000 		.4byte	0xb8
 3516 05ed 3A       		.byte	0x3a
 3517 05ee 0A       		.uleb128 0xa
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 122


 3518 05ef BC120000 		.4byte	.LASF101
 3519 05f3 07       		.byte	0x7
 3520 05f4 55       		.byte	0x55
 3521 05f5 AD000000 		.4byte	0xad
 3522 05f9 3C       		.byte	0x3c
 3523 05fa 0A       		.uleb128 0xa
 3524 05fb AE050000 		.4byte	.LASF102
 3525 05ff 07       		.byte	0x7
 3526 0600 56       		.byte	0x56
 3527 0601 AD000000 		.4byte	0xad
 3528 0605 3D       		.byte	0x3d
 3529 0606 0A       		.uleb128 0xa
 3530 0607 C30B0000 		.4byte	.LASF103
 3531 060b 07       		.byte	0x7
 3532 060c 57       		.byte	0x57
 3533 060d AD000000 		.4byte	0xad
 3534 0611 3E       		.byte	0x3e
 3535 0612 0A       		.uleb128 0xa
 3536 0613 A6000000 		.4byte	.LASF104
 3537 0617 07       		.byte	0x7
 3538 0618 58       		.byte	0x58
 3539 0619 AD000000 		.4byte	0xad
 3540 061d 3F       		.byte	0x3f
 3541 061e 0A       		.uleb128 0xa
 3542 061f 44010000 		.4byte	.LASF105
 3543 0623 07       		.byte	0x7
 3544 0624 59       		.byte	0x59
 3545 0625 AD000000 		.4byte	0xad
 3546 0629 40       		.byte	0x40
 3547 062a 0A       		.uleb128 0xa
 3548 062b B40A0000 		.4byte	.LASF106
 3549 062f 07       		.byte	0x7
 3550 0630 5A       		.byte	0x5a
 3551 0631 AD000000 		.4byte	0xad
 3552 0635 41       		.byte	0x41
 3553 0636 0A       		.uleb128 0xa
 3554 0637 46110000 		.4byte	.LASF107
 3555 063b 07       		.byte	0x7
 3556 063c 5B       		.byte	0x5b
 3557 063d AD000000 		.4byte	0xad
 3558 0641 42       		.byte	0x42
 3559 0642 0A       		.uleb128 0xa
 3560 0643 E6060000 		.4byte	.LASF108
 3561 0647 07       		.byte	0x7
 3562 0648 5C       		.byte	0x5c
 3563 0649 AD000000 		.4byte	0xad
 3564 064d 43       		.byte	0x43
 3565 064e 0A       		.uleb128 0xa
 3566 064f 08080000 		.4byte	.LASF109
 3567 0653 07       		.byte	0x7
 3568 0654 5D       		.byte	0x5d
 3569 0655 AD000000 		.4byte	0xad
 3570 0659 44       		.byte	0x44
 3571 065a 0A       		.uleb128 0xa
 3572 065b 700D0000 		.4byte	.LASF110
 3573 065f 07       		.byte	0x7
 3574 0660 5E       		.byte	0x5e
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 123


 3575 0661 D9000000 		.4byte	0xd9
 3576 0665 48       		.byte	0x48
 3577 0666 0A       		.uleb128 0xa
 3578 0667 AF020000 		.4byte	.LASF111
 3579 066b 07       		.byte	0x7
 3580 066c 5F       		.byte	0x5f
 3581 066d D9000000 		.4byte	0xd9
 3582 0671 4C       		.byte	0x4c
 3583 0672 0A       		.uleb128 0xa
 3584 0673 24110000 		.4byte	.LASF112
 3585 0677 07       		.byte	0x7
 3586 0678 60       		.byte	0x60
 3587 0679 AD000000 		.4byte	0xad
 3588 067d 50       		.byte	0x50
 3589 067e 0A       		.uleb128 0xa
 3590 067f E2050000 		.4byte	.LASF113
 3591 0683 07       		.byte	0x7
 3592 0684 61       		.byte	0x61
 3593 0685 AD000000 		.4byte	0xad
 3594 0689 51       		.byte	0x51
 3595 068a 0A       		.uleb128 0xa
 3596 068b CE090000 		.4byte	.LASF114
 3597 068f 07       		.byte	0x7
 3598 0690 62       		.byte	0x62
 3599 0691 AD000000 		.4byte	0xad
 3600 0695 52       		.byte	0x52
 3601 0696 0A       		.uleb128 0xa
 3602 0697 31040000 		.4byte	.LASF115
 3603 069b 07       		.byte	0x7
 3604 069c 63       		.byte	0x63
 3605 069d AD000000 		.4byte	0xad
 3606 06a1 53       		.byte	0x53
 3607 06a2 0A       		.uleb128 0xa
 3608 06a3 A5100000 		.4byte	.LASF116
 3609 06a7 07       		.byte	0x7
 3610 06a8 64       		.byte	0x64
 3611 06a9 AD000000 		.4byte	0xad
 3612 06ad 54       		.byte	0x54
 3613 06ae 0A       		.uleb128 0xa
 3614 06af 63060000 		.4byte	.LASF117
 3615 06b3 07       		.byte	0x7
 3616 06b4 65       		.byte	0x65
 3617 06b5 AD000000 		.4byte	0xad
 3618 06b9 55       		.byte	0x55
 3619 06ba 0A       		.uleb128 0xa
 3620 06bb 00000000 		.4byte	.LASF118
 3621 06bf 07       		.byte	0x7
 3622 06c0 66       		.byte	0x66
 3623 06c1 AD000000 		.4byte	0xad
 3624 06c5 56       		.byte	0x56
 3625 06c6 0A       		.uleb128 0xa
 3626 06c7 DB0B0000 		.4byte	.LASF119
 3627 06cb 07       		.byte	0x7
 3628 06cc 67       		.byte	0x67
 3629 06cd AD000000 		.4byte	0xad
 3630 06d1 57       		.byte	0x57
 3631 06d2 0A       		.uleb128 0xa
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 124


 3632 06d3 9A050000 		.4byte	.LASF120
 3633 06d7 07       		.byte	0x7
 3634 06d8 68       		.byte	0x68
 3635 06d9 AD000000 		.4byte	0xad
 3636 06dd 58       		.byte	0x58
 3637 06de 0A       		.uleb128 0xa
 3638 06df E3120000 		.4byte	.LASF121
 3639 06e3 07       		.byte	0x7
 3640 06e4 69       		.byte	0x69
 3641 06e5 AD000000 		.4byte	0xad
 3642 06e9 59       		.byte	0x59
 3643 06ea 0A       		.uleb128 0xa
 3644 06eb 80110000 		.4byte	.LASF122
 3645 06ef 07       		.byte	0x7
 3646 06f0 6E       		.byte	0x6e
 3647 06f1 C3000000 		.4byte	0xc3
 3648 06f5 5A       		.byte	0x5a
 3649 06f6 0A       		.uleb128 0xa
 3650 06f7 07010000 		.4byte	.LASF123
 3651 06fb 07       		.byte	0x7
 3652 06fc 6F       		.byte	0x6f
 3653 06fd C3000000 		.4byte	0xc3
 3654 0701 5C       		.byte	0x5c
 3655 0702 0A       		.uleb128 0xa
 3656 0703 59090000 		.4byte	.LASF124
 3657 0707 07       		.byte	0x7
 3658 0708 70       		.byte	0x70
 3659 0709 AD000000 		.4byte	0xad
 3660 070d 5E       		.byte	0x5e
 3661 070e 0A       		.uleb128 0xa
 3662 070f 99110000 		.4byte	.LASF125
 3663 0713 07       		.byte	0x7
 3664 0714 71       		.byte	0x71
 3665 0715 AD000000 		.4byte	0xad
 3666 0719 5F       		.byte	0x5f
 3667 071a 0A       		.uleb128 0xa
 3668 071b 0C070000 		.4byte	.LASF126
 3669 071f 07       		.byte	0x7
 3670 0720 72       		.byte	0x72
 3671 0721 AD000000 		.4byte	0xad
 3672 0725 60       		.byte	0x60
 3673 0726 0A       		.uleb128 0xa
 3674 0727 5E080000 		.4byte	.LASF127
 3675 072b 07       		.byte	0x7
 3676 072c 73       		.byte	0x73
 3677 072d D9000000 		.4byte	0xd9
 3678 0731 64       		.byte	0x64
 3679 0732 0A       		.uleb128 0xa
 3680 0733 96130000 		.4byte	.LASF128
 3681 0737 07       		.byte	0x7
 3682 0738 76       		.byte	0x76
 3683 0739 C3000000 		.4byte	0xc3
 3684 073d 68       		.byte	0x68
 3685 073e 0A       		.uleb128 0xa
 3686 073f A40B0000 		.4byte	.LASF129
 3687 0743 07       		.byte	0x7
 3688 0744 77       		.byte	0x77
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 125


 3689 0745 C3000000 		.4byte	0xc3
 3690 0749 6A       		.byte	0x6a
 3691 074a 0A       		.uleb128 0xa
 3692 074b 4A0A0000 		.4byte	.LASF130
 3693 074f 07       		.byte	0x7
 3694 0750 78       		.byte	0x78
 3695 0751 C3000000 		.4byte	0xc3
 3696 0755 6C       		.byte	0x6c
 3697 0756 0A       		.uleb128 0xa
 3698 0757 F5020000 		.4byte	.LASF131
 3699 075b 07       		.byte	0x7
 3700 075c 79       		.byte	0x79
 3701 075d C3000000 		.4byte	0xc3
 3702 0761 6E       		.byte	0x6e
 3703 0762 0A       		.uleb128 0xa
 3704 0763 D1080000 		.4byte	.LASF132
 3705 0767 07       		.byte	0x7
 3706 0768 7B       		.byte	0x7b
 3707 0769 AD000000 		.4byte	0xad
 3708 076d 70       		.byte	0x70
 3709 076e 0A       		.uleb128 0xa
 3710 076f 81030000 		.4byte	.LASF133
 3711 0773 07       		.byte	0x7
 3712 0774 7C       		.byte	0x7c
 3713 0775 AD000000 		.4byte	0xad
 3714 0779 71       		.byte	0x71
 3715 077a 0A       		.uleb128 0xa
 3716 077b 81020000 		.4byte	.LASF134
 3717 077f 07       		.byte	0x7
 3718 0780 7D       		.byte	0x7d
 3719 0781 AD000000 		.4byte	0xad
 3720 0785 72       		.byte	0x72
 3721 0786 0A       		.uleb128 0xa
 3722 0787 B7040000 		.4byte	.LASF135
 3723 078b 07       		.byte	0x7
 3724 078c 7E       		.byte	0x7e
 3725 078d AD000000 		.4byte	0xad
 3726 0791 73       		.byte	0x73
 3727 0792 0A       		.uleb128 0xa
 3728 0793 800C0000 		.4byte	.LASF136
 3729 0797 07       		.byte	0x7
 3730 0798 80       		.byte	0x80
 3731 0799 C3000000 		.4byte	0xc3
 3732 079d 74       		.byte	0x74
 3733 079e 0A       		.uleb128 0xa
 3734 079f 370B0000 		.4byte	.LASF137
 3735 07a3 07       		.byte	0x7
 3736 07a4 81       		.byte	0x81
 3737 07a5 C3000000 		.4byte	0xc3
 3738 07a9 76       		.byte	0x76
 3739 07aa 0A       		.uleb128 0xa
 3740 07ab F3070000 		.4byte	.LASF138
 3741 07af 07       		.byte	0x7
 3742 07b0 82       		.byte	0x82
 3743 07b1 C3000000 		.4byte	0xc3
 3744 07b5 78       		.byte	0x78
 3745 07b6 0A       		.uleb128 0xa
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 126


 3746 07b7 9B090000 		.4byte	.LASF139
 3747 07bb 07       		.byte	0x7
 3748 07bc 83       		.byte	0x83
 3749 07bd C3000000 		.4byte	0xc3
 3750 07c1 7A       		.byte	0x7a
 3751 07c2 0A       		.uleb128 0xa
 3752 07c3 B90E0000 		.4byte	.LASF140
 3753 07c7 07       		.byte	0x7
 3754 07c8 86       		.byte	0x86
 3755 07c9 AD000000 		.4byte	0xad
 3756 07cd 7C       		.byte	0x7c
 3757 07ce 0A       		.uleb128 0xa
 3758 07cf 35110000 		.4byte	.LASF141
 3759 07d3 07       		.byte	0x7
 3760 07d4 87       		.byte	0x87
 3761 07d5 AD000000 		.4byte	0xad
 3762 07d9 7D       		.byte	0x7d
 3763 07da 0A       		.uleb128 0xa
 3764 07db 5B040000 		.4byte	.LASF142
 3765 07df 07       		.byte	0x7
 3766 07e0 88       		.byte	0x88
 3767 07e1 AD000000 		.4byte	0xad
 3768 07e5 7E       		.byte	0x7e
 3769 07e6 0A       		.uleb128 0xa
 3770 07e7 04040000 		.4byte	.LASF143
 3771 07eb 07       		.byte	0x7
 3772 07ec 89       		.byte	0x89
 3773 07ed AD000000 		.4byte	0xad
 3774 07f1 7F       		.byte	0x7f
 3775 07f2 0A       		.uleb128 0xa
 3776 07f3 9C040000 		.4byte	.LASF144
 3777 07f7 07       		.byte	0x7
 3778 07f8 8A       		.byte	0x8a
 3779 07f9 AD000000 		.4byte	0xad
 3780 07fd 80       		.byte	0x80
 3781 07fe 0A       		.uleb128 0xa
 3782 07ff 01110000 		.4byte	.LASF145
 3783 0803 07       		.byte	0x7
 3784 0804 8D       		.byte	0x8d
 3785 0805 D9000000 		.4byte	0xd9
 3786 0809 84       		.byte	0x84
 3787 080a 0A       		.uleb128 0xa
 3788 080b CE0E0000 		.4byte	.LASF146
 3789 080f 07       		.byte	0x7
 3790 0810 8E       		.byte	0x8e
 3791 0811 D9000000 		.4byte	0xd9
 3792 0815 88       		.byte	0x88
 3793 0816 0A       		.uleb128 0xa
 3794 0817 41120000 		.4byte	.LASF147
 3795 081b 07       		.byte	0x7
 3796 081c 8F       		.byte	0x8f
 3797 081d D9000000 		.4byte	0xd9
 3798 0821 8C       		.byte	0x8c
 3799 0822 0A       		.uleb128 0xa
 3800 0823 6B0C0000 		.4byte	.LASF148
 3801 0827 07       		.byte	0x7
 3802 0828 90       		.byte	0x90
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 127


 3803 0829 D9000000 		.4byte	0xd9
 3804 082d 90       		.byte	0x90
 3805 082e 0A       		.uleb128 0xa
 3806 082f 500E0000 		.4byte	.LASF149
 3807 0833 07       		.byte	0x7
 3808 0834 91       		.byte	0x91
 3809 0835 D9000000 		.4byte	0xd9
 3810 0839 94       		.byte	0x94
 3811 083a 0A       		.uleb128 0xa
 3812 083b A8030000 		.4byte	.LASF150
 3813 083f 07       		.byte	0x7
 3814 0840 92       		.byte	0x92
 3815 0841 D9000000 		.4byte	0xd9
 3816 0845 98       		.byte	0x98
 3817 0846 0A       		.uleb128 0xa
 3818 0847 F10E0000 		.4byte	.LASF151
 3819 084b 07       		.byte	0x7
 3820 084c 93       		.byte	0x93
 3821 084d D9000000 		.4byte	0xd9
 3822 0851 9C       		.byte	0x9c
 3823 0852 0A       		.uleb128 0xa
 3824 0853 D0060000 		.4byte	.LASF152
 3825 0857 07       		.byte	0x7
 3826 0858 94       		.byte	0x94
 3827 0859 D9000000 		.4byte	0xd9
 3828 085d A0       		.byte	0xa0
 3829 085e 0A       		.uleb128 0xa
 3830 085f F2000000 		.4byte	.LASF153
 3831 0863 07       		.byte	0x7
 3832 0864 95       		.byte	0x95
 3833 0865 C3000000 		.4byte	0xc3
 3834 0869 A4       		.byte	0xa4
 3835 086a 0A       		.uleb128 0xa
 3836 086b 5C100000 		.4byte	.LASF154
 3837 086f 07       		.byte	0x7
 3838 0870 96       		.byte	0x96
 3839 0871 C3000000 		.4byte	0xc3
 3840 0875 A6       		.byte	0xa6
 3841 0876 0A       		.uleb128 0xa
 3842 0877 410F0000 		.4byte	.LASF155
 3843 087b 07       		.byte	0x7
 3844 087c 97       		.byte	0x97
 3845 087d C3000000 		.4byte	0xc3
 3846 0881 A8       		.byte	0xa8
 3847 0882 0A       		.uleb128 0xa
 3848 0883 35090000 		.4byte	.LASF156
 3849 0887 07       		.byte	0x7
 3850 0888 98       		.byte	0x98
 3851 0889 C3000000 		.4byte	0xc3
 3852 088d AA       		.byte	0xaa
 3853 088e 0A       		.uleb128 0xa
 3854 088f 3C0A0000 		.4byte	.LASF157
 3855 0893 07       		.byte	0x7
 3856 0894 99       		.byte	0x99
 3857 0895 C3000000 		.4byte	0xc3
 3858 0899 AC       		.byte	0xac
 3859 089a 0A       		.uleb128 0xa
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 128


 3860 089b C40A0000 		.4byte	.LASF158
 3861 089f 07       		.byte	0x7
 3862 08a0 9A       		.byte	0x9a
 3863 08a1 C3000000 		.4byte	0xc3
 3864 08a5 AE       		.byte	0xae
 3865 08a6 0A       		.uleb128 0xa
 3866 08a7 02030000 		.4byte	.LASF159
 3867 08ab 07       		.byte	0x7
 3868 08ac 9D       		.byte	0x9d
 3869 08ad C3000000 		.4byte	0xc3
 3870 08b1 B0       		.byte	0xb0
 3871 08b2 0A       		.uleb128 0xa
 3872 08b3 35100000 		.4byte	.LASF160
 3873 08b7 07       		.byte	0x7
 3874 08b8 9E       		.byte	0x9e
 3875 08b9 D9000000 		.4byte	0xd9
 3876 08bd B4       		.byte	0xb4
 3877 08be 00       		.byte	0
 3878 08bf 03       		.uleb128 0x3
 3879 08c0 EB030000 		.4byte	.LASF161
 3880 08c4 07       		.byte	0x7
 3881 08c5 9F       		.byte	0x9f
 3882 08c6 AE040000 		.4byte	0x4ae
 3883 08ca 0D       		.uleb128 0xd
 3884 08cb C30D0000 		.4byte	.LASF162
 3885 08cf 08       		.byte	0x8
 3886 08d0 F601     		.2byte	0x1f6
 3887 08d2 D6080000 		.4byte	0x8d6
 3888 08d6 02       		.uleb128 0x2
 3889 08d7 01       		.byte	0x1
 3890 08d8 08       		.byte	0x8
 3891 08d9 B2000000 		.4byte	.LASF163
 3892 08dd 0D       		.uleb128 0xd
 3893 08de 33050000 		.4byte	.LASF164
 3894 08e2 08       		.byte	0x8
 3895 08e3 F701     		.2byte	0x1f7
 3896 08e5 E9080000 		.4byte	0x8e9
 3897 08e9 02       		.uleb128 0x2
 3898 08ea 04       		.byte	0x4
 3899 08eb 04       		.byte	0x4
 3900 08ec 1D040000 		.4byte	.LASF165
 3901 08f0 02       		.uleb128 0x2
 3902 08f1 08       		.byte	0x8
 3903 08f2 04       		.byte	0x4
 3904 08f3 04060000 		.4byte	.LASF166
 3905 08f7 0D       		.uleb128 0xd
 3906 08f8 590A0000 		.4byte	.LASF167
 3907 08fc 08       		.byte	0x8
 3908 08fd EB03     		.2byte	0x3eb
 3909 08ff C3000000 		.4byte	0xc3
 3910 0903 0F       		.uleb128 0xf
 3911 0904 04       		.byte	0x4
 3912 0905 A6000000 		.4byte	0xa6
 3913 0909 09       		.byte	0x9
 3914 090a 1405     		.2byte	0x514
 3915 090c 44090000 		.4byte	0x944
 3916 0910 10       		.uleb128 0x10
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 129


 3917 0911 89050000 		.4byte	.LASF168
 3918 0915 00       		.byte	0
 3919 0916 11       		.uleb128 0x11
 3920 0917 52110000 		.4byte	.LASF169
 3921 091b 01004200 		.4byte	0x420001
 3922 091f 11       		.uleb128 0x11
 3923 0920 33070000 		.4byte	.LASF170
 3924 0924 02004200 		.4byte	0x420002
 3925 0928 11       		.uleb128 0x11
 3926 0929 50070000 		.4byte	.LASF171
 3927 092d 03004200 		.4byte	0x420003
 3928 0931 11       		.uleb128 0x11
 3929 0932 7C070000 		.4byte	.LASF172
 3930 0936 04004200 		.4byte	0x420004
 3931 093a 11       		.uleb128 0x11
 3932 093b 97100000 		.4byte	.LASF173
 3933 093f FF004200 		.4byte	0x4200ff
 3934 0943 00       		.byte	0
 3935 0944 0D       		.uleb128 0xd
 3936 0945 C7000000 		.4byte	.LASF174
 3937 0949 09       		.byte	0x9
 3938 094a 1C05     		.2byte	0x51c
 3939 094c 03090000 		.4byte	0x903
 3940 0950 0F       		.uleb128 0xf
 3941 0951 01       		.byte	0x1
 3942 0952 37000000 		.4byte	0x37
 3943 0956 09       		.byte	0x9
 3944 0957 BC05     		.2byte	0x5bc
 3945 0959 76090000 		.4byte	0x976
 3946 095d 10       		.uleb128 0x10
 3947 095e F7130000 		.4byte	.LASF175
 3948 0962 01       		.byte	0x1
 3949 0963 10       		.uleb128 0x10
 3950 0964 D7030000 		.4byte	.LASF176
 3951 0968 02       		.byte	0x2
 3952 0969 10       		.uleb128 0x10
 3953 096a C2130000 		.4byte	.LASF177
 3954 096e 04       		.byte	0x4
 3955 096f 10       		.uleb128 0x10
 3956 0970 DD130000 		.4byte	.LASF178
 3957 0974 08       		.byte	0x8
 3958 0975 00       		.byte	0
 3959 0976 0D       		.uleb128 0xd
 3960 0977 E20C0000 		.4byte	.LASF179
 3961 097b 09       		.byte	0x9
 3962 097c CB05     		.2byte	0x5cb
 3963 097e 50090000 		.4byte	0x950
 3964 0982 12       		.uleb128 0x12
 3965 0983 08       		.byte	0x8
 3966 0984 09       		.byte	0x9
 3967 0985 E705     		.2byte	0x5e7
 3968 0987 A6090000 		.4byte	0x9a6
 3969 098b 13       		.uleb128 0x13
 3970 098c 43040000 		.4byte	.LASF180
 3971 0990 09       		.byte	0x9
 3972 0991 E905     		.2byte	0x5e9
 3973 0993 A6090000 		.4byte	0x9a6
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 130


 3974 0997 00       		.byte	0
 3975 0998 13       		.uleb128 0x13
 3976 0999 000A0000 		.4byte	.LASF181
 3977 099d 09       		.byte	0x9
 3978 099e EC05     		.2byte	0x5ec
 3979 09a0 A6090000 		.4byte	0x9a6
 3980 09a4 04       		.byte	0x4
 3981 09a5 00       		.byte	0
 3982 09a6 14       		.uleb128 0x14
 3983 09a7 04       		.byte	0x4
 3984 09a8 0D       		.uleb128 0xd
 3985 09a9 58000000 		.4byte	.LASF182
 3986 09ad 09       		.byte	0x9
 3987 09ae EF05     		.2byte	0x5ef
 3988 09b0 82090000 		.4byte	0x982
 3989 09b4 15       		.uleb128 0x15
 3990 09b5 04       		.byte	0x4
 3991 09b6 A8090000 		.4byte	0x9a8
 3992 09ba 0F       		.uleb128 0xf
 3993 09bb 04       		.byte	0x4
 3994 09bc A6000000 		.4byte	0xa6
 3995 09c0 01       		.byte	0x1
 3996 09c1 FE02     		.2byte	0x2fe
 3997 09c3 E9090000 		.4byte	0x9e9
 3998 09c7 10       		.uleb128 0x10
 3999 09c8 FD080000 		.4byte	.LASF183
 4000 09cc 00       		.byte	0
 4001 09cd 11       		.uleb128 0x11
 4002 09ce A8060000 		.4byte	.LASF184
 4003 09d2 01000600 		.4byte	0x60001
 4004 09d6 11       		.uleb128 0x11
 4005 09d7 210B0000 		.4byte	.LASF185
 4006 09db 02000600 		.4byte	0x60002
 4007 09df 11       		.uleb128 0x11
 4008 09e0 05020000 		.4byte	.LASF186
 4009 09e4 03000600 		.4byte	0x60003
 4010 09e8 00       		.byte	0
 4011 09e9 0D       		.uleb128 0xd
 4012 09ea A8080000 		.4byte	.LASF187
 4013 09ee 01       		.byte	0x1
 4014 09ef 0303     		.2byte	0x303
 4015 09f1 BA090000 		.4byte	0x9ba
 4016 09f5 0F       		.uleb128 0xf
 4017 09f6 01       		.byte	0x1
 4018 09f7 37000000 		.4byte	0x37
 4019 09fb 01       		.byte	0x1
 4020 09fc 0703     		.2byte	0x307
 4021 09fe 0F0A0000 		.4byte	0xa0f
 4022 0a02 10       		.uleb128 0x10
 4023 0a03 E90A0000 		.4byte	.LASF188
 4024 0a07 00       		.byte	0
 4025 0a08 10       		.uleb128 0x10
 4026 0a09 4F130000 		.4byte	.LASF189
 4027 0a0d 01       		.byte	0x1
 4028 0a0e 00       		.byte	0
 4029 0a0f 0D       		.uleb128 0xd
 4030 0a10 D7020000 		.4byte	.LASF190
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 131


 4031 0a14 01       		.byte	0x1
 4032 0a15 0A03     		.2byte	0x30a
 4033 0a17 F5090000 		.4byte	0x9f5
 4034 0a1b 0F       		.uleb128 0xf
 4035 0a1c 01       		.byte	0x1
 4036 0a1d 37000000 		.4byte	0x37
 4037 0a21 01       		.byte	0x1
 4038 0a22 0E03     		.2byte	0x30e
 4039 0a24 350A0000 		.4byte	0xa35
 4040 0a28 10       		.uleb128 0x10
 4041 0a29 480C0000 		.4byte	.LASF191
 4042 0a2d 00       		.byte	0
 4043 0a2e 10       		.uleb128 0x10
 4044 0a2f 5F020000 		.4byte	.LASF192
 4045 0a33 01       		.byte	0x1
 4046 0a34 00       		.byte	0
 4047 0a35 0D       		.uleb128 0xd
 4048 0a36 880F0000 		.4byte	.LASF193
 4049 0a3a 01       		.byte	0x1
 4050 0a3b 1103     		.2byte	0x311
 4051 0a3d 1B0A0000 		.4byte	0xa1b
 4052 0a41 0F       		.uleb128 0xf
 4053 0a42 01       		.byte	0x1
 4054 0a43 37000000 		.4byte	0x37
 4055 0a47 01       		.byte	0x1
 4056 0a48 1503     		.2byte	0x315
 4057 0a4a 5B0A0000 		.4byte	0xa5b
 4058 0a4e 10       		.uleb128 0x10
 4059 0a4f 49100000 		.4byte	.LASF194
 4060 0a53 00       		.byte	0
 4061 0a54 10       		.uleb128 0x10
 4062 0a55 05130000 		.4byte	.LASF195
 4063 0a59 01       		.byte	0x1
 4064 0a5a 00       		.byte	0
 4065 0a5b 0D       		.uleb128 0xd
 4066 0a5c 84010000 		.4byte	.LASF196
 4067 0a60 01       		.byte	0x1
 4068 0a61 1803     		.2byte	0x318
 4069 0a63 410A0000 		.4byte	0xa41
 4070 0a67 0F       		.uleb128 0xf
 4071 0a68 01       		.byte	0x1
 4072 0a69 37000000 		.4byte	0x37
 4073 0a6d 01       		.byte	0x1
 4074 0a6e 1C03     		.2byte	0x31c
 4075 0a70 810A0000 		.4byte	0xa81
 4076 0a74 10       		.uleb128 0x10
 4077 0a75 E2100000 		.4byte	.LASF197
 4078 0a79 00       		.byte	0
 4079 0a7a 10       		.uleb128 0x10
 4080 0a7b 210C0000 		.4byte	.LASF198
 4081 0a7f 01       		.byte	0x1
 4082 0a80 00       		.byte	0
 4083 0a81 0D       		.uleb128 0xd
 4084 0a82 B8070000 		.4byte	.LASF199
 4085 0a86 01       		.byte	0x1
 4086 0a87 1F03     		.2byte	0x31f
 4087 0a89 670A0000 		.4byte	0xa67
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 132


 4088 0a8d 0F       		.uleb128 0xf
 4089 0a8e 01       		.byte	0x1
 4090 0a8f 37000000 		.4byte	0x37
 4091 0a93 01       		.byte	0x1
 4092 0a94 2303     		.2byte	0x323
 4093 0a96 A10A0000 		.4byte	0xaa1
 4094 0a9a 10       		.uleb128 0x10
 4095 0a9b B9050000 		.4byte	.LASF200
 4096 0a9f 00       		.byte	0
 4097 0aa0 00       		.byte	0
 4098 0aa1 0D       		.uleb128 0xd
 4099 0aa2 050E0000 		.4byte	.LASF201
 4100 0aa6 01       		.byte	0x1
 4101 0aa7 2503     		.2byte	0x325
 4102 0aa9 8D0A0000 		.4byte	0xa8d
 4103 0aad 0F       		.uleb128 0xf
 4104 0aae 02       		.byte	0x2
 4105 0aaf 5B000000 		.4byte	0x5b
 4106 0ab3 01       		.byte	0x1
 4107 0ab4 5703     		.2byte	0x357
 4108 0ab6 EB0A0000 		.4byte	0xaeb
 4109 0aba 10       		.uleb128 0x10
 4110 0abb AA0F0000 		.4byte	.LASF202
 4111 0abf 00       		.byte	0
 4112 0ac0 16       		.uleb128 0x16
 4113 0ac1 BA010000 		.4byte	.LASF203
 4114 0ac5 0004     		.2byte	0x400
 4115 0ac7 16       		.uleb128 0x16
 4116 0ac8 96030000 		.4byte	.LASF204
 4117 0acc 0006     		.2byte	0x600
 4118 0ace 16       		.uleb128 0x16
 4119 0acf D6010000 		.4byte	.LASF205
 4120 0ad3 0008     		.2byte	0x800
 4121 0ad5 16       		.uleb128 0x16
 4122 0ad6 E8010000 		.4byte	.LASF206
 4123 0ada 000A     		.2byte	0xa00
 4124 0adc 16       		.uleb128 0x16
 4125 0add 4A0B0000 		.4byte	.LASF207
 4126 0ae1 000C     		.2byte	0xc00
 4127 0ae3 16       		.uleb128 0x16
 4128 0ae4 92000000 		.4byte	.LASF208
 4129 0ae8 000E     		.2byte	0xe00
 4130 0aea 00       		.byte	0
 4131 0aeb 0F       		.uleb128 0xf
 4132 0aec 04       		.byte	0x4
 4133 0aed A6000000 		.4byte	0xa6
 4134 0af1 01       		.byte	0x1
 4135 0af2 E403     		.2byte	0x3e4
 4136 0af4 110B0000 		.4byte	0xb11
 4137 0af8 10       		.uleb128 0x10
 4138 0af9 DF0D0000 		.4byte	.LASF209
 4139 0afd 00       		.byte	0
 4140 0afe 11       		.uleb128 0x11
 4141 0aff DE090000 		.4byte	.LASF210
 4142 0b03 00000200 		.4byte	0x20000
 4143 0b07 11       		.uleb128 0x11
 4144 0b08 77080000 		.4byte	.LASF211
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 133


 4145 0b0c 00000600 		.4byte	0x60000
 4146 0b10 00       		.byte	0
 4147 0b11 0D       		.uleb128 0xd
 4148 0b12 820D0000 		.4byte	.LASF212
 4149 0b16 01       		.byte	0x1
 4150 0b17 E803     		.2byte	0x3e8
 4151 0b19 EB0A0000 		.4byte	0xaeb
 4152 0b1d 0F       		.uleb128 0xf
 4153 0b1e 01       		.byte	0x1
 4154 0b1f 37000000 		.4byte	0x37
 4155 0b23 01       		.byte	0x1
 4156 0b24 1304     		.2byte	0x413
 4157 0b26 430B0000 		.4byte	0xb43
 4158 0b2a 10       		.uleb128 0x10
 4159 0b2b 2F030000 		.4byte	.LASF213
 4160 0b2f 00       		.byte	0
 4161 0b30 10       		.uleb128 0x10
 4162 0b31 70050000 		.4byte	.LASF214
 4163 0b35 01       		.byte	0x1
 4164 0b36 10       		.uleb128 0x10
 4165 0b37 A0070000 		.4byte	.LASF215
 4166 0b3b 02       		.byte	0x2
 4167 0b3c 10       		.uleb128 0x10
 4168 0b3d 51010000 		.4byte	.LASF216
 4169 0b41 03       		.byte	0x3
 4170 0b42 00       		.byte	0
 4171 0b43 0D       		.uleb128 0xd
 4172 0b44 19130000 		.4byte	.LASF217
 4173 0b48 01       		.byte	0x1
 4174 0b49 1804     		.2byte	0x418
 4175 0b4b 1D0B0000 		.4byte	0xb1d
 4176 0b4f 0F       		.uleb128 0xf
 4177 0b50 01       		.byte	0x1
 4178 0b51 37000000 		.4byte	0x37
 4179 0b55 01       		.byte	0x1
 4180 0b56 9404     		.2byte	0x494
 4181 0b58 750B0000 		.4byte	0xb75
 4182 0b5c 10       		.uleb128 0x10
 4183 0b5d EA0F0000 		.4byte	.LASF218
 4184 0b61 00       		.byte	0
 4185 0b62 10       		.uleb128 0x10
 4186 0b63 8A060000 		.4byte	.LASF219
 4187 0b67 01       		.byte	0x1
 4188 0b68 10       		.uleb128 0x10
 4189 0b69 73090000 		.4byte	.LASF220
 4190 0b6d 02       		.byte	0x2
 4191 0b6e 10       		.uleb128 0x10
 4192 0b6f B0090000 		.4byte	.LASF221
 4193 0b73 04       		.byte	0x4
 4194 0b74 00       		.byte	0
 4195 0b75 12       		.uleb128 0x12
 4196 0b76 78       		.byte	0x78
 4197 0b77 01       		.byte	0x1
 4198 0b78 0205     		.2byte	0x502
 4199 0b7a 420C0000 		.4byte	0xc42
 4200 0b7e 13       		.uleb128 0x13
 4201 0b7f 51050000 		.4byte	.LASF222
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 134


 4202 0b83 01       		.byte	0x1
 4203 0b84 0405     		.2byte	0x504
 4204 0b86 D9000000 		.4byte	0xd9
 4205 0b8a 00       		.byte	0
 4206 0b8b 13       		.uleb128 0x13
 4207 0b8c D10F0000 		.4byte	.LASF223
 4208 0b90 01       		.byte	0x1
 4209 0b91 0505     		.2byte	0x505
 4210 0b93 D9000000 		.4byte	0xd9
 4211 0b97 04       		.byte	0x4
 4212 0b98 13       		.uleb128 0x13
 4213 0b99 B60B0000 		.4byte	.LASF224
 4214 0b9d 01       		.byte	0x1
 4215 0b9e 0605     		.2byte	0x506
 4216 0ba0 D9000000 		.4byte	0xd9
 4217 0ba4 08       		.byte	0x8
 4218 0ba5 13       		.uleb128 0x13
 4219 0ba6 070F0000 		.4byte	.LASF225
 4220 0baa 01       		.byte	0x1
 4221 0bab 0705     		.2byte	0x507
 4222 0bad D9000000 		.4byte	0xd9
 4223 0bb1 0C       		.byte	0xc
 4224 0bb2 13       		.uleb128 0x13
 4225 0bb3 06050000 		.4byte	.LASF226
 4226 0bb7 01       		.byte	0x1
 4227 0bb8 0805     		.2byte	0x508
 4228 0bba D9000000 		.4byte	0xd9
 4229 0bbe 10       		.byte	0x10
 4230 0bbf 13       		.uleb128 0x13
 4231 0bc0 2B090000 		.4byte	.LASF227
 4232 0bc4 01       		.byte	0x1
 4233 0bc5 0905     		.2byte	0x509
 4234 0bc7 430B0000 		.4byte	0xb43
 4235 0bcb 14       		.byte	0x14
 4236 0bcc 13       		.uleb128 0x13
 4237 0bcd EC070000 		.4byte	.LASF228
 4238 0bd1 01       		.byte	0x1
 4239 0bd2 0A05     		.2byte	0x50a
 4240 0bd4 D9000000 		.4byte	0xd9
 4241 0bd8 18       		.byte	0x18
 4242 0bd9 13       		.uleb128 0x13
 4243 0bda 56120000 		.4byte	.LASF229
 4244 0bde 01       		.byte	0x1
 4245 0bdf 0B05     		.2byte	0x50b
 4246 0be1 420C0000 		.4byte	0xc42
 4247 0be5 1C       		.byte	0x1c
 4248 0be6 13       		.uleb128 0x13
 4249 0be7 8D130000 		.4byte	.LASF230
 4250 0beb 01       		.byte	0x1
 4251 0bec 0C05     		.2byte	0x50c
 4252 0bee D9000000 		.4byte	0xd9
 4253 0bf2 5C       		.byte	0x5c
 4254 0bf3 13       		.uleb128 0x13
 4255 0bf4 CB020000 		.4byte	.LASF231
 4256 0bf8 01       		.byte	0x1
 4257 0bf9 0D05     		.2byte	0x50d
 4258 0bfb D9000000 		.4byte	0xd9
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 135


 4259 0bff 60       		.byte	0x60
 4260 0c00 13       		.uleb128 0x13
 4261 0c01 F7120000 		.4byte	.LASF232
 4262 0c05 01       		.byte	0x1
 4263 0c06 0E05     		.2byte	0x50e
 4264 0c08 D9000000 		.4byte	0xd9
 4265 0c0c 64       		.byte	0x64
 4266 0c0d 13       		.uleb128 0x13
 4267 0c0e 690B0000 		.4byte	.LASF233
 4268 0c12 01       		.byte	0x1
 4269 0c13 0F05     		.2byte	0x50f
 4270 0c15 D9000000 		.4byte	0xd9
 4271 0c19 68       		.byte	0x68
 4272 0c1a 13       		.uleb128 0x13
 4273 0c1b 1B090000 		.4byte	.LASF234
 4274 0c1f 01       		.byte	0x1
 4275 0c20 1005     		.2byte	0x510
 4276 0c22 D9000000 		.4byte	0xd9
 4277 0c26 6C       		.byte	0x6c
 4278 0c27 13       		.uleb128 0x13
 4279 0c28 9B120000 		.4byte	.LASF235
 4280 0c2c 01       		.byte	0x1
 4281 0c2d 1105     		.2byte	0x511
 4282 0c2f 520C0000 		.4byte	0xc52
 4283 0c33 70       		.byte	0x70
 4284 0c34 13       		.uleb128 0x13
 4285 0c35 44070000 		.4byte	.LASF236
 4286 0c39 01       		.byte	0x1
 4287 0c3a 1205     		.2byte	0x512
 4288 0c3c D9000000 		.4byte	0xd9
 4289 0c40 74       		.byte	0x74
 4290 0c41 00       		.byte	0
 4291 0c42 07       		.uleb128 0x7
 4292 0c43 D9000000 		.4byte	0xd9
 4293 0c47 520C0000 		.4byte	0xc52
 4294 0c4b 08       		.uleb128 0x8
 4295 0c4c F6000000 		.4byte	0xf6
 4296 0c50 0F       		.byte	0xf
 4297 0c51 00       		.byte	0
 4298 0c52 02       		.uleb128 0x2
 4299 0c53 01       		.byte	0x1
 4300 0c54 02       		.byte	0x2
 4301 0c55 52060000 		.4byte	.LASF237
 4302 0c59 0D       		.uleb128 0xd
 4303 0c5a 3D050000 		.4byte	.LASF238
 4304 0c5e 01       		.byte	0x1
 4305 0c5f 1305     		.2byte	0x513
 4306 0c61 750B0000 		.4byte	0xb75
 4307 0c65 12       		.uleb128 0x12
 4308 0c66 08       		.byte	0x8
 4309 0c67 01       		.byte	0x1
 4310 0c68 1705     		.2byte	0x517
 4311 0c6a 890C0000 		.4byte	0xc89
 4312 0c6e 13       		.uleb128 0x13
 4313 0c6f 1D070000 		.4byte	.LASF239
 4314 0c73 01       		.byte	0x1
 4315 0c74 1905     		.2byte	0x519
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 136


 4316 0c76 D9000000 		.4byte	0xd9
 4317 0c7a 00       		.byte	0
 4318 0c7b 13       		.uleb128 0x13
 4319 0c7c 450E0000 		.4byte	.LASF240
 4320 0c80 01       		.byte	0x1
 4321 0c81 1A05     		.2byte	0x51a
 4322 0c83 D9000000 		.4byte	0xd9
 4323 0c87 04       		.byte	0x4
 4324 0c88 00       		.byte	0
 4325 0c89 0D       		.uleb128 0xd
 4326 0c8a 1A0D0000 		.4byte	.LASF241
 4327 0c8e 01       		.byte	0x1
 4328 0c8f 1B05     		.2byte	0x51b
 4329 0c91 650C0000 		.4byte	0xc65
 4330 0c95 17       		.uleb128 0x17
 4331 0c96 040C0000 		.4byte	.LASF311
 4332 0c9a 01       		.byte	0x1
 4333 0c9b FD07     		.2byte	0x7fd
 4334 0c9d 520C0000 		.4byte	0xc52
 4335 0ca1 00000000 		.4byte	.LFB102
 4336 0ca5 34000000 		.4byte	.LFE102-.LFB102
 4337 0ca9 01       		.uleb128 0x1
 4338 0caa 9C       		.byte	0x9c
 4339 0cab CE0C0000 		.4byte	0xcce
 4340 0caf 18       		.uleb128 0x18
 4341 0cb0 43040000 		.4byte	.LASF180
 4342 0cb4 01       		.byte	0x1
 4343 0cb5 FD07     		.2byte	0x7fd
 4344 0cb7 CE0C0000 		.4byte	0xcce
 4345 0cbb 02       		.uleb128 0x2
 4346 0cbc 91       		.byte	0x91
 4347 0cbd 74       		.sleb128 -12
 4348 0cbe 18       		.uleb128 0x18
 4349 0cbf 81000000 		.4byte	.LASF242
 4350 0cc3 01       		.byte	0x1
 4351 0cc4 FD07     		.2byte	0x7fd
 4352 0cc6 D9000000 		.4byte	0xd9
 4353 0cca 02       		.uleb128 0x2
 4354 0ccb 91       		.byte	0x91
 4355 0ccc 70       		.sleb128 -16
 4356 0ccd 00       		.byte	0
 4357 0cce 15       		.uleb128 0x15
 4358 0ccf 04       		.byte	0x4
 4359 0cd0 D40C0000 		.4byte	0xcd4
 4360 0cd4 06       		.uleb128 0x6
 4361 0cd5 A2040000 		.4byte	0x4a2
 4362 0cd9 19       		.uleb128 0x19
 4363 0cda 18110000 		.4byte	.LASF249
 4364 0cde 02       		.byte	0x2
 4365 0cdf 38       		.byte	0x38
 4366 0ce0 E9090000 		.4byte	0x9e9
 4367 0ce4 00000000 		.4byte	.LFB105
 4368 0ce8 60030000 		.4byte	.LFE105-.LFB105
 4369 0cec 01       		.uleb128 0x1
 4370 0ced 9C       		.byte	0x9c
 4371 0cee 630D0000 		.4byte	0xd63
 4372 0cf2 1A       		.uleb128 0x1a
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 137


 4373 0cf3 43040000 		.4byte	.LASF180
 4374 0cf7 02       		.byte	0x2
 4375 0cf8 38       		.byte	0x38
 4376 0cf9 630D0000 		.4byte	0xd63
 4377 0cfd 02       		.uleb128 0x2
 4378 0cfe 91       		.byte	0x91
 4379 0cff 5C       		.sleb128 -36
 4380 0d00 1A       		.uleb128 0x1a
 4381 0d01 FD0B0000 		.4byte	.LASF243
 4382 0d05 02       		.byte	0x2
 4383 0d06 38       		.byte	0x38
 4384 0d07 690D0000 		.4byte	0xd69
 4385 0d0b 02       		.uleb128 0x2
 4386 0d0c 91       		.byte	0x91
 4387 0d0d 58       		.sleb128 -40
 4388 0d0e 1B       		.uleb128 0x1b
 4389 0d0f 6E040000 		.4byte	.LASF244
 4390 0d13 02       		.byte	0x2
 4391 0d14 3D       		.byte	0x3d
 4392 0d15 E9090000 		.4byte	0x9e9
 4393 0d19 02       		.uleb128 0x2
 4394 0d1a 91       		.byte	0x91
 4395 0d1b 6C       		.sleb128 -20
 4396 0d1c 1B       		.uleb128 0x1b
 4397 0d1d 81000000 		.4byte	.LASF242
 4398 0d21 02       		.byte	0x2
 4399 0d22 3E       		.byte	0x3e
 4400 0d23 AD000000 		.4byte	0xad
 4401 0d27 02       		.uleb128 0x2
 4402 0d28 91       		.byte	0x91
 4403 0d29 6B       		.sleb128 -21
 4404 0d2a 1B       		.uleb128 0x1b
 4405 0d2b 300B0000 		.4byte	.LASF245
 4406 0d2f 02       		.byte	0x2
 4407 0d30 3F       		.byte	0x3f
 4408 0d31 CE000000 		.4byte	0xce
 4409 0d35 02       		.uleb128 0x2
 4410 0d36 91       		.byte	0x91
 4411 0d37 64       		.sleb128 -28
 4412 0d38 1B       		.uleb128 0x1b
 4413 0d39 DC0F0000 		.4byte	.LASF246
 4414 0d3d 02       		.byte	0x2
 4415 0d3e 40       		.byte	0x40
 4416 0d3f 520C0000 		.4byte	0xc52
 4417 0d43 02       		.uleb128 0x2
 4418 0d44 91       		.byte	0x91
 4419 0d45 6A       		.sleb128 -22
 4420 0d46 1B       		.uleb128 0x1b
 4421 0d47 1A010000 		.4byte	.LASF247
 4422 0d4b 02       		.byte	0x2
 4423 0d4c 41       		.byte	0x41
 4424 0d4d 520C0000 		.4byte	0xc52
 4425 0d51 02       		.uleb128 0x2
 4426 0d52 91       		.byte	0x91
 4427 0d53 69       		.sleb128 -23
 4428 0d54 1B       		.uleb128 0x1b
 4429 0d55 8C040000 		.4byte	.LASF248
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 138


 4430 0d59 02       		.byte	0x2
 4431 0d5a 42       		.byte	0x42
 4432 0d5b 520C0000 		.4byte	0xc52
 4433 0d5f 02       		.uleb128 0x2
 4434 0d60 91       		.byte	0x91
 4435 0d61 63       		.sleb128 -29
 4436 0d62 00       		.byte	0
 4437 0d63 15       		.uleb128 0x15
 4438 0d64 04       		.byte	0x4
 4439 0d65 A2040000 		.4byte	0x4a2
 4440 0d69 15       		.uleb128 0x15
 4441 0d6a 04       		.byte	0x4
 4442 0d6b 6F0D0000 		.4byte	0xd6f
 4443 0d6f 06       		.uleb128 0x6
 4444 0d70 590C0000 		.4byte	0xc59
 4445 0d74 19       		.uleb128 0x19
 4446 0d75 CC050000 		.4byte	.LASF250
 4447 0d79 02       		.byte	0x2
 4448 0d7a B3       		.byte	0xb3
 4449 0d7b E9090000 		.4byte	0x9e9
 4450 0d7f 00000000 		.4byte	.LFB106
 4451 0d83 E8000000 		.4byte	.LFE106-.LFB106
 4452 0d87 01       		.uleb128 0x1
 4453 0d88 9C       		.byte	0x9c
 4454 0d89 C60D0000 		.4byte	0xdc6
 4455 0d8d 1A       		.uleb128 0x1a
 4456 0d8e 43040000 		.4byte	.LASF180
 4457 0d92 02       		.byte	0x2
 4458 0d93 B3       		.byte	0xb3
 4459 0d94 630D0000 		.4byte	0xd63
 4460 0d98 02       		.uleb128 0x2
 4461 0d99 91       		.byte	0x91
 4462 0d9a 6C       		.sleb128 -20
 4463 0d9b 1A       		.uleb128 0x1a
 4464 0d9c 8D120000 		.4byte	.LASF251
 4465 0da0 02       		.byte	0x2
 4466 0da1 B3       		.byte	0xb3
 4467 0da2 520C0000 		.4byte	0xc52
 4468 0da6 02       		.uleb128 0x2
 4469 0da7 91       		.byte	0x91
 4470 0da8 6B       		.sleb128 -21
 4471 0da9 1B       		.uleb128 0x1b
 4472 0daa 6E040000 		.4byte	.LASF244
 4473 0dae 02       		.byte	0x2
 4474 0daf B7       		.byte	0xb7
 4475 0db0 E9090000 		.4byte	0x9e9
 4476 0db4 02       		.uleb128 0x2
 4477 0db5 91       		.byte	0x91
 4478 0db6 74       		.sleb128 -12
 4479 0db7 1B       		.uleb128 0x1b
 4480 0db8 81000000 		.4byte	.LASF242
 4481 0dbc 02       		.byte	0x2
 4482 0dbd B8       		.byte	0xb8
 4483 0dbe AD000000 		.4byte	0xad
 4484 0dc2 02       		.uleb128 0x2
 4485 0dc3 91       		.byte	0x91
 4486 0dc4 73       		.sleb128 -13
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 139


 4487 0dc5 00       		.byte	0
 4488 0dc6 1C       		.uleb128 0x1c
 4489 0dc7 140F0000 		.4byte	.LASF252
 4490 0dcb 02       		.byte	0x2
 4491 0dcc E8       		.byte	0xe8
 4492 0dcd 00000000 		.4byte	.LFB107
 4493 0dd1 3A000000 		.4byte	.LFE107-.LFB107
 4494 0dd5 01       		.uleb128 0x1
 4495 0dd6 9C       		.byte	0x9c
 4496 0dd7 EA0D0000 		.4byte	0xdea
 4497 0ddb 1A       		.uleb128 0x1a
 4498 0ddc 43040000 		.4byte	.LASF180
 4499 0de0 02       		.byte	0x2
 4500 0de1 E8       		.byte	0xe8
 4501 0de2 630D0000 		.4byte	0xd63
 4502 0de6 02       		.uleb128 0x2
 4503 0de7 91       		.byte	0x91
 4504 0de8 74       		.sleb128 -12
 4505 0de9 00       		.byte	0
 4506 0dea 1D       		.uleb128 0x1d
 4507 0deb 2A0E0000 		.4byte	.LASF253
 4508 0def 02       		.byte	0x2
 4509 0df0 0F01     		.2byte	0x10f
 4510 0df2 00000000 		.4byte	.LFB108
 4511 0df6 7C000000 		.4byte	.LFE108-.LFB108
 4512 0dfa 01       		.uleb128 0x1
 4513 0dfb 9C       		.byte	0x9c
 4514 0dfc 1F0E0000 		.4byte	0xe1f
 4515 0e00 18       		.uleb128 0x18
 4516 0e01 43040000 		.4byte	.LASF180
 4517 0e05 02       		.byte	0x2
 4518 0e06 0F01     		.2byte	0x10f
 4519 0e08 630D0000 		.4byte	0xd63
 4520 0e0c 02       		.uleb128 0x2
 4521 0e0d 91       		.byte	0x91
 4522 0e0e 6C       		.sleb128 -20
 4523 0e0f 1E       		.uleb128 0x1e
 4524 0e10 4E0D0000 		.4byte	.LASF254
 4525 0e14 02       		.byte	0x2
 4526 0e15 1101     		.2byte	0x111
 4527 0e17 D9000000 		.4byte	0xd9
 4528 0e1b 02       		.uleb128 0x2
 4529 0e1c 91       		.byte	0x91
 4530 0e1d 74       		.sleb128 -12
 4531 0e1e 00       		.byte	0
 4532 0e1f 1D       		.uleb128 0x1d
 4533 0e20 BD020000 		.4byte	.LASF255
 4534 0e24 02       		.byte	0x2
 4535 0e25 4901     		.2byte	0x149
 4536 0e27 00000000 		.4byte	.LFB109
 4537 0e2b 4C000000 		.4byte	.LFE109-.LFB109
 4538 0e2f 01       		.uleb128 0x1
 4539 0e30 9C       		.byte	0x9c
 4540 0e31 450E0000 		.4byte	0xe45
 4541 0e35 18       		.uleb128 0x18
 4542 0e36 43040000 		.4byte	.LASF180
 4543 0e3a 02       		.byte	0x2
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 140


 4544 0e3b 4901     		.2byte	0x149
 4545 0e3d 630D0000 		.4byte	0xd63
 4546 0e41 02       		.uleb128 0x2
 4547 0e42 91       		.byte	0x91
 4548 0e43 74       		.sleb128 -12
 4549 0e44 00       		.byte	0
 4550 0e45 1D       		.uleb128 0x1d
 4551 0e46 1C0A0000 		.4byte	.LASF256
 4552 0e4a 02       		.byte	0x2
 4553 0e4b 6F01     		.2byte	0x16f
 4554 0e4d 00000000 		.4byte	.LFB110
 4555 0e51 5C000000 		.4byte	.LFE110-.LFB110
 4556 0e55 01       		.uleb128 0x1
 4557 0e56 9C       		.byte	0x9c
 4558 0e57 7A0E0000 		.4byte	0xe7a
 4559 0e5b 18       		.uleb128 0x18
 4560 0e5c 43040000 		.4byte	.LASF180
 4561 0e60 02       		.byte	0x2
 4562 0e61 6F01     		.2byte	0x16f
 4563 0e63 630D0000 		.4byte	0xd63
 4564 0e67 02       		.uleb128 0x2
 4565 0e68 91       		.byte	0x91
 4566 0e69 74       		.sleb128 -12
 4567 0e6a 18       		.uleb128 0x18
 4568 0e6b 56050000 		.4byte	.LASF257
 4569 0e6f 02       		.byte	0x2
 4570 0e70 6F01     		.2byte	0x16f
 4571 0e72 0F0A0000 		.4byte	0xa0f
 4572 0e76 02       		.uleb128 0x2
 4573 0e77 91       		.byte	0x91
 4574 0e78 73       		.sleb128 -13
 4575 0e79 00       		.byte	0
 4576 0e7a 1F       		.uleb128 0x1f
 4577 0e7b 3C130000 		.4byte	.LASF258
 4578 0e7f 02       		.byte	0x2
 4579 0e80 9301     		.2byte	0x193
 4580 0e82 00000000 		.4byte	.LFB111
 4581 0e86 2C000000 		.4byte	.LFE111-.LFB111
 4582 0e8a 01       		.uleb128 0x1
 4583 0e8b 9C       		.byte	0x9c
 4584 0e8c A00E0000 		.4byte	0xea0
 4585 0e90 18       		.uleb128 0x18
 4586 0e91 43040000 		.4byte	.LASF180
 4587 0e95 02       		.byte	0x2
 4588 0e96 9301     		.2byte	0x193
 4589 0e98 630D0000 		.4byte	0xd63
 4590 0e9c 02       		.uleb128 0x2
 4591 0e9d 91       		.byte	0x91
 4592 0e9e 74       		.sleb128 -12
 4593 0e9f 00       		.byte	0
 4594 0ea0 1D       		.uleb128 0x1d
 4595 0ea1 BB080000 		.4byte	.LASF259
 4596 0ea5 02       		.byte	0x2
 4597 0ea6 B701     		.2byte	0x1b7
 4598 0ea8 00000000 		.4byte	.LFB112
 4599 0eac 58000000 		.4byte	.LFE112-.LFB112
 4600 0eb0 01       		.uleb128 0x1
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 141


 4601 0eb1 9C       		.byte	0x9c
 4602 0eb2 E40E0000 		.4byte	0xee4
 4603 0eb6 18       		.uleb128 0x18
 4604 0eb7 43040000 		.4byte	.LASF180
 4605 0ebb 02       		.byte	0x2
 4606 0ebc B701     		.2byte	0x1b7
 4607 0ebe 630D0000 		.4byte	0xd63
 4608 0ec2 02       		.uleb128 0x2
 4609 0ec3 91       		.byte	0x91
 4610 0ec4 6C       		.sleb128 -20
 4611 0ec5 18       		.uleb128 0x18
 4612 0ec6 250E0000 		.4byte	.LASF260
 4613 0eca 02       		.byte	0x2
 4614 0ecb B701     		.2byte	0x1b7
 4615 0ecd 110B0000 		.4byte	0xb11
 4616 0ed1 02       		.uleb128 0x2
 4617 0ed2 91       		.byte	0x91
 4618 0ed3 68       		.sleb128 -24
 4619 0ed4 1E       		.uleb128 0x1e
 4620 0ed5 7F120000 		.4byte	.LASF261
 4621 0ed9 02       		.byte	0x2
 4622 0eda BC01     		.2byte	0x1bc
 4623 0edc D9000000 		.4byte	0xd9
 4624 0ee0 02       		.uleb128 0x2
 4625 0ee1 91       		.byte	0x91
 4626 0ee2 74       		.sleb128 -12
 4627 0ee3 00       		.byte	0
 4628 0ee4 20       		.uleb128 0x20
 4629 0ee5 A6130000 		.4byte	.LASF262
 4630 0ee9 02       		.byte	0x2
 4631 0eea DE01     		.2byte	0x1de
 4632 0eec E9090000 		.4byte	0x9e9
 4633 0ef0 00000000 		.4byte	.LFB113
 4634 0ef4 B4000000 		.4byte	.LFE113-.LFB113
 4635 0ef8 01       		.uleb128 0x1
 4636 0ef9 9C       		.byte	0x9c
 4637 0efa 4A0F0000 		.4byte	0xf4a
 4638 0efe 18       		.uleb128 0x18
 4639 0eff 43040000 		.4byte	.LASF180
 4640 0f03 02       		.byte	0x2
 4641 0f04 DE01     		.2byte	0x1de
 4642 0f06 630D0000 		.4byte	0xd63
 4643 0f0a 02       		.uleb128 0x2
 4644 0f0b 91       		.byte	0x91
 4645 0f0c 64       		.sleb128 -28
 4646 0f0d 18       		.uleb128 0x18
 4647 0f0e 84100000 		.4byte	.LASF263
 4648 0f12 02       		.byte	0x2
 4649 0f13 DE01     		.2byte	0x1de
 4650 0f15 350A0000 		.4byte	0xa35
 4651 0f19 02       		.uleb128 0x2
 4652 0f1a 91       		.byte	0x91
 4653 0f1b 63       		.sleb128 -29
 4654 0f1c 1E       		.uleb128 0x1e
 4655 0f1d 6E040000 		.4byte	.LASF244
 4656 0f21 02       		.byte	0x2
 4657 0f22 E201     		.2byte	0x1e2
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 142


 4658 0f24 E9090000 		.4byte	0x9e9
 4659 0f28 02       		.uleb128 0x2
 4660 0f29 91       		.byte	0x91
 4661 0f2a 74       		.sleb128 -12
 4662 0f2b 1E       		.uleb128 0x1e
 4663 0f2c D2100000 		.4byte	.LASF264
 4664 0f30 02       		.byte	0x2
 4665 0f31 E401     		.2byte	0x1e4
 4666 0f33 D9000000 		.4byte	0xd9
 4667 0f37 02       		.uleb128 0x2
 4668 0f38 91       		.byte	0x91
 4669 0f39 70       		.sleb128 -16
 4670 0f3a 21       		.uleb128 0x21
 4671 0f3b 77647400 		.ascii	"wdt\000"
 4672 0f3f 02       		.byte	0x2
 4673 0f40 E501     		.2byte	0x1e5
 4674 0f42 D9000000 		.4byte	0xd9
 4675 0f46 02       		.uleb128 0x2
 4676 0f47 91       		.byte	0x91
 4677 0f48 6C       		.sleb128 -20
 4678 0f49 00       		.byte	0
 4679 0f4a 20       		.uleb128 0x20
 4680 0f4b 1C050000 		.4byte	.LASF265
 4681 0f4f 02       		.byte	0x2
 4682 0f50 2002     		.2byte	0x220
 4683 0f52 520C0000 		.4byte	0xc52
 4684 0f56 00000000 		.4byte	.LFB114
 4685 0f5a 78000000 		.4byte	.LFE114-.LFB114
 4686 0f5e 01       		.uleb128 0x1
 4687 0f5f 9C       		.byte	0x9c
 4688 0f60 920F0000 		.4byte	0xf92
 4689 0f64 18       		.uleb128 0x18
 4690 0f65 43040000 		.4byte	.LASF180
 4691 0f69 02       		.byte	0x2
 4692 0f6a 2002     		.2byte	0x220
 4693 0f6c CE0C0000 		.4byte	0xcce
 4694 0f70 02       		.uleb128 0x2
 4695 0f71 91       		.byte	0x91
 4696 0f72 6C       		.sleb128 -20
 4697 0f73 18       		.uleb128 0x18
 4698 0f74 81000000 		.4byte	.LASF242
 4699 0f78 02       		.byte	0x2
 4700 0f79 2002     		.2byte	0x220
 4701 0f7b D9000000 		.4byte	0xd9
 4702 0f7f 02       		.uleb128 0x2
 4703 0f80 91       		.byte	0x91
 4704 0f81 68       		.sleb128 -24
 4705 0f82 1E       		.uleb128 0x1e
 4706 0f83 47030000 		.4byte	.LASF266
 4707 0f87 02       		.byte	0x2
 4708 0f88 2402     		.2byte	0x224
 4709 0f8a 520C0000 		.4byte	0xc52
 4710 0f8e 02       		.uleb128 0x2
 4711 0f8f 91       		.byte	0x91
 4712 0f90 77       		.sleb128 -9
 4713 0f91 00       		.byte	0
 4714 0f92 20       		.uleb128 0x20
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 143


 4715 0f93 65030000 		.4byte	.LASF267
 4716 0f97 02       		.byte	0x2
 4717 0f98 5202     		.2byte	0x252
 4718 0f9a 520C0000 		.4byte	0xc52
 4719 0f9e 00000000 		.4byte	.LFB115
 4720 0fa2 5C000000 		.4byte	.LFE115-.LFB115
 4721 0fa6 01       		.uleb128 0x1
 4722 0fa7 9C       		.byte	0x9c
 4723 0fa8 DA0F0000 		.4byte	0xfda
 4724 0fac 18       		.uleb128 0x18
 4725 0fad 43040000 		.4byte	.LASF180
 4726 0fb1 02       		.byte	0x2
 4727 0fb2 5202     		.2byte	0x252
 4728 0fb4 CE0C0000 		.4byte	0xcce
 4729 0fb8 02       		.uleb128 0x2
 4730 0fb9 91       		.byte	0x91
 4731 0fba 6C       		.sleb128 -20
 4732 0fbb 18       		.uleb128 0x18
 4733 0fbc 81000000 		.4byte	.LASF242
 4734 0fc0 02       		.byte	0x2
 4735 0fc1 5202     		.2byte	0x252
 4736 0fc3 D9000000 		.4byte	0xd9
 4737 0fc7 02       		.uleb128 0x2
 4738 0fc8 91       		.byte	0x91
 4739 0fc9 68       		.sleb128 -24
 4740 0fca 1E       		.uleb128 0x1e
 4741 0fcb 62050000 		.4byte	.LASF268
 4742 0fcf 02       		.byte	0x2
 4743 0fd0 5602     		.2byte	0x256
 4744 0fd2 520C0000 		.4byte	0xc52
 4745 0fd6 02       		.uleb128 0x2
 4746 0fd7 91       		.byte	0x91
 4747 0fd8 77       		.sleb128 -9
 4748 0fd9 00       		.byte	0
 4749 0fda 20       		.uleb128 0x20
 4750 0fdb 4D0F0000 		.4byte	.LASF269
 4751 0fdf 02       		.byte	0x2
 4752 0fe0 7902     		.2byte	0x279
 4753 0fe2 B8000000 		.4byte	0xb8
 4754 0fe6 00000000 		.4byte	.LFB116
 4755 0fea 4C000000 		.4byte	.LFE116-.LFB116
 4756 0fee 01       		.uleb128 0x1
 4757 0fef 9C       		.byte	0x9c
 4758 0ff0 22100000 		.4byte	0x1022
 4759 0ff4 18       		.uleb128 0x18
 4760 0ff5 43040000 		.4byte	.LASF180
 4761 0ff9 02       		.byte	0x2
 4762 0ffa 7902     		.2byte	0x279
 4763 0ffc CE0C0000 		.4byte	0xcce
 4764 1000 02       		.uleb128 0x2
 4765 1001 91       		.byte	0x91
 4766 1002 6C       		.sleb128 -20
 4767 1003 18       		.uleb128 0x18
 4768 1004 81000000 		.4byte	.LASF242
 4769 1008 02       		.byte	0x2
 4770 1009 7902     		.2byte	0x279
 4771 100b D9000000 		.4byte	0xd9
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 144


 4772 100f 02       		.uleb128 0x2
 4773 1010 91       		.byte	0x91
 4774 1011 68       		.sleb128 -24
 4775 1012 1E       		.uleb128 0x1e
 4776 1013 A00F0000 		.4byte	.LASF270
 4777 1017 02       		.byte	0x2
 4778 1018 7D02     		.2byte	0x27d
 4779 101a D9000000 		.4byte	0xd9
 4780 101e 02       		.uleb128 0x2
 4781 101f 91       		.byte	0x91
 4782 1020 74       		.sleb128 -12
 4783 1021 00       		.byte	0
 4784 1022 20       		.uleb128 0x20
 4785 1023 CE040000 		.4byte	.LASF271
 4786 1027 02       		.byte	0x2
 4787 1028 9E02     		.2byte	0x29e
 4788 102a CE000000 		.4byte	0xce
 4789 102e 00000000 		.4byte	.LFB117
 4790 1032 70000000 		.4byte	.LFE117-.LFB117
 4791 1036 01       		.uleb128 0x1
 4792 1037 9C       		.byte	0x9c
 4793 1038 88100000 		.4byte	0x1088
 4794 103c 18       		.uleb128 0x18
 4795 103d 43040000 		.4byte	.LASF180
 4796 1041 02       		.byte	0x2
 4797 1042 9E02     		.2byte	0x29e
 4798 1044 CE0C0000 		.4byte	0xcce
 4799 1048 02       		.uleb128 0x2
 4800 1049 91       		.byte	0x91
 4801 104a 64       		.sleb128 -28
 4802 104b 18       		.uleb128 0x18
 4803 104c 81000000 		.4byte	.LASF242
 4804 1050 02       		.byte	0x2
 4805 1051 9E02     		.2byte	0x29e
 4806 1053 D9000000 		.4byte	0xd9
 4807 1057 02       		.uleb128 0x2
 4808 1058 91       		.byte	0x91
 4809 1059 60       		.sleb128 -32
 4810 105a 1E       		.uleb128 0x1e
 4811 105b A00F0000 		.4byte	.LASF270
 4812 105f 02       		.byte	0x2
 4813 1060 A202     		.2byte	0x2a2
 4814 1062 D9000000 		.4byte	0xd9
 4815 1066 02       		.uleb128 0x2
 4816 1067 91       		.byte	0x91
 4817 1068 74       		.sleb128 -12
 4818 1069 1E       		.uleb128 0x1e
 4819 106a 59030000 		.4byte	.LASF272
 4820 106e 02       		.byte	0x2
 4821 106f A302     		.2byte	0x2a3
 4822 1071 B8000000 		.4byte	0xb8
 4823 1075 02       		.uleb128 0x2
 4824 1076 91       		.byte	0x91
 4825 1077 6E       		.sleb128 -18
 4826 1078 1E       		.uleb128 0x1e
 4827 1079 86000000 		.4byte	.LASF273
 4828 107d 02       		.byte	0x2
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 145


 4829 107e A402     		.2byte	0x2a4
 4830 1080 CE000000 		.4byte	0xce
 4831 1084 02       		.uleb128 0x2
 4832 1085 91       		.byte	0x91
 4833 1086 70       		.sleb128 -16
 4834 1087 00       		.byte	0
 4835 1088 1D       		.uleb128 0x1d
 4836 1089 10030000 		.4byte	.LASF274
 4837 108d 02       		.byte	0x2
 4838 108e CF02     		.2byte	0x2cf
 4839 1090 00000000 		.4byte	.LFB118
 4840 1094 50000000 		.4byte	.LFE118-.LFB118
 4841 1098 01       		.uleb128 0x1
 4842 1099 9C       		.byte	0x9c
 4843 109a CC100000 		.4byte	0x10cc
 4844 109e 18       		.uleb128 0x18
 4845 109f 43040000 		.4byte	.LASF180
 4846 10a3 02       		.byte	0x2
 4847 10a4 CF02     		.2byte	0x2cf
 4848 10a6 630D0000 		.4byte	0xd63
 4849 10aa 02       		.uleb128 0x2
 4850 10ab 91       		.byte	0x91
 4851 10ac 6C       		.sleb128 -20
 4852 10ad 18       		.uleb128 0x18
 4853 10ae 22000000 		.4byte	.LASF275
 4854 10b2 02       		.byte	0x2
 4855 10b3 CF02     		.2byte	0x2cf
 4856 10b5 D9000000 		.4byte	0xd9
 4857 10b9 02       		.uleb128 0x2
 4858 10ba 91       		.byte	0x91
 4859 10bb 68       		.sleb128 -24
 4860 10bc 1E       		.uleb128 0x1e
 4861 10bd 14000000 		.4byte	.LASF276
 4862 10c1 02       		.byte	0x2
 4863 10c2 D302     		.2byte	0x2d3
 4864 10c4 D9000000 		.4byte	0xd9
 4865 10c8 02       		.uleb128 0x2
 4866 10c9 91       		.byte	0x91
 4867 10ca 74       		.sleb128 -12
 4868 10cb 00       		.byte	0
 4869 10cc 1D       		.uleb128 0x1d
 4870 10cd D8070000 		.4byte	.LASF277
 4871 10d1 02       		.byte	0x2
 4872 10d2 F202     		.2byte	0x2f2
 4873 10d4 00000000 		.4byte	.LFB119
 4874 10d8 4C000000 		.4byte	.LFE119-.LFB119
 4875 10dc 01       		.uleb128 0x1
 4876 10dd 9C       		.byte	0x9c
 4877 10de 10110000 		.4byte	0x1110
 4878 10e2 18       		.uleb128 0x18
 4879 10e3 43040000 		.4byte	.LASF180
 4880 10e7 02       		.byte	0x2
 4881 10e8 F202     		.2byte	0x2f2
 4882 10ea 630D0000 		.4byte	0xd63
 4883 10ee 02       		.uleb128 0x2
 4884 10ef 91       		.byte	0x91
 4885 10f0 6C       		.sleb128 -20
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 146


 4886 10f1 18       		.uleb128 0x18
 4887 10f2 3B0E0000 		.4byte	.LASF278
 4888 10f6 02       		.byte	0x2
 4889 10f7 F202     		.2byte	0x2f2
 4890 10f9 D9000000 		.4byte	0xd9
 4891 10fd 02       		.uleb128 0x2
 4892 10fe 91       		.byte	0x91
 4893 10ff 68       		.sleb128 -24
 4894 1100 1E       		.uleb128 0x1e
 4895 1101 14000000 		.4byte	.LASF276
 4896 1105 02       		.byte	0x2
 4897 1106 F602     		.2byte	0x2f6
 4898 1108 D9000000 		.4byte	0xd9
 4899 110c 02       		.uleb128 0x2
 4900 110d 91       		.byte	0x91
 4901 110e 74       		.sleb128 -12
 4902 110f 00       		.byte	0
 4903 1110 20       		.uleb128 0x20
 4904 1111 D2120000 		.4byte	.LASF279
 4905 1115 02       		.byte	0x2
 4906 1116 1803     		.2byte	0x318
 4907 1118 E9090000 		.4byte	0x9e9
 4908 111c 00000000 		.4byte	.LFB120
 4909 1120 54000000 		.4byte	.LFE120-.LFB120
 4910 1124 01       		.uleb128 0x1
 4911 1125 9C       		.byte	0x9c
 4912 1126 58110000 		.4byte	0x1158
 4913 112a 18       		.uleb128 0x18
 4914 112b 81000000 		.4byte	.LASF242
 4915 112f 02       		.byte	0x2
 4916 1130 1803     		.2byte	0x318
 4917 1132 D9000000 		.4byte	0xd9
 4918 1136 02       		.uleb128 0x2
 4919 1137 91       		.byte	0x91
 4920 1138 6C       		.sleb128 -20
 4921 1139 18       		.uleb128 0x18
 4922 113a B0040000 		.4byte	.LASF280
 4923 113e 02       		.byte	0x2
 4924 113f 1803     		.2byte	0x318
 4925 1141 B8000000 		.4byte	0xb8
 4926 1145 02       		.uleb128 0x2
 4927 1146 91       		.byte	0x91
 4928 1147 6A       		.sleb128 -22
 4929 1148 1E       		.uleb128 0x1e
 4930 1149 6E040000 		.4byte	.LASF244
 4931 114d 02       		.byte	0x2
 4932 114e 1C03     		.2byte	0x31c
 4933 1150 E9090000 		.4byte	0x9e9
 4934 1154 02       		.uleb128 0x2
 4935 1155 91       		.byte	0x91
 4936 1156 74       		.sleb128 -12
 4937 1157 00       		.byte	0
 4938 1158 20       		.uleb128 0x20
 4939 1159 AA0E0000 		.4byte	.LASF281
 4940 115d 02       		.byte	0x2
 4941 115e 4203     		.2byte	0x342
 4942 1160 E9090000 		.4byte	0x9e9
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 147


 4943 1164 00000000 		.4byte	.LFB121
 4944 1168 4C000000 		.4byte	.LFE121-.LFB121
 4945 116c 01       		.uleb128 0x1
 4946 116d 9C       		.byte	0x9c
 4947 116e A0110000 		.4byte	0x11a0
 4948 1172 18       		.uleb128 0x18
 4949 1173 81000000 		.4byte	.LASF242
 4950 1177 02       		.byte	0x2
 4951 1178 4203     		.2byte	0x342
 4952 117a D9000000 		.4byte	0xd9
 4953 117e 02       		.uleb128 0x2
 4954 117f 91       		.byte	0x91
 4955 1180 6C       		.sleb128 -20
 4956 1181 18       		.uleb128 0x18
 4957 1182 6B010000 		.4byte	.LASF282
 4958 1186 02       		.byte	0x2
 4959 1187 4203     		.2byte	0x342
 4960 1189 CE000000 		.4byte	0xce
 4961 118d 02       		.uleb128 0x2
 4962 118e 91       		.byte	0x91
 4963 118f 68       		.sleb128 -24
 4964 1190 1E       		.uleb128 0x1e
 4965 1191 6E040000 		.4byte	.LASF244
 4966 1195 02       		.byte	0x2
 4967 1196 4603     		.2byte	0x346
 4968 1198 E9090000 		.4byte	0x9e9
 4969 119c 02       		.uleb128 0x2
 4970 119d 91       		.byte	0x91
 4971 119e 74       		.sleb128 -12
 4972 119f 00       		.byte	0
 4973 11a0 20       		.uleb128 0x20
 4974 11a1 E5080000 		.4byte	.LASF283
 4975 11a5 02       		.byte	0x2
 4976 11a6 7903     		.2byte	0x379
 4977 11a8 B8000000 		.4byte	0xb8
 4978 11ac 00000000 		.4byte	.LFB122
 4979 11b0 F0000000 		.4byte	.LFE122-.LFB122
 4980 11b4 01       		.uleb128 0x1
 4981 11b5 9C       		.byte	0x9c
 4982 11b6 06120000 		.4byte	0x1206
 4983 11ba 18       		.uleb128 0x18
 4984 11bb 43040000 		.4byte	.LASF180
 4985 11bf 02       		.byte	0x2
 4986 11c0 7903     		.2byte	0x379
 4987 11c2 CE0C0000 		.4byte	0xcce
 4988 11c6 02       		.uleb128 0x2
 4989 11c7 91       		.byte	0x91
 4990 11c8 6C       		.sleb128 -20
 4991 11c9 18       		.uleb128 0x18
 4992 11ca 81000000 		.4byte	.LASF242
 4993 11ce 02       		.byte	0x2
 4994 11cf 7903     		.2byte	0x379
 4995 11d1 D9000000 		.4byte	0xd9
 4996 11d5 02       		.uleb128 0x2
 4997 11d6 91       		.byte	0x91
 4998 11d7 68       		.sleb128 -24
 4999 11d8 18       		.uleb128 0x18
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 148


 5000 11d9 10010000 		.4byte	.LASF284
 5001 11dd 02       		.byte	0x2
 5002 11de 7903     		.2byte	0x379
 5003 11e0 B8000000 		.4byte	0xb8
 5004 11e4 02       		.uleb128 0x2
 5005 11e5 91       		.byte	0x91
 5006 11e6 66       		.sleb128 -26
 5007 11e7 1E       		.uleb128 0x1e
 5008 11e8 A70D0000 		.4byte	.LASF285
 5009 11ec 02       		.byte	0x2
 5010 11ed 7D03     		.2byte	0x37d
 5011 11ef D9000000 		.4byte	0xd9
 5012 11f3 02       		.uleb128 0x2
 5013 11f4 91       		.byte	0x91
 5014 11f5 70       		.sleb128 -16
 5015 11f6 1E       		.uleb128 0x1e
 5016 11f7 CA0D0000 		.4byte	.LASF286
 5017 11fb 02       		.byte	0x2
 5018 11fc 7E03     		.2byte	0x37e
 5019 11fe D9000000 		.4byte	0xd9
 5020 1202 02       		.uleb128 0x2
 5021 1203 91       		.byte	0x91
 5022 1204 74       		.sleb128 -12
 5023 1205 00       		.byte	0
 5024 1206 20       		.uleb128 0x20
 5025 1207 1F100000 		.4byte	.LASF287
 5026 120b 02       		.byte	0x2
 5027 120c DA03     		.2byte	0x3da
 5028 120e DD080000 		.4byte	0x8dd
 5029 1212 00000000 		.4byte	.LFB123
 5030 1216 98000000 		.4byte	.LFE123-.LFB123
 5031 121a 01       		.uleb128 0x1
 5032 121b 9C       		.byte	0x9c
 5033 121c 5D120000 		.4byte	0x125d
 5034 1220 18       		.uleb128 0x18
 5035 1221 43040000 		.4byte	.LASF180
 5036 1225 02       		.byte	0x2
 5037 1226 DA03     		.2byte	0x3da
 5038 1228 CE0C0000 		.4byte	0xcce
 5039 122c 02       		.uleb128 0x2
 5040 122d 91       		.byte	0x91
 5041 122e 64       		.sleb128 -28
 5042 122f 18       		.uleb128 0x18
 5043 1230 81000000 		.4byte	.LASF242
 5044 1234 02       		.byte	0x2
 5045 1235 DA03     		.2byte	0x3da
 5046 1237 D9000000 		.4byte	0xd9
 5047 123b 02       		.uleb128 0x2
 5048 123c 91       		.byte	0x91
 5049 123d 60       		.sleb128 -32
 5050 123e 18       		.uleb128 0x18
 5051 123f 10010000 		.4byte	.LASF284
 5052 1243 02       		.byte	0x2
 5053 1244 DA03     		.2byte	0x3da
 5054 1246 B8000000 		.4byte	0xb8
 5055 124a 02       		.uleb128 0x2
 5056 124b 91       		.byte	0x91
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 149


 5057 124c 5E       		.sleb128 -34
 5058 124d 1E       		.uleb128 0x1e
 5059 124e 45060000 		.4byte	.LASF288
 5060 1252 02       		.byte	0x2
 5061 1253 DE03     		.2byte	0x3de
 5062 1255 DD080000 		.4byte	0x8dd
 5063 1259 02       		.uleb128 0x2
 5064 125a 91       		.byte	0x91
 5065 125b 6C       		.sleb128 -20
 5066 125c 00       		.byte	0
 5067 125d 20       		.uleb128 0x20
 5068 125e B9060000 		.4byte	.LASF289
 5069 1262 02       		.byte	0x2
 5070 1263 1D04     		.2byte	0x41d
 5071 1265 B8000000 		.4byte	0xb8
 5072 1269 00000000 		.4byte	.LFB124
 5073 126d C4000000 		.4byte	.LFE124-.LFB124
 5074 1271 01       		.uleb128 0x1
 5075 1272 9C       		.byte	0x9c
 5076 1273 B4120000 		.4byte	0x12b4
 5077 1277 18       		.uleb128 0x18
 5078 1278 43040000 		.4byte	.LASF180
 5079 127c 02       		.byte	0x2
 5080 127d 1D04     		.2byte	0x41d
 5081 127f CE0C0000 		.4byte	0xcce
 5082 1283 02       		.uleb128 0x2
 5083 1284 91       		.byte	0x91
 5084 1285 64       		.sleb128 -28
 5085 1286 18       		.uleb128 0x18
 5086 1287 81000000 		.4byte	.LASF242
 5087 128b 02       		.byte	0x2
 5088 128c 1D04     		.2byte	0x41d
 5089 128e D9000000 		.4byte	0xd9
 5090 1292 02       		.uleb128 0x2
 5091 1293 91       		.byte	0x91
 5092 1294 60       		.sleb128 -32
 5093 1295 18       		.uleb128 0x18
 5094 1296 10010000 		.4byte	.LASF284
 5095 129a 02       		.byte	0x2
 5096 129b 1D04     		.2byte	0x41d
 5097 129d B8000000 		.4byte	0xb8
 5098 12a1 02       		.uleb128 0x2
 5099 12a2 91       		.byte	0x91
 5100 12a3 5E       		.sleb128 -34
 5101 12a4 1E       		.uleb128 0x1e
 5102 12a5 5D0C0000 		.4byte	.LASF290
 5103 12a9 02       		.byte	0x2
 5104 12aa 2104     		.2byte	0x421
 5105 12ac CE000000 		.4byte	0xce
 5106 12b0 02       		.uleb128 0x2
 5107 12b1 91       		.byte	0x91
 5108 12b2 6C       		.sleb128 -20
 5109 12b3 00       		.byte	0
 5110 12b4 20       		.uleb128 0x20
 5111 12b5 E1040000 		.4byte	.LASF291
 5112 12b9 02       		.byte	0x2
 5113 12ba 6804     		.2byte	0x468
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 150


 5114 12bc CE000000 		.4byte	0xce
 5115 12c0 00000000 		.4byte	.LFB125
 5116 12c4 B4000000 		.4byte	.LFE125-.LFB125
 5117 12c8 01       		.uleb128 0x1
 5118 12c9 9C       		.byte	0x9c
 5119 12ca 0B130000 		.4byte	0x130b
 5120 12ce 18       		.uleb128 0x18
 5121 12cf 43040000 		.4byte	.LASF180
 5122 12d3 02       		.byte	0x2
 5123 12d4 6804     		.2byte	0x468
 5124 12d6 CE0C0000 		.4byte	0xcce
 5125 12da 02       		.uleb128 0x2
 5126 12db 91       		.byte	0x91
 5127 12dc 5C       		.sleb128 -36
 5128 12dd 18       		.uleb128 0x18
 5129 12de 81000000 		.4byte	.LASF242
 5130 12e2 02       		.byte	0x2
 5131 12e3 6804     		.2byte	0x468
 5132 12e5 D9000000 		.4byte	0xd9
 5133 12e9 02       		.uleb128 0x2
 5134 12ea 91       		.byte	0x91
 5135 12eb 58       		.sleb128 -40
 5136 12ec 18       		.uleb128 0x18
 5137 12ed 10010000 		.4byte	.LASF284
 5138 12f1 02       		.byte	0x2
 5139 12f2 6804     		.2byte	0x468
 5140 12f4 B8000000 		.4byte	0xb8
 5141 12f8 02       		.uleb128 0x2
 5142 12f9 91       		.byte	0x91
 5143 12fa 56       		.sleb128 -42
 5144 12fb 1E       		.uleb128 0x1e
 5145 12fc 9A080000 		.4byte	.LASF292
 5146 1300 02       		.byte	0x2
 5147 1301 6C04     		.2byte	0x46c
 5148 1303 E4000000 		.4byte	0xe4
 5149 1307 02       		.uleb128 0x2
 5150 1308 91       		.byte	0x91
 5151 1309 60       		.sleb128 -32
 5152 130a 00       		.byte	0
 5153 130b 1D       		.uleb128 0x1d
 5154 130c B5100000 		.4byte	.LASF293
 5155 1310 02       		.byte	0x2
 5156 1311 9C04     		.2byte	0x49c
 5157 1313 00000000 		.4byte	.LFB126
 5158 1317 BC000000 		.4byte	.LFE126-.LFB126
 5159 131b 01       		.uleb128 0x1
 5160 131c 9C       		.byte	0x9c
 5161 131d 7C130000 		.4byte	0x137c
 5162 1321 18       		.uleb128 0x18
 5163 1322 43040000 		.4byte	.LASF180
 5164 1326 02       		.byte	0x2
 5165 1327 9C04     		.2byte	0x49c
 5166 1329 630D0000 		.4byte	0xd63
 5167 132d 02       		.uleb128 0x2
 5168 132e 91       		.byte	0x91
 5169 132f 6C       		.sleb128 -20
 5170 1330 18       		.uleb128 0x18
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 151


 5171 1331 E5000000 		.4byte	.LASF294
 5172 1335 02       		.byte	0x2
 5173 1336 9C04     		.2byte	0x49c
 5174 1338 A10A0000 		.4byte	0xaa1
 5175 133c 02       		.uleb128 0x2
 5176 133d 91       		.byte	0x91
 5177 133e 6B       		.sleb128 -21
 5178 133f 18       		.uleb128 0x18
 5179 1340 B80D0000 		.4byte	.LASF295
 5180 1344 02       		.byte	0x2
 5181 1345 9C04     		.2byte	0x49c
 5182 1347 D9000000 		.4byte	0xd9
 5183 134b 02       		.uleb128 0x2
 5184 134c 91       		.byte	0x91
 5185 134d 64       		.sleb128 -28
 5186 134e 18       		.uleb128 0x18
 5187 134f CC100000 		.4byte	.LASF296
 5188 1353 02       		.byte	0x2
 5189 1354 9C04     		.2byte	0x49c
 5190 1356 5B0A0000 		.4byte	0xa5b
 5191 135a 02       		.uleb128 0x2
 5192 135b 91       		.byte	0x91
 5193 135c 6A       		.sleb128 -22
 5194 135d 1E       		.uleb128 0x1e
 5195 135e 8D0A0000 		.4byte	.LASF297
 5196 1362 02       		.byte	0x2
 5197 1363 A204     		.2byte	0x4a2
 5198 1365 7C130000 		.4byte	0x137c
 5199 1369 02       		.uleb128 0x2
 5200 136a 91       		.byte	0x91
 5201 136b 74       		.sleb128 -12
 5202 136c 1E       		.uleb128 0x1e
 5203 136d 97020000 		.4byte	.LASF298
 5204 1371 02       		.byte	0x2
 5205 1372 A304     		.2byte	0x4a3
 5206 1374 7C130000 		.4byte	0x137c
 5207 1378 02       		.uleb128 0x2
 5208 1379 91       		.byte	0x91
 5209 137a 70       		.sleb128 -16
 5210 137b 00       		.byte	0
 5211 137c 15       		.uleb128 0x15
 5212 137d 04       		.byte	0x4
 5213 137e FD000000 		.4byte	0xfd
 5214 1382 20       		.uleb128 0x20
 5215 1383 3E080000 		.4byte	.LASF299
 5216 1387 02       		.byte	0x2
 5217 1388 CA04     		.2byte	0x4ca
 5218 138a D9000000 		.4byte	0xd9
 5219 138e 00000000 		.4byte	.LFB127
 5220 1392 3C000000 		.4byte	.LFE127-.LFB127
 5221 1396 01       		.uleb128 0x1
 5222 1397 9C       		.byte	0x9c
 5223 1398 BB130000 		.4byte	0x13bb
 5224 139c 18       		.uleb128 0x18
 5225 139d 43040000 		.4byte	.LASF180
 5226 13a1 02       		.byte	0x2
 5227 13a2 CA04     		.2byte	0x4ca
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 152


 5228 13a4 CE0C0000 		.4byte	0xcce
 5229 13a8 02       		.uleb128 0x2
 5230 13a9 91       		.byte	0x91
 5231 13aa 74       		.sleb128 -12
 5232 13ab 18       		.uleb128 0x18
 5233 13ac E5000000 		.4byte	.LASF294
 5234 13b0 02       		.byte	0x2
 5235 13b1 CA04     		.2byte	0x4ca
 5236 13b3 A10A0000 		.4byte	0xaa1
 5237 13b7 02       		.uleb128 0x2
 5238 13b8 91       		.byte	0x91
 5239 13b9 73       		.sleb128 -13
 5240 13ba 00       		.byte	0
 5241 13bb 1D       		.uleb128 0x1d
 5242 13bc F1060000 		.4byte	.LASF300
 5243 13c0 02       		.byte	0x2
 5244 13c1 EB04     		.2byte	0x4eb
 5245 13c3 00000000 		.4byte	.LFB128
 5246 13c7 90000000 		.4byte	.LFE128-.LFB128
 5247 13cb 01       		.uleb128 0x1
 5248 13cc 9C       		.byte	0x9c
 5249 13cd FF130000 		.4byte	0x13ff
 5250 13d1 18       		.uleb128 0x18
 5251 13d2 43040000 		.4byte	.LASF180
 5252 13d6 02       		.byte	0x2
 5253 13d7 EB04     		.2byte	0x4eb
 5254 13d9 630D0000 		.4byte	0xd63
 5255 13dd 02       		.uleb128 0x2
 5256 13de 91       		.byte	0x91
 5257 13df 74       		.sleb128 -12
 5258 13e0 18       		.uleb128 0x18
 5259 13e1 B80D0000 		.4byte	.LASF295
 5260 13e5 02       		.byte	0x2
 5261 13e6 EB04     		.2byte	0x4eb
 5262 13e8 D9000000 		.4byte	0xd9
 5263 13ec 02       		.uleb128 0x2
 5264 13ed 91       		.byte	0x91
 5265 13ee 70       		.sleb128 -16
 5266 13ef 18       		.uleb128 0x18
 5267 13f0 51050000 		.4byte	.LASF222
 5268 13f4 02       		.byte	0x2
 5269 13f5 EB04     		.2byte	0x4eb
 5270 13f7 810A0000 		.4byte	0xa81
 5271 13fb 02       		.uleb128 0x2
 5272 13fc 91       		.byte	0x91
 5273 13fd 6F       		.sleb128 -17
 5274 13fe 00       		.byte	0
 5275 13ff 20       		.uleb128 0x20
 5276 1400 BE030000 		.4byte	.LASF301
 5277 1404 02       		.byte	0x2
 5278 1405 1205     		.2byte	0x512
 5279 1407 44090000 		.4byte	0x944
 5280 140b 00000000 		.4byte	.LFB129
 5281 140f 42000000 		.4byte	.LFE129-.LFB129
 5282 1413 01       		.uleb128 0x1
 5283 1414 9C       		.byte	0x9c
 5284 1415 47140000 		.4byte	0x1447
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 153


 5285 1419 18       		.uleb128 0x18
 5286 141a 65110000 		.4byte	.LASF302
 5287 141e 02       		.byte	0x2
 5288 141f 1205     		.2byte	0x512
 5289 1421 B4090000 		.4byte	0x9b4
 5290 1425 02       		.uleb128 0x2
 5291 1426 91       		.byte	0x91
 5292 1427 6C       		.sleb128 -20
 5293 1428 18       		.uleb128 0x18
 5294 1429 250E0000 		.4byte	.LASF260
 5295 142d 02       		.byte	0x2
 5296 142e 1205     		.2byte	0x512
 5297 1430 76090000 		.4byte	0x976
 5298 1434 02       		.uleb128 0x2
 5299 1435 91       		.byte	0x91
 5300 1436 6B       		.sleb128 -21
 5301 1437 1E       		.uleb128 0x1e
 5302 1438 0A0B0000 		.4byte	.LASF303
 5303 143c 02       		.byte	0x2
 5304 143d 1405     		.2byte	0x514
 5305 143f 44090000 		.4byte	0x944
 5306 1443 02       		.uleb128 0x2
 5307 1444 91       		.byte	0x91
 5308 1445 74       		.sleb128 -12
 5309 1446 00       		.byte	0
 5310 1447 1B       		.uleb128 0x1b
 5311 1448 6F130000 		.4byte	.LASF304
 5312 144c 02       		.byte	0x2
 5313 144d 16       		.byte	0x16
 5314 144e 890C0000 		.4byte	0xc89
 5315 1452 05       		.uleb128 0x5
 5316 1453 03       		.byte	0x3
 5317 1454 00000000 		.4byte	enabledBeforeSleep
 5318 1458 22       		.uleb128 0x22
 5319 1459 77000000 		.4byte	.LASF305
 5320 145d 07       		.byte	0x7
 5321 145e A7       		.byte	0xa7
 5322 145f 63140000 		.4byte	0x1463
 5323 1463 15       		.uleb128 0x15
 5324 1464 04       		.byte	0x4
 5325 1465 69140000 		.4byte	0x1469
 5326 1469 06       		.uleb128 0x6
 5327 146a BF080000 		.4byte	0x8bf
 5328 146e 07       		.uleb128 0x7
 5329 146f 7E140000 		.4byte	0x147e
 5330 1473 7E140000 		.4byte	0x147e
 5331 1477 08       		.uleb128 0x8
 5332 1478 F6000000 		.4byte	0xf6
 5333 147c 0F       		.byte	0xf
 5334 147d 00       		.byte	0
 5335 147e 05       		.uleb128 0x5
 5336 147f B8000000 		.4byte	0xb8
 5337 1483 23       		.uleb128 0x23
 5338 1484 8D090000 		.4byte	.LASF306
 5339 1488 02       		.byte	0x2
 5340 1489 1C       		.byte	0x1c
 5341 148a 94140000 		.4byte	0x1494
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 154


 5342 148e 05       		.uleb128 0x5
 5343 148f 03       		.byte	0x3
 5344 1490 00000000 		.4byte	Cy_SAR_offset
 5345 1494 05       		.uleb128 0x5
 5346 1495 6E140000 		.4byte	0x146e
 5347 1499 07       		.uleb128 0x7
 5348 149a A9140000 		.4byte	0x14a9
 5349 149e A9140000 		.4byte	0x14a9
 5350 14a2 08       		.uleb128 0x8
 5351 14a3 F6000000 		.4byte	0xf6
 5352 14a7 0F       		.byte	0xf
 5353 14a8 00       		.byte	0
 5354 14a9 05       		.uleb128 0x5
 5355 14aa CE000000 		.4byte	0xce
 5356 14ae 23       		.uleb128 0x23
 5357 14af D20A0000 		.4byte	.LASF307
 5358 14b3 02       		.byte	0x2
 5359 14b4 1D       		.byte	0x1d
 5360 14b5 BF140000 		.4byte	0x14bf
 5361 14b9 05       		.uleb128 0x5
 5362 14ba 03       		.byte	0x3
 5363 14bb 00000000 		.4byte	Cy_SAR_countsPer10Volt
 5364 14bf 05       		.uleb128 0x5
 5365 14c0 99140000 		.4byte	0x1499
 5366 14c4 00       		.byte	0
 5367              		.section	.debug_abbrev,"",%progbits
 5368              	.Ldebug_abbrev0:
 5369 0000 01       		.uleb128 0x1
 5370 0001 11       		.uleb128 0x11
 5371 0002 01       		.byte	0x1
 5372 0003 25       		.uleb128 0x25
 5373 0004 0E       		.uleb128 0xe
 5374 0005 13       		.uleb128 0x13
 5375 0006 0B       		.uleb128 0xb
 5376 0007 03       		.uleb128 0x3
 5377 0008 0E       		.uleb128 0xe
 5378 0009 1B       		.uleb128 0x1b
 5379 000a 0E       		.uleb128 0xe
 5380 000b 55       		.uleb128 0x55
 5381 000c 17       		.uleb128 0x17
 5382 000d 11       		.uleb128 0x11
 5383 000e 01       		.uleb128 0x1
 5384 000f 10       		.uleb128 0x10
 5385 0010 17       		.uleb128 0x17
 5386 0011 00       		.byte	0
 5387 0012 00       		.byte	0
 5388 0013 02       		.uleb128 0x2
 5389 0014 24       		.uleb128 0x24
 5390 0015 00       		.byte	0
 5391 0016 0B       		.uleb128 0xb
 5392 0017 0B       		.uleb128 0xb
 5393 0018 3E       		.uleb128 0x3e
 5394 0019 0B       		.uleb128 0xb
 5395 001a 03       		.uleb128 0x3
 5396 001b 0E       		.uleb128 0xe
 5397 001c 00       		.byte	0
 5398 001d 00       		.byte	0
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 155


 5399 001e 03       		.uleb128 0x3
 5400 001f 16       		.uleb128 0x16
 5401 0020 00       		.byte	0
 5402 0021 03       		.uleb128 0x3
 5403 0022 0E       		.uleb128 0xe
 5404 0023 3A       		.uleb128 0x3a
 5405 0024 0B       		.uleb128 0xb
 5406 0025 3B       		.uleb128 0x3b
 5407 0026 0B       		.uleb128 0xb
 5408 0027 49       		.uleb128 0x49
 5409 0028 13       		.uleb128 0x13
 5410 0029 00       		.byte	0
 5411 002a 00       		.byte	0
 5412 002b 04       		.uleb128 0x4
 5413 002c 24       		.uleb128 0x24
 5414 002d 00       		.byte	0
 5415 002e 0B       		.uleb128 0xb
 5416 002f 0B       		.uleb128 0xb
 5417 0030 3E       		.uleb128 0x3e
 5418 0031 0B       		.uleb128 0xb
 5419 0032 03       		.uleb128 0x3
 5420 0033 08       		.uleb128 0x8
 5421 0034 00       		.byte	0
 5422 0035 00       		.byte	0
 5423 0036 05       		.uleb128 0x5
 5424 0037 35       		.uleb128 0x35
 5425 0038 00       		.byte	0
 5426 0039 49       		.uleb128 0x49
 5427 003a 13       		.uleb128 0x13
 5428 003b 00       		.byte	0
 5429 003c 00       		.byte	0
 5430 003d 06       		.uleb128 0x6
 5431 003e 26       		.uleb128 0x26
 5432 003f 00       		.byte	0
 5433 0040 49       		.uleb128 0x49
 5434 0041 13       		.uleb128 0x13
 5435 0042 00       		.byte	0
 5436 0043 00       		.byte	0
 5437 0044 07       		.uleb128 0x7
 5438 0045 01       		.uleb128 0x1
 5439 0046 01       		.byte	0x1
 5440 0047 49       		.uleb128 0x49
 5441 0048 13       		.uleb128 0x13
 5442 0049 01       		.uleb128 0x1
 5443 004a 13       		.uleb128 0x13
 5444 004b 00       		.byte	0
 5445 004c 00       		.byte	0
 5446 004d 08       		.uleb128 0x8
 5447 004e 21       		.uleb128 0x21
 5448 004f 00       		.byte	0
 5449 0050 49       		.uleb128 0x49
 5450 0051 13       		.uleb128 0x13
 5451 0052 2F       		.uleb128 0x2f
 5452 0053 0B       		.uleb128 0xb
 5453 0054 00       		.byte	0
 5454 0055 00       		.byte	0
 5455 0056 09       		.uleb128 0x9
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 156


 5456 0057 13       		.uleb128 0x13
 5457 0058 01       		.byte	0x1
 5458 0059 0B       		.uleb128 0xb
 5459 005a 05       		.uleb128 0x5
 5460 005b 3A       		.uleb128 0x3a
 5461 005c 0B       		.uleb128 0xb
 5462 005d 3B       		.uleb128 0x3b
 5463 005e 0B       		.uleb128 0xb
 5464 005f 01       		.uleb128 0x1
 5465 0060 13       		.uleb128 0x13
 5466 0061 00       		.byte	0
 5467 0062 00       		.byte	0
 5468 0063 0A       		.uleb128 0xa
 5469 0064 0D       		.uleb128 0xd
 5470 0065 00       		.byte	0
 5471 0066 03       		.uleb128 0x3
 5472 0067 0E       		.uleb128 0xe
 5473 0068 3A       		.uleb128 0x3a
 5474 0069 0B       		.uleb128 0xb
 5475 006a 3B       		.uleb128 0x3b
 5476 006b 0B       		.uleb128 0xb
 5477 006c 49       		.uleb128 0x49
 5478 006d 13       		.uleb128 0x13
 5479 006e 38       		.uleb128 0x38
 5480 006f 0B       		.uleb128 0xb
 5481 0070 00       		.byte	0
 5482 0071 00       		.byte	0
 5483 0072 0B       		.uleb128 0xb
 5484 0073 0D       		.uleb128 0xd
 5485 0074 00       		.byte	0
 5486 0075 03       		.uleb128 0x3
 5487 0076 0E       		.uleb128 0xe
 5488 0077 3A       		.uleb128 0x3a
 5489 0078 0B       		.uleb128 0xb
 5490 0079 3B       		.uleb128 0x3b
 5491 007a 0B       		.uleb128 0xb
 5492 007b 49       		.uleb128 0x49
 5493 007c 13       		.uleb128 0x13
 5494 007d 38       		.uleb128 0x38
 5495 007e 05       		.uleb128 0x5
 5496 007f 00       		.byte	0
 5497 0080 00       		.byte	0
 5498 0081 0C       		.uleb128 0xc
 5499 0082 21       		.uleb128 0x21
 5500 0083 00       		.byte	0
 5501 0084 49       		.uleb128 0x49
 5502 0085 13       		.uleb128 0x13
 5503 0086 2F       		.uleb128 0x2f
 5504 0087 05       		.uleb128 0x5
 5505 0088 00       		.byte	0
 5506 0089 00       		.byte	0
 5507 008a 0D       		.uleb128 0xd
 5508 008b 16       		.uleb128 0x16
 5509 008c 00       		.byte	0
 5510 008d 03       		.uleb128 0x3
 5511 008e 0E       		.uleb128 0xe
 5512 008f 3A       		.uleb128 0x3a
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 157


 5513 0090 0B       		.uleb128 0xb
 5514 0091 3B       		.uleb128 0x3b
 5515 0092 05       		.uleb128 0x5
 5516 0093 49       		.uleb128 0x49
 5517 0094 13       		.uleb128 0x13
 5518 0095 00       		.byte	0
 5519 0096 00       		.byte	0
 5520 0097 0E       		.uleb128 0xe
 5521 0098 13       		.uleb128 0x13
 5522 0099 01       		.byte	0x1
 5523 009a 0B       		.uleb128 0xb
 5524 009b 0B       		.uleb128 0xb
 5525 009c 3A       		.uleb128 0x3a
 5526 009d 0B       		.uleb128 0xb
 5527 009e 3B       		.uleb128 0x3b
 5528 009f 0B       		.uleb128 0xb
 5529 00a0 01       		.uleb128 0x1
 5530 00a1 13       		.uleb128 0x13
 5531 00a2 00       		.byte	0
 5532 00a3 00       		.byte	0
 5533 00a4 0F       		.uleb128 0xf
 5534 00a5 04       		.uleb128 0x4
 5535 00a6 01       		.byte	0x1
 5536 00a7 0B       		.uleb128 0xb
 5537 00a8 0B       		.uleb128 0xb
 5538 00a9 49       		.uleb128 0x49
 5539 00aa 13       		.uleb128 0x13
 5540 00ab 3A       		.uleb128 0x3a
 5541 00ac 0B       		.uleb128 0xb
 5542 00ad 3B       		.uleb128 0x3b
 5543 00ae 05       		.uleb128 0x5
 5544 00af 01       		.uleb128 0x1
 5545 00b0 13       		.uleb128 0x13
 5546 00b1 00       		.byte	0
 5547 00b2 00       		.byte	0
 5548 00b3 10       		.uleb128 0x10
 5549 00b4 28       		.uleb128 0x28
 5550 00b5 00       		.byte	0
 5551 00b6 03       		.uleb128 0x3
 5552 00b7 0E       		.uleb128 0xe
 5553 00b8 1C       		.uleb128 0x1c
 5554 00b9 0B       		.uleb128 0xb
 5555 00ba 00       		.byte	0
 5556 00bb 00       		.byte	0
 5557 00bc 11       		.uleb128 0x11
 5558 00bd 28       		.uleb128 0x28
 5559 00be 00       		.byte	0
 5560 00bf 03       		.uleb128 0x3
 5561 00c0 0E       		.uleb128 0xe
 5562 00c1 1C       		.uleb128 0x1c
 5563 00c2 06       		.uleb128 0x6
 5564 00c3 00       		.byte	0
 5565 00c4 00       		.byte	0
 5566 00c5 12       		.uleb128 0x12
 5567 00c6 13       		.uleb128 0x13
 5568 00c7 01       		.byte	0x1
 5569 00c8 0B       		.uleb128 0xb
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 158


 5570 00c9 0B       		.uleb128 0xb
 5571 00ca 3A       		.uleb128 0x3a
 5572 00cb 0B       		.uleb128 0xb
 5573 00cc 3B       		.uleb128 0x3b
 5574 00cd 05       		.uleb128 0x5
 5575 00ce 01       		.uleb128 0x1
 5576 00cf 13       		.uleb128 0x13
 5577 00d0 00       		.byte	0
 5578 00d1 00       		.byte	0
 5579 00d2 13       		.uleb128 0x13
 5580 00d3 0D       		.uleb128 0xd
 5581 00d4 00       		.byte	0
 5582 00d5 03       		.uleb128 0x3
 5583 00d6 0E       		.uleb128 0xe
 5584 00d7 3A       		.uleb128 0x3a
 5585 00d8 0B       		.uleb128 0xb
 5586 00d9 3B       		.uleb128 0x3b
 5587 00da 05       		.uleb128 0x5
 5588 00db 49       		.uleb128 0x49
 5589 00dc 13       		.uleb128 0x13
 5590 00dd 38       		.uleb128 0x38
 5591 00de 0B       		.uleb128 0xb
 5592 00df 00       		.byte	0
 5593 00e0 00       		.byte	0
 5594 00e1 14       		.uleb128 0x14
 5595 00e2 0F       		.uleb128 0xf
 5596 00e3 00       		.byte	0
 5597 00e4 0B       		.uleb128 0xb
 5598 00e5 0B       		.uleb128 0xb
 5599 00e6 00       		.byte	0
 5600 00e7 00       		.byte	0
 5601 00e8 15       		.uleb128 0x15
 5602 00e9 0F       		.uleb128 0xf
 5603 00ea 00       		.byte	0
 5604 00eb 0B       		.uleb128 0xb
 5605 00ec 0B       		.uleb128 0xb
 5606 00ed 49       		.uleb128 0x49
 5607 00ee 13       		.uleb128 0x13
 5608 00ef 00       		.byte	0
 5609 00f0 00       		.byte	0
 5610 00f1 16       		.uleb128 0x16
 5611 00f2 28       		.uleb128 0x28
 5612 00f3 00       		.byte	0
 5613 00f4 03       		.uleb128 0x3
 5614 00f5 0E       		.uleb128 0xe
 5615 00f6 1C       		.uleb128 0x1c
 5616 00f7 05       		.uleb128 0x5
 5617 00f8 00       		.byte	0
 5618 00f9 00       		.byte	0
 5619 00fa 17       		.uleb128 0x17
 5620 00fb 2E       		.uleb128 0x2e
 5621 00fc 01       		.byte	0x1
 5622 00fd 03       		.uleb128 0x3
 5623 00fe 0E       		.uleb128 0xe
 5624 00ff 3A       		.uleb128 0x3a
 5625 0100 0B       		.uleb128 0xb
 5626 0101 3B       		.uleb128 0x3b
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 159


 5627 0102 05       		.uleb128 0x5
 5628 0103 27       		.uleb128 0x27
 5629 0104 19       		.uleb128 0x19
 5630 0105 49       		.uleb128 0x49
 5631 0106 13       		.uleb128 0x13
 5632 0107 11       		.uleb128 0x11
 5633 0108 01       		.uleb128 0x1
 5634 0109 12       		.uleb128 0x12
 5635 010a 06       		.uleb128 0x6
 5636 010b 40       		.uleb128 0x40
 5637 010c 18       		.uleb128 0x18
 5638 010d 9642     		.uleb128 0x2116
 5639 010f 19       		.uleb128 0x19
 5640 0110 01       		.uleb128 0x1
 5641 0111 13       		.uleb128 0x13
 5642 0112 00       		.byte	0
 5643 0113 00       		.byte	0
 5644 0114 18       		.uleb128 0x18
 5645 0115 05       		.uleb128 0x5
 5646 0116 00       		.byte	0
 5647 0117 03       		.uleb128 0x3
 5648 0118 0E       		.uleb128 0xe
 5649 0119 3A       		.uleb128 0x3a
 5650 011a 0B       		.uleb128 0xb
 5651 011b 3B       		.uleb128 0x3b
 5652 011c 05       		.uleb128 0x5
 5653 011d 49       		.uleb128 0x49
 5654 011e 13       		.uleb128 0x13
 5655 011f 02       		.uleb128 0x2
 5656 0120 18       		.uleb128 0x18
 5657 0121 00       		.byte	0
 5658 0122 00       		.byte	0
 5659 0123 19       		.uleb128 0x19
 5660 0124 2E       		.uleb128 0x2e
 5661 0125 01       		.byte	0x1
 5662 0126 3F       		.uleb128 0x3f
 5663 0127 19       		.uleb128 0x19
 5664 0128 03       		.uleb128 0x3
 5665 0129 0E       		.uleb128 0xe
 5666 012a 3A       		.uleb128 0x3a
 5667 012b 0B       		.uleb128 0xb
 5668 012c 3B       		.uleb128 0x3b
 5669 012d 0B       		.uleb128 0xb
 5670 012e 27       		.uleb128 0x27
 5671 012f 19       		.uleb128 0x19
 5672 0130 49       		.uleb128 0x49
 5673 0131 13       		.uleb128 0x13
 5674 0132 11       		.uleb128 0x11
 5675 0133 01       		.uleb128 0x1
 5676 0134 12       		.uleb128 0x12
 5677 0135 06       		.uleb128 0x6
 5678 0136 40       		.uleb128 0x40
 5679 0137 18       		.uleb128 0x18
 5680 0138 9642     		.uleb128 0x2116
 5681 013a 19       		.uleb128 0x19
 5682 013b 01       		.uleb128 0x1
 5683 013c 13       		.uleb128 0x13
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 160


 5684 013d 00       		.byte	0
 5685 013e 00       		.byte	0
 5686 013f 1A       		.uleb128 0x1a
 5687 0140 05       		.uleb128 0x5
 5688 0141 00       		.byte	0
 5689 0142 03       		.uleb128 0x3
 5690 0143 0E       		.uleb128 0xe
 5691 0144 3A       		.uleb128 0x3a
 5692 0145 0B       		.uleb128 0xb
 5693 0146 3B       		.uleb128 0x3b
 5694 0147 0B       		.uleb128 0xb
 5695 0148 49       		.uleb128 0x49
 5696 0149 13       		.uleb128 0x13
 5697 014a 02       		.uleb128 0x2
 5698 014b 18       		.uleb128 0x18
 5699 014c 00       		.byte	0
 5700 014d 00       		.byte	0
 5701 014e 1B       		.uleb128 0x1b
 5702 014f 34       		.uleb128 0x34
 5703 0150 00       		.byte	0
 5704 0151 03       		.uleb128 0x3
 5705 0152 0E       		.uleb128 0xe
 5706 0153 3A       		.uleb128 0x3a
 5707 0154 0B       		.uleb128 0xb
 5708 0155 3B       		.uleb128 0x3b
 5709 0156 0B       		.uleb128 0xb
 5710 0157 49       		.uleb128 0x49
 5711 0158 13       		.uleb128 0x13
 5712 0159 02       		.uleb128 0x2
 5713 015a 18       		.uleb128 0x18
 5714 015b 00       		.byte	0
 5715 015c 00       		.byte	0
 5716 015d 1C       		.uleb128 0x1c
 5717 015e 2E       		.uleb128 0x2e
 5718 015f 01       		.byte	0x1
 5719 0160 3F       		.uleb128 0x3f
 5720 0161 19       		.uleb128 0x19
 5721 0162 03       		.uleb128 0x3
 5722 0163 0E       		.uleb128 0xe
 5723 0164 3A       		.uleb128 0x3a
 5724 0165 0B       		.uleb128 0xb
 5725 0166 3B       		.uleb128 0x3b
 5726 0167 0B       		.uleb128 0xb
 5727 0168 27       		.uleb128 0x27
 5728 0169 19       		.uleb128 0x19
 5729 016a 11       		.uleb128 0x11
 5730 016b 01       		.uleb128 0x1
 5731 016c 12       		.uleb128 0x12
 5732 016d 06       		.uleb128 0x6
 5733 016e 40       		.uleb128 0x40
 5734 016f 18       		.uleb128 0x18
 5735 0170 9642     		.uleb128 0x2116
 5736 0172 19       		.uleb128 0x19
 5737 0173 01       		.uleb128 0x1
 5738 0174 13       		.uleb128 0x13
 5739 0175 00       		.byte	0
 5740 0176 00       		.byte	0
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 161


 5741 0177 1D       		.uleb128 0x1d
 5742 0178 2E       		.uleb128 0x2e
 5743 0179 01       		.byte	0x1
 5744 017a 3F       		.uleb128 0x3f
 5745 017b 19       		.uleb128 0x19
 5746 017c 03       		.uleb128 0x3
 5747 017d 0E       		.uleb128 0xe
 5748 017e 3A       		.uleb128 0x3a
 5749 017f 0B       		.uleb128 0xb
 5750 0180 3B       		.uleb128 0x3b
 5751 0181 05       		.uleb128 0x5
 5752 0182 27       		.uleb128 0x27
 5753 0183 19       		.uleb128 0x19
 5754 0184 11       		.uleb128 0x11
 5755 0185 01       		.uleb128 0x1
 5756 0186 12       		.uleb128 0x12
 5757 0187 06       		.uleb128 0x6
 5758 0188 40       		.uleb128 0x40
 5759 0189 18       		.uleb128 0x18
 5760 018a 9642     		.uleb128 0x2116
 5761 018c 19       		.uleb128 0x19
 5762 018d 01       		.uleb128 0x1
 5763 018e 13       		.uleb128 0x13
 5764 018f 00       		.byte	0
 5765 0190 00       		.byte	0
 5766 0191 1E       		.uleb128 0x1e
 5767 0192 34       		.uleb128 0x34
 5768 0193 00       		.byte	0
 5769 0194 03       		.uleb128 0x3
 5770 0195 0E       		.uleb128 0xe
 5771 0196 3A       		.uleb128 0x3a
 5772 0197 0B       		.uleb128 0xb
 5773 0198 3B       		.uleb128 0x3b
 5774 0199 05       		.uleb128 0x5
 5775 019a 49       		.uleb128 0x49
 5776 019b 13       		.uleb128 0x13
 5777 019c 02       		.uleb128 0x2
 5778 019d 18       		.uleb128 0x18
 5779 019e 00       		.byte	0
 5780 019f 00       		.byte	0
 5781 01a0 1F       		.uleb128 0x1f
 5782 01a1 2E       		.uleb128 0x2e
 5783 01a2 01       		.byte	0x1
 5784 01a3 3F       		.uleb128 0x3f
 5785 01a4 19       		.uleb128 0x19
 5786 01a5 03       		.uleb128 0x3
 5787 01a6 0E       		.uleb128 0xe
 5788 01a7 3A       		.uleb128 0x3a
 5789 01a8 0B       		.uleb128 0xb
 5790 01a9 3B       		.uleb128 0x3b
 5791 01aa 05       		.uleb128 0x5
 5792 01ab 27       		.uleb128 0x27
 5793 01ac 19       		.uleb128 0x19
 5794 01ad 11       		.uleb128 0x11
 5795 01ae 01       		.uleb128 0x1
 5796 01af 12       		.uleb128 0x12
 5797 01b0 06       		.uleb128 0x6
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 162


 5798 01b1 40       		.uleb128 0x40
 5799 01b2 18       		.uleb128 0x18
 5800 01b3 9742     		.uleb128 0x2117
 5801 01b5 19       		.uleb128 0x19
 5802 01b6 01       		.uleb128 0x1
 5803 01b7 13       		.uleb128 0x13
 5804 01b8 00       		.byte	0
 5805 01b9 00       		.byte	0
 5806 01ba 20       		.uleb128 0x20
 5807 01bb 2E       		.uleb128 0x2e
 5808 01bc 01       		.byte	0x1
 5809 01bd 3F       		.uleb128 0x3f
 5810 01be 19       		.uleb128 0x19
 5811 01bf 03       		.uleb128 0x3
 5812 01c0 0E       		.uleb128 0xe
 5813 01c1 3A       		.uleb128 0x3a
 5814 01c2 0B       		.uleb128 0xb
 5815 01c3 3B       		.uleb128 0x3b
 5816 01c4 05       		.uleb128 0x5
 5817 01c5 27       		.uleb128 0x27
 5818 01c6 19       		.uleb128 0x19
 5819 01c7 49       		.uleb128 0x49
 5820 01c8 13       		.uleb128 0x13
 5821 01c9 11       		.uleb128 0x11
 5822 01ca 01       		.uleb128 0x1
 5823 01cb 12       		.uleb128 0x12
 5824 01cc 06       		.uleb128 0x6
 5825 01cd 40       		.uleb128 0x40
 5826 01ce 18       		.uleb128 0x18
 5827 01cf 9642     		.uleb128 0x2116
 5828 01d1 19       		.uleb128 0x19
 5829 01d2 01       		.uleb128 0x1
 5830 01d3 13       		.uleb128 0x13
 5831 01d4 00       		.byte	0
 5832 01d5 00       		.byte	0
 5833 01d6 21       		.uleb128 0x21
 5834 01d7 34       		.uleb128 0x34
 5835 01d8 00       		.byte	0
 5836 01d9 03       		.uleb128 0x3
 5837 01da 08       		.uleb128 0x8
 5838 01db 3A       		.uleb128 0x3a
 5839 01dc 0B       		.uleb128 0xb
 5840 01dd 3B       		.uleb128 0x3b
 5841 01de 05       		.uleb128 0x5
 5842 01df 49       		.uleb128 0x49
 5843 01e0 13       		.uleb128 0x13
 5844 01e1 02       		.uleb128 0x2
 5845 01e2 18       		.uleb128 0x18
 5846 01e3 00       		.byte	0
 5847 01e4 00       		.byte	0
 5848 01e5 22       		.uleb128 0x22
 5849 01e6 34       		.uleb128 0x34
 5850 01e7 00       		.byte	0
 5851 01e8 03       		.uleb128 0x3
 5852 01e9 0E       		.uleb128 0xe
 5853 01ea 3A       		.uleb128 0x3a
 5854 01eb 0B       		.uleb128 0xb
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 163


 5855 01ec 3B       		.uleb128 0x3b
 5856 01ed 0B       		.uleb128 0xb
 5857 01ee 49       		.uleb128 0x49
 5858 01ef 13       		.uleb128 0x13
 5859 01f0 3F       		.uleb128 0x3f
 5860 01f1 19       		.uleb128 0x19
 5861 01f2 3C       		.uleb128 0x3c
 5862 01f3 19       		.uleb128 0x19
 5863 01f4 00       		.byte	0
 5864 01f5 00       		.byte	0
 5865 01f6 23       		.uleb128 0x23
 5866 01f7 34       		.uleb128 0x34
 5867 01f8 00       		.byte	0
 5868 01f9 03       		.uleb128 0x3
 5869 01fa 0E       		.uleb128 0xe
 5870 01fb 3A       		.uleb128 0x3a
 5871 01fc 0B       		.uleb128 0xb
 5872 01fd 3B       		.uleb128 0x3b
 5873 01fe 0B       		.uleb128 0xb
 5874 01ff 49       		.uleb128 0x49
 5875 0200 13       		.uleb128 0x13
 5876 0201 3F       		.uleb128 0x3f
 5877 0202 19       		.uleb128 0x19
 5878 0203 02       		.uleb128 0x2
 5879 0204 18       		.uleb128 0x18
 5880 0205 00       		.byte	0
 5881 0206 00       		.byte	0
 5882 0207 00       		.byte	0
 5883              		.section	.debug_aranges,"",%progbits
 5884 0000 E4000000 		.4byte	0xe4
 5885 0004 0200     		.2byte	0x2
 5886 0006 00000000 		.4byte	.Ldebug_info0
 5887 000a 04       		.byte	0x4
 5888 000b 00       		.byte	0
 5889 000c 0000     		.2byte	0
 5890 000e 0000     		.2byte	0
 5891 0010 00000000 		.4byte	.LFB102
 5892 0014 34000000 		.4byte	.LFE102-.LFB102
 5893 0018 00000000 		.4byte	.LFB105
 5894 001c 60030000 		.4byte	.LFE105-.LFB105
 5895 0020 00000000 		.4byte	.LFB106
 5896 0024 E8000000 		.4byte	.LFE106-.LFB106
 5897 0028 00000000 		.4byte	.LFB107
 5898 002c 3A000000 		.4byte	.LFE107-.LFB107
 5899 0030 00000000 		.4byte	.LFB108
 5900 0034 7C000000 		.4byte	.LFE108-.LFB108
 5901 0038 00000000 		.4byte	.LFB109
 5902 003c 4C000000 		.4byte	.LFE109-.LFB109
 5903 0040 00000000 		.4byte	.LFB110
 5904 0044 5C000000 		.4byte	.LFE110-.LFB110
 5905 0048 00000000 		.4byte	.LFB111
 5906 004c 2C000000 		.4byte	.LFE111-.LFB111
 5907 0050 00000000 		.4byte	.LFB112
 5908 0054 58000000 		.4byte	.LFE112-.LFB112
 5909 0058 00000000 		.4byte	.LFB113
 5910 005c B4000000 		.4byte	.LFE113-.LFB113
 5911 0060 00000000 		.4byte	.LFB114
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 164


 5912 0064 78000000 		.4byte	.LFE114-.LFB114
 5913 0068 00000000 		.4byte	.LFB115
 5914 006c 5C000000 		.4byte	.LFE115-.LFB115
 5915 0070 00000000 		.4byte	.LFB116
 5916 0074 4C000000 		.4byte	.LFE116-.LFB116
 5917 0078 00000000 		.4byte	.LFB117
 5918 007c 70000000 		.4byte	.LFE117-.LFB117
 5919 0080 00000000 		.4byte	.LFB118
 5920 0084 50000000 		.4byte	.LFE118-.LFB118
 5921 0088 00000000 		.4byte	.LFB119
 5922 008c 4C000000 		.4byte	.LFE119-.LFB119
 5923 0090 00000000 		.4byte	.LFB120
 5924 0094 54000000 		.4byte	.LFE120-.LFB120
 5925 0098 00000000 		.4byte	.LFB121
 5926 009c 4C000000 		.4byte	.LFE121-.LFB121
 5927 00a0 00000000 		.4byte	.LFB122
 5928 00a4 F0000000 		.4byte	.LFE122-.LFB122
 5929 00a8 00000000 		.4byte	.LFB123
 5930 00ac 98000000 		.4byte	.LFE123-.LFB123
 5931 00b0 00000000 		.4byte	.LFB124
 5932 00b4 C4000000 		.4byte	.LFE124-.LFB124
 5933 00b8 00000000 		.4byte	.LFB125
 5934 00bc B4000000 		.4byte	.LFE125-.LFB125
 5935 00c0 00000000 		.4byte	.LFB126
 5936 00c4 BC000000 		.4byte	.LFE126-.LFB126
 5937 00c8 00000000 		.4byte	.LFB127
 5938 00cc 3C000000 		.4byte	.LFE127-.LFB127
 5939 00d0 00000000 		.4byte	.LFB128
 5940 00d4 90000000 		.4byte	.LFE128-.LFB128
 5941 00d8 00000000 		.4byte	.LFB129
 5942 00dc 42000000 		.4byte	.LFE129-.LFB129
 5943 00e0 00000000 		.4byte	0
 5944 00e4 00000000 		.4byte	0
 5945              		.section	.debug_ranges,"",%progbits
 5946              	.Ldebug_ranges0:
 5947 0000 00000000 		.4byte	.LFB102
 5948 0004 34000000 		.4byte	.LFE102
 5949 0008 00000000 		.4byte	.LFB105
 5950 000c 60030000 		.4byte	.LFE105
 5951 0010 00000000 		.4byte	.LFB106
 5952 0014 E8000000 		.4byte	.LFE106
 5953 0018 00000000 		.4byte	.LFB107
 5954 001c 3A000000 		.4byte	.LFE107
 5955 0020 00000000 		.4byte	.LFB108
 5956 0024 7C000000 		.4byte	.LFE108
 5957 0028 00000000 		.4byte	.LFB109
 5958 002c 4C000000 		.4byte	.LFE109
 5959 0030 00000000 		.4byte	.LFB110
 5960 0034 5C000000 		.4byte	.LFE110
 5961 0038 00000000 		.4byte	.LFB111
 5962 003c 2C000000 		.4byte	.LFE111
 5963 0040 00000000 		.4byte	.LFB112
 5964 0044 58000000 		.4byte	.LFE112
 5965 0048 00000000 		.4byte	.LFB113
 5966 004c B4000000 		.4byte	.LFE113
 5967 0050 00000000 		.4byte	.LFB114
 5968 0054 78000000 		.4byte	.LFE114
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 165


 5969 0058 00000000 		.4byte	.LFB115
 5970 005c 5C000000 		.4byte	.LFE115
 5971 0060 00000000 		.4byte	.LFB116
 5972 0064 4C000000 		.4byte	.LFE116
 5973 0068 00000000 		.4byte	.LFB117
 5974 006c 70000000 		.4byte	.LFE117
 5975 0070 00000000 		.4byte	.LFB118
 5976 0074 50000000 		.4byte	.LFE118
 5977 0078 00000000 		.4byte	.LFB119
 5978 007c 4C000000 		.4byte	.LFE119
 5979 0080 00000000 		.4byte	.LFB120
 5980 0084 54000000 		.4byte	.LFE120
 5981 0088 00000000 		.4byte	.LFB121
 5982 008c 4C000000 		.4byte	.LFE121
 5983 0090 00000000 		.4byte	.LFB122
 5984 0094 F0000000 		.4byte	.LFE122
 5985 0098 00000000 		.4byte	.LFB123
 5986 009c 98000000 		.4byte	.LFE123
 5987 00a0 00000000 		.4byte	.LFB124
 5988 00a4 C4000000 		.4byte	.LFE124
 5989 00a8 00000000 		.4byte	.LFB125
 5990 00ac B4000000 		.4byte	.LFE125
 5991 00b0 00000000 		.4byte	.LFB126
 5992 00b4 BC000000 		.4byte	.LFE126
 5993 00b8 00000000 		.4byte	.LFB127
 5994 00bc 3C000000 		.4byte	.LFE127
 5995 00c0 00000000 		.4byte	.LFB128
 5996 00c4 90000000 		.4byte	.LFE128
 5997 00c8 00000000 		.4byte	.LFB129
 5998 00cc 42000000 		.4byte	.LFE129
 5999 00d0 00000000 		.4byte	0
 6000 00d4 00000000 		.4byte	0
 6001              		.section	.debug_line,"",%progbits
 6002              	.Ldebug_line0:
 6003 0000 FC060000 		.section	.debug_str,"MS",%progbits,1
 6003      0200AC02 
 6003      00000201 
 6003      FB0E0D00 
 6003      01010101 
 6004              	.LASF118:
 6005 0000 666C6173 		.ascii	"flashCtlMainWs1Freq\000"
 6005      6843746C 
 6005      4D61696E 
 6005      57733146 
 6005      72657100 
 6006              	.LASF276:
 6007 0014 72616E67 		.ascii	"rangeThresReg\000"
 6007      65546872 
 6007      65735265 
 6007      6700
 6008              	.LASF275:
 6009 0022 6C6F774C 		.ascii	"lowLimit\000"
 6009      696D6974 
 6009      00
 6010              	.LASF25:
 6011 002b 52455345 		.ascii	"RESERVED\000"
 6011      52564544 
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 166


 6011      00
 6012              	.LASF54:
 6013 0034 52414E47 		.ascii	"RANGE_INTR_MASKED\000"
 6013      455F494E 
 6013      54525F4D 
 6013      41534B45 
 6013      4400
 6014              	.LASF39:
 6015 0046 4348414E 		.ascii	"CHAN_WORK_UPDATED\000"
 6015      5F574F52 
 6015      4B5F5550 
 6015      44415445 
 6015      4400
 6016              	.LASF182:
 6017 0058 63795F73 		.ascii	"cy_stc_syspm_callback_params_t\000"
 6017      74635F73 
 6017      7973706D 
 6017      5F63616C 
 6017      6C626163 
 6018              	.LASF305:
 6019 0077 63795F64 		.ascii	"cy_device\000"
 6019      65766963 
 6019      6500
 6020              	.LASF242:
 6021 0081 6368616E 		.ascii	"chan\000"
 6021      00
 6022              	.LASF273:
 6023 0086 66696E61 		.ascii	"finalResult\000"
 6023      6C526573 
 6023      756C7400 
 6024              	.LASF208:
 6025 0092 43595F53 		.ascii	"CY_SAR_NEG_SEL_VREF\000"
 6025      41525F4E 
 6025      45475F53 
 6025      454C5F56 
 6025      52454600 
 6026              	.LASF104:
 6027 00a6 70657269 		.ascii	"periClockNr\000"
 6027      436C6F63 
 6027      6B4E7200 
 6028              	.LASF163:
 6029 00b2 63686172 		.ascii	"char\000"
 6029      00
 6030              	.LASF78:
 6031 00b7 75646242 		.ascii	"udbBase\000"
 6031      61736500 
 6032              	.LASF30:
 6033 00bf 4348414E 		.ascii	"CHAN_EN\000"
 6033      5F454E00 
 6034              	.LASF174:
 6035 00c7 63795F65 		.ascii	"cy_en_syspm_status_t\000"
 6035      6E5F7379 
 6035      73706D5F 
 6035      73746174 
 6035      75735F74 
 6036              	.LASF77:
 6037 00dc 70657269 		.ascii	"periBase\000"
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 167


 6037      42617365 
 6037      00
 6038              	.LASF294:
 6039 00e5 73776974 		.ascii	"switchSelect\000"
 6039      63685365 
 6039      6C656374 
 6039      00
 6040              	.LASF153:
 6041 00f2 63707573 		.ascii	"cpussCm0NmiCtlOffset\000"
 6041      73436D30 
 6041      4E6D6943 
 6041      746C4F66 
 6041      66736574 
 6042              	.LASF123:
 6043 0107 64774368 		.ascii	"dwChSize\000"
 6043      53697A65 
 6043      00
 6044              	.LASF284:
 6045 0110 61646343 		.ascii	"adcCounts\000"
 6045      6F756E74 
 6045      7300
 6046              	.LASF247:
 6047 011a 73696E67 		.ascii	"singleEndedSigned\000"
 6047      6C65456E 
 6047      64656453 
 6047      69676E65 
 6047      6400
 6048              	.LASF14:
 6049 012c 756E7369 		.ascii	"unsigned int\000"
 6049      676E6564 
 6049      20696E74 
 6049      00
 6050              	.LASF55:
 6051 0139 494E5452 		.ascii	"INTR_CAUSE\000"
 6051      5F434155 
 6051      534500
 6052              	.LASF105:
 6053 0144 736D6966 		.ascii	"smifDeviceNr\000"
 6053      44657669 
 6053      63654E72 
 6053      00
 6054              	.LASF216:
 6055 0151 43595F53 		.ascii	"CY_SAR_RANGE_COND_OUTSIDE\000"
 6055      41525F52 
 6055      414E4745 
 6055      5F434F4E 
 6055      445F4F55 
 6056              	.LASF282:
 6057 016b 61646347 		.ascii	"adcGain\000"
 6057      61696E00 
 6058              	.LASF97:
 6059 0173 63707573 		.ascii	"cpussFlashPaSize\000"
 6059      73466C61 
 6059      73685061 
 6059      53697A65 
 6059      00
 6060              	.LASF196:
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 168


 6061 0184 63795F65 		.ascii	"cy_en_sar_switch_state_t\000"
 6061      6E5F7361 
 6061      725F7377 
 6061      69746368 
 6061      5F737461 
 6062              	.LASF7:
 6063 019d 5F5F696E 		.ascii	"__int32_t\000"
 6063      7433325F 
 6063      7400
 6064              	.LASF41:
 6065 01a7 4348414E 		.ascii	"CHAN_WORK_NEWVALUE\000"
 6065      5F574F52 
 6065      4B5F4E45 
 6065      5756414C 
 6065      554500
 6066              	.LASF203:
 6067 01ba 43595F53 		.ascii	"CY_SAR_NEG_SEL_P1\000"
 6067      41525F4E 
 6067      45475F53 
 6067      454C5F50 
 6067      3100
 6068              	.LASF75:
 6069 01cc 63707573 		.ascii	"cpussBase\000"
 6069      73426173 
 6069      6500
 6070              	.LASF205:
 6071 01d6 43595F53 		.ascii	"CY_SAR_NEG_SEL_P5\000"
 6071      41525F4E 
 6071      45475F53 
 6071      454C5F50 
 6071      3500
 6072              	.LASF206:
 6073 01e8 43595F53 		.ascii	"CY_SAR_NEG_SEL_P7\000"
 6073      41525F4E 
 6073      45475F53 
 6073      454C5F50 
 6073      3700
 6074              	.LASF99:
 6075 01fa 63707573 		.ascii	"cpussFmIrq\000"
 6075      73466D49 
 6075      727100
 6076              	.LASF186:
 6077 0205 43595F53 		.ascii	"CY_SAR_CONVERSION_NOT_COMPLETE\000"
 6077      41525F43 
 6077      4F4E5645 
 6077      5253494F 
 6077      4E5F4E4F 
 6078              	.LASF100:
 6079 0224 63707573 		.ascii	"cpussNotConnectedIrq\000"
 6079      734E6F74 
 6079      436F6E6E 
 6079      65637465 
 6079      64497271 
 6080              	.LASF4:
 6081 0239 73686F72 		.ascii	"short int\000"
 6081      7420696E 
 6081      7400
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 169


 6082              	.LASF47:
 6083 0243 53415455 		.ascii	"SATURATE_INTR\000"
 6083      52415445 
 6083      5F494E54 
 6083      5200
 6084              	.LASF26:
 6085 0251 53414D50 		.ascii	"SAMPLE_TIME01\000"
 6085      4C455F54 
 6085      494D4530 
 6085      3100
 6086              	.LASF192:
 6087 025f 43595F53 		.ascii	"CY_SAR_WAIT_FOR_RESULT\000"
 6087      41525F57 
 6087      4149545F 
 6087      464F525F 
 6087      52455355 
 6088              	.LASF59:
 6089 0276 494E4A5F 		.ascii	"INJ_RESULT\000"
 6089      52455355 
 6089      4C5400
 6090              	.LASF134:
 6091 0281 70657269 		.ascii	"periDivCmdPaDivSelPos\000"
 6091      44697643 
 6091      6D645061 
 6091      44697653 
 6091      656C506F 
 6092              	.LASF298:
 6093 0297 73776974 		.ascii	"switchClearReg\000"
 6093      6368436C 
 6093      65617252 
 6093      656700
 6094              	.LASF44:
 6095 02a6 494E5452 		.ascii	"INTR_SET\000"
 6095      5F534554 
 6095      00
 6096              	.LASF111:
 6097 02af 63727970 		.ascii	"cryptoMemSize\000"
 6097      746F4D65 
 6097      6D53697A 
 6097      6500
 6098              	.LASF255:
 6099 02bd 43795F53 		.ascii	"Cy_SAR_Wakeup\000"
 6099      41525F57 
 6099      616B6575 
 6099      7000
 6100              	.LASF231:
 6101 02cb 73617449 		.ascii	"satIntrMask\000"
 6101      6E74724D 
 6101      61736B00 
 6102              	.LASF190:
 6103 02d7 63795F65 		.ascii	"cy_en_sar_start_convert_sel_t\000"
 6103      6E5F7361 
 6103      725F7374 
 6103      6172745F 
 6103      636F6E76 
 6104              	.LASF131:
 6105 02f5 70657269 		.ascii	"periTrGrSize\000"
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 170


 6105      54724772 
 6105      53697A65 
 6105      00
 6106              	.LASF159:
 6107 0302 69706353 		.ascii	"ipcStructSize\000"
 6107      74727563 
 6107      7453697A 
 6107      6500
 6108              	.LASF274:
 6109 0310 43795F53 		.ascii	"Cy_SAR_SetLowLimit\000"
 6109      41525F53 
 6109      65744C6F 
 6109      774C696D 
 6109      697400
 6110              	.LASF93:
 6111 0323 70726F74 		.ascii	"protVersion\000"
 6111      56657273 
 6111      696F6E00 
 6112              	.LASF213:
 6113 032f 43595F53 		.ascii	"CY_SAR_RANGE_COND_BELOW\000"
 6113      41525F52 
 6113      414E4745 
 6113      5F434F4E 
 6113      445F4245 
 6114              	.LASF266:
 6115 0347 69735369 		.ascii	"isSigned\000"
 6115      676E6564 
 6115      00
 6116              	.LASF74:
 6117 0350 5341525F 		.ascii	"SAR_Type\000"
 6117      54797065 
 6117      00
 6118              	.LASF272:
 6119 0359 61646352 		.ascii	"adcResult16\000"
 6119      6573756C 
 6119      74313600 
 6120              	.LASF267:
 6121 0365 43795F53 		.ascii	"Cy_SAR_IsChannelSingleEnded\000"
 6121      41525F49 
 6121      73436861 
 6121      6E6E656C 
 6121      53696E67 
 6122              	.LASF133:
 6123 0381 70657269 		.ascii	"periDivCmdTypeSelPos\000"
 6123      44697643 
 6123      6D645479 
 6123      70655365 
 6123      6C506F73 
 6124              	.LASF204:
 6125 0396 43595F53 		.ascii	"CY_SAR_NEG_SEL_P3\000"
 6125      41525F4E 
 6125      45475F53 
 6125      454C5F50 
 6125      3300
 6126              	.LASF150:
 6127 03a8 63707573 		.ascii	"cpussTrimRamCtlOffset\000"
 6127      73547269 
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 171


 6127      6D52616D 
 6127      43746C4F 
 6127      66667365 
 6128              	.LASF301:
 6129 03be 43795F53 		.ascii	"Cy_SAR_DeepSleepCallback\000"
 6129      41525F44 
 6129      65657053 
 6129      6C656570 
 6129      43616C6C 
 6130              	.LASF176:
 6131 03d7 43595F53 		.ascii	"CY_SYSPM_CHECK_FAIL\000"
 6131      5953504D 
 6131      5F434845 
 6131      434B5F46 
 6131      41494C00 
 6132              	.LASF161:
 6133 03eb 63795F73 		.ascii	"cy_stc_device_t\000"
 6133      74635F64 
 6133      65766963 
 6133      655F7400 
 6134              	.LASF19:
 6135 03fb 75696E74 		.ascii	"uint32_t\000"
 6135      33325F74 
 6135      00
 6136              	.LASF143:
 6137 0404 6770696F 		.ascii	"gpioPrtCfgOutOffset\000"
 6137      50727443 
 6137      66674F75 
 6137      744F6666 
 6137      73657400 
 6138              	.LASF43:
 6139 0418 494E5452 		.ascii	"INTR\000"
 6139      00
 6140              	.LASF165:
 6141 041d 666C6F61 		.ascii	"float\000"
 6141      7400
 6142              	.LASF86:
 6143 0423 63727970 		.ascii	"cryptoVersion\000"
 6143      746F5665 
 6143      7273696F 
 6143      6E00
 6144              	.LASF115:
 6145 0431 666C6173 		.ascii	"flashProgramDelay\000"
 6145      6850726F 
 6145      6772616D 
 6145      44656C61 
 6145      7900
 6146              	.LASF180:
 6147 0443 62617365 		.ascii	"base\000"
 6147      00
 6148              	.LASF76:
 6149 0448 666C6173 		.ascii	"flashcBase\000"
 6149      68634261 
 6149      736500
 6150              	.LASF16:
 6151 0453 696E7431 		.ascii	"int16_t\000"
 6151      365F7400 
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 172


 6152              	.LASF142:
 6153 045b 6770696F 		.ascii	"gpioPrtCfgInOffset\000"
 6153      50727443 
 6153      6667496E 
 6153      4F666673 
 6153      657400
 6154              	.LASF244:
 6155 046e 72657375 		.ascii	"result\000"
 6155      6C7400
 6156              	.LASF13:
 6157 0475 6C6F6E67 		.ascii	"long long unsigned int\000"
 6157      206C6F6E 
 6157      6720756E 
 6157      7369676E 
 6157      65642069 
 6158              	.LASF248:
 6159 048c 6368616E 		.ascii	"chanSingleEnded\000"
 6159      53696E67 
 6159      6C65456E 
 6159      64656400 
 6160              	.LASF144:
 6161 049c 6770696F 		.ascii	"gpioPrtCfgSioOffset\000"
 6161      50727443 
 6161      66675369 
 6161      6F4F6666 
 6161      73657400 
 6162              	.LASF280:
 6163 04b0 6F666673 		.ascii	"offset\000"
 6163      657400
 6164              	.LASF135:
 6165 04b7 70657269 		.ascii	"periDivCmdPaTypeSelPos\000"
 6165      44697643 
 6165      6D645061 
 6165      54797065 
 6165      53656C50 
 6166              	.LASF271:
 6167 04ce 43795F53 		.ascii	"Cy_SAR_GetResult32\000"
 6167      41525F47 
 6167      65745265 
 6167      73756C74 
 6167      333200
 6168              	.LASF291:
 6169 04e1 43795F53 		.ascii	"Cy_SAR_CountsTo_uVolts\000"
 6169      41525F43 
 6169      6F756E74 
 6169      73546F5F 
 6169      75566F6C 
 6170              	.LASF27:
 6171 04f8 53414D50 		.ascii	"SAMPLE_TIME23\000"
 6171      4C455F54 
 6171      494D4532 
 6171      3300
 6172              	.LASF226:
 6173 0506 72616E67 		.ascii	"rangeThres\000"
 6173      65546872 
 6173      657300
 6174              	.LASF5:
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 173


 6175 0511 5F5F7569 		.ascii	"__uint16_t\000"
 6175      6E743136 
 6175      5F7400
 6176              	.LASF265:
 6177 051c 43795F53 		.ascii	"Cy_SAR_IsChannelSigned\000"
 6177      41525F49 
 6177      73436861 
 6177      6E6E656C 
 6177      5369676E 
 6178              	.LASF164:
 6179 0533 666C6F61 		.ascii	"float32_t\000"
 6179      7433325F 
 6179      7400
 6180              	.LASF238:
 6181 053d 63795F73 		.ascii	"cy_stc_sar_config_t\000"
 6181      74635F73 
 6181      61725F63 
 6181      6F6E6669 
 6181      675F7400 
 6182              	.LASF222:
 6183 0551 6374726C 		.ascii	"ctrl\000"
 6183      00
 6184              	.LASF257:
 6185 0556 73746172 		.ascii	"startSelect\000"
 6185      7453656C 
 6185      65637400 
 6186              	.LASF268:
 6187 0562 69735369 		.ascii	"isSingleEnded\000"
 6187      6E676C65 
 6187      456E6465 
 6187      6400
 6188              	.LASF214:
 6189 0570 43595F53 		.ascii	"CY_SAR_RANGE_COND_INSIDE\000"
 6189      41525F52 
 6189      414E4745 
 6189      5F434F4E 
 6189      445F494E 
 6190              	.LASF168:
 6191 0589 43595F53 		.ascii	"CY_SYSPM_SUCCESS\000"
 6191      5953504D 
 6191      5F535543 
 6191      43455353 
 6191      00
 6192              	.LASF120:
 6193 059a 666C6173 		.ascii	"flashCtlMainWs3Freq\000"
 6193      6843746C 
 6193      4D61696E 
 6193      57733346 
 6193      72657100 
 6194              	.LASF102:
 6195 05ae 73727373 		.ascii	"srssNumPll\000"
 6195      4E756D50 
 6195      6C6C00
 6196              	.LASF200:
 6197 05b9 43595F53 		.ascii	"CY_SAR_MUX_SWITCH0\000"
 6197      41525F4D 
 6197      55585F53 
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 174


 6197      57495443 
 6197      483000
 6198              	.LASF250:
 6199 05cc 43795F53 		.ascii	"Cy_SAR_DeInit\000"
 6199      41525F44 
 6199      65496E69 
 6199      7400
 6200              	.LASF20:
 6201 05da 696E7436 		.ascii	"int64_t\000"
 6201      345F7400 
 6202              	.LASF113:
 6203 05e2 666C6173 		.ascii	"flashPipeRequired\000"
 6203      68506970 
 6203      65526571 
 6203      75697265 
 6203      6400
 6204              	.LASF53:
 6205 05f4 52414E47 		.ascii	"RANGE_INTR_MASK\000"
 6205      455F494E 
 6205      54525F4D 
 6205      41534B00 
 6206              	.LASF166:
 6207 0604 646F7562 		.ascii	"double\000"
 6207      6C6500
 6208              	.LASF310:
 6209 060b 443A5C4F 		.ascii	"D:\\OneDrive - UNSW\\Documents\\thesis\\VDAC_Saw_Ex"
 6209      6E654472 
 6209      69766520 
 6209      2D20554E 
 6209      53575C44 
 6210 063a 706F7274 		.ascii	"port.cydsn\000"
 6210      2E637964 
 6210      736E00
 6211              	.LASF288:
 6212 0645 72657375 		.ascii	"result_Volts\000"
 6212      6C745F56 
 6212      6F6C7473 
 6212      00
 6213              	.LASF237:
 6214 0652 5F426F6F 		.ascii	"_Bool\000"
 6214      6C00
 6215              	.LASF29:
 6216 0658 52414E47 		.ascii	"RANGE_COND\000"
 6216      455F434F 
 6216      4E4400
 6217              	.LASF117:
 6218 0663 666C6173 		.ascii	"flashCtlMainWs0Freq\000"
 6218      6843746C 
 6218      4D61696E 
 6218      57733046 
 6218      72657100 
 6219              	.LASF67:
 6220 0677 4D55585F 		.ascii	"MUX_SWITCH_DS_CTRL\000"
 6220      53574954 
 6220      43485F44 
 6220      535F4354 
 6220      524C00
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 175


 6221              	.LASF219:
 6222 068a 43595F53 		.ascii	"CY_SAR_INTR_EOS_MASK\000"
 6222      41525F49 
 6222      4E54525F 
 6222      454F535F 
 6222      4D41534B 
 6223              	.LASF81:
 6224 069f 6770696F 		.ascii	"gpioBase\000"
 6224      42617365 
 6224      00
 6225              	.LASF184:
 6226 06a8 43595F53 		.ascii	"CY_SAR_BAD_PARAM\000"
 6226      41525F42 
 6226      41445F50 
 6226      4152414D 
 6226      00
 6227              	.LASF289:
 6228 06b9 43795F53 		.ascii	"Cy_SAR_CountsTo_mVolts\000"
 6228      41525F43 
 6228      6F756E74 
 6228      73546F5F 
 6228      6D566F6C 
 6229              	.LASF152:
 6230 06d0 63707573 		.ascii	"cpussSysTickCtlOffset\000"
 6230      73537973 
 6230      5469636B 
 6230      43746C4F 
 6230      66667365 
 6231              	.LASF108:
 6232 06e6 75646250 		.ascii	"udbPresent\000"
 6232      72657365 
 6232      6E7400
 6233              	.LASF300:
 6234 06f1 43795F53 		.ascii	"Cy_SAR_SetSwitchSarSeqCtrl\000"
 6234      41525F53 
 6234      65745377 
 6234      69746368 
 6234      53617253 
 6235              	.LASF126:
 6236 070c 64775374 		.ascii	"dwStatusChIdxPos\000"
 6236      61747573 
 6236      43684964 
 6236      78506F73 
 6236      00
 6237              	.LASF239:
 6238 071d 6877456E 		.ascii	"hwEnabled\000"
 6238      61626C65 
 6238      6400
 6239              	.LASF73:
 6240 0727 5341525F 		.ascii	"SAR_V1_Type\000"
 6240      56315F54 
 6240      79706500 
 6241              	.LASF170:
 6242 0733 43595F53 		.ascii	"CY_SYSPM_TIMEOUT\000"
 6242      5953504D 
 6242      5F54494D 
 6242      454F5554 
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 176


 6242      00
 6243              	.LASF236:
 6244 0744 76726566 		.ascii	"vrefMvValue\000"
 6244      4D765661 
 6244      6C756500 
 6245              	.LASF171:
 6246 0750 43595F53 		.ascii	"CY_SYSPM_INVALID_STATE\000"
 6246      5953504D 
 6246      5F494E56 
 6246      414C4944 
 6246      5F535441 
 6247              	.LASF50:
 6248 0767 53415455 		.ascii	"SATURATE_INTR_MASKED\000"
 6248      52415445 
 6248      5F494E54 
 6248      525F4D41 
 6248      534B4544 
 6249              	.LASF172:
 6250 077c 43595F53 		.ascii	"CY_SYSPM_CANCELED\000"
 6250      5953504D 
 6250      5F43414E 
 6250      43454C45 
 6250      4400
 6251              	.LASF48:
 6252 078e 53415455 		.ascii	"SATURATE_INTR_SET\000"
 6252      52415445 
 6252      5F494E54 
 6252      525F5345 
 6252      5400
 6253              	.LASF215:
 6254 07a0 43595F53 		.ascii	"CY_SAR_RANGE_COND_ABOVE\000"
 6254      41525F52 
 6254      414E4745 
 6254      5F434F4E 
 6254      445F4142 
 6255              	.LASF199:
 6256 07b8 63795F65 		.ascii	"cy_en_sar_switch_sar_seq_ctrl_t\000"
 6256      6E5F7361 
 6256      725F7377 
 6256      69746368 
 6256      5F736172 
 6257              	.LASF277:
 6258 07d8 43795F53 		.ascii	"Cy_SAR_SetHighLimit\000"
 6258      41525F53 
 6258      65744869 
 6258      67684C69 
 6258      6D697400 
 6259              	.LASF228:
 6260 07ec 6368616E 		.ascii	"chanEn\000"
 6260      456E00
 6261              	.LASF138:
 6262 07f3 70657269 		.ascii	"periDiv16_5CtlOffset\000"
 6262      44697631 
 6262      365F3543 
 6262      746C4F66 
 6262      66736574 
 6263              	.LASF109:
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 177


 6264 0808 73797350 		.ascii	"sysPmSimoPresent\000"
 6264      6D53696D 
 6264      6F507265 
 6264      73656E74 
 6264      00
 6265              	.LASF42:
 6266 0819 4348414E 		.ascii	"CHAN_RESULT_NEWVALUE\000"
 6266      5F524553 
 6266      554C545F 
 6266      4E455756 
 6266      414C5545 
 6267              	.LASF57:
 6268 082e 494E4A5F 		.ascii	"INJ_CHAN_CONFIG\000"
 6268      4348414E 
 6268      5F434F4E 
 6268      46494700 
 6269              	.LASF299:
 6270 083e 43795F53 		.ascii	"Cy_SAR_GetAnalogSwitch\000"
 6270      41525F47 
 6270      6574416E 
 6270      616C6F67 
 6270      53776974 
 6271              	.LASF62:
 6272 0855 4156475F 		.ascii	"AVG_STAT\000"
 6272      53544154 
 6272      00
 6273              	.LASF127:
 6274 085e 64775374 		.ascii	"dwStatusChIdxMsk\000"
 6274      61747573 
 6274      43684964 
 6274      784D736B 
 6274      00
 6275              	.LASF15:
 6276 086f 75696E74 		.ascii	"uint8_t\000"
 6276      385F7400 
 6277              	.LASF211:
 6278 0877 43595F53 		.ascii	"CY_SAR_TRIGGER_MODE_FW_AND_HWLEVEL\000"
 6278      41525F54 
 6278      52494747 
 6278      45525F4D 
 6278      4F44455F 
 6279              	.LASF292:
 6280 089a 72657375 		.ascii	"result_uVolts\000"
 6280      6C745F75 
 6280      566F6C74 
 6280      7300
 6281              	.LASF187:
 6282 08a8 63795F65 		.ascii	"cy_en_sar_status_t\000"
 6282      6E5F7361 
 6282      725F7374 
 6282      61747573 
 6282      5F7400
 6283              	.LASF259:
 6284 08bb 43795F53 		.ascii	"Cy_SAR_SetConvertMode\000"
 6284      41525F53 
 6284      6574436F 
 6284      6E766572 
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 178


 6284      744D6F64 
 6285              	.LASF132:
 6286 08d1 70657269 		.ascii	"periDivCmdDivSelMsk\000"
 6286      44697643 
 6286      6D644469 
 6286      7653656C 
 6286      4D736B00 
 6287              	.LASF283:
 6288 08e5 43795F53 		.ascii	"Cy_SAR_RawCounts2Counts\000"
 6288      41525F52 
 6288      6177436F 
 6288      756E7473 
 6288      32436F75 
 6289              	.LASF183:
 6290 08fd 43595F53 		.ascii	"CY_SAR_SUCCESS\000"
 6290      41525F53 
 6290      55434345 
 6290      535300
 6291              	.LASF52:
 6292 090c 52414E47 		.ascii	"RANGE_INTR_SET\000"
 6292      455F494E 
 6292      54525F53 
 6292      455400
 6293              	.LASF234:
 6294 091b 6D757853 		.ascii	"muxSwitchSqCtrl\000"
 6294      77697463 
 6294      68537143 
 6294      74726C00 
 6295              	.LASF227:
 6296 092b 72616E67 		.ascii	"rangeCond\000"
 6296      65436F6E 
 6296      6400
 6297              	.LASF156:
 6298 0935 63707573 		.ascii	"cpussRam0Ctl0\000"
 6298      7352616D 
 6298      3043746C 
 6298      3000
 6299              	.LASF12:
 6300 0943 6C6F6E67 		.ascii	"long long int\000"
 6300      206C6F6E 
 6300      6720696E 
 6300      7400
 6301              	.LASF83:
 6302 0951 69706342 		.ascii	"ipcBase\000"
 6302      61736500 
 6303              	.LASF124:
 6304 0959 64774368 		.ascii	"dwChCtlPrioPos\000"
 6304      43746C50 
 6304      72696F50 
 6304      6F7300
 6305              	.LASF84:
 6306 0968 63727970 		.ascii	"cryptoBase\000"
 6306      746F4261 
 6306      736500
 6307              	.LASF220:
 6308 0973 43595F53 		.ascii	"CY_SAR_INTR_OVERFLOW_MASK\000"
 6308      41525F49 
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 179


 6308      4E54525F 
 6308      4F564552 
 6308      464C4F57 
 6309              	.LASF306:
 6310 098d 43795F53 		.ascii	"Cy_SAR_offset\000"
 6310      41525F6F 
 6310      66667365 
 6310      7400
 6311              	.LASF139:
 6312 099b 70657269 		.ascii	"periDiv24_5CtlOffset\000"
 6312      44697632 
 6312      345F3543 
 6312      746C4F66 
 6312      66736574 
 6313              	.LASF221:
 6314 09b0 43595F53 		.ascii	"CY_SAR_INTR_FW_COLLISION_MASK\000"
 6314      41525F49 
 6314      4E54525F 
 6314      46575F43 
 6314      4F4C4C49 
 6315              	.LASF114:
 6316 09ce 666C6173 		.ascii	"flashWriteDelay\000"
 6316      68577269 
 6316      74654465 
 6316      6C617900 
 6317              	.LASF210:
 6318 09de 43595F53 		.ascii	"CY_SAR_TRIGGER_MODE_FW_AND_HWEDGE\000"
 6318      41525F54 
 6318      52494747 
 6318      45525F4D 
 6318      4F44455F 
 6319              	.LASF181:
 6320 0a00 636F6E74 		.ascii	"context\000"
 6320      65787400 
 6321              	.LASF3:
 6322 0a08 5F5F696E 		.ascii	"__int16_t\000"
 6322      7431365F 
 6322      7400
 6323              	.LASF80:
 6324 0a12 6873696F 		.ascii	"hsiomBase\000"
 6324      6D426173 
 6324      6500
 6325              	.LASF256:
 6326 0a1c 43795F53 		.ascii	"Cy_SAR_StartConvert\000"
 6326      41525F53 
 6326      74617274 
 6326      436F6E76 
 6326      65727400 
 6327              	.LASF37:
 6328 0a30 4348414E 		.ascii	"CHAN_RESULT\000"
 6328      5F524553 
 6328      554C5400 
 6329              	.LASF157:
 6330 0a3c 63707573 		.ascii	"cpussRam1Ctl0\000"
 6330      7352616D 
 6330      3143746C 
 6330      3000
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 180


 6331              	.LASF130:
 6332 0a4a 70657269 		.ascii	"periTrGrOffset\000"
 6332      54724772 
 6332      4F666673 
 6332      657400
 6333              	.LASF167:
 6334 0a59 75696E74 		.ascii	"uint16\000"
 6334      313600
 6335              	.LASF51:
 6336 0a60 52414E47 		.ascii	"RANGE_INTR\000"
 6336      455F494E 
 6336      545200
 6337              	.LASF96:
 6338 0a6b 63707573 		.ascii	"cpussDwChNr\000"
 6338      73447743 
 6338      684E7200 
 6339              	.LASF45:
 6340 0a77 494E5452 		.ascii	"INTR_MASK\000"
 6340      5F4D4153 
 6340      4B00
 6341              	.LASF24:
 6342 0a81 53414D50 		.ascii	"SAMPLE_CTRL\000"
 6342      4C455F43 
 6342      54524C00 
 6343              	.LASF297:
 6344 0a8d 73776974 		.ascii	"switchReg\000"
 6344      63685265 
 6344      6700
 6345              	.LASF94:
 6346 0a97 63707573 		.ascii	"cpussIpcNr\000"
 6346      73497063 
 6346      4E7200
 6347              	.LASF65:
 6348 0aa2 4D55585F 		.ascii	"MUX_SWITCH_CLEAR0\000"
 6348      53574954 
 6348      43485F43 
 6348      4C454152 
 6348      3000
 6349              	.LASF106:
 6350 0ab4 70617373 		.ascii	"passSarChannels\000"
 6350      53617243 
 6350      68616E6E 
 6350      656C7300 
 6351              	.LASF158:
 6352 0ac4 63707573 		.ascii	"cpussRam2Ctl0\000"
 6352      7352616D 
 6352      3243746C 
 6352      3000
 6353              	.LASF307:
 6354 0ad2 43795F53 		.ascii	"Cy_SAR_countsPer10Volt\000"
 6354      41525F63 
 6354      6F756E74 
 6354      73506572 
 6354      3130566F 
 6355              	.LASF188:
 6356 0ae9 43595F53 		.ascii	"CY_SAR_START_CONVERT_SINGLE_SHOT\000"
 6356      41525F53 
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 181


 6356      54415254 
 6356      5F434F4E 
 6356      56455254 
 6357              	.LASF303:
 6358 0b0a 72657475 		.ascii	"returnValue\000"
 6358      726E5661 
 6358      6C756500 
 6359              	.LASF31:
 6360 0b16 53544152 		.ascii	"START_CTRL\000"
 6360      545F4354 
 6360      524C00
 6361              	.LASF185:
 6362 0b21 43595F53 		.ascii	"CY_SAR_TIMEOUT\000"
 6362      41525F54 
 6362      494D454F 
 6362      555400
 6363              	.LASF245:
 6364 0b30 636F756E 		.ascii	"counts\000"
 6364      747300
 6365              	.LASF137:
 6366 0b37 70657269 		.ascii	"periDiv16CtlOffset\000"
 6366      44697631 
 6366      3643746C 
 6366      4F666673 
 6366      657400
 6367              	.LASF207:
 6368 0b4a 43595F53 		.ascii	"CY_SAR_NEG_SEL_ACORE\000"
 6368      41525F4E 
 6368      45475F53 
 6368      454C5F41 
 6368      434F5245 
 6369              	.LASF11:
 6370 0b5f 5F5F696E 		.ascii	"__int64_t\000"
 6370      7436345F 
 6370      7400
 6371              	.LASF233:
 6372 0b69 6D757853 		.ascii	"muxSwitch\000"
 6372      77697463 
 6372      6800
 6373              	.LASF6:
 6374 0b73 73686F72 		.ascii	"short unsigned int\000"
 6374      7420756E 
 6374      7369676E 
 6374      65642069 
 6374      6E7400
 6375              	.LASF21:
 6376 0b86 6C6F6E67 		.ascii	"long double\000"
 6376      20646F75 
 6376      626C6500 
 6377              	.LASF17:
 6378 0b92 75696E74 		.ascii	"uint16_t\000"
 6378      31365F74 
 6378      00
 6379              	.LASF79:
 6380 0b9b 70726F74 		.ascii	"protBase\000"
 6380      42617365 
 6380      00
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 182


 6381              	.LASF129:
 6382 0ba4 70657269 		.ascii	"periTrCmdGrSelMsk\000"
 6382      5472436D 
 6382      64477253 
 6382      656C4D73 
 6382      6B00
 6383              	.LASF224:
 6384 0bb6 73616D70 		.ascii	"sampleTime01\000"
 6384      6C655469 
 6384      6D653031 
 6384      00
 6385              	.LASF103:
 6386 0bc3 73727373 		.ascii	"srssNumHfroot\000"
 6386      4E756D48 
 6386      66726F6F 
 6386      7400
 6387              	.LASF87:
 6388 0bd1 64775665 		.ascii	"dwVersion\000"
 6388      7273696F 
 6388      6E00
 6389              	.LASF119:
 6390 0bdb 666C6173 		.ascii	"flashCtlMainWs2Freq\000"
 6390      6843746C 
 6390      4D61696E 
 6390      57733246 
 6390      72657100 
 6391              	.LASF1:
 6392 0bef 756E7369 		.ascii	"unsigned char\000"
 6392      676E6564 
 6392      20636861 
 6392      7200
 6393              	.LASF243:
 6394 0bfd 636F6E66 		.ascii	"config\000"
 6394      696700
 6395              	.LASF311:
 6396 0c04 43795F53 		.ascii	"Cy_SAR_IsChannelDifferential\000"
 6396      41525F49 
 6396      73436861 
 6396      6E6E656C 
 6396      44696666 
 6397              	.LASF198:
 6398 0c21 43595F53 		.ascii	"CY_SAR_SWITCH_SEQ_CTRL_ENABLE\000"
 6398      41525F53 
 6398      57495443 
 6398      485F5345 
 6398      515F4354 
 6399              	.LASF22:
 6400 0c3f 73697A65 		.ascii	"sizetype\000"
 6400      74797065 
 6400      00
 6401              	.LASF191:
 6402 0c48 43595F53 		.ascii	"CY_SAR_RETURN_STATUS\000"
 6402      41525F52 
 6402      45545552 
 6402      4E5F5354 
 6402      41545553 
 6403              	.LASF290:
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 183


 6404 0c5d 72657375 		.ascii	"result_mVolts\000"
 6404      6C745F6D 
 6404      566F6C74 
 6404      7300
 6405              	.LASF148:
 6406 0c6b 63707573 		.ascii	"cpussCm0StatusOffset\000"
 6406      73436D30 
 6406      53746174 
 6406      75734F66 
 6406      66736574 
 6407              	.LASF136:
 6408 0c80 70657269 		.ascii	"periDiv8CtlOffset\000"
 6408      44697638 
 6408      43746C4F 
 6408      66667365 
 6408      7400
 6409              	.LASF34:
 6410 0c92 52455345 		.ascii	"RESERVED2\000"
 6410      52564544 
 6410      3200
 6411              	.LASF36:
 6412 0c9c 52455345 		.ascii	"RESERVED3\000"
 6412      52564544 
 6412      3300
 6413              	.LASF38:
 6414 0ca6 52455345 		.ascii	"RESERVED4\000"
 6414      52564544 
 6414      3400
 6415              	.LASF56:
 6416 0cb0 52455345 		.ascii	"RESERVED5\000"
 6416      52564544 
 6416      3500
 6417              	.LASF58:
 6418 0cba 52455345 		.ascii	"RESERVED6\000"
 6418      52564544 
 6418      3600
 6419              	.LASF60:
 6420 0cc4 52455345 		.ascii	"RESERVED7\000"
 6420      52564544 
 6420      3700
 6421              	.LASF63:
 6422 0cce 52455345 		.ascii	"RESERVED8\000"
 6422      52564544 
 6422      3800
 6423              	.LASF66:
 6424 0cd8 52455345 		.ascii	"RESERVED9\000"
 6424      52564544 
 6424      3900
 6425              	.LASF179:
 6426 0ce2 63795F65 		.ascii	"cy_en_syspm_callback_mode_t\000"
 6426      6E5F7379 
 6426      73706D5F 
 6426      63616C6C 
 6426      6261636B 
 6427              	.LASF68:
 6428 0cfe 4D55585F 		.ascii	"MUX_SWITCH_SQ_CTRL\000"
 6428      53574954 
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 184


 6428      43485F53 
 6428      515F4354 
 6428      524C00
 6429              	.LASF8:
 6430 0d11 6C6F6E67 		.ascii	"long int\000"
 6430      20696E74 
 6430      00
 6431              	.LASF241:
 6432 0d1a 63795F73 		.ascii	"cy_stc_sar_state_backup_t\000"
 6432      74635F73 
 6432      61725F73 
 6432      74617465 
 6432      5F626163 
 6433              	.LASF85:
 6434 0d34 63707573 		.ascii	"cpussVersion\000"
 6434      73566572 
 6434      73696F6E 
 6434      00
 6435              	.LASF98:
 6436 0d41 63707573 		.ascii	"cpussIpc0Irq\000"
 6436      73497063 
 6436      30497271 
 6436      00
 6437              	.LASF254:
 6438 0d4e 6374726C 		.ascii	"ctrlReg\000"
 6438      52656700 
 6439              	.LASF89:
 6440 0d56 6770696F 		.ascii	"gpioVersion\000"
 6440      56657273 
 6440      696F6E00 
 6441              	.LASF88:
 6442 0d62 666C6173 		.ascii	"flashcVersion\000"
 6442      68635665 
 6442      7273696F 
 6442      6E00
 6443              	.LASF110:
 6444 0d70 70726F74 		.ascii	"protBusMasterMask\000"
 6444      4275734D 
 6444      61737465 
 6444      724D6173 
 6444      6B00
 6445              	.LASF212:
 6446 0d82 63795F65 		.ascii	"cy_en_sar_sample_ctrl_trigger_mode_t\000"
 6446      6E5F7361 
 6446      725F7361 
 6446      6D706C65 
 6446      5F637472 
 6447              	.LASF285:
 6448 0da7 74656D70 		.ascii	"temp\000"
 6448      00
 6449              	.LASF28:
 6450 0dac 52414E47 		.ascii	"RANGE_THRES\000"
 6450      455F5448 
 6450      52455300 
 6451              	.LASF295:
 6452 0db8 73776974 		.ascii	"switchMask\000"
 6452      63684D61 
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 185


 6452      736B00
 6453              	.LASF162:
 6454 0dc3 63686172 		.ascii	"char_t\000"
 6454      5F7400
 6455              	.LASF286:
 6456 0dca 61766572 		.ascii	"averageAdcSamplesDiv\000"
 6456      61676541 
 6456      64635361 
 6456      6D706C65 
 6456      73446976 
 6457              	.LASF209:
 6458 0ddf 43595F53 		.ascii	"CY_SAR_TRIGGER_MODE_FW_ONLY\000"
 6458      41525F54 
 6458      52494747 
 6458      45525F4D 
 6458      4F44455F 
 6459              	.LASF35:
 6460 0dfb 4348414E 		.ascii	"CHAN_WORK\000"
 6460      5F574F52 
 6460      4B00
 6461              	.LASF201:
 6462 0e05 63795F65 		.ascii	"cy_en_sar_switch_register_sel_t\000"
 6462      6E5F7361 
 6462      725F7377 
 6462      69746368 
 6462      5F726567 
 6463              	.LASF260:
 6464 0e25 6D6F6465 		.ascii	"mode\000"
 6464      00
 6465              	.LASF253:
 6466 0e2a 43795F53 		.ascii	"Cy_SAR_DeepSleep\000"
 6466      41525F44 
 6466      65657053 
 6466      6C656570 
 6466      00
 6467              	.LASF278:
 6468 0e3b 68696768 		.ascii	"highLimit\000"
 6468      4C696D69 
 6468      7400
 6469              	.LASF240:
 6470 0e45 636F6E74 		.ascii	"continuous\000"
 6470      696E756F 
 6470      757300
 6471              	.LASF149:
 6472 0e50 63707573 		.ascii	"cpussCm4PwrCtlOffset\000"
 6472      73436D34 
 6472      50777243 
 6472      746C4F66 
 6472      66736574 
 6473              	.LASF2:
 6474 0e65 5F5F7569 		.ascii	"__uint8_t\000"
 6474      6E74385F 
 6474      7400
 6475              	.LASF309:
 6476 0e6f 47656E65 		.ascii	"Generated_Source\\PSoC6\\pdl\\drivers\\peripheral\\"
 6476      72617465 
 6476      645F536F 
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 186


 6476      75726365 
 6476      5C50536F 
 6477 0e9d 7361725C 		.ascii	"sar\\cy_sar.c\000"
 6477      63795F73 
 6477      61722E63 
 6477      00
 6478              	.LASF281:
 6479 0eaa 43795F53 		.ascii	"Cy_SAR_SetGain\000"
 6479      41525F53 
 6479      65744761 
 6479      696E00
 6480              	.LASF140:
 6481 0eb9 6770696F 		.ascii	"gpioPrtIntrCfgOffset\000"
 6481      50727449 
 6481      6E747243 
 6481      66674F66 
 6481      66736574 
 6482              	.LASF146:
 6483 0ece 63707573 		.ascii	"cpussCm4ClockCtlOffset\000"
 6483      73436D34 
 6483      436C6F63 
 6483      6B43746C 
 6483      4F666673 
 6484              	.LASF46:
 6485 0ee5 494E5452 		.ascii	"INTR_MASKED\000"
 6485      5F4D4153 
 6485      4B454400 
 6486              	.LASF151:
 6487 0ef1 63707573 		.ascii	"cpussTrimRomCtlOffset\000"
 6487      73547269 
 6487      6D526F6D 
 6487      43746C4F 
 6487      66667365 
 6488              	.LASF225:
 6489 0f07 73616D70 		.ascii	"sampleTime23\000"
 6489      6C655469 
 6489      6D653233 
 6489      00
 6490              	.LASF252:
 6491 0f14 43795F53 		.ascii	"Cy_SAR_Enable\000"
 6491      41525F45 
 6491      6E61626C 
 6491      6500
 6492              	.LASF90:
 6493 0f22 6873696F 		.ascii	"hsiomVersion\000"
 6493      6D566572 
 6493      73696F6E 
 6493      00
 6494              	.LASF10:
 6495 0f2f 6C6F6E67 		.ascii	"long unsigned int\000"
 6495      20756E73 
 6495      69676E65 
 6495      6420696E 
 6495      7400
 6496              	.LASF155:
 6497 0f41 63707573 		.ascii	"cpussRomCtl\000"
 6497      73526F6D 
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 187


 6497      43746C00 
 6498              	.LASF269:
 6499 0f4d 43795F53 		.ascii	"Cy_SAR_GetResult16\000"
 6499      41525F47 
 6499      65745265 
 6499      73756C74 
 6499      313600
 6500              	.LASF18:
 6501 0f60 696E7433 		.ascii	"int32_t\000"
 6501      325F7400 
 6502              	.LASF64:
 6503 0f68 4D55585F 		.ascii	"MUX_SWITCH0\000"
 6503      53574954 
 6503      43483000 
 6504              	.LASF40:
 6505 0f74 4348414E 		.ascii	"CHAN_RESULT_UPDATED\000"
 6505      5F524553 
 6505      554C545F 
 6505      55504441 
 6505      54454400 
 6506              	.LASF193:
 6507 0f88 63795F65 		.ascii	"cy_en_sar_return_mode_t\000"
 6507      6E5F7361 
 6507      725F7265 
 6507      7475726E 
 6507      5F6D6F64 
 6508              	.LASF270:
 6509 0fa0 61646352 		.ascii	"adcResult\000"
 6509      6573756C 
 6509      7400
 6510              	.LASF202:
 6511 0faa 43595F53 		.ascii	"CY_SAR_NEG_SEL_VSSA_KELVIN\000"
 6511      41525F4E 
 6511      45475F53 
 6511      454C5F56 
 6511      5353415F 
 6512              	.LASF33:
 6513 0fc5 4348414E 		.ascii	"CHAN_CONFIG\000"
 6513      5F434F4E 
 6513      46494700 
 6514              	.LASF223:
 6515 0fd1 73616D70 		.ascii	"sampleCtrl\000"
 6515      6C654374 
 6515      726C00
 6516              	.LASF246:
 6517 0fdc 76726566 		.ascii	"vrefNegSelect\000"
 6517      4E656753 
 6517      656C6563 
 6517      7400
 6518              	.LASF218:
 6519 0fea 43595F53 		.ascii	"CY_SAR_INTR_MASK_NONE\000"
 6519      41525F49 
 6519      4E54525F 
 6519      4D41534B 
 6519      5F4E4F4E 
 6520              	.LASF71:
 6521 1000 414E415F 		.ascii	"ANA_TRIM0\000"
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 188


 6521      5452494D 
 6521      3000
 6522              	.LASF72:
 6523 100a 414E415F 		.ascii	"ANA_TRIM1\000"
 6523      5452494D 
 6523      3100
 6524              	.LASF9:
 6525 1014 5F5F7569 		.ascii	"__uint32_t\000"
 6525      6E743332 
 6525      5F7400
 6526              	.LASF287:
 6527 101f 43795F53 		.ascii	"Cy_SAR_CountsTo_Volts\000"
 6527      41525F43 
 6527      6F756E74 
 6527      73546F5F 
 6527      566F6C74 
 6528              	.LASF160:
 6529 1035 6970634C 		.ascii	"ipcLockStatusOffset\000"
 6529      6F636B53 
 6529      74617475 
 6529      734F6666 
 6529      73657400 
 6530              	.LASF194:
 6531 1049 43595F53 		.ascii	"CY_SAR_SWITCH_OPEN\000"
 6531      41525F53 
 6531      57495443 
 6531      485F4F50 
 6531      454E00
 6532              	.LASF154:
 6533 105c 63707573 		.ascii	"cpussCm4NmiCtlOffset\000"
 6533      73436D34 
 6533      4E6D6943 
 6533      746C4F66 
 6533      66736574 
 6534              	.LASF49:
 6535 1071 53415455 		.ascii	"SATURATE_INTR_MASK\000"
 6535      52415445 
 6535      5F494E54 
 6535      525F4D41 
 6535      534B00
 6536              	.LASF263:
 6537 1084 7265744D 		.ascii	"retMode\000"
 6537      6F646500 
 6538              	.LASF70:
 6539 108c 52455345 		.ascii	"RESERVED10\000"
 6539      52564544 
 6539      313000
 6540              	.LASF173:
 6541 1097 43595F53 		.ascii	"CY_SYSPM_FAIL\000"
 6541      5953504D 
 6541      5F464149 
 6541      4C00
 6542              	.LASF116:
 6543 10a5 666C6173 		.ascii	"flashEraseDelay\000"
 6543      68457261 
 6543      73654465 
 6543      6C617900 
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 189


 6544              	.LASF293:
 6545 10b5 43795F53 		.ascii	"Cy_SAR_SetAnalogSwitch\000"
 6545      41525F53 
 6545      6574416E 
 6545      616C6F67 
 6545      53776974 
 6546              	.LASF296:
 6547 10cc 73746174 		.ascii	"state\000"
 6547      6500
 6548              	.LASF264:
 6549 10d2 656E644F 		.ascii	"endOfConversion\000"
 6549      66436F6E 
 6549      76657273 
 6549      696F6E00 
 6550              	.LASF197:
 6551 10e2 43595F53 		.ascii	"CY_SAR_SWITCH_SEQ_CTRL_DISABLE\000"
 6551      41525F53 
 6551      57495443 
 6551      485F5345 
 6551      515F4354 
 6552              	.LASF145:
 6553 1101 63707573 		.ascii	"cpussCm0ClockCtlOffset\000"
 6553      73436D30 
 6553      436C6F63 
 6553      6B43746C 
 6553      4F666673 
 6554              	.LASF249:
 6555 1118 43795F53 		.ascii	"Cy_SAR_Init\000"
 6555      41525F49 
 6555      6E697400 
 6556              	.LASF112:
 6557 1124 666C6173 		.ascii	"flashRwwRequired\000"
 6557      68527777 
 6557      52657175 
 6557      69726564 
 6557      00
 6558              	.LASF141:
 6559 1135 6770696F 		.ascii	"gpioPrtCfgOffset\000"
 6559      50727443 
 6559      66674F66 
 6559      66736574 
 6559      00
 6560              	.LASF107:
 6561 1146 65704D6F 		.ascii	"epMonitorNr\000"
 6561      6E69746F 
 6561      724E7200 
 6562              	.LASF169:
 6563 1152 43595F53 		.ascii	"CY_SYSPM_BAD_PARAM\000"
 6563      5953504D 
 6563      5F424144 
 6563      5F504152 
 6563      414D00
 6564              	.LASF302:
 6565 1165 63616C6C 		.ascii	"callbackParams\000"
 6565      6261636B 
 6565      50617261 
 6565      6D7300
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 190


 6566              	.LASF0:
 6567 1174 7369676E 		.ascii	"signed char\000"
 6567      65642063 
 6567      68617200 
 6568              	.LASF122:
 6569 1180 64774368 		.ascii	"dwChOffset\000"
 6569      4F666673 
 6569      657400
 6570              	.LASF95:
 6571 118b 63707573 		.ascii	"cpussIpcIrqNr\000"
 6571      73497063 
 6571      4972714E 
 6571      7200
 6572              	.LASF125:
 6573 1199 64774368 		.ascii	"dwChCtlPreemptablePos\000"
 6573      43746C50 
 6573      7265656D 
 6573      70746162 
 6573      6C65506F 
 6574              	.LASF308:
 6575 11af 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 6575      43313120 
 6575      352E342E 
 6575      31203230 
 6575      31363036 
 6576 11e2 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0plus -mthumb -"
 6576      20726576 
 6576      6973696F 
 6576      6E203233 
 6576      37373135 
 6577 1215 67202D4F 		.ascii	"g -O0 -ffunction-sections -ffat-lto-objects\000"
 6577      30202D66 
 6577      66756E63 
 6577      74696F6E 
 6577      2D736563 
 6578              	.LASF147:
 6579 1241 63707573 		.ascii	"cpussCm4StatusOffset\000"
 6579      73436D34 
 6579      53746174 
 6579      75734F66 
 6579      66736574 
 6580              	.LASF229:
 6581 1256 6368616E 		.ascii	"chanConfig\000"
 6581      436F6E66 
 6581      696700
 6582              	.LASF69:
 6583 1261 4D55585F 		.ascii	"MUX_SWITCH_STATUS\000"
 6583      53574954 
 6583      43485F53 
 6583      54415455 
 6583      5300
 6584              	.LASF92:
 6585 1273 70657269 		.ascii	"periVersion\000"
 6585      56657273 
 6585      696F6E00 
 6586              	.LASF261:
 6587 127f 73616D70 		.ascii	"sampleCtrlReg\000"
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 191


 6587      6C654374 
 6587      726C5265 
 6587      6700
 6588              	.LASF251:
 6589 128d 6465496E 		.ascii	"deInitRouting\000"
 6589      6974526F 
 6589      7574696E 
 6589      6700
 6590              	.LASF235:
 6591 129b 636F6E66 		.ascii	"configRouting\000"
 6591      6967526F 
 6591      7574696E 
 6591      6700
 6592              	.LASF82:
 6593 12a9 70617373 		.ascii	"passBase\000"
 6593      42617365 
 6593      00
 6594              	.LASF32:
 6595 12b2 52455345 		.ascii	"RESERVED1\000"
 6595      52564544 
 6595      3100
 6596              	.LASF101:
 6597 12bc 73727373 		.ascii	"srssNumClkpath\000"
 6597      4E756D43 
 6597      6C6B7061 
 6597      746800
 6598              	.LASF61:
 6599 12cb 53544154 		.ascii	"STATUS\000"
 6599      555300
 6600              	.LASF279:
 6601 12d2 43795F53 		.ascii	"Cy_SAR_SetOffset\000"
 6601      41525F53 
 6601      65744F66 
 6601      66736574 
 6601      00
 6602              	.LASF121:
 6603 12e3 666C6173 		.ascii	"flashCtlMainWs4Freq\000"
 6603      6843746C 
 6603      4D61696E 
 6603      57733446 
 6603      72657100 
 6604              	.LASF232:
 6605 12f7 72616E67 		.ascii	"rangeIntrMask\000"
 6605      65496E74 
 6605      724D6173 
 6605      6B00
 6606              	.LASF195:
 6607 1305 43595F53 		.ascii	"CY_SAR_SWITCH_CLOSE\000"
 6607      41525F53 
 6607      57495443 
 6607      485F434C 
 6607      4F534500 
 6608              	.LASF217:
 6609 1319 63795F65 		.ascii	"cy_en_sar_range_detect_condition_t\000"
 6609      6E5F7361 
 6609      725F7261 
 6609      6E67655F 
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 192


 6609      64657465 
 6610              	.LASF258:
 6611 133c 43795F53 		.ascii	"Cy_SAR_StopConvert\000"
 6611      41525F53 
 6611      746F7043 
 6611      6F6E7665 
 6611      727400
 6612              	.LASF189:
 6613 134f 43595F53 		.ascii	"CY_SAR_START_CONVERT_CONTINUOUS\000"
 6613      41525F53 
 6613      54415254 
 6613      5F434F4E 
 6613      56455254 
 6614              	.LASF304:
 6615 136f 656E6162 		.ascii	"enabledBeforeSleep\000"
 6615      6C656442 
 6615      65666F72 
 6615      65536C65 
 6615      657000
 6616              	.LASF91:
 6617 1382 69706356 		.ascii	"ipcVersion\000"
 6617      65727369 
 6617      6F6E00
 6618              	.LASF230:
 6619 138d 696E7472 		.ascii	"intrMask\000"
 6619      4D61736B 
 6619      00
 6620              	.LASF128:
 6621 1396 70657269 		.ascii	"periTrCmdOffset\000"
 6621      5472436D 
 6621      644F6666 
 6621      73657400 
 6622              	.LASF262:
 6623 13a6 43795F53 		.ascii	"Cy_SAR_IsEndConversion\000"
 6623      41525F49 
 6623      73456E64 
 6623      436F6E76 
 6623      65727369 
 6624              	.LASF23:
 6625 13bd 4354524C 		.ascii	"CTRL\000"
 6625      00
 6626              	.LASF177:
 6627 13c2 43595F53 		.ascii	"CY_SYSPM_BEFORE_TRANSITION\000"
 6627      5953504D 
 6627      5F424546 
 6627      4F52455F 
 6627      5452414E 
 6628              	.LASF178:
 6629 13dd 43595F53 		.ascii	"CY_SYSPM_AFTER_TRANSITION\000"
 6629      5953504D 
 6629      5F414654 
 6629      45525F54 
 6629      52414E53 
 6630              	.LASF175:
 6631 13f7 43595F53 		.ascii	"CY_SYSPM_CHECK_READY\000"
 6631      5953504D 
 6631      5F434845 
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccxZ0rFj.s 			page 193


 6631      434B5F52 
 6631      45414459 
 6632              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
