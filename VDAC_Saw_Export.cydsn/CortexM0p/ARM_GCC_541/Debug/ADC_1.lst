ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0plus
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"ADC_1.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.Cy_SAR_Disable,"ax",%progbits
  20              		.align	2
  21              		.code	16
  22              		.thumb_func
  23              		.type	Cy_SAR_Disable, %function
  24              	Cy_SAR_Disable:
  25              	.LFB79:
  26              		.file 1 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/sar/cy_sar.h"
   1:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /***************************************************************************//**
   2:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \file cy_sar.h
   3:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \version 1.20
   4:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
   5:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Header file for the SAR driver.
   6:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
   7:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ********************************************************************************
   8:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \copyright
   9:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Copyright 2017-2018, Cypress Semiconductor Corporation. All rights reserved.
  10:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * You may use this file only in accordance with the license, terms, conditions,
  11:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * disclaimers, and limitations in the end user license agreement accompanying
  12:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * the software package with which this file was provided.
  13:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
  14:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
  15:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /**
  16:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \addtogroup group_sar
  17:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
  18:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This driver configures and controls the SAR ADC subsystem block.
  19:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  20:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The functions and other declarations used in this driver are in cy_sar.h. 
  21:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * You can include cy_pdl.h (ModusToolbox only) to get access to all functions 
  22:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * and declarations in the PDL. 
  23:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  24:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This SAR ADC subsystem is comprised of:
  25:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - a 12-bit SAR converter (SARADC)
  26:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - an embedded reference block (SARREF)
  27:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - a mux (\ref group_sar_sarmux "SARMUX") at the inputs of the converter
  28:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - a sequence controller (\ref group_sar_sarmux "SARSEQ") that enables multi-channel acquisition
  29:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       in a round robin fashion, without CPU intervention, to maximize scan rates.
  30:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  31:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_block_diagram.png
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 2


  32:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  33:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The high level features of the subsystem are:
  34:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - maximum sample rate of 1 Msps
  35:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Sixteen individually configurable channels (depends on device routing capabilities)
  36:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - per channel selectable
  37:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       - single-ended or differential input mode
  38:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       - input from external pin (8 channels in single-ended mode or 4 channels in differential mo
  39:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *         or from internal signals (AMUXBUS, CTB, Die Temperature Sensor)
  40:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       - choose one of four programmable acquisition times
  41:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       - averaging and accumulation
  42:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - scan can be triggered by firmware or hardware in single shot or continuous mode
  43:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - hardware averaging from 2 to 256 samples
  44:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - selectable voltage references
  45:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       - internal VDDA and VDDA/2 references
  46:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       - buffered 1.2 V bandgap reference from \ref group_sysanalog "AREF"
  47:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       - external reference from dedicated pin
  48:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Interrupt generation
  49:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  50:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_usage Usage
  51:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  52:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The high level steps to use this driver are:
  53:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  54:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   -# \ref group_sar_initialization
  55:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   -# \ref group_sar_trigger_conversions
  56:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   -# \ref group_sar_handle_interrupts
  57:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   -# \ref group_sar_retrieve_result
  58:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  59:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_initialization Initialization and Enable
  60:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  61:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * To configure the SAR subsystem, call \ref Cy_SAR_Init. Pass in a pointer to the \ref SAR_Type
  62:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * structure for the base hardware register address and pass in the configuration structure,
  63:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref cy_stc_sar_config_t.
  64:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  65:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * After initialization, call \ref Cy_SAR_Enable to enable the hardware.
  66:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  67:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Here is guidance on how to set the data fields of the configuration structure:
  68:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  69:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_ctrl uint32_t ctrl
  70:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  71:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field specifies configurations that apply to all channels such as the Vref
  72:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * source or the negative terminal selection for all single-ended channels.
  73:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Select a value from each of the following enums that begin with "cy_en_sar_ctrl_" and "OR" them t
  74:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_pwr_ctrl_vref_t
  75:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_vref_sel_t
  76:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_bypass_cap_t
  77:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_neg_sel_t
  78:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_hw_ctrl_negvref_t
  79:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_comp_delay_t
  80:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_comp_pwr_t
  81:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_sarmux_deep_sleep_t
  82:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_sarseq_routing_switches_t
  83:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  84:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SAR_CTRL
  85:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  86:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_sampleCtrl uint32_t sampleCtrl
  87:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  88:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures sampling details that apply to all channels.
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 3


  89:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Select a value from each of the following enums that begin with "cy_en_sar_sample_" and "OR" them
  90:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_result_align_t
  91:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_single_ended_format_t
  92:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_differential_format_t
  93:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_avg_cnt_t
  94:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_avg_mode_t
  95:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_trigger_mode_t
  96:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  97:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SAMPLE_CTRL
  98:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  99:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_sampleTime01 uint32_t sampleTime01
 100:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 101:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures the value for sample times 0 and 1 in ADC clock cycles.
 102:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 103:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SAR has four programmable 10-bit aperture times that are configured using two data fields,
 104:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref group_sar_init_struct_sampleTime01 and
 105:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref group_sar_init_struct_sampleTime23.
 106:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Ten bits allow for a range of 0 to 1023 cycles, however 0 and 1 are invalid.
 107:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The minimum aperture time is 167 ns. With an 18 MHz ADC clock, this is
 108:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * equal to 3 cycles or a value of 4 in this field. The actual aperture time is one cycle less than
 109:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * the value stored in this field.
 110:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 111:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Use the shifts defined in \ref cy_en_sar_sample_time_shift_t.
 112:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 113:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SAMPLE_TIME01
 114:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 115:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_sampleTime23 uint32_t sampleTime23
 116:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 117:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures the value for sample times 2 and 3 in ADC clock cycles.
 118:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Use the shifts defined in \ref cy_en_sar_sample_time_shift_t.
 119:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 120:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SAMPLE_TIME23
 121:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 122:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_rangeThres uint32_t rangeThres
 123:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 124:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures the upper and lower thresholds for the range interrupt.
 125:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * These thresholds apply on a global level for all channels with range detection enabled.
 126:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 127:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SARSEQ supports range detection to allow for automatic detection of sample values
 128:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * compared to two programmable thresholds without CPU involvement.
 129:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Range detection is done after averaging, alignment, and sign extension (if applicable). In other 
 130:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * threshold values need to have the same data format as the result data.
 131:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The values are interpreted as signed or unsigned according to each channel's configuration.
 132:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 133:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Use the shifts defined in \ref cy_en_sar_range_thres_shift_t.
 134:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 135:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The \ref Cy_SAR_SetLowLimit and \ref Cy_SAR_SetHighLimit provide run-time configurability of thes
 136:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 137:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_RANGE_THRES
 138:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 139:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_rangeCond cy_en_sar_range_detect_condition_t rangeCond
 140:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 141:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures the condition (below, inside, outside, or above) that will trigger
 142:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * the range interrupt. Select a value from the \ref cy_en_sar_range_detect_condition_t enum.
 143:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 144:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_chanEn uint32_t chanEn
 145:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 4


 146:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures which channels will be scanned.
 147:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Each bit corresponds to a channel. Bit 0 enables channel 0, bit 1 enables channel 1,
 148:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * bit 2 enables channel 2, and so on.
 149:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 150:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_chanConfig uint32_t chanConfig[16]
 151:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 152:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Each channel has its own channel configuration register.
 153:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The channel configuration specifies which pin/signal is connected to that channel
 154:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * and how the channel is sampled.
 155:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 156:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Select a value from each of the following enums that begin with "cy_en_sar_chan_config_" and "OR"
 157:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 158:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_input_mode_t
 159:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_pos_pin_addr_t
 160:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_pos_port_addr_t
 161:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_avg_en_t
 162:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_sample_time_t
 163:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_neg_pin_addr_t
 164:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_neg_port_addr_t
 165:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 166:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Some important considerations are:
 167:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - The POS_PORT_ADDR and POS_PIN_ADDR bit fields are used by the SARSEQ to select
 168:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   the connection to the positive terminal (Vplus) of the ADC for each channel.
 169:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - When the channel is an unpaired differential input (\ref CY_SAR_CHAN_DIFFERENTIAL_UNPAIRED), 
 170:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   NEG_PORT_ADDR and NEG_PIN_ADDR are used by the SARSEQ to select the connection
 171:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   to the negative terminal (Vminus) of the ADC.
 172:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - When the channel is a differential input pair (\ref CY_SAR_CHAN_DIFFERENTIAL_PAIRED), the NEG
 173:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   For differential input pairs, only the pin for the positive terminal needs to be
 174:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   specified and this pin must be even. For example, Pin 0 (positive terminal) and Pin 1 (negative
 175:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   are a pair. Pin 2 (positive terminal) and Pin 3 (negative terminal) are a pair.
 176:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 177:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * If the SARSEQ is disabled (\ref cy_en_sar_ctrl_sarseq_routing_switches_t) or
 178:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * it is not controlling any switches (\ref group_sar_init_struct_muxSwitchSqCtrl = 0), the port and
 179:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * are ignored. This is possible when there is only one channel to scan.
 180:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 181:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_CHAN_CONFIG
 182:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 183:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_intrMask uint32_t intrMask
 184:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 185:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures which interrupt events (end of scan, overflow, or firmware collision) will 
 186:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 187:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Select one or more values from the \ref cy_en_sar_intr_mask_t enum and "OR" them
 188:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * together.
 189:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 190:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_INTR_MASK
 191:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 192:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_satIntrMask uint32_t satIntrMask
 193:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 194:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures which channels will cause a saturation interrupt.
 195:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 196:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SARSEQ has a saturation detect that is always applied to every conversion.
 197:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This feature detects whether a channel's sample value is equal to the minimum or maximum values.
 198:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This allows the firmware to take action, for example, discard the result, when the SARADC saturat
 199:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The sample value is tested right after conversion, that is, before averaging. This means that it
 200:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * can happen that the interrupt is set while the averaged result in the data register is not
 201:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * equal to the minimum or maximum.
 202:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 5


 203:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Each bit corresponds to a channel. A value of 0 disables saturation detection for all channels.
 204:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 205:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_rangeIntrMask uint32_t rangeIntrMask
 206:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 207:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures which channels will cause a range detection interrupt.
 208:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Each bit corresponds to a channel. A value of 0 disables range detection for all channels.
 209:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 210:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_muxSwitch uint32_t muxSwitch
 211:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 212:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field is the firmware control of the SARMUX switches.
 213:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 214:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Use one or more values from the \ref cy_en_sar_mux_switch_fw_ctrl_t enum and "OR" them together.
 215:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * If the SARSEQ is enabled, the SARMUX switches that will be used must
 216:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * also be closed using this firmware control.
 217:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 218:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_MUX_SWITCH
 219:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 220:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Firmware control can be changed at run-time by calling \ref Cy_SAR_SetAnalogSwitch with \ref CY_S
 221:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * and the desired switch states.
 222:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 223:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_muxSwitchSqCtrl uint32_t muxSwitchSqCtrl
 224:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 225:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field enables or disables SARSEQ control of the SARMUX switches.
 226:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * To disable control of all switches, set this field to 0. To disable the SARSEQ all together,
 227:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * use \ref CY_SAR_SARSEQ_SWITCH_DISABLE when configuring the \ref group_sar_init_struct_ctrl regist
 228:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 229:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Use one or more values from the \ref cy_en_sar_mux_switch_sq_ctrl_t enum and "OR" them together.
 230:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 231:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_MUX_SQ_CTRL
 232:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 233:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * SARSEQ control can be changed at run-time by calling \ref Cy_SAR_SetSwitchSarSeqCtrl.
 234:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 235:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_configRouting bool configRouting
 236:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 237:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * If true, the \ref group_sar_init_struct_muxSwitch and \ref group_sar_init_struct_muxSwitchSqCtrl 
 238:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * will be used. If false, the fields will be ignored.
 239:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 240:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_vrefMvValue uint32_t vrefMvValue
 241:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 242:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field sets the value of the reference voltage in millivolts used. This value
 243:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * is used for converting counts to volts in the \ref Cy_SAR_CountsTo_Volts, \ref Cy_SAR_CountsTo_mV
 244:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref Cy_SAR_CountsTo_uVolts functions.
 245:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 246:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_trigger_conversions Triggering Conversions
 247:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 248:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SAR subsystem has the following modes for triggering a conversion:
 249:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * <table class="doxtable">
 250:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 251:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>Mode</th>
 252:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>Description</th>
 253:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>Usage</th>
 254:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 255:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 256:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Continuous</td>
 257:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>After completing a scan, the
 258:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     SARSEQ will immediately start the next scan. That is, the SARSEQ will always be BUSY.
 259:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     As a result all other triggers, firmware or hardware, are essentially ignored.
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 6


 260:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *  </td>
 261:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>To enter this mode, call \ref Cy_SAR_StartConvert with \ref CY_SAR_START_CONVERT_CONTINUO
 262:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     To stop continuous conversions, call \ref Cy_SAR_StopConvert.
 263:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     </td>
 264:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 265:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 266:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Firmware single shot</td>
 267:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>A single conversion of all enabled channels is triggered with a function call to \ref Cy_
 268:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     \ref CY_SAR_START_CONVERT_SINGLE_SHOT.
 269:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     </td>
 270:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>
 271:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     Firmware triggering is always available by calling \ref Cy_SAR_StartConvert with \ref CY_SAR_
 272:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     To allow only firmware triggering, or disable
 273:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     hardware triggering, set up the \ref cy_stc_sar_config_t config structure with \ref CY_SAR_TR
 274:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     </td>
 275:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 276:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 277:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Hardware edge sensitive</td>
 278:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>A single conversion of all enabled channels is triggered on the rising edge of the hardwa
 279:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     trigger signal.</td>
 280:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>To enable this mode, set up the \ref cy_stc_sar_config_t config structure with
 281:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     \ref CY_SAR_TRIGGER_MODE_FW_AND_HWEDGE.</td>
 282:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *    </tr>
 283:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *    <tr>
 284:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Hardware level sensitive</td>
 285:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Conversions are triggered continuously when the hardware trigger signal is high.</td>
 286:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>To enable this mode, set up the \ref cy_stc_sar_config_t config structure with
 287:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     \ref CY_SAR_TRIGGER_MODE_FW_AND_HWLEVEL.</td>
 288:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *    </tr>
 289:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * </table>
 290:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 291:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The trigger mode can be changed during run time with \ref Cy_SAR_SetConvertMode.
 292:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 293:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * For the hardware trigger modes, use the \ref group_trigmux driver to route an internal or externa
 294:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * signal to the SAR trigger input.
 295:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * When making the required \ref Cy_TrigMux_Connect calls, use the pre-defined enum, TRIG6_OUT_PASS_
 296:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * for the SAR trigger input.
 297:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 298:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_CONFIG_TRIGGER
 299:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 300:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_handle_interrupts Handling Interrupts
 301:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 302:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SAR can generate interrupts on these events:
 303:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 304:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - End of scan (EOS): when scanning of all enabled channels complete.
 305:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Overflow: when the result register is updated before the previous result is read.
 306:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - FW collision: when a new trigger is received while the SAR is still processing the previous t
 307:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Saturation detection: when the channel result is equal to the minimum or maximum value.
 308:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Range detection: when the channel result meets the programmed upper or lower threshold values
 309:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 310:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SAR interrupt to the NVIC is raised any time the intersection (logic and) of the interrupt
 311:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * flags and the corresponding interrupt masks are non-zero.
 312:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 313:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Implement an interrupt routine and assign it to the SAR interrupt.
 314:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Use the pre-defined enum, pass_interrupt_sar_IRQn, as the interrupt source for the SAR.
 315:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 316:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The following code snippet demonstrates how to implement a routine to handle the interrupt.
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 7


 317:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The routine gets called when any one of the SAR interrupts are triggered.
 318:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * When servicing an interrupt, the user must clear the interrupt so that subsequent
 319:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * interrupts can be handled.
 320:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 321:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_ISR
 322:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 323:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The following code snippet demonstrates how to configure and enable the interrupt.
 324:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 325:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_CONFIG_INTR
 326:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 327:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Alternately, instead of handling the interrupts, the \ref Cy_SAR_IsEndConversion function
 328:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * allows for firmware polling of the end of conversion status.
 329:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 330:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_retrieve_result Retrieve Channel Results
 331:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 332:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Retrieve the ADC result by calling \ref Cy_SAR_GetResult16 with the desired channel.
 333:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * To convert the result to a voltage, pass the ADC result to \ref Cy_SAR_CountsTo_Volts, \ref Cy_SA
 334:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref Cy_SAR_CountsTo_uVolts.
 335:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 336:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_clock SAR Clock Configuration
 337:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 338:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SAR requires a clock. Assign a clock to the SAR using the
 339:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * pre-defined enum, PCLK_PASS_CLOCK_SAR, to identify the SAR subsystem.
 340:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Set the clock divider value to achieve the desired clock rate. The SAR can support
 341:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * a maximum frequency of 18 MHz.
 342:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 343:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm4.c SAR_SNIPPET_CONFIGURE_CLOCK
 344:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 345:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_scan_time Scan Rate
 346:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 347:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The scan rate is dependent on the following:
 348:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 349:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - ADC clock rate
 350:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Number of channels
 351:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Averaging
 352:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Resolution
 353:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Acquisition times
 354:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 355:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_acquisition_time Acquisition Time
 356:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 357:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The acquisition time of a channel is based on which of the four global aperture times are selecte
 358:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * channel. The selection is done during initialization per channel with \ref group_sar_init_struct_
 359:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The four global aperture times are also set during initialization with \ref group_sar_init_struct
 360:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref group_sar_init_struct_sampleTime23. Note that these global aperture times are in SAR clock c
 361:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * acquisition time is 1 less than that value in the register.
 362:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 363:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_acquisition_time_eqn.png
 364:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 365:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_channel_sample_time Channel Sample Time
 366:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 367:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The sample time for a channel is the time required to acquire the analog signal
 368:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * and convert it to a digital code.
 369:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 370:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_channel_sample_time_eqn.png
 371:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 372:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SAR ADC is a 12-bit converter so Resolution = 12.
 373:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 8


 374:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_total_scan_time Total Scan Time
 375:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 376:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Channels using one of the sequential averaging modes (\ref CY_SAR_AVG_MODE_SEQUENTIAL_ACCUM or \r
 377:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * are sampled multiple times per scan. The number of samples averaged are set during initialization
 378:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * with \ref group_sar_init_struct_sampleCtrl using one of the values from \ref cy_en_sar_sample_ctr
 379:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Channels that are not averaged or use the \ref CY_SAR_AVG_MODE_INTERLEAVED mode are only sampled 
 380:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 381:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The total scan time is the sum of each channel's sample time multiplied by the samples per scan.
 382:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 383:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_scan_rate_eqn.png
 384:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 385:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * where N is the total number of channels in the scan.
 386:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 387:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_sarmux SARMUX and SARSEQ
 388:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 389:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SARMUX is an analog programmable multiplexer. Its switches can be controlled by the SARSEQ or
 390:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * and the inputs can come from:
 391:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - a dedicated port (can support 8 single-ended channels or 4 differential channels)
 392:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - an internal die temperature (DieTemp) sensor
 393:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - CTB output via SARBUS0/1 (if CTBs are available on the device)
 394:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - AMUXBUSA/B
 395:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 396:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The following figure shows the SARMUX switches. See the device datasheet for the exact location o
 397:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 398:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_sarmux_switches.png
 399:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 400:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * When using the SARSEQ, the following configurations must be performed:
 401:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - enable SARSEQ control of required switches (see \ref group_sar_init_struct_muxSwitchSqCtrl)
 402:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - close the required switches with firmware (see \ref group_sar_init_struct_muxSwitch)
 403:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - configure the POS_PORT_ADDR and POS_PIN_ADDR, and if used, the NEG_PORT_ADDR and NEG_PIN_ADDR
 404:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 405:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * While firmware can control every switch in the SARMUX, not every switch can be controlled by the 
 406:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Additionally, switches outside of the SARMUX such as the AMUXBUSA/B switches or
 407:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * CTB switches will require separate function calls (see \ref group_gpio "GPIO" and \ref group_ctb 
 408:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SARSEQ can control three switches in the \ref group_ctb "CTB" driver (see \ref Cy_CTB_EnableS
 409:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * These switches need to be enabled for SARSEQ control if the CTB outputs are used as the SARMUX in
 410:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 411:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The following table shows the required POS_PORT_ADDR and POS_PIN_ADDR settings
 412:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * for different input connections.
 413:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 414:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * <table class="doxtable">
 415:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 416:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>Input Connection Selection</th>
 417:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>POS_PORT_ADDR</th>
 418:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>POS_PIN_ADDR</th>
 419:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 420:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 421:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>SARMUX dedicated port</td>
 422:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_SARMUX</td>
 423:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_0 through \ref CY_SAR_CHAN_POS_PIN_ADDR_7</td>
 424:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 425:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 426:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>DieTemp sensor</td>
 427:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_SARMUX_VIRT</td>
 428:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_0</td>
 429:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 430:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 9


 431:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>AMUXBUSA</td>
 432:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_SARMUX_VIRT</td>
 433:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_2</td>
 434:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 435:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 436:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>AMUXBUSB</td>
 437:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_SARMUX_VIRT</td>
 438:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_3</td>
 439:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 440:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 441:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>CTB0 Opamp0 1x output</td>
 442:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_CTB0</td>
 443:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_2</td>
 444:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 445:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 446:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>CTB0 Opamp1 1x output</td>
 447:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_CTB0</td>
 448:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_3</td>
 449:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 450:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * </table>
 451:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 452:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_sarmux_dietemp Input from DieTemp sensor
 453:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 454:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * When using the DieTemp sensor, always use single-ended mode.
 455:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The temperature sensor can be routed to Vplus using the \ref CY_SAR_MUX_FW_TEMP_VPLUS switch.
 456:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Connecting this switch will also enable the sensor. Set the \ref group_sar_acquisition_time "acqu
 457:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * be at least 1 us to meet the settling time of the temperature sensor.
 458:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 459:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_sarmux_dietemp.png
 460:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 461:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_02.cydsn/main_cm4.c SNIPPET_SAR_SARMUX_DIETEMP
 462:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 463:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_sarmux_se_diff Input from SARMUX port
 464:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 465:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The following figure and code snippet show how two GPIOs on the SARMUX dedicated port
 466:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * are connected to the SARADC as separate single-ended channels and as a differential-pair channel.
 467:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 468:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_sarmux_dedicated_port.png
 469:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 470:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_02.cydsn/main_cm4.c SNIPPET_SAR_SARMUX_SE_DIFF
 471:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 472:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_sarmux_ctb Input from CTB output visa SARBUS0/1
 473:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 474:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The following figure and code snippet show how the two opamp outputs from the CTB
 475:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * are connected to the SARADC as separate single-ended channels and as a differential-pair channel.
 476:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Note that separate function calls are needed to configure and enable the opamps, perform required
 477:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * and enable SARSEQ control of the switches contained in the CTB.
 478:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 479:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_sarmux_ctb.png
 480:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 481:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_02.cydsn/main_cm4.c SNIPPET_SAR_SARMUX_CTB
 482:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 483:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_sarmux_amuxbus Input from other pins through AMUXBUSA/B
 484:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 485:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The following figure and code snippet show how two GPIOs on any port through the AMUXBUSA and AMU
 486:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * are connected to the SARADC as separate single-ended channels and as a differential-pair channel.
 487:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Note that separate function calls are needed to route the device pins to the SARMUX. The AMUXBUSe
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 10


 488:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * are separated into multiple segments and these segments are connected/disconnected using the AMUX
 489:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * registers in the HSIOM. In the following code snippet, to connect Port 1 to the SARMUX, the left 
 490:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * switches of AMUX_SPLIT_CTL[1] and AMUX_SPLIT_CTL[6] need to be closed.
 491:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 492:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_sarmux_amuxbus.png
 493:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 494:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_02.cydsn/main_cm4.c SNIPPET_SAR_SARMUX_AMUXBUS
 495:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 496:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_low_power Low Power Support
 497:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This SAR driver provides a callback function to handle power mode transitions.
 498:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The \ref Cy_SAR_DeepSleepCallback function ensures that SAR conversions are stopped
 499:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * before Deep Sleep entry. Upon wakeup, the callback
 500:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * enables the hardware and continuous conversions, if previously enabled.
 501:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 502:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * To trigger the callback execution, the callback must be registered before calling \ref Cy_SysPm_C
 503:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref group_syspm driver for more information about power mode transitions and
 504:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * callback registration.
 505:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 506:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Recall that during configuration of the \ref group_sar_init_struct_ctrl "ctrl" field,
 507:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * the SARMUX can be configured to remain enabled in Deep Sleep mode.
 508:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * All other blocks (SARADC, REFBUF, and SARSEQ) do not support Deep Sleep mode operation.
 509:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 510:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_more_information More Information
 511:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * For more information on the SAR ADC subsystem, refer to the technical reference manual (TRM).
 512:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 513:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_MISRA MISRA-C Compliance]
 514:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 515:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This driver has the following specific deviations:
 516:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 517:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * <table class="doxtable">
 518:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 519:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>MISRA Rule</th>
 520:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>Rule Class (Required/Advisory)</th>
 521:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>Rule Description</th>
 522:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>Description of Deviation(s)</th>
 523:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 524:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 525:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>11.4</td>
 526:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Advisory</td>
 527:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>A cast should not be performed between a pointer to object type and a different pointer t
 528:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>The cy_syspm driver defines the pointer to void in the \ref cy_stc_syspm_callback_params_
 529:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       This SAR driver implements a Deep Sleep callback conforming to the cy_syspm driver requirem
 530:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       When the callback is called, the base should point to the SAR_Type register address.
 531:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     </td>
 532:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 533:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * </table>
 534:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 535:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_changelog Changelog
 536:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * <table class="doxtable">
 537:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr><th>Version</th><th>Changes</th><th>Reason for Change</th></tr>
 538:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 539:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td rowspan="2">1.20</td>
 540:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Flattened the organization of the driver source code into the single source directory and
 541:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Driver library directory-structure simplification.</td>
 542:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 543:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 544:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Added register access layer. Use register access macros instead
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 11


 545:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *         of direct register access using dereferenced pointers.</td>
 546:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Makes register access device-independent, so that the PDL does 
 547:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *         not need to be recompiled for each supported part number.</td>
 548:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 549:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 550:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td rowspan="3">1.10</td>
 551:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td> Added workaround for parts with out of range CAP_TRIM in Init API.</td>
 552:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td> Correct CAP_TRIM is necessary achieving specified SAR ADC linearity</td>
 553:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 554:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 555:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td> Turn off the entire hardware block only if the SARMUX is not enabled 
 556:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *          for Deep Sleep operation.                
 557:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     </td>
 558:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td> Improvement of the \ref Cy_SAR_DeepSleep flow</td>
 559:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 560:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 561:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Updated "Low Power Support" section to describe registering the Deep Sleep callback.
 562:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *         Added parenthesis around logical AND operation in Sleep API.</td>
 563:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Documentation update and clarification</td>
 564:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 565:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 566:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>1.0</td>
 567:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Initial version</td>
 568:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td></td>
 569:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 570:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * </table>
 571:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 572:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \defgroup group_sar_macros Macros
 573:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \defgroup group_sar_functions Functions
 574:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   \{
 575:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_functions_basic         Initialization and Basic Functions
 576:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_functions_power         Low Power Callback
 577:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_functions_config        Run-time Configuration Functions
 578:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_functions_countsto      Counts Conversion Functions
 579:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_functions_interrupt     Interrupt Functions
 580:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_functions_switches      SARMUX Switch Control Functions
 581:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_functions_helper        Useful Configuration Query Functions
 582:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   \}
 583:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \defgroup group_sar_globals Global Variables
 584:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \defgroup group_sar_data_structures Data Structures
 585:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \defgroup group_sar_enums Enumerated Types
 586:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   \{
 587:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_ctrl_register_enums         Control Register Enums
 588:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_sample_ctrl_register_enums  Sample Control Register Enums
 589:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_sample_time_shift_enums     Sample Time Register Enums
 590:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_range_thres_register_enums  Range Interrupt Register Enums
 591:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_chan_config_register_enums  Channel Configuration Register Enums
 592:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_intr_mask_t_register_enums  Interrupt Mask Register Enums
 593:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_mux_switch_register_enums   SARMUX Switch Control Register Enums
 594:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   \}
 595:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 596:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 597:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #if !defined(CY_SAR_H)
 598:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_H
 599:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 600:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #include <stdint.h>
 601:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #include <stdbool.h>
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 12


 602:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #include <stddef.h>
 603:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #include "cy_device_headers.h"
 604:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #include "cy_syslib.h"
 605:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #include "cy_syspm.h"
 606:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #include "cy_device.h"
 607:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 608:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #ifdef CY_IP_MXS40PASS_SAR
 609:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 610:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #if defined(__cplusplus)
 611:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** extern "C" {
 612:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #endif
 613:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 614:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_macros
 615:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
 616:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 617:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 618:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Driver major version */
 619:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_DRV_VERSION_MAJOR        1
 620:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 621:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Driver minor version */
 622:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_DRV_VERSION_MINOR        20
 623:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 624:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** SAR driver identifier */
 625:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_ID                       CY_PDL_DRV_ID(0x01u)
 626:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 627:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Maximum number of channels */
 628:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_MAX_NUM_CHANNELS         (PASS_SAR_SAR_CHANNELS)
 629:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 630:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \cond INTERNAL */
 631:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_DEINIT                   (0uL)             /**< De-init value for most SAR registers
 632:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SAMPLE_TIME_DEINIT       ((3uL << SAR_SAMPLE_TIME01_SAMPLE_TIME0_Pos) | (3uL << SAR_
 633:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CLEAR_ALL_SWITCHES       (0x3FFFFFFFuL)    /**< Value to clear all SARMUX switches *
 634:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_DEINIT_SQ_CTRL           (SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P0_Msk \
 635:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P1_Msk \
 636:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P2_Msk \
 637:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P3_Msk \
 638:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P4_Msk \
 639:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P5_Msk \
 640:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P6_Msk \
 641:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P7_Msk \
 642:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_VSSA_Msk \
 643:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_TEMP_Msk \
 644:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_AMUXBUSA_Msk \
 645:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_AMUXBUSB_Msk \
 646:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_SARBUS0_Msk \
 647:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_SARBUS1_Msk)
 648:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_REG_CTRL_MASK            (SAR_CTRL_PWR_CTRL_VREF_Msk \
 649:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_VREF_SEL_Msk \
 650:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_VREF_BYP_CAP_EN_Msk \
 651:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_NEG_SEL_Msk \
 652:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_SAR_HW_CTRL_NEGVREF_Msk \
 653:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_COMP_DLY_Msk \
 654:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_REFBUF_EN_Msk \
 655:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_COMP_PWR_Msk \
 656:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_DEEPSLEEP_ON_Msk \
 657:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_DSI_SYNC_CONFIG_Msk \
 658:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_DSI_MODE_Msk \
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 13


 659:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_SWITCH_DISABLE_Msk \
 660:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_ENABLED_Msk)
 661:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_REG_SAMPLE_CTRL_MASK     (SAR_SAMPLE_CTRL_LEFT_ALIGN_Msk \
 662:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_Msk \
 663:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_DIFFERENTIAL_SIGNED_Msk \
 664:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_AVG_CNT_Msk \
 665:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_AVG_SHIFT_Msk \
 666:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_AVG_MODE_Msk \
 667:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_CONTINUOUS_Msk \
 668:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_DSI_TRIGGER_EN_Msk \
 669:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_Msk \
 670:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_DSI_SYNC_TRIGGER_Msk \
 671:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_UAB_SCAN_MODE_Msk \
 672:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_REPEAT_INVALID_Msk \
 673:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_VALID_SEL_Msk \
 674:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_VALID_SEL_EN_Msk \
 675:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_VALID_IGNORE_Msk \
 676:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_TRIGGER_OUT_EN_Msk \
 677:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_EOS_DSI_OUT_EN_Msk)
 678:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_REG_CHAN_CONFIG_MASK     (SAR_CHAN_CONFIG_POS_PIN_ADDR_Msk \
 679:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_POS_PORT_ADDR_Msk \
 680:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_DIFFERENTIAL_EN_Msk \
 681:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_AVG_EN_Msk \
 682:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_SAMPLE_TIME_SEL_Msk \
 683:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_NEG_PIN_ADDR_Msk \
 684:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_NEG_PORT_ADDR_Msk \
 685:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_NEG_ADDR_EN_Msk \
 686:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_DSI_OUT_EN_Msk)
 687:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_REG_SAMPLE_TIME_MASK     (SAR_SAMPLE_TIME01_SAMPLE_TIME0_Msk | SAR_SAMPLE_TIME01_SAM
 688:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 689:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_2US_DELAY                (2u)              /**< Delay used in Enable API function to
 690:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_10V_COUNTS               (10.0F)           /**< Value of 10 in volts */
 691:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_10MV_COUNTS              (10000)           /**< Value of 10 in millivolts */
 692:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_10UV_COUNTS              (10000000L)       /**< Value of 10 in microvolts */
 693:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_WRK_MAX_12BIT            (0x00001000uL)    /**< Maximum SAR work register value for 
 694:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_RANGE_LIMIT_MAX          (0xFFFFuL)        /**< Maximum value for the low and high r
 695:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CAP_TRIM_MAX             (0x3FuL)          /**< Maximum value for CAP_TRIM */
 696:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CAP_TRIM_MIN             (0x00uL)          /**< Maximum value for CAP_TRIM */
 697:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CAP_TRIM                 (0x0BuL)          /**< Correct cap trim value */
 698:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 699:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /**< Macros for conditions used in CY_ASSERT calls */
 700:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CHANNUM(chan)            ((chan) < CY_SAR_MAX_NUM_CHANNELS)
 701:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CHANMASK(mask)           ((mask) < (1uL << CY_SAR_MAX_NUM_CHANNELS))
 702:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_RANGECOND(cond)          ((cond) <= CY_SAR_RANGE_COND_OUTSIDE)
 703:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_INTRMASK(mask)           ((mask) <= (uint32_t)(CY_SAR_INTR_EOS_MASK | CY_SAR_INTR_OV
 704:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_TRIGGER(mode)            (((mode) == CY_SAR_TRIGGER_MODE_FW_ONLY) \
 705:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         || ((mode) == CY_SAR_TRIGGER_MODE_FW_AND_HWEDGE) \
 706:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         || ((mode) == CY_SAR_TRIGGER_MODE_FW_AND_HWLEVEL))
 707:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_RETURN(mode)             (((mode) == CY_SAR_RETURN_STATUS) || ((mode) == CY_SAR_WAIT
 708:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_STARTCONVERT(mode)       (((mode) == CY_SAR_START_CONVERT_SINGLE_SHOT) || ((mode) ==
 709:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_RANGE_LIMIT(limit)       ((limit) <= CY_SAR_RANGE_LIMIT_MAX)
 710:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SWITCHSELECT(select)     ((select) == CY_SAR_MUX_SWITCH0)
 711:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SWITCHMASK(mask)         ((mask) <= CY_SAR_CLEAR_ALL_SWITCHES)
 712:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SWITCHSTATE(state)       (((state) == CY_SAR_SWITCH_OPEN) || ((state) == CY_SAR_SWIT
 713:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SQMASK(mask)             (((mask) & (~CY_SAR_DEINIT_SQ_CTRL)) == 0uL)
 714:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SQCTRL(ctrl)             (((ctrl) == CY_SAR_SWITCH_SEQ_CTRL_ENABLE) || ((ctrl) == CY
 715:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 14


 716:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CTRL(value)              (((value) & (~CY_SAR_REG_CTRL_MASK)) == 0uL)
 717:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SAMPLE_CTRL(value)       (((value) & (~CY_SAR_REG_SAMPLE_CTRL_MASK)) == 0uL)
 718:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SAMPLE_TIME(value)       (((value) & (~CY_SAR_REG_SAMPLE_TIME_MASK)) == 0uL)
 719:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CHAN_CONFIG(value)       (((value) & (~CY_SAR_REG_CHAN_CONFIG_MASK)) == 0uL)
 720:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \endcond */
 721:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 722:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} group_sar_macro */
 723:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 724:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_globals
 725:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
 726:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 727:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /***************************************
 728:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *        Global Variables
 729:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ***************************************/
 730:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 731:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** This array is used to calibrate the offset for each channel.
 732:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 733:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * At initialization, channels that are single-ended, signed, and with Vneg = Vref
 734:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * have an offset of -(2^12)/2 = -2048. All other channels have an offset of 0.
 735:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The offset can be overridden using \ref Cy_SAR_SetOffset.
 736:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 737:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The channel offsets are used by the \ref Cy_SAR_CountsTo_Volts, \ref Cy_SAR_CountsTo_mVolts, and
 738:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref Cy_SAR_CountsTo_uVolts functions to convert counts to voltage.
 739:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 740:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 741:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** extern volatile int16_t Cy_SAR_offset[CY_SAR_MAX_NUM_CHANNELS];
 742:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 743:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** This array is used to calibrate the gain for each channel.
 744:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 745:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * It is set at initialization and the value depends on the SARADC resolution
 746:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * and voltage reference, 10*(2^12)/(2*Vref).
 747:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The gain can be overridden using \ref Cy_SAR_SetGain.
 748:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 749:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The channel gains are used by the \ref Cy_SAR_CountsTo_Volts, \ref Cy_SAR_CountsTo_mVolts, and
 750:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref Cy_SAR_CountsTo_uVolts functions to convert counts to voltage.
 751:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 752:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** extern volatile int32_t Cy_SAR_countsPer10Volt[CY_SAR_MAX_NUM_CHANNELS];
 753:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 754:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} group_sar_globals */
 755:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 756:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_enums
 757:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
 758:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 759:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 760:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /******************************************************************************
 761:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****  * Enumerations
 762:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****  *****************************************************************************/
 763:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 764:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** The SAR status/error code definitions */
 765:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 766:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 767:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SUCCESS    = 0x00uL,                                      /**< Success */
 768:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_BAD_PARAM  = CY_SAR_ID | CY_PDL_STATUS_ERROR | 0x01uL,    /**< Invalid input parameters 
 769:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_TIMEOUT    = CY_SAR_ID | CY_PDL_STATUS_ERROR | 0x02uL,    /**< A timeout occurred */
 770:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CONVERSION_NOT_COMPLETE = CY_SAR_ID | CY_PDL_STATUS_ERROR | 0x03uL,    /**< SAR conversi
 771:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_status_t;
 772:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 15


 773:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Definitions for starting a conversion used in \ref Cy_SAR_StartConvert */
 774:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 775:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 776:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_START_CONVERT_SINGLE_SHOT = 0uL, /**< Start a single scan (one shot) from firmware */
 777:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_START_CONVERT_CONTINUOUS  = 1uL, /**< Continuously scan enabled channels and ignores all
 778:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_start_convert_sel_t;
 779:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 780:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Definitions for the return mode used in \ref Cy_SAR_IsEndConversion */
 781:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 782:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 783:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RETURN_STATUS    = 0uL,      /**< Immediately returns the conversion status. */
 784:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_WAIT_FOR_RESULT  = 1uL,    /**< Does not return a result until the conversion of all seq
 785:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_return_mode_t;
 786:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 787:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Switch state definitions */
 788:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 789:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 790:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SWITCH_OPEN      = 0uL,    /**< Open the switch */
 791:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SWITCH_CLOSE     = 1uL     /**< Close the switch */
 792:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_switch_state_t;
 793:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 794:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Definitions for sequencer control of switches */
 795:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 796:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 797:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SWITCH_SEQ_CTRL_DISABLE = 0uL, /**< Disable sequencer control of switch */
 798:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SWITCH_SEQ_CTRL_ENABLE  = 1uL  /**< Enable sequencer control of switch */
 799:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_switch_sar_seq_ctrl_t;
 800:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 801:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Switch register selection for \ref Cy_SAR_SetAnalogSwitch and \ref Cy_SAR_GetAnalogSwitch */
 802:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 803:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 804:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SWITCH0  = 0uL,      /**< SARMUX switch control register */
 805:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_switch_register_sel_t;
 806:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 807:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_ctrl_register_enums
 808:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of enumerations aids in configuring the SAR CTRL register
 809:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
 810:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 811:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Reference voltage buffer power mode definitions */
 812:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 813:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 814:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_100     = 0uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< Full power (100%) */
 815:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_80      = 1uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 80% power */
 816:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_60      = 2uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 60% power */
 817:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_50      = 3uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 50% power */
 818:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_40      = 4uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 40% power */
 819:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_30      = 5uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 30% power */
 820:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_20      = 6uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 20% power */
 821:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_10      = 7uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 10% power */
 822:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_pwr_ctrl_vref_t;
 823:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 824:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Reference voltage selection definitions */
 825:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 826:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 827:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_SEL_BGR         = 4uL << SAR_CTRL_VREF_SEL_Pos,     /**< System wide bandgap from \
 828:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_SEL_EXT         = 5uL << SAR_CTRL_VREF_SEL_Pos,     /**< External Vref direct from 
 829:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_SEL_VDDA_DIV_2  = 6uL << SAR_CTRL_VREF_SEL_Pos,     /**< Vdda/2 (Vref buffer on) */
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 16


 830:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_SEL_VDDA        = 7uL << SAR_CTRL_VREF_SEL_Pos      /**< Vdda */
 831:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_vref_sel_t;
 832:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 833:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Vref bypass cap enable.
 834:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * When enabled, a bypass capacitor should
 835:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * be connected to the dedicated Vref pin of the device.
 836:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Refer to the device datasheet for the minimum bypass capacitor value to use.
 837:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 838:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 839:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 840:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_BYPASS_CAP_DISABLE = 0uL << SAR_CTRL_VREF_BYP_CAP_EN_Pos,    /**< Disable Vref bypass ca
 841:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_BYPASS_CAP_ENABLE  = 1uL << SAR_CTRL_VREF_BYP_CAP_EN_Pos     /**< Enable Vref bypass cap
 842:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_bypass_cap_t;
 843:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 844:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Negative terminal (Vminus) selection definitions for single-ended channels.
 845:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 846:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The Vminus input for single ended channels can be connected to
 847:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Vref, VSSA, or routed out to an external pin.
 848:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The options for routing to a pin are through Pin 1, Pin 3, Pin 5, or Pin 7
 849:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * of the SARMUX dedicated port or an acore wire in AROUTE, if available on the device.
 850:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 851:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref CY_SAR_NEG_SEL_VSSA_KELVIN comes straight from a Vssa pad without any shared branches
 852:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * so as to keep quiet and avoid voltage drops.
 853:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 854:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 855:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 856:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_SEL_VSSA_KELVIN  = 0uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to VSSA_KELVIN 
 857:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_SEL_P1           = 2uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to Pin 1 of SAR
 858:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_SEL_P3           = 3uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to Pin 3 of SAR
 859:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_SEL_P5           = 4uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to Pin 5 of SAR
 860:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_SEL_P7           = 5uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to Pin 6 of SAR
 861:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_SEL_ACORE        = 6uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to an ACORE in 
 862:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_SEL_VREF         = 7uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to VREF input o
 863:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_neg_sel_t;
 864:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 865:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Enable hardware control of the switch between Vref and the Vminus input */
 866:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 867:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 868:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CTRL_NEGVREF_FW_ONLY = 0uL << SAR_CTRL_SAR_HW_CTRL_NEGVREF_Pos,    /**< Only firmware co
 869:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CTRL_NEGVREF_HW      = 1uL << SAR_CTRL_SAR_HW_CTRL_NEGVREF_Pos     /**< Enable hardware 
 870:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_hw_ctrl_negvref_t;
 871:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 872:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the comparator latch delay */
 873:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 874:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 875:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CTRL_COMP_DLY_2P5    = 0uL << SAR_CTRL_COMP_DLY_Pos,    /**< 2.5 ns delay, use for SAR c
 876:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CTRL_COMP_DLY_4      = 1uL << SAR_CTRL_COMP_DLY_Pos,    /**< 4 ns delay, use for SAR con
 877:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CTRL_COMP_DLY_10     = 2uL << SAR_CTRL_COMP_DLY_Pos,    /**< 10 ns delay, use for SAR co
 878:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CTRL_COMP_DLY_12     = 3uL << SAR_CTRL_COMP_DLY_Pos     /**< 12 ns delay, use for SAR co
 879:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_comp_delay_t;
 880:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 881:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the comparator power mode */
 882:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 883:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 884:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_100     = 0uL << SAR_CTRL_COMP_PWR_Pos,      /**< 100% power, use this for > 2 
 885:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_80      = 1uL << SAR_CTRL_COMP_PWR_Pos,      /**< 80% power, use this for 1.5 -
 886:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_60      = 2uL << SAR_CTRL_COMP_PWR_Pos,      /**< 60% power, use this for 1.0 -
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 17


 887:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_50      = 3uL << SAR_CTRL_COMP_PWR_Pos,      /**< 50% power, use this for 500 k
 888:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_40      = 4uL << SAR_CTRL_COMP_PWR_Pos,      /**< 40% power, use this for 250 -
 889:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_30      = 5uL << SAR_CTRL_COMP_PWR_Pos,      /**< 30% power, use this for 100 -
 890:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_20      = 6uL << SAR_CTRL_COMP_PWR_Pos,      /**< 20% power, use this for TDB s
 891:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_10      = 7uL << SAR_CTRL_COMP_PWR_Pos,      /**< 10% power, use this for < 100
 892:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_comp_pwr_t;
 893:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 894:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Enable or disable the SARMUX during Deep Sleep power mode. */
 895:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 896:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 897:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_DEEPSLEEP_SARMUX_OFF = 0uL << SAR_CTRL_DEEPSLEEP_ON_Pos,    /**< Disable SARMUX operatio
 898:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_DEEPSLEEP_SARMUX_ON  = 1uL << SAR_CTRL_DEEPSLEEP_ON_Pos     /**< Enable SARMUX operation
 899:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_sarmux_deep_sleep_t;
 900:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 901:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Enable or disable the SARSEQ control of routing switches */
 902:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 903:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 904:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SARSEQ_SWITCH_ENABLE    = 0uL << SAR_CTRL_SWITCH_DISABLE_Pos,    /**< Enable the SARSEQ 
 905:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SARSEQ_SWITCH_DISABLE   = 1uL << SAR_CTRL_SWITCH_DISABLE_Pos     /**< Disable the SARSEQ
 906:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_sarseq_routing_switches_t;
 907:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 908:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /* \} */
 909:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 910:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_sample_ctrl_register_enums
 911:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of enumerations are used in configuring the SAR SAMPLE_CTRL register
 912:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
 913:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 914:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure result alignment, either left or right aligned.
 915:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 916:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \note
 917:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Averaging always uses right alignment. If the \ref CY_SAR_LEFT_ALIGN
 918:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * is selected with averaging enabled, it is ignored.
 919:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 920:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \note
 921:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The voltage conversion functions (\ref Cy_SAR_CountsTo_Volts, \ref Cy_SAR_CountsTo_mVolts,
 922:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref Cy_SAR_CountsTo_uVolts) are only valid for right alignment.
 923:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * */
 924:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 925:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 926:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RIGHT_ALIGN  = 0uL << SAR_SAMPLE_CTRL_LEFT_ALIGN_Pos,    /**< Right align result data to
 927:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_LEFT_ALIGN   = 1uL << SAR_SAMPLE_CTRL_LEFT_ALIGN_Pos     /**< Left align result data to 
 928:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_sample_ctrl_result_align_t;
 929:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 930:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure format, signed or unsigned, of single-ended channels */
 931:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 932:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 933:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SINGLE_ENDED_UNSIGNED  = 0uL << SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_Pos,    /**< Result 
 934:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SINGLE_ENDED_SIGNED    = 1uL << SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_Pos     /**< Result 
 935:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_sample_ctrl_single_ended_format_t;
 936:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 937:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure format, signed or unsigned, of differential channels */
 938:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 939:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 940:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_DIFFERENTIAL_UNSIGNED  = 0uL << SAR_SAMPLE_CTRL_DIFFERENTIAL_SIGNED_Pos,    /**< Result 
 941:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_DIFFERENTIAL_SIGNED    = 1uL << SAR_SAMPLE_CTRL_DIFFERENTIAL_SIGNED_Pos     /**< Result 
 942:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_sample_ctrl_differential_format_t;
 943:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 18


 944:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure number of samples for averaging.
 945:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This applies only to channels with averaging enabled.
 946:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 947:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 948:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 949:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_2          = 0uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 950:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_4          = 1uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 951:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_8          = 2uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 952:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_16         = 3uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 953:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_32         = 4uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 954:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_64         = 5uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 955:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_128        = 6uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 956:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_256        = 7uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos     /**< Set samples averaged to
 957:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_sample_ctrl_avg_cnt_t;
 958:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 959:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the averaging mode.
 960:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 961:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Sequential accumulate and dump: a channel will be sampled back to back.
 962:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   The result is added to a running sum in a 20-bit register. At the end
 963:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   of the scan, the accumulated value is shifted right to fit into 16 bits
 964:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   and stored into the CHAN_RESULT register.
 965:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Sequential fixed:  a channel will be sampled back to back.
 966:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   The result is added to a running sum in a 20-bit register. At the end
 967:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   of the scan, the accumulated value is shifted right to fit into 12 bits
 968:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   and stored into the CHAN_RESULT register.
 969:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Interleaved: a channel will be sampled once per scan.
 970:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   The result is added to a running sum in a 16-bit register.
 971:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   In the scan where the final averaging count is reached,
 972:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   the accumulated value is shifted right to fit into 12 bits
 973:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   and stored into the CHAN_RESULT register.
 974:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   In all other scans, the CHAN_RESULT will have an invalid result.
 975:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   In interleaved mode, make sure that the averaging
 976:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   count is low enough to ensure that the intermediate value does not exceed 16 bits,
 977:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   that is averaging count is 16 or less. Otherwise, the MSBs will be lost.
 978:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   In the special case that averaging is enabled for all enabled channels
 979:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   and interleaved mode is used, the interrupt frequency
 980:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   will be reduced by a factor of the number of samples averaged.
 981:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 982:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 983:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 984:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_MODE_SEQUENTIAL_ACCUM    = 0uL,                               /**< Set mode to seque
 985:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_MODE_SEQUENTIAL_FIXED    = SAR_SAMPLE_CTRL_AVG_SHIFT_Msk,     /**< Set mode to seque
 986:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_MODE_INTERLEAVED         = SAR_SAMPLE_CTRL_AVG_MODE_Msk,      /**< Set mode to inter
 987:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_sample_ctrl_avg_mode_t;
 988:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 989:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the trigger mode.
 990:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 991:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Firmware triggering is always enabled and can be single shot or continuous.
 992:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Additionally, hardware triggering can be enabled with the option to be
 993:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * edge or level sensitive.
 994:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 995:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 996:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 997:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_TRIGGER_MODE_FW_ONLY        = 0uL,                                /**< Firmware trigger 
 998:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_TRIGGER_MODE_FW_AND_HWEDGE  = SAR_SAMPLE_CTRL_DSI_TRIGGER_EN_Msk, /**< Enable edge sensi
 999:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_TRIGGER_MODE_FW_AND_HWLEVEL = SAR_SAMPLE_CTRL_DSI_TRIGGER_EN_Msk | SAR_SAMPLE_CTRL_DSI_T
1000:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_sample_ctrl_trigger_mode_t;
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 19


1001:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1002:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /* \} */
1003:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1004:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_sample_time_shift_enums
1005:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of enumerations aids in configuring the SAR SAMPLE_TIME* registers
1006:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1007:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1008:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the sample time by using these shifts */
1009:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1010:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1011:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SAMPLE_TIME0_SHIFT       = SAR_SAMPLE_TIME01_SAMPLE_TIME0_Pos,             /**< Shift fo
1012:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SAMPLE_TIME1_SHIFT       = SAR_SAMPLE_TIME01_SAMPLE_TIME1_Pos,             /**< Shift fo
1013:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SAMPLE_TIME2_SHIFT       = SAR_SAMPLE_TIME23_SAMPLE_TIME2_Pos,             /**< Shift fo
1014:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SAMPLE_TIME3_SHIFT       = SAR_SAMPLE_TIME23_SAMPLE_TIME3_Pos,             /**< Shift fo
1015:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_sample_time_shift_t;
1016:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /* \} */
1017:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1018:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_range_thres_register_enums
1019:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of enumerations aids in configuring the SAR RANGE* registers
1020:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1021:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1022:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the lower and upper thresholds for range detection
1023:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1024:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SARSEQ supports range detection to allow for automatic detection of sample
1025:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * values compared to two programmable thresholds without CPU involvement.
1026:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Range detection is defined by two global thresholds and a condition.
1027:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The RANGE_LOW value defines the lower threshold and RANGE_HIGH defines
1028:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * the upper threshold of the range.
1029:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1030:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Range detect is done after averaging, alignment, and sign extension (if applicable).
1031:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * In other words, the thresholds values must have the same data format as the result data.
1032:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Range detection is always done for all channels scanned. By making RANGE_INTR_MASK=0,
1033:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * the firmware can choose to ignore the range detect interrupt for any channel.
1034:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1035:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1036:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1037:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RANGE_LOW_SHIFT      = SAR_RANGE_THRES_RANGE_LOW_Pos,        /**< Shift for setting lowe
1038:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RANGE_HIGH_SHIFT     = SAR_RANGE_THRES_RANGE_HIGH_Pos,       /**< Shift for setting uppe
1039:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_range_thres_shift_t;
1040:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1041:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the condition (below, inside, above, or outside) of the range detection interrupt */
1042:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1043:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1044:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RANGE_COND_BELOW     = 0uL,  /**< Range interrupt detected when result < RANGE_LOW */
1045:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RANGE_COND_INSIDE    = 1uL,  /**< Range interrupt detected when RANGE_LOW <= result < RA
1046:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RANGE_COND_ABOVE     = 2uL,  /**< Range interrupt detected when RANGE_HIGH <= result */
1047:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RANGE_COND_OUTSIDE   = 3uL,  /**< Range interrupt detected when result < RANGE_LOW || RA
1048:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_range_detect_condition_t;
1049:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /* \} */
1050:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1051:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_chan_config_register_enums
1052:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of enumerations aids in configuring the SAR CHAN_CONFIG register
1053:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1054:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1055:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the input mode of the channel
1056:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1057:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Single ended channel: the \ref cy_en_sar_ctrl_neg_sel_t selection in the \ref group_sar_init_st
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 20


1058:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   determines what drives the Vminus pin
1059:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Differential paired: Vplus and Vminus are a pair. Bit 0 of \ref cy_en_sar_chan_config_pos_pin_a
1060:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   is ignored and considered to be 0.
1061:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   In other words, \ref cy_en_sar_chan_config_pos_pin_addr_t "POS_PIN_ADDR" points to the even pin
1062:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   The even pin is connected to Vplus and the odd pin is connected to Vminus.
1063:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   \ref cy_en_sar_chan_config_pos_port_addr_t "POS_PORT_ADDR" is used to identify the port that co
1064:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Differential unpaired: The \ref cy_en_sar_chan_config_neg_pin_addr_t "NEG_PIN_ADDR" and
1065:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   \ref cy_en_sar_chan_config_neg_port_addr_t "NEG_PORT_ADDR" determine what drives the Vminus pin
1066:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   This is a variation of differential mode with no even-odd pair limitation
1067:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1068:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1069:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1070:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_SINGLE_ENDED            = 0uL,                                     /**< Single ende
1071:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_DIFFERENTIAL_PAIRED     = SAR_CHAN_CONFIG_DIFFERENTIAL_EN_Msk,     /**< Differentia
1072:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_DIFFERENTIAL_UNPAIRED   = SAR_CHAN_CONFIG_NEG_ADDR_EN_Msk          /**< Differentia
1073:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_chan_config_input_mode_t;
1074:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1075:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure address of the pin connected to the Vplus terminal of the SARADC. */
1076:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1077:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1078:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_0     = 0uL,                                            /**< Pin 0 on 
1079:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_1     = 1uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 1 on 
1080:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_2     = 2uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 2 on 
1081:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_3     = 3uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 3 on 
1082:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_4     = 4uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 4 on 
1083:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_5     = 5uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 5 on 
1084:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_6     = 6uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 6 on 
1085:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_7     = 7uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 7 on 
1086:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_chan_config_pos_pin_addr_t;
1087:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1088:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure address of the port that contains the pin connected to the Vplus terminal of the SARA
1089:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1090:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - \ref CY_SAR_POS_PORT_ADDR_SARMUX is for the dedicated SARMUX port (8 pins)
1091:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Port 1 through 4 are respectively the pins of CTB0, CTB1, CTB2, and CTB3 (if present)
1092:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Port 7, 5, and 6 (VPORT0/1/2) are the groups of internal signals that can be selected
1093:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   in the SARMUX or AROUTE (if present).
1094:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1095:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * See the \ref group_sar_sarmux section for more guidance.
1096:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1097:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1098:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1099:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_SARMUX         = 0uL,                                       /**< Dedicated
1100:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_CTB0           = 1uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< Outputs f
1101:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_CTB1           = 2uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< Outputs f
1102:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_CTB2           = 3uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< Outputs f
1103:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_CTB3           = 4uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< Outputs f
1104:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_AROUTE_VIRT2   = 5uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< AROUTE vi
1105:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_AROUTE_VIRT1   = 6uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< AROUTE vi
1106:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_SARMUX_VIRT    = 7uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< SARMUX vi
1107:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_chan_config_pos_port_addr_t;
1108:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1109:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Enable or disable averaging for the channel */
1110:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1111:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1112:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_AVG_DISABLE      = 0uL,                                 /**< Disable averaging for 
1113:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_AVG_ENABLE       = 1uL << SAR_CHAN_CONFIG_AVG_EN_Pos    /**< Enable averaging for t
1114:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_chan_config_avg_en_t;
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 21


1115:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1116:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Select which sample time to use for the channel.
1117:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * There are four global samples times available set by \ref group_sar_init_struct_sampleTime01 and
1118:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref group_sar_init_struct_sampleTime23.
1119:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1120:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1121:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1122:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_SAMPLE_TIME_0     = 0uL,                                          /**< Use sample t
1123:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_SAMPLE_TIME_1     = 1uL << SAR_CHAN_CONFIG_SAMPLE_TIME_SEL_Pos,   /**< Use sample t
1124:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_SAMPLE_TIME_2     = 2uL << SAR_CHAN_CONFIG_SAMPLE_TIME_SEL_Pos,   /**< Use sample t
1125:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_SAMPLE_TIME_3     = 3uL << SAR_CHAN_CONFIG_SAMPLE_TIME_SEL_Pos,   /**< Use sample t
1126:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_chan_config_sample_time_t;
1127:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1128:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure address of the pin connected to the Vminus terminal of the SARADC. */
1129:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1130:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1131:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_0     = 0uL,                                            /**< Pin 0 on 
1132:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_1     = 1uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 1 on 
1133:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_2     = 2uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 2 on 
1134:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_3     = 3uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 3 on 
1135:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_4     = 4uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 4 on 
1136:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_5     = 5uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 5 on 
1137:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_6     = 6uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 6 on 
1138:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_7     = 7uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 7 on 
1139:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_chan_config_neg_pin_addr_t;
1140:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1141:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure address of the port that contains the pin connected to the Vminus terminal of the SAR
1142:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1143:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Port 0 is 8 pins of the SARMUX
1144:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Port 7, 5, and 6 (VPORT0/1/2) are the groups of internal signals that can be selected
1145:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   in the SARMUX or AROUTE (if present).
1146:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1147:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1148:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1149:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_PORT_ADDR_SARMUX         = 0uL,                                       /**< Dedicated
1150:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_PORT_ADDR_AROUTE_VIRT2   = 5uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< AROUTE vi
1151:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_PORT_ADDR_AROUTE_VIRT1   = 6uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< AROUTE vi
1152:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_PORT_ADDR_SARMUX_VIRT    = 7uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< SARMUX vi
1153:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_chan_config_neg_port_addr_t;
1154:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1155:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /* \} */
1156:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1157:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_intr_mask_t_register_enums
1158:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of enumerations aids in configuring the SAR INTR_MASK register
1159:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1160:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1161:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure which signal will cause an interrupt event.
1162:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1163:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - End of scan (EOS): occurs after completing a scan of all enabled channels
1164:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Overflow: occurs when hardware sets a new EOS interrupt while the previous interrupt
1165:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   has not be cleared by the firmware
1166:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Firmware collision: occurs when firmware attempts to start one-shot
1167:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   conversion while the SAR is busy.
1168:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1169:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Enable all, one, or none of the interrupt events.
1170:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1171:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 22


1172:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1173:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_INTR_MASK_NONE           = 0uL,                                  /**< Disable all interr
1174:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_INTR_EOS_MASK            = SAR_INTR_MASK_EOS_MASK_Msk,           /**< Enable end of scan
1175:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_INTR_OVERFLOW_MASK       = SAR_INTR_MASK_OVERFLOW_MASK_Msk,      /**< Enable overflow in
1176:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_INTR_FW_COLLISION_MASK   = SAR_INTR_MASK_FW_COLLISION_MASK_Msk,  /**< Enable firmware co
1177:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_intr_mask_t;
1178:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1179:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /* \} */
1180:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1181:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_mux_switch_register_enums
1182:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of enumerations aids in configuring the \ref group_sar_init_struct_muxSwitch and \ref gr
1183:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1184:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1185:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1186:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Firmware control for the SARMUX switches to connect analog signals to the SAR ADC
1187:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1188:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * To close multiple switches, "OR" the enum values together.
1189:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1190:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * See the \ref group_sar_sarmux section for more guidance.
1191:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1192:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1193:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1194:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     /* SARMUX pins to Vplus */
1195:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P0_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P0_VPLUS_Msk,    /**< Switch between Pi
1196:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P1_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P1_VPLUS_Msk,    /**< Switch between Pi
1197:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P2_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P2_VPLUS_Msk,    /**< Switch between Pi
1198:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P3_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P3_VPLUS_Msk,    /**< Switch between Pi
1199:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P4_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P4_VPLUS_Msk,    /**< Switch between Pi
1200:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P5_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P5_VPLUS_Msk,    /**< Switch between Pi
1201:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P6_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P6_VPLUS_Msk,    /**< Switch between Pi
1202:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P7_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P7_VPLUS_Msk,    /**< Switch between Pi
1203:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1204:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     /* SARMUX pins to Vminus */
1205:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P0_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P0_VMINUS_Msk,   /**< Switch between Pi
1206:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P1_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P1_VMINUS_Msk,   /**< Switch between Pi
1207:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P2_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P2_VMINUS_Msk,   /**< Switch between Pi
1208:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P3_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P3_VMINUS_Msk,   /**< Switch between Pi
1209:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P4_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P4_VMINUS_Msk,   /**< Switch between Pi
1210:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P5_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P5_VMINUS_Msk,   /**< Switch between Pi
1211:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P6_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P6_VMINUS_Msk,   /**< Switch between Pi
1212:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P7_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P7_VMINUS_Msk,   /**< Switch between Pi
1213:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1214:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     /* Vssa to Vminus and temperature sensor to Vplus */
1215:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_VSSA_VMINUS      = SAR_MUX_SWITCH0_MUX_FW_VSSA_VMINUS_Msk,    /**< Switch between
1216:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_TEMP_VPLUS       = SAR_MUX_SWITCH0_MUX_FW_TEMP_VPLUS_Msk,     /**< Switch between
1217:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1218:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     /* Amuxbus A and B to Vplus and Vminus */
1219:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_AMUXBUSA_VPLUS   = SAR_MUX_SWITCH0_MUX_FW_AMUXBUSA_VPLUS_Msk,     /**< Switch bet
1220:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_AMUXBUSB_VPLUS   = SAR_MUX_SWITCH0_MUX_FW_AMUXBUSB_VPLUS_Msk,     /**< Switch bet
1221:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_AMUXBUSA_VMINUS  = SAR_MUX_SWITCH0_MUX_FW_AMUXBUSA_VMINUS_Msk,    /**< Switch bet
1222:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_AMUXBUSB_VMINUS  = SAR_MUX_SWITCH0_MUX_FW_AMUXBUSB_VMINUS_Msk,    /**< Switch bet
1223:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1224:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     /* Sarbus 0 and 1 to Vplus and Vminus */
1225:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_SARBUS0_VPLUS    = SAR_MUX_SWITCH0_MUX_FW_SARBUS0_VPLUS_Msk,      /**< Switch bet
1226:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_SARBUS1_VPLUS    = SAR_MUX_SWITCH0_MUX_FW_SARBUS1_VPLUS_Msk,      /**< Switch bet
1227:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_SARBUS0_VMINUS   = SAR_MUX_SWITCH0_MUX_FW_SARBUS0_VMINUS_Msk,     /**< Switch bet
1228:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_SARBUS1_VMINUS   = SAR_MUX_SWITCH0_MUX_FW_SARBUS1_VMINUS_Msk,     /**< Switch bet
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 23


1229:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1230:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     /* SARMUX pins to Core IO */
1231:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P4_COREIO0       = SAR_MUX_SWITCH0_MUX_FW_P4_COREIO0_Msk,      /**< Switch betwee
1232:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P5_COREIO1       = SAR_MUX_SWITCH0_MUX_FW_P5_COREIO1_Msk,      /**< Switch betwee
1233:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P6_COREIO2       = SAR_MUX_SWITCH0_MUX_FW_P6_COREIO2_Msk,      /**< Switch betwee
1234:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P7_COREIO3       = SAR_MUX_SWITCH0_MUX_FW_P7_COREIO3_Msk,      /**< Switch betwee
1235:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_mux_switch_fw_ctrl_t;
1236:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1237:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Mask definitions of SARMUX switches that can be controlled by the SARSEQ.
1238:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1239:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * To enable sequencer control of multiple switches, "OR" the enum values together.
1240:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1241:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * See the \ref group_sar_sarmux section for more guidance.
1242:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1243:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1244:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1245:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P0           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P0_Msk,        /**< Enable
1246:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P1           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P1_Msk,        /**< Enable
1247:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P2           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P2_Msk,        /**< Enable
1248:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P3           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P3_Msk,        /**< Enable
1249:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P4           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P4_Msk,        /**< Enable
1250:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P5           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P5_Msk,        /**< Enable
1251:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P6           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P6_Msk,        /**< Enable
1252:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P7           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P7_Msk,        /**< Enable
1253:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_VSSA         = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_VSSA_Msk,      /**< Enable
1254:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_TEMP         = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_TEMP_Msk,      /**< Enable
1255:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_AMUXBUSA     = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_AMUXBUSA_Msk,  /**< Enable
1256:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_AMUXBUSB     = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_AMUXBUSB_Msk,  /**< Enable
1257:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_SARBUS0      = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_SARBUS0_Msk,   /**< Enable
1258:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_SARBUS1      = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_SARBUS1_Msk,   /**< Enable
1259:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_mux_switch_sq_ctrl_t;
1260:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1261:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /* \} */
1262:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1263:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} group_sar_enums */
1264:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1265:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_data_structures
1266:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1267:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1268:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1269:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /***************************************
1270:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       Configuration Structures
1271:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ***************************************/
1272:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1273:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** This structure is used to initialize the SAR ADC subsystem.
1274:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1275:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SAR ADC subsystem is highly configurable with many options.
1276:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * When calling \ref Cy_SAR_Init, provide a pointer to the structure containing this configuration d
1277:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * A set of enumerations is provided in this
1278:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * driver to help with configuring this structure.
1279:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1280:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * See the \ref group_sar_initialization section for guidance.
1281:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** **/
1282:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef struct
1283:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1284:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t ctrl;                                      /**< Control register settings (applies to 
1285:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t sampleCtrl;                                /**< Sample control register settings (appl
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 24


1286:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t sampleTime01;                              /**< Sample time in ADC clocks for Sample T
1287:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t sampleTime23;                              /**< Sample time in ADC clocks for Sample T
1288:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t rangeThres;                                /**< Range detect threshold register for al
1289:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     cy_en_sar_range_detect_condition_t rangeCond;       /**< Range detect condition (below, inside,
1290:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t chanEn;                                    /**< Enable bits for the channels */
1291:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t chanConfig[CY_SAR_MAX_NUM_CHANNELS];       /**< Channel configuration */
1292:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t intrMask;                                  /**< Interrupt enable mask */
1293:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t satIntrMask;                               /**< Saturation detection interrupt enable 
1294:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t rangeIntrMask;                             /**< Range detection interrupt enable mask 
1295:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t muxSwitch;                                 /**< SARMUX firmware switches to connect an
1296:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t muxSwitchSqCtrl;                           /**< Enable SARSEQ control of specific SARM
1297:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     bool configRouting;                                 /**< Configure or ignore routing related re
1298:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t vrefMvValue;                               /**< Reference voltage in millivolts used i
1299:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** } cy_stc_sar_config_t;
1300:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1301:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** This structure is used by the driver to backup the state of the SAR
1302:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * before entering sleep so that it can be re-enabled after waking up */
1303:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef struct
1304:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1305:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t hwEnabled;         /**< SAR enabled state */
1306:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t continuous;        /**< State of the continuous bit */
1307:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** } cy_stc_sar_state_backup_t;
1308:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1309:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} group_sar_data_structures */
1310:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1311:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions
1312:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1313:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1314:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1315:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** This macro is for backward compatibility macro for driver v1.10 and before, 
1316:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****  * the preferred API is \ref Cy_SAR_DeepSleep */
1317:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define Cy_SAR_Sleep    Cy_SAR_DeepSleep
1318:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1319:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /***************************************
1320:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *        Function Prototypes
1321:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ***************************************/
1322:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1323:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_basic
1324:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of functions is for initialization and basic usage
1325:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1326:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1327:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** cy_en_sar_status_t Cy_SAR_Init(SAR_Type *base, const cy_stc_sar_config_t *config);
1328:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** cy_en_sar_status_t Cy_SAR_DeInit(SAR_Type *base, bool deInitRouting);
1329:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_Enable(SAR_Type *base);
1330:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_Disable(SAR_Type *base);
1331:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_StartConvert(SAR_Type *base, cy_en_sar_start_convert_sel_t startSelect);
1332:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_StopConvert(SAR_Type *base);
1333:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** cy_en_sar_status_t Cy_SAR_IsEndConversion(SAR_Type *base, cy_en_sar_return_mode_t retMode);
1334:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** int16_t Cy_SAR_GetResult16(const SAR_Type *base, uint32_t chan);
1335:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** int32_t Cy_SAR_GetResult32(const SAR_Type *base, uint32_t chan);
1336:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetChanResultUpdated(const SAR_Type *base);
1337:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1338:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1339:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_power
1340:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of functions is for Deep Sleep entry and exit
1341:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1342:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 25


1343:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** cy_en_syspm_status_t Cy_SAR_DeepSleepCallback(cy_stc_syspm_callback_params_t *callbackParams, cy_en
1344:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_DeepSleep(SAR_Type *base);
1345:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_Wakeup(SAR_Type *base);
1346:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1347:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1348:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_config
1349:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of functions allows changes to the SAR configuration
1350:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * after initialization.
1351:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1352:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1353:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_SetConvertMode(SAR_Type *base, cy_en_sar_sample_ctrl_trigger_mode_t mode);
1354:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetChanMask(SAR_Type *base, uint32_t enableMask);
1355:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_SetLowLimit(SAR_Type *base, uint32_t lowLimit);
1356:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_SetHighLimit(SAR_Type *base, uint32_t highLimit);
1357:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetRangeCond(SAR_Type *base, cy_en_sar_range_detect_condition_t cond);
1358:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1359:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1360:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_countsto
1361:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of functions performs counts to *volts conversions.
1362:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1363:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1364:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** int16_t Cy_SAR_RawCounts2Counts(const SAR_Type *base, uint32_t chan, int16_t adcCounts);
1365:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** float32_t Cy_SAR_CountsTo_Volts(const SAR_Type *base, uint32_t chan, int16_t adcCounts);
1366:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** int16_t Cy_SAR_CountsTo_mVolts(const SAR_Type *base, uint32_t chan, int16_t adcCounts);
1367:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** int32_t Cy_SAR_CountsTo_uVolts(const SAR_Type *base, uint32_t chan, int16_t adcCounts);
1368:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** cy_en_sar_status_t Cy_SAR_SetOffset(uint32_t chan, int16_t offset);
1369:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** cy_en_sar_status_t Cy_SAR_SetGain(uint32_t chan, int32_t adcGain);
1370:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1371:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1372:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_switches
1373:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of functions is for controlling/querying the SARMUX switches
1374:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1375:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1376:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_SetAnalogSwitch(SAR_Type *base, cy_en_sar_switch_register_sel_t switchSelect, uint32_t 
1377:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** uint32_t Cy_SAR_GetAnalogSwitch(const SAR_Type *base, cy_en_sar_switch_register_sel_t switchSelect)
1378:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetVssaVminusSwitch(SAR_Type *base, cy_en_sar_switch_state_t state);
1379:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_SetSwitchSarSeqCtrl(SAR_Type *base, uint32_t switchMask, cy_en_sar_switch_sar_seq_ctrl_
1380:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetVssaSarSeqCtrl(SAR_Type *base, cy_en_sar_switch_sar_seq_ctrl_t ctrl)
1381:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1382:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1383:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_interrupt
1384:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of functions are related to SAR interrupts.
1385:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1386:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1387:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetInterruptStatus(const SAR_Type *base);
1388:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_ClearInterrupt(SAR_Type *base, uint32_t intrMask);
1389:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetInterrupt(SAR_Type *base, uint32_t intrMask);
1390:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetInterruptMask(SAR_Type *base, uint32_t intrMask);
1391:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetInterruptMask(const SAR_Type *base);
1392:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetInterruptStatusMasked(const SAR_Type *base);
1393:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1394:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetRangeInterruptStatus(const SAR_Type *base);
1395:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_ClearRangeInterrupt(SAR_Type *base, uint32_t chanMask);
1396:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetRangeInterrupt(SAR_Type *base, uint32_t chanMask);
1397:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetRangeInterruptMask(SAR_Type *base, uint32_t chanMask);
1398:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetRangeInterruptMask(const SAR_Type *base);
1399:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetRangeInterruptStatusMasked(const SAR_Type *base);
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 26


1400:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1401:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetSatInterruptStatus(const SAR_Type *base);
1402:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_ClearSatInterrupt(SAR_Type *base, uint32_t chanMask);
1403:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetSatInterrupt(SAR_Type *base, uint32_t chanMask);
1404:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetSatInterruptMask(SAR_Type *base, uint32_t chanMask);
1405:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetSatInterruptMask(const SAR_Type *base);
1406:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetSatInterruptStatusMasked(const SAR_Type *base);
1407:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1408:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetInterruptCause(const SAR_Type *base);
1409:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1410:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1411:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1412:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_helper
1413:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of functions is for useful configuration query
1414:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1415:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1416:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** bool Cy_SAR_IsChannelSigned(const SAR_Type *base, uint32_t chan);
1417:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** bool Cy_SAR_IsChannelSingleEnded(const SAR_Type *base, uint32_t chan);
1418:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE bool Cy_SAR_IsChannelDifferential(const SAR_Type *base, uint32_t chan);
1419:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1420:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1421:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_basic
1422:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1423:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1424:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1425:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1426:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1427:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_Disable
1428:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1429:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1430:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Turn off the hardware block.
1431:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1432:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1433:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1434:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1435:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return None
1436:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1437:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
1438:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_Disable(SAR_Type *base)
1439:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
  27              		.loc 1 1439 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 8
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31 0000 80B5     		push	{r7, lr}
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 7, -8
  34              		.cfi_offset 14, -4
  35 0002 82B0     		sub	sp, sp, #8
  36              		.cfi_def_cfa_offset 16
  37 0004 00AF     		add	r7, sp, #0
  38              		.cfi_def_cfa_register 7
  39 0006 7860     		str	r0, [r7, #4]
1440:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     SAR_CTRL(base) &= ~SAR_CTRL_ENABLED_Msk;
  40              		.loc 1 1440 0
  41 0008 7B68     		ldr	r3, [r7, #4]
  42 000a 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 27


  43 000c 5B00     		lsls	r3, r3, #1
  44 000e 5A08     		lsrs	r2, r3, #1
  45 0010 7B68     		ldr	r3, [r7, #4]
  46 0012 1A60     		str	r2, [r3]
1441:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
  47              		.loc 1 1441 0
  48 0014 C046     		nop
  49 0016 BD46     		mov	sp, r7
  50 0018 02B0     		add	sp, sp, #8
  51              		@ sp needed
  52 001a 80BD     		pop	{r7, pc}
  53              		.cfi_endproc
  54              	.LFE79:
  55              		.size	Cy_SAR_Disable, .-Cy_SAR_Disable
  56              		.section	.rodata
  57              		.align	2
  58              	.LC0:
  59 0000 47656E65 		.ascii	"Generated_Source\\PSoC6\\pdl\\drivers/peripheral/sa"
  59      72617465 
  59      645F536F 
  59      75726365 
  59      5C50536F 
  60 0030 722F6379 		.ascii	"r/cy_sar.h\000"
  60      5F736172 
  60      2E6800
  61              		.section	.text.Cy_SAR_SetChanMask,"ax",%progbits
  62              		.align	2
  63              		.code	16
  64              		.thumb_func
  65              		.type	Cy_SAR_SetChanMask, %function
  66              	Cy_SAR_SetChanMask:
  67              	.LFB81:
1442:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1443:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1444:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1445:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_GetChanResultUpdated
1446:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1447:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1448:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Return whether the RESULT register has been updated or not.
1449:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * If the bit is high, the corresponding channel RESULT register was updated,
1450:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * i.e. was sampled during the previous scan and, in case of Interleaved averaging,
1451:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * reached the averaging count.
1452:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * If the bit is low, the corresponding channel is not enabled or the averaging count
1453:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * is not yet reached for Interleaved averaging.
1454:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1455:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1456:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1457:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1458:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return
1459:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Each bit of the result corresponds to the channel.
1460:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Bit 0 is for channel 0, etc.
1461:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1462:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \funcusage
1463:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1464:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_GET_CHAN_RESULT_UPDATED
1465:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1466:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 28


1467:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetChanResultUpdated(const SAR_Type *base)
1468:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1469:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     return SAR_CHAN_RESULT_UPDATED(base);
1470:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
1471:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1472:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1473:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_config
1474:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1475:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1476:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1477:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1478:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1479:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_SetChanMask
1480:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1481:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1482:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Set the enable/disable mask for the channels.
1483:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1484:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1485:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1486:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1487:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param enableMask
1488:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Channel enable/disable mask. Each bit corresponds to a channel.
1489:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - 0: the corresponding channel is disabled.
1490:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - 1: the corresponding channel is enabled; it will be included in the next scan.
1491:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1492:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return None
1493:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1494:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \funcusage
1495:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1496:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SET_CHAN_MASK
1497:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1498:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
1499:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetChanMask(SAR_Type *base, uint32_t enableMask)
1500:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
  68              		.loc 1 1500 0
  69              		.cfi_startproc
  70              		@ args = 0, pretend = 0, frame = 8
  71              		@ frame_needed = 1, uses_anonymous_args = 0
  72 0000 80B5     		push	{r7, lr}
  73              		.cfi_def_cfa_offset 8
  74              		.cfi_offset 7, -8
  75              		.cfi_offset 14, -4
  76 0002 82B0     		sub	sp, sp, #8
  77              		.cfi_def_cfa_offset 16
  78 0004 00AF     		add	r7, sp, #0
  79              		.cfi_def_cfa_register 7
  80 0006 7860     		str	r0, [r7, #4]
  81 0008 3960     		str	r1, [r7]
1501:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_ASSERT_L2(CY_SAR_CHANMASK(enableMask));
  82              		.loc 1 1501 0
  83 000a 3B68     		ldr	r3, [r7]
  84 000c 074A     		ldr	r2, .L4
  85 000e 9342     		cmp	r3, r2
  86 0010 05D9     		bls	.L3
  87              		.loc 1 1501 0 is_stmt 0 discriminator 1
  88 0012 074A     		ldr	r2, .L4+4
  89 0014 074B     		ldr	r3, .L4+8
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 29


  90 0016 1100     		movs	r1, r2
  91 0018 1800     		movs	r0, r3
  92 001a FFF7FEFF 		bl	Cy_SysLib_AssertFailed
  93              	.L3:
1502:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1503:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     SAR_CHAN_EN(base) = enableMask;
  94              		.loc 1 1503 0 is_stmt 1
  95 001e 7B68     		ldr	r3, [r7, #4]
  96 0020 3A68     		ldr	r2, [r7]
  97 0022 1A62     		str	r2, [r3, #32]
1504:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
  98              		.loc 1 1504 0
  99 0024 C046     		nop
 100 0026 BD46     		mov	sp, r7
 101 0028 02B0     		add	sp, sp, #8
 102              		@ sp needed
 103 002a 80BD     		pop	{r7, pc}
 104              	.L5:
 105              		.align	2
 106              	.L4:
 107 002c FFFF0000 		.word	65535
 108 0030 DD050000 		.word	1501
 109 0034 00000000 		.word	.LC0
 110              		.cfi_endproc
 111              	.LFE81:
 112              		.size	Cy_SAR_SetChanMask, .-Cy_SAR_SetChanMask
 113              		.section	.text.Cy_SAR_SetInterruptMask,"ax",%progbits
 114              		.align	2
 115              		.code	16
 116              		.thumb_func
 117              		.type	Cy_SAR_SetInterruptMask, %function
 118              	Cy_SAR_SetInterruptMask:
 119              	.LFB86:
1505:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1506:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1507:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1508:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_SetRangeCond
1509:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1510:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1511:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Set the condition in which range detection interrupts are triggered.
1512:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1513:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1514:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1515:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1516:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param cond
1517:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * A value of the enum \ref cy_en_sar_range_detect_condition_t.
1518:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1519:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return None
1520:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1521:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \funcusage
1522:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1523:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SET_RANGE_COND
1524:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1525:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
1526:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetRangeCond(SAR_Type *base, cy_en_sar_range_detect_condition_t cond)
1527:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1528:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_ASSERT_L3(CY_SAR_RANGECOND(cond));
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 30


1529:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1530:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     SAR_RANGE_COND(base) = (uint32_t)cond << SAR_RANGE_COND_RANGE_COND_Pos;
1531:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
1532:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1533:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1534:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1535:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_interrupt
1536:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1537:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1538:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1539:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_GetInterruptStatus
1540:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1541:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1542:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Return the interrupt register status.
1543:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1544:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1545:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1546:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1547:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return Interrupt status
1548:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1549:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \funcusage
1550:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1551:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_ISR
1552:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1553:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
1554:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetInterruptStatus(const SAR_Type *base)
1555:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1556:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     return SAR_INTR(base);
1557:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
1558:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1559:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1560:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1561:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_ClearInterrupt
1562:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1563:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1564:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Clear the interrupt.
1565:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The interrupt must be cleared with this function so that the hardware
1566:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * can set subsequent interrupts and those interrupts can be forwarded
1567:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * to the interrupt controller, if enabled.
1568:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1569:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1570:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1571:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1572:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param intrMask
1573:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The mask of interrupts to clear. Typically this will be the value returned
1574:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * from \ref Cy_SAR_GetInterruptStatus.
1575:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Alternately, select one or more values from \ref cy_en_sar_intr_mask_t and "OR" them together.
1576:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - \ref CY_SAR_INTR_EOS_MASK
1577:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - \ref CY_SAR_INTR_OVERFLOW_MASK
1578:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - \ref CY_SAR_INTR_FW_COLLISION_MASK
1579:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1580:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return None
1581:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1582:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
1583:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_ClearInterrupt(SAR_Type *base, uint32_t intrMask)
1584:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1585:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_ASSERT_L2(CY_SAR_INTRMASK(intrMask));
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 31


1586:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1587:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     SAR_INTR(base) = intrMask;
1588:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1589:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     /* Dummy read for buffered writes. */
1590:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     (void) SAR_INTR(base);
1591:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
1592:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1593:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1594:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1595:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_SetInterrupt
1596:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1597:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1598:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Trigger an interrupt with software.
1599:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1600:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1601:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1602:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1603:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param intrMask
1604:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The mask of interrupts to set.
1605:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Select one or more values from \ref cy_en_sar_intr_mask_t and "OR" them together.
1606:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - \ref CY_SAR_INTR_EOS_MASK
1607:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - \ref CY_SAR_INTR_OVERFLOW_MASK
1608:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - \ref CY_SAR_INTR_FW_COLLISION_MASK
1609:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1610:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return None
1611:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1612:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
1613:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetInterrupt(SAR_Type *base, uint32_t intrMask)
1614:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1615:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_ASSERT_L2(CY_SAR_INTRMASK(intrMask));
1616:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1617:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     SAR_INTR_SET(base) = intrMask;
1618:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
1619:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1620:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1621:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1622:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_SetInterruptMask
1623:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1624:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1625:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Enable which interrupts can trigger the CPU interrupt controller.
1626:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1627:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1628:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1629:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1630:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param intrMask
1631:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The mask of interrupts. Select one or more values from \ref cy_en_sar_intr_mask_t
1632:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * and "OR" them together.
1633:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - \ref CY_SAR_INTR_MASK_NONE : Disable EOS, overflow, and firmware collision interrupts.
1634:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - \ref CY_SAR_INTR_EOS_MASK
1635:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - \ref CY_SAR_INTR_OVERFLOW_MASK
1636:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - \ref CY_SAR_INTR_FW_COLLISION_MASK
1637:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1638:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return None
1639:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1640:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \funcusage
1641:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1642:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SET_INTERRUPT_MASK
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 32


1643:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1644:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
1645:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetInterruptMask(SAR_Type *base, uint32_t intrMask)
1646:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 120              		.loc 1 1646 0
 121              		.cfi_startproc
 122              		@ args = 0, pretend = 0, frame = 8
 123              		@ frame_needed = 1, uses_anonymous_args = 0
 124 0000 80B5     		push	{r7, lr}
 125              		.cfi_def_cfa_offset 8
 126              		.cfi_offset 7, -8
 127              		.cfi_offset 14, -4
 128 0002 82B0     		sub	sp, sp, #8
 129              		.cfi_def_cfa_offset 16
 130 0004 00AF     		add	r7, sp, #0
 131              		.cfi_def_cfa_register 7
 132 0006 7860     		str	r0, [r7, #4]
 133 0008 3960     		str	r1, [r7]
1647:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_ASSERT_L2(CY_SAR_INTRMASK(intrMask));
 134              		.loc 1 1647 0
 135 000a 3B68     		ldr	r3, [r7]
 136 000c 072B     		cmp	r3, #7
 137 000e 05D9     		bls	.L7
 138              		.loc 1 1647 0 is_stmt 0 discriminator 1
 139 0010 074A     		ldr	r2, .L8
 140 0012 084B     		ldr	r3, .L8+4
 141 0014 1100     		movs	r1, r2
 142 0016 1800     		movs	r0, r3
 143 0018 FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 144              	.L7:
1648:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1649:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     SAR_INTR_MASK(base) = intrMask;
 145              		.loc 1 1649 0 is_stmt 1
 146 001c 7A68     		ldr	r2, [r7, #4]
 147 001e 8623     		movs	r3, #134
 148 0020 9B00     		lsls	r3, r3, #2
 149 0022 3968     		ldr	r1, [r7]
 150 0024 D150     		str	r1, [r2, r3]
1650:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
 151              		.loc 1 1650 0
 152 0026 C046     		nop
 153 0028 BD46     		mov	sp, r7
 154 002a 02B0     		add	sp, sp, #8
 155              		@ sp needed
 156 002c 80BD     		pop	{r7, pc}
 157              	.L9:
 158 002e C046     		.align	2
 159              	.L8:
 160 0030 6F060000 		.word	1647
 161 0034 00000000 		.word	.LC0
 162              		.cfi_endproc
 163              	.LFE86:
 164              		.size	Cy_SAR_SetInterruptMask, .-Cy_SAR_SetInterruptMask
 165              		.section	.text.Cy_SysClk_PeriphSetDivider,"ax",%progbits
 166              		.align	2
 167              		.code	16
 168              		.thumb_func
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 33


 169              		.type	Cy_SysClk_PeriphSetDivider, %function
 170              	Cy_SysClk_PeriphSetDivider:
 171              	.LFB134:
 172              		.file 2 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/sysclk/cy_sysclk.h"
   1:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /***************************************************************************//**
   2:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \file cy_sysclk.h
   3:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \version 2.0
   4:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
   5:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Provides an API declaration of the sysclk driver.
   6:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
   7:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ********************************************************************************
   8:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \copyright
   9:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Copyright 2016-2020, Cypress Semiconductor Corporation. All rights reserved.
  10:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * You may use this file only in accordance with the license, terms, conditions,
  11:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * disclaimers, and limitations in the end user license agreement accompanying
  12:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * the software package with which this file was provided.
  13:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
  14:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
  15:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
  16:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk
  17:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
  18:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The System Clock (SysClk) driver contains the API for configuring system and
  19:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * peripheral clocks. 
  20:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
  21:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The functions and other declarations used in this driver are in cy_sysclk.h. 
  22:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * You can include cy_pdl.h (ModusToolbox only) to get access to all functions 
  23:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * and declarations in the PDL. 
  24:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
  25:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Firmware uses the API to configure , enable, or disable a clock.
  26:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * 
  27:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The clock system includes a variety of resources that can vary per device, including:
  28:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * - Internal clock sources such as internal oscillators
  29:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * - External clock sources such as crystal oscillators or a signal on an I/O pin
  30:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * - Generated clocks such as an FLL, a PLL, and peripheral clocks
  31:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
  32:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Consult the Technical Reference Manual for your device for details of the 
  33:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * clock system.
  34:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
  35:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The PDL defines clock system capabilities in:\n
  36:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * devices\<family\>/<series\>/include\<series\>_config.h. (E.g.
  37:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * devices/psoc6/include/psoc6_01_config.h).
  38:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * User-configurable clock speeds are defined in the file system_<series>.h.
  39:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
  40:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * As an illustration of the clocking system, the following diagram shows the
  41:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * PSoC 63 series clock tree. The actual tree may vary depending on the device series.
  42:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Consult the Technical Reference Manual for your device for details.
  43:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * ![](sysclk_tree.png)
  44:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
  45:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The sysclk driver supports multiple peripheral clocks, as well as the fast 
  46:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * clock, slow clock, backup domain clock, timer clock, and pump clock. The API
  47:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * for any given clock contains the functions to manage that clock. Functions
  48:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * for clock measurement and trimming are also provided.
  49:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
  50:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \section group_sysclk_configuration Configuration Considerations
  51:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The availability of clock functions depend on the availability of the chip
  52:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * resources that support those functions. Consult the device TRM before
  53:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * attempting to use these functions.
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 34


  54:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
  55:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * LPActive and LPSleep power modes limit the maximum clock frequency allowed
  56:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * on the device. Refer to the SysPm driver and the TRM for details.
  57:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
  58:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \section group_sysclk_more_information More Information
  59:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Refer to the technical reference manual (TRM) and the device datasheet.
  60:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
  61:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \section group_sysclk_MISRA MISRA-C Compliance
  62:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * <table class="doxtable">
  63:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
  64:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <th>MISRA Rule</th>
  65:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <th>Rule Class (Required/Advisory)</th>
  66:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <th>Rule Description</th>
  67:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <th>Description of Deviation(s)</th>
  68:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
  69:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
  70:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>10.3</td>
  71:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>R</td>
  72:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>A composite expression of the "essentially unsigned" type is being
  73:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         cast to a different type category.</td>
  74:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>The value got from the bitfield physically cannot exceed the enumeration
  75:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         that describes this bitfield. So, the code is safe by design.</td>
  76:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
  77:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
  78:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>10.4</td>
  79:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>R</td>
  80:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>A composite floating point expression is being cast to double, or unsigned.</td>
  81:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Casting a floating-point calculation result to an integer.</td>
  82:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
  83:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
  84:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>13.4</td>
  85:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>R</td>
  86:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>The controlling expression of a for statement shall not contain any objects of floating t
  87:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Scanning through a list of floating point values: only greater_than/less_then checks are 
  88:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         with floating point numbers, the loop counter is integer. </td>
  89:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
  90:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
  91:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>16.7</td>
  92:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>R</td>
  93:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>The object addressed by the pointer parameter is not modified and so the pointer could be
  94:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         type 'pointer to const'.</td>
  95:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>The callback function for system power management (SysPm) must be of generic callback typ
  96:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         contains non-const pointer parameter.</td>
  97:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
  98:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * </table>
  99:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 100:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \section group_sysclk_changelog Changelog
 101:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * <table class="doxtable">
 102:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr><th>Version</th><th>Changes</th><th>Reason for Change</th></tr>
 103:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
 104:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>2.0</td>
 105:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Updated the ECO trimming values calculation algorithm in the \ref Cy_SysClk_EcoConfigure 
 106:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         This change may invalidate the already used crystals, in cases: \n
 107:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         * The crystal frequency is less than 16 MHz (the supported crystal frequency range was ch
 108:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         * The maximum amplitude (internal calculation value) is less than 0.65 V. \n
 109:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 110:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         Also the second parameter cSum takes into account both C0 (the crystal itself shunt capac
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 35


 111:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         For detail, refer the \ref Cy_SysClk_EcoConfigure documentation and the ECO Trimming sect
 112:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Enhanced the ECO performance for high-noise conditions that result from simultaneous swit
 113:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
 114:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
 115:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td rowspan="4">1.20</td>
 116:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Flattened the organization of the driver source code into the single 
 117:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         source directory and the single include directory.
 118:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     </td>
 119:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Driver library directory-structure simplification.</td>
 120:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
 121:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
 122:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Updated \ref Cy_SysClk_FllLocked function description</td>
 123:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>The SRSS_ver1 HW details clarification</td>
 124:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
 125:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
 126:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Removed the following functions:
 127:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         - Cy_SysClk_FllLostLock
 128:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         - Cy_SysClk_WcoConfigureCsv
 129:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         - Cy_SysClk_ClkHfConfigureCsv
 130:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     </td>
 131:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>No hardware support for the removed functions.</td>
 132:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
 133:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
 134:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Added register access layer. Use register access macros instead
 135:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         of direct register access using dereferenced pointers.</td>
 136:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Makes register access device-independent, so that the PDL does 
 137:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         not need to be recompiled for each supported part number.</td>
 138:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
 139:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
 140:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>1.11</td>
 141:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Updated the following functions. Now they use a semaphore when 
 142:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         try to read the status or configure the SysClk measurement counters:
 143:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         * Cy_SysClk_StartClkMeasurementCounters()
 144:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         * Cy_SysClk_ClkMeasurementCountersGetFreq()
 145:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 146:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         Now Cy_SysClk_ClkMeasurementCountersGetFreq() returns zero value,
 147:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         if during measurement device was in the Deep Sleep or partially
 148:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         blocking flash operation occurred </td>
 149:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Added arbiter mechanism for correct usage of the SysClk measurement 
 150:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         counters</td>
 151:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
 152:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
 153:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>1.10.1</td>
 154:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Renamed Power Management section to Low Power Callback section</td>
 155:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Documentation update and clarification</td>
 156:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
 157:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
 158:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td rowspan="5">1.10</td>
 159:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Updated FLL parameter calculation</td>
 160:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Support low frequency sources</td>
 161:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
 162:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
 163:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Added Cy_SysClk_PiloSetTrim() and Cy_SysclkPiloGetTrim() functions</td>
 164:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Support PILO manual trims</td>
 165:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
 166:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
 167:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Made Cy_SysClk_FllLostLock() function dependent on SRSS v1</td>
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 36


 168:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Feature is not supported in SRSS v1</td>
 169:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
 170:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
 171:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Updated Cy_SysClk_DeepSleepCallback() to save/restore both FLL and PLL settings</td>
 172:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>The function should return when the lock is established or a timeout has occurred</td>
 173:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
 174:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
 175:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>General documentation updates</td>
 176:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td></td>
 177:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
 178:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
 179:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>1.0</td>
 180:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Initial version</td>
 181:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td></td>
 182:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
 183:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * </table>
 184:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 185:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_macros           Macros
 186:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 187:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 188:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_enums           General Enumerated Types
 189:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 190:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_returns         Function return values
 191:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 192:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_eco             External Crystal Oscillator (ECO)
 193:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 194:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The External Crystal Oscillator (ECO) is a clock source that consists
 195:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   of an oscillator circuit that drives an external crystal through its
 196:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   dedicated ECO pins. The ECO is a source clock that can be used to
 197:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   source one or more clock paths (Refer to \ref group_sysclk_path_src).
 198:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   These clock paths can then source the processors and peripherals in
 199:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   the device.
 200:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 201:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The ECO relies on the presence of an external crystal. The pins
 202:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   connected to this crystal must be configured to operate in analog
 203:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   drive mode with HSIOM connection set to GPIO control (HSIOM_SEL_GPIO).
 204:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 205:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_eco_funcs       Functions
 206:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 207:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_path_src           Clock Path Source
 208:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 209:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Clock paths are a series of multiplexers that allow a source clock
 210:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   to drive multiple clocking resources down the chain. These paths are
 211:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   used for active domain clocks that are not operational during chip 
 212:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   deep-sleep, hibernate and off modes. Illustrated below is a diagram
 213:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   of the clock paths for the PSoC 63 series, showing the first three
 214:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   clock paths. The source clocks for these paths are highlighted in
 215:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   the red box.
 216:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 217:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - IMO: 8 MHz Internal Main Oscillator (Default)
 218:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - EXTCLK: External clock (signal brought in through dedicated pins)
 219:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - ECO: External Crystal Oscillator (requires external crystal on dedicated pins)
 220:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - ALTHF: Select on-chip signals (e.g. BLE ECO)
 221:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - Digital Signal (DSI): Digital signal from a UDB source
 222:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 223:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Some clock paths such as path 0 and path 1 have additional resources
 224:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   that can be utilized to provide a higher frequency clock. For example, 
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 37


 225:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   path 0 source clock can be used as the reference clock for the FLL and 
 226:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   path 1 source clock can be used as the reference clock for the PLL.
 227:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 228:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_path_source.png)
 229:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 230:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \note The PDL driver cannot configure a clock path to use Digital Signal
 231:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Interconnect (DSI) outputs as sources. This must be done through DSI
 232:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   configuration tool such as PSoC Creator.
 233:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 234:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_path_src_funcs     Functions
 235:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_path_src_enums     Enumerated Types
 236:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 237:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_fll             Frequency Locked Loop (FLL)
 238:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 239:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The FLL is a clock generation circuit that can be used to produce a
 240:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   higher frequency clock from a reference clock. The output clock exhibits
 241:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   some characteristics of the reference clock such as the accuracy of the
 242:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   source. However other attributes such as the clock phase are not preserved.
 243:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The FLL is similar in purpose to a (Phase locked loop) PLL but they are
 244:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   not equivalent.
 245:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 246:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - They may have different frequency ranges.
 247:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - The FLL starts up (locks) faster and consumes less current than the PLL.
 248:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - The FLL accepts a source clock with lower frequency than PLL, such as the WCO (32 KHz). 
 249:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - The FLL does not lock phase. The hardware consist of a counter with a
 250:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     current-controlled oscillator (CCO). The counter counts the number of output
 251:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     clock edges in a reference clock period and adjusts the CCO until the
 252:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     expected ratio is achieved (locked). After initial lock, the CCO is
 253:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     adjusted dynamically to keep the ratio within tolerance. The lock tolerance
 254:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     is user-adjustable.
 255:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_fll.png)
 256:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 257:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The SysClk driver supports two models for configuring the FLL. The first
 258:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   model is to call the Cy_SysClk_FllConfigure() function, which calculates the 
 259:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   necessary parameters for the FLL at run-time. This may be necessary for dynamic
 260:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   run-time changes to the FLL. However this method is slow as it needs to perform 
 261:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   the calculation before configuring the FLL. The other model is to call 
 262:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Cy_SysClk_FllManualConfigure() function with pre-calculated parameter values. 
 263:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   This method is faster but requires prior knowledge of the necessary parameters.
 264:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Consult the device TRM for the FLL calculation equations.
 265:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 266:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_fll_funcs       Functions
 267:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_fll_structs     Data Structures
 268:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_fll_enums       Enumerated Types
 269:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 270:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_pll             Phase Locked Loop (PLL)
 271:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 272:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The PLL is a clock generation circuit that can be used to produce a
 273:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   higher frequency clock from a reference clock. The output clock exhibits
 274:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   characteristics of the reference clock such as the accuracy of the source
 275:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   and its phase. The PLL is similar in purpose to a (Frequency locked loop) FLL
 276:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   but they are not equivalent.
 277:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 278:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - They may have different frequency ranges.
 279:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - The PLL starts up more slowly and consumes more current than the FLL.
 280:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - The PLL requires a higher frequency source clock than PLL. 
 281:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_pll.png)
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 38


 282:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 283:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The SysClk driver supports two models for configuring the PLL. The first
 284:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   model is to call the Cy_SysClk_PllConfigure() function, which calculates the 
 285:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   necessary parameters for the PLL at run-time. This may be necessary for dynamic
 286:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   run-time changes to the PLL. However this method is slow as it needs to perform 
 287:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   the calculation before configuring the PLL. The other model is to call 
 288:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Cy_SysClk_PllManualConfigure() function with pre-calculated parameter values. 
 289:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   This method is faster but requires prior knowledge of the necessary parameters.
 290:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Consult the device TRM for the PLL calculation equations.
 291:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 292:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_pll_funcs       Functions
 293:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_pll_structs     Data Structures
 294:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 295:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_ilo             Internal Low-Speed Oscillator (ILO)
 296:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 297:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The ILO operates with no external components and outputs a stable clock at
 298:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   32.768 kHz nominal. The ILO is relatively low power and low accuracy. It is 
 299:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   available in all power modes and can be used as a source for the Backup domain clock.
 300:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_backup.png)
 301:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 302:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   To ensure the ILO remains active in Hibernate mode, and across power-on-reset
 303:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   (POR) or brown out detect (BOD), firmware must call Cy_SysClk_IloHibernateOn(). 
 304:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 305:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Additionally, the ILO clock can be trimmed to +/- 1.5% of nominal frequency using
 306:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   a higher precision clock source. Use the \ref group_sysclk_calclk API to measure 
 307:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   the current ILO frequency before trimming.
 308:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 309:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \note The ILO is always the source clock for the \ref group_wdt. Therefore:
 310:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - The WDT must be unlocked when making an ILO function call in the PDL
 311:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - It is recommended to always have the ILO enabled
 312:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 313:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_ilo_funcs       Functions
 314:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 315:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_pilo            Precision Internal Low-Speed Oscillator (PILO)
 316:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 317:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   PILO provides a higher accuracy 32.768 kHz clock than the \ref group_sysclk_ilo "ILO".
 318:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   When periodically calibrated using a high-accuracy clock such as the
 319:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \ref group_sysclk_eco "ECO", the PILO can achieve 250 ppm accuracy of nominal frequency.
 320:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The PILO is capable of operating in device Active, Sleep and Deep-Sleep power modes. 
 321:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   It is not available in Hibernate mode.
 322:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 323:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The PILO can be used as a source for the \ref group_sysclk_clk_lf. However,
 324:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   because PILO is disabled in Hibernate mode, RTC timers cannot operate in this mode
 325:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   when clocked using the PILO. Instead, either the \ref group_sysclk_ilo "ILO" or
 326:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \ref group_sysclk_wco "WCO" should be used when hibernate operation is required. 
 327:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 328:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_backup.png)
 329:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 330:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Periodic calibration to a high-accuracy clock (such as ECO) is required to
 331:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   maintain accuracy. The application should use the functions described in the 
 332:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \ref group_sysclk_calclk API to measure the current PILO frequency before trimming.
 333:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 334:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_pilo_funcs      Functions
 335:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 336:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_calclk          Clock Measurement
 337:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 338:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   These functions measure the frequency of a specified clock relative to a
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 39


 339:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   reference clock. They are typically called in the following order:
 340:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 341:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   1. Specify the measured clock, the count, and the reference clock
 342:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   2. Start the counters
 343:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   3. Wait for the measurement counter to finish counting
 344:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   4. Retrieve the measured frequency
 345:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 346:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \note These functions may also be used as part of a clock trimming
 347:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   process. Refer to the \ref group_sysclk_trim "Clock Trim" API.
 348:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 349:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_calclk_funcs    Functions
 350:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_calclk_enums    Enumerated Types
 351:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 352:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_trim            Clock Trim (ILO, PILO)
 353:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 354:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   These functions perform a single trim operation on the ILO or PILO. Each
 355:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   function's parameter is the actual frequency of the clock. To measure the
 356:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   frequency, use the functions described in the \ref group_sysclk_calclk API.
 357:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 358:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   To trim the clock as close as possible to the target frequency, multiple
 359:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   calls to the trim function may be needed. A typical usage example is to:
 360:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   1. Call the clock measurement functions to get the actual frequency of the clock
 361:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   2. Call the trim function, passing in the measured frequency
 362:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   3. Repeat the above until the trim function reports that the clock is trimmed to within limits.
 363:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 364:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_trim_funcs      Functions
 365:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 366:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_pm              Low Power Callback
 367:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 368:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Entering and exiting low power modes require compatible clock configurations
 369:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   to be set before entering low power and restored upon wake-up and exit. The
 370:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   SysClk driver provides a Cy_SysClk_DeepSleepCallback() function to support
 371:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   deep-sleep mode entry. 
 372:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 373:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   This function can be called either by itself before initiating low-power mode
 374:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   entry or it can be used in conjunction with the SysPm driver as a registered 
 375:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   callback. To do so, register this function as a callback before calling 
 376:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Cy_SysPm_DeepSleep(). Specify \ref CY_SYSPM_DEEPSLEEP as the callback type, 
 377:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   and call Cy_SysPm_RegisterCallback().
 378:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   
 379:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \note If the FLL or PLL source is the ECO, this function must be called.
 380:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 381:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_pm_funcs        Functions
 382:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 383:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_wco             Watch Crystal Oscillator (WCO)
 384:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 385:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The WCO is a highly accurate 32.768 kHz clock source capable of operating
 386:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   in all power modes (excluding the Off mode). It is the primary clock source for
 387:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   the backup domain clock, which is used by the real-time clock (RTC). The 
 388:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   WCO can also be used as a source for the low-frequency clock to support other
 389:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   low power mode peripherals.
 390:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 391:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_backup.png)
 392:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 393:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The WCO requires the configuration of the dedicated WCO pins (SRSS_WCO_IN_PIN,
 394:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   SRSS_WCO_OUT_PIN). These must be configured as Analog Hi-Z drive modes and the
 395:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   HSIOM selection set to GPIO. The WCO can also be used in bypass mode, where
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 40


 396:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   an external 32.768 kHz square wave is brought in directly through the 
 397:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   SRSS_WCO_OUT_PIN pin.
 398:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 399:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Some devices support a built-in clock supervisor (CSV) in the WCO. The clock
 400:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   supervisor detects if the WCO has been lost; that is, the WCO is no longer 
 401:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   producing clock pulses. The CSV does this by checking to ensure there is at 
 402:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   least one WCO clock pulse within a certain time window. The ILO or PILO can be
 403:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   the supervising clock. Firmware can configure the CSV to trigger a fault,
 404:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   a reset, or both after specified cycles of the supervising clock.
 405:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 406:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_wco_funcs       Functions
 407:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_wco_structs     Data Structures
 408:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_wco_enums       Enumerated Types
 409:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 410:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_clk_hf          High-Frequency Clocks
 411:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 412:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Multiple high frequency clocks (CLK_HF) are available in the device. For example,
 413:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   PSoC 63 series has five high-frequency root clocks. Each CLK_HF has a particular
 414:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   connection and chip-specific destination on the device.
 415:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 416:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   |Name     |Description                                             |
 417:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   |:--------|:-------------------------------------------------------|
 418:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   |CLK_HF[0]| Root clock for CPUs, PERI, and AHB infrastructure      |
 419:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   |CLK_HF[1]| Root clock for the PDM/PCM and I2S audio subsystem     |
 420:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   |CLK_HF[2]| Root clock for the Serial Memory Interface subsystem   |
 421:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   |CLK_HF[3]| Root clock for USB communications                      |
 422:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   |CLK_HF[4]| Clock output on clk_ext pin (when used as an output)   |
 423:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 424:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_hf.png)
 425:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 426:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Note this is a particular example. The actual tree may vary depending on the device series.
 427:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Consult the Technical Reference Manual for your device for details.
 428:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   
 429:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   High frequency clocks are sourced by path clocks, which should be configured
 430:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   first. An exception to this rule is CLK_HF[0], which cannot be disabled. 
 431:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   This divided clock drives the core processors and the peripherals in the system.
 432:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   In order to update its clock source, CLK_HF[0] source must be selected without
 433:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   disabling the clock.
 434:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 435:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_hf_dist.png)
 436:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 437:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Some devices support a clock supervisor (CSV) for each root clock. These
 438:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   can detect frequency loss, or monitor that the clock frequency stays within
 439:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   a specified range. The possible supervising clocks are IMO, ECO, or ALTHF. 
 440:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Loss detection and frequency monitoring can be enabled or disabled independently.
 441:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Each has its own programmable action that occurs on detection of an error.
 442:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 443:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_hf_funcs    Functions
 444:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_hf_structs  Data Structures
 445:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_hf_enums    Enumerated Types
 446:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 447:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_clk_fast        Fast Clock
 448:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 449:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The fast clock drives the "fast" processor (e.g. Cortex-M4 processor in PSoC 6).
 450:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   This clock is sourced by CLK_HF[0] (\ref group_sysclk_clk_hf "HF Clocks").
 451:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   A divider value of 1~256 can be used to further divide the CLK_HF[0] to a
 452:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   desired clock speed for the processor.
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 41


 453:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 454:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_fast.png)
 455:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 456:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_fast_funcs  Functions
 457:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 458:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_clk_peri        Peripheral Clock
 459:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 460:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The peripheral clock is a divided clock of CLK_HF0 (\ref group_sysclk_clk_hf "HF Clocks").
 461:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   It is the source clock for the \ref group_sysclk_clk_slow, and most active domain
 462:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   peripheral clocks (\ref group_sysclk_clk_peripheral). A divider value of 1~256 
 463:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   can be used to further divide the CLK_HF[0] to a desired clock speed for the peripherals.
 464:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 465:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_peri.png)
 466:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 467:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_peri_funcs  Functions
 468:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 469:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_clk_peripheral  Peripherals Clock Dividers
 470:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 471:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   There are multiple peripheral clock dividers that, in effect, create 
 472:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   multiple separate peripheral clocks. The available dividers vary per device 
 473:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   series. As an example, for the PSoC 63 series there are 29 dividers:
 474:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 475:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - eight 8-bit dividers
 476:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - sixteen 16-bit dividers
 477:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - four fractional 16.5-bit dividers (16 integer bits, 5 fractional bits)
 478:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - one fractional 24.5-bit divider (24 integer bits, 5 fractional bits)
 479:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 480:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 481:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The 8-bit and 16-bit dividers are integer dividers. A divider value of 1 
 482:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   means the output frequency matches the input frequency (that is, there is
 483:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   no change). Otherwise the frequency is divided by the value of the divider.
 484:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   For example, if the input frequency is 50 MHz, and the divider is value 10,
 485:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   the output frequency is 5 MHz.
 486:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 487:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The five fractional bits supports further precision in 1/32nd increments. For
 488:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   example, a divider with an integer value of 3 and a fractional value of
 489:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   4 (4/32) results in a divider of 3.125. Fractional dividers are useful when
 490:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   a high-precision clock is required, for example, for a UART/SPI serial
 491:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   interface.
 492:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 493:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_peri_divs.png)
 494:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 495:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Each peripheral can connect to any one of the programmable dividers. A
 496:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   particular peripheral clock divider can drive multiple peripherals.
 497:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   
 498:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The SysClk driver also supports phase aligning two peripheral clock dividers using
 499:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Cy_SysClk_PeriphEnablePhaseAlignDivider(). Alignment works for both integer
 500:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   and fractional dividers. The divider to which a second divider is aligned
 501:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   must already be enabled.
 502:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 503:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_peripheral_funcs Functions
 504:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_peripheral_enums Enumerated Types
 505:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 506:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_clk_slow        Slow Clock
 507:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 508:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The slow clock is the source clock for the "slow" processor (e.g. Cortex-M0+ in PSoC 6).
 509:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   This clock is a divided version of the \ref group_sysclk_clk_peri, which in turn is 
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 42


 510:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   a divided version of CLK_HF[0] (\ref group_sysclk_clk_hf "HF Clocks"). A divider 
 511:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   value of 1~256 can be used to further divide the Peri clock to a desired clock speed
 512:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   for the processor.
 513:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 514:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_slow.png)
 515:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 516:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_slow_funcs  Functions
 517:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 518:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_clk_lf          Low-Frequency Clock
 519:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 520:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The low-frequency clock is the source clock for the \ref group_mcwdt
 521:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   and can be the source clock for \ref group_sysclk_clk_bak, which drives the
 522:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \ref group_rtc.
 523:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   
 524:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The low-frequency clock has three possible source clocks:
 525:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \ref group_sysclk_ilo "ILO", \ref group_sysclk_pilo "PILO", and
 526:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \ref group_sysclk_wco "WCO".
 527:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 528:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_lf.png)
 529:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 530:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_lf_funcs    Functions
 531:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_lf_enums    Enumerated Types
 532:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 533:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_clk_timer       Timer Clock
 534:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 535:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The timer clock can be a source for the alternative clock driving 
 536:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   the \ref group_arm_system_timer. It can also be used as a reference clock 
 537:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   for a counter in the \ref group_energy_profiler "Energy Profiler".
 538:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   
 539:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The timer clock is a divided clock of either the IMO or CLK_HF[0]
 540:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   (\ref group_sysclk_clk_hf "HF Clocks").
 541:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 542:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_timer_funcs Functions
 543:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_timer_enums Enumerated Types
 544:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 545:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_clk_pump        Pump Clock
 546:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 547:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The pump clock is a clock source used to provide analog precision in low voltage
 548:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   applications. Depending on the usage scenario, it may be required to drive the
 549:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   internal voltage pump for the Continuous Time Block mini (CTBm) in the analog 
 550:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   subsystem. The pump clock is a divided clock of one of the clock paths 
 551:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   (\ref group_sysclk_path_src).
 552:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 553:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_pump_funcs  Functions
 554:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_pump_enums  Enumerated Types
 555:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 556:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_clk_bak         Backup Domain Clock
 557:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 558:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The backup domain clock drives the \ref group_rtc.
 559:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   This clock has two possible source clocks: \ref group_sysclk_wco "WCO"
 560:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   or the \ref group_sysclk_clk_lf. In turn the low frequency clock is sourced by
 561:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \ref group_sysclk_ilo "ILO", \ref group_sysclk_pilo "PILO", or
 562:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \ref group_sysclk_wco "WCO". Typically the ILO is not suitable as an RTC source,
 563:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   because of its low accuracy. However the ILO does operate in hibernate mode and
 564:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   may be used as an alternative to the WCO with a tradeoff in precision.
 565:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 566:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_bak_funcs   Functions
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 43


 567:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_bak_enums   Enumerated Types
 568:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 569:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 570:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 571:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #if !defined(CY_SYSCLK_H)
 572:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #define CY_SYSCLK_H
 573:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 574:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #include <stdbool.h>
 575:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #include "cy_device.h"
 576:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #include "cy_device_headers.h"
 577:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #include "cy_syslib.h"
 578:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #include "cy_syspm.h"
 579:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 580:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 581:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #if defined(__cplusplus)
 582:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** extern "C" {
 583:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #endif /* __cplusplus */
 584:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 585:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 586:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_macros
 587:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 588:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 589:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** Driver major version */
 590:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #define  CY_SYSCLK_DRV_VERSION_MAJOR   2
 591:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** Driver minor version */
 592:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #define  CY_SYSCLK_DRV_VERSION_MINOR   0
 593:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** Sysclk driver identifier */
 594:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #define CY_SYSCLK_ID   CY_PDL_DRV_ID(0x12U)
 595:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 596:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_macros */
 597:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 598:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 599:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_returns
 600:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 601:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 602:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** Defines general-purpose function return values. */
 603:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
 604:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 605:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_SUCCESS       = 0u, /**< Command completed with no errors */
 606:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_BAD_PARAM     = (CY_SYSCLK_ID | CY_PDL_STATUS_ERROR | 1U), /**< Invalid function inpu
 607:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_TIMEOUT       = (CY_SYSCLK_ID | CY_PDL_STATUS_ERROR | 2U), /**< Timeout occurred */
 608:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_INVALID_STATE = (CY_SYSCLK_ID | CY_PDL_STATUS_ERROR | 3U)  /**< Clock is in an invali
 609:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_sysclk_status_t;
 610:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_returns */
 611:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 612:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \cond INTERNAL */
 613:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* Calculate a / b with rounding to the nearest integer. a and b must have the same sign. */
 614:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #define CY_SYSCLK_DIV_ROUND(a, b) (((a) + ((b) / 2u)) / (b))
 615:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* Calculate a / b with rounding up if remainder != 0. a and b must both be positive. */
 616:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #define CY_SYSCLK_DIV_ROUNDUP(a, b) ((((a) - 1U) / (b)) + 1U)
 617:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \endcond */
 618:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 619:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 620:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
 621:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ===========================    ECO SECTION    ============================ */
 622:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
 623:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 44


 624:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 625:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_macros
 626:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 627:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 628:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 629:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 630:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_ecostatus ECO status
 631:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 632:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Constants used for expressing ECO status.
 633:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 634:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #define CY_SYSCLK_ECOSTAT_AMPLITUDE  0UL /**< \brief ECO does not have sufficient amplitude */
 635:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #define CY_SYSCLK_ECOSTAT_INACCURATE 1UL /**< \brief ECO may not be meeting accuracy and duty cycle
 636:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #define CY_SYSCLK_ECOSTAT_STABLE     2UL /**< \brief ECO has fully stabilized */
 637:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} */
 638:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 639:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_macros */
 640:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 641:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 642:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 643:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_eco_funcs
 644:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 645:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 646:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_sysclk_status_t Cy_SysClk_EcoConfigure(uint32_t freq, uint32_t cLoad, uint32_t esr, uint32_t 
 647:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_sysclk_status_t Cy_SysClk_EcoEnable(uint32_t timeoutus);
 648:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_EcoDisable(void);
 649:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint32_t Cy_SysClk_EcoGetStatus(void);
 650:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 651:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
 652:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_EcoDisable
 653:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
 654:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 655:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Disables the external crystal oscillator (ECO). This function should not be
 656:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * called if the ECO is sourcing clkHf[0].
 657:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 658:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
 659:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_EcoDisable
 660:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 661:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
 662:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_EcoDisable(void)
 663:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 664:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     SRSS_CLK_ECO_CONFIG &= (uint32_t)~_VAL2FLD(SRSS_CLK_ECO_CONFIG_ECO_EN, 1U); /* 0 = disable */
 665:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
 666:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 667:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
 668:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_EcoGetStatus
 669:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
 670:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 671:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Reports the current status of the external crystal oscillator (ECO).
 672:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 673:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return
 674:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CY_SYSCLK_ECOSTAT_AMPLITUDE = ECO does not have sufficient amplitude<br>
 675:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CY_SYSCLK_ECOSTAT_INACCURATE = ECO has sufficient amplitude but may not be meeting accuracy and d
 676:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CY_SYSCLK_ECOSTAT_STABLE = ECO has fully stabilized
 677:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 678:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
 679:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_EcoGetStatus
 680:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 45


 681:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
 682:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint32_t Cy_SysClk_EcoGetStatus(void)
 683:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 684:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint32_t retVal = (SRSS_CLK_ECO_STATUS & (SRSS_CLK_ECO_STATUS_ECO_OK_Msk | SRSS_CLK_ECO_STATUS_
 685:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     /* if ECO is not ready, just report the ECO_OK bit. Otherwise report 2 = ECO ready */
 686:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return ((0UL == (retVal & SRSS_CLK_ECO_STATUS_ECO_READY_Msk)) ? retVal : CY_SYSCLK_ECOSTAT_STAB
 687:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
 688:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_eco_funcs */
 689:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 690:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 691:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
 692:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ====================    INPUT MULTIPLEXER SECTION    ===================== */
 693:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
 694:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 695:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_path_src_enums
 696:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 697:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 698:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 699:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Input multiplexer clock sources
 700:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 701:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
 702:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 703:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKPATH_IN_IMO    =     0U, /**< Select the IMO as the output of the path mux */
 704:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKPATH_IN_EXT    =     1U, /**< Select the EXT as the output of the path mux */
 705:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKPATH_IN_ECO    =     2U, /**< Select the ECO as the output of the path mux */
 706:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKPATH_IN_ALTHF  =     3U, /**< Select the ALTHF as the output of the path mux.
 707:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                            *   Make sure the ALTHF clock source is available on use
 708:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                            */
 709:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKPATH_IN_DSIMUX =     4U, /**< Select the DSI MUX output as the output of the path 
 710:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKPATH_IN_DSI    = 0x100U, /**< Select a DSI signal (0 - 15) as the output of the DS
 711:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                            *   Make sure the DSI clock sources are available on use
 712:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                            */
 713:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKPATH_IN_ILO    = 0x110U, /**< Select the ILO (16) as the output of the DSI mux and
 714:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKPATH_IN_WCO    = 0x111U, /**< Select the WCO (17) as the output of the DSI mux and
 715:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKPATH_IN_ALTLF  = 0x112U, /**< Select the ALTLF (18) as the output of the DSI mux a
 716:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                            *   Make sure the ALTLF clock sources in available on us
 717:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                            */
 718:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKPATH_IN_PILO   = 0x113U  /**< Select the PILO (19) as the output of the DSI mux an
 719:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                            *   Make sure the PILO clock sources in available on use
 720:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                            */
 721:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_clkpath_in_sources_t;
 722:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_path_src_enums */
 723:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 724:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 725:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_path_src_funcs
 726:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 727:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 728:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_sysclk_status_t Cy_SysClk_ClkPathSetSource(uint32_t clkPath, cy_en_clkpath_in_sources_t sourc
 729:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_clkpath_in_sources_t Cy_SysClk_ClkPathGetSource(uint32_t clkPath);
 730:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_path_src_funcs */
 731:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 732:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 733:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
 734:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ===========================    FLL SECTION    ============================ */
 735:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
 736:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 737:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_fll_enums
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 46


 738:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 739:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 740:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** FLL and PLL output mode.
 741:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * See registers CLK_FLL_CONFIG3 and CLK_PLL_CONFIG0, bits BYPASS_SEL.
 742:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 743:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
 744:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 745:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_FLLPLL_OUTPUT_AUTO   = 0U, /**< Output FLL/PLL input source when not locked, and FLL/
 746:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_FLLPLL_OUTPUT_AUTO1  = 1U, /**< Same as AUTO */
 747:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_FLLPLL_OUTPUT_INPUT  = 2U, /**< Output FLL/PLL input source regardless of lock status
 748:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_FLLPLL_OUTPUT_OUTPUT = 3U  /**< Output FLL/PLL output regardless of lock status. This
 749:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_fll_pll_output_mode_t;
 750:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 751:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** FLL current-controlled oscillator (CCO) frequency ranges.
 752:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * See register CLK_FLL_CONFIG4, bits CCO_RANGE.
 753:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 754:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
 755:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 756:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_FLL_CCO_RANGE0, /**< Target frequency is in range  48 -  64 MHz. */
 757:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_FLL_CCO_RANGE1, /**< Target frequency is in range  64 -  85 MHz. */
 758:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_FLL_CCO_RANGE2, /**< Target frequency is in range  85 - 113 MHz. */
 759:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_FLL_CCO_RANGE3, /**< Target frequency is in range 113 - 150 MHz. */
 760:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_FLL_CCO_RANGE4  /**< Target frequency is in range 150 - 200 MHz. */
 761:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_fll_cco_ranges_t;
 762:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_fll_enums */
 763:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 764:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 765:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_fll_structs
 766:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 767:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 768:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** Structure containing information for manual configuration of FLL.
 769:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 770:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef struct
 771:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 772:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint32_t                    fllMult;         /**< CLK_FLL_CONFIG  register, FLL_MULT bits */
 773:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint16_t                    refDiv;          /**< CLK_FLL_CONFIG2 register, FLL_REF_DIV bits */
 774:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_fll_cco_ranges_t      ccoRange;        /**< CLK_FLL_CONFIG4 register, CCO_RANGE bits */
 775:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     bool                        enableOutputDiv; /**< CLK_FLL_CONFIG  register, FLL_OUTPUT_DIV bit 
 776:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint16_t                    lockTolerance;   /**< CLK_FLL_CONFIG2 register, LOCK_TOL bits */
 777:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint8_t                     igain;           /**< CLK_FLL_CONFIG3 register, FLL_LF_IGAIN bits *
 778:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint8_t                     pgain;           /**< CLK_FLL_CONFIG3 register, FLL_LF_PGAIN bits *
 779:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint16_t                    settlingCount;   /**< CLK_FLL_CONFIG3 register, SETTLING_COUNT bits
 780:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_fll_pll_output_mode_t outputMode;      /**< CLK_FLL_CONFIG3 register, BYPASS_SEL bits */
 781:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint16_t                    cco_Freq;        /**< CLK_FLL_CONFIG4 register, CCO_FREQ bits */
 782:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_stc_fll_manual_config_t;
 783:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_fll_structs */
 784:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 785:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 786:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_fll_funcs
 787:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 788:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 789:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_sysclk_status_t Cy_SysClk_FllConfigure(uint32_t inputFreq, uint32_t outputFreq, cy_en_fll_pll
 790:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_sysclk_status_t Cy_SysClk_FllManualConfigure(const cy_stc_fll_manual_config_t *config);
 791:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** void Cy_SysClk_FllGetConfiguration(cy_stc_fll_manual_config_t *config);
 792:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_sysclk_status_t Cy_SysClk_FllEnable(uint32_t timeoutus);
 793:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE bool Cy_SysClk_FllLocked(void);
 794:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_FllDisable(void);
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 47


 795:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 796:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
 797:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_FllLocked
 798:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
 799:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 800:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Reports whether the FLL is locked first time during FLL starting.
 801:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Intended to be used with \ref Cy_SysClk_FllEnable with zero timeout.
 802:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 803:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return 
 804:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * false = not locked<br>
 805:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * true = locked
 806:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 807:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note
 808:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The unlock occurrence may appear during FLL normal operation, so this function 
 809:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * is not recommended to check the FLL normal operation stability.
 810:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 811:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
 812:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_FllLocked
 813:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 814:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
 815:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE bool Cy_SysClk_FllLocked(void)
 816:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 817:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (_FLD2BOOL(SRSS_CLK_FLL_STATUS_LOCKED, SRSS_CLK_FLL_STATUS));
 818:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
 819:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 820:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 821:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
 822:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_FllDisable
 823:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
 824:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 825:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Disables the FLL and the CCO.
 826:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 827:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return \ref cy_en_sysclk_status_t
 828:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 829:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note 
 830:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref SystemCoreClockUpdate after this function calling 
 831:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * if it affects the CLK_HF0 frequency.
 832:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 833:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note
 834:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref Cy_SysLib_SetWaitStates after calling this function if
 835:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * the FLL is the source of CLK_HF0 and the CLK_HF0 frequency is decreasing.
 836:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 837:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
 838:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_FllDisable
 839:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 840:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
 841:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_FllDisable(void)
 842:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 843:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_REG32_CLR_SET(SRSS_CLK_FLL_CONFIG3, SRSS_CLK_FLL_CONFIG3_BYPASS_SEL, CY_SYSCLK_FLLPLL_OUTPUT
 844:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     SRSS_CLK_FLL_CONFIG  &= ~SRSS_CLK_FLL_CONFIG_FLL_ENABLE_Msk;
 845:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     SRSS_CLK_FLL_CONFIG4 &= ~SRSS_CLK_FLL_CONFIG4_CCO_ENABLE_Msk;
 846:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return CY_SYSCLK_SUCCESS;
 847:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
 848:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_fll_funcs */
 849:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 850:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 851:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 48


 852:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ===========================    PLL SECTION    ============================ */
 853:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
 854:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 855:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_pll_structs
 856:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 857:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 858:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** Structure containing information for configuration of a PLL.
 859:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 860:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef struct
 861:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 862:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint32_t                    inputFreq;  /**< frequency of PLL source, in Hz */
 863:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint32_t                    outputFreq; /**< frequency of PLL output, in Hz */
 864:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     bool                        lfMode;     /**< CLK_PLL_CONFIG register, PLL_LF_MODE bit */
 865:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_fll_pll_output_mode_t outputMode; /**< CLK_PLL_CONFIG register, BYPASS_SEL bits */
 866:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_stc_pll_config_t;
 867:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 868:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** Structure containing information for manual configuration of a PLL.
 869:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 870:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef struct
 871:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 872:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint8_t                     feedbackDiv;  /**< CLK_PLL_CONFIG register, FEEDBACK_DIV (P) bits *
 873:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint8_t                     referenceDiv; /**< CLK_PLL_CONFIG register, REFERENCE_DIV (Q) bits 
 874:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint8_t                     outputDiv;    /**< CLK_PLL_CONFIG register, OUTPUT_DIV bits */
 875:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     bool                        lfMode;       /**< CLK_PLL_CONFIG register, PLL_LF_MODE bit */
 876:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_fll_pll_output_mode_t outputMode;   /**< CLK_PLL_CONFIG register, BYPASS_SEL bits */
 877:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_stc_pll_manual_config_t;
 878:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_pll_structs */
 879:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 880:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 881:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_pll_funcs
 882:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 883:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 884:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_sysclk_status_t Cy_SysClk_PllConfigure(uint32_t clkPath, const cy_stc_pll_config_t *config);
 885:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_sysclk_status_t Cy_SysClk_PllManualConfigure(uint32_t clkPath, const cy_stc_pll_manual_config
 886:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_sysclk_status_t Cy_SysClk_PllGetConfiguration(uint32_t clkPath, cy_stc_pll_manual_config_t *c
 887:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_sysclk_status_t Cy_SysClk_PllEnable(uint32_t clkPath, uint32_t timeoutus);
 888:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE bool Cy_SysClk_PllLocked(uint32_t clkPath);
 889:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE bool Cy_SysClk_PllLostLock(uint32_t clkPath);
 890:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_PllDisable(uint32_t clkPath);
 891:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 892:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
 893:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PllLocked
 894:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
 895:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 896:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Reports whether or not the selected PLL is locked.
 897:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 898:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param clkPath Selects which PLL to check. 1 is the first PLL; 0 is invalid.
 899:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 900:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return 
 901:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * false = not locked<br>
 902:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * true = locked
 903:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 904:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
 905:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_PllLocked
 906:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 907:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
 908:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE bool Cy_SysClk_PllLocked(uint32_t clkPath)
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 49


 909:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 910:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     clkPath--; /* to correctly access PLL config and status registers structures */
 911:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_ASSERT_L1(clkPath < CY_SRSS_NUM_PLL);
 912:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (_FLD2BOOL(SRSS_CLK_PLL_STATUS_LOCKED, SRSS_CLK_PLL_STATUS[clkPath]));
 913:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
 914:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 915:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
 916:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PllLostLock
 917:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
 918:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 919:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Reports whether or not the selected PLL lost its lock since the last time this
 920:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * function was called. Clears the lost lock indicator.
 921:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 922:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param clkPath Selects which PLL to check. 1 is the first PLL; 0 is invalid.
 923:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 924:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return 
 925:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * false = did not lose lock<br>
 926:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * true = lost lock
 927:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 928:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
 929:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_PllLostLock
 930:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 931:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
 932:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE bool Cy_SysClk_PllLostLock(uint32_t clkPath)
 933:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 934:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     clkPath--; /* to correctly access PLL config and status registers structures */
 935:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_ASSERT_L1(clkPath < CY_SRSS_NUM_PLL);
 936:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     bool retVal = _FLD2BOOL(SRSS_CLK_PLL_STATUS_UNLOCK_OCCURRED, SRSS_CLK_PLL_STATUS[clkPath]);
 937:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     /* write a 1 to clear the unlock occurred bit */
 938:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     SRSS_CLK_PLL_STATUS[clkPath] = SRSS_CLK_PLL_STATUS_UNLOCK_OCCURRED_Msk;
 939:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (retVal);
 940:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
 941:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 942:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
 943:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PllDisable
 944:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
 945:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 946:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Disables the selected PLL.
 947:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 948:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param clkPath Selects which PLL to disable. 1 is the first PLL; 0 is invalid.
 949:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 950:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return Error / status code:<br>
 951:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CY_SYSCLK_SUCCESS - PLL successfully disabled<br>
 952:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CY_SYSCLK_BAD_PARAM - invalid clock path number
 953:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 954:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note 
 955:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref SystemCoreClockUpdate after this function calling 
 956:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * if it affects the CLK_HF0 frequency.
 957:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 958:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note
 959:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref Cy_SysLib_SetWaitStates before calling this function if
 960:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * the PLL is the source of CLK_HF0 and the CLK_HF0 frequency is increasing.
 961:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 962:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note
 963:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref Cy_SysLib_SetWaitStates after calling this function if
 964:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * the PLL is the source of CLK_HF0 and the CLK_HF0 frequency is decreasing.
 965:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 50


 966:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
 967:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_PllDisable
 968:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 969:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
 970:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_PllDisable(uint32_t clkPath)
 971:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 972:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_sysclk_status_t retVal = CY_SYSCLK_BAD_PARAM;
 973:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     clkPath--; /* to correctly access PLL config and status registers structures */
 974:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if (clkPath < CY_SRSS_NUM_PLL)
 975:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
 976:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         /* First bypass PLL */
 977:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         CY_REG32_CLR_SET(SRSS_CLK_PLL_CONFIG[clkPath], SRSS_CLK_PLL_CONFIG_BYPASS_SEL, CY_SYSCLK_FL
 978:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         /* Wait at least 6 PLL clock cycles */
 979:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         Cy_SysLib_DelayUs(1U);
 980:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         /* And now disable the PLL itself */
 981:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         SRSS_CLK_PLL_CONFIG[clkPath] &= ~SRSS_CLK_PLL_CONFIG_ENABLE_Msk;
 982:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         retVal = CY_SYSCLK_SUCCESS;
 983:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
 984:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (retVal);
 985:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
 986:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_pll_funcs */
 987:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 988:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 989:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
 990:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ===========================    ILO SECTION    ============================ */
 991:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
 992:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 993:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_ilo_funcs
 994:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 995:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 996:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_IloEnable(void);
 997:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_IloDisable(void);
 998:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_IloHibernateOn(bool on);
 999:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1000:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1001:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_IloEnable
1002:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1003:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1004:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Enables the ILO.
1005:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1006:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note The watchdog timer (WDT) must be unlocked before calling this function.
1007:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1008:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1009:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_IloEnable
1010:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1011:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1012:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_IloEnable(void)
1013:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1014:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     SRSS_CLK_ILO_CONFIG |= SRSS_CLK_ILO_CONFIG_ENABLE_Msk;
1015:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1016:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1017:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1018:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_IloDisable
1019:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1020:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1021:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Disables the ILO. ILO can't be disabled if WDT is enabled.
1022:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 51


1023:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return Error / status code:<br>
1024:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CY_SYSCLK_SUCCESS - ILO successfully disabled<br>
1025:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CY_SYSCLK_INVALID_STATE - Cannot disable the ILO if the WDT is enabled.
1026:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1027:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note The watchdog timer (WDT) must be unlocked before calling this function.
1028:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Do not call this function if the WDT is enabled, because the WDT is clocked by
1029:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * the ILO.
1030:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1031:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1032:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_IloDisable
1033:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1034:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1035:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_IloDisable(void)
1036:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1037:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_sysclk_status_t retVal = CY_SYSCLK_INVALID_STATE;
1038:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if (!_FLD2BOOL(SRSS_WDT_CTL_WDT_EN, SRSS_WDT_CTL)) /* if disabled */
1039:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
1040:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         SRSS_CLK_ILO_CONFIG &= ~SRSS_CLK_ILO_CONFIG_ENABLE_Msk;
1041:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         retVal = CY_SYSCLK_SUCCESS;
1042:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1043:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return retVal;
1044:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1045:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1046:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1047:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_IloHibernateOn
1048:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1049:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1050:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Controls whether the ILO stays on during a hibernate, or through an XRES or
1051:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * brown-out detect (BOD) event.
1052:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1053:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param on
1054:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * true = ILO stays on during hibernate or across XRES/BOD.<br> 
1055:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * false = ILO turns off for hibernate or XRES/BOD.
1056:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1057:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note Writes to the register/bit are ignored if the watchdog (WDT) is locked.
1058:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1059:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1060:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_IloHibernateOn
1061:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1062:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1063:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_IloHibernateOn(bool on)
1064:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1065:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_REG32_CLR_SET(SRSS_CLK_ILO_CONFIG, SRSS_CLK_ILO_CONFIG_ILO_BACKUP, (uint32_t)on);
1066:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1067:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_ilo_funcs */
1068:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1069:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1070:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1071:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ===========================    PILO SECTION    =========================== */
1072:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1073:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1074:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_pilo_funcs
1075:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1076:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1077:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_PiloEnable(void);
1078:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_PiloDisable(void);
1079:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_PiloSetTrim(uint32_t trimVal);
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 52


1080:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint32_t Cy_SysClk_PiloGetTrim(void);
1081:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1082:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1083:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PiloEnable
1084:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1085:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1086:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Enables the PILO. 
1087:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1088:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note This function blocks for 1 millisecond between enabling the PILO and 
1089:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * releasing the PILO reset.
1090:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1091:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1092:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_PiloEnable
1093:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1094:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1095:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_PiloEnable(void)
1096:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1097:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     SRSS_CLK_PILO_CONFIG |= _VAL2FLD(SRSS_CLK_PILO_CONFIG_PILO_EN, 1U); /* 1 = enable */
1098:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     Cy_SysLib_Delay(1U/*msec*/);
1099:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     /* release the reset and enable clock output */
1100:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     SRSS_CLK_PILO_CONFIG |= SRSS_CLK_PILO_CONFIG_PILO_RESET_N_Msk |
1101:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                             SRSS_CLK_PILO_CONFIG_PILO_CLK_EN_Msk;
1102:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1103:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1104:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1105:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PiloDisable
1106:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1107:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1108:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Disables the PILO.
1109:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1110:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1111:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_PiloDisable
1112:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1113:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1114:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_PiloDisable(void)
1115:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1116:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     /* Clear PILO_EN, PILO_RESET_N, and PILO_CLK_EN bitfields. This disables the
1117:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****        PILO and holds the PILO in a reset state. */
1118:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     SRSS_CLK_PILO_CONFIG &= (uint32_t)~(SRSS_CLK_PILO_CONFIG_PILO_EN_Msk      |
1119:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                         SRSS_CLK_PILO_CONFIG_PILO_RESET_N_Msk |
1120:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                         SRSS_CLK_PILO_CONFIG_PILO_CLK_EN_Msk);
1121:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1122:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1123:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1124:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PiloSetTrim
1125:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1126:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1127:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Sets the PILO trim bits, which adjusts the PILO frequency. This is typically
1128:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * done after measuring the PILO frequency; see \ref Cy_SysClk_StartClkMeasurementCounters().
1129:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1130:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1131:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_PiloSetTrim
1132:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1133:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1134:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_PiloSetTrim(uint32_t trimVal)
1135:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1136:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_REG32_CLR_SET(SRSS_CLK_PILO_CONFIG, SRSS_CLK_PILO_CONFIG_PILO_FFREQ, trimVal);
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 53


1137:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1138:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1139:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1140:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PiloGetTrim
1141:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1142:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1143:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Reports the current PILO trim bits value.
1144:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1145:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1146:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Refer to the Cy_SysClk_PiloSetTrim() function usage.
1147:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1148:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1149:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint32_t Cy_SysClk_PiloGetTrim(void)
1150:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1151:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (_FLD2VAL(SRSS_CLK_PILO_CONFIG_PILO_FFREQ, SRSS_CLK_PILO_CONFIG));
1152:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1153:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_pilo_funcs */
1154:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1155:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1156:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1157:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ====================    CLOCK MEASUREMENT SECTION    ===================== */
1158:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1159:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1160:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_calclk_enums
1161:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1162:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1163:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** Defines all possible clock sources. */
1164:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
1165:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1166:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_NC =            0U,
1167:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_ILO =           1U,
1168:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_WCO =           2U,
1169:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_BAK =           3U,
1170:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_ALTLF =         4U,
1171:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_LFCLK =         5U,
1172:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_IMO =           6U,
1173:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PILO =          8U,
1174:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_FAST_CLKS =     0x100U,
1175:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_ECO =           0x101U,
1176:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_EXT =           0x102U,
1177:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_ALTHF =         0x103U,
1178:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_TIMERCLK =      0x104U,
1179:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH_CLKS =     0x500U,
1180:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH0 =         0x500U,
1181:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH1 =         0x501U,
1182:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH2 =         0x502U,
1183:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH3 =         0x503U,
1184:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH4 =         0x504U,
1185:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH5 =         0x505U,
1186:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH6 =         0x506U,
1187:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH7 =         0x507U,
1188:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH8 =         0x508U,
1189:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH9 =         0x509U,
1190:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH10 =        0x50AU,
1191:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH11 =        0x50BU,
1192:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH12 =        0x50CU,
1193:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH13 =        0x50DU,
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 54


1194:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH14 =        0x50EU,
1195:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH15 =        0x50FU,
1196:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHFS =        0x600U,
1197:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF0 =        0x600U,
1198:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF1 =        0x601U,
1199:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF2 =        0x602U,
1200:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF3 =        0x603U,
1201:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF4 =        0x604U,
1202:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF5 =        0x605U,
1203:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF6 =        0x606U,
1204:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF7 =        0x607U,
1205:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF8 =        0x608U,
1206:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF9 =        0x609U,
1207:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF10 =       0x60AU,
1208:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF11 =       0x60BU,
1209:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF12 =       0x60CU,
1210:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF13 =       0x60DU,
1211:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF14 =       0x60EU,
1212:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF15 =       0x60FU,
1213:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_LAST_CLK =      0x610U
1214:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_meas_clks_t;
1215:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_calclk_enums */
1216:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1217:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1218:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_calclk_funcs
1219:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1220:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1221:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_sysclk_status_t Cy_SysClk_StartClkMeasurementCounters(cy_en_meas_clks_t clock1, uint32_t coun
1222:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE bool Cy_SysClk_ClkMeasurementCountersDone(void);
1223:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** uint32_t Cy_SysClk_ClkMeasurementCountersGetFreq(bool measuredClock, uint32_t refClkFreq);
1224:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1225:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1226:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkMeasurementCountersDone
1227:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1228:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1229:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Checks if clock measurement counting is done, that is, counter1 has counted down
1230:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * to zero. Call \ref Cy_SysClk_StartClkMeasurementCounters() before calling this function.
1231:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1232:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return Status of calibration counters:<br>
1233:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * true = done<br>
1234:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * false = not done
1235:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1236:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1237:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Refer to the Cy_SysClk_StartClkMeasurementCounters() function usage.
1238:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1239:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1240:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE bool Cy_SysClk_ClkMeasurementCountersDone(void)
1241:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1242:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (_FLD2BOOL(SRSS_CLK_CAL_CNT1_CAL_COUNTER_DONE, SRSS_CLK_CAL_CNT1));
1243:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1244:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_calclk_funcs */
1245:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1246:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1247:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1248:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ==========================    TRIM SECTION    ============================ */
1249:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1250:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 55


1251:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_trim_funcs
1252:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1253:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1254:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** int32_t Cy_SysClk_IloTrim(uint32_t iloFreq);
1255:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** int32_t Cy_SysClk_PiloTrim(uint32_t piloFreq);
1256:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_trim_funcs */
1257:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1258:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1259:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1260:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ======================    POWER MANAGEMENT SECTION    ==================== */
1261:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1262:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1263:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_pm_funcs
1264:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1265:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1266:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_syspm_status_t Cy_SysClk_DeepSleepCallback(cy_stc_syspm_callback_params_t *callbackParams, cy
1267:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_pm_funcs */
1268:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1269:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1270:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1271:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ===========================    WCO SECTION    ============================ */
1272:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1273:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1274:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_wco_enums
1275:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1276:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1277:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** WCO bypass modes */
1278:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
1279:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1280:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_WCO_NOT_BYPASSED = 0u, /**< WCO is not bypassed crystal is used */
1281:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_WCO_BYPASSED = 1U      /**< WCO is bypassed external clock must be supplied  on XTAL 
1282:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_wco_bypass_modes_t;
1283:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1284:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** WCO CSV supervisor clock selections */
1285:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
1286:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1287:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_WCO_CSV_SUPERVISOR_ILO,   /**< WCO CSV supervisor clock source is the ILO */
1288:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_WCO_CSV_SUPERVISOR_ALTLF, /**< WCO CSV supervisor clock source is the alternate low-f
1289:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_WCO_CSV_SUPERVISOR_PILO   /**< WCO CSV supervisor clock source is the PILO */
1290:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_wco_csv_supervisor_clock_t;
1291:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1292:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1293:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Clock supervisor clock loss window. There must be one clock of the supervised
1294:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * clock within this many clocks of the supervising clock.
1295:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * See registers CLK_CSV_HF_CTL and CLK_CSV_WCO_CTL, bitfield CSV_LOSS_WINDOW.
1296:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1297:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
1298:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1299:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CSV_LOSS_4_CYCLES =   0u, /**< 1 clock must be seen within 4 cycles of the supervisin
1300:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CSV_LOSS_8_CYCLES =   1U, /**< 1 clock must be seen within 8 cycles of the supervisin
1301:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CSV_LOSS_16_CYCLES =  2u, /**< 1 clock must be seen within 16 cycles of the supervisi
1302:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CSV_LOSS_32_CYCLES =  3u, /**< 1 clock must be seen within 32 cycles of the supervisi
1303:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CSV_LOSS_64_CYCLES =  4u, /**< 1 clock must be seen within 64 cycles of the supervisi
1304:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CSV_LOSS_128_CYCLES = 5u, /**< 1 clock must be seen within 128 cycles of the supervis
1305:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CSV_LOSS_256_CYCLES = 6u, /**< 1 clock must be seen within 256 cycles of the supervis
1306:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CSV_LOSS_512_CYCLES = 7u  /**< 1 clock must be seen within 512 cycles of the supervis
1307:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_csv_loss_window_t;
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 56


1308:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1309:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1310:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Clock supervisor error actions. See register CLK_CSV_HF_CTL[CSV_FREQ_ACTION and CSV_LOSS_ACTION].
1311:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1312:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
1313:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1314:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CSV_ERROR_IGNORE = 0u,     /**< Ignore the error reported by the clock supervisor. */
1315:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CSV_ERROR_FAULT = 1U,      /**< Trigger a fault when an error is reported by the cloc
1316:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CSV_ERROR_RESET = 2u,      /**< Trigger a reset when an error is reported by the cloc
1317:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CSV_ERROR_FAULT_RESET = 3u /**< Trigger a fault then reset when an error is reported 
1318:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_csv_error_actions_t;
1319:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_wco_enums */
1320:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1321:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1322:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_wco_structs
1323:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1324:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1325:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1326:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * This structure is used to configure the clock supervisor for the WCO.
1327:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1328:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef struct
1329:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1330:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_wco_csv_supervisor_clock_t supervisorClock; /**< supervisor clock selection */
1331:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     bool enableLossDetection;                         /**< 1= enabled, 0= disabled. Note that if lo
1332:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_csv_loss_window_t lossWindow;               /**< \ref cy_en_csv_loss_window_t */
1333:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_csv_error_actions_t lossAction;             /**< \ref cy_en_csv_error_actions_t */
1334:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_stc_wco_csv_config_t;
1335:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_wco_structs */
1336:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1337:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1338:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_wco_funcs
1339:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1340:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1341:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_WcoEnable(uint32_t timeoutus);
1342:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE bool Cy_SysClk_WcoOkay(void);
1343:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_WcoDisable(void);
1344:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_WcoBypass(cy_en_wco_bypass_modes_t bypass);
1345:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1346:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1347:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1348:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_WcoEnable
1349:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1350:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1351:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Enables the WCO.
1352:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1353:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param timeoutus amount of time in microseconds to wait for the WCO to be ready.
1354:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * If WCO is not ready, WCO is stopped. To avoid waiting for WCO ready set this to 0,
1355:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * and manually check if WCO is okay using \ref Cy_SysClk_WcoOkay.
1356:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1357:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return Error / status code:<br>
1358:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CY_SYSCLK_SUCCESS - WCO successfully enabled<br>
1359:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CY_SYSCLK_TIMEOUT - Timeout waiting for WCO to stabilize
1360:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1361:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1362:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_WcoEnable
1363:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1364:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 57


1365:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_WcoEnable(uint32_t timeoutus)
1366:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1367:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_sysclk_status_t rtnval = CY_SYSCLK_TIMEOUT;
1368:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1369:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     /* first set the WCO enable bit */
1370:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     BACKUP_CTL |= BACKUP_CTL_WCO_EN_Msk;
1371:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1372:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     /* now do the timeout wait for STATUS, bit WCO_OK */
1373:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     for (; (Cy_SysClk_WcoOkay() == false) && (0UL != timeoutus); timeoutus--)
1374:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
1375:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         Cy_SysLib_DelayUs(1U);
1376:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1377:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if (0UL != timeoutus)
1378:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
1379:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         rtnval = CY_SYSCLK_SUCCESS;
1380:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1381:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1382:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (rtnval);
1383:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1384:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1385:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1386:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_WcoOkay
1387:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1388:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1389:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Reports the status of the WCO_OK bit.
1390:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1391:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return 
1392:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * true = okay<br>
1393:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * false = not okay
1394:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1395:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1396:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_WcoOkay
1397:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1398:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1399:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE bool Cy_SysClk_WcoOkay(void)
1400:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1401:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (_FLD2BOOL(BACKUP_STATUS_WCO_OK, BACKUP_STATUS));
1402:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1403:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1404:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1405:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_WcoDisable
1406:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1407:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1408:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Disables the WCO.
1409:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1410:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1411:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_WcoDisable
1412:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1413:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1414:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_WcoDisable(void)
1415:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1416:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     BACKUP_CTL &= (uint32_t)~BACKUP_CTL_WCO_EN_Msk;
1417:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1418:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1419:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1420:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_WcoBypass
1421:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 58


1422:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1423:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Sets whether the WCO is bypassed or not. If it is bypassed, then a 32-kHz clock
1424:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * must be provided on the wco_out pin.
1425:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1426:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param bypass \ref cy_en_wco_bypass_modes_t
1427:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1428:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1429:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_WcoBypass
1430:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1431:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1432:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_WcoBypass(cy_en_wco_bypass_modes_t bypass)
1433:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1434:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_REG32_CLR_SET(BACKUP_CTL, BACKUP_CTL_WCO_BYPASS, bypass);
1435:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1436:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_wco_funcs */
1437:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1438:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1439:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1440:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* =========================    clkHf[n] SECTION    ========================= */
1441:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1442:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1443:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_clk_hf_enums
1444:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1445:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1446:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1447:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Selects which clkHf input, or root mux, to configure.
1448:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * See CLK_ROOT_SELECT registers, bits ROOT_MUX.
1449:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Used with functions \ref Cy_SysClk_ClkHfSetSource and \ref Cy_SysClk_ClkHfGetSource.
1450:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1451:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
1452:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1453:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH0  = 0U,  /**< clkHf input is Clock Path 0 */
1454:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH1  = 1U,  /**< clkHf input is Clock Path 1 */
1455:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH2  = 2U,  /**< clkHf input is Clock Path 2 */
1456:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH3  = 3U,  /**< clkHf input is Clock Path 3 */
1457:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH4  = 4U,  /**< clkHf input is Clock Path 4 */
1458:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH5  = 5U,  /**< clkHf input is Clock Path 5 */
1459:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH6  = 6U,  /**< clkHf input is Clock Path 6 */
1460:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH7  = 7U,  /**< clkHf input is Clock Path 7 */
1461:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH8  = 8U,  /**< clkHf input is Clock Path 8 */
1462:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH9  = 9U,  /**< clkHf input is Clock Path 9 */
1463:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH10 = 10U, /**< clkHf input is Clock Path 10 */
1464:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH11 = 11U, /**< clkHf input is Clock Path 11 */
1465:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH12 = 12U, /**< clkHf input is Clock Path 12 */
1466:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH13 = 13U, /**< clkHf input is Clock Path 13 */
1467:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH14 = 14U, /**< clkHf input is Clock Path 14 */
1468:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH15 = 15U, /**< clkHf input is Clock Path 15 */
1469:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_clkhf_in_sources_t;
1470:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1471:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1472:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1473:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * clkHf divider values. See CLK_ROOT_SELECT registers, bits ROOT_DIV.
1474:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Used with functions \ref Cy_SysClk_ClkHfSetDivider and \ref Cy_SysClk_ClkHfGetDivider.
1475:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1476:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
1477:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1478:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_NO_DIVIDE   = 0U,    /**< don't divide clkHf. */
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 59


1479:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_DIVIDE_BY_2 = 1U,    /**< divide clkHf by 2 */
1480:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_DIVIDE_BY_4 = 2U,    /**< divide clkHf by 4 */
1481:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_DIVIDE_BY_8 = 3U     /**< divide clkHf by 8 */
1482:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_clkhf_dividers_t;
1483:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1484:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1485:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * clkHf clock supervisor input sources. See register CLK_CSV_HF_CTL[CSV_MUX].
1486:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1487:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
1488:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1489:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_CSV_SUPERVISOR_IMO   = 0U,  /**< Supervising clock is the IMO. */
1490:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_CSV_SUPERVISOR_EXT   = 1U,  /**< Supervising clock is the external clock */
1491:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_CSV_SUPERVISOR_ALTHF = 2U   /**< Supervising clock is clk_althf */
1492:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_clkhf_csv_supervisor_clock_t;
1493:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_clk_hf_enums */
1494:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1495:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1496:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_clk_hf_structs
1497:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{SupervisingWindow
1498:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1499:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1500:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * This structure is used to configure the clock supervisor for clkHf.
1501:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1502:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef struct
1503:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1504:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_clkhf_csv_supervisor_clock_t supervisorClock; /**< \ref cy_en_clkhf_csv_supervisor_clock_
1505:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint16_t supervisingWindow;                         /**< Number of supervising clock cycles */
1506:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     bool enableFrequencyFaultDetection;                 /**< 1= enabled, 0= disabled */
1507:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint16_t frequencyLowerLimit;                       /**< Lowest frequency in kHz that supervise
1508:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint16_t frequencyUpperLimit;                       /**< Highest frequency in kHz that supervis
1509:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_csv_error_actions_t frequencyAction;          /**< \ref cy_en_csv_error_actions_t */
1510:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     bool enableLossDetection;                           /**< 1= enabled, 0= disabled */
1511:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_csv_loss_window_t lossWindow;                 /**< \ref cy_en_csv_loss_window_t */
1512:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_csv_error_actions_t lossAction;               /**< \ref cy_en_csv_error_actions_t */
1513:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_stc_clkhf_csv_config_t;
1514:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_clk_hf_structs */
1515:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1516:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1517:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_clk_hf_funcs
1518:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1519:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1520:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_ClkHfEnable(uint32_t clkHf);
1521:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_ClkHfDisable(uint32_t clkHf);
1522:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_ClkHfSetSource(uint32_t clkHf, cy_en_clkhf_in_sourc
1523:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_clkhf_in_sources_t Cy_SysClk_ClkHfGetSource(uint32_t clkHf);
1524:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_ClkHfSetDivider(uint32_t clkHf, cy_en_clkhf_divider
1525:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_clkhf_dividers_t Cy_SysClk_ClkHfGetDivider(uint32_t clkHf);
1526:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1527:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1528:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1529:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkHfEnable
1530:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1531:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1532:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Enables the selected clkHf.
1533:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1534:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param clkHf Selects which clkHf to enable.
1535:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 60


1536:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return \ref cy_en_sysclk_status_t
1537:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1538:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1539:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_ClkHfEnable
1540:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1541:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1542:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_ClkHfEnable(uint32_t clkHf)
1543:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1544:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_sysclk_status_t retVal = CY_SYSCLK_BAD_PARAM;
1545:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if (clkHf < CY_SRSS_NUM_HFROOT)
1546:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
1547:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         SRSS_CLK_ROOT_SELECT[clkHf] |= SRSS_CLK_ROOT_SELECT_ENABLE_Msk;
1548:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         retVal = CY_SYSCLK_SUCCESS;
1549:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1550:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (retVal);
1551:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1552:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1553:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1554:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkHfDisable
1555:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1556:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1557:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Disables the selected clkHf.
1558:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1559:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param clkHf Selects which clkHf to enable.
1560:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1561:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return \ref cy_en_sysclk_status_t
1562:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1563:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note clkHf[0] cannot be disabled.
1564:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1565:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1566:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_ClkHfDisable
1567:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1568:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1569:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_ClkHfDisable(uint32_t clkHf)
1570:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1571:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_sysclk_status_t retVal = CY_SYSCLK_BAD_PARAM;
1572:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if ((0UL < clkHf) /* prevent CLK_HF0 disabling */
1573:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****            && (clkHf < CY_SRSS_NUM_HFROOT))
1574:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
1575:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         SRSS_CLK_ROOT_SELECT[clkHf] &= ~SRSS_CLK_ROOT_SELECT_ENABLE_Msk;
1576:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         retVal = CY_SYSCLK_SUCCESS;
1577:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1578:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (retVal);
1579:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1580:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1581:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1582:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkHfSetSource
1583:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1584:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1585:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Selects the source of the selected clkHf.
1586:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1587:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param clkHf selects which clkHf mux to configure.
1588:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1589:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param source \ref cy_en_clkhf_in_sources_t
1590:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1591:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return \ref cy_en_sysclk_status_t
1592:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 61


1593:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note 
1594:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref SystemCoreClockUpdate after this function calling 
1595:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * if it affects the CLK_HF0 frequency.
1596:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1597:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note 
1598:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref Cy_SysLib_SetWaitStates before calling this function if
1599:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CLK_HF0 frequency is increasing.
1600:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1601:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note
1602:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref Cy_SysLib_SetWaitStates after calling this function if
1603:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CLK_HF0 frequency is decreasing.
1604:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1605:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1606:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_ClkHfSetSource
1607:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1608:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1609:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_ClkHfSetSource(uint32_t clkHf, cy_en_clkhf_in_sourc
1610:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1611:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_sysclk_status_t retVal = CY_SYSCLK_BAD_PARAM;
1612:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if ((clkHf < CY_SRSS_NUM_HFROOT) && (source <= CY_SYSCLK_CLKHF_IN_CLKPATH15))
1613:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
1614:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         CY_REG32_CLR_SET(SRSS_CLK_ROOT_SELECT[clkHf], SRSS_CLK_ROOT_SELECT_ROOT_MUX, source);
1615:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         retVal = CY_SYSCLK_SUCCESS;
1616:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1617:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (retVal);
1618:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1619:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1620:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1621:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkHfGetSource
1622:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1623:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1624:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Reports the source of the selected clkHf.
1625:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1626:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param clkHf selects which clkHf to get the source of.
1627:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1628:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return \ref cy_en_clkhf_in_sources_t
1629:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1630:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1631:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_ClkHfSetSource
1632:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1633:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1634:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_clkhf_in_sources_t Cy_SysClk_ClkHfGetSource(uint32_t clkHf)
1635:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1636:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_ASSERT_L1(clkHf < CY_SRSS_NUM_HFROOT);
1637:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (cy_en_clkhf_in_sources_t)(_FLD2VAL(SRSS_CLK_ROOT_SELECT_ROOT_MUX, SRSS_CLK_ROOT_SELECT[
1638:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1639:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1640:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1641:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkHfSetDivider
1642:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1643:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1644:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Sets the pre-divider for a clkHf.
1645:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1646:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param clkHf selects which clkHf divider to configure.
1647:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1648:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param divider \ref cy_en_clkhf_dividers_t
1649:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 62


1650:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return \ref cy_en_sysclk_status_t
1651:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1652:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note Also call \ref Cy_SysClk_ClkHfSetSource to set the clkHf source.
1653:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1654:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note 
1655:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref SystemCoreClockUpdate after this function calling 
1656:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * if it affects the CLK_HF0 frequency.
1657:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1658:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note 
1659:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref Cy_SysLib_SetWaitStates before calling this function if
1660:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CLK_HF0 frequency is increasing.
1661:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1662:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note
1663:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref Cy_SysLib_SetWaitStates after calling this function if
1664:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CLK_HF0 frequency is decreasing.
1665:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1666:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1667:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_ClkHfSetDivider
1668:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1669:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1670:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_ClkHfSetDivider(uint32_t clkHf, cy_en_clkhf_divider
1671:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1672:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_sysclk_status_t retVal = CY_SYSCLK_BAD_PARAM;
1673:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if ((clkHf < CY_SRSS_NUM_HFROOT) && (divider <= CY_SYSCLK_CLKHF_DIVIDE_BY_8))
1674:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
1675:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         CY_REG32_CLR_SET(SRSS_CLK_ROOT_SELECT[clkHf], SRSS_CLK_ROOT_SELECT_ROOT_DIV, divider);
1676:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         retVal = CY_SYSCLK_SUCCESS;
1677:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1678:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (retVal);
1679:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1680:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1681:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1682:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkHfGetDivider
1683:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1684:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1685:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Reports the pre-divider value for a clkHf.
1686:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1687:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param clkHf selects which clkHf to check divider of.
1688:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1689:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return \ref cy_en_clkhf_dividers_t
1690:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1691:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1692:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_ClkHfSetDivider
1693:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1694:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1695:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_clkhf_dividers_t Cy_SysClk_ClkHfGetDivider(uint32_t clkHf)
1696:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1697:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_ASSERT_L1(clkHf < CY_SRSS_NUM_HFROOT);
1698:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (cy_en_clkhf_dividers_t)(_FLD2VAL(SRSS_CLK_ROOT_SELECT_ROOT_DIV, SRSS_CLK_ROOT_SELECT[cl
1699:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1700:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_clk_hf_funcs */
1701:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1702:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1703:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1704:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* =========================    clk_fast SECTION    ========================= */
1705:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1706:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 63


1707:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_clk_fast_funcs
1708:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1709:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1710:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_ClkFastSetDivider(uint8_t divider);
1711:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint8_t Cy_SysClk_ClkFastGetDivider(void);
1712:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1713:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1714:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkFastSetDivider
1715:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1716:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1717:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Sets the clock divider for the fast clock, which sources the main processor.
1718:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The source of this divider is clkHf[0].
1719:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1720:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param divider divider value between 0 and 255.
1721:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Causes integer division of (divider value + 1), or division by 1 to 256.
1722:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1723:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note 
1724:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref SystemCoreClockUpdate after this function calling.
1725:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1726:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note 
1727:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref Cy_SysLib_SetWaitStates before calling this function if
1728:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CLK_FAST frequency is increasing.
1729:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1730:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note
1731:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref Cy_SysLib_SetWaitStates after calling this function if
1732:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CLK_FAST frequency is decreasing.
1733:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1734:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1735:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_ClkFastSetDivider
1736:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1737:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1738:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_ClkFastSetDivider(uint8_t divider)
1739:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1740:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_REG32_CLR_SET(CPUSS_CM4_CLOCK_CTL, CPUSS_CM4_CLOCK_CTL_FAST_INT_DIV, divider);
1741:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1742:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1743:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1744:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkFastGetDivider
1745:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1746:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1747:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Returns the clock divider for the fast clock.
1748:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1749:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return The divider value for the fast clock.
1750:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The integer division done is by (divider value + 1), or division by 1 to 256.
1751:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1752:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1753:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_ClkFastSetDivider
1754:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1755:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1756:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint8_t Cy_SysClk_ClkFastGetDivider(void)
1757:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1758:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return ((uint8_t)_FLD2VAL(CPUSS_CM4_CLOCK_CTL_FAST_INT_DIV, CPUSS_CM4_CLOCK_CTL));
1759:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1760:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_clk_fast_funcs */
1761:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1762:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1763:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 64


1764:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================    clk_peri SECTION    ========================== */
1765:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1766:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1767:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_clk_peri_funcs
1768:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1769:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1770:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_ClkPeriSetDivider(uint8_t divider);
1771:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint8_t Cy_SysClk_ClkPeriGetDivider(void);
1772:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1773:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1774:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkPeriSetDivider
1775:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1776:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1777:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Sets the clock divider for the peripheral clock tree. All peripheral clock
1778:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * dividers are sourced from this clock. Also the Cortex M0+ clock divider is
1779:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * sourced from this clock. The source of this divider is clkHf[0]
1780:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1781:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param divider divider value between 0 and 255
1782:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Causes integer division of (divider value + 1), or division by 1 to 256.
1783:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1784:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note 
1785:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref SystemCoreClockUpdate after this function calling.
1786:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1787:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1788:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_ClkPeriSetDivider
1789:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1790:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1791:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_ClkPeriSetDivider(uint8_t divider)
1792:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1793:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_REG32_CLR_SET(CPUSS_CM0_CLOCK_CTL, CPUSS_CM0_CLOCK_CTL_PERI_INT_DIV, divider);
1794:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1795:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1796:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1797:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkPeriGetDivider
1798:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1799:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1800:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Returns the clock divider of the peripheral (peri) clock.
1801:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1802:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return The divider value.
1803:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The integer division done is by (divider value + 1), or division by 1 to 256.
1804:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1805:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1806:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_ClkPeriSetDivider
1807:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1808:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1809:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint8_t Cy_SysClk_ClkPeriGetDivider(void)
1810:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1811:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return ((uint8_t)_FLD2VAL(CPUSS_CM0_CLOCK_CTL_PERI_INT_DIV, CPUSS_CM0_CLOCK_CTL));
1812:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1813:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_clk_peri_funcs */
1814:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1815:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1816:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1817:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* =====================    clk_peripherals SECTION    ====================== */
1818:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1819:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1820:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_clk_peripheral_enums
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 65


1821:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1822:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1823:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** Programmable clock divider types */
1824:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
1825:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1826:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_DIV_8_BIT    = 0U, /**< Divider Type is an 8 bit divider */
1827:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_DIV_16_BIT   = 1U, /**< Divider Type is a 16 bit divider */
1828:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_DIV_16_5_BIT = 2U, /**< Divider Type is a 16.5 bit fractional divider */
1829:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_DIV_24_5_BIT = 3U  /**< Divider Type is a 24.5 bit fractional divider */
1830:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_divider_types_t;
1831:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_clk_peripheral_enums */
1832:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1833:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1834:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_clk_peripheral_funcs
1835:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1836:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1837:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_PeriphSetDivider(cy_en_divider_types_t dividerType,
1838:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint32_t Cy_SysClk_PeriphGetDivider(cy_en_divider_types_t dividerType, uint32_t div
1839:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_PeriphSetFracDivider(cy_en_divider_types_t dividerT
1840:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_PeriphGetFracDivider(cy_en_divider_types_t dividerType, uint32_t div
1841:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_PeriphAssignDivider(en_clk_dst_t ipBlock, cy_en_div
1842:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint32_t Cy_SysClk_PeriphGetAssignedDivider(en_clk_dst_t ipBlock);
1843:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_PeriphEnableDivider(cy_en_divider_types_t dividerTy
1844:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_PeriphDisableDivider(cy_en_divider_types_t dividerT
1845:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_PeriphEnablePhaseAlignDivider(cy_en_divider_types_t
1846:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE bool Cy_SysClk_PeriphGetDividerEnabled(cy_en_divider_types_t dividerType, uint32_t 
1847:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** uint32_t Cy_SysClk_PeriphGetFrequency(cy_en_divider_types_t dividerType, uint32_t dividerNum);
1848:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1849:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1850:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PeriphSetDivider
1851:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1852:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1853:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Sets one of the programmable clock dividers. This is only used for integer
1854:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * dividers. Use \ref Cy_SysClk_PeriphSetFracDivider for setting factional dividers.
1855:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1856:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \pre If the specified clock divider is already enabled - it should be disabled
1857:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * prior to use this function by \ref Cy_SysClk_PeriphDisableDivider.
1858:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1859:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerType specifies which type of divider to use; \ref cy_en_divider_types_t
1860:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1861:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerNum the divider number.
1862:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1863:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerValue divider value
1864:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Causes integer division of (divider value + 1), or division by 1 to 256
1865:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * (8-bit divider) or 1 to 65536 (16-bit divider).
1866:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1867:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return \ref cy_en_sysclk_status_t
1868:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1869:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1870:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_PeriphSetDivider
1871:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1872:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1873:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t
1874:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                 Cy_SysClk_PeriphSetDivider(cy_en_divider_types_t dividerType,
1875:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                            uint32_t dividerNum, uint32_t dividerValue)
1876:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 173              		.loc 2 1876 0
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 66


 174              		.cfi_startproc
 175              		@ args = 0, pretend = 0, frame = 24
 176              		@ frame_needed = 1, uses_anonymous_args = 0
 177 0000 90B5     		push	{r4, r7, lr}
 178              		.cfi_def_cfa_offset 12
 179              		.cfi_offset 4, -12
 180              		.cfi_offset 7, -8
 181              		.cfi_offset 14, -4
 182 0002 87B0     		sub	sp, sp, #28
 183              		.cfi_def_cfa_offset 40
 184 0004 00AF     		add	r7, sp, #0
 185              		.cfi_def_cfa_register 7
 186 0006 B960     		str	r1, [r7, #8]
 187 0008 7A60     		str	r2, [r7, #4]
 188 000a 0F23     		movs	r3, #15
 189 000c FB18     		adds	r3, r7, r3
 190 000e 021C     		adds	r2, r0, #0
 191 0010 1A70     		strb	r2, [r3]
1877:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_sysclk_status_t retVal = CY_SYSCLK_BAD_PARAM;
 192              		.loc 2 1877 0
 193 0012 314B     		ldr	r3, .L16
 194 0014 7B61     		str	r3, [r7, #20]
1878:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if (dividerType == CY_SYSCLK_DIV_8_BIT)
 195              		.loc 2 1878 0
 196 0016 0F23     		movs	r3, #15
 197 0018 FB18     		adds	r3, r7, r3
 198 001a 1B78     		ldrb	r3, [r3]
 199 001c 002B     		cmp	r3, #0
 200 001e 28D1     		bne	.L11
1879:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
1880:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         if ((dividerNum < PERI_DIV_8_NR) &&
 201              		.loc 2 1880 0
 202 0020 BB68     		ldr	r3, [r7, #8]
 203 0022 072B     		cmp	r3, #7
 204 0024 53D8     		bhi	.L13
 205              		.loc 2 1880 0 is_stmt 0 discriminator 1
 206 0026 7B68     		ldr	r3, [r7, #4]
 207 0028 FF2B     		cmp	r3, #255
 208 002a 50D8     		bhi	.L13
1881:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             (dividerValue <= (PERI_DIV_8_CTL_INT8_DIV_Msk >> PERI_DIV_8_CTL_INT8_DIV_Pos)))
1882:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         {
1883:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             CY_REG32_CLR_SET(PERI_DIV_8_CTL[dividerNum], PERI_DIV_8_CTL_INT8_DIV, dividerValue);
 209              		.loc 2 1883 0 is_stmt 1
 210 002c BB68     		ldr	r3, [r7, #8]
 211 002e 9A00     		lsls	r2, r3, #2
 212 0030 2A4B     		ldr	r3, .L16+4
 213 0032 1B68     		ldr	r3, [r3]
 214 0034 9968     		ldr	r1, [r3, #8]
 215 0036 294B     		ldr	r3, .L16+4
 216 0038 1B68     		ldr	r3, [r3]
 217 003a 7420     		movs	r0, #116
 218 003c 1B5A     		ldrh	r3, [r3, r0]
 219 003e CB18     		adds	r3, r1, r3
 220 0040 D318     		adds	r3, r2, r3
 221 0042 1A00     		movs	r2, r3
 222 0044 BB68     		ldr	r3, [r7, #8]
 223 0046 9900     		lsls	r1, r3, #2
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 67


 224 0048 244B     		ldr	r3, .L16+4
 225 004a 1B68     		ldr	r3, [r3]
 226 004c 9868     		ldr	r0, [r3, #8]
 227 004e 234B     		ldr	r3, .L16+4
 228 0050 1B68     		ldr	r3, [r3]
 229 0052 7424     		movs	r4, #116
 230 0054 1B5B     		ldrh	r3, [r3, r4]
 231 0056 C318     		adds	r3, r0, r3
 232 0058 CB18     		adds	r3, r1, r3
 233 005a 1B68     		ldr	r3, [r3]
 234 005c 2049     		ldr	r1, .L16+8
 235 005e 1940     		ands	r1, r3
 236 0060 7B68     		ldr	r3, [r7, #4]
 237 0062 1B02     		lsls	r3, r3, #8
 238 0064 1B04     		lsls	r3, r3, #16
 239 0066 1B0C     		lsrs	r3, r3, #16
 240 0068 0B43     		orrs	r3, r1
 241 006a 1360     		str	r3, [r2]
1884:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             retVal = CY_SYSCLK_SUCCESS;
 242              		.loc 2 1884 0
 243 006c 0023     		movs	r3, #0
 244 006e 7B61     		str	r3, [r7, #20]
 245 0070 2DE0     		b	.L13
 246              	.L11:
1885:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         }
1886:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1887:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     else if (dividerType == CY_SYSCLK_DIV_16_BIT)
 247              		.loc 2 1887 0
 248 0072 0F23     		movs	r3, #15
 249 0074 FB18     		adds	r3, r7, r3
 250 0076 1B78     		ldrb	r3, [r3]
 251 0078 012B     		cmp	r3, #1
 252 007a 28D1     		bne	.L13
1888:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
1889:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         if ((dividerNum < PERI_DIV_16_NR) &&
 253              		.loc 2 1889 0
 254 007c BB68     		ldr	r3, [r7, #8]
 255 007e 0F2B     		cmp	r3, #15
 256 0080 25D8     		bhi	.L13
 257              		.loc 2 1889 0 is_stmt 0 discriminator 1
 258 0082 7B68     		ldr	r3, [r7, #4]
 259 0084 174A     		ldr	r2, .L16+12
 260 0086 9342     		cmp	r3, r2
 261 0088 21D8     		bhi	.L13
1890:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             (dividerValue <= (PERI_DIV_16_CTL_INT16_DIV_Msk >> PERI_DIV_16_CTL_INT16_DIV_Pos)))
1891:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         {
1892:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             CY_REG32_CLR_SET(PERI_DIV_16_CTL[dividerNum], PERI_DIV_16_CTL_INT16_DIV, dividerValue);
 262              		.loc 2 1892 0 is_stmt 1
 263 008a BB68     		ldr	r3, [r7, #8]
 264 008c 9A00     		lsls	r2, r3, #2
 265 008e 134B     		ldr	r3, .L16+4
 266 0090 1B68     		ldr	r3, [r3]
 267 0092 9968     		ldr	r1, [r3, #8]
 268 0094 114B     		ldr	r3, .L16+4
 269 0096 1B68     		ldr	r3, [r3]
 270 0098 7620     		movs	r0, #118
 271 009a 1B5A     		ldrh	r3, [r3, r0]
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 68


 272 009c CB18     		adds	r3, r1, r3
 273 009e D318     		adds	r3, r2, r3
 274 00a0 1A00     		movs	r2, r3
 275 00a2 BB68     		ldr	r3, [r7, #8]
 276 00a4 9900     		lsls	r1, r3, #2
 277 00a6 0D4B     		ldr	r3, .L16+4
 278 00a8 1B68     		ldr	r3, [r3]
 279 00aa 9868     		ldr	r0, [r3, #8]
 280 00ac 0B4B     		ldr	r3, .L16+4
 281 00ae 1B68     		ldr	r3, [r3]
 282 00b0 7624     		movs	r4, #118
 283 00b2 1B5B     		ldrh	r3, [r3, r4]
 284 00b4 C318     		adds	r3, r0, r3
 285 00b6 CB18     		adds	r3, r1, r3
 286 00b8 1B68     		ldr	r3, [r3]
 287 00ba 0B49     		ldr	r1, .L16+16
 288 00bc 1940     		ands	r1, r3
 289 00be 7B68     		ldr	r3, [r7, #4]
 290 00c0 1B02     		lsls	r3, r3, #8
 291 00c2 0A48     		ldr	r0, .L16+20
 292 00c4 0340     		ands	r3, r0
 293 00c6 0B43     		orrs	r3, r1
 294 00c8 1360     		str	r3, [r2]
1893:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             retVal = CY_SYSCLK_SUCCESS;
 295              		.loc 2 1893 0
 296 00ca 0023     		movs	r3, #0
 297 00cc 7B61     		str	r3, [r7, #20]
 298              	.L13:
1894:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         }
1895:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1896:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     else
1897:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     { /* return bad parameter */
1898:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1899:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (retVal);
 299              		.loc 2 1899 0
 300 00ce 7B69     		ldr	r3, [r7, #20]
1900:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
 301              		.loc 2 1900 0
 302 00d0 1800     		movs	r0, r3
 303 00d2 BD46     		mov	sp, r7
 304 00d4 07B0     		add	sp, sp, #28
 305              		@ sp needed
 306 00d6 90BD     		pop	{r4, r7, pc}
 307              	.L17:
 308              		.align	2
 309              	.L16:
 310 00d8 01004A00 		.word	4849665
 311 00dc 00000000 		.word	cy_device
 312 00e0 FF00FFFF 		.word	-65281
 313 00e4 FFFF0000 		.word	65535
 314 00e8 FF0000FF 		.word	-16776961
 315 00ec 00FFFF00 		.word	16776960
 316              		.cfi_endproc
 317              	.LFE134:
 318              		.size	Cy_SysClk_PeriphSetDivider, .-Cy_SysClk_PeriphSetDivider
 319              		.section	.text.Cy_SysClk_PeriphEnableDivider,"ax",%progbits
 320              		.align	2
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 69


 321              		.code	16
 322              		.thumb_func
 323              		.type	Cy_SysClk_PeriphEnableDivider, %function
 324              	Cy_SysClk_PeriphEnableDivider:
 325              	.LFB140:
1901:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1902:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1903:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PeriphGetDivider
1904:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1905:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1906:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Returns the integer divider value for the specified divider. One works for
1907:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * integer dividers. Use \ref Cy_SysClk_PeriphGetFracDivider to get the fractional
1908:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * divider value
1909:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1910:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerType specifies which type of divider to use; \ref cy_en_divider_types_t
1911:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1912:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerNum specifies which divider of the selected type to configure
1913:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1914:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return The divider value.
1915:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The integer division done is by (divider value + 1), or division by 1 to 256
1916:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * (8-bit divider) or 1 to 65536 (16-bit divider).
1917:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1918:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1919:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_PeriphSetDivider
1920:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1921:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1922:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint32_t Cy_SysClk_PeriphGetDivider(cy_en_divider_types_t dividerType, uint32_t div
1923:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1924:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint32_t retVal;
1925:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1926:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_ASSERT_L1(dividerType <= CY_SYSCLK_DIV_16_BIT);
1927:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1928:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if (dividerType == CY_SYSCLK_DIV_8_BIT)
1929:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
1930:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         CY_ASSERT_L1(dividerNum < PERI_DIV_8_NR);
1931:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         retVal = _FLD2VAL(PERI_DIV_8_CTL_INT8_DIV, PERI_DIV_8_CTL[dividerNum]);
1932:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1933:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     else
1934:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     { /* 16-bit divider */
1935:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         CY_ASSERT_L1(dividerNum < PERI_DIV_16_NR);
1936:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         retVal = _FLD2VAL(PERI_DIV_16_CTL_INT16_DIV, PERI_DIV_16_CTL[dividerNum]);
1937:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1938:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (retVal);
1939:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1940:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1941:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1942:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PeriphSetFracDivider
1943:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1944:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1945:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Sets one of the programmable clock dividers. This function should only be used
1946:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * for fractional clock dividers.
1947:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1948:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \pre If the specified clock divider is already enabled - it should be disabled
1949:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * prior to use this function by \ref Cy_SysClk_PeriphDisableDivider.
1950:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1951:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerType specifies which type of divider to use; \ref cy_en_divider_types_t
1952:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 70


1953:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerNum specifies which divider of the selected type to configure
1954:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1955:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerIntValue the integer divider value
1956:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The source of the divider is peri_clk, which is a divided version of hf_clk[0].
1957:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The divider value causes integer division of (divider value + 1), or division
1958:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * by 1 to 65536 (16-bit divider) or 1 to 16777216 (24-bit divider).
1959:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1960:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerFracValue the fraction part of the divider
1961:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The fractional divider can be 1-32, thus it divides the clock by 1/32 for each
1962:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * count. To divide the clock by 11/32nds set this value to 11.
1963:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1964:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return \ref cy_en_sysclk_status_t
1965:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1966:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1967:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_PeriphSetFracDivider
1968:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1969:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1970:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t
1971:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                 Cy_SysClk_PeriphSetFracDivider(cy_en_divider_types_t dividerType, uint32_t dividerN
1972:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                                uint32_t dividerIntValue, uint32_t dividerFracValue)
1973:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1974:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_sysclk_status_t retVal = CY_SYSCLK_BAD_PARAM;
1975:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if (dividerType == CY_SYSCLK_DIV_16_5_BIT)
1976:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
1977:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         if ((dividerNum < PERI_DIV_16_5_NR) &&
1978:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             (dividerIntValue <= (PERI_DIV_16_5_CTL_INT16_DIV_Msk >> PERI_DIV_16_5_CTL_INT16_DIV_Pos
1979:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             (dividerFracValue <= (PERI_DIV_16_5_CTL_FRAC5_DIV_Msk >> PERI_DIV_16_5_CTL_FRAC5_DIV_Po
1980:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         {
1981:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             CY_REG32_CLR_SET(PERI_DIV_16_5_CTL[dividerNum], PERI_DIV_16_5_CTL_INT16_DIV, dividerInt
1982:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             CY_REG32_CLR_SET(PERI_DIV_16_5_CTL[dividerNum], PERI_DIV_16_5_CTL_FRAC5_DIV, dividerFra
1983:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             retVal = CY_SYSCLK_SUCCESS;
1984:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         }
1985:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1986:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     else if (dividerType == CY_SYSCLK_DIV_24_5_BIT)
1987:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
1988:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         if ((dividerNum < PERI_DIV_24_5_NR) &&
1989:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             (dividerIntValue <= (PERI_DIV_24_5_CTL_INT24_DIV_Msk >> PERI_DIV_24_5_CTL_INT24_DIV_Pos
1990:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             (dividerFracValue <= (PERI_DIV_24_5_CTL_FRAC5_DIV_Msk >> PERI_DIV_24_5_CTL_FRAC5_DIV_Po
1991:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         {
1992:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             CY_REG32_CLR_SET(PERI_DIV_24_5_CTL[dividerNum], PERI_DIV_24_5_CTL_INT24_DIV, dividerInt
1993:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             CY_REG32_CLR_SET(PERI_DIV_24_5_CTL[dividerNum], PERI_DIV_24_5_CTL_FRAC5_DIV, dividerFra
1994:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             retVal = CY_SYSCLK_SUCCESS;
1995:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         }
1996:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1997:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     else
1998:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     { /* return bad parameter */
1999:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
2000:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (retVal);
2001:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
2002:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2003:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
2004:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PeriphGetFracDivider
2005:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
2006:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2007:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Reports the integer and fractional parts of the divider
2008:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2009:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerType specifies which type of divider to use; \ref cy_en_divider_types_t
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 71


2010:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2011:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerNum specifies which divider of the selected type to configure
2012:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2013:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param *dividerIntValue pointer to return integer divider value
2014:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2015:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param *dividerFracValue pointer to return fractional divider value
2016:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2017:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return None. Loads pointed-to variables.
2018:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2019:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
2020:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_PeriphSetFracDivider
2021:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2022:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
2023:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_PeriphGetFracDivider(cy_en_divider_types_t dividerType, uint32_t div
2024:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                                     uint32_t *dividerIntValue, uint32_t *dividerFra
2025:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
2026:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_ASSERT_L1(((dividerType == CY_SYSCLK_DIV_16_5_BIT) || (dividerType == CY_SYSCLK_DIV_24_5_BIT
2027:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                  (dividerIntValue != NULL) && (dividerFracValue != NULL));
2028:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2029:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if (dividerType == CY_SYSCLK_DIV_16_5_BIT)
2030:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
2031:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         CY_ASSERT_L1(dividerNum < PERI_DIV_16_5_NR);
2032:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         *dividerIntValue  = _FLD2VAL(PERI_DIV_16_5_CTL_INT16_DIV, PERI_DIV_16_5_CTL[dividerNum]);
2033:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         *dividerFracValue = _FLD2VAL(PERI_DIV_16_5_CTL_FRAC5_DIV, PERI_DIV_16_5_CTL[dividerNum]);
2034:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
2035:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     else
2036:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     { /* 24.5-bit divider */
2037:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         CY_ASSERT_L1(dividerNum < PERI_DIV_24_5_NR);
2038:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         *dividerIntValue  = _FLD2VAL(PERI_DIV_24_5_CTL_INT24_DIV, PERI_DIV_24_5_CTL[dividerNum]);
2039:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         *dividerFracValue = _FLD2VAL(PERI_DIV_24_5_CTL_FRAC5_DIV, PERI_DIV_24_5_CTL[dividerNum]);
2040:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
2041:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
2042:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2043:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
2044:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PeriphAssignDivider
2045:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
2046:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2047:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Assigns a programmable divider to a selected IP block, such as a TCPWM or SCB.
2048:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2049:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param ipBlock specifies ip block to connect the clock divider to.
2050:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2051:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerType specifies which type of divider to use; \ref cy_en_divider_types_t
2052:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2053:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerNum specifies which divider of the selected type to configure
2054:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2055:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return \ref cy_en_sysclk_status_t
2056:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2057:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
2058:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_PeriphAssignDivider
2059:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2060:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
2061:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t
2062:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                 Cy_SysClk_PeriphAssignDivider(en_clk_dst_t ipBlock,
2063:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                               cy_en_divider_types_t dividerType, uint32_t dividerNu
2064:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
2065:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_sysclk_status_t retVal = CY_SYSCLK_BAD_PARAM;
2066:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if ((CY_PERI_CLOCK_NR > (uint32_t)ipBlock) && (CY_SYSCLK_DIV_24_5_BIT >= dividerType))
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 72


2067:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
2068:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         if (((dividerType == CY_SYSCLK_DIV_8_BIT)    && (dividerNum < PERI_DIV_8_NR))    ||
2069:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             ((dividerType == CY_SYSCLK_DIV_16_BIT)   && (dividerNum < PERI_DIV_16_NR))   ||
2070:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             ((dividerType == CY_SYSCLK_DIV_16_5_BIT) && (dividerNum < PERI_DIV_16_5_NR)) ||
2071:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             ((dividerType == CY_SYSCLK_DIV_24_5_BIT) && (dividerNum < PERI_DIV_24_5_NR)))
2072:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         {
2073:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             PERI_CLOCK_CTL[ipBlock] = _VAL2FLD(CY_PERI_CLOCK_CTL_TYPE_SEL, dividerType) |
2074:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                       _VAL2FLD(CY_PERI_CLOCK_CTL_DIV_SEL, dividerNum);
2075:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             retVal = CY_SYSCLK_SUCCESS;
2076:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         }
2077:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
2078:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (retVal);
2079:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
2080:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2081:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
2082:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PeriphGetAssignedDivider
2083:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
2084:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2085:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Reports which clock divider is assigned to a selected IP block.
2086:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2087:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param ipBlock specifies ip block to connect the clock divider to.
2088:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2089:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return The divider type and number, where bits [7:6] = type, bits[5:0] = divider
2090:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * number within that type
2091:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2092:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
2093:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_PeriphAssignDivider
2094:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2095:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
2096:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint32_t Cy_SysClk_PeriphGetAssignedDivider(en_clk_dst_t ipBlock)
2097:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
2098:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_ASSERT_L1(CY_PERI_CLOCK_NR > (uint32_t)ipBlock);
2099:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (PERI_CLOCK_CTL[ipBlock] & (CY_PERI_CLOCK_CTL_DIV_SEL_Msk | CY_PERI_CLOCK_CTL_TYPE_SEL_M
2100:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
2101:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2102:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
2103:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PeriphEnableDivider
2104:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
2105:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2106:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Enables the selected divider.
2107:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2108:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerType specifies which type of divider to use; \ref cy_en_divider_types_t
2109:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2110:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerNum specifies which divider of the selected type to configure
2111:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2112:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note This function also sets the phase alignment bits such that the enabled
2113:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * divider is aligned to clk_peri. See \ref Cy_SysClk_PeriphDisableDivider()
2114:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * for information on how to phase-align a divider after it is enabled.
2115:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2116:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
2117:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_PeriphEnableDivider
2118:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2119:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
2120:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t
2121:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                 Cy_SysClk_PeriphEnableDivider(cy_en_divider_types_t dividerType, uint32_t dividerNu
2122:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 326              		.loc 2 2122 0
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 73


 327              		.cfi_startproc
 328              		@ args = 0, pretend = 0, frame = 16
 329              		@ frame_needed = 1, uses_anonymous_args = 0
 330 0000 90B5     		push	{r4, r7, lr}
 331              		.cfi_def_cfa_offset 12
 332              		.cfi_offset 4, -12
 333              		.cfi_offset 7, -8
 334              		.cfi_offset 14, -4
 335 0002 85B0     		sub	sp, sp, #20
 336              		.cfi_def_cfa_offset 32
 337 0004 00AF     		add	r7, sp, #0
 338              		.cfi_def_cfa_register 7
 339 0006 0200     		movs	r2, r0
 340 0008 3960     		str	r1, [r7]
 341 000a FB1D     		adds	r3, r7, #7
 342 000c 1A70     		strb	r2, [r3]
2123:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_sysclk_status_t retVal = CY_SYSCLK_BAD_PARAM;
 343              		.loc 2 2123 0
 344 000e 334B     		ldr	r3, .L25
 345 0010 FB60     		str	r3, [r7, #12]
2124:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if (dividerType <= CY_SYSCLK_DIV_24_5_BIT)
 346              		.loc 2 2124 0
 347 0012 FB1D     		adds	r3, r7, #7
 348 0014 1B78     		ldrb	r3, [r3]
 349 0016 032B     		cmp	r3, #3
 350 0018 5AD8     		bhi	.L19
2125:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
2126:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         if (((dividerType == CY_SYSCLK_DIV_8_BIT)    && (dividerNum < PERI_DIV_8_NR))    ||
 351              		.loc 2 2126 0
 352 001a FB1D     		adds	r3, r7, #7
 353 001c 1B78     		ldrb	r3, [r3]
 354 001e 002B     		cmp	r3, #0
 355 0020 02D1     		bne	.L20
 356              		.loc 2 2126 0 is_stmt 0 discriminator 1
 357 0022 3B68     		ldr	r3, [r7]
 358 0024 072B     		cmp	r3, #7
 359 0026 14D9     		bls	.L21
 360              	.L20:
 361              		.loc 2 2126 0 discriminator 3
 362 0028 FB1D     		adds	r3, r7, #7
 363 002a 1B78     		ldrb	r3, [r3]
 364 002c 012B     		cmp	r3, #1
 365 002e 02D1     		bne	.L22
2127:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             ((dividerType == CY_SYSCLK_DIV_16_BIT)   && (dividerNum < PERI_DIV_16_NR))   ||
 366              		.loc 2 2127 0 is_stmt 1
 367 0030 3B68     		ldr	r3, [r7]
 368 0032 0F2B     		cmp	r3, #15
 369 0034 0DD9     		bls	.L21
 370              	.L22:
 371              		.loc 2 2127 0 is_stmt 0 discriminator 1
 372 0036 FB1D     		adds	r3, r7, #7
 373 0038 1B78     		ldrb	r3, [r3]
 374 003a 022B     		cmp	r3, #2
 375 003c 02D1     		bne	.L23
2128:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             ((dividerType == CY_SYSCLK_DIV_16_5_BIT) && (dividerNum < PERI_DIV_16_5_NR)) ||
 376              		.loc 2 2128 0 is_stmt 1
 377 003e 3B68     		ldr	r3, [r7]
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 74


 378 0040 032B     		cmp	r3, #3
 379 0042 06D9     		bls	.L21
 380              	.L23:
 381              		.loc 2 2128 0 is_stmt 0 discriminator 1
 382 0044 FB1D     		adds	r3, r7, #7
 383 0046 1B78     		ldrb	r3, [r3]
 384 0048 032B     		cmp	r3, #3
 385 004a 41D1     		bne	.L19
2129:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             ((dividerType == CY_SYSCLK_DIV_24_5_BIT) && (dividerNum < PERI_DIV_24_5_NR)))
 386              		.loc 2 2129 0 is_stmt 1
 387 004c 3B68     		ldr	r3, [r7]
 388 004e 002B     		cmp	r3, #0
 389 0050 3ED1     		bne	.L19
 390              	.L21:
2130:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         {
2131:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             /* specify the divider, make the reference = clk_peri, and enable the divider */
2132:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             PERI_DIV_CMD = PERI_DIV_CMD_ENABLE_Msk                         |
 391              		.loc 2 2132 0
 392 0052 234B     		ldr	r3, .L25+4
 393 0054 1B68     		ldr	r3, [r3]
 394 0056 9B68     		ldr	r3, [r3, #8]
 395 0058 1C00     		movs	r4, r3
2133:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                            CY_PERI_DIV_CMD_PA_TYPE_SEL_Msk                 |
 396              		.loc 2 2133 0
 397 005a 214B     		ldr	r3, .L25+4
 398 005c 1B68     		ldr	r3, [r3]
 399 005e 7322     		movs	r2, #115
 400 0060 9B5C     		ldrb	r3, [r3, r2]
 401 0062 1A00     		movs	r2, r3
 402 0064 0323     		movs	r3, #3
 403 0066 9340     		lsls	r3, r3, r2
 404 0068 1A00     		movs	r2, r3
2134:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                            CY_PERI_DIV_CMD_PA_DIV_SEL_Msk                  |
 405              		.loc 2 2134 0
 406 006a 1D4B     		ldr	r3, .L25+4
 407 006c 1B68     		ldr	r3, [r3]
 408 006e 7021     		movs	r1, #112
 409 0070 5B5C     		ldrb	r3, [r3, r1]
 410 0072 1800     		movs	r0, r3
 411 0074 1A4B     		ldr	r3, .L25+4
 412 0076 1B68     		ldr	r3, [r3]
 413 0078 7221     		movs	r1, #114
 414 007a 5B5C     		ldrb	r3, [r3, r1]
 415 007c 9840     		lsls	r0, r0, r3
 416 007e 0300     		movs	r3, r0
2133:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                            CY_PERI_DIV_CMD_PA_TYPE_SEL_Msk                 |
 417              		.loc 2 2133 0
 418 0080 1A43     		orrs	r2, r3
2135:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                            _VAL2FLD(CY_PERI_DIV_CMD_TYPE_SEL, dividerType) |
 419              		.loc 2 2135 0
 420 0082 FB1D     		adds	r3, r7, #7
 421 0084 1978     		ldrb	r1, [r3]
 422 0086 164B     		ldr	r3, .L25+4
 423 0088 1B68     		ldr	r3, [r3]
 424 008a 7120     		movs	r0, #113
 425 008c 1B5C     		ldrb	r3, [r3, r0]
 426 008e 9940     		lsls	r1, r1, r3
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 75


 427 0090 134B     		ldr	r3, .L25+4
 428 0092 1B68     		ldr	r3, [r3]
 429 0094 7120     		movs	r0, #113
 430 0096 1B5C     		ldrb	r3, [r3, r0]
 431 0098 1800     		movs	r0, r3
 432 009a 0323     		movs	r3, #3
 433 009c 8340     		lsls	r3, r3, r0
 434 009e 0B40     		ands	r3, r1
2134:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                            CY_PERI_DIV_CMD_PA_DIV_SEL_Msk                  |
 435              		.loc 2 2134 0
 436 00a0 1A43     		orrs	r2, r3
2136:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                            _VAL2FLD(CY_PERI_DIV_CMD_DIV_SEL,  dividerNum);
 437              		.loc 2 2136 0
 438 00a2 0F4B     		ldr	r3, .L25+4
 439 00a4 1B68     		ldr	r3, [r3]
 440 00a6 7021     		movs	r1, #112
 441 00a8 5B5C     		ldrb	r3, [r3, r1]
 442 00aa 1900     		movs	r1, r3
 443 00ac 3B68     		ldr	r3, [r7]
 444 00ae 0B40     		ands	r3, r1
2135:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                            _VAL2FLD(CY_PERI_DIV_CMD_TYPE_SEL, dividerType) |
 445              		.loc 2 2135 0
 446 00b0 1343     		orrs	r3, r2
 447 00b2 8022     		movs	r2, #128
 448 00b4 1206     		lsls	r2, r2, #24
 449 00b6 1A43     		orrs	r2, r3
2132:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                            CY_PERI_DIV_CMD_PA_TYPE_SEL_Msk                 |
 450              		.loc 2 2132 0
 451 00b8 8023     		movs	r3, #128
 452 00ba DB00     		lsls	r3, r3, #3
 453 00bc E250     		str	r2, [r4, r3]
2137:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             (void)PERI_DIV_CMD; /* dummy read to handle buffered writes */
 454              		.loc 2 2137 0
 455 00be 084B     		ldr	r3, .L25+4
 456 00c0 1B68     		ldr	r3, [r3]
 457 00c2 9B68     		ldr	r3, [r3, #8]
 458 00c4 1A00     		movs	r2, r3
 459 00c6 8023     		movs	r3, #128
 460 00c8 DB00     		lsls	r3, r3, #3
 461 00ca D358     		ldr	r3, [r2, r3]
2138:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             retVal = CY_SYSCLK_SUCCESS;
 462              		.loc 2 2138 0
 463 00cc 0023     		movs	r3, #0
 464 00ce FB60     		str	r3, [r7, #12]
 465              	.L19:
2139:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         }
2140:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
2141:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (retVal);
 466              		.loc 2 2141 0
 467 00d0 FB68     		ldr	r3, [r7, #12]
2142:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
 468              		.loc 2 2142 0
 469 00d2 1800     		movs	r0, r3
 470 00d4 BD46     		mov	sp, r7
 471 00d6 05B0     		add	sp, sp, #20
 472              		@ sp needed
 473 00d8 90BD     		pop	{r4, r7, pc}
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 76


 474              	.L26:
 475 00da C046     		.align	2
 476              	.L25:
 477 00dc 01004A00 		.word	4849665
 478 00e0 00000000 		.word	cy_device
 479              		.cfi_endproc
 480              	.LFE140:
 481              		.size	Cy_SysClk_PeriphEnableDivider, .-Cy_SysClk_PeriphEnableDivider
 482              		.section	.text.Cy_SysClk_PeriphDisableDivider,"ax",%progbits
 483              		.align	2
 484              		.code	16
 485              		.thumb_func
 486              		.type	Cy_SysClk_PeriphDisableDivider, %function
 487              	Cy_SysClk_PeriphDisableDivider:
 488              	.LFB141:
2143:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2144:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
2145:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PeriphDisableDivider
2146:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
2147:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2148:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Disables a selected divider.
2149:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2150:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerType specifies which type of divider to use; \ref cy_en_divider_types_t.
2151:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2152:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerNum specifies which divider of the selected type to configure.
2153:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2154:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
2155:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_PeriphDisableDivider
2156:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2157:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
2158:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t
2159:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                 Cy_SysClk_PeriphDisableDivider(cy_en_divider_types_t dividerType, uint32_t dividerN
2160:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 489              		.loc 2 2160 0
 490              		.cfi_startproc
 491              		@ args = 0, pretend = 0, frame = 16
 492              		@ frame_needed = 1, uses_anonymous_args = 0
 493 0000 80B5     		push	{r7, lr}
 494              		.cfi_def_cfa_offset 8
 495              		.cfi_offset 7, -8
 496              		.cfi_offset 14, -4
 497 0002 84B0     		sub	sp, sp, #16
 498              		.cfi_def_cfa_offset 24
 499 0004 00AF     		add	r7, sp, #0
 500              		.cfi_def_cfa_register 7
 501 0006 0200     		movs	r2, r0
 502 0008 3960     		str	r1, [r7]
 503 000a FB1D     		adds	r3, r7, #7
 504 000c 1A70     		strb	r2, [r3]
2161:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_sysclk_status_t retVal = CY_SYSCLK_BAD_PARAM;
 505              		.loc 2 2161 0
 506 000e 254B     		ldr	r3, .L34
 507 0010 FB60     		str	r3, [r7, #12]
2162:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if (dividerType <= CY_SYSCLK_DIV_24_5_BIT)
 508              		.loc 2 2162 0
 509 0012 FB1D     		adds	r3, r7, #7
 510 0014 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 77


 511 0016 032B     		cmp	r3, #3
 512 0018 3ED8     		bhi	.L28
2163:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
2164:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         if (((dividerType == CY_SYSCLK_DIV_8_BIT)    && (dividerNum < PERI_DIV_8_NR))    ||
 513              		.loc 2 2164 0
 514 001a FB1D     		adds	r3, r7, #7
 515 001c 1B78     		ldrb	r3, [r3]
 516 001e 002B     		cmp	r3, #0
 517 0020 02D1     		bne	.L29
 518              		.loc 2 2164 0 is_stmt 0 discriminator 1
 519 0022 3B68     		ldr	r3, [r7]
 520 0024 072B     		cmp	r3, #7
 521 0026 14D9     		bls	.L30
 522              	.L29:
 523              		.loc 2 2164 0 discriminator 3
 524 0028 FB1D     		adds	r3, r7, #7
 525 002a 1B78     		ldrb	r3, [r3]
 526 002c 012B     		cmp	r3, #1
 527 002e 02D1     		bne	.L31
2165:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             ((dividerType == CY_SYSCLK_DIV_16_BIT)   && (dividerNum < PERI_DIV_16_NR))   ||
 528              		.loc 2 2165 0 is_stmt 1
 529 0030 3B68     		ldr	r3, [r7]
 530 0032 0F2B     		cmp	r3, #15
 531 0034 0DD9     		bls	.L30
 532              	.L31:
 533              		.loc 2 2165 0 is_stmt 0 discriminator 1
 534 0036 FB1D     		adds	r3, r7, #7
 535 0038 1B78     		ldrb	r3, [r3]
 536 003a 022B     		cmp	r3, #2
 537 003c 02D1     		bne	.L32
2166:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             ((dividerType == CY_SYSCLK_DIV_16_5_BIT) && (dividerNum < PERI_DIV_16_5_NR)) ||
 538              		.loc 2 2166 0 is_stmt 1
 539 003e 3B68     		ldr	r3, [r7]
 540 0040 032B     		cmp	r3, #3
 541 0042 06D9     		bls	.L30
 542              	.L32:
 543              		.loc 2 2166 0 is_stmt 0 discriminator 1
 544 0044 FB1D     		adds	r3, r7, #7
 545 0046 1B78     		ldrb	r3, [r3]
 546 0048 032B     		cmp	r3, #3
 547 004a 25D1     		bne	.L28
2167:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             ((dividerType == CY_SYSCLK_DIV_24_5_BIT) && (dividerNum < PERI_DIV_24_5_NR)))
 548              		.loc 2 2167 0 is_stmt 1
 549 004c 3B68     		ldr	r3, [r7]
 550 004e 002B     		cmp	r3, #0
 551 0050 22D1     		bne	.L28
 552              	.L30:
2168:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         {
2169:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             /* specify the divider and disable it */
2170:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             PERI_DIV_CMD = PERI_DIV_CMD_DISABLE_Msk          |
 553              		.loc 2 2170 0
 554 0052 154B     		ldr	r3, .L34+4
 555 0054 1B68     		ldr	r3, [r3]
 556 0056 9B68     		ldr	r3, [r3, #8]
 557 0058 1800     		movs	r0, r3
2171:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****              _VAL2FLD(CY_PERI_DIV_CMD_TYPE_SEL, dividerType) |
 558              		.loc 2 2171 0
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 78


 559 005a FB1D     		adds	r3, r7, #7
 560 005c 1A78     		ldrb	r2, [r3]
 561 005e 124B     		ldr	r3, .L34+4
 562 0060 1B68     		ldr	r3, [r3]
 563 0062 7121     		movs	r1, #113
 564 0064 5B5C     		ldrb	r3, [r3, r1]
 565 0066 9A40     		lsls	r2, r2, r3
 566 0068 0F4B     		ldr	r3, .L34+4
 567 006a 1B68     		ldr	r3, [r3]
 568 006c 7121     		movs	r1, #113
 569 006e 5B5C     		ldrb	r3, [r3, r1]
 570 0070 1900     		movs	r1, r3
 571 0072 0323     		movs	r3, #3
 572 0074 8B40     		lsls	r3, r3, r1
 573 0076 1A40     		ands	r2, r3
2172:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****              _VAL2FLD(CY_PERI_DIV_CMD_DIV_SEL,  dividerNum);
 574              		.loc 2 2172 0
 575 0078 0B4B     		ldr	r3, .L34+4
 576 007a 1B68     		ldr	r3, [r3]
 577 007c 7021     		movs	r1, #112
 578 007e 5B5C     		ldrb	r3, [r3, r1]
 579 0080 1900     		movs	r1, r3
 580 0082 3B68     		ldr	r3, [r7]
 581 0084 0B40     		ands	r3, r1
2171:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****              _VAL2FLD(CY_PERI_DIV_CMD_TYPE_SEL, dividerType) |
 582              		.loc 2 2171 0
 583 0086 1343     		orrs	r3, r2
 584 0088 8022     		movs	r2, #128
 585 008a D205     		lsls	r2, r2, #23
 586 008c 1A43     		orrs	r2, r3
2170:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****              _VAL2FLD(CY_PERI_DIV_CMD_TYPE_SEL, dividerType) |
 587              		.loc 2 2170 0
 588 008e 8023     		movs	r3, #128
 589 0090 DB00     		lsls	r3, r3, #3
 590 0092 C250     		str	r2, [r0, r3]
2173:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             retVal = CY_SYSCLK_SUCCESS;
 591              		.loc 2 2173 0
 592 0094 0023     		movs	r3, #0
 593 0096 FB60     		str	r3, [r7, #12]
 594              	.L28:
2174:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         }
2175:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
2176:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (retVal);
 595              		.loc 2 2176 0
 596 0098 FB68     		ldr	r3, [r7, #12]
2177:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
 597              		.loc 2 2177 0
 598 009a 1800     		movs	r0, r3
 599 009c BD46     		mov	sp, r7
 600 009e 04B0     		add	sp, sp, #16
 601              		@ sp needed
 602 00a0 80BD     		pop	{r7, pc}
 603              	.L35:
 604 00a2 C046     		.align	2
 605              	.L34:
 606 00a4 01004A00 		.word	4849665
 607 00a8 00000000 		.word	cy_device
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 79


 608              		.cfi_endproc
 609              	.LFE141:
 610              		.size	Cy_SysClk_PeriphDisableDivider, .-Cy_SysClk_PeriphDisableDivider
 611              		.section	.text.ADC_1_intSarClock_Enable,"ax",%progbits
 612              		.align	2
 613              		.code	16
 614              		.thumb_func
 615              		.type	ADC_1_intSarClock_Enable, %function
 616              	ADC_1_intSarClock_Enable:
 617              	.LFB162:
 618              		.file 3 "Generated_Source\\PSoC6\\ADC_1_intSarClock.h"
   1:Generated_Source\PSoC6/ADC_1_intSarClock.h **** /***************************************************************************//**
   2:Generated_Source\PSoC6/ADC_1_intSarClock.h **** * \file     ADC_1_intSarClock.h
   3:Generated_Source\PSoC6/ADC_1_intSarClock.h **** * \version  1.0
   4:Generated_Source\PSoC6/ADC_1_intSarClock.h **** *
   5:Generated_Source\PSoC6/ADC_1_intSarClock.h **** * \brief
   6:Generated_Source\PSoC6/ADC_1_intSarClock.h **** * Provides the source code to the API for the ADC_1_intSarClock Component.
   7:Generated_Source\PSoC6/ADC_1_intSarClock.h **** *
   8:Generated_Source\PSoC6/ADC_1_intSarClock.h **** ********************************************************************************
   9:Generated_Source\PSoC6/ADC_1_intSarClock.h **** * \copyright
  10:Generated_Source\PSoC6/ADC_1_intSarClock.h **** * Copyright 2015, Cypress Semiconductor Corporation. All rights reserved.
  11:Generated_Source\PSoC6/ADC_1_intSarClock.h **** * You may use this file only in accordance with the license, terms, conditions,
  12:Generated_Source\PSoC6/ADC_1_intSarClock.h **** * disclaimers, and limitations in the end user license agreement accompanying
  13:Generated_Source\PSoC6/ADC_1_intSarClock.h **** * the software package with which this file was provided.
  14:Generated_Source\PSoC6/ADC_1_intSarClock.h **** *******************************************************************************/
  15:Generated_Source\PSoC6/ADC_1_intSarClock.h **** 
  16:Generated_Source\PSoC6/ADC_1_intSarClock.h **** #if !defined(CY_ADC_1_intSarClock_NAME_ADC_1_intSarClock_H)
  17:Generated_Source\PSoC6/ADC_1_intSarClock.h **** #define CY_ADC_1_intSarClock_NAME_ADC_1_intSarClock_H
  18:Generated_Source\PSoC6/ADC_1_intSarClock.h **** 
  19:Generated_Source\PSoC6/ADC_1_intSarClock.h **** /* For _DIV_TYPE and _DIV_NUM #defines */
  20:Generated_Source\PSoC6/ADC_1_intSarClock.h **** #include "cyfitter.h"
  21:Generated_Source\PSoC6/ADC_1_intSarClock.h **** 
  22:Generated_Source\PSoC6/ADC_1_intSarClock.h **** /* makes uint32_t defined */
  23:Generated_Source\PSoC6/ADC_1_intSarClock.h **** #include <stdint.h>
  24:Generated_Source\PSoC6/ADC_1_intSarClock.h **** 
  25:Generated_Source\PSoC6/ADC_1_intSarClock.h **** #include "sysclk/cy_sysclk.h"
  26:Generated_Source\PSoC6/ADC_1_intSarClock.h **** 
  27:Generated_Source\PSoC6/ADC_1_intSarClock.h **** /***************************************
  28:Generated_Source\PSoC6/ADC_1_intSarClock.h **** * Preprocessor Macros
  29:Generated_Source\PSoC6/ADC_1_intSarClock.h **** ***************************************/
  30:Generated_Source\PSoC6/ADC_1_intSarClock.h **** /**
  31:Generated_Source\PSoC6/ADC_1_intSarClock.h **** * \addtogroup group_macros
  32:Generated_Source\PSoC6/ADC_1_intSarClock.h **** * @{
  33:Generated_Source\PSoC6/ADC_1_intSarClock.h **** */
  34:Generated_Source\PSoC6/ADC_1_intSarClock.h **** /** The peripheral clock divider number */
  35:Generated_Source\PSoC6/ADC_1_intSarClock.h **** #define ADC_1_intSarClock_DIV_NUM ((uint32_t)ADC_1_intSarClock__DIV_NUM)
  36:Generated_Source\PSoC6/ADC_1_intSarClock.h **** /** The peripheral clock divider type */
  37:Generated_Source\PSoC6/ADC_1_intSarClock.h **** #define ADC_1_intSarClock_DIV_TYPE ((cy_en_divider_types_t)ADC_1_intSarClock__DIV_TYPE)
  38:Generated_Source\PSoC6/ADC_1_intSarClock.h **** /** @} group_macros */
  39:Generated_Source\PSoC6/ADC_1_intSarClock.h **** 
  40:Generated_Source\PSoC6/ADC_1_intSarClock.h **** /***************************************
  41:Generated_Source\PSoC6/ADC_1_intSarClock.h **** * Function Prototypes
  42:Generated_Source\PSoC6/ADC_1_intSarClock.h **** ***************************************/
  43:Generated_Source\PSoC6/ADC_1_intSarClock.h **** 
  44:Generated_Source\PSoC6/ADC_1_intSarClock.h **** /**
  45:Generated_Source\PSoC6/ADC_1_intSarClock.h **** * \addtogroup group_general
  46:Generated_Source\PSoC6/ADC_1_intSarClock.h **** * @{
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 80


  47:Generated_Source\PSoC6/ADC_1_intSarClock.h **** */
  48:Generated_Source\PSoC6/ADC_1_intSarClock.h **** 
  49:Generated_Source\PSoC6/ADC_1_intSarClock.h **** /*******************************************************************************
  50:Generated_Source\PSoC6/ADC_1_intSarClock.h **** * Function Name: ADC_1_intSarClock_Enable
  51:Generated_Source\PSoC6/ADC_1_intSarClock.h **** ****************************************************************************//**
  52:Generated_Source\PSoC6/ADC_1_intSarClock.h **** *
  53:Generated_Source\PSoC6/ADC_1_intSarClock.h **** * Enables the programmable clock divider assigned to this Component.
  54:Generated_Source\PSoC6/ADC_1_intSarClock.h **** *
  55:Generated_Source\PSoC6/ADC_1_intSarClock.h **** * \param None
  56:Generated_Source\PSoC6/ADC_1_intSarClock.h **** *
  57:Generated_Source\PSoC6/ADC_1_intSarClock.h **** * \return None
  58:Generated_Source\PSoC6/ADC_1_intSarClock.h **** *
  59:Generated_Source\PSoC6/ADC_1_intSarClock.h **** *******************************************************************************/
  60:Generated_Source\PSoC6/ADC_1_intSarClock.h **** __STATIC_INLINE void ADC_1_intSarClock_Enable(void)
  61:Generated_Source\PSoC6/ADC_1_intSarClock.h **** {
 619              		.loc 3 61 0
 620              		.cfi_startproc
 621              		@ args = 0, pretend = 0, frame = 0
 622              		@ frame_needed = 1, uses_anonymous_args = 0
 623 0000 80B5     		push	{r7, lr}
 624              		.cfi_def_cfa_offset 8
 625              		.cfi_offset 7, -8
 626              		.cfi_offset 14, -4
 627 0002 00AF     		add	r7, sp, #0
 628              		.cfi_def_cfa_register 7
  62:Generated_Source\PSoC6/ADC_1_intSarClock.h ****     (void)Cy_SysClk_PeriphEnableDivider(ADC_1_intSarClock_DIV_TYPE, ADC_1_intSarClock_DIV_NUM);
 629              		.loc 3 62 0
 630 0004 0121     		movs	r1, #1
 631 0006 0020     		movs	r0, #0
 632 0008 FFF7FEFF 		bl	Cy_SysClk_PeriphEnableDivider
  63:Generated_Source\PSoC6/ADC_1_intSarClock.h **** }
 633              		.loc 3 63 0
 634 000c C046     		nop
 635 000e BD46     		mov	sp, r7
 636              		@ sp needed
 637 0010 80BD     		pop	{r7, pc}
 638              		.cfi_endproc
 639              	.LFE162:
 640              		.size	ADC_1_intSarClock_Enable, .-ADC_1_intSarClock_Enable
 641 0012 C046     		.section	.text.ADC_1_intSarClock_Disable,"ax",%progbits
 642              		.align	2
 643              		.code	16
 644              		.thumb_func
 645              		.type	ADC_1_intSarClock_Disable, %function
 646              	ADC_1_intSarClock_Disable:
 647              	.LFB163:
  64:Generated_Source\PSoC6/ADC_1_intSarClock.h **** 
  65:Generated_Source\PSoC6/ADC_1_intSarClock.h **** /*******************************************************************************
  66:Generated_Source\PSoC6/ADC_1_intSarClock.h **** * Function Name: ADC_1_intSarClock_Disable
  67:Generated_Source\PSoC6/ADC_1_intSarClock.h **** ****************************************************************************//**
  68:Generated_Source\PSoC6/ADC_1_intSarClock.h **** *
  69:Generated_Source\PSoC6/ADC_1_intSarClock.h **** * Disables the programmable clock divider assigned to this Component.
  70:Generated_Source\PSoC6/ADC_1_intSarClock.h **** *
  71:Generated_Source\PSoC6/ADC_1_intSarClock.h **** * \param None
  72:Generated_Source\PSoC6/ADC_1_intSarClock.h **** *
  73:Generated_Source\PSoC6/ADC_1_intSarClock.h **** * \return None
  74:Generated_Source\PSoC6/ADC_1_intSarClock.h **** *
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 81


  75:Generated_Source\PSoC6/ADC_1_intSarClock.h **** *******************************************************************************/
  76:Generated_Source\PSoC6/ADC_1_intSarClock.h **** __STATIC_INLINE void ADC_1_intSarClock_Disable(void)
  77:Generated_Source\PSoC6/ADC_1_intSarClock.h **** {
 648              		.loc 3 77 0
 649              		.cfi_startproc
 650              		@ args = 0, pretend = 0, frame = 0
 651              		@ frame_needed = 1, uses_anonymous_args = 0
 652 0000 80B5     		push	{r7, lr}
 653              		.cfi_def_cfa_offset 8
 654              		.cfi_offset 7, -8
 655              		.cfi_offset 14, -4
 656 0002 00AF     		add	r7, sp, #0
 657              		.cfi_def_cfa_register 7
  78:Generated_Source\PSoC6/ADC_1_intSarClock.h ****     (void)Cy_SysClk_PeriphDisableDivider(ADC_1_intSarClock_DIV_TYPE, ADC_1_intSarClock_DIV_NUM);
 658              		.loc 3 78 0
 659 0004 0121     		movs	r1, #1
 660 0006 0020     		movs	r0, #0
 661 0008 FFF7FEFF 		bl	Cy_SysClk_PeriphDisableDivider
  79:Generated_Source\PSoC6/ADC_1_intSarClock.h **** }
 662              		.loc 3 79 0
 663 000c C046     		nop
 664 000e BD46     		mov	sp, r7
 665              		@ sp needed
 666 0010 80BD     		pop	{r7, pc}
 667              		.cfi_endproc
 668              	.LFE163:
 669              		.size	ADC_1_intSarClock_Disable, .-ADC_1_intSarClock_Disable
 670 0012 C046     		.section	.text.ADC_1_intSarClock_SetDivider,"ax",%progbits
 671              		.align	2
 672              		.code	16
 673              		.thumb_func
 674              		.type	ADC_1_intSarClock_SetDivider, %function
 675              	ADC_1_intSarClock_SetDivider:
 676              	.LFB164:
  80:Generated_Source\PSoC6/ADC_1_intSarClock.h **** 
  81:Generated_Source\PSoC6/ADC_1_intSarClock.h **** /*******************************************************************************
  82:Generated_Source\PSoC6/ADC_1_intSarClock.h **** * Function Name: ADC_1_intSarClock_SetDivider
  83:Generated_Source\PSoC6/ADC_1_intSarClock.h **** ****************************************************************************//**
  84:Generated_Source\PSoC6/ADC_1_intSarClock.h **** *
  85:Generated_Source\PSoC6/ADC_1_intSarClock.h **** * Sets the value of a programmable clock divider assigned to this Component.
  86:Generated_Source\PSoC6/ADC_1_intSarClock.h **** * This is only used for integer dividers. Use ADC_1_intSarClock_SetFracDivider()
  87:Generated_Source\PSoC6/ADC_1_intSarClock.h **** * for setting factional dividers.
  88:Generated_Source\PSoC6/ADC_1_intSarClock.h **** *
  89:Generated_Source\PSoC6/ADC_1_intSarClock.h **** * \param dividerValue
  90:Generated_Source\PSoC6/ADC_1_intSarClock.h **** * The divider value. The source of the divider is peri_clk which is a divided
  91:Generated_Source\PSoC6/ADC_1_intSarClock.h **** * version of hf_clk[0]. The divider value causes integer division of
  92:Generated_Source\PSoC6/ADC_1_intSarClock.h **** * (divider value + 1), or division by 1 to 256 (8-bit divider) or
  93:Generated_Source\PSoC6/ADC_1_intSarClock.h **** * 1 to 65536 (16-bit divider).
  94:Generated_Source\PSoC6/ADC_1_intSarClock.h **** *
  95:Generated_Source\PSoC6/ADC_1_intSarClock.h **** * \return None
  96:Generated_Source\PSoC6/ADC_1_intSarClock.h **** *
  97:Generated_Source\PSoC6/ADC_1_intSarClock.h **** *******************************************************************************/
  98:Generated_Source\PSoC6/ADC_1_intSarClock.h **** __STATIC_INLINE void ADC_1_intSarClock_SetDivider(uint32_t dividerValue)
  99:Generated_Source\PSoC6/ADC_1_intSarClock.h **** {
 677              		.loc 3 99 0
 678              		.cfi_startproc
 679              		@ args = 0, pretend = 0, frame = 8
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 82


 680              		@ frame_needed = 1, uses_anonymous_args = 0
 681 0000 80B5     		push	{r7, lr}
 682              		.cfi_def_cfa_offset 8
 683              		.cfi_offset 7, -8
 684              		.cfi_offset 14, -4
 685 0002 82B0     		sub	sp, sp, #8
 686              		.cfi_def_cfa_offset 16
 687 0004 00AF     		add	r7, sp, #0
 688              		.cfi_def_cfa_register 7
 689 0006 7860     		str	r0, [r7, #4]
 100:Generated_Source\PSoC6/ADC_1_intSarClock.h ****     (void)Cy_SysClk_PeriphSetDivider(ADC_1_intSarClock_DIV_TYPE, ADC_1_intSarClock_DIV_NUM, divider
 690              		.loc 3 100 0
 691 0008 7B68     		ldr	r3, [r7, #4]
 692 000a 1A00     		movs	r2, r3
 693 000c 0121     		movs	r1, #1
 694 000e 0020     		movs	r0, #0
 695 0010 FFF7FEFF 		bl	Cy_SysClk_PeriphSetDivider
 101:Generated_Source\PSoC6/ADC_1_intSarClock.h **** }
 696              		.loc 3 101 0
 697 0014 C046     		nop
 698 0016 BD46     		mov	sp, r7
 699 0018 02B0     		add	sp, sp, #8
 700              		@ sp needed
 701 001a 80BD     		pop	{r7, pc}
 702              		.cfi_endproc
 703              	.LFE164:
 704              		.size	ADC_1_intSarClock_SetDivider, .-ADC_1_intSarClock_SetDivider
 705              		.section	.text.ADC_1_Enable,"ax",%progbits
 706              		.align	2
 707              		.code	16
 708              		.thumb_func
 709              		.type	ADC_1_Enable, %function
 710              	ADC_1_Enable:
 711              	.LFB168:
 712              		.file 4 "Generated_Source\\PSoC6\\ADC_1.h"
   1:Generated_Source\PSoC6/ADC_1.h **** /***************************************************************************//**
   2:Generated_Source\PSoC6/ADC_1.h **** * \file     ADC_1.h
   3:Generated_Source\PSoC6/ADC_1.h **** * \version  3.10
   4:Generated_Source\PSoC6/ADC_1.h **** *
   5:Generated_Source\PSoC6/ADC_1.h **** * \brief
   6:Generated_Source\PSoC6/ADC_1.h **** * Provides the source code to the API for the ADC_1 Component.
   7:Generated_Source\PSoC6/ADC_1.h **** *
   8:Generated_Source\PSoC6/ADC_1.h **** ********************************************************************************
   9:Generated_Source\PSoC6/ADC_1.h **** * \copyright
  10:Generated_Source\PSoC6/ADC_1.h **** * (c) 2017-2018, Cypress Semiconductor Corporation. All rights reserved.
  11:Generated_Source\PSoC6/ADC_1.h **** * This software, including source code, documentation and related
  12:Generated_Source\PSoC6/ADC_1.h **** * materials ("Software"), is owned by Cypress Semiconductor
  13:Generated_Source\PSoC6/ADC_1.h **** * Corporation ("Cypress") and is protected by and subject to worldwide
  14:Generated_Source\PSoC6/ADC_1.h **** * patent protection (United States and foreign), United States copyright
  15:Generated_Source\PSoC6/ADC_1.h **** * laws and international treaty provisions. Therefore, you may use this
  16:Generated_Source\PSoC6/ADC_1.h **** * Software only as provided in the license agreement accompanying the
  17:Generated_Source\PSoC6/ADC_1.h **** * software package from which you obtained this Software ("EULA").
  18:Generated_Source\PSoC6/ADC_1.h **** * If no EULA applies, Cypress hereby grants you a personal, nonexclusive,
  19:Generated_Source\PSoC6/ADC_1.h **** * non-transferable license to copy, modify, and compile the
  20:Generated_Source\PSoC6/ADC_1.h **** * Software source code solely for use in connection with Cypress's
  21:Generated_Source\PSoC6/ADC_1.h **** * integrated circuit products. Any reproduction, modification, translation,
  22:Generated_Source\PSoC6/ADC_1.h **** * compilation, or representation of this Software except as specified
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 83


  23:Generated_Source\PSoC6/ADC_1.h **** * above is prohibited without the express written permission of Cypress.
  24:Generated_Source\PSoC6/ADC_1.h **** * Disclaimer: THIS SOFTWARE IS PROVIDED AS-IS, WITH NO
  25:Generated_Source\PSoC6/ADC_1.h **** * WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING,
  26:Generated_Source\PSoC6/ADC_1.h **** * BUT NOT LIMITED TO, NONINFRINGEMENT, IMPLIED
  27:Generated_Source\PSoC6/ADC_1.h **** * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
  28:Generated_Source\PSoC6/ADC_1.h **** * PARTICULAR PURPOSE. Cypress reserves the right to make
  29:Generated_Source\PSoC6/ADC_1.h **** * changes to the Software without notice. Cypress does not assume any
  30:Generated_Source\PSoC6/ADC_1.h **** * liability arising out of the application or use of the Software or any
  31:Generated_Source\PSoC6/ADC_1.h **** * product or circuit described in the Software. Cypress does not
  32:Generated_Source\PSoC6/ADC_1.h **** * authorize its products for use in any products where a malfunction or
  33:Generated_Source\PSoC6/ADC_1.h **** * failure of the Cypress product may reasonably be expected to result in
  34:Generated_Source\PSoC6/ADC_1.h **** * significant property damage, injury or death ("High Risk Product"). By
  35:Generated_Source\PSoC6/ADC_1.h **** * including Cypress's product in a High Risk Product, the manufacturer
  36:Generated_Source\PSoC6/ADC_1.h **** * of such system or application assumes all risk of such use and in doing
  37:Generated_Source\PSoC6/ADC_1.h **** * so agrees to indemnify Cypress against all liability.
  38:Generated_Source\PSoC6/ADC_1.h **** *******************************************************************************/
  39:Generated_Source\PSoC6/ADC_1.h **** #if !defined(CY_ADC_1_H)
  40:Generated_Source\PSoC6/ADC_1.h **** #define CY_ADC_1_H
  41:Generated_Source\PSoC6/ADC_1.h **** 
  42:Generated_Source\PSoC6/ADC_1.h **** #include <cy_device_headers.h>
  43:Generated_Source\PSoC6/ADC_1.h **** #include <sar/cy_sar.h>
  44:Generated_Source\PSoC6/ADC_1.h **** 
  45:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_VREF_ROUTED                  ((0) == 1u)
  46:Generated_Source\PSoC6/ADC_1.h **** #if (ADC_1_VREF_ROUTED)
  47:Generated_Source\PSoC6/ADC_1.h **** #include "ADC_1_vrefAMux.h"
  48:Generated_Source\PSoC6/ADC_1.h **** #endif
  49:Generated_Source\PSoC6/ADC_1.h **** 
  50:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CLOCK_INTERNAL               ((1) == 1u)
  51:Generated_Source\PSoC6/ADC_1.h **** #if (ADC_1_CLOCK_INTERNAL)
  52:Generated_Source\PSoC6/ADC_1.h **** #include "ADC_1_intSarClock.h"
  53:Generated_Source\PSoC6/ADC_1.h **** #endif /* ADC_1_CLOCK_INTERNAL */
  54:Generated_Source\PSoC6/ADC_1.h **** 
  55:Generated_Source\PSoC6/ADC_1.h **** /**
  56:Generated_Source\PSoC6/ADC_1.h **** * \addtogroup group_structures
  57:Generated_Source\PSoC6/ADC_1.h **** *
  58:Generated_Source\PSoC6/ADC_1.h **** */
  59:Generated_Source\PSoC6/ADC_1.h **** typedef struct
  60:Generated_Source\PSoC6/ADC_1.h **** {
  61:Generated_Source\PSoC6/ADC_1.h ****     uint32_t channelBase;                   /* Start of channels for the configuration */
  62:Generated_Source\PSoC6/ADC_1.h ****     uint32_t numChannels;                   /* Number of channels in the configuration */
  63:Generated_Source\PSoC6/ADC_1.h ****     const cy_stc_sar_config_t *hwConfigStc; /* PDL structure */
  64:Generated_Source\PSoC6/ADC_1.h ****     uint32_t miscConfig;                    /* Miscellaneous configuration bits broken down as foll
  65:Generated_Source\PSoC6/ADC_1.h ****                                             [0] - Freerunning: Set if the sample mode is freerunnin
  66:Generated_Source\PSoC6/ADC_1.h ****                                             [2] - Mux Switch 0: Set when VSSA is used for the neg i
  67:Generated_Source\PSoC6/ADC_1.h ****                                             */
  68:Generated_Source\PSoC6/ADC_1.h **** #if (ADC_1_CLOCK_INTERNAL)
  69:Generated_Source\PSoC6/ADC_1.h ****     uint32_t clkDivider;                    /* Clock divider */
  70:Generated_Source\PSoC6/ADC_1.h **** #endif /* ADC_1_CLOCK_INTERNAL */
  71:Generated_Source\PSoC6/ADC_1.h **** 
  72:Generated_Source\PSoC6/ADC_1.h **** } ADC_1_CONFIG_STRUCT;
  73:Generated_Source\PSoC6/ADC_1.h **** /** @} structures */
  74:Generated_Source\PSoC6/ADC_1.h **** 
  75:Generated_Source\PSoC6/ADC_1.h **** /*******************************************************************************
  76:Generated_Source\PSoC6/ADC_1.h **** * Function Prototypes
  77:Generated_Source\PSoC6/ADC_1.h **** *******************************************************************************/
  78:Generated_Source\PSoC6/ADC_1.h **** void ADC_1_SelectConfig(uint32_t config, uint32_t restart);
  79:Generated_Source\PSoC6/ADC_1.h **** void ADC_1_InitConfig(const ADC_1_CONFIG_STRUCT *config);
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 84


  80:Generated_Source\PSoC6/ADC_1.h **** void ADC_1_Init(void);
  81:Generated_Source\PSoC6/ADC_1.h **** __STATIC_INLINE void ADC_1_Enable(void);
  82:Generated_Source\PSoC6/ADC_1.h **** 
  83:Generated_Source\PSoC6/ADC_1.h **** /**
  84:Generated_Source\PSoC6/ADC_1.h **** * \addtogroup group_general
  85:Generated_Source\PSoC6/ADC_1.h **** * @{
  86:Generated_Source\PSoC6/ADC_1.h **** */
  87:Generated_Source\PSoC6/ADC_1.h **** void ADC_1_Start(void);
  88:Generated_Source\PSoC6/ADC_1.h **** void ADC_1_StartEx(cy_israddress userIsr);
  89:Generated_Source\PSoC6/ADC_1.h **** __STATIC_INLINE void ADC_1_Stop(void);
  90:Generated_Source\PSoC6/ADC_1.h **** void ADC_1_StartConvert(void);
  91:Generated_Source\PSoC6/ADC_1.h **** __STATIC_INLINE void ADC_1_StopConvert(void);
  92:Generated_Source\PSoC6/ADC_1.h **** void ADC_1_SetConvertMode(cy_en_sar_start_convert_sel_t mode);
  93:Generated_Source\PSoC6/ADC_1.h **** void ADC_1_SetEosMask(uint32_t mask);
  94:Generated_Source\PSoC6/ADC_1.h **** uint32_t ADC_1_IsEndConversion(cy_en_sar_return_mode_t retMode);
  95:Generated_Source\PSoC6/ADC_1.h **** __STATIC_INLINE int16_t ADC_1_GetResult16(uint32_t chan);
  96:Generated_Source\PSoC6/ADC_1.h **** __STATIC_INLINE int32_t ADC_1_GetResult32(uint32_t chan);
  97:Generated_Source\PSoC6/ADC_1.h **** __STATIC_INLINE void ADC_1_SetLowLimit(uint32_t lowLimit);
  98:Generated_Source\PSoC6/ADC_1.h **** __STATIC_INLINE void ADC_1_SetHighLimit(uint32_t highLimit);
  99:Generated_Source\PSoC6/ADC_1.h **** __STATIC_INLINE void ADC_1_SetLimitMask(uint32_t limitMask);
 100:Generated_Source\PSoC6/ADC_1.h **** __STATIC_INLINE void ADC_1_SetSatMask(uint32_t satMask);
 101:Generated_Source\PSoC6/ADC_1.h **** __STATIC_INLINE cy_en_sar_status_t ADC_1_SetOffset(uint32_t chan, int16_t offset);
 102:Generated_Source\PSoC6/ADC_1.h **** __STATIC_INLINE cy_en_sar_status_t ADC_1_SetGain(uint32_t chan, int32_t adcGain);
 103:Generated_Source\PSoC6/ADC_1.h **** __STATIC_INLINE float32_t ADC_1_CountsTo_Volts(uint32_t chan, int16_t adcCounts);
 104:Generated_Source\PSoC6/ADC_1.h **** __STATIC_INLINE int16_t ADC_1_CountsTo_mVolts(uint32_t chan, int16_t adcCounts);
 105:Generated_Source\PSoC6/ADC_1.h **** __STATIC_INLINE int32_t ADC_1_CountsTo_uVolts(uint32_t chan, int16_t adcCounts);
 106:Generated_Source\PSoC6/ADC_1.h **** 
 107:Generated_Source\PSoC6/ADC_1.h **** /** @} general */
 108:Generated_Source\PSoC6/ADC_1.h **** 
 109:Generated_Source\PSoC6/ADC_1.h **** void ADC_1_SetChanMask(uint32_t enableMask);
 110:Generated_Source\PSoC6/ADC_1.h **** 
 111:Generated_Source\PSoC6/ADC_1.h **** /**
 112:Generated_Source\PSoC6/ADC_1.h **** * \addtogroup group_power
 113:Generated_Source\PSoC6/ADC_1.h **** * @{
 114:Generated_Source\PSoC6/ADC_1.h **** */
 115:Generated_Source\PSoC6/ADC_1.h **** __STATIC_INLINE void ADC_1_Sleep(void);
 116:Generated_Source\PSoC6/ADC_1.h **** __STATIC_INLINE void ADC_1_Wakeup(void);
 117:Generated_Source\PSoC6/ADC_1.h **** 
 118:Generated_Source\PSoC6/ADC_1.h **** /** @} power */
 119:Generated_Source\PSoC6/ADC_1.h **** 
 120:Generated_Source\PSoC6/ADC_1.h **** /**
 121:Generated_Source\PSoC6/ADC_1.h **** * \addtogroup group_interrupt
 122:Generated_Source\PSoC6/ADC_1.h **** * @{
 123:Generated_Source\PSoC6/ADC_1.h **** */
 124:Generated_Source\PSoC6/ADC_1.h **** void ADC_1_ISR(void);
 125:Generated_Source\PSoC6/ADC_1.h **** void ADC_1_IRQ_Enable(void);
 126:Generated_Source\PSoC6/ADC_1.h **** void ADC_1_IRQ_Disable(void);
 127:Generated_Source\PSoC6/ADC_1.h **** 
 128:Generated_Source\PSoC6/ADC_1.h **** /** @} interrupt */
 129:Generated_Source\PSoC6/ADC_1.h **** 
 130:Generated_Source\PSoC6/ADC_1.h **** /*******************************************************************************
 131:Generated_Source\PSoC6/ADC_1.h ****                                   Parameters
 132:Generated_Source\PSoC6/ADC_1.h **** The parameters that are set in the customizer are redefined as constants here.
 133:Generated_Source\PSoC6/ADC_1.h **** *******************************************************************************/
 134:Generated_Source\PSoC6/ADC_1.h **** 
 135:Generated_Source\PSoC6/ADC_1.h **** /*  Sample Mode setting constants */
 136:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_TOTAL_CONFIGS                (1ul)
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 85


 137:Generated_Source\PSoC6/ADC_1.h **** 
 138:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 139:Generated_Source\PSoC6/ADC_1.h **** /* Begin configuration 0 customizer defines                                   */
 140:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 141:Generated_Source\PSoC6/ADC_1.h **** 
 142:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_SAMPLE_RATE             (100000)
 143:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_CHANNEL_BASE            (0u)
 144:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_CHANNEL_COUNT           (1u)
 145:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_VREF_SEL_MASK           (0xc0u)
 146:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_NOMINAL_CLOCK_FREQ      (16666666u)
 147:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_CHANNEL_EN              (0x1u)
 148:Generated_Source\PSoC6/ADC_1.h **** 
 149:Generated_Source\PSoC6/ADC_1.h **** /* Sample Control Register */
 150:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_SINGLE_ENDED_FORMAT     (0uL)
 151:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_DIFFERENTIAL_FORMAT     (1uL)
 152:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_SAMPLES_AVERAGED        (0uL)
 153:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_RANGE_INTR_MASK         (0x0u)
 154:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_SATURATE_INTR_MASK      (0x0u)
 155:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_VNEG_INPUT_SEL          (7)
 156:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_SINGLE_PRESENT          (1)
 157:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_VREF_MV_VALUE           (1200)
 158:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_APERTURE_TIME0          (153uL)
 159:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_APERTURE_TIME1          (2uL)
 160:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_APERTURE_TIME2          (2uL)
 161:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_APERTURE_TIME3          (2uL)
 162:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_FREERUNNING             (1u)
 163:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_AVGERAGING_MODE         (2uL)
 164:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_LOW_LIMIT               (512u)
 165:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_HIGH_LIMIT              (3584u)
 166:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_RANGE_COND              (0uL)
 167:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_USE_SOC                 (0uL)
 168:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_VREF_PWR                (3uL)
 169:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_COMP_PWR                (3uL)
 170:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_COMP_DLY                (3uL)
 171:Generated_Source\PSoC6/ADC_1.h **** 
 172:Generated_Source\PSoC6/ADC_1.h **** /* Clock parameters*/
 173:Generated_Source\PSoC6/ADC_1.h **** #if (ADC_1_CLOCK_INTERNAL)
 174:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG0_CLOCKDIVIDER        (((CYDEV_CLK_PERICLK__HZ) / (ADC_1_CFG0_NOMINAL_CLOCK_FR
 175:Generated_Source\PSoC6/ADC_1.h **** #endif /* (ADC_1_CLOCK_INTERNAL) */
 176:Generated_Source\PSoC6/ADC_1.h **** 
 177:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 178:Generated_Source\PSoC6/ADC_1.h **** /* End configuration 0 customizer defines                                     */
 179:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 180:Generated_Source\PSoC6/ADC_1.h **** 
 181:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 182:Generated_Source\PSoC6/ADC_1.h **** /* Begin configuration 1 customizer defines                                   */
 183:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 184:Generated_Source\PSoC6/ADC_1.h **** 
 185:Generated_Source\PSoC6/ADC_1.h **** #if(ADC_1_TOTAL_CONFIGS > 1)
 186:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_SAMPLE_RATE             ()
 187:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_CHANNEL_BASE            (u)
 188:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_CHANNEL_COUNT           (u)
 189:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_VREF_SEL_MASK           (u)
 190:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_NOMINAL_CLOCK_FREQ      (u)
 191:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_CHANNEL_EN              (u)
 192:Generated_Source\PSoC6/ADC_1.h **** 
 193:Generated_Source\PSoC6/ADC_1.h ****     /* Sample Control Register */
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 86


 194:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_SINGLE_ENDED_FORMAT     (uL)
 195:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_DIFFERENTIAL_FORMAT     (uL)
 196:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_SAMPLES_AVERAGED        (uL)
 197:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_RANGE_INTR_MASK         (u)
 198:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_SATURATE_INTR_MASK      (u)
 199:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_VNEG_INPUT_SEL          ()
 200:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_SINGLE_PRESENT          ()
 201:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_VREF_MV_VALUE           ()
 202:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_APERTURE_TIME0          (uL)
 203:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_APERTURE_TIME1          (uL)
 204:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_APERTURE_TIME2          (uL)
 205:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_APERTURE_TIME3          (uL)
 206:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_FREERUNNING             (u)
 207:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_AVGERAGING_MODE         (uL)
 208:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_LOW_LIMIT               (u)
 209:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_HIGH_LIMIT              (u)
 210:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_RANGE_COND              (uL)
 211:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_USE_SOC                 (0uL)
 212:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_VREF_PWR                (uL)
 213:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_COMP_PWR                (uL)
 214:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_COMP_DLY                (uL)
 215:Generated_Source\PSoC6/ADC_1.h **** 
 216:Generated_Source\PSoC6/ADC_1.h ****     /* Clock parameters*/
 217:Generated_Source\PSoC6/ADC_1.h ****     #if (ADC_1_CLOCK_INTERNAL)
 218:Generated_Source\PSoC6/ADC_1.h ****         #define ADC_1_CFG1_CLOCKDIVIDER        (((CYDEV_CLK_PERICLK__HZ) / (ADC_1_CFG1_NOMINAL_CLOC
 219:Generated_Source\PSoC6/ADC_1.h ****     #endif /* (ADC_1_CLOCK_INTERNAL) */
 220:Generated_Source\PSoC6/ADC_1.h **** #endif /* #if(ADC_1_TOTAL_CONFIGS > 1) */
 221:Generated_Source\PSoC6/ADC_1.h **** 
 222:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 223:Generated_Source\PSoC6/ADC_1.h **** /* End configuration 1 customizer defines                                     */
 224:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 225:Generated_Source\PSoC6/ADC_1.h **** 
 226:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 227:Generated_Source\PSoC6/ADC_1.h **** /* Begin configuration 2 customizer defines                                         */
 228:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 229:Generated_Source\PSoC6/ADC_1.h **** 
 230:Generated_Source\PSoC6/ADC_1.h **** #if(ADC_1_TOTAL_CONFIGS > 2)
 231:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_SAMPLE_RATE             ()
 232:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_CHANNEL_BASE            (u)
 233:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_CHANNEL_COUNT           (u)
 234:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_VREF_SEL_MASK           (u)
 235:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_NOMINAL_CLOCK_FREQ      (u)
 236:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_CHANNEL_EN              (u)
 237:Generated_Source\PSoC6/ADC_1.h **** 
 238:Generated_Source\PSoC6/ADC_1.h ****     /* Sample Control Register */
 239:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_SINGLE_ENDED_FORMAT     (uL)
 240:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_DIFFERENTIAL_FORMAT     (uL)
 241:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_SAMPLES_AVERAGED        (uL)
 242:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_RANGE_INTR_MASK         (u)
 243:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_SATURATE_INTR_MASK      (u)
 244:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_VNEG_INPUT_SEL          ()
 245:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_SINGLE_PRESENT          ()
 246:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_VREF_MV_VALUE           ()
 247:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_APERTURE_TIME0          (uL)
 248:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_APERTURE_TIME1          (uL)
 249:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_APERTURE_TIME2          (uL)
 250:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_APERTURE_TIME3          (uL)
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 87


 251:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_FREERUNNING             (u)
 252:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_AVGERAGING_MODE         (uL)
 253:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_LOW_LIMIT               (u)
 254:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_HIGH_LIMIT              (u)
 255:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_RANGE_COND              (uL)
 256:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_USE_SOC                 (0uL)
 257:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_VREF_PWR                (uL)
 258:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_COMP_PWR                (uL)
 259:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_COMP_DLY                (uL)
 260:Generated_Source\PSoC6/ADC_1.h **** 
 261:Generated_Source\PSoC6/ADC_1.h ****     /* Clock parameters*/
 262:Generated_Source\PSoC6/ADC_1.h ****     #if (ADC_1_CLOCK_INTERNAL)
 263:Generated_Source\PSoC6/ADC_1.h ****         #define ADC_1_CFG2_CLOCKDIVIDER        (((CYDEV_CLK_PERICLK__HZ) / (ADC_1_CFG2_NOMINAL_CLOC
 264:Generated_Source\PSoC6/ADC_1.h ****     #endif /* (ADC_1_CLOCK_INTERNAL) */
 265:Generated_Source\PSoC6/ADC_1.h **** #endif /* (ADC_1_TOTAL_CONFIGS > 2) */
 266:Generated_Source\PSoC6/ADC_1.h **** 
 267:Generated_Source\PSoC6/ADC_1.h **** 
 268:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 269:Generated_Source\PSoC6/ADC_1.h **** /* End configuration 2 customizer defines                                     */
 270:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 271:Generated_Source\PSoC6/ADC_1.h **** 
 272:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 273:Generated_Source\PSoC6/ADC_1.h **** /* Begin configuration 3 customizer defines                                   */
 274:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 275:Generated_Source\PSoC6/ADC_1.h **** #if(ADC_1_TOTAL_CONFIGS > 3)
 276:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_SAMPLE_RATE             ()
 277:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_CHANNEL_BASE            (u)
 278:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_CHANNEL_COUNT           (u)
 279:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_VREF_SEL_MASK           (u)
 280:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_NOMINAL_CLOCK_FREQ      (u)
 281:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_CHANNEL_EN              (u)
 282:Generated_Source\PSoC6/ADC_1.h **** 
 283:Generated_Source\PSoC6/ADC_1.h ****     /* Sample Control Register */
 284:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_SINGLE_ENDED_FORMAT     (uL)
 285:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_DIFFERENTIAL_FORMAT     (uL)
 286:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_SAMPLES_AVERAGED        (uL)
 287:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_RANGE_INTR_MASK         (u)
 288:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_SATURATE_INTR_MASK      (u)
 289:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_VNEG_INPUT_SEL          ()
 290:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_SINGLE_PRESENT          ()
 291:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_VREF_MV_VALUE           ()
 292:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_APERTURE_TIME0          (uL)
 293:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_APERTURE_TIME1          (uL)
 294:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_APERTURE_TIME2          (uL)
 295:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_APERTURE_TIME3          (uL)
 296:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_FREERUNNING             (u)
 297:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_AVGERAGING_MODE         (uL)
 298:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_LOW_LIMIT               (u)
 299:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_HIGH_LIMIT              (u)
 300:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_RANGE_COND              (uL)
 301:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_USE_SOC                 (0uL)
 302:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_VREF_PWR                (uL)
 303:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_COMP_PWR                (uL)
 304:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_COMP_DLY                (uL)
 305:Generated_Source\PSoC6/ADC_1.h **** 
 306:Generated_Source\PSoC6/ADC_1.h ****     /* Clock parameters*/
 307:Generated_Source\PSoC6/ADC_1.h ****     #if (ADC_1_CLOCK_INTERNAL)
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 88


 308:Generated_Source\PSoC6/ADC_1.h ****         #define ADC_1_CFG3_CLOCKDIVIDER        (((CYDEV_CLK_PERICLK__HZ) / (ADC_1_CFG3_NOMINAL_CLOC
 309:Generated_Source\PSoC6/ADC_1.h ****     #endif /* (ADC_1_CLOCK_INTERNAL) */
 310:Generated_Source\PSoC6/ADC_1.h **** #endif /* (ADC_1_TOTAL_CONFIGS > 3) */
 311:Generated_Source\PSoC6/ADC_1.h **** 
 312:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 313:Generated_Source\PSoC6/ADC_1.h **** /* End configuration 3 customizer defines                                     */
 314:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 315:Generated_Source\PSoC6/ADC_1.h **** 
 316:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_DEFAULT_SAMPLE_MODE_SEL      (0u)
 317:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_FREERUNNING                  (1u)
 318:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_HARDWARESOC                  (1u)
 319:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_NEG_SEL_VSSA_KELVIN          (0x0uL)
 320:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_NEG_SEL_VREF                 (0x7uL)
 321:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_PWR_CTRL_VREF_NORMAL_PWR     (0x0uL)
 322:Generated_Source\PSoC6/ADC_1.h **** 
 323:Generated_Source\PSoC6/ADC_1.h **** /** ADC_1_TOTAL_CHANNELS_NUM
 324:Generated_Source\PSoC6/ADC_1.h **** * This constant represents the number of input channels available for scanning.
 325:Generated_Source\PSoC6/ADC_1.h **** */
 326:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_TOTAL_CHANNELS_NUM           (1u)
 327:Generated_Source\PSoC6/ADC_1.h **** 
 328:Generated_Source\PSoC6/ADC_1.h **** /*******************************************************************************
 329:Generated_Source\PSoC6/ADC_1.h **** *    Variables with External Linkage
 330:Generated_Source\PSoC6/ADC_1.h **** *******************************************************************************/
 331:Generated_Source\PSoC6/ADC_1.h **** /**
 332:Generated_Source\PSoC6/ADC_1.h **** * \addtogroup group_globals
 333:Generated_Source\PSoC6/ADC_1.h **** * Globals are noted in the descriptions of the functions that use globals.
 334:Generated_Source\PSoC6/ADC_1.h **** * They are marked with (R), (W), or (RW) noting whether the variable is read,
 335:Generated_Source\PSoC6/ADC_1.h **** * write, or read/write.
 336:Generated_Source\PSoC6/ADC_1.h **** * @{
 337:Generated_Source\PSoC6/ADC_1.h **** */
 338:Generated_Source\PSoC6/ADC_1.h **** 
 339:Generated_Source\PSoC6/ADC_1.h **** /** ADC_1_initVar
 340:Generated_Source\PSoC6/ADC_1.h **** * The ADC_1_initVar variable is used to indicate
 341:Generated_Source\PSoC6/ADC_1.h **** * initial configuration of this component. The variable is initialized to zero and
 342:Generated_Source\PSoC6/ADC_1.h **** * set to 1 the first time ADC_1_Start() is called. This allows for
 343:Generated_Source\PSoC6/ADC_1.h **** * component initialization without reinitialization in all subsequent calls to the
 344:Generated_Source\PSoC6/ADC_1.h **** * ADC_1_Start() routine.
 345:Generated_Source\PSoC6/ADC_1.h **** *
 346:Generated_Source\PSoC6/ADC_1.h **** * If reinitialization of the component is required, then the ADC_1_Init() function
 347:Generated_Source\PSoC6/ADC_1.h **** * can be called before the ADC_1_Start() or ADC_1_Enable()
 348:Generated_Source\PSoC6/ADC_1.h **** * functions.
 349:Generated_Source\PSoC6/ADC_1.h **** */
 350:Generated_Source\PSoC6/ADC_1.h **** extern uint8_t ADC_1_initVar;
 351:Generated_Source\PSoC6/ADC_1.h **** extern uint8_t ADC_1_selected;
 352:Generated_Source\PSoC6/ADC_1.h **** extern uint32_t ADC_1_currentConfig;
 353:Generated_Source\PSoC6/ADC_1.h **** 
 354:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_INIT_VAR_INIT_FLAG     (0x01u)
 355:Generated_Source\PSoC6/ADC_1.h **** 
 356:Generated_Source\PSoC6/ADC_1.h **** extern const ADC_1_CONFIG_STRUCT ADC_1_allConfigs[ADC_1_TOTAL_CONFIGS];
 357:Generated_Source\PSoC6/ADC_1.h **** 
 358:Generated_Source\PSoC6/ADC_1.h **** /* SysPm callback structure for deep sleep entry and exit.
 359:Generated_Source\PSoC6/ADC_1.h ****  * Call the Cy_SysPm_RegisterCallback function with this
 360:Generated_Source\PSoC6/ADC_1.h ****  * structure before calling Cy_SysPm_DeepSleep.
 361:Generated_Source\PSoC6/ADC_1.h **** */
 362:Generated_Source\PSoC6/ADC_1.h **** extern cy_stc_syspm_callback_t ADC_1_DeepSleepCallbackStruct;
 363:Generated_Source\PSoC6/ADC_1.h **** 
 364:Generated_Source\PSoC6/ADC_1.h **** /** @} globals */
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 89


 365:Generated_Source\PSoC6/ADC_1.h **** 
 366:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 367:Generated_Source\PSoC6/ADC_1.h **** /* *******************Global MUX_SWITCH0 Definitions ************************ */
 368:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 369:Generated_Source\PSoC6/ADC_1.h **** #if(ADC_1_CFG0_VNEG_INPUT_SEL == ADC_1_NEG_SEL_VSSA_KELVIN)
 370:Generated_Source\PSoC6/ADC_1.h ****     /* Do not connect VSSA to VMINUS when one channel in differential mode used */
 371:Generated_Source\PSoC6/ADC_1.h ****     #if((ADC_1_TOTAL_CHANNELS_NUM == 1u) && (ADC_1_CFG0_SINGLE_PRESENT == 0u))
 372:Generated_Source\PSoC6/ADC_1.h ****         #define ADC_1_MUX_SWITCH0_INIT      0u
 373:Generated_Source\PSoC6/ADC_1.h ****     #else    /* multiple channels or one single ended channel */
 374:Generated_Source\PSoC6/ADC_1.h ****         #define ADC_1_MUX_SWITCH0_INIT      1u
 375:Generated_Source\PSoC6/ADC_1.h ****     #endif /* ((ADC_1_TOTAL_CHANNELS_NUM == 1u) && (ADC_1_CFG0_SINGLE_PRESENT == 0u)) */
 376:Generated_Source\PSoC6/ADC_1.h **** #else
 377:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_MUX_SWITCH0_INIT          0u
 378:Generated_Source\PSoC6/ADC_1.h **** #endif /* ADC_1_CFG0_VNEG_INPUT_SEL == ADC_1_NEG_SEL_VSSA_KELVIN */
 379:Generated_Source\PSoC6/ADC_1.h **** 
 380:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 381:Generated_Source\PSoC6/ADC_1.h **** /* Begin configuration 0 calculated defines                                   */
 382:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 383:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_SAMPLE_TIME01_INIT \
 384:Generated_Source\PSoC6/ADC_1.h ****         ((ADC_1_CFG0_APERTURE_TIME0 \
 385:Generated_Source\PSoC6/ADC_1.h ****         << SAR_SAMPLE_TIME01_SAMPLE_TIME0_Pos) \
 386:Generated_Source\PSoC6/ADC_1.h ****         | (ADC_1_CFG0_APERTURE_TIME1 \
 387:Generated_Source\PSoC6/ADC_1.h ****         << SAR_SAMPLE_TIME01_SAMPLE_TIME1_Pos))
 388:Generated_Source\PSoC6/ADC_1.h **** 
 389:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_SAMPLE_TIME23_INIT \
 390:Generated_Source\PSoC6/ADC_1.h ****         ((ADC_1_CFG0_APERTURE_TIME2 \
 391:Generated_Source\PSoC6/ADC_1.h ****         << SAR_SAMPLE_TIME23_SAMPLE_TIME2_Pos) \
 392:Generated_Source\PSoC6/ADC_1.h ****         | (ADC_1_CFG0_APERTURE_TIME3 \
 393:Generated_Source\PSoC6/ADC_1.h ****         << SAR_SAMPLE_TIME23_SAMPLE_TIME3_Pos))
 394:Generated_Source\PSoC6/ADC_1.h **** 
 395:Generated_Source\PSoC6/ADC_1.h **** /* Enable soc pin if used */
 396:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_DSI_TRIGGER_EN_INIT \
 397:Generated_Source\PSoC6/ADC_1.h ****         (ADC_1_CFG0_USE_SOC \
 398:Generated_Source\PSoC6/ADC_1.h ****         << SAR_SAMPLE_CTRL_DSI_TRIGGER_EN_Pos)
 399:Generated_Source\PSoC6/ADC_1.h **** 
 400:Generated_Source\PSoC6/ADC_1.h **** /* Set soc operation to edge or level based on sample mode */
 401:Generated_Source\PSoC6/ADC_1.h **** #if(ADC_1_CFG0_FREERUNNING == ADC_1_FREERUNNING)
 402:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG0_DSI_TRIGGER_LEVEL_INIT    (SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_Msk)
 403:Generated_Source\PSoC6/ADC_1.h **** #else /* Edge trigger */
 404:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG0_DSI_TRIGGER_LEVEL_INIT    (0u)
 405:Generated_Source\PSoC6/ADC_1.h **** #endif /* End ADC_1_CFG0_FREERUNNING == ADC_1_FREERUNNING */
 406:Generated_Source\PSoC6/ADC_1.h **** 
 407:Generated_Source\PSoC6/ADC_1.h **** /* Set SE_NEG_INPUT */
 408:Generated_Source\PSoC6/ADC_1.h **** #if(ADC_1_CFG0_VNEG_INPUT_SEL == ADC_1_NEG_SEL_VSSA_KELVIN)
 409:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG0_SE_NEG_INPUT_INIT \
 410:Generated_Source\PSoC6/ADC_1.h ****             ((uint32)(ADC_1_NEG_SEL_VSSA_KELVIN \
 411:Generated_Source\PSoC6/ADC_1.h ****             << SAR_CTRL_NEG_SEL_Pos ))
 412:Generated_Source\PSoC6/ADC_1.h **** #elif(ADC_1_CFG0_VNEG_INPUT_SEL == ADC_1_NEG_SEL_VREF)
 413:Generated_Source\PSoC6/ADC_1.h **** 
 414:Generated_Source\PSoC6/ADC_1.h ****     /* Do not connect VNEG to VREF when one channel in differential mode used */
 415:Generated_Source\PSoC6/ADC_1.h ****     /* Only needed for config 0 since 2+ configs == 2+ channels */
 416:Generated_Source\PSoC6/ADC_1.h ****     #if((ADC_1_CFG0_CHANNEL_COUNT == 1u) && (ADC_1_CFG0_SINGLE_PRESENT == 0u))
 417:Generated_Source\PSoC6/ADC_1.h ****         #define ADC_1_CFG0_SE_NEG_INPUT_INIT     0u
 418:Generated_Source\PSoC6/ADC_1.h ****     #else    /* multiple channels or one single channel */
 419:Generated_Source\PSoC6/ADC_1.h ****         #define ADC_1_CFG0_SE_NEG_INPUT_INIT     (ADC_1_NEG_SEL_VREF \
 420:Generated_Source\PSoC6/ADC_1.h ****                                                             << SAR_CTRL_NEG_SEL_Pos )
 421:Generated_Source\PSoC6/ADC_1.h ****     #endif /* (ADC_1_CFG0_CHANNEL_COUNT == 1u) && (ADC_1_CFG0_CHANNELS_MODE != 0u) */
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 90


 422:Generated_Source\PSoC6/ADC_1.h **** #elif (ADC_1_CFG0_SINGLE_PRESENT != 0u)
 423:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG0_SE_NEG_INPUT_INIT         ADC_1_CFG0_NEG_OTHER
 424:Generated_Source\PSoC6/ADC_1.h **** #else
 425:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG0_SE_NEG_INPUT_INIT         0u
 426:Generated_Source\PSoC6/ADC_1.h **** #endif /* ADC_1_CFG0_VNEG_INPUT_SEL == ADC_1_NEG_SEL_VSSA_KELVIN */
 427:Generated_Source\PSoC6/ADC_1.h **** 
 428:Generated_Source\PSoC6/ADC_1.h **** #if(ADC_1_TOTAL_CHANNELS_NUM > 1u)
 429:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG0_NEG_OTHER                 (uint16)((uint16)ADC_1_SARMUX__VNEG0 << SAR_CTRL_N
 430:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG0_SWITCH_CONF_INIT          0u
 431:Generated_Source\PSoC6/ADC_1.h **** #else /* Disable SAR sequencer from enabling routing switches in single channel mode */
 432:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG0_SWITCH_CONF_INIT          SAR_CTRL_SWITCH_DISABLE_Msk
 433:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG0_NEG_OTHER                 0u
 434:Generated_Source\PSoC6/ADC_1.h **** #endif /* ADC_1_CFG0_CHANNEL_COUNT > 1u */
 435:Generated_Source\PSoC6/ADC_1.h **** 
 436:Generated_Source\PSoC6/ADC_1.h **** /* If the SAR is configured for multiple channels, always set SAR_HW_CTRL_NEGVREF to 1 */
 437:Generated_Source\PSoC6/ADC_1.h **** #if(ADC_1_TOTAL_CHANNELS_NUM == 1u)
 438:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG0_HW_CTRL_NEGVREF_INIT      0u
 439:Generated_Source\PSoC6/ADC_1.h **** #else
 440:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG0_HW_CTRL_NEGVREF_INIT      SAR_CTRL_SAR_HW_CTRL_NEGVREF_Msk
 441:Generated_Source\PSoC6/ADC_1.h **** #endif /* ADC_1_CFG0_CHANNEL_COUNT == 1u */
 442:Generated_Source\PSoC6/ADC_1.h **** 
 443:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_POWER_INIT  (ADC_1_PWR_CTRL_VREF_NORMAL_PWR)
 444:Generated_Source\PSoC6/ADC_1.h **** 
 445:Generated_Source\PSoC6/ADC_1.h **** /* SAMPLE_CTRL initial values */
 446:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_SE_RESULT_FORMAT_INIT \
 447:Generated_Source\PSoC6/ADC_1.h ****         (ADC_1_CFG0_SINGLE_ENDED_FORMAT \
 448:Generated_Source\PSoC6/ADC_1.h ****         << SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_Pos)
 449:Generated_Source\PSoC6/ADC_1.h **** 
 450:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_DIFF_RESULT_FORMAT_INIT \
 451:Generated_Source\PSoC6/ADC_1.h ****         (ADC_1_CFG0_DIFFERENTIAL_FORMAT \
 452:Generated_Source\PSoC6/ADC_1.h ****         << SAR_SAMPLE_CTRL_DIFFERENTIAL_SIGNED_Pos)
 453:Generated_Source\PSoC6/ADC_1.h **** 
 454:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_AVG_SAMPLES_NUM_INIT \
 455:Generated_Source\PSoC6/ADC_1.h ****         (ADC_1_CFG0_SAMPLES_AVERAGED \
 456:Generated_Source\PSoC6/ADC_1.h ****         << SAR_SAMPLE_CTRL_AVG_CNT_Pos)
 457:Generated_Source\PSoC6/ADC_1.h **** 
 458:Generated_Source\PSoC6/ADC_1.h **** /* Combination of Average Mode and Average Shift */
 459:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_AVG_MODE_INIT \
 460:Generated_Source\PSoC6/ADC_1.h ****         (ADC_1_CFG0_AVGERAGING_MODE \
 461:Generated_Source\PSoC6/ADC_1.h ****         << SAR_SAMPLE_CTRL_AVG_SHIFT_Pos)
 462:Generated_Source\PSoC6/ADC_1.h **** 
 463:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_TRIGGER_OUT_INIT      (0u)
 464:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_UAB_SCAN_MODE_INIT    (0u)
 465:Generated_Source\PSoC6/ADC_1.h **** 
 466:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_VREF_POWER_INIT  \
 467:Generated_Source\PSoC6/ADC_1.h ****         (ADC_1_CFG0_VREF_PWR \
 468:Generated_Source\PSoC6/ADC_1.h ****         << SAR_CTRL_PWR_CTRL_VREF_Pos)
 469:Generated_Source\PSoC6/ADC_1.h **** 
 470:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_COMP_PWR_INIT  \
 471:Generated_Source\PSoC6/ADC_1.h ****         (ADC_1_CFG0_COMP_PWR \
 472:Generated_Source\PSoC6/ADC_1.h ****         << SAR_CTRL_COMP_PWR_Pos)
 473:Generated_Source\PSoC6/ADC_1.h **** 
 474:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_COMP_DLY_INIT  \
 475:Generated_Source\PSoC6/ADC_1.h ****         (ADC_1_CFG0_COMP_DLY \
 476:Generated_Source\PSoC6/ADC_1.h ****         << SAR_CTRL_COMP_DLY_Pos)
 477:Generated_Source\PSoC6/ADC_1.h **** 
 478:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_CTRL_INIT  \
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 91


 479:Generated_Source\PSoC6/ADC_1.h ****         (ADC_1_CFG0_VREF_POWER_INIT \
 480:Generated_Source\PSoC6/ADC_1.h ****         | ADC_1_CFG0_VREF_SEL_MASK \
 481:Generated_Source\PSoC6/ADC_1.h ****         | ADC_1_CFG0_SE_NEG_INPUT_INIT \
 482:Generated_Source\PSoC6/ADC_1.h ****         | ADC_1_CFG0_HW_CTRL_NEGVREF_INIT \
 483:Generated_Source\PSoC6/ADC_1.h ****         | ADC_1_CFG0_COMP_DLY_INIT \
 484:Generated_Source\PSoC6/ADC_1.h ****         | SAR_CTRL_REFBUF_EN_Msk \
 485:Generated_Source\PSoC6/ADC_1.h ****         | ADC_1_CFG0_COMP_PWR_INIT \
 486:Generated_Source\PSoC6/ADC_1.h ****         | SAR_CTRL_DSI_SYNC_CONFIG_Msk  \
 487:Generated_Source\PSoC6/ADC_1.h ****         | ADC_1_CFG0_SWITCH_CONF_INIT )
 488:Generated_Source\PSoC6/ADC_1.h **** 
 489:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_SAMPLE_CTRL_INIT \
 490:Generated_Source\PSoC6/ADC_1.h ****         (ADC_1_CFG0_SE_RESULT_FORMAT_INIT \
 491:Generated_Source\PSoC6/ADC_1.h ****         | ADC_1_CFG0_DIFF_RESULT_FORMAT_INIT \
 492:Generated_Source\PSoC6/ADC_1.h ****         | ADC_1_CFG0_AVG_SAMPLES_NUM_INIT \
 493:Generated_Source\PSoC6/ADC_1.h ****         | ADC_1_CFG0_AVG_MODE_INIT \
 494:Generated_Source\PSoC6/ADC_1.h ****         | ADC_1_CFG0_DSI_TRIGGER_LEVEL_INIT \
 495:Generated_Source\PSoC6/ADC_1.h ****         | ADC_1_CFG0_DSI_TRIGGER_EN_INIT \
 496:Generated_Source\PSoC6/ADC_1.h ****         | ADC_1_CFG0_UAB_SCAN_MODE_INIT \
 497:Generated_Source\PSoC6/ADC_1.h ****         | SAR_SAMPLE_CTRL_VALID_IGNORE_Msk \
 498:Generated_Source\PSoC6/ADC_1.h ****         | ADC_1_CFG0_TRIGGER_OUT_INIT \
 499:Generated_Source\PSoC6/ADC_1.h ****         | SAR_SAMPLE_CTRL_EOS_DSI_OUT_EN_Msk \
 500:Generated_Source\PSoC6/ADC_1.h **** )
 501:Generated_Source\PSoC6/ADC_1.h **** 
 502:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_RANGE_THRES_INIT \
 503:Generated_Source\PSoC6/ADC_1.h ****         (ADC_1_CFG0_LOW_LIMIT \
 504:Generated_Source\PSoC6/ADC_1.h ****         | (uint32)((uint32)ADC_1_CFG0_HIGH_LIMIT \
 505:Generated_Source\PSoC6/ADC_1.h ****         << SAR_RANGE_THRES_RANGE_HIGH_Pos))
 506:Generated_Source\PSoC6/ADC_1.h **** 
 507:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_RANGE_COND_INIT   (cy_en_sar_range_detect_condition_t)ADC_1_CFG0_RANGE_COND
 508:Generated_Source\PSoC6/ADC_1.h **** 
 509:Generated_Source\PSoC6/ADC_1.h **** /* Misc Config
 510:Generated_Source\PSoC6/ADC_1.h ****     [0] - Freerunning: Set if the sample mode is freerunning
 511:Generated_Source\PSoC6/ADC_1.h **** */
 512:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_MISC_CONFIG_INIT \
 513:Generated_Source\PSoC6/ADC_1.h ****         (ADC_1_CFG0_FREERUNNING)
 514:Generated_Source\PSoC6/ADC_1.h **** 
 515:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 516:Generated_Source\PSoC6/ADC_1.h **** /* End configuration 0 calculated defines                                     */
 517:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 518:Generated_Source\PSoC6/ADC_1.h **** 
 519:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 520:Generated_Source\PSoC6/ADC_1.h **** /* Begin configuration 1 calculated defines                                   */
 521:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 522:Generated_Source\PSoC6/ADC_1.h **** #if(ADC_1_TOTAL_CONFIGS > 1)
 523:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_SAMPLE_TIME01_INIT \
 524:Generated_Source\PSoC6/ADC_1.h ****             ((ADC_1_CFG1_APERTURE_TIME0 \
 525:Generated_Source\PSoC6/ADC_1.h ****             << SAR_SAMPLE_TIME01_SAMPLE_TIME0_Pos) \
 526:Generated_Source\PSoC6/ADC_1.h ****             | (ADC_1_CFG1_APERTURE_TIME1 \
 527:Generated_Source\PSoC6/ADC_1.h ****             << SAR_SAMPLE_TIME01_SAMPLE_TIME1_Pos))
 528:Generated_Source\PSoC6/ADC_1.h **** 
 529:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_SAMPLE_TIME23_INIT \
 530:Generated_Source\PSoC6/ADC_1.h ****             ((ADC_1_CFG1_APERTURE_TIME2 \
 531:Generated_Source\PSoC6/ADC_1.h ****             << SAR_SAMPLE_TIME23_SAMPLE_TIME2_Pos) \
 532:Generated_Source\PSoC6/ADC_1.h ****             | (ADC_1_CFG1_APERTURE_TIME3 \
 533:Generated_Source\PSoC6/ADC_1.h ****             << SAR_SAMPLE_TIME23_SAMPLE_TIME3_Pos))
 534:Generated_Source\PSoC6/ADC_1.h **** 
 535:Generated_Source\PSoC6/ADC_1.h ****     /* Enable soc pin if used */
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 92


 536:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_DSI_TRIGGER_EN_INIT \
 537:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG1_USE_SOC \
 538:Generated_Source\PSoC6/ADC_1.h ****             << SAR_SAMPLE_CTRL_DSI_TRIGGER_EN_Pos)
 539:Generated_Source\PSoC6/ADC_1.h **** 
 540:Generated_Source\PSoC6/ADC_1.h ****     /* Set soc operation to edge or level based on sample mode */
 541:Generated_Source\PSoC6/ADC_1.h ****     #if(ADC_1_CFG1_FREERUNNING == ADC_1_FREERUNNING)
 542:Generated_Source\PSoC6/ADC_1.h ****         #define ADC_1_CFG1_DSI_TRIGGER_LEVEL_INIT    (SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_Msk)
 543:Generated_Source\PSoC6/ADC_1.h ****     #else /* Edge trigger */
 544:Generated_Source\PSoC6/ADC_1.h ****         #define ADC_1_CFG1_DSI_TRIGGER_LEVEL_INIT    (0u)
 545:Generated_Source\PSoC6/ADC_1.h ****     #endif /* End ADC_1_CFG1_FREERUNNING == ADC_1_FREERUNNING */
 546:Generated_Source\PSoC6/ADC_1.h **** 
 547:Generated_Source\PSoC6/ADC_1.h ****     /* Set SE_NEG_INPUT */
 548:Generated_Source\PSoC6/ADC_1.h ****     #if(ADC_1_CFG1_VNEG_INPUT_SEL == ADC_1_NEG_SEL_VSSA_KELVIN)
 549:Generated_Source\PSoC6/ADC_1.h ****         #define ADC_1_CFG1_SE_NEG_INPUT_INIT \
 550:Generated_Source\PSoC6/ADC_1.h ****             ((uint32)(ADC_1_NEG_SEL_VSSA_KELVIN \
 551:Generated_Source\PSoC6/ADC_1.h ****             << SAR_CTRL_NEG_SEL_Pos ))
 552:Generated_Source\PSoC6/ADC_1.h ****     #elif(ADC_1_CFG1_VNEG_INPUT_SEL == ADC_1_NEG_SEL_VREF)
 553:Generated_Source\PSoC6/ADC_1.h ****         #define ADC_1_CFG1_SE_NEG_INPUT_INIT     (ADC_1_NEG_SEL_VREF \
 554:Generated_Source\PSoC6/ADC_1.h ****                                                             << SAR_CTRL_NEG_SEL_Pos )
 555:Generated_Source\PSoC6/ADC_1.h ****     #elif (ADC_1_CFG1_SINGLE_PRESENT != 0u)
 556:Generated_Source\PSoC6/ADC_1.h ****         #define ADC_1_CFG1_SE_NEG_INPUT_INIT         ADC_1_CFG1_NEG_OTHER
 557:Generated_Source\PSoC6/ADC_1.h ****     #else
 558:Generated_Source\PSoC6/ADC_1.h ****         #define ADC_1_CFG1_SE_NEG_INPUT_INIT         0u
 559:Generated_Source\PSoC6/ADC_1.h ****     #endif /* ADC_1_CFG1_VNEG_INPUT_SEL == ADC_1_NEG_SEL_VSSA_KELVIN */
 560:Generated_Source\PSoC6/ADC_1.h **** 
 561:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_NEG_OTHER                 (uint16)((uint16)ADC_1_SARMUX__VNEG1 << SAR_CTRL_N
 562:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_SWITCH_CONF_INIT          0u
 563:Generated_Source\PSoC6/ADC_1.h **** 
 564:Generated_Source\PSoC6/ADC_1.h ****     /* If the SAR is configured for multiple channels, always set SAR_HW_CTRL_NEGVREF to 1 */
 565:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_HW_CTRL_NEGVREF_INIT      SAR_CTRL_SAR_HW_CTRL_NEGVREF_Msk
 566:Generated_Source\PSoC6/ADC_1.h **** 
 567:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_POWER_INIT  (ADC_1_PWR_CTRL_VREF_NORMAL_PWR)
 568:Generated_Source\PSoC6/ADC_1.h **** 
 569:Generated_Source\PSoC6/ADC_1.h ****     /* SAMPLE_CTRL initial values */
 570:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_SE_RESULT_FORMAT_INIT \
 571:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG1_SINGLE_ENDED_FORMAT \
 572:Generated_Source\PSoC6/ADC_1.h ****             << SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_Pos)
 573:Generated_Source\PSoC6/ADC_1.h **** 
 574:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_DIFF_RESULT_FORMAT_INIT \
 575:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG1_DIFFERENTIAL_FORMAT \
 576:Generated_Source\PSoC6/ADC_1.h ****             << SAR_SAMPLE_CTRL_DIFFERENTIAL_SIGNED_Pos)
 577:Generated_Source\PSoC6/ADC_1.h **** 
 578:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_AVG_SAMPLES_NUM_INIT \
 579:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG1_SAMPLES_AVERAGED \
 580:Generated_Source\PSoC6/ADC_1.h ****             << SAR_SAMPLE_CTRL_AVG_CNT_Pos)
 581:Generated_Source\PSoC6/ADC_1.h **** 
 582:Generated_Source\PSoC6/ADC_1.h ****     /* Combination of Average Mode and Average Shift */
 583:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_AVG_MODE_INIT \
 584:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG1_AVGERAGING_MODE \
 585:Generated_Source\PSoC6/ADC_1.h ****             << SAR_SAMPLE_CTRL_AVG_SHIFT_Pos)
 586:Generated_Source\PSoC6/ADC_1.h **** 
 587:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_TRIGGER_OUT_INIT      (0u)
 588:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_UAB_SCAN_MODE_INIT    (0u)
 589:Generated_Source\PSoC6/ADC_1.h **** 
 590:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_VREF_POWER_INIT  \
 591:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG1_VREF_PWR \
 592:Generated_Source\PSoC6/ADC_1.h ****             << SAR_CTRL_PWR_CTRL_VREF_Pos)
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 93


 593:Generated_Source\PSoC6/ADC_1.h **** 
 594:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_COMP_PWR_INIT  \
 595:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG1_COMP_PWR \
 596:Generated_Source\PSoC6/ADC_1.h ****             << SAR_CTRL_COMP_PWR_Pos)
 597:Generated_Source\PSoC6/ADC_1.h **** 
 598:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_COMP_DLY_INIT  \
 599:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG1_COMP_DLY \
 600:Generated_Source\PSoC6/ADC_1.h ****             << SAR_CTRL_COMP_DLY_Pos)
 601:Generated_Source\PSoC6/ADC_1.h **** 
 602:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_CTRL_INIT  \
 603:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG1_VREF_POWER_INIT \
 604:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG1_VREF_SEL_MASK \
 605:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG1_SE_NEG_INPUT_INIT \
 606:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG1_HW_CTRL_NEGVREF_INIT \
 607:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG1_COMP_DLY_INIT \
 608:Generated_Source\PSoC6/ADC_1.h ****             | SAR_CTRL_REFBUF_EN_Msk \
 609:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG1_COMP_PWR_INIT \
 610:Generated_Source\PSoC6/ADC_1.h ****             | SAR_CTRL_DSI_SYNC_CONFIG_Msk  \
 611:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG1_SWITCH_CONF_INIT )
 612:Generated_Source\PSoC6/ADC_1.h **** 
 613:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_SAMPLE_CTRL_INIT \
 614:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG1_SE_RESULT_FORMAT_INIT \
 615:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG1_DIFF_RESULT_FORMAT_INIT \
 616:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG1_AVG_SAMPLES_NUM_INIT \
 617:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG1_AVG_MODE_INIT \
 618:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG1_DSI_TRIGGER_LEVEL_INIT \
 619:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG1_DSI_TRIGGER_EN_INIT \
 620:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG1_UAB_SCAN_MODE_INIT \
 621:Generated_Source\PSoC6/ADC_1.h ****             | SAR_SAMPLE_CTRL_VALID_IGNORE_Msk \
 622:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG1_TRIGGER_OUT_INIT \
 623:Generated_Source\PSoC6/ADC_1.h ****             | SAR_SAMPLE_CTRL_EOS_DSI_OUT_EN_Msk \
 624:Generated_Source\PSoC6/ADC_1.h ****     )
 625:Generated_Source\PSoC6/ADC_1.h **** 
 626:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_RANGE_THRES_INIT \
 627:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG1_LOW_LIMIT \
 628:Generated_Source\PSoC6/ADC_1.h ****             | (uint32)((uint32)ADC_1_CFG1_HIGH_LIMIT \
 629:Generated_Source\PSoC6/ADC_1.h ****             << SAR_RANGE_THRES_RANGE_HIGH_Pos))
 630:Generated_Source\PSoC6/ADC_1.h **** 
 631:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_RANGE_COND_INIT   (cy_en_sar_range_detect_condition_t)ADC_1_CFG1_RANGE_COND
 632:Generated_Source\PSoC6/ADC_1.h **** 
 633:Generated_Source\PSoC6/ADC_1.h ****     /* Misc Config
 634:Generated_Source\PSoC6/ADC_1.h ****         [0] - Freerunning: Set if the sample mode is freerunning
 635:Generated_Source\PSoC6/ADC_1.h ****     */
 636:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_MISC_CONFIG_INIT \
 637:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG1_FREERUNNING)
 638:Generated_Source\PSoC6/ADC_1.h **** #endif /* ADC_1_TOTAL_CONFIGS > 1 */
 639:Generated_Source\PSoC6/ADC_1.h **** 
 640:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 641:Generated_Source\PSoC6/ADC_1.h **** /* End configuration 1 calculated defines                                     */
 642:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 643:Generated_Source\PSoC6/ADC_1.h **** 
 644:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 645:Generated_Source\PSoC6/ADC_1.h **** /* Begin configuration 2 calculated defines                                   */
 646:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 647:Generated_Source\PSoC6/ADC_1.h **** #if(ADC_1_TOTAL_CONFIGS > 2)
 648:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_SAMPLE_TIME01_INIT \
 649:Generated_Source\PSoC6/ADC_1.h ****             ((ADC_1_CFG2_APERTURE_TIME0 \
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 94


 650:Generated_Source\PSoC6/ADC_1.h ****             << SAR_SAMPLE_TIME01_SAMPLE_TIME0_Pos) \
 651:Generated_Source\PSoC6/ADC_1.h ****             | (ADC_1_CFG2_APERTURE_TIME1 \
 652:Generated_Source\PSoC6/ADC_1.h ****             << SAR_SAMPLE_TIME01_SAMPLE_TIME1_Pos))
 653:Generated_Source\PSoC6/ADC_1.h **** 
 654:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_SAMPLE_TIME23_INIT \
 655:Generated_Source\PSoC6/ADC_1.h ****             ((ADC_1_CFG2_APERTURE_TIME2 \
 656:Generated_Source\PSoC6/ADC_1.h ****             << SAR_SAMPLE_TIME23_SAMPLE_TIME2_Pos) \
 657:Generated_Source\PSoC6/ADC_1.h ****             | (ADC_1_CFG2_APERTURE_TIME3 \
 658:Generated_Source\PSoC6/ADC_1.h ****             << SAR_SAMPLE_TIME23_SAMPLE_TIME3_Pos))
 659:Generated_Source\PSoC6/ADC_1.h **** 
 660:Generated_Source\PSoC6/ADC_1.h ****     /* Enable soc pin if used */
 661:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_DSI_TRIGGER_EN_INIT \
 662:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG2_USE_SOC \
 663:Generated_Source\PSoC6/ADC_1.h ****             << SAR_SAMPLE_CTRL_DSI_TRIGGER_EN_Pos)
 664:Generated_Source\PSoC6/ADC_1.h **** 
 665:Generated_Source\PSoC6/ADC_1.h ****     /* Set soc operation to edge or level based on sample mode */
 666:Generated_Source\PSoC6/ADC_1.h ****     #if(ADC_1_CFG2_FREERUNNING == ADC_1_FREERUNNING)
 667:Generated_Source\PSoC6/ADC_1.h ****         #define ADC_1_CFG2_DSI_TRIGGER_LEVEL_INIT    (SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_Msk)
 668:Generated_Source\PSoC6/ADC_1.h ****     #else /* Edge trigger */
 669:Generated_Source\PSoC6/ADC_1.h ****         #define ADC_1_CFG2_DSI_TRIGGER_LEVEL_INIT    (0u)
 670:Generated_Source\PSoC6/ADC_1.h ****     #endif /* End ADC_1_CFG2_FREERUNNING == ADC_1_FREERUNNING */
 671:Generated_Source\PSoC6/ADC_1.h **** 
 672:Generated_Source\PSoC6/ADC_1.h ****     /* Set SE_NEG_INPUT */
 673:Generated_Source\PSoC6/ADC_1.h ****     #if(ADC_1_CFG2_VNEG_INPUT_SEL == ADC_1_NEG_SEL_VSSA_KELVIN)
 674:Generated_Source\PSoC6/ADC_1.h ****         #define ADC_1_CFG2_SE_NEG_INPUT_INIT \
 675:Generated_Source\PSoC6/ADC_1.h ****             ((uint32)(ADC_1_NEG_SEL_VSSA_KELVIN \
 676:Generated_Source\PSoC6/ADC_1.h ****             << SAR_CTRL_NEG_SEL_Pos ))
 677:Generated_Source\PSoC6/ADC_1.h ****     #elif(ADC_1_CFG2_VNEG_INPUT_SEL == ADC_1_NEG_SEL_VREF)
 678:Generated_Source\PSoC6/ADC_1.h ****         #define ADC_1_CFG2_SE_NEG_INPUT_INIT     (ADC_1_NEG_SEL_VREF \
 679:Generated_Source\PSoC6/ADC_1.h ****                                                                 << SAR_CTRL_NEG_SEL_Pos )
 680:Generated_Source\PSoC6/ADC_1.h ****     #elif (ADC_1_CFG2_SINGLE_PRESENT != 0u)
 681:Generated_Source\PSoC6/ADC_1.h ****         #define ADC_1_CFG2_SE_NEG_INPUT_INIT         ADC_1_CFG2_NEG_OTHER
 682:Generated_Source\PSoC6/ADC_1.h ****     #else
 683:Generated_Source\PSoC6/ADC_1.h ****         #define ADC_1_CFG2_SE_NEG_INPUT_INIT         0u
 684:Generated_Source\PSoC6/ADC_1.h ****     #endif /* ADC_1_CFG2_VNEG_INPUT_SEL == ADC_1_NEG_SEL_VSSA_KELVIN */
 685:Generated_Source\PSoC6/ADC_1.h **** 
 686:Generated_Source\PSoC6/ADC_1.h ****    #define ADC_1_CFG2_NEG_OTHER                 (uint16)((uint16)ADC_1_SARMUX__VNEG2 << SAR_CTRL_NE
 687:Generated_Source\PSoC6/ADC_1.h **** 
 688:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_SWITCH_CONF_INIT          0u
 689:Generated_Source\PSoC6/ADC_1.h **** 
 690:Generated_Source\PSoC6/ADC_1.h ****     /* If the SAR is configured for multiple channels, always set SAR_HW_CTRL_NEGVREF to 1 */
 691:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_HW_CTRL_NEGVREF_INIT      SAR_CTRL_SAR_HW_CTRL_NEGVREF_Msk
 692:Generated_Source\PSoC6/ADC_1.h **** 
 693:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_POWER_INIT  (ADC_1_PWR_CTRL_VREF_NORMAL_PWR)
 694:Generated_Source\PSoC6/ADC_1.h **** 
 695:Generated_Source\PSoC6/ADC_1.h ****     /* SAMPLE_CTRL initial values */
 696:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_SE_RESULT_FORMAT_INIT \
 697:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG2_SINGLE_ENDED_FORMAT \
 698:Generated_Source\PSoC6/ADC_1.h ****             << SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_Pos)
 699:Generated_Source\PSoC6/ADC_1.h **** 
 700:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_DIFF_RESULT_FORMAT_INIT \
 701:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG2_DIFFERENTIAL_FORMAT \
 702:Generated_Source\PSoC6/ADC_1.h ****             << SAR_SAMPLE_CTRL_DIFFERENTIAL_SIGNED_Pos)
 703:Generated_Source\PSoC6/ADC_1.h **** 
 704:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_AVG_SAMPLES_NUM_INIT \
 705:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG2_SAMPLES_AVERAGED \
 706:Generated_Source\PSoC6/ADC_1.h ****             << SAR_SAMPLE_CTRL_AVG_CNT_Pos)
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 95


 707:Generated_Source\PSoC6/ADC_1.h **** 
 708:Generated_Source\PSoC6/ADC_1.h ****     /* Combination of Average Mode and Average Shift */
 709:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_AVG_MODE_INIT \
 710:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG2_AVGERAGING_MODE \
 711:Generated_Source\PSoC6/ADC_1.h ****             << SAR_SAMPLE_CTRL_AVG_SHIFT_Pos)
 712:Generated_Source\PSoC6/ADC_1.h **** 
 713:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_TRIGGER_OUT_INIT      (0u)
 714:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_UAB_SCAN_MODE_INIT    (0u)
 715:Generated_Source\PSoC6/ADC_1.h **** 
 716:Generated_Source\PSoC6/ADC_1.h **** 
 717:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_VREF_POWER_INIT  \
 718:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG2_VREF_PWR \
 719:Generated_Source\PSoC6/ADC_1.h ****             << SAR_CTRL_PWR_CTRL_VREF_Pos)
 720:Generated_Source\PSoC6/ADC_1.h **** 
 721:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_COMP_PWR_INIT  \
 722:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG2_COMP_PWR \
 723:Generated_Source\PSoC6/ADC_1.h ****             << SAR_CTRL_COMP_PWR_Pos)
 724:Generated_Source\PSoC6/ADC_1.h **** 
 725:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_COMP_DLY_INIT  \
 726:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG2_COMP_DLY \
 727:Generated_Source\PSoC6/ADC_1.h ****             << SAR_CTRL_COMP_DLY_Pos)
 728:Generated_Source\PSoC6/ADC_1.h **** 
 729:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_CTRL_INIT  \
 730:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG2_VREF_POWER_INIT \
 731:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG2_VREF_SEL_MASK \
 732:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG2_SE_NEG_INPUT_INIT \
 733:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG2_HW_CTRL_NEGVREF_INIT \
 734:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG2_COMP_DLY_INIT \
 735:Generated_Source\PSoC6/ADC_1.h ****             | SAR_CTRL_REFBUF_EN_Msk \
 736:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG2_COMP_PWR_INIT \
 737:Generated_Source\PSoC6/ADC_1.h ****             | SAR_CTRL_DSI_SYNC_CONFIG_Msk  \
 738:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG2_SWITCH_CONF_INIT )
 739:Generated_Source\PSoC6/ADC_1.h **** 
 740:Generated_Source\PSoC6/ADC_1.h **** 
 741:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_SAMPLE_CTRL_INIT \
 742:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG2_SE_RESULT_FORMAT_INIT \
 743:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG2_DIFF_RESULT_FORMAT_INIT \
 744:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG2_AVG_SAMPLES_NUM_INIT \
 745:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG2_AVG_MODE_INIT \
 746:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG2_DSI_TRIGGER_LEVEL_INIT \
 747:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG2_DSI_TRIGGER_EN_INIT \
 748:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG2_UAB_SCAN_MODE_INIT \
 749:Generated_Source\PSoC6/ADC_1.h ****             | SAR_SAMPLE_CTRL_VALID_IGNORE_Msk \
 750:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG2_TRIGGER_OUT_INIT \
 751:Generated_Source\PSoC6/ADC_1.h ****             | SAR_SAMPLE_CTRL_EOS_DSI_OUT_EN_Msk \
 752:Generated_Source\PSoC6/ADC_1.h ****     )
 753:Generated_Source\PSoC6/ADC_1.h **** 
 754:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_RANGE_THRES_INIT \
 755:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG2_LOW_LIMIT \
 756:Generated_Source\PSoC6/ADC_1.h ****             | (uint32)((uint32)ADC_1_CFG2_HIGH_LIMIT \
 757:Generated_Source\PSoC6/ADC_1.h ****             << SAR_RANGE_THRES_RANGE_HIGH_Pos))
 758:Generated_Source\PSoC6/ADC_1.h **** 
 759:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_RANGE_COND_INIT   (cy_en_sar_range_detect_condition_t)ADC_1_CFG2_RANGE_COND
 760:Generated_Source\PSoC6/ADC_1.h **** 
 761:Generated_Source\PSoC6/ADC_1.h ****     /* Misc Config
 762:Generated_Source\PSoC6/ADC_1.h ****         [0] - Freerunning: Set if the sample mode is freerunning
 763:Generated_Source\PSoC6/ADC_1.h ****     */
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 96


 764:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_MISC_CONFIG_INIT \
 765:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG2_FREERUNNING)
 766:Generated_Source\PSoC6/ADC_1.h **** #endif /* ADC_1_TOTAL_CONFIGS > 2 */
 767:Generated_Source\PSoC6/ADC_1.h **** 
 768:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 769:Generated_Source\PSoC6/ADC_1.h **** /* End configuration 2 calculated defines                                     */
 770:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 771:Generated_Source\PSoC6/ADC_1.h **** 
 772:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 773:Generated_Source\PSoC6/ADC_1.h **** /* Begin configuration 3 calculated defines                                   */
 774:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 775:Generated_Source\PSoC6/ADC_1.h **** #if(ADC_1_TOTAL_CONFIGS > 3)
 776:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_SAMPLE_TIME01_INIT \
 777:Generated_Source\PSoC6/ADC_1.h ****             ((ADC_1_CFG3_APERTURE_TIME0 \
 778:Generated_Source\PSoC6/ADC_1.h ****             << SAR_SAMPLE_TIME01_SAMPLE_TIME0_Pos) \
 779:Generated_Source\PSoC6/ADC_1.h ****             | (ADC_1_CFG3_APERTURE_TIME1 \
 780:Generated_Source\PSoC6/ADC_1.h ****             << SAR_SAMPLE_TIME01_SAMPLE_TIME1_Pos))
 781:Generated_Source\PSoC6/ADC_1.h **** 
 782:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_SAMPLE_TIME23_INIT \
 783:Generated_Source\PSoC6/ADC_1.h ****             ((ADC_1_CFG3_APERTURE_TIME2 \
 784:Generated_Source\PSoC6/ADC_1.h ****             << SAR_SAMPLE_TIME23_SAMPLE_TIME2_Pos) \
 785:Generated_Source\PSoC6/ADC_1.h ****             | (ADC_1_CFG3_APERTURE_TIME3 \
 786:Generated_Source\PSoC6/ADC_1.h ****             << SAR_SAMPLE_TIME23_SAMPLE_TIME3_Pos))
 787:Generated_Source\PSoC6/ADC_1.h **** 
 788:Generated_Source\PSoC6/ADC_1.h ****     /* Enable soc pin if used */
 789:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_DSI_TRIGGER_EN_INIT \
 790:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG3_USE_SOC \
 791:Generated_Source\PSoC6/ADC_1.h ****              << SAR_SAMPLE_CTRL_DSI_TRIGGER_EN_Pos)
 792:Generated_Source\PSoC6/ADC_1.h **** 
 793:Generated_Source\PSoC6/ADC_1.h ****     /* Set soc operation to edge or level based on sample mode */
 794:Generated_Source\PSoC6/ADC_1.h ****     #if(ADC_1_CFG3_FREERUNNING == ADC_1_FREERUNNING)
 795:Generated_Source\PSoC6/ADC_1.h ****         #define ADC_1_CFG3_DSI_TRIGGER_LEVEL_INIT    (SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_Msk)
 796:Generated_Source\PSoC6/ADC_1.h ****     #else /* Edge trigger */
 797:Generated_Source\PSoC6/ADC_1.h ****         #define ADC_1_CFG3_DSI_TRIGGER_LEVEL_INIT    (0u)
 798:Generated_Source\PSoC6/ADC_1.h ****     #endif /* End ADC_1_CFG3_FREERUNNING == ADC_1_FREERUNNING */
 799:Generated_Source\PSoC6/ADC_1.h **** 
 800:Generated_Source\PSoC6/ADC_1.h ****     /* Set SE_NEG_INPUT  */
 801:Generated_Source\PSoC6/ADC_1.h ****     #if(ADC_1_CFG3_VNEG_INPUT_SEL == ADC_1_NEG_SEL_VSSA_KELVIN)
 802:Generated_Source\PSoC6/ADC_1.h ****         #define ADC_1_CFG3_SE_NEG_INPUT_INIT \
 803:Generated_Source\PSoC6/ADC_1.h ****             ((uint32)(ADC_1_NEG_SEL_VSSA_KELVIN \
 804:Generated_Source\PSoC6/ADC_1.h ****             << SAR_CTRL_NEG_SEL_Pos ))
 805:Generated_Source\PSoC6/ADC_1.h ****     #elif(ADC_1_CFG3_VNEG_INPUT_SEL == ADC_1_NEG_SEL_VREF)
 806:Generated_Source\PSoC6/ADC_1.h ****         #define ADC_1_CFG3_SE_NEG_INPUT_INIT     (ADC_1_NEG_SEL_VREF \
 807:Generated_Source\PSoC6/ADC_1.h ****                                                                 << SAR_CTRL_NEG_SEL_Pos )
 808:Generated_Source\PSoC6/ADC_1.h ****     #elif (ADC_1_CFG3_SINGLE_PRESENT != 0u)
 809:Generated_Source\PSoC6/ADC_1.h ****         #define ADC_1_CFG3_SE_NEG_INPUT_INIT         ADC_1_CFG3_NEG_OTHER
 810:Generated_Source\PSoC6/ADC_1.h ****     #else
 811:Generated_Source\PSoC6/ADC_1.h ****         #define ADC_1_CFG3_SE_NEG_INPUT_INIT         0u
 812:Generated_Source\PSoC6/ADC_1.h ****     #endif /* ADC_1_CFG3_VNEG_INPUT_SEL == ADC_1_NEG_SEL_VSSA_KELVIN */
 813:Generated_Source\PSoC6/ADC_1.h **** 
 814:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_NEG_OTHER                 (uint16)((uint16)ADC_1_SARMUX__VNEG3 << SAR_CTRL_N
 815:Generated_Source\PSoC6/ADC_1.h **** 
 816:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_SWITCH_CONF_INIT          0u
 817:Generated_Source\PSoC6/ADC_1.h **** 
 818:Generated_Source\PSoC6/ADC_1.h ****     /* If the SAR is configured for multiple channels, always set SAR_HW_CTRL_NEGVREF to 1 */
 819:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_HW_CTRL_NEGVREF_INIT      SAR_CTRL_SAR_HW_CTRL_NEGVREF_Msk
 820:Generated_Source\PSoC6/ADC_1.h **** 
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 97


 821:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_POWER_INIT  (ADC_1_PWR_CTRL_VREF_NORMAL_PWR)
 822:Generated_Source\PSoC6/ADC_1.h **** 
 823:Generated_Source\PSoC6/ADC_1.h ****     /* SAMPLE_CTRL initial values */
 824:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_SE_RESULT_FORMAT_INIT \
 825:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG3_SINGLE_ENDED_FORMAT \
 826:Generated_Source\PSoC6/ADC_1.h ****             << SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_Pos)
 827:Generated_Source\PSoC6/ADC_1.h **** 
 828:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_DIFF_RESULT_FORMAT_INIT \
 829:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG3_DIFFERENTIAL_FORMAT \
 830:Generated_Source\PSoC6/ADC_1.h ****             << SAR_SAMPLE_CTRL_DIFFERENTIAL_SIGNED_Pos)
 831:Generated_Source\PSoC6/ADC_1.h **** 
 832:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_AVG_SAMPLES_NUM_INIT \
 833:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG3_SAMPLES_AVERAGED \
 834:Generated_Source\PSoC6/ADC_1.h ****             << SAR_SAMPLE_CTRL_AVG_CNT_Pos)
 835:Generated_Source\PSoC6/ADC_1.h **** 
 836:Generated_Source\PSoC6/ADC_1.h ****     /* Combination of Average Mode and Average Shift */
 837:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_AVG_MODE_INIT \
 838:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG3_AVGERAGING_MODE \
 839:Generated_Source\PSoC6/ADC_1.h ****             << SAR_SAMPLE_CTRL_AVG_SHIFT_Pos)
 840:Generated_Source\PSoC6/ADC_1.h **** 
 841:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_TRIGGER_OUT_INIT      (0u)
 842:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_UAB_SCAN_MODE_INIT    (0u)
 843:Generated_Source\PSoC6/ADC_1.h **** 
 844:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_VREF_POWER_INIT  \
 845:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG3_VREF_PWR \
 846:Generated_Source\PSoC6/ADC_1.h ****             << SAR_CTRL_PWR_CTRL_VREF_Pos)
 847:Generated_Source\PSoC6/ADC_1.h **** 
 848:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_COMP_PWR_INIT  \
 849:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG3_COMP_PWR \
 850:Generated_Source\PSoC6/ADC_1.h ****             << SAR_CTRL_COMP_PWR_Pos)
 851:Generated_Source\PSoC6/ADC_1.h **** 
 852:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_COMP_DLY_INIT  \
 853:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG3_COMP_DLY \
 854:Generated_Source\PSoC6/ADC_1.h ****             << SAR_CTRL_COMP_DLY_Pos)
 855:Generated_Source\PSoC6/ADC_1.h **** 
 856:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_CTRL_INIT  \
 857:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG3_VREF_POWER_INIT \
 858:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG3_VREF_SEL_MASK \
 859:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG3_SE_NEG_INPUT_INIT \
 860:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG3_HW_CTRL_NEGVREF_INIT \
 861:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG3_COMP_DLY_INIT \
 862:Generated_Source\PSoC6/ADC_1.h ****             | SAR_CTRL_REFBUF_EN_Msk \
 863:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG3_COMP_PWR_INIT \
 864:Generated_Source\PSoC6/ADC_1.h ****             | SAR_CTRL_DSI_SYNC_CONFIG_Msk  \
 865:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG3_SWITCH_CONF_INIT )
 866:Generated_Source\PSoC6/ADC_1.h **** 
 867:Generated_Source\PSoC6/ADC_1.h **** 
 868:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_SAMPLE_CTRL_INIT \
 869:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG3_SE_RESULT_FORMAT_INIT \
 870:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG3_DIFF_RESULT_FORMAT_INIT \
 871:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG3_AVG_SAMPLES_NUM_INIT \
 872:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG3_AVG_MODE_INIT \
 873:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG3_DSI_TRIGGER_LEVEL_INIT \
 874:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG3_DSI_TRIGGER_EN_INIT \
 875:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG3_UAB_SCAN_MODE_INIT \
 876:Generated_Source\PSoC6/ADC_1.h ****             | SAR_SAMPLE_CTRL_VALID_IGNORE_Msk \
 877:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG3_TRIGGER_OUT_INIT \
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 98


 878:Generated_Source\PSoC6/ADC_1.h ****             | SAR_SAMPLE_CTRL_EOS_DSI_OUT_EN_Msk \
 879:Generated_Source\PSoC6/ADC_1.h ****     )
 880:Generated_Source\PSoC6/ADC_1.h **** 
 881:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_RANGE_THRES_INIT \
 882:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG3_LOW_LIMIT \
 883:Generated_Source\PSoC6/ADC_1.h ****             | (uint32)((uint32)ADC_1_CFG3_HIGH_LIMIT \
 884:Generated_Source\PSoC6/ADC_1.h ****             << SAR_RANGE_THRES_RANGE_HIGH_Pos))
 885:Generated_Source\PSoC6/ADC_1.h **** 
 886:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_RANGE_COND_INIT   (cy_en_sar_range_detect_condition_t)ADC_1_CFG3_RANGE_COND
 887:Generated_Source\PSoC6/ADC_1.h **** 
 888:Generated_Source\PSoC6/ADC_1.h ****     /* Misc Config
 889:Generated_Source\PSoC6/ADC_1.h ****         [0] - Freerunning: Set if the sample mode is freerunning
 890:Generated_Source\PSoC6/ADC_1.h ****     */
 891:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_MISC_CONFIG_INIT \
 892:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG3_FREERUNNING )
 893:Generated_Source\PSoC6/ADC_1.h **** 
 894:Generated_Source\PSoC6/ADC_1.h **** #endif /* ADC_1_TOTAL_CONFIGS > 3 */
 895:Generated_Source\PSoC6/ADC_1.h **** 
 896:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 897:Generated_Source\PSoC6/ADC_1.h **** /* End configuration 3 calculated defines                                     */
 898:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 899:Generated_Source\PSoC6/ADC_1.h **** 
 900:Generated_Source\PSoC6/ADC_1.h **** /******************************************************************************
 901:Generated_Source\PSoC6/ADC_1.h **** * Function Name: ADC_1_Enable
 902:Generated_Source\PSoC6/ADC_1.h **** ****************************************************************************//*
 903:Generated_Source\PSoC6/ADC_1.h **** *
 904:Generated_Source\PSoC6/ADC_1.h **** * \brief Enables the component.
 905:Generated_Source\PSoC6/ADC_1.h **** *
 906:Generated_Source\PSoC6/ADC_1.h **** * \param None
 907:Generated_Source\PSoC6/ADC_1.h **** *
 908:Generated_Source\PSoC6/ADC_1.h **** * \return None
 909:Generated_Source\PSoC6/ADC_1.h **** *
 910:Generated_Source\PSoC6/ADC_1.h **** * \sideeffect
 911:Generated_Source\PSoC6/ADC_1.h **** *  None
 912:Generated_Source\PSoC6/ADC_1.h **** *
 913:Generated_Source\PSoC6/ADC_1.h **** *******************************************************************************/
 914:Generated_Source\PSoC6/ADC_1.h **** __STATIC_INLINE void ADC_1_Enable(void)
 915:Generated_Source\PSoC6/ADC_1.h **** {
 713              		.loc 4 915 0
 714              		.cfi_startproc
 715              		@ args = 0, pretend = 0, frame = 0
 716              		@ frame_needed = 1, uses_anonymous_args = 0
 717 0000 80B5     		push	{r7, lr}
 718              		.cfi_def_cfa_offset 8
 719              		.cfi_offset 7, -8
 720              		.cfi_offset 14, -4
 721 0002 00AF     		add	r7, sp, #0
 722              		.cfi_def_cfa_register 7
 916:Generated_Source\PSoC6/ADC_1.h ****     Cy_SAR_Enable(ADC_1_SAR__HW);
 723              		.loc 4 916 0
 724 0004 034B     		ldr	r3, .L40
 725 0006 1800     		movs	r0, r3
 726 0008 FFF7FEFF 		bl	Cy_SAR_Enable
 917:Generated_Source\PSoC6/ADC_1.h **** }
 727              		.loc 4 917 0
 728 000c C046     		nop
 729 000e BD46     		mov	sp, r7
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 99


 730              		@ sp needed
 731 0010 80BD     		pop	{r7, pc}
 732              	.L41:
 733 0012 C046     		.align	2
 734              	.L40:
 735 0014 00001D41 		.word	1092419584
 736              		.cfi_endproc
 737              	.LFE168:
 738              		.size	ADC_1_Enable, .-ADC_1_Enable
 739              		.section	.text.ADC_1_Stop,"ax",%progbits
 740              		.align	2
 741              		.code	16
 742              		.thumb_func
 743              		.type	ADC_1_Stop, %function
 744              	ADC_1_Stop:
 745              	.LFB169:
 918:Generated_Source\PSoC6/ADC_1.h **** 
 919:Generated_Source\PSoC6/ADC_1.h **** /*******************************************************************************
 920:Generated_Source\PSoC6/ADC_1.h **** * Function Name: ADC_1_Stop
 921:Generated_Source\PSoC6/ADC_1.h **** ****************************************************************************//**
 922:Generated_Source\PSoC6/ADC_1.h **** *
 923:Generated_Source\PSoC6/ADC_1.h **** * \brief This function stops ADC conversions and puts the ADC into its lowest
 924:Generated_Source\PSoC6/ADC_1.h **** * power mode.
 925:Generated_Source\PSoC6/ADC_1.h **** *
 926:Generated_Source\PSoC6/ADC_1.h **** * \param None
 927:Generated_Source\PSoC6/ADC_1.h **** *
 928:Generated_Source\PSoC6/ADC_1.h **** * \return None
 929:Generated_Source\PSoC6/ADC_1.h **** *
 930:Generated_Source\PSoC6/ADC_1.h **** * \sideeffect
 931:Generated_Source\PSoC6/ADC_1.h **** * Do not use the ADC_1_Stop() API to halt conversions. Instead use the
 932:Generated_Source\PSoC6/ADC_1.h **** * ADC_1_StopConvert() API. If you use the ADC_1_Stop() API
 933:Generated_Source\PSoC6/ADC_1.h **** * to halt conversions then later use the ADC_1_Start() and
 934:Generated_Source\PSoC6/ADC_1.h **** * ADC_1_StartConvert() APIs to resume conversions, the first channel
 935:Generated_Source\PSoC6/ADC_1.h **** * of the scan may be corrupt. The ADC_1_StopConvert() API will enable
 936:Generated_Source\PSoC6/ADC_1.h **** * the ADC_1 to complete the current scan of channels. After the
 937:Generated_Source\PSoC6/ADC_1.h **** * channel scan is complete, the ADC_1 will stop all conversions, which
 938:Generated_Source\PSoC6/ADC_1.h **** * can be detected by the use of an ISR or the ADC_1_IsEndConversion()
 939:Generated_Source\PSoC6/ADC_1.h **** * function.
 940:Generated_Source\PSoC6/ADC_1.h **** *
 941:Generated_Source\PSoC6/ADC_1.h **** *******************************************************************************/
 942:Generated_Source\PSoC6/ADC_1.h **** __STATIC_INLINE void ADC_1_Stop(void)
 943:Generated_Source\PSoC6/ADC_1.h **** {
 746              		.loc 4 943 0
 747              		.cfi_startproc
 748              		@ args = 0, pretend = 0, frame = 0
 749              		@ frame_needed = 1, uses_anonymous_args = 0
 750 0000 80B5     		push	{r7, lr}
 751              		.cfi_def_cfa_offset 8
 752              		.cfi_offset 7, -8
 753              		.cfi_offset 14, -4
 754 0002 00AF     		add	r7, sp, #0
 755              		.cfi_def_cfa_register 7
 944:Generated_Source\PSoC6/ADC_1.h ****     Cy_SAR_Disable(ADC_1_SAR__HW);
 756              		.loc 4 944 0
 757 0004 034B     		ldr	r3, .L43
 758 0006 1800     		movs	r0, r3
 759 0008 FFF7FEFF 		bl	Cy_SAR_Disable
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 100


 945:Generated_Source\PSoC6/ADC_1.h **** }
 760              		.loc 4 945 0
 761 000c C046     		nop
 762 000e BD46     		mov	sp, r7
 763              		@ sp needed
 764 0010 80BD     		pop	{r7, pc}
 765              	.L44:
 766 0012 C046     		.align	2
 767              	.L43:
 768 0014 00001D41 		.word	1092419584
 769              		.cfi_endproc
 770              	.LFE169:
 771              		.size	ADC_1_Stop, .-ADC_1_Stop
 772              		.global	ADC_1_initVar
 773              		.bss
 774              		.type	ADC_1_initVar, %object
 775              		.size	ADC_1_initVar, 1
 776              	ADC_1_initVar:
 777 0000 00       		.space	1
 778              		.global	ADC_1_selected
 779              		.type	ADC_1_selected, %object
 780              		.size	ADC_1_selected, 1
 781              	ADC_1_selected:
 782 0001 00       		.space	1
 783              		.global	ADC_1_currentConfig
 784 0002 0000     		.align	2
 785              		.type	ADC_1_currentConfig, %object
 786              		.size	ADC_1_currentConfig, 4
 787              	ADC_1_currentConfig:
 788 0004 00000000 		.space	4
 789              		.section	.text.ADC_1_Start,"ax",%progbits
 790              		.align	2
 791              		.global	ADC_1_Start
 792              		.code	16
 793              		.thumb_func
 794              		.type	ADC_1_Start, %function
 795              	ADC_1_Start:
 796              	.LFB186:
 797              		.file 5 "Generated_Source\\PSoC6\\ADC_1.c"
   1:Generated_Source\PSoC6/ADC_1.c **** /***************************************************************************//**
   2:Generated_Source\PSoC6/ADC_1.c **** * \file     ADC_1.c
   3:Generated_Source\PSoC6/ADC_1.c **** * \version  3.10
   4:Generated_Source\PSoC6/ADC_1.c **** *
   5:Generated_Source\PSoC6/ADC_1.c **** * \brief
   6:Generated_Source\PSoC6/ADC_1.c **** * Provides the source code to the API for the ADC_1 Component.
   7:Generated_Source\PSoC6/ADC_1.c **** *
   8:Generated_Source\PSoC6/ADC_1.c **** ********************************************************************************
   9:Generated_Source\PSoC6/ADC_1.c **** * \copyright
  10:Generated_Source\PSoC6/ADC_1.c **** * (c) 2017-2018, Cypress Semiconductor Corporation. All rights reserved.
  11:Generated_Source\PSoC6/ADC_1.c **** * This software, including source code, documentation and related
  12:Generated_Source\PSoC6/ADC_1.c **** * materials ("Software"), is owned by Cypress Semiconductor
  13:Generated_Source\PSoC6/ADC_1.c **** * Corporation ("Cypress") and is protected by and subject to worldwide
  14:Generated_Source\PSoC6/ADC_1.c **** * patent protection (United States and foreign), United States copyright
  15:Generated_Source\PSoC6/ADC_1.c **** * laws and international treaty provisions. Therefore, you may use this
  16:Generated_Source\PSoC6/ADC_1.c **** * Software only as provided in the license agreement accompanying the
  17:Generated_Source\PSoC6/ADC_1.c **** * software package from which you obtained this Software ("EULA").
  18:Generated_Source\PSoC6/ADC_1.c **** * If no EULA applies, Cypress hereby grants you a personal, nonexclusive,
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 101


  19:Generated_Source\PSoC6/ADC_1.c **** * non-transferable license to copy, modify, and compile the
  20:Generated_Source\PSoC6/ADC_1.c **** * Software source code solely for use in connection with Cypress's
  21:Generated_Source\PSoC6/ADC_1.c **** * integrated circuit products. Any reproduction, modification, translation,
  22:Generated_Source\PSoC6/ADC_1.c **** * compilation, or representation of this Software except as specified
  23:Generated_Source\PSoC6/ADC_1.c **** * above is prohibited without the express written permission of Cypress.
  24:Generated_Source\PSoC6/ADC_1.c **** * Disclaimer: THIS SOFTWARE IS PROVIDED AS-IS, WITH NO
  25:Generated_Source\PSoC6/ADC_1.c **** * WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING,
  26:Generated_Source\PSoC6/ADC_1.c **** * BUT NOT LIMITED TO, NONINFRINGEMENT, IMPLIED
  27:Generated_Source\PSoC6/ADC_1.c **** * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
  28:Generated_Source\PSoC6/ADC_1.c **** * PARTICULAR PURPOSE. Cypress reserves the right to make
  29:Generated_Source\PSoC6/ADC_1.c **** * changes to the Software without notice. Cypress does not assume any
  30:Generated_Source\PSoC6/ADC_1.c **** * liability arising out of the application or use of the Software or any
  31:Generated_Source\PSoC6/ADC_1.c **** * product or circuit described in the Software. Cypress does not
  32:Generated_Source\PSoC6/ADC_1.c **** * authorize its products for use in any products where a malfunction or
  33:Generated_Source\PSoC6/ADC_1.c **** * failure of the Cypress product may reasonably be expected to result in
  34:Generated_Source\PSoC6/ADC_1.c **** * significant property damage, injury or death ("High Risk Product"). By
  35:Generated_Source\PSoC6/ADC_1.c **** * including Cypress's product in a High Risk Product, the manufacturer
  36:Generated_Source\PSoC6/ADC_1.c **** * of such system or application assumes all risk of such use and in doing
  37:Generated_Source\PSoC6/ADC_1.c **** * so agrees to indemnify Cypress against all liability.
  38:Generated_Source\PSoC6/ADC_1.c **** *******************************************************************************/
  39:Generated_Source\PSoC6/ADC_1.c **** #include "ADC_1.h"
  40:Generated_Source\PSoC6/ADC_1.c **** #include <sysint/cy_sysint.h>
  41:Generated_Source\PSoC6/ADC_1.c **** #include <cyfitter_sysint_cfg.h>
  42:Generated_Source\PSoC6/ADC_1.c **** 
  43:Generated_Source\PSoC6/ADC_1.c **** uint8_t ADC_1_initVar = 0u;
  44:Generated_Source\PSoC6/ADC_1.c **** uint8_t ADC_1_selected = 0u; /* 0 if no configuration selected. 1 otherwise. */
  45:Generated_Source\PSoC6/ADC_1.c **** uint32_t ADC_1_currentConfig = 0u; /* Currently active configuration */
  46:Generated_Source\PSoC6/ADC_1.c **** 
  47:Generated_Source\PSoC6/ADC_1.c **** /*******************************************************************************
  48:Generated_Source\PSoC6/ADC_1.c **** * Function Name: ADC_1_Start
  49:Generated_Source\PSoC6/ADC_1.c **** ****************************************************************************//**
  50:Generated_Source\PSoC6/ADC_1.c **** *
  51:Generated_Source\PSoC6/ADC_1.c **** * \brief Performs all required initialization for this component and enables the
  52:Generated_Source\PSoC6/ADC_1.c **** *  power. The power will be set to the appropriate power based on the clock
  53:Generated_Source\PSoC6/ADC_1.c **** *  frequency.
  54:Generated_Source\PSoC6/ADC_1.c **** *
  55:Generated_Source\PSoC6/ADC_1.c **** * \param None
  56:Generated_Source\PSoC6/ADC_1.c **** *
  57:Generated_Source\PSoC6/ADC_1.c **** * \return None
  58:Generated_Source\PSoC6/ADC_1.c **** *
  59:Generated_Source\PSoC6/ADC_1.c **** * \sideeffect None
  60:Generated_Source\PSoC6/ADC_1.c **** *
  61:Generated_Source\PSoC6/ADC_1.c **** * \globalvars
  62:Generated_Source\PSoC6/ADC_1.c **** *  \ref ADC_1_initVar (RW)
  63:Generated_Source\PSoC6/ADC_1.c **** *
  64:Generated_Source\PSoC6/ADC_1.c **** *******************************************************************************/
  65:Generated_Source\PSoC6/ADC_1.c **** void ADC_1_Start(void)
  66:Generated_Source\PSoC6/ADC_1.c **** {
 798              		.loc 5 66 0
 799              		.cfi_startproc
 800              		@ args = 0, pretend = 0, frame = 0
 801              		@ frame_needed = 1, uses_anonymous_args = 0
 802 0000 80B5     		push	{r7, lr}
 803              		.cfi_def_cfa_offset 8
 804              		.cfi_offset 7, -8
 805              		.cfi_offset 14, -4
 806 0002 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 102


 807              		.cfi_def_cfa_register 7
  67:Generated_Source\PSoC6/ADC_1.c ****     if (ADC_1_INIT_VAR_INIT_FLAG != (ADC_1_INIT_VAR_INIT_FLAG & ADC_1_initVar))
 808              		.loc 5 67 0
 809 0004 0A4B     		ldr	r3, .L48
 810 0006 1B78     		ldrb	r3, [r3]
 811 0008 0122     		movs	r2, #1
 812 000a 1340     		ands	r3, r2
 813 000c DBB2     		uxtb	r3, r3
 814 000e 002B     		cmp	r3, #0
 815 0010 08D1     		bne	.L46
  68:Generated_Source\PSoC6/ADC_1.c ****     {
  69:Generated_Source\PSoC6/ADC_1.c ****         ADC_1_Init();
 816              		.loc 5 69 0
 817 0012 FFF7FEFF 		bl	ADC_1_Init
  70:Generated_Source\PSoC6/ADC_1.c ****         ADC_1_initVar |= ADC_1_INIT_VAR_INIT_FLAG;
 818              		.loc 5 70 0
 819 0016 064B     		ldr	r3, .L48
 820 0018 1B78     		ldrb	r3, [r3]
 821 001a 0122     		movs	r2, #1
 822 001c 1343     		orrs	r3, r2
 823 001e DAB2     		uxtb	r2, r3
 824 0020 034B     		ldr	r3, .L48
 825 0022 1A70     		strb	r2, [r3]
 826              	.L46:
  71:Generated_Source\PSoC6/ADC_1.c ****     }
  72:Generated_Source\PSoC6/ADC_1.c **** 
  73:Generated_Source\PSoC6/ADC_1.c ****     ADC_1_Enable();
 827              		.loc 5 73 0
 828 0024 FFF7FEFF 		bl	ADC_1_Enable
  74:Generated_Source\PSoC6/ADC_1.c **** 
  75:Generated_Source\PSoC6/ADC_1.c ****     return;
 829              		.loc 5 75 0
 830 0028 C046     		nop
  76:Generated_Source\PSoC6/ADC_1.c **** }
 831              		.loc 5 76 0
 832 002a BD46     		mov	sp, r7
 833              		@ sp needed
 834 002c 80BD     		pop	{r7, pc}
 835              	.L49:
 836 002e C046     		.align	2
 837              	.L48:
 838 0030 00000000 		.word	ADC_1_initVar
 839              		.cfi_endproc
 840              	.LFE186:
 841              		.size	ADC_1_Start, .-ADC_1_Start
 842              		.section	.text.ADC_1_StartEx,"ax",%progbits
 843              		.align	2
 844              		.global	ADC_1_StartEx
 845              		.code	16
 846              		.thumb_func
 847              		.type	ADC_1_StartEx, %function
 848              	ADC_1_StartEx:
 849              	.LFB187:
  77:Generated_Source\PSoC6/ADC_1.c **** 
  78:Generated_Source\PSoC6/ADC_1.c **** /*******************************************************************************
  79:Generated_Source\PSoC6/ADC_1.c **** * Function Name: ADC_1_StartEx
  80:Generated_Source\PSoC6/ADC_1.c **** ****************************************************************************//**
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 103


  81:Generated_Source\PSoC6/ADC_1.c **** *
  82:Generated_Source\PSoC6/ADC_1.c **** * \brief This function starts the ADC_1 and sets the Interrupt
  83:Generated_Source\PSoC6/ADC_1.c **** * Service Routine to the provided address using the
  84:Generated_Source\PSoC6/ADC_1.c **** * Cy_SysInt_Init() function. Refer to the Interrupt component
  85:Generated_Source\PSoC6/ADC_1.c **** * datasheet for more information on the Cy_SysInt_Init() function.
  86:Generated_Source\PSoC6/ADC_1.c **** *
  87:Generated_Source\PSoC6/ADC_1.c **** * \param address This is the address of a user defined function for the ISR.
  88:Generated_Source\PSoC6/ADC_1.c **** *
  89:Generated_Source\PSoC6/ADC_1.c **** * \return None
  90:Generated_Source\PSoC6/ADC_1.c **** *
  91:Generated_Source\PSoC6/ADC_1.c **** * \sideeffect None
  92:Generated_Source\PSoC6/ADC_1.c **** *
  93:Generated_Source\PSoC6/ADC_1.c **** *******************************************************************************/
  94:Generated_Source\PSoC6/ADC_1.c **** void ADC_1_StartEx(cy_israddress userIsr)
  95:Generated_Source\PSoC6/ADC_1.c **** {
 850              		.loc 5 95 0
 851              		.cfi_startproc
 852              		@ args = 0, pretend = 0, frame = 8
 853              		@ frame_needed = 1, uses_anonymous_args = 0
 854 0000 80B5     		push	{r7, lr}
 855              		.cfi_def_cfa_offset 8
 856              		.cfi_offset 7, -8
 857              		.cfi_offset 14, -4
 858 0002 82B0     		sub	sp, sp, #8
 859              		.cfi_def_cfa_offset 16
 860 0004 00AF     		add	r7, sp, #0
 861              		.cfi_def_cfa_register 7
 862 0006 7860     		str	r0, [r7, #4]
  96:Generated_Source\PSoC6/ADC_1.c ****     ADC_1_Start();
 863              		.loc 5 96 0
 864 0008 FFF7FEFF 		bl	ADC_1_Start
  97:Generated_Source\PSoC6/ADC_1.c **** 
  98:Generated_Source\PSoC6/ADC_1.c ****     /* Interrupt core assignment will be up to the user. Initialize and enable the interrupt*/
  99:Generated_Source\PSoC6/ADC_1.c ****     #ifdef ADC_1_IRQ__INTC_CORTEXM4_ASSIGNED
 100:Generated_Source\PSoC6/ADC_1.c ****     #if (CY_CPU_CORTEX_M4)
 101:Generated_Source\PSoC6/ADC_1.c ****         (void)Cy_SysInt_Init(&ADC_1_IRQ_cfg, userIsr);
 102:Generated_Source\PSoC6/ADC_1.c ****         NVIC_EnableIRQ(ADC_1_IRQ_cfg.intrSrc);
 103:Generated_Source\PSoC6/ADC_1.c ****     #endif
 104:Generated_Source\PSoC6/ADC_1.c ****     #endif
 105:Generated_Source\PSoC6/ADC_1.c **** 
 106:Generated_Source\PSoC6/ADC_1.c ****     #ifdef ADC_1_IRQ__INTC_CORTEXM0P_ASSIGNED
 107:Generated_Source\PSoC6/ADC_1.c ****     #if (CY_CPU_CORTEX_M0P)
 108:Generated_Source\PSoC6/ADC_1.c ****         (void)Cy_SysInt_Init(&ADC_1_IRQ_cfg, userIsr);
 109:Generated_Source\PSoC6/ADC_1.c ****         NVIC_EnableIRQ(ADC_1_IRQ_cfg.intrSrc);
 110:Generated_Source\PSoC6/ADC_1.c ****     #endif
 111:Generated_Source\PSoC6/ADC_1.c ****     #endif
 112:Generated_Source\PSoC6/ADC_1.c **** 
 113:Generated_Source\PSoC6/ADC_1.c **** }
 865              		.loc 5 113 0
 866 000c C046     		nop
 867 000e BD46     		mov	sp, r7
 868 0010 02B0     		add	sp, sp, #8
 869              		@ sp needed
 870 0012 80BD     		pop	{r7, pc}
 871              		.cfi_endproc
 872              	.LFE187:
 873              		.size	ADC_1_StartEx, .-ADC_1_StartEx
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 104


 874              		.section	.text.ADC_1_InitConfig,"ax",%progbits
 875              		.align	2
 876              		.global	ADC_1_InitConfig
 877              		.code	16
 878              		.thumb_func
 879              		.type	ADC_1_InitConfig, %function
 880              	ADC_1_InitConfig:
 881              	.LFB188:
 114:Generated_Source\PSoC6/ADC_1.c **** 
 115:Generated_Source\PSoC6/ADC_1.c **** /* ****************************************************************************
 116:Generated_Source\PSoC6/ADC_1.c **** * Function Name: ADC_1_InitConfig
 117:Generated_Source\PSoC6/ADC_1.c **** ****************************************************************************//*
 118:Generated_Source\PSoC6/ADC_1.c **** *
 119:Generated_Source\PSoC6/ADC_1.c **** * \brief Configures all of the registers for a given configuration for scanning.
 120:Generated_Source\PSoC6/ADC_1.c **** *
 121:Generated_Source\PSoC6/ADC_1.c **** * \param scan Number of scan defined in the ADC_1.
 122:Generated_Source\PSoC6/ADC_1.c **** *
 123:Generated_Source\PSoC6/ADC_1.c **** * \return None
 124:Generated_Source\PSoC6/ADC_1.c **** *
 125:Generated_Source\PSoC6/ADC_1.c **** * \sideeffect None
 126:Generated_Source\PSoC6/ADC_1.c **** *
 127:Generated_Source\PSoC6/ADC_1.c **** *******************************************************************************/
 128:Generated_Source\PSoC6/ADC_1.c **** void ADC_1_InitConfig(const ADC_1_CONFIG_STRUCT *config)
 129:Generated_Source\PSoC6/ADC_1.c **** {
 882              		.loc 5 129 0
 883              		.cfi_startproc
 884              		@ args = 0, pretend = 0, frame = 16
 885              		@ frame_needed = 1, uses_anonymous_args = 0
 886 0000 80B5     		push	{r7, lr}
 887              		.cfi_def_cfa_offset 8
 888              		.cfi_offset 7, -8
 889              		.cfi_offset 14, -4
 890 0002 84B0     		sub	sp, sp, #16
 891              		.cfi_def_cfa_offset 24
 892 0004 00AF     		add	r7, sp, #0
 893              		.cfi_def_cfa_register 7
 894 0006 7860     		str	r0, [r7, #4]
 130:Generated_Source\PSoC6/ADC_1.c ****     bool deInitRouting = false;
 895              		.loc 5 130 0
 896 0008 0F23     		movs	r3, #15
 897 000a FB18     		adds	r3, r7, r3
 898 000c 0022     		movs	r2, #0
 899 000e 1A70     		strb	r2, [r3]
 131:Generated_Source\PSoC6/ADC_1.c **** 
 132:Generated_Source\PSoC6/ADC_1.c ****     /* If there is an internal SAR clock, set up its divider values. */
 133:Generated_Source\PSoC6/ADC_1.c ****     #if (ADC_1_CLOCK_INTERNAL)
 134:Generated_Source\PSoC6/ADC_1.c ****         ADC_1_intSarClock_Disable();
 900              		.loc 5 134 0
 901 0010 FFF7FEFF 		bl	ADC_1_intSarClock_Disable
 135:Generated_Source\PSoC6/ADC_1.c ****         ADC_1_intSarClock_SetDivider(config->clkDivider);
 902              		.loc 5 135 0
 903 0014 7B68     		ldr	r3, [r7, #4]
 904 0016 1B69     		ldr	r3, [r3, #16]
 905 0018 1800     		movs	r0, r3
 906 001a FFF7FEFF 		bl	ADC_1_intSarClock_SetDivider
 136:Generated_Source\PSoC6/ADC_1.c ****         ADC_1_intSarClock_Enable();
 907              		.loc 5 136 0
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 105


 908 001e FFF7FEFF 		bl	ADC_1_intSarClock_Enable
 137:Generated_Source\PSoC6/ADC_1.c ****     #endif /* ADC_1_CLOCK_INTERNAL */
 138:Generated_Source\PSoC6/ADC_1.c **** 
 139:Generated_Source\PSoC6/ADC_1.c ****     /* Init SAR and MUX registers */
 140:Generated_Source\PSoC6/ADC_1.c ****     (void)Cy_SAR_DeInit(ADC_1_SAR__HW, deInitRouting);
 909              		.loc 5 140 0
 910 0022 0F23     		movs	r3, #15
 911 0024 FB18     		adds	r3, r7, r3
 912 0026 1B78     		ldrb	r3, [r3]
 913 0028 074A     		ldr	r2, .L53
 914 002a 1900     		movs	r1, r3
 915 002c 1000     		movs	r0, r2
 916 002e FFF7FEFF 		bl	Cy_SAR_DeInit
 141:Generated_Source\PSoC6/ADC_1.c ****     (void)Cy_SAR_Init(ADC_1_SAR__HW, config->hwConfigStc);
 917              		.loc 5 141 0
 918 0032 7B68     		ldr	r3, [r7, #4]
 919 0034 9B68     		ldr	r3, [r3, #8]
 920 0036 044A     		ldr	r2, .L53
 921 0038 1900     		movs	r1, r3
 922 003a 1000     		movs	r0, r2
 923 003c FFF7FEFF 		bl	Cy_SAR_Init
 142:Generated_Source\PSoC6/ADC_1.c **** 
 143:Generated_Source\PSoC6/ADC_1.c ****     /* Connect Vminus to VSSA when even one channel is single-ended or multiple channels configured
 144:Generated_Source\PSoC6/ADC_1.c ****     if(1uL == ADC_1_MUX_SWITCH0_INIT)
 145:Generated_Source\PSoC6/ADC_1.c ****     {
 146:Generated_Source\PSoC6/ADC_1.c ****         Cy_SAR_SetVssaVminusSwitch(ADC_1_SAR__HW, CY_SAR_SWITCH_CLOSE);
 147:Generated_Source\PSoC6/ADC_1.c **** 
 148:Generated_Source\PSoC6/ADC_1.c ****         /* Set MUX_HW_CTRL_VSSA in MUX_SWITCH_HW_CTRL when multiple channels enabled */
 149:Generated_Source\PSoC6/ADC_1.c ****         if(1uL < config->numChannels)
 150:Generated_Source\PSoC6/ADC_1.c ****         {
 151:Generated_Source\PSoC6/ADC_1.c ****             Cy_SAR_SetVssaSarSeqCtrl(ADC_1_SAR__HW, CY_SAR_SWITCH_SEQ_CTRL_ENABLE);
 152:Generated_Source\PSoC6/ADC_1.c ****         }
 153:Generated_Source\PSoC6/ADC_1.c ****     }
 154:Generated_Source\PSoC6/ADC_1.c **** 
 155:Generated_Source\PSoC6/ADC_1.c ****     return;
 924              		.loc 5 155 0
 925 0040 C046     		nop
 156:Generated_Source\PSoC6/ADC_1.c **** }
 926              		.loc 5 156 0
 927 0042 BD46     		mov	sp, r7
 928 0044 04B0     		add	sp, sp, #16
 929              		@ sp needed
 930 0046 80BD     		pop	{r7, pc}
 931              	.L54:
 932              		.align	2
 933              	.L53:
 934 0048 00001D41 		.word	1092419584
 935              		.cfi_endproc
 936              	.LFE188:
 937              		.size	ADC_1_InitConfig, .-ADC_1_InitConfig
 938              		.section	.text.ADC_1_SelectConfig,"ax",%progbits
 939              		.align	2
 940              		.global	ADC_1_SelectConfig
 941              		.code	16
 942              		.thumb_func
 943              		.type	ADC_1_SelectConfig, %function
 944              	ADC_1_SelectConfig:
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 106


 945              	.LFB189:
 157:Generated_Source\PSoC6/ADC_1.c **** 
 158:Generated_Source\PSoC6/ADC_1.c **** /* ****************************************************************************
 159:Generated_Source\PSoC6/ADC_1.c **** * Function Name: ADC_1_SelectConfig
 160:Generated_Source\PSoC6/ADC_1.c **** ****************************************************************************//*
 161:Generated_Source\PSoC6/ADC_1.c **** *
 162:Generated_Source\PSoC6/ADC_1.c **** * \brief Selects the predefined configuration for scanning.
 163:Generated_Source\PSoC6/ADC_1.c **** *
 164:Generated_Source\PSoC6/ADC_1.c **** * \param config Number of configuration in the ADC_1.
 165:Generated_Source\PSoC6/ADC_1.c **** *
 166:Generated_Source\PSoC6/ADC_1.c **** * \param restart Set to 1u if the ADC_1 should be  restarted after
 167:Generated_Source\PSoC6/ADC_1.c **** * selecting the configuration.
 168:Generated_Source\PSoC6/ADC_1.c **** *
 169:Generated_Source\PSoC6/ADC_1.c **** *******************************************************************************/
 170:Generated_Source\PSoC6/ADC_1.c **** void ADC_1_SelectConfig(uint32_t config, uint32_t restart)
 171:Generated_Source\PSoC6/ADC_1.c **** {
 946              		.loc 5 171 0
 947              		.cfi_startproc
 948              		@ args = 0, pretend = 0, frame = 8
 949              		@ frame_needed = 1, uses_anonymous_args = 0
 950 0000 80B5     		push	{r7, lr}
 951              		.cfi_def_cfa_offset 8
 952              		.cfi_offset 7, -8
 953              		.cfi_offset 14, -4
 954 0002 82B0     		sub	sp, sp, #8
 955              		.cfi_def_cfa_offset 16
 956 0004 00AF     		add	r7, sp, #0
 957              		.cfi_def_cfa_register 7
 958 0006 7860     		str	r0, [r7, #4]
 959 0008 3960     		str	r1, [r7]
 172:Generated_Source\PSoC6/ADC_1.c ****     /* Check whether the configuration number is valid or not */
 173:Generated_Source\PSoC6/ADC_1.c ****     if(ADC_1_TOTAL_CONFIGS > config)
 960              		.loc 5 173 0
 961 000a 7B68     		ldr	r3, [r7, #4]
 962 000c 002B     		cmp	r3, #0
 963 000e 26D1     		bne	.L59
 174:Generated_Source\PSoC6/ADC_1.c ****     {
 175:Generated_Source\PSoC6/ADC_1.c ****         /* Stop the ADC before changing configurations */
 176:Generated_Source\PSoC6/ADC_1.c ****         ADC_1_Stop();
 964              		.loc 5 176 0
 965 0010 FFF7FEFF 		bl	ADC_1_Stop
 177:Generated_Source\PSoC6/ADC_1.c ****         ADC_1_selected = 1u;
 966              		.loc 5 177 0
 967 0014 144B     		ldr	r3, .L60
 968 0016 0122     		movs	r2, #1
 969 0018 1A70     		strb	r2, [r3]
 178:Generated_Source\PSoC6/ADC_1.c **** 
 179:Generated_Source\PSoC6/ADC_1.c ****         if(0u == ADC_1_initVar)
 970              		.loc 5 179 0
 971 001a 144B     		ldr	r3, .L60+4
 972 001c 1B78     		ldrb	r3, [r3]
 973 001e 002B     		cmp	r3, #0
 974 0020 08D1     		bne	.L57
 180:Generated_Source\PSoC6/ADC_1.c ****         {
 181:Generated_Source\PSoC6/ADC_1.c ****             ADC_1_Init();
 975              		.loc 5 181 0
 976 0022 FFF7FEFF 		bl	ADC_1_Init
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 107


 182:Generated_Source\PSoC6/ADC_1.c ****             ADC_1_initVar |= ADC_1_INIT_VAR_INIT_FLAG;
 977              		.loc 5 182 0
 978 0026 114B     		ldr	r3, .L60+4
 979 0028 1B78     		ldrb	r3, [r3]
 980 002a 0122     		movs	r2, #1
 981 002c 1343     		orrs	r3, r2
 982 002e DAB2     		uxtb	r2, r3
 983 0030 0E4B     		ldr	r3, .L60+4
 984 0032 1A70     		strb	r2, [r3]
 985              	.L57:
 183:Generated_Source\PSoC6/ADC_1.c ****         }
 184:Generated_Source\PSoC6/ADC_1.c ****         #if (ADC_1_VREF_ROUTED)
 185:Generated_Source\PSoC6/ADC_1.c ****             ADC_1_vrefAMux_DisconnectAll();
 186:Generated_Source\PSoC6/ADC_1.c ****         #endif
 187:Generated_Source\PSoC6/ADC_1.c **** 
 188:Generated_Source\PSoC6/ADC_1.c ****         ADC_1_InitConfig(&ADC_1_allConfigs[config]);
 986              		.loc 5 188 0
 987 0034 7A68     		ldr	r2, [r7, #4]
 988 0036 1300     		movs	r3, r2
 989 0038 9B00     		lsls	r3, r3, #2
 990 003a 9B18     		adds	r3, r3, r2
 991 003c 9B00     		lsls	r3, r3, #2
 992 003e 0C4A     		ldr	r2, .L60+8
 993 0040 9B18     		adds	r3, r3, r2
 994 0042 1800     		movs	r0, r3
 995 0044 FFF7FEFF 		bl	ADC_1_InitConfig
 189:Generated_Source\PSoC6/ADC_1.c **** 
 190:Generated_Source\PSoC6/ADC_1.c ****         #if (ADC_1_VREF_ROUTED)
 191:Generated_Source\PSoC6/ADC_1.c ****             ADC_1_vrefAMux_Select((uint8)config);
 192:Generated_Source\PSoC6/ADC_1.c ****         #endif
 193:Generated_Source\PSoC6/ADC_1.c **** 
 194:Generated_Source\PSoC6/ADC_1.c ****         ADC_1_currentConfig = config;
 996              		.loc 5 194 0
 997 0048 0A4B     		ldr	r3, .L60+12
 998 004a 7A68     		ldr	r2, [r7, #4]
 999 004c 1A60     		str	r2, [r3]
 195:Generated_Source\PSoC6/ADC_1.c **** 
 196:Generated_Source\PSoC6/ADC_1.c ****         if(1u == restart)
 1000              		.loc 5 196 0
 1001 004e 3B68     		ldr	r3, [r7]
 1002 0050 012B     		cmp	r3, #1
 1003 0052 04D1     		bne	.L59
 197:Generated_Source\PSoC6/ADC_1.c ****         {
 198:Generated_Source\PSoC6/ADC_1.c ****             /* Restart the ADC */
 199:Generated_Source\PSoC6/ADC_1.c ****             ADC_1_Start();
 1004              		.loc 5 199 0
 1005 0054 FFF7FEFF 		bl	ADC_1_Start
 200:Generated_Source\PSoC6/ADC_1.c **** 
 201:Generated_Source\PSoC6/ADC_1.c ****             /* Restart the scan */
 202:Generated_Source\PSoC6/ADC_1.c ****             ADC_1_StartConvert();
 1006              		.loc 5 202 0
 1007 0058 FFF7FEFF 		bl	ADC_1_StartConvert
 203:Generated_Source\PSoC6/ADC_1.c ****         }
 204:Generated_Source\PSoC6/ADC_1.c ****     }
 205:Generated_Source\PSoC6/ADC_1.c ****     return;
 1008              		.loc 5 205 0
 1009 005c C046     		nop
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 108


 1010              	.L59:
 1011 005e C046     		nop
 206:Generated_Source\PSoC6/ADC_1.c **** }
 1012              		.loc 5 206 0
 1013 0060 BD46     		mov	sp, r7
 1014 0062 02B0     		add	sp, sp, #8
 1015              		@ sp needed
 1016 0064 80BD     		pop	{r7, pc}
 1017              	.L61:
 1018 0066 C046     		.align	2
 1019              	.L60:
 1020 0068 00000000 		.word	ADC_1_selected
 1021 006c 00000000 		.word	ADC_1_initVar
 1022 0070 00000000 		.word	ADC_1_allConfigs
 1023 0074 00000000 		.word	ADC_1_currentConfig
 1024              		.cfi_endproc
 1025              	.LFE189:
 1026              		.size	ADC_1_SelectConfig, .-ADC_1_SelectConfig
 1027              		.section	.text.ADC_1_StartConvert,"ax",%progbits
 1028              		.align	2
 1029              		.global	ADC_1_StartConvert
 1030              		.code	16
 1031              		.thumb_func
 1032              		.type	ADC_1_StartConvert, %function
 1033              	ADC_1_StartConvert:
 1034              	.LFB190:
 207:Generated_Source\PSoC6/ADC_1.c **** 
 208:Generated_Source\PSoC6/ADC_1.c **** /*******************************************************************************
 209:Generated_Source\PSoC6/ADC_1.c **** * Function Name: ADC_1_StartConvert
 210:Generated_Source\PSoC6/ADC_1.c **** ****************************************************************************//**
 211:Generated_Source\PSoC6/ADC_1.c **** *
 212:Generated_Source\PSoC6/ADC_1.c **** * \brief In continuous mode, this API starts the conversion process and it runs
 213:Generated_Source\PSoC6/ADC_1.c **** * continuously.
 214:Generated_Source\PSoC6/ADC_1.c **** 
 215:Generated_Source\PSoC6/ADC_1.c **** * In Single Shot mode, the function triggers a single scan and
 216:Generated_Source\PSoC6/ADC_1.c **** * every scan requires a call of this function. The mode is set with the
 217:Generated_Source\PSoC6/ADC_1.c **** * Sample Mode parameter in the customizer. The customizer setting can be
 218:Generated_Source\PSoC6/ADC_1.c **** * overridden at run time with the ADC_1_SetConvertMode() function.
 219:Generated_Source\PSoC6/ADC_1.c **** *
 220:Generated_Source\PSoC6/ADC_1.c **** * \param None
 221:Generated_Source\PSoC6/ADC_1.c **** *
 222:Generated_Source\PSoC6/ADC_1.c **** * \return None
 223:Generated_Source\PSoC6/ADC_1.c **** *
 224:Generated_Source\PSoC6/ADC_1.c **** * \sideeffect None
 225:Generated_Source\PSoC6/ADC_1.c **** *
 226:Generated_Source\PSoC6/ADC_1.c **** *******************************************************************************/
 227:Generated_Source\PSoC6/ADC_1.c **** void ADC_1_StartConvert(void)
 228:Generated_Source\PSoC6/ADC_1.c **** {
 1035              		.loc 5 228 0
 1036              		.cfi_startproc
 1037              		@ args = 0, pretend = 0, frame = 0
 1038              		@ frame_needed = 1, uses_anonymous_args = 0
 1039 0000 80B5     		push	{r7, lr}
 1040              		.cfi_def_cfa_offset 8
 1041              		.cfi_offset 7, -8
 1042              		.cfi_offset 14, -4
 1043 0002 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 109


 1044              		.cfi_def_cfa_register 7
 229:Generated_Source\PSoC6/ADC_1.c ****     if (SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_Msk == (ADC_1_SAR__HW->SAMPLE_CTRL & SAR_SAMPLE_CTRL_DSI_
 1045              		.loc 5 229 0
 1046 0004 094B     		ldr	r3, .L66
 1047 0006 5A68     		ldr	r2, [r3, #4]
 1048 0008 8023     		movs	r3, #128
 1049 000a DB02     		lsls	r3, r3, #11
 1050 000c 1340     		ands	r3, r2
 1051 000e 05D0     		beq	.L63
 230:Generated_Source\PSoC6/ADC_1.c ****     {
 231:Generated_Source\PSoC6/ADC_1.c ****         Cy_SAR_StartConvert(ADC_1_SAR__HW, CY_SAR_START_CONVERT_CONTINUOUS);
 1052              		.loc 5 231 0
 1053 0010 064B     		ldr	r3, .L66
 1054 0012 0121     		movs	r1, #1
 1055 0014 1800     		movs	r0, r3
 1056 0016 FFF7FEFF 		bl	Cy_SAR_StartConvert
 232:Generated_Source\PSoC6/ADC_1.c ****     }
 233:Generated_Source\PSoC6/ADC_1.c ****     else
 234:Generated_Source\PSoC6/ADC_1.c ****     {
 235:Generated_Source\PSoC6/ADC_1.c ****         Cy_SAR_StartConvert(ADC_1_SAR__HW, CY_SAR_START_CONVERT_SINGLE_SHOT);
 236:Generated_Source\PSoC6/ADC_1.c ****     }
 237:Generated_Source\PSoC6/ADC_1.c **** }
 1057              		.loc 5 237 0
 1058 001a 04E0     		b	.L65
 1059              	.L63:
 235:Generated_Source\PSoC6/ADC_1.c ****     }
 1060              		.loc 5 235 0
 1061 001c 034B     		ldr	r3, .L66
 1062 001e 0021     		movs	r1, #0
 1063 0020 1800     		movs	r0, r3
 1064 0022 FFF7FEFF 		bl	Cy_SAR_StartConvert
 1065              	.L65:
 1066              		.loc 5 237 0
 1067 0026 C046     		nop
 1068 0028 BD46     		mov	sp, r7
 1069              		@ sp needed
 1070 002a 80BD     		pop	{r7, pc}
 1071              	.L67:
 1072              		.align	2
 1073              	.L66:
 1074 002c 00001D41 		.word	1092419584
 1075              		.cfi_endproc
 1076              	.LFE190:
 1077              		.size	ADC_1_StartConvert, .-ADC_1_StartConvert
 1078              		.section	.text.ADC_1_SetConvertMode,"ax",%progbits
 1079              		.align	2
 1080              		.global	ADC_1_SetConvertMode
 1081              		.code	16
 1082              		.thumb_func
 1083              		.type	ADC_1_SetConvertMode, %function
 1084              	ADC_1_SetConvertMode:
 1085              	.LFB191:
 238:Generated_Source\PSoC6/ADC_1.c **** 
 239:Generated_Source\PSoC6/ADC_1.c **** /*******************************************************************************
 240:Generated_Source\PSoC6/ADC_1.c **** * Function Name: ADC_1_SetConvertMode
 241:Generated_Source\PSoC6/ADC_1.c **** ****************************************************************************//**
 242:Generated_Source\PSoC6/ADC_1.c **** *
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 110


 243:Generated_Source\PSoC6/ADC_1.c **** * \brief Sets the conversion mode to either Single-Shot or continuous. This
 244:Generated_Source\PSoC6/ADC_1.c **** * function overrides the settings applied in the customizer. Changing
 245:Generated_Source\PSoC6/ADC_1.c **** * configurations will restore the values set in the customizer.
 246:Generated_Source\PSoC6/ADC_1.c **** *
 247:Generated_Source\PSoC6/ADC_1.c **** * \param mode Sets the conversion mode.
 248:Generated_Source\PSoC6/ADC_1.c **** *
 249:Generated_Source\PSoC6/ADC_1.c **** * \return None
 250:Generated_Source\PSoC6/ADC_1.c **** *
 251:Generated_Source\PSoC6/ADC_1.c **** * \sideeffect None
 252:Generated_Source\PSoC6/ADC_1.c **** *
 253:Generated_Source\PSoC6/ADC_1.c **** *******************************************************************************/
 254:Generated_Source\PSoC6/ADC_1.c **** void ADC_1_SetConvertMode(cy_en_sar_start_convert_sel_t mode)
 255:Generated_Source\PSoC6/ADC_1.c **** {
 1086              		.loc 5 255 0
 1087              		.cfi_startproc
 1088              		@ args = 0, pretend = 0, frame = 8
 1089              		@ frame_needed = 1, uses_anonymous_args = 0
 1090 0000 80B5     		push	{r7, lr}
 1091              		.cfi_def_cfa_offset 8
 1092              		.cfi_offset 7, -8
 1093              		.cfi_offset 14, -4
 1094 0002 82B0     		sub	sp, sp, #8
 1095              		.cfi_def_cfa_offset 16
 1096 0004 00AF     		add	r7, sp, #0
 1097              		.cfi_def_cfa_register 7
 1098 0006 0200     		movs	r2, r0
 1099 0008 FB1D     		adds	r3, r7, #7
 1100 000a 1A70     		strb	r2, [r3]
 256:Generated_Source\PSoC6/ADC_1.c ****     switch(mode)
 1101              		.loc 5 256 0
 1102 000c FB1D     		adds	r3, r7, #7
 1103 000e 1B78     		ldrb	r3, [r3]
 1104 0010 012B     		cmp	r3, #1
 1105 0012 07D1     		bne	.L72
 257:Generated_Source\PSoC6/ADC_1.c ****     {
 258:Generated_Source\PSoC6/ADC_1.c ****     case CY_SAR_START_CONVERT_CONTINUOUS:
 259:Generated_Source\PSoC6/ADC_1.c ****         ADC_1_SAR__HW->SAMPLE_CTRL |= SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_Msk;
 1106              		.loc 5 259 0
 1107 0014 094B     		ldr	r3, .L73
 1108 0016 094A     		ldr	r2, .L73
 1109 0018 5268     		ldr	r2, [r2, #4]
 1110 001a 8021     		movs	r1, #128
 1111 001c C902     		lsls	r1, r1, #11
 1112 001e 0A43     		orrs	r2, r1
 1113 0020 5A60     		str	r2, [r3, #4]
 260:Generated_Source\PSoC6/ADC_1.c ****         break;
 1114              		.loc 5 260 0
 1115 0022 06E0     		b	.L71
 1116              	.L72:
 261:Generated_Source\PSoC6/ADC_1.c ****     case CY_SAR_START_CONVERT_SINGLE_SHOT:
 262:Generated_Source\PSoC6/ADC_1.c ****     default:
 263:Generated_Source\PSoC6/ADC_1.c ****         ADC_1_SAR__HW->SAMPLE_CTRL &= ~SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_Msk;
 1117              		.loc 5 263 0
 1118 0024 054B     		ldr	r3, .L73
 1119 0026 054A     		ldr	r2, .L73
 1120 0028 5268     		ldr	r2, [r2, #4]
 1121 002a 0549     		ldr	r1, .L73+4
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 111


 1122 002c 0A40     		ands	r2, r1
 1123 002e 5A60     		str	r2, [r3, #4]
 264:Generated_Source\PSoC6/ADC_1.c ****         break;
 1124              		.loc 5 264 0
 1125 0030 C046     		nop
 1126              	.L71:
 265:Generated_Source\PSoC6/ADC_1.c ****     }
 266:Generated_Source\PSoC6/ADC_1.c **** }
 1127              		.loc 5 266 0
 1128 0032 C046     		nop
 1129 0034 BD46     		mov	sp, r7
 1130 0036 02B0     		add	sp, sp, #8
 1131              		@ sp needed
 1132 0038 80BD     		pop	{r7, pc}
 1133              	.L74:
 1134 003a C046     		.align	2
 1135              	.L73:
 1136 003c 00001D41 		.word	1092419584
 1137 0040 FFFFFBFF 		.word	-262145
 1138              		.cfi_endproc
 1139              	.LFE191:
 1140              		.size	ADC_1_SetConvertMode, .-ADC_1_SetConvertMode
 1141              		.section	.text.ADC_1_IRQ_Enable,"ax",%progbits
 1142              		.align	2
 1143              		.global	ADC_1_IRQ_Enable
 1144              		.code	16
 1145              		.thumb_func
 1146              		.type	ADC_1_IRQ_Enable, %function
 1147              	ADC_1_IRQ_Enable:
 1148              	.LFB192:
 267:Generated_Source\PSoC6/ADC_1.c **** 
 268:Generated_Source\PSoC6/ADC_1.c **** /* ****************************************************************************
 269:Generated_Source\PSoC6/ADC_1.c **** * Function Name: ADC_1_IRQ_Enable
 270:Generated_Source\PSoC6/ADC_1.c **** ****************************************************************************//*
 271:Generated_Source\PSoC6/ADC_1.c **** *
 272:Generated_Source\PSoC6/ADC_1.c **** * \brief Enables interrupts to occur at the end of a conversion. Global
 273:Generated_Source\PSoC6/ADC_1.c **** * interrupts must also be enabled for the ADC_1 interrupts to occur.
 274:Generated_Source\PSoC6/ADC_1.c **** *
 275:Generated_Source\PSoC6/ADC_1.c **** * \param None
 276:Generated_Source\PSoC6/ADC_1.c **** *
 277:Generated_Source\PSoC6/ADC_1.c **** * \return None
 278:Generated_Source\PSoC6/ADC_1.c **** *
 279:Generated_Source\PSoC6/ADC_1.c **** * \sideeffect None
 280:Generated_Source\PSoC6/ADC_1.c **** *
 281:Generated_Source\PSoC6/ADC_1.c **** *******************************************************************************/
 282:Generated_Source\PSoC6/ADC_1.c **** void ADC_1_IRQ_Enable(void){
 1149              		.loc 5 282 0
 1150              		.cfi_startproc
 1151              		@ args = 0, pretend = 0, frame = 0
 1152              		@ frame_needed = 1, uses_anonymous_args = 0
 1153 0000 80B5     		push	{r7, lr}
 1154              		.cfi_def_cfa_offset 8
 1155              		.cfi_offset 7, -8
 1156              		.cfi_offset 14, -4
 1157 0002 00AF     		add	r7, sp, #0
 1158              		.cfi_def_cfa_register 7
 283:Generated_Source\PSoC6/ADC_1.c ****     /* Interrupt core assignment will be up to the user. */
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 112


 284:Generated_Source\PSoC6/ADC_1.c ****     #ifdef ADC_1_IRQ__INTC_CORTEXM4_ASSIGNED
 285:Generated_Source\PSoC6/ADC_1.c ****     #if (CY_CPU_CORTEX_M4)
 286:Generated_Source\PSoC6/ADC_1.c ****         NVIC_EnableIRQ(ADC_1_IRQ_cfg.intrSrc);
 287:Generated_Source\PSoC6/ADC_1.c ****     #endif
 288:Generated_Source\PSoC6/ADC_1.c ****     #endif
 289:Generated_Source\PSoC6/ADC_1.c **** 
 290:Generated_Source\PSoC6/ADC_1.c ****     #ifdef ADC_1_IRQ__INTC_CORTEXM0P_ASSIGNED
 291:Generated_Source\PSoC6/ADC_1.c ****     #if (CY_CPU_CORTEX_M0P)
 292:Generated_Source\PSoC6/ADC_1.c ****         NVIC_EnableIRQ(ADC_1_IRQ_cfg.intrSrc);
 293:Generated_Source\PSoC6/ADC_1.c ****     #endif
 294:Generated_Source\PSoC6/ADC_1.c ****     #endif
 295:Generated_Source\PSoC6/ADC_1.c **** }
 1159              		.loc 5 295 0
 1160 0004 C046     		nop
 1161 0006 BD46     		mov	sp, r7
 1162              		@ sp needed
 1163 0008 80BD     		pop	{r7, pc}
 1164              		.cfi_endproc
 1165              	.LFE192:
 1166              		.size	ADC_1_IRQ_Enable, .-ADC_1_IRQ_Enable
 1167              		.section	.text.ADC_1_IRQ_Disable,"ax",%progbits
 1168              		.align	2
 1169              		.global	ADC_1_IRQ_Disable
 1170              		.code	16
 1171              		.thumb_func
 1172              		.type	ADC_1_IRQ_Disable, %function
 1173              	ADC_1_IRQ_Disable:
 1174              	.LFB193:
 296:Generated_Source\PSoC6/ADC_1.c **** 
 297:Generated_Source\PSoC6/ADC_1.c **** /* ****************************************************************************
 298:Generated_Source\PSoC6/ADC_1.c **** * Function Name: ADC_1_IRQ_Disable
 299:Generated_Source\PSoC6/ADC_1.c **** ****************************************************************************//*
 300:Generated_Source\PSoC6/ADC_1.c **** *
 301:Generated_Source\PSoC6/ADC_1.c **** * \brief Disables end of conversion interrupts.
 302:Generated_Source\PSoC6/ADC_1.c **** *
 303:Generated_Source\PSoC6/ADC_1.c **** * \param None
 304:Generated_Source\PSoC6/ADC_1.c **** *
 305:Generated_Source\PSoC6/ADC_1.c **** * \return None
 306:Generated_Source\PSoC6/ADC_1.c **** *
 307:Generated_Source\PSoC6/ADC_1.c **** * \sideeffect None
 308:Generated_Source\PSoC6/ADC_1.c **** *
 309:Generated_Source\PSoC6/ADC_1.c **** *******************************************************************************/
 310:Generated_Source\PSoC6/ADC_1.c **** void ADC_1_IRQ_Disable(void){
 1175              		.loc 5 310 0
 1176              		.cfi_startproc
 1177              		@ args = 0, pretend = 0, frame = 0
 1178              		@ frame_needed = 1, uses_anonymous_args = 0
 1179 0000 80B5     		push	{r7, lr}
 1180              		.cfi_def_cfa_offset 8
 1181              		.cfi_offset 7, -8
 1182              		.cfi_offset 14, -4
 1183 0002 00AF     		add	r7, sp, #0
 1184              		.cfi_def_cfa_register 7
 311:Generated_Source\PSoC6/ADC_1.c ****     /* Interrupt core assignment will be up to the user. */
 312:Generated_Source\PSoC6/ADC_1.c ****     #ifdef ADC_1_IRQ__INTC_CORTEXM4_ASSIGNED
 313:Generated_Source\PSoC6/ADC_1.c ****     #if (CY_CPU_CORTEX_M4)
 314:Generated_Source\PSoC6/ADC_1.c ****         NVIC_DisableIRQ(ADC_1_IRQ_cfg.intrSrc);
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 113


 315:Generated_Source\PSoC6/ADC_1.c ****     #endif
 316:Generated_Source\PSoC6/ADC_1.c ****     #endif
 317:Generated_Source\PSoC6/ADC_1.c **** 
 318:Generated_Source\PSoC6/ADC_1.c ****     #ifdef ADC_1_IRQ__INTC_CORTEXM0P_ASSIGNED
 319:Generated_Source\PSoC6/ADC_1.c ****     #if (CY_CPU_CORTEX_M0P)
 320:Generated_Source\PSoC6/ADC_1.c ****         NVIC_DisableIRQ(ADC_1_IRQ_cfg.intrSrc);
 321:Generated_Source\PSoC6/ADC_1.c ****     #endif
 322:Generated_Source\PSoC6/ADC_1.c ****     #endif
 323:Generated_Source\PSoC6/ADC_1.c **** }
 1185              		.loc 5 323 0
 1186 0004 C046     		nop
 1187 0006 BD46     		mov	sp, r7
 1188              		@ sp needed
 1189 0008 80BD     		pop	{r7, pc}
 1190              		.cfi_endproc
 1191              	.LFE193:
 1192              		.size	ADC_1_IRQ_Disable, .-ADC_1_IRQ_Disable
 1193              		.section	.text.ADC_1_SetEosMask,"ax",%progbits
 1194              		.align	2
 1195              		.global	ADC_1_SetEosMask
 1196              		.code	16
 1197              		.thumb_func
 1198              		.type	ADC_1_SetEosMask, %function
 1199              	ADC_1_SetEosMask:
 1200              	.LFB194:
 324:Generated_Source\PSoC6/ADC_1.c **** 
 325:Generated_Source\PSoC6/ADC_1.c **** /*******************************************************************************
 326:Generated_Source\PSoC6/ADC_1.c **** * Function Name: ADC_1_SetEosMask
 327:Generated_Source\PSoC6/ADC_1.c **** ****************************************************************************//**
 328:Generated_Source\PSoC6/ADC_1.c **** *
 329:Generated_Source\PSoC6/ADC_1.c **** * \brief Sets or clears the End of Scan (EOS) interrupt mask.
 330:Generated_Source\PSoC6/ADC_1.c **** *
 331:Generated_Source\PSoC6/ADC_1.c **** * \param mask 1 to set the mask, 0 to clear the mask.
 332:Generated_Source\PSoC6/ADC_1.c **** *
 333:Generated_Source\PSoC6/ADC_1.c **** * \return None
 334:Generated_Source\PSoC6/ADC_1.c **** *
 335:Generated_Source\PSoC6/ADC_1.c **** * \sideeffect All other bits in the INTR register are cleared by this function.
 336:Generated_Source\PSoC6/ADC_1.c **** *
 337:Generated_Source\PSoC6/ADC_1.c **** *******************************************************************************/
 338:Generated_Source\PSoC6/ADC_1.c **** void ADC_1_SetEosMask(uint32_t mask)
 339:Generated_Source\PSoC6/ADC_1.c **** {
 1201              		.loc 5 339 0
 1202              		.cfi_startproc
 1203              		@ args = 0, pretend = 0, frame = 16
 1204              		@ frame_needed = 1, uses_anonymous_args = 0
 1205 0000 80B5     		push	{r7, lr}
 1206              		.cfi_def_cfa_offset 8
 1207              		.cfi_offset 7, -8
 1208              		.cfi_offset 14, -4
 1209 0002 84B0     		sub	sp, sp, #16
 1210              		.cfi_def_cfa_offset 24
 1211 0004 00AF     		add	r7, sp, #0
 1212              		.cfi_def_cfa_register 7
 1213 0006 7860     		str	r0, [r7, #4]
 340:Generated_Source\PSoC6/ADC_1.c ****     uint32_t intrMaskReg;
 341:Generated_Source\PSoC6/ADC_1.c **** 
 342:Generated_Source\PSoC6/ADC_1.c ****     intrMaskReg = (0uL == mask) ? CY_SAR_DEINIT : SAR_INTR_MASK_EOS_MASK_Msk;
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 114


 1214              		.loc 5 342 0
 1215 0008 7B68     		ldr	r3, [r7, #4]
 1216 000a 5A1E     		subs	r2, r3, #1
 1217 000c 9341     		sbcs	r3, r3, r2
 1218 000e DBB2     		uxtb	r3, r3
 1219 0010 FB60     		str	r3, [r7, #12]
 343:Generated_Source\PSoC6/ADC_1.c **** 
 344:Generated_Source\PSoC6/ADC_1.c ****     Cy_SAR_SetInterruptMask(ADC_1_SAR__HW, intrMaskReg);
 1220              		.loc 5 344 0
 1221 0012 FB68     		ldr	r3, [r7, #12]
 1222 0014 044A     		ldr	r2, .L78
 1223 0016 1900     		movs	r1, r3
 1224 0018 1000     		movs	r0, r2
 1225 001a FFF7FEFF 		bl	Cy_SAR_SetInterruptMask
 345:Generated_Source\PSoC6/ADC_1.c **** }
 1226              		.loc 5 345 0
 1227 001e C046     		nop
 1228 0020 BD46     		mov	sp, r7
 1229 0022 04B0     		add	sp, sp, #16
 1230              		@ sp needed
 1231 0024 80BD     		pop	{r7, pc}
 1232              	.L79:
 1233 0026 C046     		.align	2
 1234              	.L78:
 1235 0028 00001D41 		.word	1092419584
 1236              		.cfi_endproc
 1237              	.LFE194:
 1238              		.size	ADC_1_SetEosMask, .-ADC_1_SetEosMask
 1239              		.section	.text.ADC_1_SetChanMask,"ax",%progbits
 1240              		.align	2
 1241              		.global	ADC_1_SetChanMask
 1242              		.code	16
 1243              		.thumb_func
 1244              		.type	ADC_1_SetChanMask, %function
 1245              	ADC_1_SetChanMask:
 1246              	.LFB195:
 346:Generated_Source\PSoC6/ADC_1.c **** 
 347:Generated_Source\PSoC6/ADC_1.c **** /******************************************************************************
 348:Generated_Source\PSoC6/ADC_1.c **** * Function Name: ADC_1_SetChanMask
 349:Generated_Source\PSoC6/ADC_1.c **** ****************************************************************************//*
 350:Generated_Source\PSoC6/ADC_1.c **** *
 351:Generated_Source\PSoC6/ADC_1.c **** * \brief Sets enable/disable mask for all channels in current configuration.
 352:Generated_Source\PSoC6/ADC_1.c **** *
 353:Generated_Source\PSoC6/ADC_1.c **** *
 354:Generated_Source\PSoC6/ADC_1.c **** * \param enableMask
 355:Generated_Source\PSoC6/ADC_1.c **** *  Channel enable/disable mask.
 356:Generated_Source\PSoC6/ADC_1.c **** *
 357:Generated_Source\PSoC6/ADC_1.c **** * \sideeffect
 358:Generated_Source\PSoC6/ADC_1.c **** *  None.
 359:Generated_Source\PSoC6/ADC_1.c **** *
 360:Generated_Source\PSoC6/ADC_1.c **** *******************************************************************************/
 361:Generated_Source\PSoC6/ADC_1.c **** void ADC_1_SetChanMask(uint32_t enableMask)
 362:Generated_Source\PSoC6/ADC_1.c **** {
 1247              		.loc 5 362 0
 1248              		.cfi_startproc
 1249              		@ args = 0, pretend = 0, frame = 16
 1250              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 115


 1251 0000 80B5     		push	{r7, lr}
 1252              		.cfi_def_cfa_offset 8
 1253              		.cfi_offset 7, -8
 1254              		.cfi_offset 14, -4
 1255 0002 84B0     		sub	sp, sp, #16
 1256              		.cfi_def_cfa_offset 24
 1257 0004 00AF     		add	r7, sp, #0
 1258              		.cfi_def_cfa_register 7
 1259 0006 7860     		str	r0, [r7, #4]
 363:Generated_Source\PSoC6/ADC_1.c ****     uint32 chanCount = ADC_1_allConfigs[ADC_1_currentConfig].numChannels;
 1260              		.loc 5 363 0
 1261 0008 0E4B     		ldr	r3, .L81
 1262 000a 1A68     		ldr	r2, [r3]
 1263 000c 0E49     		ldr	r1, .L81+4
 1264 000e 1300     		movs	r3, r2
 1265 0010 9B00     		lsls	r3, r3, #2
 1266 0012 9B18     		adds	r3, r3, r2
 1267 0014 9B00     		lsls	r3, r3, #2
 1268 0016 CB18     		adds	r3, r1, r3
 1269 0018 0433     		adds	r3, r3, #4
 1270 001a 1B68     		ldr	r3, [r3]
 1271 001c FB60     		str	r3, [r7, #12]
 364:Generated_Source\PSoC6/ADC_1.c ****     enableMask &= (uint32)((uint32)(1ul << chanCount) - 1ul);
 1272              		.loc 5 364 0
 1273 001e 0122     		movs	r2, #1
 1274 0020 FB68     		ldr	r3, [r7, #12]
 1275 0022 9A40     		lsls	r2, r2, r3
 1276 0024 1300     		movs	r3, r2
 1277 0026 5A1E     		subs	r2, r3, #1
 1278 0028 7B68     		ldr	r3, [r7, #4]
 1279 002a 1340     		ands	r3, r2
 1280 002c 7B60     		str	r3, [r7, #4]
 365:Generated_Source\PSoC6/ADC_1.c **** 
 366:Generated_Source\PSoC6/ADC_1.c ****     Cy_SAR_SetChanMask(ADC_1_SAR__HW, enableMask);
 1281              		.loc 5 366 0
 1282 002e 7B68     		ldr	r3, [r7, #4]
 1283 0030 064A     		ldr	r2, .L81+8
 1284 0032 1900     		movs	r1, r3
 1285 0034 1000     		movs	r0, r2
 1286 0036 FFF7FEFF 		bl	Cy_SAR_SetChanMask
 367:Generated_Source\PSoC6/ADC_1.c **** }
 1287              		.loc 5 367 0
 1288 003a C046     		nop
 1289 003c BD46     		mov	sp, r7
 1290 003e 04B0     		add	sp, sp, #16
 1291              		@ sp needed
 1292 0040 80BD     		pop	{r7, pc}
 1293              	.L82:
 1294 0042 C046     		.align	2
 1295              	.L81:
 1296 0044 00000000 		.word	ADC_1_currentConfig
 1297 0048 00000000 		.word	ADC_1_allConfigs
 1298 004c 00001D41 		.word	1092419584
 1299              		.cfi_endproc
 1300              	.LFE195:
 1301              		.size	ADC_1_SetChanMask, .-ADC_1_SetChanMask
 1302              		.section	.text.ADC_1_IsEndConversion,"ax",%progbits
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 116


 1303              		.align	2
 1304              		.global	ADC_1_IsEndConversion
 1305              		.code	16
 1306              		.thumb_func
 1307              		.type	ADC_1_IsEndConversion, %function
 1308              	ADC_1_IsEndConversion:
 1309              	.LFB196:
 368:Generated_Source\PSoC6/ADC_1.c **** 
 369:Generated_Source\PSoC6/ADC_1.c **** /*******************************************************************************
 370:Generated_Source\PSoC6/ADC_1.c **** * Function Name: ADC_1_IsEndConversion
 371:Generated_Source\PSoC6/ADC_1.c **** ****************************************************************************//**
 372:Generated_Source\PSoC6/ADC_1.c **** *
 373:Generated_Source\PSoC6/ADC_1.c **** * \brief Immediately returns the status of the conversion or does not return
 374:Generated_Source\PSoC6/ADC_1.c **** * (blocking) until the conversion completes, depending on the retMode parameter.
 375:Generated_Source\PSoC6/ADC_1.c **** * In blocking mode, there is a time out of about 10 seconds for a CPU speed of
 376:Generated_Source\PSoC6/ADC_1.c **** * 100 Mhz.
 377:Generated_Source\PSoC6/ADC_1.c **** *
 378:Generated_Source\PSoC6/ADC_1.c **** * \param retMode Check conversion return mode.
 379:Generated_Source\PSoC6/ADC_1.c **** *
 380:Generated_Source\PSoC6/ADC_1.c **** * \return uint32_t: If a nonzero value is returned, the last conversion is complete.
 381:Generated_Source\PSoC6/ADC_1.c **** * If the returned value is zero, the ADC_1 is still calculating the last result.
 382:Generated_Source\PSoC6/ADC_1.c **** *
 383:Generated_Source\PSoC6/ADC_1.c **** * \sideeffect This function reads the end of conversion status, and clears it afterward.
 384:Generated_Source\PSoC6/ADC_1.c **** *
 385:Generated_Source\PSoC6/ADC_1.c **** *******************************************************************************/
 386:Generated_Source\PSoC6/ADC_1.c **** uint32_t ADC_1_IsEndConversion(cy_en_sar_return_mode_t retMode)
 387:Generated_Source\PSoC6/ADC_1.c **** {
 1310              		.loc 5 387 0
 1311              		.cfi_startproc
 1312              		@ args = 0, pretend = 0, frame = 16
 1313              		@ frame_needed = 1, uses_anonymous_args = 0
 1314 0000 80B5     		push	{r7, lr}
 1315              		.cfi_def_cfa_offset 8
 1316              		.cfi_offset 7, -8
 1317              		.cfi_offset 14, -4
 1318 0002 84B0     		sub	sp, sp, #16
 1319              		.cfi_def_cfa_offset 24
 1320 0004 00AF     		add	r7, sp, #0
 1321              		.cfi_def_cfa_register 7
 1322 0006 0200     		movs	r2, r0
 1323 0008 FB1D     		adds	r3, r7, #7
 1324 000a 1A70     		strb	r2, [r3]
 388:Generated_Source\PSoC6/ADC_1.c ****     uint32 endOfConversion = 0u;
 1325              		.loc 5 388 0
 1326 000c 0023     		movs	r3, #0
 1327 000e FB60     		str	r3, [r7, #12]
 389:Generated_Source\PSoC6/ADC_1.c ****     cy_en_sar_status_t result;
 390:Generated_Source\PSoC6/ADC_1.c **** 
 391:Generated_Source\PSoC6/ADC_1.c ****     result = Cy_SAR_IsEndConversion(ADC_1_SAR__HW, retMode);
 1328              		.loc 5 391 0
 1329 0010 FB1D     		adds	r3, r7, #7
 1330 0012 1B78     		ldrb	r3, [r3]
 1331 0014 084A     		ldr	r2, .L86
 1332 0016 1900     		movs	r1, r3
 1333 0018 1000     		movs	r0, r2
 1334 001a FFF7FEFF 		bl	Cy_SAR_IsEndConversion
 1335 001e 0300     		movs	r3, r0
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 117


 1336 0020 BB60     		str	r3, [r7, #8]
 392:Generated_Source\PSoC6/ADC_1.c **** 
 393:Generated_Source\PSoC6/ADC_1.c ****     if (result == CY_SAR_SUCCESS)
 1337              		.loc 5 393 0
 1338 0022 BB68     		ldr	r3, [r7, #8]
 1339 0024 002B     		cmp	r3, #0
 1340 0026 01D1     		bne	.L84
 394:Generated_Source\PSoC6/ADC_1.c ****     {
 395:Generated_Source\PSoC6/ADC_1.c ****         endOfConversion = 1u;
 1341              		.loc 5 395 0
 1342 0028 0123     		movs	r3, #1
 1343 002a FB60     		str	r3, [r7, #12]
 1344              	.L84:
 396:Generated_Source\PSoC6/ADC_1.c ****     }
 397:Generated_Source\PSoC6/ADC_1.c **** 
 398:Generated_Source\PSoC6/ADC_1.c ****     return endOfConversion;
 1345              		.loc 5 398 0
 1346 002c FB68     		ldr	r3, [r7, #12]
 399:Generated_Source\PSoC6/ADC_1.c **** }
 1347              		.loc 5 399 0
 1348 002e 1800     		movs	r0, r3
 1349 0030 BD46     		mov	sp, r7
 1350 0032 04B0     		add	sp, sp, #16
 1351              		@ sp needed
 1352 0034 80BD     		pop	{r7, pc}
 1353              	.L87:
 1354 0036 C046     		.align	2
 1355              	.L86:
 1356 0038 00001D41 		.word	1092419584
 1357              		.cfi_endproc
 1358              	.LFE196:
 1359              		.size	ADC_1_IsEndConversion, .-ADC_1_IsEndConversion
 1360              		.section	.text.ADC_1_Init,"ax",%progbits
 1361              		.align	2
 1362              		.global	ADC_1_Init
 1363              		.code	16
 1364              		.thumb_func
 1365              		.type	ADC_1_Init, %function
 1366              	ADC_1_Init:
 1367              	.LFB197:
 400:Generated_Source\PSoC6/ADC_1.c **** 
 401:Generated_Source\PSoC6/ADC_1.c **** /* ****************************************************************************
 402:Generated_Source\PSoC6/ADC_1.c **** * Function Name: ADC_1_Init
 403:Generated_Source\PSoC6/ADC_1.c **** ****************************************************************************//*
 404:Generated_Source\PSoC6/ADC_1.c **** *
 405:Generated_Source\PSoC6/ADC_1.c **** * \brief Initialize the component according to parameters defined in the
 406:Generated_Source\PSoC6/ADC_1.c **** * customizer.
 407:Generated_Source\PSoC6/ADC_1.c **** *
 408:Generated_Source\PSoC6/ADC_1.c **** * \param None
 409:Generated_Source\PSoC6/ADC_1.c **** *
 410:Generated_Source\PSoC6/ADC_1.c **** * \return None
 411:Generated_Source\PSoC6/ADC_1.c **** *
 412:Generated_Source\PSoC6/ADC_1.c **** * \sideeffect None
 413:Generated_Source\PSoC6/ADC_1.c **** *
 414:Generated_Source\PSoC6/ADC_1.c **** *******************************************************************************/
 415:Generated_Source\PSoC6/ADC_1.c **** void ADC_1_Init(void)
 416:Generated_Source\PSoC6/ADC_1.c **** {
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 118


 1368              		.loc 5 416 0
 1369              		.cfi_startproc
 1370              		@ args = 0, pretend = 0, frame = 8
 1371              		@ frame_needed = 1, uses_anonymous_args = 0
 1372 0000 80B5     		push	{r7, lr}
 1373              		.cfi_def_cfa_offset 8
 1374              		.cfi_offset 7, -8
 1375              		.cfi_offset 14, -4
 1376 0002 82B0     		sub	sp, sp, #8
 1377              		.cfi_def_cfa_offset 16
 1378 0004 00AF     		add	r7, sp, #0
 1379              		.cfi_def_cfa_register 7
 417:Generated_Source\PSoC6/ADC_1.c ****     uint32_t configNum = 0u;
 1380              		.loc 5 417 0
 1381 0006 0023     		movs	r3, #0
 1382 0008 7B60     		str	r3, [r7, #4]
 418:Generated_Source\PSoC6/ADC_1.c **** 
 419:Generated_Source\PSoC6/ADC_1.c ****     if(0u == ADC_1_initVar)
 1383              		.loc 5 419 0
 1384 000a 0D4B     		ldr	r3, .L91
 1385 000c 1B78     		ldrb	r3, [r3]
 1386 000e 002B     		cmp	r3, #0
 1387 0010 12D1     		bne	.L90
 420:Generated_Source\PSoC6/ADC_1.c ****     {
 421:Generated_Source\PSoC6/ADC_1.c ****         /* Interrupt core assignment will be up to the user. Initialize but do not enable the inter
 422:Generated_Source\PSoC6/ADC_1.c ****         #ifdef ADC_1_IRQ__INTC_CORTEXM4_ASSIGNED
 423:Generated_Source\PSoC6/ADC_1.c ****         #if (CY_CPU_CORTEX_M4)
 424:Generated_Source\PSoC6/ADC_1.c ****             (void)Cy_SysInt_Init(&ADC_1_IRQ_cfg, &ADC_1_ISR);
 425:Generated_Source\PSoC6/ADC_1.c ****         #endif
 426:Generated_Source\PSoC6/ADC_1.c ****         #endif
 427:Generated_Source\PSoC6/ADC_1.c **** 
 428:Generated_Source\PSoC6/ADC_1.c ****         #ifdef ADC_1_IRQ__INTC_CORTEXM0P_ASSIGNED
 429:Generated_Source\PSoC6/ADC_1.c ****         #if (CY_CPU_CORTEX_M0P)
 430:Generated_Source\PSoC6/ADC_1.c ****             (void)Cy_SysInt_Init(&ADC_1_IRQ_cfg, &ADC_1_ISR);
 431:Generated_Source\PSoC6/ADC_1.c ****         #endif
 432:Generated_Source\PSoC6/ADC_1.c ****         #endif
 433:Generated_Source\PSoC6/ADC_1.c **** 
 434:Generated_Source\PSoC6/ADC_1.c ****         /* Initialize configuration zero if SelectConfig has not been called */
 435:Generated_Source\PSoC6/ADC_1.c ****         if(0u == ADC_1_selected)
 1388              		.loc 5 435 0
 1389 0012 0C4B     		ldr	r3, .L91+4
 1390 0014 1B78     		ldrb	r3, [r3]
 1391 0016 002B     		cmp	r3, #0
 1392 0018 0ED1     		bne	.L90
 436:Generated_Source\PSoC6/ADC_1.c ****         {
 437:Generated_Source\PSoC6/ADC_1.c ****             ADC_1_selected = 1u;
 1393              		.loc 5 437 0
 1394 001a 0A4B     		ldr	r3, .L91+4
 1395 001c 0122     		movs	r2, #1
 1396 001e 1A70     		strb	r2, [r3]
 438:Generated_Source\PSoC6/ADC_1.c ****             configNum = 0uL;
 1397              		.loc 5 438 0
 1398 0020 0023     		movs	r3, #0
 1399 0022 7B60     		str	r3, [r7, #4]
 439:Generated_Source\PSoC6/ADC_1.c **** 
 440:Generated_Source\PSoC6/ADC_1.c ****             /* Change Vref selection if is was routed by Creator. Break. */
 441:Generated_Source\PSoC6/ADC_1.c ****             #if (ADC_1_VREF_ROUTED)
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 119


 442:Generated_Source\PSoC6/ADC_1.c ****                 ADC_1_vrefAMux_DisconnectAll();
 443:Generated_Source\PSoC6/ADC_1.c ****             #endif
 444:Generated_Source\PSoC6/ADC_1.c **** 
 445:Generated_Source\PSoC6/ADC_1.c ****             ADC_1_InitConfig(&ADC_1_allConfigs[configNum]);
 1400              		.loc 5 445 0
 1401 0024 7A68     		ldr	r2, [r7, #4]
 1402 0026 1300     		movs	r3, r2
 1403 0028 9B00     		lsls	r3, r3, #2
 1404 002a 9B18     		adds	r3, r3, r2
 1405 002c 9B00     		lsls	r3, r3, #2
 1406 002e 064A     		ldr	r2, .L91+8
 1407 0030 9B18     		adds	r3, r3, r2
 1408 0032 1800     		movs	r0, r3
 1409 0034 FFF7FEFF 		bl	ADC_1_InitConfig
 1410              	.L90:
 446:Generated_Source\PSoC6/ADC_1.c **** 
 447:Generated_Source\PSoC6/ADC_1.c ****             /* Change Vref selection if is was routed by Creator. Make. */
 448:Generated_Source\PSoC6/ADC_1.c ****             #if (ADC_1_VREF_ROUTED)
 449:Generated_Source\PSoC6/ADC_1.c ****                 ADC_1_vrefAMux_Select((uint8)configNum);
 450:Generated_Source\PSoC6/ADC_1.c ****             #endif
 451:Generated_Source\PSoC6/ADC_1.c ****         }
 452:Generated_Source\PSoC6/ADC_1.c ****     }
 453:Generated_Source\PSoC6/ADC_1.c **** }
 1411              		.loc 5 453 0
 1412 0038 C046     		nop
 1413 003a BD46     		mov	sp, r7
 1414 003c 02B0     		add	sp, sp, #8
 1415              		@ sp needed
 1416 003e 80BD     		pop	{r7, pc}
 1417              	.L92:
 1418              		.align	2
 1419              	.L91:
 1420 0040 00000000 		.word	ADC_1_initVar
 1421 0044 00000000 		.word	ADC_1_selected
 1422 0048 00000000 		.word	ADC_1_allConfigs
 1423              		.cfi_endproc
 1424              	.LFE197:
 1425              		.size	ADC_1_Init, .-ADC_1_Init
 1426              		.text
 1427              	.Letext0:
 1428              		.file 6 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 1429              		.file 7 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 1430              		.file 8 "Generated_Source\\PSoC6\\pdl\\devices/psoc6/include/ip/cyip_peri.h"
 1431              		.file 9 "Generated_Source\\PSoC6\\pdl\\devices/psoc6/include/ip/cyip_sar.h"
 1432              		.file 10 "Generated_Source\\PSoC6\\pdl\\devices/psoc6/include/psoc6_01_config.h"
 1433              		.file 11 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/device/cy_device.h"
 1434              		.file 12 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/syslib/cy_syslib.h"
 1435              		.section	.debug_info,"",%progbits
 1436              	.Ldebug_info0:
 1437 0000 2C130000 		.4byte	0x132c
 1438 0004 0400     		.2byte	0x4
 1439 0006 00000000 		.4byte	.Ldebug_abbrev0
 1440 000a 04       		.byte	0x4
 1441 000b 01       		.uleb128 0x1
 1442 000c 9C0F0000 		.4byte	.LASF288
 1443 0010 0C       		.byte	0xc
 1444 0011 51010000 		.4byte	.LASF289
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 120


 1445 0015 EA050000 		.4byte	.LASF290
 1446 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1447 001d 00000000 		.4byte	0
 1448 0021 00000000 		.4byte	.Ldebug_line0
 1449 0025 02       		.uleb128 0x2
 1450 0026 02       		.byte	0x2
 1451 0027 05       		.byte	0x5
 1452 0028 9F020000 		.4byte	.LASF0
 1453 002c 02       		.uleb128 0x2
 1454 002d 01       		.byte	0x1
 1455 002e 08       		.byte	0x8
 1456 002f 280B0000 		.4byte	.LASF1
 1457 0033 02       		.uleb128 0x2
 1458 0034 01       		.byte	0x1
 1459 0035 06       		.byte	0x6
 1460 0036 680F0000 		.4byte	.LASF2
 1461 003a 03       		.uleb128 0x3
 1462 003b 060D0000 		.4byte	.LASF3
 1463 003f 06       		.byte	0x6
 1464 0040 1D       		.byte	0x1d
 1465 0041 2C000000 		.4byte	0x2c
 1466 0045 03       		.uleb128 0x3
 1467 0046 0A090000 		.4byte	.LASF4
 1468 004a 06       		.byte	0x6
 1469 004b 29       		.byte	0x29
 1470 004c 25000000 		.4byte	0x25
 1471 0050 03       		.uleb128 0x3
 1472 0051 F1040000 		.4byte	.LASF5
 1473 0055 06       		.byte	0x6
 1474 0056 2B       		.byte	0x2b
 1475 0057 5B000000 		.4byte	0x5b
 1476 005b 02       		.uleb128 0x2
 1477 005c 02       		.byte	0x2
 1478 005d 07       		.byte	0x7
 1479 005e 650A0000 		.4byte	.LASF6
 1480 0062 02       		.uleb128 0x2
 1481 0063 04       		.byte	0x4
 1482 0064 05       		.byte	0x5
 1483 0065 290C0000 		.4byte	.LASF7
 1484 0069 03       		.uleb128 0x3
 1485 006a 340E0000 		.4byte	.LASF8
 1486 006e 06       		.byte	0x6
 1487 006f 41       		.byte	0x41
 1488 0070 74000000 		.4byte	0x74
 1489 0074 02       		.uleb128 0x2
 1490 0075 04       		.byte	0x4
 1491 0076 07       		.byte	0x7
 1492 0077 960D0000 		.4byte	.LASF9
 1493 007b 02       		.uleb128 0x2
 1494 007c 08       		.byte	0x8
 1495 007d 05       		.byte	0x5
 1496 007e 5D080000 		.4byte	.LASF10
 1497 0082 02       		.uleb128 0x2
 1498 0083 08       		.byte	0x8
 1499 0084 07       		.byte	0x7
 1500 0085 81040000 		.4byte	.LASF11
 1501 0089 04       		.uleb128 0x4
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 121


 1502 008a 04       		.byte	0x4
 1503 008b 05       		.byte	0x5
 1504 008c 696E7400 		.ascii	"int\000"
 1505 0090 02       		.uleb128 0x2
 1506 0091 04       		.byte	0x4
 1507 0092 07       		.byte	0x7
 1508 0093 82010000 		.4byte	.LASF12
 1509 0097 03       		.uleb128 0x3
 1510 0098 E8070000 		.4byte	.LASF13
 1511 009c 07       		.byte	0x7
 1512 009d 18       		.byte	0x18
 1513 009e 3A000000 		.4byte	0x3a
 1514 00a2 03       		.uleb128 0x3
 1515 00a3 5F040000 		.4byte	.LASF14
 1516 00a7 07       		.byte	0x7
 1517 00a8 20       		.byte	0x20
 1518 00a9 45000000 		.4byte	0x45
 1519 00ad 03       		.uleb128 0x3
 1520 00ae 840A0000 		.4byte	.LASF15
 1521 00b2 07       		.byte	0x7
 1522 00b3 24       		.byte	0x24
 1523 00b4 50000000 		.4byte	0x50
 1524 00b8 03       		.uleb128 0x3
 1525 00b9 F4030000 		.4byte	.LASF16
 1526 00bd 07       		.byte	0x7
 1527 00be 30       		.byte	0x30
 1528 00bf 69000000 		.4byte	0x69
 1529 00c3 02       		.uleb128 0x2
 1530 00c4 04       		.byte	0x4
 1531 00c5 07       		.byte	0x7
 1532 00c6 5B0B0000 		.4byte	.LASF17
 1533 00ca 05       		.uleb128 0x5
 1534 00cb B8000000 		.4byte	0xb8
 1535 00cf 06       		.uleb128 0x6
 1536 00d0 CA000000 		.4byte	0xca
 1537 00d4 07       		.uleb128 0x7
 1538 00d5 CF000000 		.4byte	0xcf
 1539 00d9 E4000000 		.4byte	0xe4
 1540 00dd 08       		.uleb128 0x8
 1541 00de C3000000 		.4byte	0xc3
 1542 00e2 01       		.byte	0x1
 1543 00e3 00       		.byte	0
 1544 00e4 07       		.uleb128 0x7
 1545 00e5 CA000000 		.4byte	0xca
 1546 00e9 F4000000 		.4byte	0xf4
 1547 00ed 08       		.uleb128 0x8
 1548 00ee C3000000 		.4byte	0xc3
 1549 00f2 7F       		.byte	0x7f
 1550 00f3 00       		.byte	0
 1551 00f4 07       		.uleb128 0x7
 1552 00f5 CA000000 		.4byte	0xca
 1553 00f9 04010000 		.4byte	0x104
 1554 00fd 08       		.uleb128 0x8
 1555 00fe C3000000 		.4byte	0xc3
 1556 0102 0F       		.byte	0xf
 1557 0103 00       		.byte	0
 1558 0104 07       		.uleb128 0x7
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 122


 1559 0105 CF000000 		.4byte	0xcf
 1560 0109 14010000 		.4byte	0x114
 1561 010d 08       		.uleb128 0x8
 1562 010e C3000000 		.4byte	0xc3
 1563 0112 06       		.byte	0x6
 1564 0113 00       		.byte	0
 1565 0114 09       		.uleb128 0x9
 1566 0115 40       		.byte	0x40
 1567 0116 08       		.byte	0x8
 1568 0117 27       		.byte	0x27
 1569 0118 59010000 		.4byte	0x159
 1570 011c 0A       		.uleb128 0xa
 1571 011d B1060000 		.4byte	.LASF18
 1572 0121 08       		.byte	0x8
 1573 0122 28       		.byte	0x28
 1574 0123 CA000000 		.4byte	0xca
 1575 0127 00       		.byte	0
 1576 0128 0A       		.uleb128 0xa
 1577 0129 27000000 		.4byte	.LASF19
 1578 012d 08       		.byte	0x8
 1579 012e 29       		.byte	0x29
 1580 012f 5E010000 		.4byte	0x15e
 1581 0133 04       		.byte	0x4
 1582 0134 0A       		.uleb128 0xa
 1583 0135 4D040000 		.4byte	.LASF20
 1584 0139 08       		.byte	0x8
 1585 013a 2A       		.byte	0x2a
 1586 013b CA000000 		.4byte	0xca
 1587 013f 20       		.byte	0x20
 1588 0140 0A       		.uleb128 0xa
 1589 0141 3C110000 		.4byte	.LASF21
 1590 0145 08       		.byte	0x8
 1591 0146 2B       		.byte	0x2b
 1592 0147 CA000000 		.4byte	0xca
 1593 014b 24       		.byte	0x24
 1594 014c 0A       		.uleb128 0xa
 1595 014d A7100000 		.4byte	.LASF22
 1596 0151 08       		.byte	0x8
 1597 0152 2C       		.byte	0x2c
 1598 0153 78010000 		.4byte	0x178
 1599 0157 28       		.byte	0x28
 1600 0158 00       		.byte	0
 1601 0159 05       		.uleb128 0x5
 1602 015a 04010000 		.4byte	0x104
 1603 015e 06       		.uleb128 0x6
 1604 015f 59010000 		.4byte	0x159
 1605 0163 07       		.uleb128 0x7
 1606 0164 CF000000 		.4byte	0xcf
 1607 0168 73010000 		.4byte	0x173
 1608 016c 08       		.uleb128 0x8
 1609 016d C3000000 		.4byte	0xc3
 1610 0171 05       		.byte	0x5
 1611 0172 00       		.byte	0
 1612 0173 05       		.uleb128 0x5
 1613 0174 63010000 		.4byte	0x163
 1614 0178 06       		.uleb128 0x6
 1615 0179 73010000 		.4byte	0x173
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 123


 1616 017d 03       		.uleb128 0x3
 1617 017e C7100000 		.4byte	.LASF23
 1618 0182 08       		.byte	0x8
 1619 0183 2D       		.byte	0x2d
 1620 0184 14010000 		.4byte	0x114
 1621 0188 0B       		.uleb128 0xb
 1622 0189 0002     		.2byte	0x200
 1623 018b 08       		.byte	0x8
 1624 018c 32       		.byte	0x32
 1625 018d 9E010000 		.4byte	0x19e
 1626 0191 0A       		.uleb128 0xa
 1627 0192 25070000 		.4byte	.LASF24
 1628 0196 08       		.byte	0x8
 1629 0197 33       		.byte	0x33
 1630 0198 9E010000 		.4byte	0x19e
 1631 019c 00       		.byte	0
 1632 019d 00       		.byte	0
 1633 019e 05       		.uleb128 0x5
 1634 019f E4000000 		.4byte	0xe4
 1635 01a3 03       		.uleb128 0x3
 1636 01a4 14000000 		.4byte	.LASF25
 1637 01a8 08       		.byte	0x8
 1638 01a9 34       		.byte	0x34
 1639 01aa 88010000 		.4byte	0x188
 1640 01ae 09       		.uleb128 0x9
 1641 01af 40       		.byte	0x40
 1642 01b0 08       		.byte	0x8
 1643 01b1 39       		.byte	0x39
 1644 01b2 FF010000 		.4byte	0x1ff
 1645 01b6 0A       		.uleb128 0xa
 1646 01b7 60100000 		.4byte	.LASF26
 1647 01bb 08       		.byte	0x8
 1648 01bc 3A       		.byte	0x3a
 1649 01bd CA000000 		.4byte	0xca
 1650 01c1 00       		.byte	0
 1651 01c2 0A       		.uleb128 0xa
 1652 01c3 9D100000 		.4byte	.LASF27
 1653 01c7 08       		.byte	0x8
 1654 01c8 3B       		.byte	0x3b
 1655 01c9 CA000000 		.4byte	0xca
 1656 01cd 04       		.byte	0x4
 1657 01ce 0A       		.uleb128 0xa
 1658 01cf 27000000 		.4byte	.LASF19
 1659 01d3 08       		.byte	0x8
 1660 01d4 3C       		.byte	0x3c
 1661 01d5 04020000 		.4byte	0x204
 1662 01d9 08       		.byte	0x8
 1663 01da 0A       		.uleb128 0xa
 1664 01db 66100000 		.4byte	.LASF28
 1665 01df 08       		.byte	0x8
 1666 01e0 3D       		.byte	0x3d
 1667 01e1 CF000000 		.4byte	0xcf
 1668 01e5 20       		.byte	0x20
 1669 01e6 0A       		.uleb128 0xa
 1670 01e7 A2100000 		.4byte	.LASF29
 1671 01eb 08       		.byte	0x8
 1672 01ec 3E       		.byte	0x3e
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 124


 1673 01ed CA000000 		.4byte	0xca
 1674 01f1 24       		.byte	0x24
 1675 01f2 0A       		.uleb128 0xa
 1676 01f3 A7100000 		.4byte	.LASF22
 1677 01f7 08       		.byte	0x8
 1678 01f8 3F       		.byte	0x3f
 1679 01f9 0E020000 		.4byte	0x20e
 1680 01fd 28       		.byte	0x28
 1681 01fe 00       		.byte	0
 1682 01ff 05       		.uleb128 0x5
 1683 0200 63010000 		.4byte	0x163
 1684 0204 06       		.uleb128 0x6
 1685 0205 FF010000 		.4byte	0x1ff
 1686 0209 05       		.uleb128 0x5
 1687 020a 63010000 		.4byte	0x163
 1688 020e 06       		.uleb128 0x6
 1689 020f 09020000 		.4byte	0x209
 1690 0213 03       		.uleb128 0x3
 1691 0214 E0030000 		.4byte	.LASF30
 1692 0218 08       		.byte	0x8
 1693 0219 40       		.byte	0x40
 1694 021a AE010000 		.4byte	0x1ae
 1695 021e 09       		.uleb128 0x9
 1696 021f 40       		.byte	0x40
 1697 0220 08       		.byte	0x8
 1698 0221 45       		.byte	0x45
 1699 0222 6F020000 		.4byte	0x26f
 1700 0226 0A       		.uleb128 0xa
 1701 0227 60100000 		.4byte	.LASF26
 1702 022b 08       		.byte	0x8
 1703 022c 46       		.byte	0x46
 1704 022d CF000000 		.4byte	0xcf
 1705 0231 00       		.byte	0
 1706 0232 0A       		.uleb128 0xa
 1707 0233 9D100000 		.4byte	.LASF27
 1708 0237 08       		.byte	0x8
 1709 0238 47       		.byte	0x47
 1710 0239 CA000000 		.4byte	0xca
 1711 023d 04       		.byte	0x4
 1712 023e 0A       		.uleb128 0xa
 1713 023f 27000000 		.4byte	.LASF19
 1714 0243 08       		.byte	0x8
 1715 0244 48       		.byte	0x48
 1716 0245 74020000 		.4byte	0x274
 1717 0249 08       		.byte	0x8
 1718 024a 0A       		.uleb128 0xa
 1719 024b 66100000 		.4byte	.LASF28
 1720 024f 08       		.byte	0x8
 1721 0250 49       		.byte	0x49
 1722 0251 CF000000 		.4byte	0xcf
 1723 0255 20       		.byte	0x20
 1724 0256 0A       		.uleb128 0xa
 1725 0257 A2100000 		.4byte	.LASF29
 1726 025b 08       		.byte	0x8
 1727 025c 4A       		.byte	0x4a
 1728 025d CA000000 		.4byte	0xca
 1729 0261 24       		.byte	0x24
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 125


 1730 0262 0A       		.uleb128 0xa
 1731 0263 A7100000 		.4byte	.LASF22
 1732 0267 08       		.byte	0x8
 1733 0268 4B       		.byte	0x4b
 1734 0269 7E020000 		.4byte	0x27e
 1735 026d 28       		.byte	0x28
 1736 026e 00       		.byte	0
 1737 026f 05       		.uleb128 0x5
 1738 0270 63010000 		.4byte	0x163
 1739 0274 06       		.uleb128 0x6
 1740 0275 6F020000 		.4byte	0x26f
 1741 0279 05       		.uleb128 0x5
 1742 027a 63010000 		.4byte	0x163
 1743 027e 06       		.uleb128 0x6
 1744 027f 79020000 		.4byte	0x279
 1745 0283 03       		.uleb128 0x3
 1746 0284 68110000 		.4byte	.LASF31
 1747 0288 08       		.byte	0x8
 1748 0289 4C       		.byte	0x4c
 1749 028a 1E020000 		.4byte	0x21e
 1750 028e 0B       		.uleb128 0xb
 1751 028f 0054     		.2byte	0x5400
 1752 0291 08       		.byte	0x8
 1753 0292 69       		.byte	0x69
 1754 0293 66030000 		.4byte	0x366
 1755 0297 0C       		.uleb128 0xc
 1756 0298 475200   		.ascii	"GR\000"
 1757 029b 08       		.byte	0x8
 1758 029c 6A       		.byte	0x6a
 1759 029d 66030000 		.4byte	0x366
 1760 02a1 00       		.byte	0
 1761 02a2 0D       		.uleb128 0xd
 1762 02a3 4B0C0000 		.4byte	.LASF32
 1763 02a7 08       		.byte	0x8
 1764 02a8 6B       		.byte	0x6b
 1765 02a9 CA000000 		.4byte	0xca
 1766 02ad 0004     		.2byte	0x400
 1767 02af 0D       		.uleb128 0xd
 1768 02b0 27000000 		.4byte	.LASF19
 1769 02b4 08       		.byte	0x8
 1770 02b5 6C       		.byte	0x6c
 1771 02b6 8B030000 		.4byte	0x38b
 1772 02ba 0404     		.2byte	0x404
 1773 02bc 0D       		.uleb128 0xd
 1774 02bd E2000000 		.4byte	.LASF33
 1775 02c1 08       		.byte	0x8
 1776 02c2 6D       		.byte	0x6d
 1777 02c3 A0030000 		.4byte	0x3a0
 1778 02c7 0008     		.2byte	0x800
 1779 02c9 0D       		.uleb128 0xd
 1780 02ca A6060000 		.4byte	.LASF34
 1781 02ce 08       		.byte	0x8
 1782 02cf 6E       		.byte	0x6e
 1783 02d0 A5030000 		.4byte	0x3a5
 1784 02d4 0009     		.2byte	0x900
 1785 02d6 0D       		.uleb128 0xd
 1786 02d7 36020000 		.4byte	.LASF35
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 126


 1787 02db 08       		.byte	0x8
 1788 02dc 6F       		.byte	0x6f
 1789 02dd AA030000 		.4byte	0x3aa
 1790 02e1 000A     		.2byte	0xa00
 1791 02e3 0D       		.uleb128 0xd
 1792 02e4 55060000 		.4byte	.LASF36
 1793 02e8 08       		.byte	0x8
 1794 02e9 70       		.byte	0x70
 1795 02ea BF030000 		.4byte	0x3bf
 1796 02ee 000B     		.2byte	0xb00
 1797 02f0 0D       		.uleb128 0xd
 1798 02f1 A7100000 		.4byte	.LASF22
 1799 02f5 08       		.byte	0x8
 1800 02f6 71       		.byte	0x71
 1801 02f7 CF000000 		.4byte	0xcf
 1802 02fb FC0B     		.2byte	0xbfc
 1803 02fd 0D       		.uleb128 0xd
 1804 02fe B1060000 		.4byte	.LASF18
 1805 0302 08       		.byte	0x8
 1806 0303 72       		.byte	0x72
 1807 0304 C4030000 		.4byte	0x3c4
 1808 0308 000C     		.2byte	0xc00
 1809 030a 0D       		.uleb128 0xd
 1810 030b B40B0000 		.4byte	.LASF37
 1811 030f 08       		.byte	0x8
 1812 0310 73       		.byte	0x73
 1813 0311 DE030000 		.4byte	0x3de
 1814 0315 000E     		.2byte	0xe00
 1815 0317 0D       		.uleb128 0xd
 1816 0318 7B050000 		.4byte	.LASF38
 1817 031c 08       		.byte	0x8
 1818 031d 74       		.byte	0x74
 1819 031e CA000000 		.4byte	0xca
 1820 0322 0010     		.2byte	0x1000
 1821 0324 0D       		.uleb128 0xd
 1822 0325 BE0B0000 		.4byte	.LASF39
 1823 0329 08       		.byte	0x8
 1824 032a 75       		.byte	0x75
 1825 032b F9030000 		.4byte	0x3f9
 1826 032f 0410     		.2byte	0x1004
 1827 0331 0D       		.uleb128 0xd
 1828 0332 42070000 		.4byte	.LASF40
 1829 0336 08       		.byte	0x8
 1830 0337 76       		.byte	0x76
 1831 0338 FE030000 		.4byte	0x3fe
 1832 033c 0020     		.2byte	0x2000
 1833 033e 0D       		.uleb128 0xd
 1834 033f 59020000 		.4byte	.LASF41
 1835 0343 08       		.byte	0x8
 1836 0344 77       		.byte	0x77
 1837 0345 0E040000 		.4byte	0x40e
 1838 0349 0040     		.2byte	0x4000
 1839 034b 0D       		.uleb128 0xd
 1840 034c C80B0000 		.4byte	.LASF42
 1841 0350 08       		.byte	0x8
 1842 0351 78       		.byte	0x78
 1843 0352 34040000 		.4byte	0x434
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 127


 1844 0356 0048     		.2byte	0x4800
 1845 0358 0D       		.uleb128 0xd
 1846 0359 E8080000 		.4byte	.LASF43
 1847 035d 08       		.byte	0x8
 1848 035e 79       		.byte	0x79
 1849 035f 39040000 		.4byte	0x439
 1850 0363 0050     		.2byte	0x5000
 1851 0365 00       		.byte	0
 1852 0366 07       		.uleb128 0x7
 1853 0367 7D010000 		.4byte	0x17d
 1854 036b 76030000 		.4byte	0x376
 1855 036f 08       		.uleb128 0x8
 1856 0370 C3000000 		.4byte	0xc3
 1857 0374 0F       		.byte	0xf
 1858 0375 00       		.byte	0
 1859 0376 07       		.uleb128 0x7
 1860 0377 CF000000 		.4byte	0xcf
 1861 037b 86030000 		.4byte	0x386
 1862 037f 08       		.uleb128 0x8
 1863 0380 C3000000 		.4byte	0xc3
 1864 0384 FE       		.byte	0xfe
 1865 0385 00       		.byte	0
 1866 0386 05       		.uleb128 0x5
 1867 0387 76030000 		.4byte	0x376
 1868 038b 06       		.uleb128 0x6
 1869 038c 86030000 		.4byte	0x386
 1870 0390 07       		.uleb128 0x7
 1871 0391 CA000000 		.4byte	0xca
 1872 0395 A0030000 		.4byte	0x3a0
 1873 0399 08       		.uleb128 0x8
 1874 039a C3000000 		.4byte	0xc3
 1875 039e 3F       		.byte	0x3f
 1876 039f 00       		.byte	0
 1877 03a0 05       		.uleb128 0x5
 1878 03a1 90030000 		.4byte	0x390
 1879 03a5 05       		.uleb128 0x5
 1880 03a6 90030000 		.4byte	0x390
 1881 03aa 05       		.uleb128 0x5
 1882 03ab 90030000 		.4byte	0x390
 1883 03af 07       		.uleb128 0x7
 1884 03b0 CA000000 		.4byte	0xca
 1885 03b4 BF030000 		.4byte	0x3bf
 1886 03b8 08       		.uleb128 0x8
 1887 03b9 C3000000 		.4byte	0xc3
 1888 03bd 3E       		.byte	0x3e
 1889 03be 00       		.byte	0
 1890 03bf 05       		.uleb128 0x5
 1891 03c0 AF030000 		.4byte	0x3af
 1892 03c4 05       		.uleb128 0x5
 1893 03c5 E4000000 		.4byte	0xe4
 1894 03c9 07       		.uleb128 0x7
 1895 03ca CF000000 		.4byte	0xcf
 1896 03ce D9030000 		.4byte	0x3d9
 1897 03d2 08       		.uleb128 0x8
 1898 03d3 C3000000 		.4byte	0xc3
 1899 03d7 7F       		.byte	0x7f
 1900 03d8 00       		.byte	0
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 128


 1901 03d9 05       		.uleb128 0x5
 1902 03da C9030000 		.4byte	0x3c9
 1903 03de 06       		.uleb128 0x6
 1904 03df D9030000 		.4byte	0x3d9
 1905 03e3 07       		.uleb128 0x7
 1906 03e4 CF000000 		.4byte	0xcf
 1907 03e8 F4030000 		.4byte	0x3f4
 1908 03ec 0E       		.uleb128 0xe
 1909 03ed C3000000 		.4byte	0xc3
 1910 03f1 FE03     		.2byte	0x3fe
 1911 03f3 00       		.byte	0
 1912 03f4 05       		.uleb128 0x5
 1913 03f5 E3030000 		.4byte	0x3e3
 1914 03f9 06       		.uleb128 0x6
 1915 03fa F4030000 		.4byte	0x3f4
 1916 03fe 07       		.uleb128 0x7
 1917 03ff A3010000 		.4byte	0x1a3
 1918 0403 0E040000 		.4byte	0x40e
 1919 0407 08       		.uleb128 0x8
 1920 0408 C3000000 		.4byte	0xc3
 1921 040c 0F       		.byte	0xf
 1922 040d 00       		.byte	0
 1923 040e 07       		.uleb128 0x7
 1924 040f 13020000 		.4byte	0x213
 1925 0413 1E040000 		.4byte	0x41e
 1926 0417 08       		.uleb128 0x8
 1927 0418 C3000000 		.4byte	0xc3
 1928 041c 1F       		.byte	0x1f
 1929 041d 00       		.byte	0
 1930 041e 07       		.uleb128 0x7
 1931 041f CF000000 		.4byte	0xcf
 1932 0423 2F040000 		.4byte	0x42f
 1933 0427 0E       		.uleb128 0xe
 1934 0428 C3000000 		.4byte	0xc3
 1935 042c FF01     		.2byte	0x1ff
 1936 042e 00       		.byte	0
 1937 042f 05       		.uleb128 0x5
 1938 0430 1E040000 		.4byte	0x41e
 1939 0434 06       		.uleb128 0x6
 1940 0435 2F040000 		.4byte	0x42f
 1941 0439 07       		.uleb128 0x7
 1942 043a 83020000 		.4byte	0x283
 1943 043e 49040000 		.4byte	0x449
 1944 0442 08       		.uleb128 0x8
 1945 0443 C3000000 		.4byte	0xc3
 1946 0447 0F       		.byte	0xf
 1947 0448 00       		.byte	0
 1948 0449 03       		.uleb128 0x3
 1949 044a 090C0000 		.4byte	.LASF44
 1950 044e 08       		.byte	0x8
 1951 044f 7B       		.byte	0x7b
 1952 0450 8E020000 		.4byte	0x28e
 1953 0454 07       		.uleb128 0x7
 1954 0455 CF000000 		.4byte	0xcf
 1955 0459 64040000 		.4byte	0x464
 1956 045d 08       		.uleb128 0x8
 1957 045e C3000000 		.4byte	0xc3
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 129


 1958 0462 0F       		.byte	0xf
 1959 0463 00       		.byte	0
 1960 0464 07       		.uleb128 0x7
 1961 0465 CF000000 		.4byte	0xcf
 1962 0469 74040000 		.4byte	0x474
 1963 046d 08       		.uleb128 0x8
 1964 046e C3000000 		.4byte	0xc3
 1965 0472 02       		.byte	0x2
 1966 0473 00       		.byte	0
 1967 0474 07       		.uleb128 0x7
 1968 0475 CF000000 		.4byte	0xcf
 1969 0479 84040000 		.4byte	0x484
 1970 047d 08       		.uleb128 0x8
 1971 047e C3000000 		.4byte	0xc3
 1972 0482 0E       		.byte	0xe
 1973 0483 00       		.byte	0
 1974 0484 0B       		.uleb128 0xb
 1975 0485 080F     		.2byte	0xf08
 1976 0487 09       		.byte	0x9
 1977 0488 21       		.byte	0x21
 1978 0489 0C070000 		.4byte	0x70c
 1979 048d 0A       		.uleb128 0xa
 1980 048e B9110000 		.4byte	.LASF45
 1981 0492 09       		.byte	0x9
 1982 0493 22       		.byte	0x22
 1983 0494 CA000000 		.4byte	0xca
 1984 0498 00       		.byte	0
 1985 0499 0A       		.uleb128 0xa
 1986 049a 79090000 		.4byte	.LASF46
 1987 049e 09       		.byte	0x9
 1988 049f 23       		.byte	0x23
 1989 04a0 CA000000 		.4byte	0xca
 1990 04a4 04       		.byte	0x4
 1991 04a5 0A       		.uleb128 0xa
 1992 04a6 27000000 		.4byte	.LASF19
 1993 04aa 09       		.byte	0x9
 1994 04ab 24       		.byte	0x24
 1995 04ac 11070000 		.4byte	0x711
 1996 04b0 08       		.byte	0x8
 1997 04b1 0A       		.uleb128 0xa
 1998 04b2 B7020000 		.4byte	.LASF47
 1999 04b6 09       		.byte	0x9
 2000 04b7 25       		.byte	0x25
 2001 04b8 CA000000 		.4byte	0xca
 2002 04bc 10       		.byte	0x10
 2003 04bd 0A       		.uleb128 0xa
 2004 04be D8040000 		.4byte	.LASF48
 2005 04c2 09       		.byte	0x9
 2006 04c3 26       		.byte	0x26
 2007 04c4 CA000000 		.4byte	0xca
 2008 04c8 14       		.byte	0x14
 2009 04c9 0A       		.uleb128 0xa
 2010 04ca AE0C0000 		.4byte	.LASF49
 2011 04ce 09       		.byte	0x9
 2012 04cf 27       		.byte	0x27
 2013 04d0 CA000000 		.4byte	0xca
 2014 04d4 18       		.byte	0x18
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 130


 2015 04d5 0A       		.uleb128 0xa
 2016 04d6 36060000 		.4byte	.LASF50
 2017 04da 09       		.byte	0x9
 2018 04db 28       		.byte	0x28
 2019 04dc CA000000 		.4byte	0xca
 2020 04e0 1C       		.byte	0x1c
 2021 04e1 0A       		.uleb128 0xa
 2022 04e2 22010000 		.4byte	.LASF51
 2023 04e6 09       		.byte	0x9
 2024 04e7 29       		.byte	0x29
 2025 04e8 CA000000 		.4byte	0xca
 2026 04ec 20       		.byte	0x20
 2027 04ed 0A       		.uleb128 0xa
 2028 04ee 040A0000 		.4byte	.LASF52
 2029 04f2 09       		.byte	0x9
 2030 04f3 2A       		.byte	0x2a
 2031 04f4 CA000000 		.4byte	0xca
 2032 04f8 24       		.byte	0x24
 2033 04f9 0A       		.uleb128 0xa
 2034 04fa A7100000 		.4byte	.LASF22
 2035 04fe 09       		.byte	0x9
 2036 04ff 2B       		.byte	0x2b
 2037 0500 2B070000 		.4byte	0x72b
 2038 0504 28       		.byte	0x28
 2039 0505 0A       		.uleb128 0xa
 2040 0506 F30D0000 		.4byte	.LASF53
 2041 050a 09       		.byte	0x9
 2042 050b 2C       		.byte	0x2c
 2043 050c 30070000 		.4byte	0x730
 2044 0510 80       		.byte	0x80
 2045 0511 0A       		.uleb128 0xa
 2046 0512 B40B0000 		.4byte	.LASF37
 2047 0516 09       		.byte	0x9
 2048 0517 2D       		.byte	0x2d
 2049 0518 3A070000 		.4byte	0x73a
 2050 051c C0       		.byte	0xc0
 2051 051d 0D       		.uleb128 0xd
 2052 051e E00C0000 		.4byte	.LASF54
 2053 0522 09       		.byte	0x9
 2054 0523 2E       		.byte	0x2e
 2055 0524 44070000 		.4byte	0x744
 2056 0528 0001     		.2byte	0x100
 2057 052a 0D       		.uleb128 0xd
 2058 052b BE0B0000 		.4byte	.LASF39
 2059 052f 09       		.byte	0x9
 2060 0530 2F       		.byte	0x2f
 2061 0531 4E070000 		.4byte	0x74e
 2062 0535 4001     		.2byte	0x140
 2063 0537 0D       		.uleb128 0xd
 2064 0538 2F090000 		.4byte	.LASF55
 2065 053c 09       		.byte	0x9
 2066 053d 30       		.byte	0x30
 2067 053e 58070000 		.4byte	0x758
 2068 0542 8001     		.2byte	0x180
 2069 0544 0D       		.uleb128 0xd
 2070 0545 C80B0000 		.4byte	.LASF42
 2071 0549 09       		.byte	0x9
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 131


 2072 054a 31       		.byte	0x31
 2073 054b 62070000 		.4byte	0x762
 2074 054f C001     		.2byte	0x1c0
 2075 0551 0D       		.uleb128 0xd
 2076 0552 50000000 		.4byte	.LASF56
 2077 0556 09       		.byte	0x9
 2078 0557 32       		.byte	0x32
 2079 0558 CF000000 		.4byte	0xcf
 2080 055c 0002     		.2byte	0x200
 2081 055e 0D       		.uleb128 0xd
 2082 055f C70D0000 		.4byte	.LASF57
 2083 0563 09       		.byte	0x9
 2084 0564 33       		.byte	0x33
 2085 0565 CF000000 		.4byte	0xcf
 2086 0569 0402     		.2byte	0x204
 2087 056b 0D       		.uleb128 0xd
 2088 056c 19020000 		.4byte	.LASF58
 2089 0570 09       		.byte	0x9
 2090 0571 34       		.byte	0x34
 2091 0572 CF000000 		.4byte	0xcf
 2092 0576 0802     		.2byte	0x208
 2093 0578 0D       		.uleb128 0xd
 2094 0579 BD070000 		.4byte	.LASF59
 2095 057d 09       		.byte	0x9
 2096 057e 35       		.byte	0x35
 2097 057f CF000000 		.4byte	0xcf
 2098 0583 0C02     		.2byte	0x20c
 2099 0585 0D       		.uleb128 0xd
 2100 0586 11040000 		.4byte	.LASF60
 2101 058a 09       		.byte	0x9
 2102 058b 36       		.byte	0x36
 2103 058c CA000000 		.4byte	0xca
 2104 0590 1002     		.2byte	0x210
 2105 0592 0D       		.uleb128 0xd
 2106 0593 FD020000 		.4byte	.LASF61
 2107 0597 09       		.byte	0x9
 2108 0598 37       		.byte	0x37
 2109 0599 CA000000 		.4byte	0xca
 2110 059d 1402     		.2byte	0x214
 2111 059f 0D       		.uleb128 0xd
 2112 05a0 6F090000 		.4byte	.LASF62
 2113 05a4 09       		.byte	0x9
 2114 05a5 38       		.byte	0x38
 2115 05a6 CA000000 		.4byte	0xca
 2116 05aa 1802     		.2byte	0x218
 2117 05ac 0D       		.uleb128 0xd
 2118 05ad 470D0000 		.4byte	.LASF63
 2119 05b1 09       		.byte	0x9
 2120 05b2 39       		.byte	0x39
 2121 05b3 CF000000 		.4byte	0xcf
 2122 05b7 1C02     		.2byte	0x21c
 2123 05b9 0D       		.uleb128 0xd
 2124 05ba A9020000 		.4byte	.LASF64
 2125 05be 09       		.byte	0x9
 2126 05bf 3A       		.byte	0x3a
 2127 05c0 CA000000 		.4byte	0xca
 2128 05c4 2002     		.2byte	0x220
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 132


 2129 05c6 0D       		.uleb128 0xd
 2130 05c7 30070000 		.4byte	.LASF65
 2131 05cb 09       		.byte	0x9
 2132 05cc 3B       		.byte	0x3b
 2133 05cd CA000000 		.4byte	0xca
 2134 05d1 2402     		.2byte	0x224
 2135 05d3 0D       		.uleb128 0xd
 2136 05d4 770E0000 		.4byte	.LASF66
 2137 05d8 09       		.byte	0x9
 2138 05d9 3C       		.byte	0x3c
 2139 05da CA000000 		.4byte	0xca
 2140 05de 2802     		.2byte	0x228
 2141 05e0 0D       		.uleb128 0xd
 2142 05e1 10070000 		.4byte	.LASF67
 2143 05e5 09       		.byte	0x9
 2144 05e6 3D       		.byte	0x3d
 2145 05e7 CF000000 		.4byte	0xcf
 2146 05eb 2C02     		.2byte	0x22c
 2147 05ed 0D       		.uleb128 0xd
 2148 05ee 58090000 		.4byte	.LASF68
 2149 05f2 09       		.byte	0x9
 2150 05f3 3E       		.byte	0x3e
 2151 05f4 CA000000 		.4byte	0xca
 2152 05f8 3002     		.2byte	0x230
 2153 05fa 0D       		.uleb128 0xd
 2154 05fb 26080000 		.4byte	.LASF69
 2155 05ff 09       		.byte	0x9
 2156 0600 3F       		.byte	0x3f
 2157 0601 CA000000 		.4byte	0xca
 2158 0605 3402     		.2byte	0x234
 2159 0607 0D       		.uleb128 0xd
 2160 0608 D0050000 		.4byte	.LASF70
 2161 060c 09       		.byte	0x9
 2162 060d 40       		.byte	0x40
 2163 060e CA000000 		.4byte	0xca
 2164 0612 3802     		.2byte	0x238
 2165 0614 0D       		.uleb128 0xd
 2166 0615 30000000 		.4byte	.LASF71
 2167 0619 09       		.byte	0x9
 2168 061a 41       		.byte	0x41
 2169 061b CF000000 		.4byte	0xcf
 2170 061f 3C02     		.2byte	0x23c
 2171 0621 0D       		.uleb128 0xd
 2172 0622 A2010000 		.4byte	.LASF72
 2173 0626 09       		.byte	0x9
 2174 0627 42       		.byte	0x42
 2175 0628 CF000000 		.4byte	0xcf
 2176 062c 4002     		.2byte	0x240
 2177 062e 0D       		.uleb128 0xd
 2178 062f D20B0000 		.4byte	.LASF73
 2179 0633 09       		.byte	0x9
 2180 0634 43       		.byte	0x43
 2181 0635 6C070000 		.4byte	0x76c
 2182 0639 4402     		.2byte	0x244
 2183 063b 0D       		.uleb128 0xd
 2184 063c 2E050000 		.4byte	.LASF74
 2185 0640 09       		.byte	0x9
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 133


 2186 0641 44       		.byte	0x44
 2187 0642 CA000000 		.4byte	0xca
 2188 0646 8002     		.2byte	0x280
 2189 0648 0D       		.uleb128 0xd
 2190 0649 DC0B0000 		.4byte	.LASF75
 2191 064d 09       		.byte	0x9
 2192 064e 45       		.byte	0x45
 2193 064f 76070000 		.4byte	0x776
 2194 0653 8402     		.2byte	0x284
 2195 0655 0D       		.uleb128 0xd
 2196 0656 DC020000 		.4byte	.LASF76
 2197 065a 09       		.byte	0x9
 2198 065b 46       		.byte	0x46
 2199 065c CF000000 		.4byte	0xcf
 2200 0660 9002     		.2byte	0x290
 2201 0662 0D       		.uleb128 0xd
 2202 0663 C1040000 		.4byte	.LASF77
 2203 0667 09       		.byte	0x9
 2204 0668 47       		.byte	0x47
 2205 0669 80070000 		.4byte	0x780
 2206 066d 9402     		.2byte	0x294
 2207 066f 0D       		.uleb128 0xd
 2208 0670 C0100000 		.4byte	.LASF78
 2209 0674 09       		.byte	0x9
 2210 0675 48       		.byte	0x48
 2211 0676 CF000000 		.4byte	0xcf
 2212 067a A002     		.2byte	0x2a0
 2213 067c 0D       		.uleb128 0xd
 2214 067d D2070000 		.4byte	.LASF79
 2215 0681 09       		.byte	0x9
 2216 0682 49       		.byte	0x49
 2217 0683 CF000000 		.4byte	0xcf
 2218 0687 A402     		.2byte	0x2a4
 2219 0689 0D       		.uleb128 0xd
 2220 068a F50B0000 		.4byte	.LASF80
 2221 068e 09       		.byte	0x9
 2222 068f 4A       		.byte	0x4a
 2223 0690 8A070000 		.4byte	0x78a
 2224 0694 A802     		.2byte	0x2a8
 2225 0696 0D       		.uleb128 0xd
 2226 0697 BB0D0000 		.4byte	.LASF81
 2227 069b 09       		.byte	0x9
 2228 069c 4B       		.byte	0x4b
 2229 069d CA000000 		.4byte	0xca
 2230 06a1 0003     		.2byte	0x300
 2231 06a3 0D       		.uleb128 0xd
 2232 06a4 AE090000 		.4byte	.LASF82
 2233 06a8 09       		.byte	0x9
 2234 06a9 4C       		.byte	0x4c
 2235 06aa CA000000 		.4byte	0xca
 2236 06ae 0403     		.2byte	0x304
 2237 06b0 0D       		.uleb128 0xd
 2238 06b1 FF0B0000 		.4byte	.LASF83
 2239 06b5 09       		.byte	0x9
 2240 06b6 4D       		.byte	0x4d
 2241 06b7 A4070000 		.4byte	0x7a4
 2242 06bb 0803     		.2byte	0x308
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 134


 2243 06bd 0D       		.uleb128 0xd
 2244 06be 760D0000 		.4byte	.LASF84
 2245 06c2 09       		.byte	0x9
 2246 06c3 4E       		.byte	0x4e
 2247 06c4 CA000000 		.4byte	0xca
 2248 06c8 4003     		.2byte	0x340
 2249 06ca 0D       		.uleb128 0xd
 2250 06cb 160C0000 		.4byte	.LASF85
 2251 06cf 09       		.byte	0x9
 2252 06d0 4F       		.byte	0x4f
 2253 06d1 CA000000 		.4byte	0xca
 2254 06d5 4403     		.2byte	0x344
 2255 06d7 0D       		.uleb128 0xd
 2256 06d8 4E100000 		.4byte	.LASF86
 2257 06dc 09       		.byte	0x9
 2258 06dd 50       		.byte	0x50
 2259 06de CF000000 		.4byte	0xcf
 2260 06e2 4803     		.2byte	0x348
 2261 06e4 0D       		.uleb128 0xd
 2262 06e5 920E0000 		.4byte	.LASF87
 2263 06e9 09       		.byte	0x9
 2264 06ea 51       		.byte	0x51
 2265 06eb BF070000 		.4byte	0x7bf
 2266 06ef 4C03     		.2byte	0x34c
 2267 06f1 0D       		.uleb128 0xd
 2268 06f2 200E0000 		.4byte	.LASF88
 2269 06f6 09       		.byte	0x9
 2270 06f7 52       		.byte	0x52
 2271 06f8 CA000000 		.4byte	0xca
 2272 06fc 000F     		.2byte	0xf00
 2273 06fe 0D       		.uleb128 0xd
 2274 06ff 2A0E0000 		.4byte	.LASF89
 2275 0703 09       		.byte	0x9
 2276 0704 53       		.byte	0x53
 2277 0705 CA000000 		.4byte	0xca
 2278 0709 040F     		.2byte	0xf04
 2279 070b 00       		.byte	0
 2280 070c 05       		.uleb128 0x5
 2281 070d D4000000 		.4byte	0xd4
 2282 0711 06       		.uleb128 0x6
 2283 0712 0C070000 		.4byte	0x70c
 2284 0716 07       		.uleb128 0x7
 2285 0717 CF000000 		.4byte	0xcf
 2286 071b 26070000 		.4byte	0x726
 2287 071f 08       		.uleb128 0x8
 2288 0720 C3000000 		.4byte	0xc3
 2289 0724 15       		.byte	0x15
 2290 0725 00       		.byte	0
 2291 0726 05       		.uleb128 0x5
 2292 0727 16070000 		.4byte	0x716
 2293 072b 06       		.uleb128 0x6
 2294 072c 26070000 		.4byte	0x726
 2295 0730 05       		.uleb128 0x5
 2296 0731 F4000000 		.4byte	0xf4
 2297 0735 05       		.uleb128 0x5
 2298 0736 54040000 		.4byte	0x454
 2299 073a 06       		.uleb128 0x6
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 135


 2300 073b 35070000 		.4byte	0x735
 2301 073f 05       		.uleb128 0x5
 2302 0740 54040000 		.4byte	0x454
 2303 0744 06       		.uleb128 0x6
 2304 0745 3F070000 		.4byte	0x73f
 2305 0749 05       		.uleb128 0x5
 2306 074a 54040000 		.4byte	0x454
 2307 074e 06       		.uleb128 0x6
 2308 074f 49070000 		.4byte	0x749
 2309 0753 05       		.uleb128 0x5
 2310 0754 54040000 		.4byte	0x454
 2311 0758 06       		.uleb128 0x6
 2312 0759 53070000 		.4byte	0x753
 2313 075d 05       		.uleb128 0x5
 2314 075e 54040000 		.4byte	0x454
 2315 0762 06       		.uleb128 0x6
 2316 0763 5D070000 		.4byte	0x75d
 2317 0767 05       		.uleb128 0x5
 2318 0768 74040000 		.4byte	0x474
 2319 076c 06       		.uleb128 0x6
 2320 076d 67070000 		.4byte	0x767
 2321 0771 05       		.uleb128 0x5
 2322 0772 64040000 		.4byte	0x464
 2323 0776 06       		.uleb128 0x6
 2324 0777 71070000 		.4byte	0x771
 2325 077b 05       		.uleb128 0x5
 2326 077c 64040000 		.4byte	0x464
 2327 0780 06       		.uleb128 0x6
 2328 0781 7B070000 		.4byte	0x77b
 2329 0785 05       		.uleb128 0x5
 2330 0786 16070000 		.4byte	0x716
 2331 078a 06       		.uleb128 0x6
 2332 078b 85070000 		.4byte	0x785
 2333 078f 07       		.uleb128 0x7
 2334 0790 CF000000 		.4byte	0xcf
 2335 0794 9F070000 		.4byte	0x79f
 2336 0798 08       		.uleb128 0x8
 2337 0799 C3000000 		.4byte	0xc3
 2338 079d 0D       		.byte	0xd
 2339 079e 00       		.byte	0
 2340 079f 05       		.uleb128 0x5
 2341 07a0 8F070000 		.4byte	0x78f
 2342 07a4 06       		.uleb128 0x6
 2343 07a5 9F070000 		.4byte	0x79f
 2344 07a9 07       		.uleb128 0x7
 2345 07aa CF000000 		.4byte	0xcf
 2346 07ae BA070000 		.4byte	0x7ba
 2347 07b2 0E       		.uleb128 0xe
 2348 07b3 C3000000 		.4byte	0xc3
 2349 07b7 EC02     		.2byte	0x2ec
 2350 07b9 00       		.byte	0
 2351 07ba 05       		.uleb128 0x5
 2352 07bb A9070000 		.4byte	0x7a9
 2353 07bf 06       		.uleb128 0x6
 2354 07c0 BA070000 		.4byte	0x7ba
 2355 07c4 03       		.uleb128 0x3
 2356 07c5 F8060000 		.4byte	.LASF90
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 136


 2357 07c9 09       		.byte	0x9
 2358 07ca 54       		.byte	0x54
 2359 07cb 84040000 		.4byte	0x484
 2360 07cf 0F       		.uleb128 0xf
 2361 07d0 82050000 		.4byte	.LASF91
 2362 07d4 0A       		.byte	0xa
 2363 07d5 5206     		.2byte	0x652
 2364 07d7 C4070000 		.4byte	0x7c4
 2365 07db 02       		.uleb128 0x2
 2366 07dc 08       		.byte	0x8
 2367 07dd 04       		.byte	0x4
 2368 07de 780A0000 		.4byte	.LASF92
 2369 07e2 09       		.uleb128 0x9
 2370 07e3 B8       		.byte	0xb8
 2371 07e4 0B       		.byte	0xb
 2372 07e5 34       		.byte	0x34
 2373 07e6 F30B0000 		.4byte	0xbf3
 2374 07ea 0A       		.uleb128 0xa
 2375 07eb 2C020000 		.4byte	.LASF93
 2376 07ef 0B       		.byte	0xb
 2377 07f0 37       		.byte	0x37
 2378 07f1 B8000000 		.4byte	0xb8
 2379 07f5 00       		.byte	0
 2380 07f6 0A       		.uleb128 0xa
 2381 07f7 54040000 		.4byte	.LASF94
 2382 07fb 0B       		.byte	0xb
 2383 07fc 38       		.byte	0x38
 2384 07fd B8000000 		.4byte	0xb8
 2385 0801 04       		.byte	0x4
 2386 0802 0A       		.uleb128 0xa
 2387 0803 2A010000 		.4byte	.LASF95
 2388 0807 0B       		.byte	0xb
 2389 0808 39       		.byte	0x39
 2390 0809 B8000000 		.4byte	0xb8
 2391 080d 08       		.byte	0x8
 2392 080e 0A       		.uleb128 0xa
 2393 080f 06010000 		.4byte	.LASF96
 2394 0813 0B       		.byte	0xb
 2395 0814 3A       		.byte	0x3a
 2396 0815 B8000000 		.4byte	0xb8
 2397 0819 0C       		.byte	0xc
 2398 081a 0A       		.uleb128 0xa
 2399 081b 730C0000 		.4byte	.LASF97
 2400 081f 0B       		.byte	0xb
 2401 0820 3B       		.byte	0x3b
 2402 0821 B8000000 		.4byte	0xb8
 2403 0825 10       		.byte	0x10
 2404 0826 0A       		.uleb128 0xa
 2405 0827 14090000 		.4byte	.LASF98
 2406 082b 0B       		.byte	0xb
 2407 082c 3C       		.byte	0x3c
 2408 082d B8000000 		.4byte	0xb8
 2409 0831 14       		.byte	0x14
 2410 0832 0A       		.uleb128 0xa
 2411 0833 88060000 		.4byte	.LASF99
 2412 0837 0B       		.byte	0xb
 2413 0838 3D       		.byte	0x3d
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 137


 2414 0839 B8000000 		.4byte	0xb8
 2415 083d 18       		.byte	0x18
 2416 083e 0A       		.uleb128 0xa
 2417 083f 94100000 		.4byte	.LASF100
 2418 0843 0B       		.byte	0xb
 2419 0844 3E       		.byte	0x3e
 2420 0845 B8000000 		.4byte	0xb8
 2421 0849 1C       		.byte	0x1c
 2422 084a 0A       		.uleb128 0xa
 2423 084b 6B080000 		.4byte	.LASF101
 2424 084f 0B       		.byte	0xb
 2425 0850 3F       		.byte	0x3f
 2426 0851 B8000000 		.4byte	0xb8
 2427 0855 20       		.byte	0x20
 2428 0856 0A       		.uleb128 0xa
 2429 0857 82080000 		.4byte	.LASF102
 2430 085b 0B       		.byte	0xb
 2431 085c 40       		.byte	0x40
 2432 085d B8000000 		.4byte	0xb8
 2433 0861 24       		.byte	0x24
 2434 0862 0A       		.uleb128 0xa
 2435 0863 320C0000 		.4byte	.LASF103
 2436 0867 0B       		.byte	0xb
 2437 0868 43       		.byte	0x43
 2438 0869 97000000 		.4byte	0x97
 2439 086d 28       		.byte	0x28
 2440 086e 0A       		.uleb128 0xa
 2441 086f 1C040000 		.4byte	.LASF104
 2442 0873 0B       		.byte	0xb
 2443 0874 44       		.byte	0x44
 2444 0875 97000000 		.4byte	0x97
 2445 0879 29       		.byte	0x29
 2446 087a 0A       		.uleb128 0xa
 2447 087b 0A0B0000 		.4byte	.LASF105
 2448 087f 0B       		.byte	0xb
 2449 0880 45       		.byte	0x45
 2450 0881 97000000 		.4byte	0x97
 2451 0885 2A       		.byte	0x2a
 2452 0886 0A       		.uleb128 0xa
 2453 0887 530C0000 		.4byte	.LASF106
 2454 088b 0B       		.byte	0xb
 2455 088c 46       		.byte	0x46
 2456 088d 97000000 		.4byte	0x97
 2457 0891 2B       		.byte	0x2b
 2458 0892 0A       		.uleb128 0xa
 2459 0893 3F0C0000 		.4byte	.LASF107
 2460 0897 0B       		.byte	0xb
 2461 0898 47       		.byte	0x47
 2462 0899 97000000 		.4byte	0x97
 2463 089d 2C       		.byte	0x2c
 2464 089e 0A       		.uleb128 0xa
 2465 089f 890D0000 		.4byte	.LASF108
 2466 08a3 0B       		.byte	0xb
 2467 08a4 48       		.byte	0x48
 2468 08a5 97000000 		.4byte	0x97
 2469 08a9 2D       		.byte	0x2d
 2470 08aa 0A       		.uleb128 0xa
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 138


 2471 08ab 7C110000 		.4byte	.LASF109
 2472 08af 0B       		.byte	0xb
 2473 08b0 49       		.byte	0x49
 2474 08b1 97000000 		.4byte	0x97
 2475 08b5 2E       		.byte	0x2e
 2476 08b6 0A       		.uleb128 0xa
 2477 08b7 6C100000 		.4byte	.LASF110
 2478 08bb 0B       		.byte	0xb
 2479 08bc 4A       		.byte	0x4a
 2480 08bd 97000000 		.4byte	0x97
 2481 08c1 2F       		.byte	0x2f
 2482 08c2 0A       		.uleb128 0xa
 2483 08c3 81030000 		.4byte	.LASF111
 2484 08c7 0B       		.byte	0xb
 2485 08c8 4B       		.byte	0x4b
 2486 08c9 97000000 		.4byte	0x97
 2487 08cd 30       		.byte	0x30
 2488 08ce 0A       		.uleb128 0xa
 2489 08cf A3090000 		.4byte	.LASF112
 2490 08d3 0B       		.byte	0xb
 2491 08d4 4E       		.byte	0x4e
 2492 08d5 97000000 		.4byte	0x97
 2493 08d9 31       		.byte	0x31
 2494 08da 0A       		.uleb128 0xa
 2495 08db 7F0F0000 		.4byte	.LASF113
 2496 08df 0B       		.byte	0xb
 2497 08e0 4F       		.byte	0x4f
 2498 08e1 97000000 		.4byte	0x97
 2499 08e5 32       		.byte	0x32
 2500 08e6 0A       		.uleb128 0xa
 2501 08e7 63090000 		.4byte	.LASF114
 2502 08eb 0B       		.byte	0xb
 2503 08ec 50       		.byte	0x50
 2504 08ed 97000000 		.4byte	0x97
 2505 08f1 33       		.byte	0x33
 2506 08f2 0A       		.uleb128 0xa
 2507 08f3 F6010000 		.4byte	.LASF115
 2508 08f7 0B       		.byte	0xb
 2509 08f8 51       		.byte	0x51
 2510 08f9 97000000 		.4byte	0x97
 2511 08fd 34       		.byte	0x34
 2512 08fe 0A       		.uleb128 0xa
 2513 08ff CB040000 		.4byte	.LASF116
 2514 0903 0B       		.byte	0xb
 2515 0904 52       		.byte	0x52
 2516 0905 A2000000 		.4byte	0xa2
 2517 0909 36       		.byte	0x36
 2518 090a 0A       		.uleb128 0xa
 2519 090b 60020000 		.4byte	.LASF117
 2520 090f 0B       		.byte	0xb
 2521 0910 53       		.byte	0x53
 2522 0911 A2000000 		.4byte	0xa2
 2523 0915 38       		.byte	0x38
 2524 0916 0A       		.uleb128 0xa
 2525 0917 77020000 		.4byte	.LASF118
 2526 091b 0B       		.byte	0xb
 2527 091c 54       		.byte	0x54
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 139


 2528 091d A2000000 		.4byte	0xa2
 2529 0921 3A       		.byte	0x3a
 2530 0922 0A       		.uleb128 0xa
 2531 0923 B1100000 		.4byte	.LASF119
 2532 0927 0B       		.byte	0xb
 2533 0928 55       		.byte	0x55
 2534 0929 97000000 		.4byte	0x97
 2535 092d 3C       		.byte	0x3c
 2536 092e 0A       		.uleb128 0xa
 2537 092f 53030000 		.4byte	.LASF120
 2538 0933 0B       		.byte	0xb
 2539 0934 56       		.byte	0x56
 2540 0935 97000000 		.4byte	0x97
 2541 0939 3D       		.byte	0x3d
 2542 093a 0A       		.uleb128 0xa
 2543 093b D10A0000 		.4byte	.LASF121
 2544 093f 0B       		.byte	0xb
 2545 0940 57       		.byte	0x57
 2546 0941 97000000 		.4byte	0x97
 2547 0945 3E       		.byte	0x3e
 2548 0946 0A       		.uleb128 0xa
 2549 0947 C8000000 		.4byte	.LASF122
 2550 094b 0B       		.byte	0xb
 2551 094c 58       		.byte	0x58
 2552 094d 97000000 		.4byte	0x97
 2553 0951 3F       		.byte	0x3f
 2554 0952 0A       		.uleb128 0xa
 2555 0953 AD010000 		.4byte	.LASF123
 2556 0957 0B       		.byte	0xb
 2557 0958 59       		.byte	0x59
 2558 0959 97000000 		.4byte	0x97
 2559 095d 40       		.byte	0x40
 2560 095e 0A       		.uleb128 0xa
 2561 095f C5090000 		.4byte	.LASF124
 2562 0963 0B       		.byte	0xb
 2563 0964 5A       		.byte	0x5a
 2564 0965 97000000 		.4byte	0x97
 2565 0969 41       		.byte	0x41
 2566 096a 0A       		.uleb128 0xa
 2567 096b 490F0000 		.4byte	.LASF125
 2568 096f 0B       		.byte	0xb
 2569 0970 5B       		.byte	0x5b
 2570 0971 97000000 		.4byte	0x97
 2571 0975 42       		.byte	0x42
 2572 0976 0A       		.uleb128 0xa
 2573 0977 DC060000 		.4byte	.LASF126
 2574 097b 0B       		.byte	0xb
 2575 097c 5C       		.byte	0x5c
 2576 097d 97000000 		.4byte	0x97
 2577 0981 43       		.byte	0x43
 2578 0982 0A       		.uleb128 0xa
 2579 0983 9E070000 		.4byte	.LASF127
 2580 0987 0B       		.byte	0xb
 2581 0988 5D       		.byte	0x5d
 2582 0989 97000000 		.4byte	0x97
 2583 098d 44       		.byte	0x44
 2584 098e 0A       		.uleb128 0xa
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 140


 2585 098f 610C0000 		.4byte	.LASF128
 2586 0993 0B       		.byte	0xb
 2587 0994 5E       		.byte	0x5e
 2588 0995 B8000000 		.4byte	0xb8
 2589 0999 48       		.byte	0x48
 2590 099a 0A       		.uleb128 0xa
 2591 099b AF070000 		.4byte	.LASF129
 2592 099f 0B       		.byte	0xb
 2593 09a0 5F       		.byte	0x5f
 2594 09a1 B8000000 		.4byte	0xb8
 2595 09a5 4C       		.byte	0x4c
 2596 09a6 0A       		.uleb128 0xa
 2597 09a7 270F0000 		.4byte	.LASF130
 2598 09ab 0B       		.byte	0xb
 2599 09ac 60       		.byte	0x60
 2600 09ad 97000000 		.4byte	0x97
 2601 09b1 50       		.byte	0x50
 2602 09b2 0A       		.uleb128 0xa
 2603 09b3 BE050000 		.4byte	.LASF131
 2604 09b7 0B       		.byte	0xb
 2605 09b8 61       		.byte	0x61
 2606 09b9 97000000 		.4byte	0x97
 2607 09bd 51       		.byte	0x51
 2608 09be 0A       		.uleb128 0xa
 2609 09bf D8080000 		.4byte	.LASF132
 2610 09c3 0B       		.byte	0xb
 2611 09c4 62       		.byte	0x62
 2612 09c5 97000000 		.4byte	0x97
 2613 09c9 52       		.byte	0x52
 2614 09ca 0A       		.uleb128 0xa
 2615 09cb 2A040000 		.4byte	.LASF133
 2616 09cf 0B       		.byte	0xb
 2617 09d0 63       		.byte	0x63
 2618 09d1 97000000 		.4byte	0x97
 2619 09d5 53       		.byte	0x53
 2620 09d6 0A       		.uleb128 0xa
 2621 09d7 9D0E0000 		.4byte	.LASF134
 2622 09db 0B       		.byte	0xb
 2623 09dc 64       		.byte	0x64
 2624 09dd 97000000 		.4byte	0x97
 2625 09e1 54       		.byte	0x54
 2626 09e2 0A       		.uleb128 0xa
 2627 09e3 41060000 		.4byte	.LASF135
 2628 09e7 0B       		.byte	0xb
 2629 09e8 65       		.byte	0x65
 2630 09e9 97000000 		.4byte	0x97
 2631 09ed 55       		.byte	0x55
 2632 09ee 0A       		.uleb128 0xa
 2633 09ef 00000000 		.4byte	.LASF136
 2634 09f3 0B       		.byte	0xb
 2635 09f4 66       		.byte	0x66
 2636 09f5 97000000 		.4byte	0x97
 2637 09f9 56       		.byte	0x56
 2638 09fa 0A       		.uleb128 0xa
 2639 09fb 140B0000 		.4byte	.LASF137
 2640 09ff 0B       		.byte	0xb
 2641 0a00 67       		.byte	0x67
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 141


 2642 0a01 97000000 		.4byte	0x97
 2643 0a05 57       		.byte	0x57
 2644 0a06 0A       		.uleb128 0xa
 2645 0a07 3E050000 		.4byte	.LASF138
 2646 0a0b 0B       		.byte	0xb
 2647 0a0c 68       		.byte	0x68
 2648 0a0d 97000000 		.4byte	0x97
 2649 0a11 58       		.byte	0x58
 2650 0a12 0A       		.uleb128 0xa
 2651 0a13 D7100000 		.4byte	.LASF139
 2652 0a17 0B       		.byte	0xb
 2653 0a18 69       		.byte	0x69
 2654 0a19 97000000 		.4byte	0x97
 2655 0a1d 59       		.byte	0x59
 2656 0a1e 0A       		.uleb128 0xa
 2657 0a1f 740F0000 		.4byte	.LASF140
 2658 0a23 0B       		.byte	0xb
 2659 0a24 6E       		.byte	0x6e
 2660 0a25 AD000000 		.4byte	0xad
 2661 0a29 5A       		.byte	0x5a
 2662 0a2a 0A       		.uleb128 0xa
 2663 0a2b 48010000 		.4byte	.LASF141
 2664 0a2f 0B       		.byte	0xb
 2665 0a30 6F       		.byte	0x6f
 2666 0a31 AD000000 		.4byte	0xad
 2667 0a35 5C       		.byte	0x5c
 2668 0a36 0A       		.uleb128 0xa
 2669 0a37 73080000 		.4byte	.LASF142
 2670 0a3b 0B       		.byte	0xb
 2671 0a3c 70       		.byte	0x70
 2672 0a3d 97000000 		.4byte	0x97
 2673 0a41 5E       		.byte	0x5e
 2674 0a42 0A       		.uleb128 0xa
 2675 0a43 DF0A0000 		.4byte	.LASF143
 2676 0a47 0B       		.byte	0xb
 2677 0a48 71       		.byte	0x71
 2678 0a49 97000000 		.4byte	0x97
 2679 0a4d 5F       		.byte	0x5f
 2680 0a4e 0A       		.uleb128 0xa
 2681 0a4f E7060000 		.4byte	.LASF144
 2682 0a53 0B       		.byte	0xb
 2683 0a54 72       		.byte	0x72
 2684 0a55 97000000 		.4byte	0x97
 2685 0a59 60       		.byte	0x60
 2686 0a5a 0A       		.uleb128 0xa
 2687 0a5b 62060000 		.4byte	.LASF145
 2688 0a5f 0B       		.byte	0xb
 2689 0a60 73       		.byte	0x73
 2690 0a61 B8000000 		.4byte	0xb8
 2691 0a65 64       		.byte	0x64
 2692 0a66 0A       		.uleb128 0xa
 2693 0a67 90110000 		.4byte	.LASF146
 2694 0a6b 0B       		.byte	0xb
 2695 0a6c 76       		.byte	0x76
 2696 0a6d AD000000 		.4byte	0xad
 2697 0a71 68       		.byte	0x68
 2698 0a72 0A       		.uleb128 0xa
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 142


 2699 0a73 9A0A0000 		.4byte	.LASF147
 2700 0a77 0B       		.byte	0xb
 2701 0a78 77       		.byte	0x77
 2702 0a79 AD000000 		.4byte	0xad
 2703 0a7d 6A       		.byte	0x6a
 2704 0a7e 0A       		.uleb128 0xa
 2705 0a7f 49090000 		.4byte	.LASF148
 2706 0a83 0B       		.byte	0xb
 2707 0a84 78       		.byte	0x78
 2708 0a85 AD000000 		.4byte	0xad
 2709 0a89 6C       		.byte	0x6c
 2710 0a8a 0A       		.uleb128 0xa
 2711 0a8b 46030000 		.4byte	.LASF149
 2712 0a8f 0B       		.byte	0xb
 2713 0a90 79       		.byte	0x79
 2714 0a91 AD000000 		.4byte	0xad
 2715 0a95 6E       		.byte	0x6e
 2716 0a96 0A       		.uleb128 0xa
 2717 0a97 03080000 		.4byte	.LASF150
 2718 0a9b 0B       		.byte	0xb
 2719 0a9c 7B       		.byte	0x7b
 2720 0a9d 97000000 		.4byte	0x97
 2721 0aa1 70       		.byte	0x70
 2722 0aa2 0A       		.uleb128 0xa
 2723 0aa3 A5030000 		.4byte	.LASF151
 2724 0aa7 0B       		.byte	0xb
 2725 0aa8 7C       		.byte	0x7c
 2726 0aa9 97000000 		.4byte	0x97
 2727 0aad 71       		.byte	0x71
 2728 0aae 0A       		.uleb128 0xa
 2729 0aaf E7020000 		.4byte	.LASF152
 2730 0ab3 0B       		.byte	0xb
 2731 0ab4 7D       		.byte	0x7d
 2732 0ab5 97000000 		.4byte	0x97
 2733 0ab9 72       		.byte	0x72
 2734 0aba 0A       		.uleb128 0xa
 2735 0abb D4010000 		.4byte	.LASF153
 2736 0abf 0B       		.byte	0xb
 2737 0ac0 7E       		.byte	0x7e
 2738 0ac1 97000000 		.4byte	0x97
 2739 0ac5 73       		.byte	0x73
 2740 0ac6 0A       		.uleb128 0xa
 2741 0ac7 A20B0000 		.4byte	.LASF154
 2742 0acb 0B       		.byte	0xb
 2743 0acc 80       		.byte	0x80
 2744 0acd AD000000 		.4byte	0xad
 2745 0ad1 74       		.byte	0x74
 2746 0ad2 0A       		.uleb128 0xa
 2747 0ad3 260A0000 		.4byte	.LASF155
 2748 0ad7 0B       		.byte	0xb
 2749 0ad8 81       		.byte	0x81
 2750 0ad9 AD000000 		.4byte	0xad
 2751 0add 76       		.byte	0x76
 2752 0ade 0A       		.uleb128 0xa
 2753 0adf 7D070000 		.4byte	.LASF156
 2754 0ae3 0B       		.byte	0xb
 2755 0ae4 82       		.byte	0x82
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 143


 2756 0ae5 AD000000 		.4byte	0xad
 2757 0ae9 78       		.byte	0x78
 2758 0aea 0A       		.uleb128 0xa
 2759 0aeb 98040000 		.4byte	.LASF157
 2760 0aef 0B       		.byte	0xb
 2761 0af0 83       		.byte	0x83
 2762 0af1 AD000000 		.4byte	0xad
 2763 0af5 7A       		.byte	0x7a
 2764 0af6 0A       		.uleb128 0xa
 2765 0af7 1B0D0000 		.4byte	.LASF158
 2766 0afb 0B       		.byte	0xb
 2767 0afc 86       		.byte	0x86
 2768 0afd 97000000 		.4byte	0x97
 2769 0b01 7C       		.byte	0x7c
 2770 0b02 0A       		.uleb128 0xa
 2771 0b03 380F0000 		.4byte	.LASF159
 2772 0b07 0B       		.byte	0xb
 2773 0b08 87       		.byte	0x87
 2774 0b09 97000000 		.4byte	0x97
 2775 0b0d 7D       		.byte	0x7d
 2776 0b0e 0A       		.uleb128 0xa
 2777 0b0f 67040000 		.4byte	.LASF160
 2778 0b13 0B       		.byte	0xb
 2779 0b14 88       		.byte	0x88
 2780 0b15 97000000 		.4byte	0x97
 2781 0b19 7E       		.byte	0x7e
 2782 0b1a 0A       		.uleb128 0xa
 2783 0b1b FD030000 		.4byte	.LASF161
 2784 0b1f 0B       		.byte	0xb
 2785 0b20 89       		.byte	0x89
 2786 0b21 97000000 		.4byte	0x97
 2787 0b25 7F       		.byte	0x7f
 2788 0b26 0A       		.uleb128 0xa
 2789 0b27 AD040000 		.4byte	.LASF162
 2790 0b2b 0B       		.byte	0xb
 2791 0b2c 8A       		.byte	0x8a
 2792 0b2d 97000000 		.4byte	0x97
 2793 0b31 80       		.byte	0x80
 2794 0b32 0A       		.uleb128 0xa
 2795 0b33 B1000000 		.4byte	.LASF163
 2796 0b37 0B       		.byte	0xb
 2797 0b38 8D       		.byte	0x8d
 2798 0b39 B8000000 		.4byte	0xb8
 2799 0b3d 84       		.byte	0x84
 2800 0b3e 0A       		.uleb128 0xa
 2801 0b3f 300D0000 		.4byte	.LASF164
 2802 0b43 0B       		.byte	0xb
 2803 0b44 8E       		.byte	0x8e
 2804 0b45 B8000000 		.4byte	0xb8
 2805 0b49 88       		.byte	0x88
 2806 0b4a 0A       		.uleb128 0xa
 2807 0b4b 2E100000 		.4byte	.LASF165
 2808 0b4f 0B       		.byte	0xb
 2809 0b50 8F       		.byte	0x8f
 2810 0b51 B8000000 		.4byte	0xb8
 2811 0b55 8C       		.byte	0x8c
 2812 0b56 0A       		.uleb128 0xa
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 144


 2813 0b57 8D0B0000 		.4byte	.LASF166
 2814 0b5b 0B       		.byte	0xb
 2815 0b5c 90       		.byte	0x90
 2816 0b5d B8000000 		.4byte	0xb8
 2817 0b61 90       		.byte	0x90
 2818 0b62 0A       		.uleb128 0xa
 2819 0b63 F10C0000 		.4byte	.LASF167
 2820 0b67 0B       		.byte	0xb
 2821 0b68 91       		.byte	0x91
 2822 0b69 B8000000 		.4byte	0xb8
 2823 0b6d 94       		.byte	0x94
 2824 0b6e 0A       		.uleb128 0xa
 2825 0b6f BA030000 		.4byte	.LASF168
 2826 0b73 0B       		.byte	0xb
 2827 0b74 92       		.byte	0x92
 2828 0b75 B8000000 		.4byte	0xb8
 2829 0b79 98       		.byte	0x98
 2830 0b7a 0A       		.uleb128 0xa
 2831 0b7b 530D0000 		.4byte	.LASF169
 2832 0b7f 0B       		.byte	0xb
 2833 0b80 93       		.byte	0x93
 2834 0b81 B8000000 		.4byte	0xb8
 2835 0b85 9C       		.byte	0x9c
 2836 0b86 0A       		.uleb128 0xa
 2837 0b87 C6060000 		.4byte	.LASF170
 2838 0b8b 0B       		.byte	0xb
 2839 0b8c 94       		.byte	0x94
 2840 0b8d B8000000 		.4byte	0xb8
 2841 0b91 A0       		.byte	0xa0
 2842 0b92 0A       		.uleb128 0xa
 2843 0b93 33010000 		.4byte	.LASF171
 2844 0b97 0B       		.byte	0xb
 2845 0b98 95       		.byte	0x95
 2846 0b99 AD000000 		.4byte	0xad
 2847 0b9d A4       		.byte	0xa4
 2848 0b9e 0A       		.uleb128 0xa
 2849 0b9f 780B0000 		.4byte	.LASF172
 2850 0ba3 0B       		.byte	0xb
 2851 0ba4 96       		.byte	0x96
 2852 0ba5 AD000000 		.4byte	0xad
 2853 0ba9 A6       		.byte	0xa6
 2854 0baa 0A       		.uleb128 0xa
 2855 0bab AF0D0000 		.4byte	.LASF173
 2856 0baf 0B       		.byte	0xb
 2857 0bb0 97       		.byte	0x97
 2858 0bb1 AD000000 		.4byte	0xad
 2859 0bb5 A8       		.byte	0xa8
 2860 0bb6 0A       		.uleb128 0xa
 2861 0bb7 4F080000 		.4byte	.LASF174
 2862 0bbb 0B       		.byte	0xb
 2863 0bbc 98       		.byte	0x98
 2864 0bbd AD000000 		.4byte	0xad
 2865 0bc1 AA       		.byte	0xaa
 2866 0bc2 0A       		.uleb128 0xa
 2867 0bc3 3B090000 		.4byte	.LASF175
 2868 0bc7 0B       		.byte	0xb
 2869 0bc8 99       		.byte	0x99
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 145


 2870 0bc9 AD000000 		.4byte	0xad
 2871 0bcd AC       		.byte	0xac
 2872 0bce 0A       		.uleb128 0xa
 2873 0bcf D5090000 		.4byte	.LASF176
 2874 0bd3 0B       		.byte	0xb
 2875 0bd4 9A       		.byte	0x9a
 2876 0bd5 AD000000 		.4byte	0xad
 2877 0bd9 AE       		.byte	0xae
 2878 0bda 0A       		.uleb128 0xa
 2879 0bdb 5E030000 		.4byte	.LASF177
 2880 0bdf 0B       		.byte	0xb
 2881 0be0 9D       		.byte	0x9d
 2882 0be1 AD000000 		.4byte	0xad
 2883 0be5 B0       		.byte	0xb0
 2884 0be6 0A       		.uleb128 0xa
 2885 0be7 62000000 		.4byte	.LASF178
 2886 0beb 0B       		.byte	0xb
 2887 0bec 9E       		.byte	0x9e
 2888 0bed B8000000 		.4byte	0xb8
 2889 0bf1 B4       		.byte	0xb4
 2890 0bf2 00       		.byte	0
 2891 0bf3 03       		.uleb128 0x3
 2892 0bf4 D0030000 		.4byte	.LASF179
 2893 0bf8 0B       		.byte	0xb
 2894 0bf9 9F       		.byte	0x9f
 2895 0bfa E2070000 		.4byte	0x7e2
 2896 0bfe 0F       		.uleb128 0xf
 2897 0bff 3F0E0000 		.4byte	.LASF180
 2898 0c03 0C       		.byte	0xc
 2899 0c04 EE01     		.2byte	0x1ee
 2900 0c06 0A0C0000 		.4byte	0xc0a
 2901 0c0a 10       		.uleb128 0x10
 2902 0c0b 04       		.byte	0x4
 2903 0c0c 100C0000 		.4byte	0xc10
 2904 0c10 11       		.uleb128 0x11
 2905 0c11 0F       		.uleb128 0xf
 2906 0c12 BA0C0000 		.4byte	.LASF181
 2907 0c16 0C       		.byte	0xc
 2908 0c17 F601     		.2byte	0x1f6
 2909 0c19 1D0C0000 		.4byte	0xc1d
 2910 0c1d 02       		.uleb128 0x2
 2911 0c1e 01       		.byte	0x1
 2912 0c1f 08       		.byte	0x8
 2913 0c20 60070000 		.4byte	.LASF182
 2914 0c24 02       		.uleb128 0x2
 2915 0c25 04       		.byte	0x4
 2916 0c26 04       		.byte	0x4
 2917 0c27 16040000 		.4byte	.LASF183
 2918 0c2b 02       		.uleb128 0x2
 2919 0c2c 08       		.byte	0x8
 2920 0c2d 04       		.byte	0x4
 2921 0c2e EA0C0000 		.4byte	.LASF184
 2922 0c32 0F       		.uleb128 0xf
 2923 0c33 9C090000 		.4byte	.LASF185
 2924 0c37 0C       		.byte	0xc
 2925 0c38 EC03     		.2byte	0x3ec
 2926 0c3a B8000000 		.4byte	0xb8
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 146


 2927 0c3e 12       		.uleb128 0x12
 2928 0c3f 04       		.byte	0x4
 2929 0c40 90000000 		.4byte	0x90
 2930 0c44 01       		.byte	0x1
 2931 0c45 FE02     		.2byte	0x2fe
 2932 0c47 6D0C0000 		.4byte	0xc6d
 2933 0c4b 13       		.uleb128 0x13
 2934 0c4c 17080000 		.4byte	.LASF186
 2935 0c50 00       		.byte	0
 2936 0c51 14       		.uleb128 0x14
 2937 0c52 1E090000 		.4byte	.LASF187
 2938 0c56 01000600 		.4byte	0x60001
 2939 0c5a 14       		.uleb128 0x14
 2940 0c5b 8D090000 		.4byte	.LASF188
 2941 0c5f 02000600 		.4byte	0x60002
 2942 0c63 14       		.uleb128 0x14
 2943 0c64 C10C0000 		.4byte	.LASF189
 2944 0c68 03000600 		.4byte	0x60003
 2945 0c6c 00       		.byte	0
 2946 0c6d 0F       		.uleb128 0xf
 2947 0c6e F0070000 		.4byte	.LASF190
 2948 0c72 01       		.byte	0x1
 2949 0c73 0303     		.2byte	0x303
 2950 0c75 3E0C0000 		.4byte	0xc3e
 2951 0c79 12       		.uleb128 0x12
 2952 0c7a 01       		.byte	0x1
 2953 0c7b 2C000000 		.4byte	0x2c
 2954 0c7f 01       		.byte	0x1
 2955 0c80 0703     		.2byte	0x307
 2956 0c82 930C0000 		.4byte	0xc93
 2957 0c86 13       		.uleb128 0x13
 2958 0c87 E3090000 		.4byte	.LASF191
 2959 0c8b 00       		.byte	0
 2960 0c8c 13       		.uleb128 0x13
 2961 0c8d 48110000 		.4byte	.LASF192
 2962 0c91 01       		.byte	0x1
 2963 0c92 00       		.byte	0
 2964 0c93 0F       		.uleb128 0xf
 2965 0c94 28030000 		.4byte	.LASF193
 2966 0c98 01       		.byte	0x1
 2967 0c99 0A03     		.2byte	0x30a
 2968 0c9b 790C0000 		.4byte	0xc79
 2969 0c9f 12       		.uleb128 0x12
 2970 0ca0 01       		.byte	0x1
 2971 0ca1 2C000000 		.4byte	0x2c
 2972 0ca5 01       		.byte	0x1
 2973 0ca6 0E03     		.2byte	0x30e
 2974 0ca8 B90C0000 		.4byte	0xcb9
 2975 0cac 13       		.uleb128 0x13
 2976 0cad 66050000 		.4byte	.LASF194
 2977 0cb1 00       		.byte	0
 2978 0cb2 13       		.uleb128 0x13
 2979 0cb3 C5020000 		.4byte	.LASF195
 2980 0cb7 01       		.byte	0x1
 2981 0cb8 00       		.byte	0
 2982 0cb9 0F       		.uleb128 0xf
 2983 0cba DB0D0000 		.4byte	.LASF196
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 147


 2984 0cbe 01       		.byte	0x1
 2985 0cbf 1103     		.2byte	0x311
 2986 0cc1 9F0C0000 		.4byte	0xc9f
 2987 0cc5 12       		.uleb128 0x12
 2988 0cc6 01       		.byte	0x1
 2989 0cc7 2C000000 		.4byte	0x2c
 2990 0ccb 01       		.byte	0x1
 2991 0ccc 1503     		.2byte	0x315
 2992 0cce DF0C0000 		.4byte	0xcdf
 2993 0cd2 13       		.uleb128 0x13
 2994 0cd3 4D0E0000 		.4byte	.LASF197
 2995 0cd7 00       		.byte	0
 2996 0cd8 13       		.uleb128 0x13
 2997 0cd9 F9100000 		.4byte	.LASF198
 2998 0cdd 01       		.byte	0x1
 2999 0cde 00       		.byte	0
 3000 0cdf 12       		.uleb128 0x12
 3001 0ce0 01       		.byte	0x1
 3002 0ce1 2C000000 		.4byte	0x2c
 3003 0ce5 01       		.byte	0x1
 3004 0ce6 1C03     		.2byte	0x31c
 3005 0ce8 F90C0000 		.4byte	0xcf9
 3006 0cec 13       		.uleb128 0x13
 3007 0ced F60E0000 		.4byte	.LASF199
 3008 0cf1 00       		.byte	0
 3009 0cf2 13       		.uleb128 0x13
 3010 0cf3 3D0B0000 		.4byte	.LASF200
 3011 0cf7 01       		.byte	0x1
 3012 0cf8 00       		.byte	0
 3013 0cf9 12       		.uleb128 0x12
 3014 0cfa 01       		.byte	0x1
 3015 0cfb 2C000000 		.4byte	0x2c
 3016 0cff 01       		.byte	0x1
 3017 0d00 1304     		.2byte	0x413
 3018 0d02 1F0D0000 		.4byte	0xd1f
 3019 0d06 13       		.uleb128 0x13
 3020 0d07 8D030000 		.4byte	.LASF201
 3021 0d0b 00       		.byte	0
 3022 0d0c 13       		.uleb128 0x13
 3023 0d0d FC040000 		.4byte	.LASF202
 3024 0d11 01       		.byte	0x1
 3025 0d12 13       		.uleb128 0x13
 3026 0d13 48070000 		.4byte	.LASF203
 3027 0d17 02       		.byte	0x2
 3028 0d18 13       		.uleb128 0x13
 3029 0d19 BA010000 		.4byte	.LASF204
 3030 0d1d 03       		.byte	0x3
 3031 0d1e 00       		.byte	0
 3032 0d1f 0F       		.uleb128 0xf
 3033 0d20 19110000 		.4byte	.LASF205
 3034 0d24 01       		.byte	0x1
 3035 0d25 1804     		.2byte	0x418
 3036 0d27 F90C0000 		.4byte	0xcf9
 3037 0d2b 12       		.uleb128 0x12
 3038 0d2c 01       		.byte	0x1
 3039 0d2d 2C000000 		.4byte	0x2c
 3040 0d31 01       		.byte	0x1
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 148


 3041 0d32 9404     		.2byte	0x494
 3042 0d34 510D0000 		.4byte	0xd51
 3043 0d38 13       		.uleb128 0x13
 3044 0d39 0A0E0000 		.4byte	.LASF206
 3045 0d3d 00       		.byte	0
 3046 0d3e 13       		.uleb128 0x13
 3047 0d3f 73060000 		.4byte	.LASF207
 3048 0d43 01       		.byte	0x1
 3049 0d44 13       		.uleb128 0x13
 3050 0d45 8D080000 		.4byte	.LASF208
 3051 0d49 02       		.byte	0x2
 3052 0d4a 13       		.uleb128 0x13
 3053 0d4b BA080000 		.4byte	.LASF209
 3054 0d4f 04       		.byte	0x4
 3055 0d50 00       		.byte	0
 3056 0d51 15       		.uleb128 0x15
 3057 0d52 78       		.byte	0x78
 3058 0d53 01       		.byte	0x1
 3059 0d54 0205     		.2byte	0x502
 3060 0d56 1E0E0000 		.4byte	0xe1e
 3061 0d5a 16       		.uleb128 0x16
 3062 0d5b 29050000 		.4byte	.LASF210
 3063 0d5f 01       		.byte	0x1
 3064 0d60 0405     		.2byte	0x504
 3065 0d62 B8000000 		.4byte	0xb8
 3066 0d66 00       		.byte	0
 3067 0d67 16       		.uleb128 0x16
 3068 0d68 FF0D0000 		.4byte	.LASF211
 3069 0d6c 01       		.byte	0x1
 3070 0d6d 0505     		.2byte	0x505
 3071 0d6f B8000000 		.4byte	0xb8
 3072 0d73 04       		.byte	0x4
 3073 0d74 16       		.uleb128 0x16
 3074 0d75 C40A0000 		.4byte	.LASF212
 3075 0d79 01       		.byte	0x1
 3076 0d7a 0605     		.2byte	0x506
 3077 0d7c B8000000 		.4byte	0xb8
 3078 0d80 08       		.byte	0x8
 3079 0d81 16       		.uleb128 0x16
 3080 0d82 690D0000 		.4byte	.LASF213
 3081 0d86 01       		.byte	0x1
 3082 0d87 0705     		.2byte	0x507
 3083 0d89 B8000000 		.4byte	0xb8
 3084 0d8d 0C       		.byte	0xc
 3085 0d8e 16       		.uleb128 0x16
 3086 0d8f E6040000 		.4byte	.LASF214
 3087 0d93 01       		.byte	0x1
 3088 0d94 0805     		.2byte	0x508
 3089 0d96 B8000000 		.4byte	0xb8
 3090 0d9a 10       		.byte	0x10
 3091 0d9b 16       		.uleb128 0x16
 3092 0d9c 45080000 		.4byte	.LASF215
 3093 0da0 01       		.byte	0x1
 3094 0da1 0905     		.2byte	0x509
 3095 0da3 1F0D0000 		.4byte	0xd1f
 3096 0da7 14       		.byte	0x14
 3097 0da8 16       		.uleb128 0x16
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 149


 3098 0da9 76070000 		.4byte	.LASF216
 3099 0dad 01       		.byte	0x1
 3100 0dae 0A05     		.2byte	0x50a
 3101 0db0 B8000000 		.4byte	0xb8
 3102 0db4 18       		.byte	0x18
 3103 0db5 16       		.uleb128 0x16
 3104 0db6 43100000 		.4byte	.LASF217
 3105 0dba 01       		.byte	0x1
 3106 0dbb 0B05     		.2byte	0x50b
 3107 0dbd 1E0E0000 		.4byte	0xe1e
 3108 0dc1 1C       		.byte	0x1c
 3109 0dc2 16       		.uleb128 0x16
 3110 0dc3 87110000 		.4byte	.LASF218
 3111 0dc7 01       		.byte	0x1
 3112 0dc8 0C05     		.2byte	0x50c
 3113 0dca B8000000 		.4byte	0xb8
 3114 0dce 5C       		.byte	0x5c
 3115 0dcf 16       		.uleb128 0x16
 3116 0dd0 1C030000 		.4byte	.LASF219
 3117 0dd4 01       		.byte	0x1
 3118 0dd5 0D05     		.2byte	0x50d
 3119 0dd7 B8000000 		.4byte	0xb8
 3120 0ddb 60       		.byte	0x60
 3121 0ddc 16       		.uleb128 0x16
 3122 0ddd EB100000 		.4byte	.LASF220
 3123 0de1 01       		.byte	0x1
 3124 0de2 0E05     		.2byte	0x50e
 3125 0de4 B8000000 		.4byte	0xb8
 3126 0de8 64       		.byte	0x64
 3127 0de9 16       		.uleb128 0x16
 3128 0dea 5B0A0000 		.4byte	.LASF221
 3129 0dee 01       		.byte	0x1
 3130 0def 0F05     		.2byte	0x50f
 3131 0df1 B8000000 		.4byte	0xb8
 3132 0df5 68       		.byte	0x68
 3133 0df6 16       		.uleb128 0x16
 3134 0df7 35080000 		.4byte	.LASF222
 3135 0dfb 01       		.byte	0x1
 3136 0dfc 1005     		.2byte	0x510
 3137 0dfe B8000000 		.4byte	0xb8
 3138 0e02 6C       		.byte	0x6c
 3139 0e03 16       		.uleb128 0x16
 3140 0e04 86100000 		.4byte	.LASF223
 3141 0e08 01       		.byte	0x1
 3142 0e09 1105     		.2byte	0x511
 3143 0e0b 2E0E0000 		.4byte	0xe2e
 3144 0e0f 70       		.byte	0x70
 3145 0e10 16       		.uleb128 0x16
 3146 0e11 04070000 		.4byte	.LASF224
 3147 0e15 01       		.byte	0x1
 3148 0e16 1205     		.2byte	0x512
 3149 0e18 B8000000 		.4byte	0xb8
 3150 0e1c 74       		.byte	0x74
 3151 0e1d 00       		.byte	0
 3152 0e1e 07       		.uleb128 0x7
 3153 0e1f B8000000 		.4byte	0xb8
 3154 0e23 2E0E0000 		.4byte	0xe2e
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 150


 3155 0e27 08       		.uleb128 0x8
 3156 0e28 C3000000 		.4byte	0xc3
 3157 0e2c 0F       		.byte	0xf
 3158 0e2d 00       		.byte	0
 3159 0e2e 02       		.uleb128 0x2
 3160 0e2f 01       		.byte	0x1
 3161 0e30 02       		.byte	0x2
 3162 0e31 30060000 		.4byte	.LASF225
 3163 0e35 0F       		.uleb128 0xf
 3164 0e36 15050000 		.4byte	.LASF226
 3165 0e3a 01       		.byte	0x1
 3166 0e3b 1305     		.2byte	0x513
 3167 0e3d 510D0000 		.4byte	0xd51
 3168 0e41 12       		.uleb128 0x12
 3169 0e42 04       		.byte	0x4
 3170 0e43 90000000 		.4byte	0x90
 3171 0e47 02       		.byte	0x2
 3172 0e48 5C02     		.2byte	0x25c
 3173 0e4a 700E0000 		.4byte	0xe70
 3174 0e4e 13       		.uleb128 0x13
 3175 0e4f 07020000 		.4byte	.LASF227
 3176 0e53 00       		.byte	0
 3177 0e54 14       		.uleb128 0x14
 3178 0e55 640B0000 		.4byte	.LASF228
 3179 0e59 01004A00 		.4byte	0x4a0001
 3180 0e5d 14       		.uleb128 0x14
 3181 0e5e 70010000 		.4byte	.LASF229
 3182 0e62 02004A00 		.4byte	0x4a0002
 3183 0e66 14       		.uleb128 0x14
 3184 0e67 AC0A0000 		.4byte	.LASF230
 3185 0e6b 03004A00 		.4byte	0x4a0003
 3186 0e6f 00       		.byte	0
 3187 0e70 0F       		.uleb128 0xf
 3188 0e71 8B050000 		.4byte	.LASF231
 3189 0e75 02       		.byte	0x2
 3190 0e76 6102     		.2byte	0x261
 3191 0e78 410E0000 		.4byte	0xe41
 3192 0e7c 12       		.uleb128 0x12
 3193 0e7d 01       		.byte	0x1
 3194 0e7e 2C000000 		.4byte	0x2c
 3195 0e82 02       		.byte	0x2
 3196 0e83 2107     		.2byte	0x721
 3197 0e85 A20E0000 		.4byte	0xea2
 3198 0e89 13       		.uleb128 0x13
 3199 0e8a 0E010000 		.4byte	.LASF232
 3200 0e8e 00       		.byte	0
 3201 0e8f 13       		.uleb128 0x13
 3202 0e90 F50A0000 		.4byte	.LASF233
 3203 0e94 01       		.byte	0x1
 3204 0e95 13       		.uleb128 0x13
 3205 0e96 0F0A0000 		.4byte	.LASF234
 3206 0e9a 02       		.byte	0x2
 3207 0e9b 13       		.uleb128 0x13
 3208 0e9c 600E0000 		.4byte	.LASF235
 3209 0ea0 03       		.byte	0x3
 3210 0ea1 00       		.byte	0
 3211 0ea2 0F       		.uleb128 0xf
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 151


 3212 0ea3 B80E0000 		.4byte	.LASF236
 3213 0ea7 02       		.byte	0x2
 3214 0ea8 2607     		.2byte	0x726
 3215 0eaa 7C0E0000 		.4byte	0xe7c
 3216 0eae 09       		.uleb128 0x9
 3217 0eaf 14       		.byte	0x14
 3218 0eb0 04       		.byte	0x4
 3219 0eb1 3B       		.byte	0x3b
 3220 0eb2 F30E0000 		.4byte	0xef3
 3221 0eb6 0A       		.uleb128 0xa
 3222 0eb7 BE110000 		.4byte	.LASF237
 3223 0ebb 04       		.byte	0x4
 3224 0ebc 3D       		.byte	0x3d
 3225 0ebd B8000000 		.4byte	0xb8
 3226 0ec1 00       		.byte	0
 3227 0ec2 0A       		.uleb128 0xa
 3228 0ec3 41040000 		.4byte	.LASF238
 3229 0ec7 04       		.byte	0x4
 3230 0ec8 3E       		.byte	0x3e
 3231 0ec9 B8000000 		.4byte	0xb8
 3232 0ecd 04       		.byte	0x4
 3233 0ece 0A       		.uleb128 0xa
 3234 0ecf 6B020000 		.4byte	.LASF239
 3235 0ed3 04       		.byte	0x4
 3236 0ed4 3F       		.byte	0x3f
 3237 0ed5 F30E0000 		.4byte	0xef3
 3238 0ed9 08       		.byte	0x8
 3239 0eda 0A       		.uleb128 0xa
 3240 0edb 100D0000 		.4byte	.LASF240
 3241 0edf 04       		.byte	0x4
 3242 0ee0 40       		.byte	0x40
 3243 0ee1 B8000000 		.4byte	0xb8
 3244 0ee5 0C       		.byte	0xc
 3245 0ee6 0A       		.uleb128 0xa
 3246 0ee7 AD0E0000 		.4byte	.LASF241
 3247 0eeb 04       		.byte	0x4
 3248 0eec 45       		.byte	0x45
 3249 0eed B8000000 		.4byte	0xb8
 3250 0ef1 10       		.byte	0x10
 3251 0ef2 00       		.byte	0
 3252 0ef3 10       		.uleb128 0x10
 3253 0ef4 04       		.byte	0x4
 3254 0ef5 F90E0000 		.4byte	0xef9
 3255 0ef9 06       		.uleb128 0x6
 3256 0efa 350E0000 		.4byte	0xe35
 3257 0efe 03       		.uleb128 0x3
 3258 0eff 52050000 		.4byte	.LASF242
 3259 0f03 04       		.byte	0x4
 3260 0f04 48       		.byte	0x48
 3261 0f05 AE0E0000 		.4byte	0xeae
 3262 0f09 17       		.uleb128 0x17
 3263 0f0a E60B0000 		.4byte	.LASF243
 3264 0f0e 01       		.byte	0x1
 3265 0f0f 9E05     		.2byte	0x59e
 3266 0f11 00000000 		.4byte	.LFB79
 3267 0f15 1C000000 		.4byte	.LFE79-.LFB79
 3268 0f19 01       		.uleb128 0x1
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 152


 3269 0f1a 9C       		.byte	0x9c
 3270 0f1b 2F0F0000 		.4byte	0xf2f
 3271 0f1f 18       		.uleb128 0x18
 3272 0f20 3C040000 		.4byte	.LASF245
 3273 0f24 01       		.byte	0x1
 3274 0f25 9E05     		.2byte	0x59e
 3275 0f27 2F0F0000 		.4byte	0xf2f
 3276 0f2b 02       		.uleb128 0x2
 3277 0f2c 91       		.byte	0x91
 3278 0f2d 74       		.sleb128 -12
 3279 0f2e 00       		.byte	0
 3280 0f2f 10       		.uleb128 0x10
 3281 0f30 04       		.byte	0x4
 3282 0f31 CF070000 		.4byte	0x7cf
 3283 0f35 19       		.uleb128 0x19
 3284 0f36 A7080000 		.4byte	.LASF244
 3285 0f3a 01       		.byte	0x1
 3286 0f3b DB05     		.2byte	0x5db
 3287 0f3d 00000000 		.4byte	.LFB81
 3288 0f41 38000000 		.4byte	.LFE81-.LFB81
 3289 0f45 01       		.uleb128 0x1
 3290 0f46 9C       		.byte	0x9c
 3291 0f47 6A0F0000 		.4byte	0xf6a
 3292 0f4b 18       		.uleb128 0x18
 3293 0f4c 3C040000 		.4byte	.LASF245
 3294 0f50 01       		.byte	0x1
 3295 0f51 DB05     		.2byte	0x5db
 3296 0f53 2F0F0000 		.4byte	0xf2f
 3297 0f57 02       		.uleb128 0x2
 3298 0f58 91       		.byte	0x91
 3299 0f59 74       		.sleb128 -12
 3300 0f5a 18       		.uleb128 0x18
 3301 0f5b BB060000 		.4byte	.LASF246
 3302 0f5f 01       		.byte	0x1
 3303 0f60 DB05     		.2byte	0x5db
 3304 0f62 B8000000 		.4byte	0xb8
 3305 0f66 02       		.uleb128 0x2
 3306 0f67 91       		.byte	0x91
 3307 0f68 70       		.sleb128 -16
 3308 0f69 00       		.byte	0
 3309 0f6a 19       		.uleb128 0x19
 3310 0f6b CE0E0000 		.4byte	.LASF247
 3311 0f6f 01       		.byte	0x1
 3312 0f70 6D06     		.2byte	0x66d
 3313 0f72 00000000 		.4byte	.LFB86
 3314 0f76 38000000 		.4byte	.LFE86-.LFB86
 3315 0f7a 01       		.uleb128 0x1
 3316 0f7b 9C       		.byte	0x9c
 3317 0f7c 9F0F0000 		.4byte	0xf9f
 3318 0f80 18       		.uleb128 0x18
 3319 0f81 3C040000 		.4byte	.LASF245
 3320 0f85 01       		.byte	0x1
 3321 0f86 6D06     		.2byte	0x66d
 3322 0f88 2F0F0000 		.4byte	0xf2f
 3323 0f8c 02       		.uleb128 0x2
 3324 0f8d 91       		.byte	0x91
 3325 0f8e 74       		.sleb128 -12
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 153


 3326 0f8f 18       		.uleb128 0x18
 3327 0f90 87110000 		.4byte	.LASF218
 3328 0f94 01       		.byte	0x1
 3329 0f95 6D06     		.2byte	0x66d
 3330 0f97 B8000000 		.4byte	0xb8
 3331 0f9b 02       		.uleb128 0x2
 3332 0f9c 91       		.byte	0x91
 3333 0f9d 70       		.sleb128 -16
 3334 0f9e 00       		.byte	0
 3335 0f9f 1A       		.uleb128 0x1a
 3336 0fa0 EF080000 		.4byte	.LASF251
 3337 0fa4 02       		.byte	0x2
 3338 0fa5 5207     		.2byte	0x752
 3339 0fa7 700E0000 		.4byte	0xe70
 3340 0fab 00000000 		.4byte	.LFB134
 3341 0faf F0000000 		.4byte	.LFE134-.LFB134
 3342 0fb3 01       		.uleb128 0x1
 3343 0fb4 9C       		.byte	0x9c
 3344 0fb5 F60F0000 		.4byte	0xff6
 3345 0fb9 18       		.uleb128 0x18
 3346 0fba 92070000 		.4byte	.LASF248
 3347 0fbe 02       		.byte	0x2
 3348 0fbf 5207     		.2byte	0x752
 3349 0fc1 A20E0000 		.4byte	0xea2
 3350 0fc5 02       		.uleb128 0x2
 3351 0fc6 91       		.byte	0x91
 3352 0fc7 67       		.sleb128 -25
 3353 0fc8 18       		.uleb128 0x18
 3354 0fc9 EB010000 		.4byte	.LASF249
 3355 0fcd 02       		.byte	0x2
 3356 0fce 5307     		.2byte	0x753
 3357 0fd0 B8000000 		.4byte	0xb8
 3358 0fd4 02       		.uleb128 0x2
 3359 0fd5 91       		.byte	0x91
 3360 0fd6 60       		.sleb128 -32
 3361 0fd7 18       		.uleb128 0x18
 3362 0fd8 DB070000 		.4byte	.LASF250
 3363 0fdc 02       		.byte	0x2
 3364 0fdd 5307     		.2byte	0x753
 3365 0fdf B8000000 		.4byte	0xb8
 3366 0fe3 02       		.uleb128 0x2
 3367 0fe4 91       		.byte	0x91
 3368 0fe5 5C       		.sleb128 -36
 3369 0fe6 1B       		.uleb128 0x1b
 3370 0fe7 A80D0000 		.4byte	.LASF253
 3371 0feb 02       		.byte	0x2
 3372 0fec 5507     		.2byte	0x755
 3373 0fee 700E0000 		.4byte	0xe70
 3374 0ff2 02       		.uleb128 0x2
 3375 0ff3 91       		.byte	0x91
 3376 0ff4 6C       		.sleb128 -20
 3377 0ff5 00       		.byte	0
 3378 0ff6 1A       		.uleb128 0x1a
 3379 0ff7 7C0C0000 		.4byte	.LASF252
 3380 0ffb 02       		.byte	0x2
 3381 0ffc 4908     		.2byte	0x849
 3382 0ffe 700E0000 		.4byte	0xe70
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 154


 3383 1002 00000000 		.4byte	.LFB140
 3384 1006 E4000000 		.4byte	.LFE140-.LFB140
 3385 100a 01       		.uleb128 0x1
 3386 100b 9C       		.byte	0x9c
 3387 100c 3E100000 		.4byte	0x103e
 3388 1010 18       		.uleb128 0x18
 3389 1011 92070000 		.4byte	.LASF248
 3390 1015 02       		.byte	0x2
 3391 1016 4908     		.2byte	0x849
 3392 1018 A20E0000 		.4byte	0xea2
 3393 101c 02       		.uleb128 0x2
 3394 101d 91       		.byte	0x91
 3395 101e 67       		.sleb128 -25
 3396 101f 18       		.uleb128 0x18
 3397 1020 EB010000 		.4byte	.LASF249
 3398 1024 02       		.byte	0x2
 3399 1025 4908     		.2byte	0x849
 3400 1027 B8000000 		.4byte	0xb8
 3401 102b 02       		.uleb128 0x2
 3402 102c 91       		.byte	0x91
 3403 102d 60       		.sleb128 -32
 3404 102e 1B       		.uleb128 0x1b
 3405 102f A80D0000 		.4byte	.LASF253
 3406 1033 02       		.byte	0x2
 3407 1034 4B08     		.2byte	0x84b
 3408 1036 700E0000 		.4byte	0xe70
 3409 103a 02       		.uleb128 0x2
 3410 103b 91       		.byte	0x91
 3411 103c 6C       		.sleb128 -20
 3412 103d 00       		.byte	0
 3413 103e 1A       		.uleb128 0x1a
 3414 103f 88000000 		.4byte	.LASF254
 3415 1043 02       		.byte	0x2
 3416 1044 6F08     		.2byte	0x86f
 3417 1046 700E0000 		.4byte	0xe70
 3418 104a 00000000 		.4byte	.LFB141
 3419 104e AC000000 		.4byte	.LFE141-.LFB141
 3420 1052 01       		.uleb128 0x1
 3421 1053 9C       		.byte	0x9c
 3422 1054 86100000 		.4byte	0x1086
 3423 1058 18       		.uleb128 0x18
 3424 1059 92070000 		.4byte	.LASF248
 3425 105d 02       		.byte	0x2
 3426 105e 6F08     		.2byte	0x86f
 3427 1060 A20E0000 		.4byte	0xea2
 3428 1064 02       		.uleb128 0x2
 3429 1065 91       		.byte	0x91
 3430 1066 6F       		.sleb128 -17
 3431 1067 18       		.uleb128 0x18
 3432 1068 EB010000 		.4byte	.LASF249
 3433 106c 02       		.byte	0x2
 3434 106d 6F08     		.2byte	0x86f
 3435 106f B8000000 		.4byte	0xb8
 3436 1073 02       		.uleb128 0x2
 3437 1074 91       		.byte	0x91
 3438 1075 68       		.sleb128 -24
 3439 1076 1B       		.uleb128 0x1b
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 155


 3440 1077 A80D0000 		.4byte	.LASF253
 3441 107b 02       		.byte	0x2
 3442 107c 7108     		.2byte	0x871
 3443 107e 700E0000 		.4byte	0xe70
 3444 1082 02       		.uleb128 0x2
 3445 1083 91       		.byte	0x91
 3446 1084 74       		.sleb128 -12
 3447 1085 00       		.byte	0
 3448 1086 1C       		.uleb128 0x1c
 3449 1087 A0110000 		.4byte	.LASF255
 3450 108b 03       		.byte	0x3
 3451 108c 3C       		.byte	0x3c
 3452 108d 00000000 		.4byte	.LFB162
 3453 1091 12000000 		.4byte	.LFE162-.LFB162
 3454 1095 01       		.uleb128 0x1
 3455 1096 9C       		.byte	0x9c
 3456 1097 1C       		.uleb128 0x1c
 3457 1098 EC000000 		.4byte	.LASF256
 3458 109c 03       		.byte	0x3
 3459 109d 4C       		.byte	0x4c
 3460 109e 00000000 		.4byte	.LFB163
 3461 10a2 12000000 		.4byte	.LFE163-.LFB163
 3462 10a6 01       		.uleb128 0x1
 3463 10a7 9C       		.byte	0x9c
 3464 10a8 1D       		.uleb128 0x1d
 3465 10a9 A1050000 		.4byte	.LASF257
 3466 10ad 03       		.byte	0x3
 3467 10ae 62       		.byte	0x62
 3468 10af 00000000 		.4byte	.LFB164
 3469 10b3 1C000000 		.4byte	.LFE164-.LFB164
 3470 10b7 01       		.uleb128 0x1
 3471 10b8 9C       		.byte	0x9c
 3472 10b9 CC100000 		.4byte	0x10cc
 3473 10bd 1E       		.uleb128 0x1e
 3474 10be DB070000 		.4byte	.LASF250
 3475 10c2 03       		.byte	0x3
 3476 10c3 62       		.byte	0x62
 3477 10c4 B8000000 		.4byte	0xb8
 3478 10c8 02       		.uleb128 0x2
 3479 10c9 91       		.byte	0x91
 3480 10ca 74       		.sleb128 -12
 3481 10cb 00       		.byte	0
 3482 10cc 1F       		.uleb128 0x1f
 3483 10cd 8D0A0000 		.4byte	.LASF258
 3484 10d1 04       		.byte	0x4
 3485 10d2 9203     		.2byte	0x392
 3486 10d4 00000000 		.4byte	.LFB168
 3487 10d8 18000000 		.4byte	.LFE168-.LFB168
 3488 10dc 01       		.uleb128 0x1
 3489 10dd 9C       		.byte	0x9c
 3490 10de 1F       		.uleb128 0x1f
 3491 10df 91060000 		.4byte	.LASF259
 3492 10e3 04       		.byte	0x4
 3493 10e4 AE03     		.2byte	0x3ae
 3494 10e6 00000000 		.4byte	.LFB169
 3495 10ea 18000000 		.4byte	.LFE169-.LFB169
 3496 10ee 01       		.uleb128 0x1
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 156


 3497 10ef 9C       		.byte	0x9c
 3498 10f0 20       		.uleb128 0x20
 3499 10f1 24060000 		.4byte	.LASF267
 3500 10f5 05       		.byte	0x5
 3501 10f6 41       		.byte	0x41
 3502 10f7 00000000 		.4byte	.LFB186
 3503 10fb 34000000 		.4byte	.LFE186-.LFB186
 3504 10ff 01       		.uleb128 0x1
 3505 1100 9C       		.byte	0x9c
 3506 1101 21       		.uleb128 0x21
 3507 1102 D4000000 		.4byte	.LASF261
 3508 1106 05       		.byte	0x5
 3509 1107 5E       		.byte	0x5e
 3510 1108 00000000 		.4byte	.LFB187
 3511 110c 14000000 		.4byte	.LFE187-.LFB187
 3512 1110 01       		.uleb128 0x1
 3513 1111 9C       		.byte	0x9c
 3514 1112 25110000 		.4byte	0x1125
 3515 1116 1E       		.uleb128 0x1e
 3516 1117 85090000 		.4byte	.LASF260
 3517 111b 05       		.byte	0x5
 3518 111c 5E       		.byte	0x5e
 3519 111d FE0B0000 		.4byte	0xbfe
 3520 1121 02       		.uleb128 0x2
 3521 1122 91       		.byte	0x91
 3522 1123 74       		.sleb128 -12
 3523 1124 00       		.byte	0
 3524 1125 21       		.uleb128 0x21
 3525 1126 06030000 		.4byte	.LASF262
 3526 112a 05       		.byte	0x5
 3527 112b 80       		.byte	0x80
 3528 112c 00000000 		.4byte	.LFB188
 3529 1130 4C000000 		.4byte	.LFE188-.LFB188
 3530 1134 01       		.uleb128 0x1
 3531 1135 9C       		.byte	0x9c
 3532 1136 57110000 		.4byte	0x1157
 3533 113a 1E       		.uleb128 0x1e
 3534 113b 360B0000 		.4byte	.LASF263
 3535 113f 05       		.byte	0x5
 3536 1140 80       		.byte	0x80
 3537 1141 57110000 		.4byte	0x1157
 3538 1145 02       		.uleb128 0x2
 3539 1146 91       		.byte	0x91
 3540 1147 6C       		.sleb128 -20
 3541 1148 22       		.uleb128 0x22
 3542 1149 78100000 		.4byte	.LASF264
 3543 114d 05       		.byte	0x5
 3544 114e 82       		.byte	0x82
 3545 114f 2E0E0000 		.4byte	0xe2e
 3546 1153 02       		.uleb128 0x2
 3547 1154 91       		.byte	0x91
 3548 1155 77       		.sleb128 -9
 3549 1156 00       		.byte	0
 3550 1157 10       		.uleb128 0x10
 3551 1158 04       		.byte	0x4
 3552 1159 5D110000 		.4byte	0x115d
 3553 115d 06       		.uleb128 0x6
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 157


 3554 115e FE0E0000 		.4byte	0xefe
 3555 1162 21       		.uleb128 0x21
 3556 1163 550F0000 		.4byte	.LASF265
 3557 1167 05       		.byte	0x5
 3558 1168 AA       		.byte	0xaa
 3559 1169 00000000 		.4byte	.LFB189
 3560 116d 78000000 		.4byte	.LFE189-.LFB189
 3561 1171 01       		.uleb128 0x1
 3562 1172 9C       		.byte	0x9c
 3563 1173 94110000 		.4byte	0x1194
 3564 1177 1E       		.uleb128 0x1e
 3565 1178 360B0000 		.4byte	.LASF263
 3566 117c 05       		.byte	0x5
 3567 117d AA       		.byte	0xaa
 3568 117e B8000000 		.4byte	0xb8
 3569 1182 02       		.uleb128 0x2
 3570 1183 91       		.byte	0x91
 3571 1184 74       		.sleb128 -12
 3572 1185 1E       		.uleb128 0x1e
 3573 1186 9A010000 		.4byte	.LASF266
 3574 118a 05       		.byte	0x5
 3575 118b AA       		.byte	0xaa
 3576 118c B8000000 		.4byte	0xb8
 3577 1190 02       		.uleb128 0x2
 3578 1191 91       		.byte	0x91
 3579 1192 70       		.sleb128 -16
 3580 1193 00       		.byte	0
 3581 1194 20       		.uleb128 0x20
 3582 1195 8C020000 		.4byte	.LASF268
 3583 1199 05       		.byte	0x5
 3584 119a E3       		.byte	0xe3
 3585 119b 00000000 		.4byte	.LFB190
 3586 119f 30000000 		.4byte	.LFE190-.LFB190
 3587 11a3 01       		.uleb128 0x1
 3588 11a4 9C       		.byte	0x9c
 3589 11a5 23       		.uleb128 0x23
 3590 11a6 6C030000 		.4byte	.LASF269
 3591 11aa 05       		.byte	0x5
 3592 11ab FE       		.byte	0xfe
 3593 11ac 00000000 		.4byte	.LFB191
 3594 11b0 44000000 		.4byte	.LFE191-.LFB191
 3595 11b4 01       		.uleb128 0x1
 3596 11b5 9C       		.byte	0x9c
 3597 11b6 C9110000 		.4byte	0x11c9
 3598 11ba 1E       		.uleb128 0x1e
 3599 11bb 17030000 		.4byte	.LASF270
 3600 11bf 05       		.byte	0x5
 3601 11c0 FE       		.byte	0xfe
 3602 11c1 930C0000 		.4byte	0xc93
 3603 11c5 02       		.uleb128 0x2
 3604 11c6 91       		.byte	0x91
 3605 11c7 77       		.sleb128 -9
 3606 11c8 00       		.byte	0
 3607 11c9 24       		.uleb128 0x24
 3608 11ca 65070000 		.4byte	.LASF271
 3609 11ce 05       		.byte	0x5
 3610 11cf 1A01     		.2byte	0x11a
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 158


 3611 11d1 00000000 		.4byte	.LFB192
 3612 11d5 0A000000 		.4byte	.LFE192-.LFB192
 3613 11d9 01       		.uleb128 0x1
 3614 11da 9C       		.byte	0x9c
 3615 11db 24       		.uleb128 0x24
 3616 11dc 150F0000 		.4byte	.LASF272
 3617 11e0 05       		.byte	0x5
 3618 11e1 3601     		.2byte	0x136
 3619 11e3 00000000 		.4byte	.LFB193
 3620 11e7 0A000000 		.4byte	.LFE193-.LFB193
 3621 11eb 01       		.uleb128 0x1
 3622 11ec 9C       		.byte	0x9c
 3623 11ed 25       		.uleb128 0x25
 3624 11ee 4A0A0000 		.4byte	.LASF273
 3625 11f2 05       		.byte	0x5
 3626 11f3 5201     		.2byte	0x152
 3627 11f5 00000000 		.4byte	.LFB194
 3628 11f9 2C000000 		.4byte	.LFE194-.LFB194
 3629 11fd 01       		.uleb128 0x1
 3630 11fe 9C       		.byte	0x9c
 3631 11ff 22120000 		.4byte	0x1222
 3632 1203 18       		.uleb128 0x18
 3633 1204 C0090000 		.4byte	.LASF274
 3634 1208 05       		.byte	0x5
 3635 1209 5201     		.2byte	0x152
 3636 120b B8000000 		.4byte	0xb8
 3637 120f 02       		.uleb128 0x2
 3638 1210 91       		.byte	0x91
 3639 1211 6C       		.sleb128 -20
 3640 1212 1B       		.uleb128 0x1b
 3641 1213 0D110000 		.4byte	.LASF275
 3642 1217 05       		.byte	0x5
 3643 1218 5401     		.2byte	0x154
 3644 121a B8000000 		.4byte	0xb8
 3645 121e 02       		.uleb128 0x2
 3646 121f 91       		.byte	0x91
 3647 1220 74       		.sleb128 -12
 3648 1221 00       		.byte	0
 3649 1222 25       		.uleb128 0x25
 3650 1223 76000000 		.4byte	.LASF276
 3651 1227 05       		.byte	0x5
 3652 1228 6901     		.2byte	0x169
 3653 122a 00000000 		.4byte	.LFB195
 3654 122e 50000000 		.4byte	.LFE195-.LFB195
 3655 1232 01       		.uleb128 0x1
 3656 1233 9C       		.byte	0x9c
 3657 1234 57120000 		.4byte	0x1257
 3658 1238 18       		.uleb128 0x18
 3659 1239 BB060000 		.4byte	.LASF246
 3660 123d 05       		.byte	0x5
 3661 123e 6901     		.2byte	0x169
 3662 1240 B8000000 		.4byte	0xb8
 3663 1244 02       		.uleb128 0x2
 3664 1245 91       		.byte	0x91
 3665 1246 6C       		.sleb128 -20
 3666 1247 1B       		.uleb128 0x1b
 3667 1248 9C060000 		.4byte	.LASF277
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 159


 3668 124c 05       		.byte	0x5
 3669 124d 6B01     		.2byte	0x16b
 3670 124f 320C0000 		.4byte	0xc32
 3671 1253 02       		.uleb128 0x2
 3672 1254 91       		.byte	0x91
 3673 1255 74       		.sleb128 -12
 3674 1256 00       		.byte	0
 3675 1257 26       		.uleb128 0x26
 3676 1258 43020000 		.4byte	.LASF291
 3677 125c 05       		.byte	0x5
 3678 125d 8201     		.2byte	0x182
 3679 125f B8000000 		.4byte	0xb8
 3680 1263 00000000 		.4byte	.LFB196
 3681 1267 3C000000 		.4byte	.LFE196-.LFB196
 3682 126b 01       		.uleb128 0x1
 3683 126c 9C       		.byte	0x9c
 3684 126d 9F120000 		.4byte	0x129f
 3685 1271 18       		.uleb128 0x18
 3686 1272 8A0E0000 		.4byte	.LASF278
 3687 1276 05       		.byte	0x5
 3688 1277 8201     		.2byte	0x182
 3689 1279 B90C0000 		.4byte	0xcb9
 3690 127d 02       		.uleb128 0x2
 3691 127e 91       		.byte	0x91
 3692 127f 6F       		.sleb128 -17
 3693 1280 1B       		.uleb128 0x1b
 3694 1281 E60E0000 		.4byte	.LASF279
 3695 1285 05       		.byte	0x5
 3696 1286 8401     		.2byte	0x184
 3697 1288 320C0000 		.4byte	0xc32
 3698 128c 02       		.uleb128 0x2
 3699 128d 91       		.byte	0x91
 3700 128e 74       		.sleb128 -12
 3701 128f 1B       		.uleb128 0x1b
 3702 1290 7A040000 		.4byte	.LASF280
 3703 1294 05       		.byte	0x5
 3704 1295 8501     		.2byte	0x185
 3705 1297 6D0C0000 		.4byte	0xc6d
 3706 129b 02       		.uleb128 0x2
 3707 129c 91       		.byte	0x91
 3708 129d 70       		.sleb128 -16
 3709 129e 00       		.byte	0
 3710 129f 25       		.uleb128 0x25
 3711 12a0 8F010000 		.4byte	.LASF281
 3712 12a4 05       		.byte	0x5
 3713 12a5 9F01     		.2byte	0x19f
 3714 12a7 00000000 		.4byte	.LFB197
 3715 12ab 4C000000 		.4byte	.LFE197-.LFB197
 3716 12af 01       		.uleb128 0x1
 3717 12b0 9C       		.byte	0x9c
 3718 12b1 C5120000 		.4byte	0x12c5
 3719 12b5 1B       		.uleb128 0x1b
 3720 12b6 E0050000 		.4byte	.LASF282
 3721 12ba 05       		.byte	0x5
 3722 12bb A101     		.2byte	0x1a1
 3723 12bd B8000000 		.4byte	0xb8
 3724 12c1 02       		.uleb128 0x2
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 160


 3725 12c2 91       		.byte	0x91
 3726 12c3 74       		.sleb128 -12
 3727 12c4 00       		.byte	0
 3728 12c5 27       		.uleb128 0x27
 3729 12c6 A7000000 		.4byte	.LASF283
 3730 12ca 0B       		.byte	0xb
 3731 12cb A7       		.byte	0xa7
 3732 12cc D0120000 		.4byte	0x12d0
 3733 12d0 10       		.uleb128 0x10
 3734 12d1 04       		.byte	0x4
 3735 12d2 D6120000 		.4byte	0x12d6
 3736 12d6 06       		.uleb128 0x6
 3737 12d7 F30B0000 		.4byte	0xbf3
 3738 12db 28       		.uleb128 0x28
 3739 12dc 42000000 		.4byte	.LASF284
 3740 12e0 05       		.byte	0x5
 3741 12e1 2B       		.byte	0x2b
 3742 12e2 97000000 		.4byte	0x97
 3743 12e6 05       		.uleb128 0x5
 3744 12e7 03       		.byte	0x3
 3745 12e8 00000000 		.4byte	ADC_1_initVar
 3746 12ec 28       		.uleb128 0x28
 3747 12ed 8D0F0000 		.4byte	.LASF285
 3748 12f1 05       		.byte	0x5
 3749 12f2 2C       		.byte	0x2c
 3750 12f3 97000000 		.4byte	0x97
 3751 12f7 05       		.uleb128 0x5
 3752 12f8 03       		.byte	0x3
 3753 12f9 00000000 		.4byte	ADC_1_selected
 3754 12fd 28       		.uleb128 0x28
 3755 12fe 9A0C0000 		.4byte	.LASF286
 3756 1302 05       		.byte	0x5
 3757 1303 2D       		.byte	0x2d
 3758 1304 B8000000 		.4byte	0xb8
 3759 1308 05       		.uleb128 0x5
 3760 1309 03       		.byte	0x3
 3761 130a 00000000 		.4byte	ADC_1_currentConfig
 3762 130e 07       		.uleb128 0x7
 3763 130f 5D110000 		.4byte	0x115d
 3764 1313 1E130000 		.4byte	0x131e
 3765 1317 08       		.uleb128 0x8
 3766 1318 C3000000 		.4byte	0xc3
 3767 131c 00       		.byte	0
 3768 131d 00       		.byte	0
 3769 131e 29       		.uleb128 0x29
 3770 131f 390A0000 		.4byte	.LASF287
 3771 1323 04       		.byte	0x4
 3772 1324 6401     		.2byte	0x164
 3773 1326 2A130000 		.4byte	0x132a
 3774 132a 06       		.uleb128 0x6
 3775 132b 0E130000 		.4byte	0x130e
 3776 132f 00       		.byte	0
 3777              		.section	.debug_abbrev,"",%progbits
 3778              	.Ldebug_abbrev0:
 3779 0000 01       		.uleb128 0x1
 3780 0001 11       		.uleb128 0x11
 3781 0002 01       		.byte	0x1
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 161


 3782 0003 25       		.uleb128 0x25
 3783 0004 0E       		.uleb128 0xe
 3784 0005 13       		.uleb128 0x13
 3785 0006 0B       		.uleb128 0xb
 3786 0007 03       		.uleb128 0x3
 3787 0008 0E       		.uleb128 0xe
 3788 0009 1B       		.uleb128 0x1b
 3789 000a 0E       		.uleb128 0xe
 3790 000b 55       		.uleb128 0x55
 3791 000c 17       		.uleb128 0x17
 3792 000d 11       		.uleb128 0x11
 3793 000e 01       		.uleb128 0x1
 3794 000f 10       		.uleb128 0x10
 3795 0010 17       		.uleb128 0x17
 3796 0011 00       		.byte	0
 3797 0012 00       		.byte	0
 3798 0013 02       		.uleb128 0x2
 3799 0014 24       		.uleb128 0x24
 3800 0015 00       		.byte	0
 3801 0016 0B       		.uleb128 0xb
 3802 0017 0B       		.uleb128 0xb
 3803 0018 3E       		.uleb128 0x3e
 3804 0019 0B       		.uleb128 0xb
 3805 001a 03       		.uleb128 0x3
 3806 001b 0E       		.uleb128 0xe
 3807 001c 00       		.byte	0
 3808 001d 00       		.byte	0
 3809 001e 03       		.uleb128 0x3
 3810 001f 16       		.uleb128 0x16
 3811 0020 00       		.byte	0
 3812 0021 03       		.uleb128 0x3
 3813 0022 0E       		.uleb128 0xe
 3814 0023 3A       		.uleb128 0x3a
 3815 0024 0B       		.uleb128 0xb
 3816 0025 3B       		.uleb128 0x3b
 3817 0026 0B       		.uleb128 0xb
 3818 0027 49       		.uleb128 0x49
 3819 0028 13       		.uleb128 0x13
 3820 0029 00       		.byte	0
 3821 002a 00       		.byte	0
 3822 002b 04       		.uleb128 0x4
 3823 002c 24       		.uleb128 0x24
 3824 002d 00       		.byte	0
 3825 002e 0B       		.uleb128 0xb
 3826 002f 0B       		.uleb128 0xb
 3827 0030 3E       		.uleb128 0x3e
 3828 0031 0B       		.uleb128 0xb
 3829 0032 03       		.uleb128 0x3
 3830 0033 08       		.uleb128 0x8
 3831 0034 00       		.byte	0
 3832 0035 00       		.byte	0
 3833 0036 05       		.uleb128 0x5
 3834 0037 35       		.uleb128 0x35
 3835 0038 00       		.byte	0
 3836 0039 49       		.uleb128 0x49
 3837 003a 13       		.uleb128 0x13
 3838 003b 00       		.byte	0
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 162


 3839 003c 00       		.byte	0
 3840 003d 06       		.uleb128 0x6
 3841 003e 26       		.uleb128 0x26
 3842 003f 00       		.byte	0
 3843 0040 49       		.uleb128 0x49
 3844 0041 13       		.uleb128 0x13
 3845 0042 00       		.byte	0
 3846 0043 00       		.byte	0
 3847 0044 07       		.uleb128 0x7
 3848 0045 01       		.uleb128 0x1
 3849 0046 01       		.byte	0x1
 3850 0047 49       		.uleb128 0x49
 3851 0048 13       		.uleb128 0x13
 3852 0049 01       		.uleb128 0x1
 3853 004a 13       		.uleb128 0x13
 3854 004b 00       		.byte	0
 3855 004c 00       		.byte	0
 3856 004d 08       		.uleb128 0x8
 3857 004e 21       		.uleb128 0x21
 3858 004f 00       		.byte	0
 3859 0050 49       		.uleb128 0x49
 3860 0051 13       		.uleb128 0x13
 3861 0052 2F       		.uleb128 0x2f
 3862 0053 0B       		.uleb128 0xb
 3863 0054 00       		.byte	0
 3864 0055 00       		.byte	0
 3865 0056 09       		.uleb128 0x9
 3866 0057 13       		.uleb128 0x13
 3867 0058 01       		.byte	0x1
 3868 0059 0B       		.uleb128 0xb
 3869 005a 0B       		.uleb128 0xb
 3870 005b 3A       		.uleb128 0x3a
 3871 005c 0B       		.uleb128 0xb
 3872 005d 3B       		.uleb128 0x3b
 3873 005e 0B       		.uleb128 0xb
 3874 005f 01       		.uleb128 0x1
 3875 0060 13       		.uleb128 0x13
 3876 0061 00       		.byte	0
 3877 0062 00       		.byte	0
 3878 0063 0A       		.uleb128 0xa
 3879 0064 0D       		.uleb128 0xd
 3880 0065 00       		.byte	0
 3881 0066 03       		.uleb128 0x3
 3882 0067 0E       		.uleb128 0xe
 3883 0068 3A       		.uleb128 0x3a
 3884 0069 0B       		.uleb128 0xb
 3885 006a 3B       		.uleb128 0x3b
 3886 006b 0B       		.uleb128 0xb
 3887 006c 49       		.uleb128 0x49
 3888 006d 13       		.uleb128 0x13
 3889 006e 38       		.uleb128 0x38
 3890 006f 0B       		.uleb128 0xb
 3891 0070 00       		.byte	0
 3892 0071 00       		.byte	0
 3893 0072 0B       		.uleb128 0xb
 3894 0073 13       		.uleb128 0x13
 3895 0074 01       		.byte	0x1
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 163


 3896 0075 0B       		.uleb128 0xb
 3897 0076 05       		.uleb128 0x5
 3898 0077 3A       		.uleb128 0x3a
 3899 0078 0B       		.uleb128 0xb
 3900 0079 3B       		.uleb128 0x3b
 3901 007a 0B       		.uleb128 0xb
 3902 007b 01       		.uleb128 0x1
 3903 007c 13       		.uleb128 0x13
 3904 007d 00       		.byte	0
 3905 007e 00       		.byte	0
 3906 007f 0C       		.uleb128 0xc
 3907 0080 0D       		.uleb128 0xd
 3908 0081 00       		.byte	0
 3909 0082 03       		.uleb128 0x3
 3910 0083 08       		.uleb128 0x8
 3911 0084 3A       		.uleb128 0x3a
 3912 0085 0B       		.uleb128 0xb
 3913 0086 3B       		.uleb128 0x3b
 3914 0087 0B       		.uleb128 0xb
 3915 0088 49       		.uleb128 0x49
 3916 0089 13       		.uleb128 0x13
 3917 008a 38       		.uleb128 0x38
 3918 008b 0B       		.uleb128 0xb
 3919 008c 00       		.byte	0
 3920 008d 00       		.byte	0
 3921 008e 0D       		.uleb128 0xd
 3922 008f 0D       		.uleb128 0xd
 3923 0090 00       		.byte	0
 3924 0091 03       		.uleb128 0x3
 3925 0092 0E       		.uleb128 0xe
 3926 0093 3A       		.uleb128 0x3a
 3927 0094 0B       		.uleb128 0xb
 3928 0095 3B       		.uleb128 0x3b
 3929 0096 0B       		.uleb128 0xb
 3930 0097 49       		.uleb128 0x49
 3931 0098 13       		.uleb128 0x13
 3932 0099 38       		.uleb128 0x38
 3933 009a 05       		.uleb128 0x5
 3934 009b 00       		.byte	0
 3935 009c 00       		.byte	0
 3936 009d 0E       		.uleb128 0xe
 3937 009e 21       		.uleb128 0x21
 3938 009f 00       		.byte	0
 3939 00a0 49       		.uleb128 0x49
 3940 00a1 13       		.uleb128 0x13
 3941 00a2 2F       		.uleb128 0x2f
 3942 00a3 05       		.uleb128 0x5
 3943 00a4 00       		.byte	0
 3944 00a5 00       		.byte	0
 3945 00a6 0F       		.uleb128 0xf
 3946 00a7 16       		.uleb128 0x16
 3947 00a8 00       		.byte	0
 3948 00a9 03       		.uleb128 0x3
 3949 00aa 0E       		.uleb128 0xe
 3950 00ab 3A       		.uleb128 0x3a
 3951 00ac 0B       		.uleb128 0xb
 3952 00ad 3B       		.uleb128 0x3b
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 164


 3953 00ae 05       		.uleb128 0x5
 3954 00af 49       		.uleb128 0x49
 3955 00b0 13       		.uleb128 0x13
 3956 00b1 00       		.byte	0
 3957 00b2 00       		.byte	0
 3958 00b3 10       		.uleb128 0x10
 3959 00b4 0F       		.uleb128 0xf
 3960 00b5 00       		.byte	0
 3961 00b6 0B       		.uleb128 0xb
 3962 00b7 0B       		.uleb128 0xb
 3963 00b8 49       		.uleb128 0x49
 3964 00b9 13       		.uleb128 0x13
 3965 00ba 00       		.byte	0
 3966 00bb 00       		.byte	0
 3967 00bc 11       		.uleb128 0x11
 3968 00bd 15       		.uleb128 0x15
 3969 00be 00       		.byte	0
 3970 00bf 27       		.uleb128 0x27
 3971 00c0 19       		.uleb128 0x19
 3972 00c1 00       		.byte	0
 3973 00c2 00       		.byte	0
 3974 00c3 12       		.uleb128 0x12
 3975 00c4 04       		.uleb128 0x4
 3976 00c5 01       		.byte	0x1
 3977 00c6 0B       		.uleb128 0xb
 3978 00c7 0B       		.uleb128 0xb
 3979 00c8 49       		.uleb128 0x49
 3980 00c9 13       		.uleb128 0x13
 3981 00ca 3A       		.uleb128 0x3a
 3982 00cb 0B       		.uleb128 0xb
 3983 00cc 3B       		.uleb128 0x3b
 3984 00cd 05       		.uleb128 0x5
 3985 00ce 01       		.uleb128 0x1
 3986 00cf 13       		.uleb128 0x13
 3987 00d0 00       		.byte	0
 3988 00d1 00       		.byte	0
 3989 00d2 13       		.uleb128 0x13
 3990 00d3 28       		.uleb128 0x28
 3991 00d4 00       		.byte	0
 3992 00d5 03       		.uleb128 0x3
 3993 00d6 0E       		.uleb128 0xe
 3994 00d7 1C       		.uleb128 0x1c
 3995 00d8 0B       		.uleb128 0xb
 3996 00d9 00       		.byte	0
 3997 00da 00       		.byte	0
 3998 00db 14       		.uleb128 0x14
 3999 00dc 28       		.uleb128 0x28
 4000 00dd 00       		.byte	0
 4001 00de 03       		.uleb128 0x3
 4002 00df 0E       		.uleb128 0xe
 4003 00e0 1C       		.uleb128 0x1c
 4004 00e1 06       		.uleb128 0x6
 4005 00e2 00       		.byte	0
 4006 00e3 00       		.byte	0
 4007 00e4 15       		.uleb128 0x15
 4008 00e5 13       		.uleb128 0x13
 4009 00e6 01       		.byte	0x1
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 165


 4010 00e7 0B       		.uleb128 0xb
 4011 00e8 0B       		.uleb128 0xb
 4012 00e9 3A       		.uleb128 0x3a
 4013 00ea 0B       		.uleb128 0xb
 4014 00eb 3B       		.uleb128 0x3b
 4015 00ec 05       		.uleb128 0x5
 4016 00ed 01       		.uleb128 0x1
 4017 00ee 13       		.uleb128 0x13
 4018 00ef 00       		.byte	0
 4019 00f0 00       		.byte	0
 4020 00f1 16       		.uleb128 0x16
 4021 00f2 0D       		.uleb128 0xd
 4022 00f3 00       		.byte	0
 4023 00f4 03       		.uleb128 0x3
 4024 00f5 0E       		.uleb128 0xe
 4025 00f6 3A       		.uleb128 0x3a
 4026 00f7 0B       		.uleb128 0xb
 4027 00f8 3B       		.uleb128 0x3b
 4028 00f9 05       		.uleb128 0x5
 4029 00fa 49       		.uleb128 0x49
 4030 00fb 13       		.uleb128 0x13
 4031 00fc 38       		.uleb128 0x38
 4032 00fd 0B       		.uleb128 0xb
 4033 00fe 00       		.byte	0
 4034 00ff 00       		.byte	0
 4035 0100 17       		.uleb128 0x17
 4036 0101 2E       		.uleb128 0x2e
 4037 0102 01       		.byte	0x1
 4038 0103 03       		.uleb128 0x3
 4039 0104 0E       		.uleb128 0xe
 4040 0105 3A       		.uleb128 0x3a
 4041 0106 0B       		.uleb128 0xb
 4042 0107 3B       		.uleb128 0x3b
 4043 0108 05       		.uleb128 0x5
 4044 0109 27       		.uleb128 0x27
 4045 010a 19       		.uleb128 0x19
 4046 010b 11       		.uleb128 0x11
 4047 010c 01       		.uleb128 0x1
 4048 010d 12       		.uleb128 0x12
 4049 010e 06       		.uleb128 0x6
 4050 010f 40       		.uleb128 0x40
 4051 0110 18       		.uleb128 0x18
 4052 0111 9742     		.uleb128 0x2117
 4053 0113 19       		.uleb128 0x19
 4054 0114 01       		.uleb128 0x1
 4055 0115 13       		.uleb128 0x13
 4056 0116 00       		.byte	0
 4057 0117 00       		.byte	0
 4058 0118 18       		.uleb128 0x18
 4059 0119 05       		.uleb128 0x5
 4060 011a 00       		.byte	0
 4061 011b 03       		.uleb128 0x3
 4062 011c 0E       		.uleb128 0xe
 4063 011d 3A       		.uleb128 0x3a
 4064 011e 0B       		.uleb128 0xb
 4065 011f 3B       		.uleb128 0x3b
 4066 0120 05       		.uleb128 0x5
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 166


 4067 0121 49       		.uleb128 0x49
 4068 0122 13       		.uleb128 0x13
 4069 0123 02       		.uleb128 0x2
 4070 0124 18       		.uleb128 0x18
 4071 0125 00       		.byte	0
 4072 0126 00       		.byte	0
 4073 0127 19       		.uleb128 0x19
 4074 0128 2E       		.uleb128 0x2e
 4075 0129 01       		.byte	0x1
 4076 012a 03       		.uleb128 0x3
 4077 012b 0E       		.uleb128 0xe
 4078 012c 3A       		.uleb128 0x3a
 4079 012d 0B       		.uleb128 0xb
 4080 012e 3B       		.uleb128 0x3b
 4081 012f 05       		.uleb128 0x5
 4082 0130 27       		.uleb128 0x27
 4083 0131 19       		.uleb128 0x19
 4084 0132 11       		.uleb128 0x11
 4085 0133 01       		.uleb128 0x1
 4086 0134 12       		.uleb128 0x12
 4087 0135 06       		.uleb128 0x6
 4088 0136 40       		.uleb128 0x40
 4089 0137 18       		.uleb128 0x18
 4090 0138 9642     		.uleb128 0x2116
 4091 013a 19       		.uleb128 0x19
 4092 013b 01       		.uleb128 0x1
 4093 013c 13       		.uleb128 0x13
 4094 013d 00       		.byte	0
 4095 013e 00       		.byte	0
 4096 013f 1A       		.uleb128 0x1a
 4097 0140 2E       		.uleb128 0x2e
 4098 0141 01       		.byte	0x1
 4099 0142 03       		.uleb128 0x3
 4100 0143 0E       		.uleb128 0xe
 4101 0144 3A       		.uleb128 0x3a
 4102 0145 0B       		.uleb128 0xb
 4103 0146 3B       		.uleb128 0x3b
 4104 0147 05       		.uleb128 0x5
 4105 0148 27       		.uleb128 0x27
 4106 0149 19       		.uleb128 0x19
 4107 014a 49       		.uleb128 0x49
 4108 014b 13       		.uleb128 0x13
 4109 014c 11       		.uleb128 0x11
 4110 014d 01       		.uleb128 0x1
 4111 014e 12       		.uleb128 0x12
 4112 014f 06       		.uleb128 0x6
 4113 0150 40       		.uleb128 0x40
 4114 0151 18       		.uleb128 0x18
 4115 0152 9742     		.uleb128 0x2117
 4116 0154 19       		.uleb128 0x19
 4117 0155 01       		.uleb128 0x1
 4118 0156 13       		.uleb128 0x13
 4119 0157 00       		.byte	0
 4120 0158 00       		.byte	0
 4121 0159 1B       		.uleb128 0x1b
 4122 015a 34       		.uleb128 0x34
 4123 015b 00       		.byte	0
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 167


 4124 015c 03       		.uleb128 0x3
 4125 015d 0E       		.uleb128 0xe
 4126 015e 3A       		.uleb128 0x3a
 4127 015f 0B       		.uleb128 0xb
 4128 0160 3B       		.uleb128 0x3b
 4129 0161 05       		.uleb128 0x5
 4130 0162 49       		.uleb128 0x49
 4131 0163 13       		.uleb128 0x13
 4132 0164 02       		.uleb128 0x2
 4133 0165 18       		.uleb128 0x18
 4134 0166 00       		.byte	0
 4135 0167 00       		.byte	0
 4136 0168 1C       		.uleb128 0x1c
 4137 0169 2E       		.uleb128 0x2e
 4138 016a 00       		.byte	0
 4139 016b 03       		.uleb128 0x3
 4140 016c 0E       		.uleb128 0xe
 4141 016d 3A       		.uleb128 0x3a
 4142 016e 0B       		.uleb128 0xb
 4143 016f 3B       		.uleb128 0x3b
 4144 0170 0B       		.uleb128 0xb
 4145 0171 27       		.uleb128 0x27
 4146 0172 19       		.uleb128 0x19
 4147 0173 11       		.uleb128 0x11
 4148 0174 01       		.uleb128 0x1
 4149 0175 12       		.uleb128 0x12
 4150 0176 06       		.uleb128 0x6
 4151 0177 40       		.uleb128 0x40
 4152 0178 18       		.uleb128 0x18
 4153 0179 9642     		.uleb128 0x2116
 4154 017b 19       		.uleb128 0x19
 4155 017c 00       		.byte	0
 4156 017d 00       		.byte	0
 4157 017e 1D       		.uleb128 0x1d
 4158 017f 2E       		.uleb128 0x2e
 4159 0180 01       		.byte	0x1
 4160 0181 03       		.uleb128 0x3
 4161 0182 0E       		.uleb128 0xe
 4162 0183 3A       		.uleb128 0x3a
 4163 0184 0B       		.uleb128 0xb
 4164 0185 3B       		.uleb128 0x3b
 4165 0186 0B       		.uleb128 0xb
 4166 0187 27       		.uleb128 0x27
 4167 0188 19       		.uleb128 0x19
 4168 0189 11       		.uleb128 0x11
 4169 018a 01       		.uleb128 0x1
 4170 018b 12       		.uleb128 0x12
 4171 018c 06       		.uleb128 0x6
 4172 018d 40       		.uleb128 0x40
 4173 018e 18       		.uleb128 0x18
 4174 018f 9642     		.uleb128 0x2116
 4175 0191 19       		.uleb128 0x19
 4176 0192 01       		.uleb128 0x1
 4177 0193 13       		.uleb128 0x13
 4178 0194 00       		.byte	0
 4179 0195 00       		.byte	0
 4180 0196 1E       		.uleb128 0x1e
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 168


 4181 0197 05       		.uleb128 0x5
 4182 0198 00       		.byte	0
 4183 0199 03       		.uleb128 0x3
 4184 019a 0E       		.uleb128 0xe
 4185 019b 3A       		.uleb128 0x3a
 4186 019c 0B       		.uleb128 0xb
 4187 019d 3B       		.uleb128 0x3b
 4188 019e 0B       		.uleb128 0xb
 4189 019f 49       		.uleb128 0x49
 4190 01a0 13       		.uleb128 0x13
 4191 01a1 02       		.uleb128 0x2
 4192 01a2 18       		.uleb128 0x18
 4193 01a3 00       		.byte	0
 4194 01a4 00       		.byte	0
 4195 01a5 1F       		.uleb128 0x1f
 4196 01a6 2E       		.uleb128 0x2e
 4197 01a7 00       		.byte	0
 4198 01a8 03       		.uleb128 0x3
 4199 01a9 0E       		.uleb128 0xe
 4200 01aa 3A       		.uleb128 0x3a
 4201 01ab 0B       		.uleb128 0xb
 4202 01ac 3B       		.uleb128 0x3b
 4203 01ad 05       		.uleb128 0x5
 4204 01ae 27       		.uleb128 0x27
 4205 01af 19       		.uleb128 0x19
 4206 01b0 11       		.uleb128 0x11
 4207 01b1 01       		.uleb128 0x1
 4208 01b2 12       		.uleb128 0x12
 4209 01b3 06       		.uleb128 0x6
 4210 01b4 40       		.uleb128 0x40
 4211 01b5 18       		.uleb128 0x18
 4212 01b6 9642     		.uleb128 0x2116
 4213 01b8 19       		.uleb128 0x19
 4214 01b9 00       		.byte	0
 4215 01ba 00       		.byte	0
 4216 01bb 20       		.uleb128 0x20
 4217 01bc 2E       		.uleb128 0x2e
 4218 01bd 00       		.byte	0
 4219 01be 3F       		.uleb128 0x3f
 4220 01bf 19       		.uleb128 0x19
 4221 01c0 03       		.uleb128 0x3
 4222 01c1 0E       		.uleb128 0xe
 4223 01c2 3A       		.uleb128 0x3a
 4224 01c3 0B       		.uleb128 0xb
 4225 01c4 3B       		.uleb128 0x3b
 4226 01c5 0B       		.uleb128 0xb
 4227 01c6 27       		.uleb128 0x27
 4228 01c7 19       		.uleb128 0x19
 4229 01c8 11       		.uleb128 0x11
 4230 01c9 01       		.uleb128 0x1
 4231 01ca 12       		.uleb128 0x12
 4232 01cb 06       		.uleb128 0x6
 4233 01cc 40       		.uleb128 0x40
 4234 01cd 18       		.uleb128 0x18
 4235 01ce 9642     		.uleb128 0x2116
 4236 01d0 19       		.uleb128 0x19
 4237 01d1 00       		.byte	0
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 169


 4238 01d2 00       		.byte	0
 4239 01d3 21       		.uleb128 0x21
 4240 01d4 2E       		.uleb128 0x2e
 4241 01d5 01       		.byte	0x1
 4242 01d6 3F       		.uleb128 0x3f
 4243 01d7 19       		.uleb128 0x19
 4244 01d8 03       		.uleb128 0x3
 4245 01d9 0E       		.uleb128 0xe
 4246 01da 3A       		.uleb128 0x3a
 4247 01db 0B       		.uleb128 0xb
 4248 01dc 3B       		.uleb128 0x3b
 4249 01dd 0B       		.uleb128 0xb
 4250 01de 27       		.uleb128 0x27
 4251 01df 19       		.uleb128 0x19
 4252 01e0 11       		.uleb128 0x11
 4253 01e1 01       		.uleb128 0x1
 4254 01e2 12       		.uleb128 0x12
 4255 01e3 06       		.uleb128 0x6
 4256 01e4 40       		.uleb128 0x40
 4257 01e5 18       		.uleb128 0x18
 4258 01e6 9642     		.uleb128 0x2116
 4259 01e8 19       		.uleb128 0x19
 4260 01e9 01       		.uleb128 0x1
 4261 01ea 13       		.uleb128 0x13
 4262 01eb 00       		.byte	0
 4263 01ec 00       		.byte	0
 4264 01ed 22       		.uleb128 0x22
 4265 01ee 34       		.uleb128 0x34
 4266 01ef 00       		.byte	0
 4267 01f0 03       		.uleb128 0x3
 4268 01f1 0E       		.uleb128 0xe
 4269 01f2 3A       		.uleb128 0x3a
 4270 01f3 0B       		.uleb128 0xb
 4271 01f4 3B       		.uleb128 0x3b
 4272 01f5 0B       		.uleb128 0xb
 4273 01f6 49       		.uleb128 0x49
 4274 01f7 13       		.uleb128 0x13
 4275 01f8 02       		.uleb128 0x2
 4276 01f9 18       		.uleb128 0x18
 4277 01fa 00       		.byte	0
 4278 01fb 00       		.byte	0
 4279 01fc 23       		.uleb128 0x23
 4280 01fd 2E       		.uleb128 0x2e
 4281 01fe 01       		.byte	0x1
 4282 01ff 3F       		.uleb128 0x3f
 4283 0200 19       		.uleb128 0x19
 4284 0201 03       		.uleb128 0x3
 4285 0202 0E       		.uleb128 0xe
 4286 0203 3A       		.uleb128 0x3a
 4287 0204 0B       		.uleb128 0xb
 4288 0205 3B       		.uleb128 0x3b
 4289 0206 0B       		.uleb128 0xb
 4290 0207 27       		.uleb128 0x27
 4291 0208 19       		.uleb128 0x19
 4292 0209 11       		.uleb128 0x11
 4293 020a 01       		.uleb128 0x1
 4294 020b 12       		.uleb128 0x12
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 170


 4295 020c 06       		.uleb128 0x6
 4296 020d 40       		.uleb128 0x40
 4297 020e 18       		.uleb128 0x18
 4298 020f 9742     		.uleb128 0x2117
 4299 0211 19       		.uleb128 0x19
 4300 0212 01       		.uleb128 0x1
 4301 0213 13       		.uleb128 0x13
 4302 0214 00       		.byte	0
 4303 0215 00       		.byte	0
 4304 0216 24       		.uleb128 0x24
 4305 0217 2E       		.uleb128 0x2e
 4306 0218 00       		.byte	0
 4307 0219 3F       		.uleb128 0x3f
 4308 021a 19       		.uleb128 0x19
 4309 021b 03       		.uleb128 0x3
 4310 021c 0E       		.uleb128 0xe
 4311 021d 3A       		.uleb128 0x3a
 4312 021e 0B       		.uleb128 0xb
 4313 021f 3B       		.uleb128 0x3b
 4314 0220 05       		.uleb128 0x5
 4315 0221 27       		.uleb128 0x27
 4316 0222 19       		.uleb128 0x19
 4317 0223 11       		.uleb128 0x11
 4318 0224 01       		.uleb128 0x1
 4319 0225 12       		.uleb128 0x12
 4320 0226 06       		.uleb128 0x6
 4321 0227 40       		.uleb128 0x40
 4322 0228 18       		.uleb128 0x18
 4323 0229 9742     		.uleb128 0x2117
 4324 022b 19       		.uleb128 0x19
 4325 022c 00       		.byte	0
 4326 022d 00       		.byte	0
 4327 022e 25       		.uleb128 0x25
 4328 022f 2E       		.uleb128 0x2e
 4329 0230 01       		.byte	0x1
 4330 0231 3F       		.uleb128 0x3f
 4331 0232 19       		.uleb128 0x19
 4332 0233 03       		.uleb128 0x3
 4333 0234 0E       		.uleb128 0xe
 4334 0235 3A       		.uleb128 0x3a
 4335 0236 0B       		.uleb128 0xb
 4336 0237 3B       		.uleb128 0x3b
 4337 0238 05       		.uleb128 0x5
 4338 0239 27       		.uleb128 0x27
 4339 023a 19       		.uleb128 0x19
 4340 023b 11       		.uleb128 0x11
 4341 023c 01       		.uleb128 0x1
 4342 023d 12       		.uleb128 0x12
 4343 023e 06       		.uleb128 0x6
 4344 023f 40       		.uleb128 0x40
 4345 0240 18       		.uleb128 0x18
 4346 0241 9642     		.uleb128 0x2116
 4347 0243 19       		.uleb128 0x19
 4348 0244 01       		.uleb128 0x1
 4349 0245 13       		.uleb128 0x13
 4350 0246 00       		.byte	0
 4351 0247 00       		.byte	0
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 171


 4352 0248 26       		.uleb128 0x26
 4353 0249 2E       		.uleb128 0x2e
 4354 024a 01       		.byte	0x1
 4355 024b 3F       		.uleb128 0x3f
 4356 024c 19       		.uleb128 0x19
 4357 024d 03       		.uleb128 0x3
 4358 024e 0E       		.uleb128 0xe
 4359 024f 3A       		.uleb128 0x3a
 4360 0250 0B       		.uleb128 0xb
 4361 0251 3B       		.uleb128 0x3b
 4362 0252 05       		.uleb128 0x5
 4363 0253 27       		.uleb128 0x27
 4364 0254 19       		.uleb128 0x19
 4365 0255 49       		.uleb128 0x49
 4366 0256 13       		.uleb128 0x13
 4367 0257 11       		.uleb128 0x11
 4368 0258 01       		.uleb128 0x1
 4369 0259 12       		.uleb128 0x12
 4370 025a 06       		.uleb128 0x6
 4371 025b 40       		.uleb128 0x40
 4372 025c 18       		.uleb128 0x18
 4373 025d 9642     		.uleb128 0x2116
 4374 025f 19       		.uleb128 0x19
 4375 0260 01       		.uleb128 0x1
 4376 0261 13       		.uleb128 0x13
 4377 0262 00       		.byte	0
 4378 0263 00       		.byte	0
 4379 0264 27       		.uleb128 0x27
 4380 0265 34       		.uleb128 0x34
 4381 0266 00       		.byte	0
 4382 0267 03       		.uleb128 0x3
 4383 0268 0E       		.uleb128 0xe
 4384 0269 3A       		.uleb128 0x3a
 4385 026a 0B       		.uleb128 0xb
 4386 026b 3B       		.uleb128 0x3b
 4387 026c 0B       		.uleb128 0xb
 4388 026d 49       		.uleb128 0x49
 4389 026e 13       		.uleb128 0x13
 4390 026f 3F       		.uleb128 0x3f
 4391 0270 19       		.uleb128 0x19
 4392 0271 3C       		.uleb128 0x3c
 4393 0272 19       		.uleb128 0x19
 4394 0273 00       		.byte	0
 4395 0274 00       		.byte	0
 4396 0275 28       		.uleb128 0x28
 4397 0276 34       		.uleb128 0x34
 4398 0277 00       		.byte	0
 4399 0278 03       		.uleb128 0x3
 4400 0279 0E       		.uleb128 0xe
 4401 027a 3A       		.uleb128 0x3a
 4402 027b 0B       		.uleb128 0xb
 4403 027c 3B       		.uleb128 0x3b
 4404 027d 0B       		.uleb128 0xb
 4405 027e 49       		.uleb128 0x49
 4406 027f 13       		.uleb128 0x13
 4407 0280 3F       		.uleb128 0x3f
 4408 0281 19       		.uleb128 0x19
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 172


 4409 0282 02       		.uleb128 0x2
 4410 0283 18       		.uleb128 0x18
 4411 0284 00       		.byte	0
 4412 0285 00       		.byte	0
 4413 0286 29       		.uleb128 0x29
 4414 0287 34       		.uleb128 0x34
 4415 0288 00       		.byte	0
 4416 0289 03       		.uleb128 0x3
 4417 028a 0E       		.uleb128 0xe
 4418 028b 3A       		.uleb128 0x3a
 4419 028c 0B       		.uleb128 0xb
 4420 028d 3B       		.uleb128 0x3b
 4421 028e 05       		.uleb128 0x5
 4422 028f 49       		.uleb128 0x49
 4423 0290 13       		.uleb128 0x13
 4424 0291 3F       		.uleb128 0x3f
 4425 0292 19       		.uleb128 0x19
 4426 0293 3C       		.uleb128 0x3c
 4427 0294 19       		.uleb128 0x19
 4428 0295 00       		.byte	0
 4429 0296 00       		.byte	0
 4430 0297 00       		.byte	0
 4431              		.section	.debug_aranges,"",%progbits
 4432 0000 CC000000 		.4byte	0xcc
 4433 0004 0200     		.2byte	0x2
 4434 0006 00000000 		.4byte	.Ldebug_info0
 4435 000a 04       		.byte	0x4
 4436 000b 00       		.byte	0
 4437 000c 0000     		.2byte	0
 4438 000e 0000     		.2byte	0
 4439 0010 00000000 		.4byte	.LFB79
 4440 0014 1C000000 		.4byte	.LFE79-.LFB79
 4441 0018 00000000 		.4byte	.LFB81
 4442 001c 38000000 		.4byte	.LFE81-.LFB81
 4443 0020 00000000 		.4byte	.LFB86
 4444 0024 38000000 		.4byte	.LFE86-.LFB86
 4445 0028 00000000 		.4byte	.LFB134
 4446 002c F0000000 		.4byte	.LFE134-.LFB134
 4447 0030 00000000 		.4byte	.LFB140
 4448 0034 E4000000 		.4byte	.LFE140-.LFB140
 4449 0038 00000000 		.4byte	.LFB141
 4450 003c AC000000 		.4byte	.LFE141-.LFB141
 4451 0040 00000000 		.4byte	.LFB162
 4452 0044 12000000 		.4byte	.LFE162-.LFB162
 4453 0048 00000000 		.4byte	.LFB163
 4454 004c 12000000 		.4byte	.LFE163-.LFB163
 4455 0050 00000000 		.4byte	.LFB164
 4456 0054 1C000000 		.4byte	.LFE164-.LFB164
 4457 0058 00000000 		.4byte	.LFB168
 4458 005c 18000000 		.4byte	.LFE168-.LFB168
 4459 0060 00000000 		.4byte	.LFB169
 4460 0064 18000000 		.4byte	.LFE169-.LFB169
 4461 0068 00000000 		.4byte	.LFB186
 4462 006c 34000000 		.4byte	.LFE186-.LFB186
 4463 0070 00000000 		.4byte	.LFB187
 4464 0074 14000000 		.4byte	.LFE187-.LFB187
 4465 0078 00000000 		.4byte	.LFB188
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 173


 4466 007c 4C000000 		.4byte	.LFE188-.LFB188
 4467 0080 00000000 		.4byte	.LFB189
 4468 0084 78000000 		.4byte	.LFE189-.LFB189
 4469 0088 00000000 		.4byte	.LFB190
 4470 008c 30000000 		.4byte	.LFE190-.LFB190
 4471 0090 00000000 		.4byte	.LFB191
 4472 0094 44000000 		.4byte	.LFE191-.LFB191
 4473 0098 00000000 		.4byte	.LFB192
 4474 009c 0A000000 		.4byte	.LFE192-.LFB192
 4475 00a0 00000000 		.4byte	.LFB193
 4476 00a4 0A000000 		.4byte	.LFE193-.LFB193
 4477 00a8 00000000 		.4byte	.LFB194
 4478 00ac 2C000000 		.4byte	.LFE194-.LFB194
 4479 00b0 00000000 		.4byte	.LFB195
 4480 00b4 50000000 		.4byte	.LFE195-.LFB195
 4481 00b8 00000000 		.4byte	.LFB196
 4482 00bc 3C000000 		.4byte	.LFE196-.LFB196
 4483 00c0 00000000 		.4byte	.LFB197
 4484 00c4 4C000000 		.4byte	.LFE197-.LFB197
 4485 00c8 00000000 		.4byte	0
 4486 00cc 00000000 		.4byte	0
 4487              		.section	.debug_ranges,"",%progbits
 4488              	.Ldebug_ranges0:
 4489 0000 00000000 		.4byte	.LFB79
 4490 0004 1C000000 		.4byte	.LFE79
 4491 0008 00000000 		.4byte	.LFB81
 4492 000c 38000000 		.4byte	.LFE81
 4493 0010 00000000 		.4byte	.LFB86
 4494 0014 38000000 		.4byte	.LFE86
 4495 0018 00000000 		.4byte	.LFB134
 4496 001c F0000000 		.4byte	.LFE134
 4497 0020 00000000 		.4byte	.LFB140
 4498 0024 E4000000 		.4byte	.LFE140
 4499 0028 00000000 		.4byte	.LFB141
 4500 002c AC000000 		.4byte	.LFE141
 4501 0030 00000000 		.4byte	.LFB162
 4502 0034 12000000 		.4byte	.LFE162
 4503 0038 00000000 		.4byte	.LFB163
 4504 003c 12000000 		.4byte	.LFE163
 4505 0040 00000000 		.4byte	.LFB164
 4506 0044 1C000000 		.4byte	.LFE164
 4507 0048 00000000 		.4byte	.LFB168
 4508 004c 18000000 		.4byte	.LFE168
 4509 0050 00000000 		.4byte	.LFB169
 4510 0054 18000000 		.4byte	.LFE169
 4511 0058 00000000 		.4byte	.LFB186
 4512 005c 34000000 		.4byte	.LFE186
 4513 0060 00000000 		.4byte	.LFB187
 4514 0064 14000000 		.4byte	.LFE187
 4515 0068 00000000 		.4byte	.LFB188
 4516 006c 4C000000 		.4byte	.LFE188
 4517 0070 00000000 		.4byte	.LFB189
 4518 0074 78000000 		.4byte	.LFE189
 4519 0078 00000000 		.4byte	.LFB190
 4520 007c 30000000 		.4byte	.LFE190
 4521 0080 00000000 		.4byte	.LFB191
 4522 0084 44000000 		.4byte	.LFE191
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 174


 4523 0088 00000000 		.4byte	.LFB192
 4524 008c 0A000000 		.4byte	.LFE192
 4525 0090 00000000 		.4byte	.LFB193
 4526 0094 0A000000 		.4byte	.LFE193
 4527 0098 00000000 		.4byte	.LFB194
 4528 009c 2C000000 		.4byte	.LFE194
 4529 00a0 00000000 		.4byte	.LFB195
 4530 00a4 50000000 		.4byte	.LFE195
 4531 00a8 00000000 		.4byte	.LFB196
 4532 00ac 3C000000 		.4byte	.LFE196
 4533 00b0 00000000 		.4byte	.LFB197
 4534 00b4 4C000000 		.4byte	.LFE197
 4535 00b8 00000000 		.4byte	0
 4536 00bc 00000000 		.4byte	0
 4537              		.section	.debug_line,"",%progbits
 4538              	.Ldebug_line0:
 4539 0000 6A050000 		.section	.debug_str,"MS",%progbits,1
 4539      0200F502 
 4539      00000201 
 4539      FB0E0D00 
 4539      01010101 
 4540              	.LASF136:
 4541 0000 666C6173 		.ascii	"flashCtlMainWs1Freq\000"
 4541      6843746C 
 4541      4D61696E 
 4541      57733146 
 4541      72657100 
 4542              	.LASF25:
 4543 0014 50455249 		.ascii	"PERI_TR_GR_V1_Type\000"
 4543      5F54525F 
 4543      47525F56 
 4543      315F5479 
 4543      706500
 4544              	.LASF19:
 4545 0027 52455345 		.ascii	"RESERVED\000"
 4545      52564544 
 4545      00
 4546              	.LASF71:
 4547 0030 52414E47 		.ascii	"RANGE_INTR_MASKED\000"
 4547      455F494E 
 4547      54525F4D 
 4547      41534B45 
 4547      4400
 4548              	.LASF284:
 4549 0042 4144435F 		.ascii	"ADC_1_initVar\000"
 4549      315F696E 
 4549      69745661 
 4549      7200
 4550              	.LASF56:
 4551 0050 4348414E 		.ascii	"CHAN_WORK_UPDATED\000"
 4551      5F574F52 
 4551      4B5F5550 
 4551      44415445 
 4551      4400
 4552              	.LASF178:
 4553 0062 6970634C 		.ascii	"ipcLockStatusOffset\000"
 4553      6F636B53 
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 175


 4553      74617475 
 4553      734F6666 
 4553      73657400 
 4554              	.LASF276:
 4555 0076 4144435F 		.ascii	"ADC_1_SetChanMask\000"
 4555      315F5365 
 4555      74436861 
 4555      6E4D6173 
 4555      6B00
 4556              	.LASF254:
 4557 0088 43795F53 		.ascii	"Cy_SysClk_PeriphDisableDivider\000"
 4557      7973436C 
 4557      6B5F5065 
 4557      72697068 
 4557      44697361 
 4558              	.LASF283:
 4559 00a7 63795F64 		.ascii	"cy_device\000"
 4559      65766963 
 4559      6500
 4560              	.LASF163:
 4561 00b1 63707573 		.ascii	"cpussCm0ClockCtlOffset\000"
 4561      73436D30 
 4561      436C6F63 
 4561      6B43746C 
 4561      4F666673 
 4562              	.LASF122:
 4563 00c8 70657269 		.ascii	"periClockNr\000"
 4563      436C6F63 
 4563      6B4E7200 
 4564              	.LASF261:
 4565 00d4 4144435F 		.ascii	"ADC_1_StartEx\000"
 4565      315F5374 
 4565      61727445 
 4565      7800
 4566              	.LASF33:
 4567 00e2 4449565F 		.ascii	"DIV_8_CTL\000"
 4567      385F4354 
 4567      4C00
 4568              	.LASF256:
 4569 00ec 4144435F 		.ascii	"ADC_1_intSarClock_Disable\000"
 4569      315F696E 
 4569      74536172 
 4569      436C6F63 
 4569      6B5F4469 
 4570              	.LASF96:
 4571 0106 75646242 		.ascii	"udbBase\000"
 4571      61736500 
 4572              	.LASF232:
 4573 010e 43595F53 		.ascii	"CY_SYSCLK_DIV_8_BIT\000"
 4573      5953434C 
 4573      4B5F4449 
 4573      565F385F 
 4573      42495400 
 4574              	.LASF51:
 4575 0122 4348414E 		.ascii	"CHAN_EN\000"
 4575      5F454E00 
 4576              	.LASF95:
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 176


 4577 012a 70657269 		.ascii	"periBase\000"
 4577      42617365 
 4577      00
 4578              	.LASF171:
 4579 0133 63707573 		.ascii	"cpussCm0NmiCtlOffset\000"
 4579      73436D30 
 4579      4E6D6943 
 4579      746C4F66 
 4579      66736574 
 4580              	.LASF141:
 4581 0148 64774368 		.ascii	"dwChSize\000"
 4581      53697A65 
 4581      00
 4582              	.LASF289:
 4583 0151 47656E65 		.ascii	"Generated_Source\\PSoC6\\ADC_1.c\000"
 4583      72617465 
 4583      645F536F 
 4583      75726365 
 4583      5C50536F 
 4584              	.LASF229:
 4585 0170 43595F53 		.ascii	"CY_SYSCLK_TIMEOUT\000"
 4585      5953434C 
 4585      4B5F5449 
 4585      4D454F55 
 4585      5400
 4586              	.LASF12:
 4587 0182 756E7369 		.ascii	"unsigned int\000"
 4587      676E6564 
 4587      20696E74 
 4587      00
 4588              	.LASF281:
 4589 018f 4144435F 		.ascii	"ADC_1_Init\000"
 4589      315F496E 
 4589      697400
 4590              	.LASF266:
 4591 019a 72657374 		.ascii	"restart\000"
 4591      61727400 
 4592              	.LASF72:
 4593 01a2 494E5452 		.ascii	"INTR_CAUSE\000"
 4593      5F434155 
 4593      534500
 4594              	.LASF123:
 4595 01ad 736D6966 		.ascii	"smifDeviceNr\000"
 4595      44657669 
 4595      63654E72 
 4595      00
 4596              	.LASF204:
 4597 01ba 43595F53 		.ascii	"CY_SAR_RANGE_COND_OUTSIDE\000"
 4597      41525F52 
 4597      414E4745 
 4597      5F434F4E 
 4597      445F4F55 
 4598              	.LASF153:
 4599 01d4 70657269 		.ascii	"periDivCmdPaTypeSelPos\000"
 4599      44697643 
 4599      6D645061 
 4599      54797065 
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 177


 4599      53656C50 
 4600              	.LASF249:
 4601 01eb 64697669 		.ascii	"dividerNum\000"
 4601      6465724E 
 4601      756D00
 4602              	.LASF115:
 4603 01f6 63707573 		.ascii	"cpussFlashPaSize\000"
 4603      73466C61 
 4603      73685061 
 4603      53697A65 
 4603      00
 4604              	.LASF227:
 4605 0207 43595F53 		.ascii	"CY_SYSCLK_SUCCESS\000"
 4605      5953434C 
 4605      4B5F5355 
 4605      43434553 
 4605      5300
 4606              	.LASF58:
 4607 0219 4348414E 		.ascii	"CHAN_WORK_NEWVALUE\000"
 4607      5F574F52 
 4607      4B5F4E45 
 4607      5756414C 
 4607      554500
 4608              	.LASF93:
 4609 022c 63707573 		.ascii	"cpussBase\000"
 4609      73426173 
 4609      6500
 4610              	.LASF35:
 4611 0236 4449565F 		.ascii	"DIV_16_5_CTL\000"
 4611      31365F35 
 4611      5F43544C 
 4611      00
 4612              	.LASF291:
 4613 0243 4144435F 		.ascii	"ADC_1_IsEndConversion\000"
 4613      315F4973 
 4613      456E6443 
 4613      6F6E7665 
 4613      7273696F 
 4614              	.LASF41:
 4615 0259 5050555F 		.ascii	"PPU_PR\000"
 4615      505200
 4616              	.LASF117:
 4617 0260 63707573 		.ascii	"cpussFmIrq\000"
 4617      73466D49 
 4617      727100
 4618              	.LASF239:
 4619 026b 6877436F 		.ascii	"hwConfigStc\000"
 4619      6E666967 
 4619      53746300 
 4620              	.LASF118:
 4621 0277 63707573 		.ascii	"cpussNotConnectedIrq\000"
 4621      734E6F74 
 4621      436F6E6E 
 4621      65637465 
 4621      64497271 
 4622              	.LASF268:
 4623 028c 4144435F 		.ascii	"ADC_1_StartConvert\000"
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 178


 4623      315F5374 
 4623      61727443 
 4623      6F6E7665 
 4623      727400
 4624              	.LASF0:
 4625 029f 73686F72 		.ascii	"short int\000"
 4625      7420696E 
 4625      7400
 4626              	.LASF64:
 4627 02a9 53415455 		.ascii	"SATURATE_INTR\000"
 4627      52415445 
 4627      5F494E54 
 4627      5200
 4628              	.LASF47:
 4629 02b7 53414D50 		.ascii	"SAMPLE_TIME01\000"
 4629      4C455F54 
 4629      494D4530 
 4629      3100
 4630              	.LASF195:
 4631 02c5 43595F53 		.ascii	"CY_SAR_WAIT_FOR_RESULT\000"
 4631      41525F57 
 4631      4149545F 
 4631      464F525F 
 4631      52455355 
 4632              	.LASF76:
 4633 02dc 494E4A5F 		.ascii	"INJ_RESULT\000"
 4633      52455355 
 4633      4C5400
 4634              	.LASF152:
 4635 02e7 70657269 		.ascii	"periDivCmdPaDivSelPos\000"
 4635      44697643 
 4635      6D645061 
 4635      44697653 
 4635      656C506F 
 4636              	.LASF61:
 4637 02fd 494E5452 		.ascii	"INTR_SET\000"
 4637      5F534554 
 4637      00
 4638              	.LASF262:
 4639 0306 4144435F 		.ascii	"ADC_1_InitConfig\000"
 4639      315F496E 
 4639      6974436F 
 4639      6E666967 
 4639      00
 4640              	.LASF270:
 4641 0317 6D6F6465 		.ascii	"mode\000"
 4641      00
 4642              	.LASF219:
 4643 031c 73617449 		.ascii	"satIntrMask\000"
 4643      6E74724D 
 4643      61736B00 
 4644              	.LASF193:
 4645 0328 63795F65 		.ascii	"cy_en_sar_start_convert_sel_t\000"
 4645      6E5F7361 
 4645      725F7374 
 4645      6172745F 
 4645      636F6E76 
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 179


 4646              	.LASF149:
 4647 0346 70657269 		.ascii	"periTrGrSize\000"
 4647      54724772 
 4647      53697A65 
 4647      00
 4648              	.LASF120:
 4649 0353 73727373 		.ascii	"srssNumPll\000"
 4649      4E756D50 
 4649      6C6C00
 4650              	.LASF177:
 4651 035e 69706353 		.ascii	"ipcStructSize\000"
 4651      74727563 
 4651      7453697A 
 4651      6500
 4652              	.LASF269:
 4653 036c 4144435F 		.ascii	"ADC_1_SetConvertMode\000"
 4653      315F5365 
 4653      74436F6E 
 4653      76657274 
 4653      4D6F6465 
 4654              	.LASF111:
 4655 0381 70726F74 		.ascii	"protVersion\000"
 4655      56657273 
 4655      696F6E00 
 4656              	.LASF201:
 4657 038d 43595F53 		.ascii	"CY_SAR_RANGE_COND_BELOW\000"
 4657      41525F52 
 4657      414E4745 
 4657      5F434F4E 
 4657      445F4245 
 4658              	.LASF151:
 4659 03a5 70657269 		.ascii	"periDivCmdTypeSelPos\000"
 4659      44697643 
 4659      6D645479 
 4659      70655365 
 4659      6C506F73 
 4660              	.LASF168:
 4661 03ba 63707573 		.ascii	"cpussTrimRamCtlOffset\000"
 4661      73547269 
 4661      6D52616D 
 4661      43746C4F 
 4661      66667365 
 4662              	.LASF179:
 4663 03d0 63795F73 		.ascii	"cy_stc_device_t\000"
 4663      74635F64 
 4663      65766963 
 4663      655F7400 
 4664              	.LASF30:
 4665 03e0 50455249 		.ascii	"PERI_PPU_PR_V1_Type\000"
 4665      5F505055 
 4665      5F50525F 
 4665      56315F54 
 4665      79706500 
 4666              	.LASF16:
 4667 03f4 75696E74 		.ascii	"uint32_t\000"
 4667      33325F74 
 4667      00
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 180


 4668              	.LASF161:
 4669 03fd 6770696F 		.ascii	"gpioPrtCfgOutOffset\000"
 4669      50727443 
 4669      66674F75 
 4669      744F6666 
 4669      73657400 
 4670              	.LASF60:
 4671 0411 494E5452 		.ascii	"INTR\000"
 4671      00
 4672              	.LASF183:
 4673 0416 666C6F61 		.ascii	"float\000"
 4673      7400
 4674              	.LASF104:
 4675 041c 63727970 		.ascii	"cryptoVersion\000"
 4675      746F5665 
 4675      7273696F 
 4675      6E00
 4676              	.LASF133:
 4677 042a 666C6173 		.ascii	"flashProgramDelay\000"
 4677      6850726F 
 4677      6772616D 
 4677      44656C61 
 4677      7900
 4678              	.LASF245:
 4679 043c 62617365 		.ascii	"base\000"
 4679      00
 4680              	.LASF238:
 4681 0441 6E756D43 		.ascii	"numChannels\000"
 4681      68616E6E 
 4681      656C7300 
 4682              	.LASF20:
 4683 044d 534C5F43 		.ascii	"SL_CTL\000"
 4683      544C00
 4684              	.LASF94:
 4685 0454 666C6173 		.ascii	"flashcBase\000"
 4685      68634261 
 4685      736500
 4686              	.LASF14:
 4687 045f 696E7431 		.ascii	"int16_t\000"
 4687      365F7400 
 4688              	.LASF160:
 4689 0467 6770696F 		.ascii	"gpioPrtCfgInOffset\000"
 4689      50727443 
 4689      6667496E 
 4689      4F666673 
 4689      657400
 4690              	.LASF280:
 4691 047a 72657375 		.ascii	"result\000"
 4691      6C7400
 4692              	.LASF11:
 4693 0481 6C6F6E67 		.ascii	"long long unsigned int\000"
 4693      206C6F6E 
 4693      6720756E 
 4693      7369676E 
 4693      65642069 
 4694              	.LASF157:
 4695 0498 70657269 		.ascii	"periDiv24_5CtlOffset\000"
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 181


 4695      44697632 
 4695      345F3543 
 4695      746C4F66 
 4695      66736574 
 4696              	.LASF162:
 4697 04ad 6770696F 		.ascii	"gpioPrtCfgSioOffset\000"
 4697      50727443 
 4697      66675369 
 4697      6F4F6666 
 4697      73657400 
 4698              	.LASF77:
 4699 04c1 52455345 		.ascii	"RESERVED7\000"
 4699      52564544 
 4699      3700
 4700              	.LASF116:
 4701 04cb 63707573 		.ascii	"cpussIpc0Irq\000"
 4701      73497063 
 4701      30497271 
 4701      00
 4702              	.LASF48:
 4703 04d8 53414D50 		.ascii	"SAMPLE_TIME23\000"
 4703      4C455F54 
 4703      494D4532 
 4703      3300
 4704              	.LASF214:
 4705 04e6 72616E67 		.ascii	"rangeThres\000"
 4705      65546872 
 4705      657300
 4706              	.LASF5:
 4707 04f1 5F5F7569 		.ascii	"__uint16_t\000"
 4707      6E743136 
 4707      5F7400
 4708              	.LASF202:
 4709 04fc 43595F53 		.ascii	"CY_SAR_RANGE_COND_INSIDE\000"
 4709      41525F52 
 4709      414E4745 
 4709      5F434F4E 
 4709      445F494E 
 4710              	.LASF226:
 4711 0515 63795F73 		.ascii	"cy_stc_sar_config_t\000"
 4711      74635F73 
 4711      61725F63 
 4711      6F6E6669 
 4711      675F7400 
 4712              	.LASF210:
 4713 0529 6374726C 		.ascii	"ctrl\000"
 4713      00
 4714              	.LASF74:
 4715 052e 494E4A5F 		.ascii	"INJ_CHAN_CONFIG\000"
 4715      4348414E 
 4715      5F434F4E 
 4715      46494700 
 4716              	.LASF138:
 4717 053e 666C6173 		.ascii	"flashCtlMainWs3Freq\000"
 4717      6843746C 
 4717      4D61696E 
 4717      57733346 
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 182


 4717      72657100 
 4718              	.LASF242:
 4719 0552 4144435F 		.ascii	"ADC_1_CONFIG_STRUCT\000"
 4719      315F434F 
 4719      4E464947 
 4719      5F535452 
 4719      55435400 
 4720              	.LASF194:
 4721 0566 43595F53 		.ascii	"CY_SAR_RETURN_STATUS\000"
 4721      41525F52 
 4721      45545552 
 4721      4E5F5354 
 4721      41545553 
 4722              	.LASF38:
 4723 057b 54525F43 		.ascii	"TR_CMD\000"
 4723      4D4400
 4724              	.LASF91:
 4725 0582 5341525F 		.ascii	"SAR_Type\000"
 4725      54797065 
 4725      00
 4726              	.LASF231:
 4727 058b 63795F65 		.ascii	"cy_en_sysclk_status_t\000"
 4727      6E5F7379 
 4727      73636C6B 
 4727      5F737461 
 4727      7475735F 
 4728              	.LASF257:
 4729 05a1 4144435F 		.ascii	"ADC_1_intSarClock_SetDivider\000"
 4729      315F696E 
 4729      74536172 
 4729      436C6F63 
 4729      6B5F5365 
 4730              	.LASF131:
 4731 05be 666C6173 		.ascii	"flashPipeRequired\000"
 4731      68506970 
 4731      65526571 
 4731      75697265 
 4731      6400
 4732              	.LASF70:
 4733 05d0 52414E47 		.ascii	"RANGE_INTR_MASK\000"
 4733      455F494E 
 4733      54525F4D 
 4733      41534B00 
 4734              	.LASF282:
 4735 05e0 636F6E66 		.ascii	"configNum\000"
 4735      69674E75 
 4735      6D00
 4736              	.LASF290:
 4737 05ea 443A5C4F 		.ascii	"D:\\OneDrive - UNSW\\Documents\\thesis\\VDAC_Saw_Ex"
 4737      6E654472 
 4737      69766520 
 4737      2D20554E 
 4737      53575C44 
 4738 0619 706F7274 		.ascii	"port.cydsn\000"
 4738      2E637964 
 4738      736E00
 4739              	.LASF267:
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 183


 4740 0624 4144435F 		.ascii	"ADC_1_Start\000"
 4740      315F5374 
 4740      61727400 
 4741              	.LASF225:
 4742 0630 5F426F6F 		.ascii	"_Bool\000"
 4742      6C00
 4743              	.LASF50:
 4744 0636 52414E47 		.ascii	"RANGE_COND\000"
 4744      455F434F 
 4744      4E4400
 4745              	.LASF135:
 4746 0641 666C6173 		.ascii	"flashCtlMainWs0Freq\000"
 4746      6843746C 
 4746      4D61696E 
 4746      57733046 
 4746      72657100 
 4747              	.LASF36:
 4748 0655 4449565F 		.ascii	"DIV_24_5_CTL\000"
 4748      32345F35 
 4748      5F43544C 
 4748      00
 4749              	.LASF145:
 4750 0662 64775374 		.ascii	"dwStatusChIdxMsk\000"
 4750      61747573 
 4750      43684964 
 4750      784D736B 
 4750      00
 4751              	.LASF207:
 4752 0673 43595F53 		.ascii	"CY_SAR_INTR_EOS_MASK\000"
 4752      41525F49 
 4752      4E54525F 
 4752      454F535F 
 4752      4D41534B 
 4753              	.LASF99:
 4754 0688 6770696F 		.ascii	"gpioBase\000"
 4754      42617365 
 4754      00
 4755              	.LASF259:
 4756 0691 4144435F 		.ascii	"ADC_1_Stop\000"
 4756      315F5374 
 4756      6F7000
 4757              	.LASF277:
 4758 069c 6368616E 		.ascii	"chanCount\000"
 4758      436F756E 
 4758      7400
 4759              	.LASF34:
 4760 06a6 4449565F 		.ascii	"DIV_16_CTL\000"
 4760      31365F43 
 4760      544C00
 4761              	.LASF18:
 4762 06b1 434C4F43 		.ascii	"CLOCK_CTL\000"
 4762      4B5F4354 
 4762      4C00
 4763              	.LASF246:
 4764 06bb 656E6162 		.ascii	"enableMask\000"
 4764      6C654D61 
 4764      736B00
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 184


 4765              	.LASF170:
 4766 06c6 63707573 		.ascii	"cpussSysTickCtlOffset\000"
 4766      73537973 
 4766      5469636B 
 4766      43746C4F 
 4766      66667365 
 4767              	.LASF126:
 4768 06dc 75646250 		.ascii	"udbPresent\000"
 4768      72657365 
 4768      6E7400
 4769              	.LASF144:
 4770 06e7 64775374 		.ascii	"dwStatusChIdxPos\000"
 4770      61747573 
 4770      43684964 
 4770      78506F73 
 4770      00
 4771              	.LASF90:
 4772 06f8 5341525F 		.ascii	"SAR_V1_Type\000"
 4772      56315F54 
 4772      79706500 
 4773              	.LASF224:
 4774 0704 76726566 		.ascii	"vrefMvValue\000"
 4774      4D765661 
 4774      6C756500 
 4775              	.LASF67:
 4776 0710 53415455 		.ascii	"SATURATE_INTR_MASKED\000"
 4776      52415445 
 4776      5F494E54 
 4776      525F4D41 
 4776      534B4544 
 4777              	.LASF24:
 4778 0725 54525F4F 		.ascii	"TR_OUT_CTL\000"
 4778      55545F43 
 4778      544C00
 4779              	.LASF65:
 4780 0730 53415455 		.ascii	"SATURATE_INTR_SET\000"
 4780      52415445 
 4780      5F494E54 
 4780      525F5345 
 4780      5400
 4781              	.LASF40:
 4782 0742 54525F47 		.ascii	"TR_GR\000"
 4782      5200
 4783              	.LASF203:
 4784 0748 43595F53 		.ascii	"CY_SAR_RANGE_COND_ABOVE\000"
 4784      41525F52 
 4784      414E4745 
 4784      5F434F4E 
 4784      445F4142 
 4785              	.LASF182:
 4786 0760 63686172 		.ascii	"char\000"
 4786      00
 4787              	.LASF271:
 4788 0765 4144435F 		.ascii	"ADC_1_IRQ_Enable\000"
 4788      315F4952 
 4788      515F456E 
 4788      61626C65 
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 185


 4788      00
 4789              	.LASF216:
 4790 0776 6368616E 		.ascii	"chanEn\000"
 4790      456E00
 4791              	.LASF156:
 4792 077d 70657269 		.ascii	"periDiv16_5CtlOffset\000"
 4792      44697631 
 4792      365F3543 
 4792      746C4F66 
 4792      66736574 
 4793              	.LASF248:
 4794 0792 64697669 		.ascii	"dividerType\000"
 4794      64657254 
 4794      79706500 
 4795              	.LASF127:
 4796 079e 73797350 		.ascii	"sysPmSimoPresent\000"
 4796      6D53696D 
 4796      6F507265 
 4796      73656E74 
 4796      00
 4797              	.LASF129:
 4798 07af 63727970 		.ascii	"cryptoMemSize\000"
 4798      746F4D65 
 4798      6D53697A 
 4798      6500
 4799              	.LASF59:
 4800 07bd 4348414E 		.ascii	"CHAN_RESULT_NEWVALUE\000"
 4800      5F524553 
 4800      554C545F 
 4800      4E455756 
 4800      414C5545 
 4801              	.LASF79:
 4802 07d2 4156475F 		.ascii	"AVG_STAT\000"
 4802      53544154 
 4802      00
 4803              	.LASF250:
 4804 07db 64697669 		.ascii	"dividerValue\000"
 4804      64657256 
 4804      616C7565 
 4804      00
 4805              	.LASF13:
 4806 07e8 75696E74 		.ascii	"uint8_t\000"
 4806      385F7400 
 4807              	.LASF190:
 4808 07f0 63795F65 		.ascii	"cy_en_sar_status_t\000"
 4808      6E5F7361 
 4808      725F7374 
 4808      61747573 
 4808      5F7400
 4809              	.LASF150:
 4810 0803 70657269 		.ascii	"periDivCmdDivSelMsk\000"
 4810      44697643 
 4810      6D644469 
 4810      7653656C 
 4810      4D736B00 
 4811              	.LASF186:
 4812 0817 43595F53 		.ascii	"CY_SAR_SUCCESS\000"
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 186


 4812      41525F53 
 4812      55434345 
 4812      535300
 4813              	.LASF69:
 4814 0826 52414E47 		.ascii	"RANGE_INTR_SET\000"
 4814      455F494E 
 4814      54525F53 
 4814      455400
 4815              	.LASF222:
 4816 0835 6D757853 		.ascii	"muxSwitchSqCtrl\000"
 4816      77697463 
 4816      68537143 
 4816      74726C00 
 4817              	.LASF215:
 4818 0845 72616E67 		.ascii	"rangeCond\000"
 4818      65436F6E 
 4818      6400
 4819              	.LASF174:
 4820 084f 63707573 		.ascii	"cpussRam0Ctl0\000"
 4820      7352616D 
 4820      3043746C 
 4820      3000
 4821              	.LASF10:
 4822 085d 6C6F6E67 		.ascii	"long long int\000"
 4822      206C6F6E 
 4822      6720696E 
 4822      7400
 4823              	.LASF101:
 4824 086b 69706342 		.ascii	"ipcBase\000"
 4824      61736500 
 4825              	.LASF142:
 4826 0873 64774368 		.ascii	"dwChCtlPrioPos\000"
 4826      43746C50 
 4826      72696F50 
 4826      6F7300
 4827              	.LASF102:
 4828 0882 63727970 		.ascii	"cryptoBase\000"
 4828      746F4261 
 4828      736500
 4829              	.LASF208:
 4830 088d 43595F53 		.ascii	"CY_SAR_INTR_OVERFLOW_MASK\000"
 4830      41525F49 
 4830      4E54525F 
 4830      4F564552 
 4830      464C4F57 
 4831              	.LASF244:
 4832 08a7 43795F53 		.ascii	"Cy_SAR_SetChanMask\000"
 4832      41525F53 
 4832      65744368 
 4832      616E4D61 
 4832      736B00
 4833              	.LASF209:
 4834 08ba 43595F53 		.ascii	"CY_SAR_INTR_FW_COLLISION_MASK\000"
 4834      41525F49 
 4834      4E54525F 
 4834      46575F43 
 4834      4F4C4C49 
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 187


 4835              	.LASF132:
 4836 08d8 666C6173 		.ascii	"flashWriteDelay\000"
 4836      68577269 
 4836      74654465 
 4836      6C617900 
 4837              	.LASF43:
 4838 08e8 5050555F 		.ascii	"PPU_GR\000"
 4838      475200
 4839              	.LASF251:
 4840 08ef 43795F53 		.ascii	"Cy_SysClk_PeriphSetDivider\000"
 4840      7973436C 
 4840      6B5F5065 
 4840      72697068 
 4840      53657444 
 4841              	.LASF4:
 4842 090a 5F5F696E 		.ascii	"__int16_t\000"
 4842      7431365F 
 4842      7400
 4843              	.LASF98:
 4844 0914 6873696F 		.ascii	"hsiomBase\000"
 4844      6D426173 
 4844      6500
 4845              	.LASF187:
 4846 091e 43595F53 		.ascii	"CY_SAR_BAD_PARAM\000"
 4846      41525F42 
 4846      41445F50 
 4846      4152414D 
 4846      00
 4847              	.LASF55:
 4848 092f 4348414E 		.ascii	"CHAN_RESULT\000"
 4848      5F524553 
 4848      554C5400 
 4849              	.LASF175:
 4850 093b 63707573 		.ascii	"cpussRam1Ctl0\000"
 4850      7352616D 
 4850      3143746C 
 4850      3000
 4851              	.LASF148:
 4852 0949 70657269 		.ascii	"periTrGrOffset\000"
 4852      54724772 
 4852      4F666673 
 4852      657400
 4853              	.LASF68:
 4854 0958 52414E47 		.ascii	"RANGE_INTR\000"
 4854      455F494E 
 4854      545200
 4855              	.LASF114:
 4856 0963 63707573 		.ascii	"cpussDwChNr\000"
 4856      73447743 
 4856      684E7200 
 4857              	.LASF62:
 4858 096f 494E5452 		.ascii	"INTR_MASK\000"
 4858      5F4D4153 
 4858      4B00
 4859              	.LASF46:
 4860 0979 53414D50 		.ascii	"SAMPLE_CTRL\000"
 4860      4C455F43 
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 188


 4860      54524C00 
 4861              	.LASF260:
 4862 0985 75736572 		.ascii	"userIsr\000"
 4862      49737200 
 4863              	.LASF188:
 4864 098d 43595F53 		.ascii	"CY_SAR_TIMEOUT\000"
 4864      41525F54 
 4864      494D454F 
 4864      555400
 4865              	.LASF185:
 4866 099c 75696E74 		.ascii	"uint32\000"
 4866      333200
 4867              	.LASF112:
 4868 09a3 63707573 		.ascii	"cpussIpcNr\000"
 4868      73497063 
 4868      4E7200
 4869              	.LASF82:
 4870 09ae 4D55585F 		.ascii	"MUX_SWITCH_CLEAR0\000"
 4870      53574954 
 4870      43485F43 
 4870      4C454152 
 4870      3000
 4871              	.LASF274:
 4872 09c0 6D61736B 		.ascii	"mask\000"
 4872      00
 4873              	.LASF124:
 4874 09c5 70617373 		.ascii	"passSarChannels\000"
 4874      53617243 
 4874      68616E6E 
 4874      656C7300 
 4875              	.LASF176:
 4876 09d5 63707573 		.ascii	"cpussRam2Ctl0\000"
 4876      7352616D 
 4876      3243746C 
 4876      3000
 4877              	.LASF191:
 4878 09e3 43595F53 		.ascii	"CY_SAR_START_CONVERT_SINGLE_SHOT\000"
 4878      41525F53 
 4878      54415254 
 4878      5F434F4E 
 4878      56455254 
 4879              	.LASF52:
 4880 0a04 53544152 		.ascii	"START_CTRL\000"
 4880      545F4354 
 4880      524C00
 4881              	.LASF234:
 4882 0a0f 43595F53 		.ascii	"CY_SYSCLK_DIV_16_5_BIT\000"
 4882      5953434C 
 4882      4B5F4449 
 4882      565F3136 
 4882      5F355F42 
 4883              	.LASF155:
 4884 0a26 70657269 		.ascii	"periDiv16CtlOffset\000"
 4884      44697631 
 4884      3643746C 
 4884      4F666673 
 4884      657400
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 189


 4885              	.LASF287:
 4886 0a39 4144435F 		.ascii	"ADC_1_allConfigs\000"
 4886      315F616C 
 4886      6C436F6E 
 4886      66696773 
 4886      00
 4887              	.LASF273:
 4888 0a4a 4144435F 		.ascii	"ADC_1_SetEosMask\000"
 4888      315F5365 
 4888      74456F73 
 4888      4D61736B 
 4888      00
 4889              	.LASF221:
 4890 0a5b 6D757853 		.ascii	"muxSwitch\000"
 4890      77697463 
 4890      6800
 4891              	.LASF6:
 4892 0a65 73686F72 		.ascii	"short unsigned int\000"
 4892      7420756E 
 4892      7369676E 
 4892      65642069 
 4892      6E7400
 4893              	.LASF92:
 4894 0a78 6C6F6E67 		.ascii	"long double\000"
 4894      20646F75 
 4894      626C6500 
 4895              	.LASF15:
 4896 0a84 75696E74 		.ascii	"uint16_t\000"
 4896      31365F74 
 4896      00
 4897              	.LASF258:
 4898 0a8d 4144435F 		.ascii	"ADC_1_Enable\000"
 4898      315F456E 
 4898      61626C65 
 4898      00
 4899              	.LASF147:
 4900 0a9a 70657269 		.ascii	"periTrCmdGrSelMsk\000"
 4900      5472436D 
 4900      64477253 
 4900      656C4D73 
 4900      6B00
 4901              	.LASF230:
 4902 0aac 43595F53 		.ascii	"CY_SYSCLK_INVALID_STATE\000"
 4902      5953434C 
 4902      4B5F494E 
 4902      56414C49 
 4902      445F5354 
 4903              	.LASF212:
 4904 0ac4 73616D70 		.ascii	"sampleTime01\000"
 4904      6C655469 
 4904      6D653031 
 4904      00
 4905              	.LASF121:
 4906 0ad1 73727373 		.ascii	"srssNumHfroot\000"
 4906      4E756D48 
 4906      66726F6F 
 4906      7400
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 190


 4907              	.LASF143:
 4908 0adf 64774368 		.ascii	"dwChCtlPreemptablePos\000"
 4908      43746C50 
 4908      7265656D 
 4908      70746162 
 4908      6C65506F 
 4909              	.LASF233:
 4910 0af5 43595F53 		.ascii	"CY_SYSCLK_DIV_16_BIT\000"
 4910      5953434C 
 4910      4B5F4449 
 4910      565F3136 
 4910      5F424954 
 4911              	.LASF105:
 4912 0b0a 64775665 		.ascii	"dwVersion\000"
 4912      7273696F 
 4912      6E00
 4913              	.LASF137:
 4914 0b14 666C6173 		.ascii	"flashCtlMainWs2Freq\000"
 4914      6843746C 
 4914      4D61696E 
 4914      57733246 
 4914      72657100 
 4915              	.LASF1:
 4916 0b28 756E7369 		.ascii	"unsigned char\000"
 4916      676E6564 
 4916      20636861 
 4916      7200
 4917              	.LASF263:
 4918 0b36 636F6E66 		.ascii	"config\000"
 4918      696700
 4919              	.LASF200:
 4920 0b3d 43595F53 		.ascii	"CY_SAR_SWITCH_SEQ_CTRL_ENABLE\000"
 4920      41525F53 
 4920      57495443 
 4920      485F5345 
 4920      515F4354 
 4921              	.LASF17:
 4922 0b5b 73697A65 		.ascii	"sizetype\000"
 4922      74797065 
 4922      00
 4923              	.LASF228:
 4924 0b64 43595F53 		.ascii	"CY_SYSCLK_BAD_PARAM\000"
 4924      5953434C 
 4924      4B5F4241 
 4924      445F5041 
 4924      52414D00 
 4925              	.LASF172:
 4926 0b78 63707573 		.ascii	"cpussCm4NmiCtlOffset\000"
 4926      73436D34 
 4926      4E6D6943 
 4926      746C4F66 
 4926      66736574 
 4927              	.LASF166:
 4928 0b8d 63707573 		.ascii	"cpussCm0StatusOffset\000"
 4928      73436D30 
 4928      53746174 
 4928      75734F66 
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 191


 4928      66736574 
 4929              	.LASF154:
 4930 0ba2 70657269 		.ascii	"periDiv8CtlOffset\000"
 4930      44697638 
 4930      43746C4F 
 4930      66667365 
 4930      7400
 4931              	.LASF37:
 4932 0bb4 52455345 		.ascii	"RESERVED2\000"
 4932      52564544 
 4932      3200
 4933              	.LASF39:
 4934 0bbe 52455345 		.ascii	"RESERVED3\000"
 4934      52564544 
 4934      3300
 4935              	.LASF42:
 4936 0bc8 52455345 		.ascii	"RESERVED4\000"
 4936      52564544 
 4936      3400
 4937              	.LASF73:
 4938 0bd2 52455345 		.ascii	"RESERVED5\000"
 4938      52564544 
 4938      3500
 4939              	.LASF75:
 4940 0bdc 52455345 		.ascii	"RESERVED6\000"
 4940      52564544 
 4940      3600
 4941              	.LASF243:
 4942 0be6 43795F53 		.ascii	"Cy_SAR_Disable\000"
 4942      41525F44 
 4942      69736162 
 4942      6C6500
 4943              	.LASF80:
 4944 0bf5 52455345 		.ascii	"RESERVED8\000"
 4944      52564544 
 4944      3800
 4945              	.LASF83:
 4946 0bff 52455345 		.ascii	"RESERVED9\000"
 4946      52564544 
 4946      3900
 4947              	.LASF44:
 4948 0c09 50455249 		.ascii	"PERI_V1_Type\000"
 4948      5F56315F 
 4948      54797065 
 4948      00
 4949              	.LASF85:
 4950 0c16 4D55585F 		.ascii	"MUX_SWITCH_SQ_CTRL\000"
 4950      53574954 
 4950      43485F53 
 4950      515F4354 
 4950      524C00
 4951              	.LASF7:
 4952 0c29 6C6F6E67 		.ascii	"long int\000"
 4952      20696E74 
 4952      00
 4953              	.LASF103:
 4954 0c32 63707573 		.ascii	"cpussVersion\000"
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 192


 4954      73566572 
 4954      73696F6E 
 4954      00
 4955              	.LASF107:
 4956 0c3f 6770696F 		.ascii	"gpioVersion\000"
 4956      56657273 
 4956      696F6E00 
 4957              	.LASF32:
 4958 0c4b 4449565F 		.ascii	"DIV_CMD\000"
 4958      434D4400 
 4959              	.LASF106:
 4960 0c53 666C6173 		.ascii	"flashcVersion\000"
 4960      68635665 
 4960      7273696F 
 4960      6E00
 4961              	.LASF128:
 4962 0c61 70726F74 		.ascii	"protBusMasterMask\000"
 4962      4275734D 
 4962      61737465 
 4962      724D6173 
 4962      6B00
 4963              	.LASF97:
 4964 0c73 70726F74 		.ascii	"protBase\000"
 4964      42617365 
 4964      00
 4965              	.LASF252:
 4966 0c7c 43795F53 		.ascii	"Cy_SysClk_PeriphEnableDivider\000"
 4966      7973436C 
 4966      6B5F5065 
 4966      72697068 
 4966      456E6162 
 4967              	.LASF286:
 4968 0c9a 4144435F 		.ascii	"ADC_1_currentConfig\000"
 4968      315F6375 
 4968      7272656E 
 4968      74436F6E 
 4968      66696700 
 4969              	.LASF49:
 4970 0cae 52414E47 		.ascii	"RANGE_THRES\000"
 4970      455F5448 
 4970      52455300 
 4971              	.LASF181:
 4972 0cba 63686172 		.ascii	"char_t\000"
 4972      5F7400
 4973              	.LASF189:
 4974 0cc1 43595F53 		.ascii	"CY_SAR_CONVERSION_NOT_COMPLETE\000"
 4974      41525F43 
 4974      4F4E5645 
 4974      5253494F 
 4974      4E5F4E4F 
 4975              	.LASF54:
 4976 0ce0 4348414E 		.ascii	"CHAN_WORK\000"
 4976      5F574F52 
 4976      4B00
 4977              	.LASF184:
 4978 0cea 646F7562 		.ascii	"double\000"
 4978      6C6500
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 193


 4979              	.LASF167:
 4980 0cf1 63707573 		.ascii	"cpussCm4PwrCtlOffset\000"
 4980      73436D34 
 4980      50777243 
 4980      746C4F66 
 4980      66736574 
 4981              	.LASF3:
 4982 0d06 5F5F7569 		.ascii	"__uint8_t\000"
 4982      6E74385F 
 4982      7400
 4983              	.LASF240:
 4984 0d10 6D697363 		.ascii	"miscConfig\000"
 4984      436F6E66 
 4984      696700
 4985              	.LASF158:
 4986 0d1b 6770696F 		.ascii	"gpioPrtIntrCfgOffset\000"
 4986      50727449 
 4986      6E747243 
 4986      66674F66 
 4986      66736574 
 4987              	.LASF164:
 4988 0d30 63707573 		.ascii	"cpussCm4ClockCtlOffset\000"
 4988      73436D34 
 4988      436C6F63 
 4988      6B43746C 
 4988      4F666673 
 4989              	.LASF63:
 4990 0d47 494E5452 		.ascii	"INTR_MASKED\000"
 4990      5F4D4153 
 4990      4B454400 
 4991              	.LASF169:
 4992 0d53 63707573 		.ascii	"cpussTrimRomCtlOffset\000"
 4992      73547269 
 4992      6D526F6D 
 4992      43746C4F 
 4992      66667365 
 4993              	.LASF213:
 4994 0d69 73616D70 		.ascii	"sampleTime23\000"
 4994      6C655469 
 4994      6D653233 
 4994      00
 4995              	.LASF84:
 4996 0d76 4D55585F 		.ascii	"MUX_SWITCH_DS_CTRL\000"
 4996      53574954 
 4996      43485F44 
 4996      535F4354 
 4996      524C00
 4997              	.LASF108:
 4998 0d89 6873696F 		.ascii	"hsiomVersion\000"
 4998      6D566572 
 4998      73696F6E 
 4998      00
 4999              	.LASF9:
 5000 0d96 6C6F6E67 		.ascii	"long unsigned int\000"
 5000      20756E73 
 5000      69676E65 
 5000      6420696E 
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 194


 5000      7400
 5001              	.LASF253:
 5002 0da8 72657456 		.ascii	"retVal\000"
 5002      616C00
 5003              	.LASF173:
 5004 0daf 63707573 		.ascii	"cpussRomCtl\000"
 5004      73526F6D 
 5004      43746C00 
 5005              	.LASF81:
 5006 0dbb 4D55585F 		.ascii	"MUX_SWITCH0\000"
 5006      53574954 
 5006      43483000 
 5007              	.LASF57:
 5008 0dc7 4348414E 		.ascii	"CHAN_RESULT_UPDATED\000"
 5008      5F524553 
 5008      554C545F 
 5008      55504441 
 5008      54454400 
 5009              	.LASF196:
 5010 0ddb 63795F65 		.ascii	"cy_en_sar_return_mode_t\000"
 5010      6E5F7361 
 5010      725F7265 
 5010      7475726E 
 5010      5F6D6F64 
 5011              	.LASF53:
 5012 0df3 4348414E 		.ascii	"CHAN_CONFIG\000"
 5012      5F434F4E 
 5012      46494700 
 5013              	.LASF211:
 5014 0dff 73616D70 		.ascii	"sampleCtrl\000"
 5014      6C654374 
 5014      726C00
 5015              	.LASF206:
 5016 0e0a 43595F53 		.ascii	"CY_SAR_INTR_MASK_NONE\000"
 5016      41525F49 
 5016      4E54525F 
 5016      4D41534B 
 5016      5F4E4F4E 
 5017              	.LASF88:
 5018 0e20 414E415F 		.ascii	"ANA_TRIM0\000"
 5018      5452494D 
 5018      3000
 5019              	.LASF89:
 5020 0e2a 414E415F 		.ascii	"ANA_TRIM1\000"
 5020      5452494D 
 5020      3100
 5021              	.LASF8:
 5022 0e34 5F5F7569 		.ascii	"__uint32_t\000"
 5022      6E743332 
 5022      5F7400
 5023              	.LASF180:
 5024 0e3f 63795F69 		.ascii	"cy_israddress\000"
 5024      73726164 
 5024      64726573 
 5024      7300
 5025              	.LASF197:
 5026 0e4d 43595F53 		.ascii	"CY_SAR_SWITCH_OPEN\000"
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 195


 5026      41525F53 
 5026      57495443 
 5026      485F4F50 
 5026      454E00
 5027              	.LASF235:
 5028 0e60 43595F53 		.ascii	"CY_SYSCLK_DIV_24_5_BIT\000"
 5028      5953434C 
 5028      4B5F4449 
 5028      565F3234 
 5028      5F355F42 
 5029              	.LASF66:
 5030 0e77 53415455 		.ascii	"SATURATE_INTR_MASK\000"
 5030      52415445 
 5030      5F494E54 
 5030      525F4D41 
 5030      534B00
 5031              	.LASF278:
 5032 0e8a 7265744D 		.ascii	"retMode\000"
 5032      6F646500 
 5033              	.LASF87:
 5034 0e92 52455345 		.ascii	"RESERVED10\000"
 5034      52564544 
 5034      313000
 5035              	.LASF134:
 5036 0e9d 666C6173 		.ascii	"flashEraseDelay\000"
 5036      68457261 
 5036      73654465 
 5036      6C617900 
 5037              	.LASF241:
 5038 0ead 636C6B44 		.ascii	"clkDivider\000"
 5038      69766964 
 5038      657200
 5039              	.LASF236:
 5040 0eb8 63795F65 		.ascii	"cy_en_divider_types_t\000"
 5040      6E5F6469 
 5040      76696465 
 5040      725F7479 
 5040      7065735F 
 5041              	.LASF247:
 5042 0ece 43795F53 		.ascii	"Cy_SAR_SetInterruptMask\000"
 5042      41525F53 
 5042      6574496E 
 5042      74657272 
 5042      7570744D 
 5043              	.LASF279:
 5044 0ee6 656E644F 		.ascii	"endOfConversion\000"
 5044      66436F6E 
 5044      76657273 
 5044      696F6E00 
 5045              	.LASF199:
 5046 0ef6 43595F53 		.ascii	"CY_SAR_SWITCH_SEQ_CTRL_DISABLE\000"
 5046      41525F53 
 5046      57495443 
 5046      485F5345 
 5046      515F4354 
 5047              	.LASF272:
 5048 0f15 4144435F 		.ascii	"ADC_1_IRQ_Disable\000"
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 196


 5048      315F4952 
 5048      515F4469 
 5048      7361626C 
 5048      6500
 5049              	.LASF130:
 5050 0f27 666C6173 		.ascii	"flashRwwRequired\000"
 5050      68527777 
 5050      52657175 
 5050      69726564 
 5050      00
 5051              	.LASF159:
 5052 0f38 6770696F 		.ascii	"gpioPrtCfgOffset\000"
 5052      50727443 
 5052      66674F66 
 5052      66736574 
 5052      00
 5053              	.LASF125:
 5054 0f49 65704D6F 		.ascii	"epMonitorNr\000"
 5054      6E69746F 
 5054      724E7200 
 5055              	.LASF265:
 5056 0f55 4144435F 		.ascii	"ADC_1_SelectConfig\000"
 5056      315F5365 
 5056      6C656374 
 5056      436F6E66 
 5056      696700
 5057              	.LASF2:
 5058 0f68 7369676E 		.ascii	"signed char\000"
 5058      65642063 
 5058      68617200 
 5059              	.LASF140:
 5060 0f74 64774368 		.ascii	"dwChOffset\000"
 5060      4F666673 
 5060      657400
 5061              	.LASF113:
 5062 0f7f 63707573 		.ascii	"cpussIpcIrqNr\000"
 5062      73497063 
 5062      4972714E 
 5062      7200
 5063              	.LASF285:
 5064 0f8d 4144435F 		.ascii	"ADC_1_selected\000"
 5064      315F7365 
 5064      6C656374 
 5064      656400
 5065              	.LASF288:
 5066 0f9c 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 5066      43313120 
 5066      352E342E 
 5066      31203230 
 5066      31363036 
 5067 0fcf 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0plus -mthumb -"
 5067      20726576 
 5067      6973696F 
 5067      6E203233 
 5067      37373135 
 5068 1002 67202D4F 		.ascii	"g -O0 -ffunction-sections -ffat-lto-objects\000"
 5068      30202D66 
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 197


 5068      66756E63 
 5068      74696F6E 
 5068      2D736563 
 5069              	.LASF165:
 5070 102e 63707573 		.ascii	"cpussCm4StatusOffset\000"
 5070      73436D34 
 5070      53746174 
 5070      75734F66 
 5070      66736574 
 5071              	.LASF217:
 5072 1043 6368616E 		.ascii	"chanConfig\000"
 5072      436F6E66 
 5072      696700
 5073              	.LASF86:
 5074 104e 4D55585F 		.ascii	"MUX_SWITCH_STATUS\000"
 5074      53574954 
 5074      43485F53 
 5074      54415455 
 5074      5300
 5075              	.LASF26:
 5076 1060 41444452 		.ascii	"ADDR0\000"
 5076      3000
 5077              	.LASF28:
 5078 1066 41444452 		.ascii	"ADDR1\000"
 5078      3100
 5079              	.LASF110:
 5080 106c 70657269 		.ascii	"periVersion\000"
 5080      56657273 
 5080      696F6E00 
 5081              	.LASF264:
 5082 1078 6465496E 		.ascii	"deInitRouting\000"
 5082      6974526F 
 5082      7574696E 
 5082      6700
 5083              	.LASF223:
 5084 1086 636F6E66 		.ascii	"configRouting\000"
 5084      6967526F 
 5084      7574696E 
 5084      6700
 5085              	.LASF100:
 5086 1094 70617373 		.ascii	"passBase\000"
 5086      42617365 
 5086      00
 5087              	.LASF27:
 5088 109d 41545430 		.ascii	"ATT0\000"
 5088      00
 5089              	.LASF29:
 5090 10a2 41545431 		.ascii	"ATT1\000"
 5090      00
 5091              	.LASF22:
 5092 10a7 52455345 		.ascii	"RESERVED1\000"
 5092      52564544 
 5092      3100
 5093              	.LASF119:
 5094 10b1 73727373 		.ascii	"srssNumClkpath\000"
 5094      4E756D43 
 5094      6C6B7061 
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 198


 5094      746800
 5095              	.LASF78:
 5096 10c0 53544154 		.ascii	"STATUS\000"
 5096      555300
 5097              	.LASF23:
 5098 10c7 50455249 		.ascii	"PERI_GR_V1_Type\000"
 5098      5F47525F 
 5098      56315F54 
 5098      79706500 
 5099              	.LASF139:
 5100 10d7 666C6173 		.ascii	"flashCtlMainWs4Freq\000"
 5100      6843746C 
 5100      4D61696E 
 5100      57733446 
 5100      72657100 
 5101              	.LASF220:
 5102 10eb 72616E67 		.ascii	"rangeIntrMask\000"
 5102      65496E74 
 5102      724D6173 
 5102      6B00
 5103              	.LASF198:
 5104 10f9 43595F53 		.ascii	"CY_SAR_SWITCH_CLOSE\000"
 5104      41525F53 
 5104      57495443 
 5104      485F434C 
 5104      4F534500 
 5105              	.LASF275:
 5106 110d 696E7472 		.ascii	"intrMaskReg\000"
 5106      4D61736B 
 5106      52656700 
 5107              	.LASF205:
 5108 1119 63795F65 		.ascii	"cy_en_sar_range_detect_condition_t\000"
 5108      6E5F7361 
 5108      725F7261 
 5108      6E67655F 
 5108      64657465 
 5109              	.LASF21:
 5110 113c 54494D45 		.ascii	"TIMEOUT_CTL\000"
 5110      4F55545F 
 5110      43544C00 
 5111              	.LASF192:
 5112 1148 43595F53 		.ascii	"CY_SAR_START_CONVERT_CONTINUOUS\000"
 5112      41525F53 
 5112      54415254 
 5112      5F434F4E 
 5112      56455254 
 5113              	.LASF31:
 5114 1168 50455249 		.ascii	"PERI_PPU_GR_V1_Type\000"
 5114      5F505055 
 5114      5F47525F 
 5114      56315F54 
 5114      79706500 
 5115              	.LASF109:
 5116 117c 69706356 		.ascii	"ipcVersion\000"
 5116      65727369 
 5116      6F6E00
 5117              	.LASF218:
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccRfdXqk.s 			page 199


 5118 1187 696E7472 		.ascii	"intrMask\000"
 5118      4D61736B 
 5118      00
 5119              	.LASF146:
 5120 1190 70657269 		.ascii	"periTrCmdOffset\000"
 5120      5472436D 
 5120      644F6666 
 5120      73657400 
 5121              	.LASF255:
 5122 11a0 4144435F 		.ascii	"ADC_1_intSarClock_Enable\000"
 5122      315F696E 
 5122      74536172 
 5122      436C6F63 
 5122      6B5F456E 
 5123              	.LASF45:
 5124 11b9 4354524C 		.ascii	"CTRL\000"
 5124      00
 5125              	.LASF237:
 5126 11be 6368616E 		.ascii	"channelBase\000"
 5126      6E656C42 
 5126      61736500 
 5127              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
