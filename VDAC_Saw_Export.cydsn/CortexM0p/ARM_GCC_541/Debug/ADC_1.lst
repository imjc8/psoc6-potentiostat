ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0plus
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"ADC_1.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.Cy_SAR_Disable,"ax",%progbits
  20              		.align	2
  21              		.code	16
  22              		.thumb_func
  23              		.type	Cy_SAR_Disable, %function
  24              	Cy_SAR_Disable:
  25              	.LFB79:
  26              		.file 1 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/sar/cy_sar.h"
   1:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /***************************************************************************//**
   2:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \file cy_sar.h
   3:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \version 1.20
   4:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
   5:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Header file for the SAR driver.
   6:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
   7:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ********************************************************************************
   8:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \copyright
   9:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Copyright 2017-2018, Cypress Semiconductor Corporation. All rights reserved.
  10:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * You may use this file only in accordance with the license, terms, conditions,
  11:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * disclaimers, and limitations in the end user license agreement accompanying
  12:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * the software package with which this file was provided.
  13:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
  14:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
  15:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /**
  16:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \addtogroup group_sar
  17:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
  18:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This driver configures and controls the SAR ADC subsystem block.
  19:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  20:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The functions and other declarations used in this driver are in cy_sar.h. 
  21:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * You can include cy_pdl.h (ModusToolbox only) to get access to all functions 
  22:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * and declarations in the PDL. 
  23:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  24:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This SAR ADC subsystem is comprised of:
  25:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - a 12-bit SAR converter (SARADC)
  26:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - an embedded reference block (SARREF)
  27:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - a mux (\ref group_sar_sarmux "SARMUX") at the inputs of the converter
  28:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - a sequence controller (\ref group_sar_sarmux "SARSEQ") that enables multi-channel acquisition
  29:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       in a round robin fashion, without CPU intervention, to maximize scan rates.
  30:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  31:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_block_diagram.png
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 2


  32:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  33:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The high level features of the subsystem are:
  34:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - maximum sample rate of 1 Msps
  35:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Sixteen individually configurable channels (depends on device routing capabilities)
  36:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - per channel selectable
  37:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       - single-ended or differential input mode
  38:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       - input from external pin (8 channels in single-ended mode or 4 channels in differential mo
  39:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *         or from internal signals (AMUXBUS, CTB, Die Temperature Sensor)
  40:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       - choose one of four programmable acquisition times
  41:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       - averaging and accumulation
  42:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - scan can be triggered by firmware or hardware in single shot or continuous mode
  43:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - hardware averaging from 2 to 256 samples
  44:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - selectable voltage references
  45:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       - internal VDDA and VDDA/2 references
  46:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       - buffered 1.2 V bandgap reference from \ref group_sysanalog "AREF"
  47:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       - external reference from dedicated pin
  48:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Interrupt generation
  49:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  50:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_usage Usage
  51:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  52:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The high level steps to use this driver are:
  53:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  54:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   -# \ref group_sar_initialization
  55:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   -# \ref group_sar_trigger_conversions
  56:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   -# \ref group_sar_handle_interrupts
  57:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   -# \ref group_sar_retrieve_result
  58:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  59:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_initialization Initialization and Enable
  60:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  61:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * To configure the SAR subsystem, call \ref Cy_SAR_Init. Pass in a pointer to the \ref SAR_Type
  62:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * structure for the base hardware register address and pass in the configuration structure,
  63:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref cy_stc_sar_config_t.
  64:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  65:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * After initialization, call \ref Cy_SAR_Enable to enable the hardware.
  66:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  67:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Here is guidance on how to set the data fields of the configuration structure:
  68:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  69:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_ctrl uint32_t ctrl
  70:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  71:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field specifies configurations that apply to all channels such as the Vref
  72:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * source or the negative terminal selection for all single-ended channels.
  73:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Select a value from each of the following enums that begin with "cy_en_sar_ctrl_" and "OR" them t
  74:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_pwr_ctrl_vref_t
  75:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_vref_sel_t
  76:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_bypass_cap_t
  77:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_neg_sel_t
  78:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_hw_ctrl_negvref_t
  79:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_comp_delay_t
  80:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_comp_pwr_t
  81:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_sarmux_deep_sleep_t
  82:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_sarseq_routing_switches_t
  83:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  84:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SAR_CTRL
  85:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  86:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_sampleCtrl uint32_t sampleCtrl
  87:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  88:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures sampling details that apply to all channels.
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 3


  89:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Select a value from each of the following enums that begin with "cy_en_sar_sample_" and "OR" them
  90:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_result_align_t
  91:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_single_ended_format_t
  92:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_differential_format_t
  93:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_avg_cnt_t
  94:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_avg_mode_t
  95:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_trigger_mode_t
  96:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  97:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SAMPLE_CTRL
  98:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  99:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_sampleTime01 uint32_t sampleTime01
 100:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 101:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures the value for sample times 0 and 1 in ADC clock cycles.
 102:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 103:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SAR has four programmable 10-bit aperture times that are configured using two data fields,
 104:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref group_sar_init_struct_sampleTime01 and
 105:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref group_sar_init_struct_sampleTime23.
 106:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Ten bits allow for a range of 0 to 1023 cycles, however 0 and 1 are invalid.
 107:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The minimum aperture time is 167 ns. With an 18 MHz ADC clock, this is
 108:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * equal to 3 cycles or a value of 4 in this field. The actual aperture time is one cycle less than
 109:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * the value stored in this field.
 110:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 111:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Use the shifts defined in \ref cy_en_sar_sample_time_shift_t.
 112:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 113:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SAMPLE_TIME01
 114:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 115:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_sampleTime23 uint32_t sampleTime23
 116:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 117:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures the value for sample times 2 and 3 in ADC clock cycles.
 118:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Use the shifts defined in \ref cy_en_sar_sample_time_shift_t.
 119:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 120:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SAMPLE_TIME23
 121:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 122:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_rangeThres uint32_t rangeThres
 123:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 124:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures the upper and lower thresholds for the range interrupt.
 125:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * These thresholds apply on a global level for all channels with range detection enabled.
 126:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 127:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SARSEQ supports range detection to allow for automatic detection of sample values
 128:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * compared to two programmable thresholds without CPU involvement.
 129:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Range detection is done after averaging, alignment, and sign extension (if applicable). In other 
 130:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * threshold values need to have the same data format as the result data.
 131:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The values are interpreted as signed or unsigned according to each channel's configuration.
 132:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 133:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Use the shifts defined in \ref cy_en_sar_range_thres_shift_t.
 134:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 135:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The \ref Cy_SAR_SetLowLimit and \ref Cy_SAR_SetHighLimit provide run-time configurability of thes
 136:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 137:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_RANGE_THRES
 138:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 139:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_rangeCond cy_en_sar_range_detect_condition_t rangeCond
 140:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 141:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures the condition (below, inside, outside, or above) that will trigger
 142:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * the range interrupt. Select a value from the \ref cy_en_sar_range_detect_condition_t enum.
 143:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 144:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_chanEn uint32_t chanEn
 145:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 4


 146:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures which channels will be scanned.
 147:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Each bit corresponds to a channel. Bit 0 enables channel 0, bit 1 enables channel 1,
 148:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * bit 2 enables channel 2, and so on.
 149:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 150:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_chanConfig uint32_t chanConfig[16]
 151:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 152:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Each channel has its own channel configuration register.
 153:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The channel configuration specifies which pin/signal is connected to that channel
 154:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * and how the channel is sampled.
 155:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 156:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Select a value from each of the following enums that begin with "cy_en_sar_chan_config_" and "OR"
 157:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 158:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_input_mode_t
 159:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_pos_pin_addr_t
 160:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_pos_port_addr_t
 161:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_avg_en_t
 162:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_sample_time_t
 163:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_neg_pin_addr_t
 164:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_neg_port_addr_t
 165:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 166:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Some important considerations are:
 167:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - The POS_PORT_ADDR and POS_PIN_ADDR bit fields are used by the SARSEQ to select
 168:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   the connection to the positive terminal (Vplus) of the ADC for each channel.
 169:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - When the channel is an unpaired differential input (\ref CY_SAR_CHAN_DIFFERENTIAL_UNPAIRED), 
 170:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   NEG_PORT_ADDR and NEG_PIN_ADDR are used by the SARSEQ to select the connection
 171:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   to the negative terminal (Vminus) of the ADC.
 172:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - When the channel is a differential input pair (\ref CY_SAR_CHAN_DIFFERENTIAL_PAIRED), the NEG
 173:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   For differential input pairs, only the pin for the positive terminal needs to be
 174:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   specified and this pin must be even. For example, Pin 0 (positive terminal) and Pin 1 (negative
 175:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   are a pair. Pin 2 (positive terminal) and Pin 3 (negative terminal) are a pair.
 176:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 177:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * If the SARSEQ is disabled (\ref cy_en_sar_ctrl_sarseq_routing_switches_t) or
 178:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * it is not controlling any switches (\ref group_sar_init_struct_muxSwitchSqCtrl = 0), the port and
 179:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * are ignored. This is possible when there is only one channel to scan.
 180:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 181:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_CHAN_CONFIG
 182:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 183:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_intrMask uint32_t intrMask
 184:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 185:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures which interrupt events (end of scan, overflow, or firmware collision) will 
 186:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 187:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Select one or more values from the \ref cy_en_sar_intr_mask_t enum and "OR" them
 188:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * together.
 189:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 190:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_INTR_MASK
 191:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 192:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_satIntrMask uint32_t satIntrMask
 193:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 194:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures which channels will cause a saturation interrupt.
 195:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 196:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SARSEQ has a saturation detect that is always applied to every conversion.
 197:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This feature detects whether a channel's sample value is equal to the minimum or maximum values.
 198:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This allows the firmware to take action, for example, discard the result, when the SARADC saturat
 199:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The sample value is tested right after conversion, that is, before averaging. This means that it
 200:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * can happen that the interrupt is set while the averaged result in the data register is not
 201:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * equal to the minimum or maximum.
 202:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 5


 203:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Each bit corresponds to a channel. A value of 0 disables saturation detection for all channels.
 204:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 205:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_rangeIntrMask uint32_t rangeIntrMask
 206:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 207:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures which channels will cause a range detection interrupt.
 208:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Each bit corresponds to a channel. A value of 0 disables range detection for all channels.
 209:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 210:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_muxSwitch uint32_t muxSwitch
 211:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 212:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field is the firmware control of the SARMUX switches.
 213:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 214:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Use one or more values from the \ref cy_en_sar_mux_switch_fw_ctrl_t enum and "OR" them together.
 215:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * If the SARSEQ is enabled, the SARMUX switches that will be used must
 216:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * also be closed using this firmware control.
 217:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 218:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_MUX_SWITCH
 219:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 220:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Firmware control can be changed at run-time by calling \ref Cy_SAR_SetAnalogSwitch with \ref CY_S
 221:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * and the desired switch states.
 222:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 223:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_muxSwitchSqCtrl uint32_t muxSwitchSqCtrl
 224:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 225:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field enables or disables SARSEQ control of the SARMUX switches.
 226:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * To disable control of all switches, set this field to 0. To disable the SARSEQ all together,
 227:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * use \ref CY_SAR_SARSEQ_SWITCH_DISABLE when configuring the \ref group_sar_init_struct_ctrl regist
 228:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 229:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Use one or more values from the \ref cy_en_sar_mux_switch_sq_ctrl_t enum and "OR" them together.
 230:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 231:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_MUX_SQ_CTRL
 232:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 233:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * SARSEQ control can be changed at run-time by calling \ref Cy_SAR_SetSwitchSarSeqCtrl.
 234:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 235:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_configRouting bool configRouting
 236:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 237:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * If true, the \ref group_sar_init_struct_muxSwitch and \ref group_sar_init_struct_muxSwitchSqCtrl 
 238:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * will be used. If false, the fields will be ignored.
 239:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 240:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_vrefMvValue uint32_t vrefMvValue
 241:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 242:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field sets the value of the reference voltage in millivolts used. This value
 243:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * is used for converting counts to volts in the \ref Cy_SAR_CountsTo_Volts, \ref Cy_SAR_CountsTo_mV
 244:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref Cy_SAR_CountsTo_uVolts functions.
 245:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 246:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_trigger_conversions Triggering Conversions
 247:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 248:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SAR subsystem has the following modes for triggering a conversion:
 249:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * <table class="doxtable">
 250:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 251:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>Mode</th>
 252:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>Description</th>
 253:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>Usage</th>
 254:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 255:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 256:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Continuous</td>
 257:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>After completing a scan, the
 258:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     SARSEQ will immediately start the next scan. That is, the SARSEQ will always be BUSY.
 259:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     As a result all other triggers, firmware or hardware, are essentially ignored.
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 6


 260:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *  </td>
 261:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>To enter this mode, call \ref Cy_SAR_StartConvert with \ref CY_SAR_START_CONVERT_CONTINUO
 262:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     To stop continuous conversions, call \ref Cy_SAR_StopConvert.
 263:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     </td>
 264:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 265:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 266:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Firmware single shot</td>
 267:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>A single conversion of all enabled channels is triggered with a function call to \ref Cy_
 268:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     \ref CY_SAR_START_CONVERT_SINGLE_SHOT.
 269:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     </td>
 270:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>
 271:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     Firmware triggering is always available by calling \ref Cy_SAR_StartConvert with \ref CY_SAR_
 272:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     To allow only firmware triggering, or disable
 273:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     hardware triggering, set up the \ref cy_stc_sar_config_t config structure with \ref CY_SAR_TR
 274:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     </td>
 275:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 276:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 277:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Hardware edge sensitive</td>
 278:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>A single conversion of all enabled channels is triggered on the rising edge of the hardwa
 279:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     trigger signal.</td>
 280:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>To enable this mode, set up the \ref cy_stc_sar_config_t config structure with
 281:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     \ref CY_SAR_TRIGGER_MODE_FW_AND_HWEDGE.</td>
 282:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *    </tr>
 283:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *    <tr>
 284:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Hardware level sensitive</td>
 285:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Conversions are triggered continuously when the hardware trigger signal is high.</td>
 286:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>To enable this mode, set up the \ref cy_stc_sar_config_t config structure with
 287:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     \ref CY_SAR_TRIGGER_MODE_FW_AND_HWLEVEL.</td>
 288:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *    </tr>
 289:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * </table>
 290:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 291:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The trigger mode can be changed during run time with \ref Cy_SAR_SetConvertMode.
 292:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 293:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * For the hardware trigger modes, use the \ref group_trigmux driver to route an internal or externa
 294:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * signal to the SAR trigger input.
 295:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * When making the required \ref Cy_TrigMux_Connect calls, use the pre-defined enum, TRIG6_OUT_PASS_
 296:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * for the SAR trigger input.
 297:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 298:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_CONFIG_TRIGGER
 299:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 300:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_handle_interrupts Handling Interrupts
 301:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 302:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SAR can generate interrupts on these events:
 303:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 304:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - End of scan (EOS): when scanning of all enabled channels complete.
 305:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Overflow: when the result register is updated before the previous result is read.
 306:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - FW collision: when a new trigger is received while the SAR is still processing the previous t
 307:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Saturation detection: when the channel result is equal to the minimum or maximum value.
 308:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Range detection: when the channel result meets the programmed upper or lower threshold values
 309:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 310:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SAR interrupt to the NVIC is raised any time the intersection (logic and) of the interrupt
 311:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * flags and the corresponding interrupt masks are non-zero.
 312:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 313:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Implement an interrupt routine and assign it to the SAR interrupt.
 314:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Use the pre-defined enum, pass_interrupt_sar_IRQn, as the interrupt source for the SAR.
 315:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 316:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The following code snippet demonstrates how to implement a routine to handle the interrupt.
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 7


 317:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The routine gets called when any one of the SAR interrupts are triggered.
 318:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * When servicing an interrupt, the user must clear the interrupt so that subsequent
 319:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * interrupts can be handled.
 320:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 321:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_ISR
 322:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 323:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The following code snippet demonstrates how to configure and enable the interrupt.
 324:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 325:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_CONFIG_INTR
 326:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 327:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Alternately, instead of handling the interrupts, the \ref Cy_SAR_IsEndConversion function
 328:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * allows for firmware polling of the end of conversion status.
 329:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 330:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_retrieve_result Retrieve Channel Results
 331:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 332:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Retrieve the ADC result by calling \ref Cy_SAR_GetResult16 with the desired channel.
 333:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * To convert the result to a voltage, pass the ADC result to \ref Cy_SAR_CountsTo_Volts, \ref Cy_SA
 334:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref Cy_SAR_CountsTo_uVolts.
 335:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 336:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_clock SAR Clock Configuration
 337:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 338:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SAR requires a clock. Assign a clock to the SAR using the
 339:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * pre-defined enum, PCLK_PASS_CLOCK_SAR, to identify the SAR subsystem.
 340:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Set the clock divider value to achieve the desired clock rate. The SAR can support
 341:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * a maximum frequency of 18 MHz.
 342:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 343:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm4.c SAR_SNIPPET_CONFIGURE_CLOCK
 344:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 345:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_scan_time Scan Rate
 346:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 347:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The scan rate is dependent on the following:
 348:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 349:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - ADC clock rate
 350:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Number of channels
 351:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Averaging
 352:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Resolution
 353:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Acquisition times
 354:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 355:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_acquisition_time Acquisition Time
 356:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 357:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The acquisition time of a channel is based on which of the four global aperture times are selecte
 358:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * channel. The selection is done during initialization per channel with \ref group_sar_init_struct_
 359:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The four global aperture times are also set during initialization with \ref group_sar_init_struct
 360:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref group_sar_init_struct_sampleTime23. Note that these global aperture times are in SAR clock c
 361:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * acquisition time is 1 less than that value in the register.
 362:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 363:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_acquisition_time_eqn.png
 364:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 365:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_channel_sample_time Channel Sample Time
 366:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 367:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The sample time for a channel is the time required to acquire the analog signal
 368:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * and convert it to a digital code.
 369:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 370:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_channel_sample_time_eqn.png
 371:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 372:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SAR ADC is a 12-bit converter so Resolution = 12.
 373:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 8


 374:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_total_scan_time Total Scan Time
 375:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 376:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Channels using one of the sequential averaging modes (\ref CY_SAR_AVG_MODE_SEQUENTIAL_ACCUM or \r
 377:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * are sampled multiple times per scan. The number of samples averaged are set during initialization
 378:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * with \ref group_sar_init_struct_sampleCtrl using one of the values from \ref cy_en_sar_sample_ctr
 379:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Channels that are not averaged or use the \ref CY_SAR_AVG_MODE_INTERLEAVED mode are only sampled 
 380:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 381:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The total scan time is the sum of each channel's sample time multiplied by the samples per scan.
 382:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 383:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_scan_rate_eqn.png
 384:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 385:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * where N is the total number of channels in the scan.
 386:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 387:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_sarmux SARMUX and SARSEQ
 388:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 389:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SARMUX is an analog programmable multiplexer. Its switches can be controlled by the SARSEQ or
 390:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * and the inputs can come from:
 391:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - a dedicated port (can support 8 single-ended channels or 4 differential channels)
 392:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - an internal die temperature (DieTemp) sensor
 393:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - CTB output via SARBUS0/1 (if CTBs are available on the device)
 394:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - AMUXBUSA/B
 395:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 396:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The following figure shows the SARMUX switches. See the device datasheet for the exact location o
 397:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 398:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_sarmux_switches.png
 399:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 400:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * When using the SARSEQ, the following configurations must be performed:
 401:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - enable SARSEQ control of required switches (see \ref group_sar_init_struct_muxSwitchSqCtrl)
 402:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - close the required switches with firmware (see \ref group_sar_init_struct_muxSwitch)
 403:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - configure the POS_PORT_ADDR and POS_PIN_ADDR, and if used, the NEG_PORT_ADDR and NEG_PIN_ADDR
 404:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 405:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * While firmware can control every switch in the SARMUX, not every switch can be controlled by the 
 406:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Additionally, switches outside of the SARMUX such as the AMUXBUSA/B switches or
 407:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * CTB switches will require separate function calls (see \ref group_gpio "GPIO" and \ref group_ctb 
 408:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SARSEQ can control three switches in the \ref group_ctb "CTB" driver (see \ref Cy_CTB_EnableS
 409:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * These switches need to be enabled for SARSEQ control if the CTB outputs are used as the SARMUX in
 410:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 411:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The following table shows the required POS_PORT_ADDR and POS_PIN_ADDR settings
 412:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * for different input connections.
 413:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 414:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * <table class="doxtable">
 415:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 416:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>Input Connection Selection</th>
 417:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>POS_PORT_ADDR</th>
 418:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>POS_PIN_ADDR</th>
 419:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 420:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 421:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>SARMUX dedicated port</td>
 422:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_SARMUX</td>
 423:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_0 through \ref CY_SAR_CHAN_POS_PIN_ADDR_7</td>
 424:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 425:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 426:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>DieTemp sensor</td>
 427:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_SARMUX_VIRT</td>
 428:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_0</td>
 429:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 430:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 9


 431:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>AMUXBUSA</td>
 432:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_SARMUX_VIRT</td>
 433:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_2</td>
 434:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 435:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 436:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>AMUXBUSB</td>
 437:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_SARMUX_VIRT</td>
 438:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_3</td>
 439:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 440:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 441:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>CTB0 Opamp0 1x output</td>
 442:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_CTB0</td>
 443:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_2</td>
 444:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 445:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 446:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>CTB0 Opamp1 1x output</td>
 447:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_CTB0</td>
 448:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_3</td>
 449:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 450:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * </table>
 451:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 452:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_sarmux_dietemp Input from DieTemp sensor
 453:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 454:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * When using the DieTemp sensor, always use single-ended mode.
 455:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The temperature sensor can be routed to Vplus using the \ref CY_SAR_MUX_FW_TEMP_VPLUS switch.
 456:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Connecting this switch will also enable the sensor. Set the \ref group_sar_acquisition_time "acqu
 457:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * be at least 1 us to meet the settling time of the temperature sensor.
 458:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 459:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_sarmux_dietemp.png
 460:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 461:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_02.cydsn/main_cm4.c SNIPPET_SAR_SARMUX_DIETEMP
 462:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 463:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_sarmux_se_diff Input from SARMUX port
 464:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 465:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The following figure and code snippet show how two GPIOs on the SARMUX dedicated port
 466:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * are connected to the SARADC as separate single-ended channels and as a differential-pair channel.
 467:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 468:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_sarmux_dedicated_port.png
 469:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 470:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_02.cydsn/main_cm4.c SNIPPET_SAR_SARMUX_SE_DIFF
 471:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 472:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_sarmux_ctb Input from CTB output visa SARBUS0/1
 473:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 474:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The following figure and code snippet show how the two opamp outputs from the CTB
 475:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * are connected to the SARADC as separate single-ended channels and as a differential-pair channel.
 476:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Note that separate function calls are needed to configure and enable the opamps, perform required
 477:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * and enable SARSEQ control of the switches contained in the CTB.
 478:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 479:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_sarmux_ctb.png
 480:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 481:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_02.cydsn/main_cm4.c SNIPPET_SAR_SARMUX_CTB
 482:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 483:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_sarmux_amuxbus Input from other pins through AMUXBUSA/B
 484:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 485:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The following figure and code snippet show how two GPIOs on any port through the AMUXBUSA and AMU
 486:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * are connected to the SARADC as separate single-ended channels and as a differential-pair channel.
 487:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Note that separate function calls are needed to route the device pins to the SARMUX. The AMUXBUSe
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 10


 488:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * are separated into multiple segments and these segments are connected/disconnected using the AMUX
 489:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * registers in the HSIOM. In the following code snippet, to connect Port 1 to the SARMUX, the left 
 490:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * switches of AMUX_SPLIT_CTL[1] and AMUX_SPLIT_CTL[6] need to be closed.
 491:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 492:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_sarmux_amuxbus.png
 493:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 494:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_02.cydsn/main_cm4.c SNIPPET_SAR_SARMUX_AMUXBUS
 495:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 496:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_low_power Low Power Support
 497:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This SAR driver provides a callback function to handle power mode transitions.
 498:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The \ref Cy_SAR_DeepSleepCallback function ensures that SAR conversions are stopped
 499:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * before Deep Sleep entry. Upon wakeup, the callback
 500:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * enables the hardware and continuous conversions, if previously enabled.
 501:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 502:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * To trigger the callback execution, the callback must be registered before calling \ref Cy_SysPm_C
 503:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref group_syspm driver for more information about power mode transitions and
 504:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * callback registration.
 505:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 506:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Recall that during configuration of the \ref group_sar_init_struct_ctrl "ctrl" field,
 507:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * the SARMUX can be configured to remain enabled in Deep Sleep mode.
 508:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * All other blocks (SARADC, REFBUF, and SARSEQ) do not support Deep Sleep mode operation.
 509:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 510:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_more_information More Information
 511:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * For more information on the SAR ADC subsystem, refer to the technical reference manual (TRM).
 512:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 513:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_MISRA MISRA-C Compliance]
 514:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 515:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This driver has the following specific deviations:
 516:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 517:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * <table class="doxtable">
 518:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 519:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>MISRA Rule</th>
 520:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>Rule Class (Required/Advisory)</th>
 521:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>Rule Description</th>
 522:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>Description of Deviation(s)</th>
 523:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 524:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 525:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>11.4</td>
 526:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Advisory</td>
 527:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>A cast should not be performed between a pointer to object type and a different pointer t
 528:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>The cy_syspm driver defines the pointer to void in the \ref cy_stc_syspm_callback_params_
 529:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       This SAR driver implements a Deep Sleep callback conforming to the cy_syspm driver requirem
 530:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       When the callback is called, the base should point to the SAR_Type register address.
 531:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     </td>
 532:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 533:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * </table>
 534:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 535:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_changelog Changelog
 536:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * <table class="doxtable">
 537:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr><th>Version</th><th>Changes</th><th>Reason for Change</th></tr>
 538:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 539:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td rowspan="2">1.20</td>
 540:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Flattened the organization of the driver source code into the single source directory and
 541:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Driver library directory-structure simplification.</td>
 542:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 543:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 544:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Added register access layer. Use register access macros instead
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 11


 545:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *         of direct register access using dereferenced pointers.</td>
 546:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Makes register access device-independent, so that the PDL does 
 547:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *         not need to be recompiled for each supported part number.</td>
 548:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 549:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 550:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td rowspan="3">1.10</td>
 551:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td> Added workaround for parts with out of range CAP_TRIM in Init API.</td>
 552:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td> Correct CAP_TRIM is necessary achieving specified SAR ADC linearity</td>
 553:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 554:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 555:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td> Turn off the entire hardware block only if the SARMUX is not enabled 
 556:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *          for Deep Sleep operation.                
 557:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     </td>
 558:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td> Improvement of the \ref Cy_SAR_DeepSleep flow</td>
 559:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 560:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 561:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Updated "Low Power Support" section to describe registering the Deep Sleep callback.
 562:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *         Added parenthesis around logical AND operation in Sleep API.</td>
 563:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Documentation update and clarification</td>
 564:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 565:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 566:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>1.0</td>
 567:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Initial version</td>
 568:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td></td>
 569:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 570:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * </table>
 571:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 572:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \defgroup group_sar_macros Macros
 573:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \defgroup group_sar_functions Functions
 574:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   \{
 575:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_functions_basic         Initialization and Basic Functions
 576:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_functions_power         Low Power Callback
 577:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_functions_config        Run-time Configuration Functions
 578:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_functions_countsto      Counts Conversion Functions
 579:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_functions_interrupt     Interrupt Functions
 580:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_functions_switches      SARMUX Switch Control Functions
 581:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_functions_helper        Useful Configuration Query Functions
 582:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   \}
 583:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \defgroup group_sar_globals Global Variables
 584:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \defgroup group_sar_data_structures Data Structures
 585:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \defgroup group_sar_enums Enumerated Types
 586:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   \{
 587:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_ctrl_register_enums         Control Register Enums
 588:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_sample_ctrl_register_enums  Sample Control Register Enums
 589:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_sample_time_shift_enums     Sample Time Register Enums
 590:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_range_thres_register_enums  Range Interrupt Register Enums
 591:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_chan_config_register_enums  Channel Configuration Register Enums
 592:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_intr_mask_t_register_enums  Interrupt Mask Register Enums
 593:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_mux_switch_register_enums   SARMUX Switch Control Register Enums
 594:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   \}
 595:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 596:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 597:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #if !defined(CY_SAR_H)
 598:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_H
 599:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 600:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #include <stdint.h>
 601:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #include <stdbool.h>
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 12


 602:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #include <stddef.h>
 603:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #include "cy_device_headers.h"
 604:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #include "cy_syslib.h"
 605:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #include "cy_syspm.h"
 606:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #include "cy_device.h"
 607:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 608:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #ifdef CY_IP_MXS40PASS_SAR
 609:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 610:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #if defined(__cplusplus)
 611:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** extern "C" {
 612:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #endif
 613:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 614:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_macros
 615:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
 616:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 617:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 618:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Driver major version */
 619:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_DRV_VERSION_MAJOR        1
 620:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 621:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Driver minor version */
 622:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_DRV_VERSION_MINOR        20
 623:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 624:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** SAR driver identifier */
 625:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_ID                       CY_PDL_DRV_ID(0x01u)
 626:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 627:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Maximum number of channels */
 628:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_MAX_NUM_CHANNELS         (PASS_SAR_SAR_CHANNELS)
 629:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 630:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \cond INTERNAL */
 631:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_DEINIT                   (0uL)             /**< De-init value for most SAR registers
 632:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SAMPLE_TIME_DEINIT       ((3uL << SAR_SAMPLE_TIME01_SAMPLE_TIME0_Pos) | (3uL << SAR_
 633:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CLEAR_ALL_SWITCHES       (0x3FFFFFFFuL)    /**< Value to clear all SARMUX switches *
 634:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_DEINIT_SQ_CTRL           (SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P0_Msk \
 635:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P1_Msk \
 636:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P2_Msk \
 637:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P3_Msk \
 638:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P4_Msk \
 639:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P5_Msk \
 640:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P6_Msk \
 641:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P7_Msk \
 642:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_VSSA_Msk \
 643:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_TEMP_Msk \
 644:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_AMUXBUSA_Msk \
 645:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_AMUXBUSB_Msk \
 646:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_SARBUS0_Msk \
 647:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_SARBUS1_Msk)
 648:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_REG_CTRL_MASK            (SAR_CTRL_PWR_CTRL_VREF_Msk \
 649:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_VREF_SEL_Msk \
 650:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_VREF_BYP_CAP_EN_Msk \
 651:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_NEG_SEL_Msk \
 652:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_SAR_HW_CTRL_NEGVREF_Msk \
 653:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_COMP_DLY_Msk \
 654:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_REFBUF_EN_Msk \
 655:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_COMP_PWR_Msk \
 656:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_DEEPSLEEP_ON_Msk \
 657:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_DSI_SYNC_CONFIG_Msk \
 658:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_DSI_MODE_Msk \
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 13


 659:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_SWITCH_DISABLE_Msk \
 660:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_ENABLED_Msk)
 661:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_REG_SAMPLE_CTRL_MASK     (SAR_SAMPLE_CTRL_LEFT_ALIGN_Msk \
 662:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_Msk \
 663:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_DIFFERENTIAL_SIGNED_Msk \
 664:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_AVG_CNT_Msk \
 665:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_AVG_SHIFT_Msk \
 666:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_AVG_MODE_Msk \
 667:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_CONTINUOUS_Msk \
 668:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_DSI_TRIGGER_EN_Msk \
 669:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_Msk \
 670:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_DSI_SYNC_TRIGGER_Msk \
 671:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_UAB_SCAN_MODE_Msk \
 672:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_REPEAT_INVALID_Msk \
 673:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_VALID_SEL_Msk \
 674:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_VALID_SEL_EN_Msk \
 675:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_VALID_IGNORE_Msk \
 676:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_TRIGGER_OUT_EN_Msk \
 677:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_EOS_DSI_OUT_EN_Msk)
 678:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_REG_CHAN_CONFIG_MASK     (SAR_CHAN_CONFIG_POS_PIN_ADDR_Msk \
 679:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_POS_PORT_ADDR_Msk \
 680:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_DIFFERENTIAL_EN_Msk \
 681:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_AVG_EN_Msk \
 682:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_SAMPLE_TIME_SEL_Msk \
 683:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_NEG_PIN_ADDR_Msk \
 684:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_NEG_PORT_ADDR_Msk \
 685:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_NEG_ADDR_EN_Msk \
 686:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_DSI_OUT_EN_Msk)
 687:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_REG_SAMPLE_TIME_MASK     (SAR_SAMPLE_TIME01_SAMPLE_TIME0_Msk | SAR_SAMPLE_TIME01_SAM
 688:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 689:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_2US_DELAY                (2u)              /**< Delay used in Enable API function to
 690:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_10V_COUNTS               (10.0F)           /**< Value of 10 in volts */
 691:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_10MV_COUNTS              (10000)           /**< Value of 10 in millivolts */
 692:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_10UV_COUNTS              (10000000L)       /**< Value of 10 in microvolts */
 693:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_WRK_MAX_12BIT            (0x00001000uL)    /**< Maximum SAR work register value for 
 694:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_RANGE_LIMIT_MAX          (0xFFFFuL)        /**< Maximum value for the low and high r
 695:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CAP_TRIM_MAX             (0x3FuL)          /**< Maximum value for CAP_TRIM */
 696:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CAP_TRIM_MIN             (0x00uL)          /**< Maximum value for CAP_TRIM */
 697:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CAP_TRIM                 (0x0BuL)          /**< Correct cap trim value */
 698:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 699:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /**< Macros for conditions used in CY_ASSERT calls */
 700:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CHANNUM(chan)            ((chan) < CY_SAR_MAX_NUM_CHANNELS)
 701:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CHANMASK(mask)           ((mask) < (1uL << CY_SAR_MAX_NUM_CHANNELS))
 702:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_RANGECOND(cond)          ((cond) <= CY_SAR_RANGE_COND_OUTSIDE)
 703:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_INTRMASK(mask)           ((mask) <= (uint32_t)(CY_SAR_INTR_EOS_MASK | CY_SAR_INTR_OV
 704:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_TRIGGER(mode)            (((mode) == CY_SAR_TRIGGER_MODE_FW_ONLY) \
 705:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         || ((mode) == CY_SAR_TRIGGER_MODE_FW_AND_HWEDGE) \
 706:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         || ((mode) == CY_SAR_TRIGGER_MODE_FW_AND_HWLEVEL))
 707:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_RETURN(mode)             (((mode) == CY_SAR_RETURN_STATUS) || ((mode) == CY_SAR_WAIT
 708:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_STARTCONVERT(mode)       (((mode) == CY_SAR_START_CONVERT_SINGLE_SHOT) || ((mode) ==
 709:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_RANGE_LIMIT(limit)       ((limit) <= CY_SAR_RANGE_LIMIT_MAX)
 710:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SWITCHSELECT(select)     ((select) == CY_SAR_MUX_SWITCH0)
 711:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SWITCHMASK(mask)         ((mask) <= CY_SAR_CLEAR_ALL_SWITCHES)
 712:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SWITCHSTATE(state)       (((state) == CY_SAR_SWITCH_OPEN) || ((state) == CY_SAR_SWIT
 713:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SQMASK(mask)             (((mask) & (~CY_SAR_DEINIT_SQ_CTRL)) == 0uL)
 714:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SQCTRL(ctrl)             (((ctrl) == CY_SAR_SWITCH_SEQ_CTRL_ENABLE) || ((ctrl) == CY
 715:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 14


 716:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CTRL(value)              (((value) & (~CY_SAR_REG_CTRL_MASK)) == 0uL)
 717:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SAMPLE_CTRL(value)       (((value) & (~CY_SAR_REG_SAMPLE_CTRL_MASK)) == 0uL)
 718:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SAMPLE_TIME(value)       (((value) & (~CY_SAR_REG_SAMPLE_TIME_MASK)) == 0uL)
 719:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CHAN_CONFIG(value)       (((value) & (~CY_SAR_REG_CHAN_CONFIG_MASK)) == 0uL)
 720:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \endcond */
 721:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 722:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} group_sar_macro */
 723:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 724:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_globals
 725:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
 726:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 727:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /***************************************
 728:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *        Global Variables
 729:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ***************************************/
 730:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 731:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** This array is used to calibrate the offset for each channel.
 732:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 733:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * At initialization, channels that are single-ended, signed, and with Vneg = Vref
 734:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * have an offset of -(2^12)/2 = -2048. All other channels have an offset of 0.
 735:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The offset can be overridden using \ref Cy_SAR_SetOffset.
 736:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 737:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The channel offsets are used by the \ref Cy_SAR_CountsTo_Volts, \ref Cy_SAR_CountsTo_mVolts, and
 738:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref Cy_SAR_CountsTo_uVolts functions to convert counts to voltage.
 739:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 740:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 741:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** extern volatile int16_t Cy_SAR_offset[CY_SAR_MAX_NUM_CHANNELS];
 742:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 743:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** This array is used to calibrate the gain for each channel.
 744:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 745:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * It is set at initialization and the value depends on the SARADC resolution
 746:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * and voltage reference, 10*(2^12)/(2*Vref).
 747:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The gain can be overridden using \ref Cy_SAR_SetGain.
 748:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 749:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The channel gains are used by the \ref Cy_SAR_CountsTo_Volts, \ref Cy_SAR_CountsTo_mVolts, and
 750:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref Cy_SAR_CountsTo_uVolts functions to convert counts to voltage.
 751:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 752:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** extern volatile int32_t Cy_SAR_countsPer10Volt[CY_SAR_MAX_NUM_CHANNELS];
 753:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 754:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} group_sar_globals */
 755:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 756:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_enums
 757:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
 758:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 759:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 760:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /******************************************************************************
 761:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****  * Enumerations
 762:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****  *****************************************************************************/
 763:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 764:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** The SAR status/error code definitions */
 765:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 766:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 767:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SUCCESS    = 0x00uL,                                      /**< Success */
 768:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_BAD_PARAM  = CY_SAR_ID | CY_PDL_STATUS_ERROR | 0x01uL,    /**< Invalid input parameters 
 769:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_TIMEOUT    = CY_SAR_ID | CY_PDL_STATUS_ERROR | 0x02uL,    /**< A timeout occurred */
 770:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CONVERSION_NOT_COMPLETE = CY_SAR_ID | CY_PDL_STATUS_ERROR | 0x03uL,    /**< SAR conversi
 771:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_status_t;
 772:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 15


 773:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Definitions for starting a conversion used in \ref Cy_SAR_StartConvert */
 774:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 775:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 776:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_START_CONVERT_SINGLE_SHOT = 0uL, /**< Start a single scan (one shot) from firmware */
 777:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_START_CONVERT_CONTINUOUS  = 1uL, /**< Continuously scan enabled channels and ignores all
 778:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_start_convert_sel_t;
 779:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 780:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Definitions for the return mode used in \ref Cy_SAR_IsEndConversion */
 781:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 782:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 783:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RETURN_STATUS    = 0uL,      /**< Immediately returns the conversion status. */
 784:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_WAIT_FOR_RESULT  = 1uL,    /**< Does not return a result until the conversion of all seq
 785:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_return_mode_t;
 786:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 787:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Switch state definitions */
 788:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 789:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 790:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SWITCH_OPEN      = 0uL,    /**< Open the switch */
 791:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SWITCH_CLOSE     = 1uL     /**< Close the switch */
 792:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_switch_state_t;
 793:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 794:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Definitions for sequencer control of switches */
 795:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 796:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 797:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SWITCH_SEQ_CTRL_DISABLE = 0uL, /**< Disable sequencer control of switch */
 798:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SWITCH_SEQ_CTRL_ENABLE  = 1uL  /**< Enable sequencer control of switch */
 799:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_switch_sar_seq_ctrl_t;
 800:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 801:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Switch register selection for \ref Cy_SAR_SetAnalogSwitch and \ref Cy_SAR_GetAnalogSwitch */
 802:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 803:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 804:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SWITCH0  = 0uL,      /**< SARMUX switch control register */
 805:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_switch_register_sel_t;
 806:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 807:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_ctrl_register_enums
 808:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of enumerations aids in configuring the SAR CTRL register
 809:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
 810:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 811:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Reference voltage buffer power mode definitions */
 812:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 813:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 814:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_100     = 0uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< Full power (100%) */
 815:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_80      = 1uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 80% power */
 816:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_60      = 2uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 60% power */
 817:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_50      = 3uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 50% power */
 818:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_40      = 4uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 40% power */
 819:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_30      = 5uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 30% power */
 820:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_20      = 6uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 20% power */
 821:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_10      = 7uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 10% power */
 822:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_pwr_ctrl_vref_t;
 823:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 824:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Reference voltage selection definitions */
 825:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 826:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 827:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_SEL_BGR         = 4uL << SAR_CTRL_VREF_SEL_Pos,     /**< System wide bandgap from \
 828:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_SEL_EXT         = 5uL << SAR_CTRL_VREF_SEL_Pos,     /**< External Vref direct from 
 829:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_SEL_VDDA_DIV_2  = 6uL << SAR_CTRL_VREF_SEL_Pos,     /**< Vdda/2 (Vref buffer on) */
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 16


 830:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_SEL_VDDA        = 7uL << SAR_CTRL_VREF_SEL_Pos      /**< Vdda */
 831:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_vref_sel_t;
 832:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 833:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Vref bypass cap enable.
 834:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * When enabled, a bypass capacitor should
 835:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * be connected to the dedicated Vref pin of the device.
 836:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Refer to the device datasheet for the minimum bypass capacitor value to use.
 837:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 838:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 839:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 840:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_BYPASS_CAP_DISABLE = 0uL << SAR_CTRL_VREF_BYP_CAP_EN_Pos,    /**< Disable Vref bypass ca
 841:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_BYPASS_CAP_ENABLE  = 1uL << SAR_CTRL_VREF_BYP_CAP_EN_Pos     /**< Enable Vref bypass cap
 842:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_bypass_cap_t;
 843:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 844:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Negative terminal (Vminus) selection definitions for single-ended channels.
 845:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 846:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The Vminus input for single ended channels can be connected to
 847:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Vref, VSSA, or routed out to an external pin.
 848:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The options for routing to a pin are through Pin 1, Pin 3, Pin 5, or Pin 7
 849:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * of the SARMUX dedicated port or an acore wire in AROUTE, if available on the device.
 850:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 851:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref CY_SAR_NEG_SEL_VSSA_KELVIN comes straight from a Vssa pad without any shared branches
 852:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * so as to keep quiet and avoid voltage drops.
 853:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 854:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 855:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 856:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_SEL_VSSA_KELVIN  = 0uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to VSSA_KELVIN 
 857:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_SEL_P1           = 2uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to Pin 1 of SAR
 858:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_SEL_P3           = 3uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to Pin 3 of SAR
 859:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_SEL_P5           = 4uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to Pin 5 of SAR
 860:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_SEL_P7           = 5uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to Pin 6 of SAR
 861:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_SEL_ACORE        = 6uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to an ACORE in 
 862:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_SEL_VREF         = 7uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to VREF input o
 863:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_neg_sel_t;
 864:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 865:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Enable hardware control of the switch between Vref and the Vminus input */
 866:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 867:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 868:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CTRL_NEGVREF_FW_ONLY = 0uL << SAR_CTRL_SAR_HW_CTRL_NEGVREF_Pos,    /**< Only firmware co
 869:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CTRL_NEGVREF_HW      = 1uL << SAR_CTRL_SAR_HW_CTRL_NEGVREF_Pos     /**< Enable hardware 
 870:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_hw_ctrl_negvref_t;
 871:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 872:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the comparator latch delay */
 873:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 874:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 875:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CTRL_COMP_DLY_2P5    = 0uL << SAR_CTRL_COMP_DLY_Pos,    /**< 2.5 ns delay, use for SAR c
 876:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CTRL_COMP_DLY_4      = 1uL << SAR_CTRL_COMP_DLY_Pos,    /**< 4 ns delay, use for SAR con
 877:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CTRL_COMP_DLY_10     = 2uL << SAR_CTRL_COMP_DLY_Pos,    /**< 10 ns delay, use for SAR co
 878:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CTRL_COMP_DLY_12     = 3uL << SAR_CTRL_COMP_DLY_Pos     /**< 12 ns delay, use for SAR co
 879:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_comp_delay_t;
 880:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 881:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the comparator power mode */
 882:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 883:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 884:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_100     = 0uL << SAR_CTRL_COMP_PWR_Pos,      /**< 100% power, use this for > 2 
 885:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_80      = 1uL << SAR_CTRL_COMP_PWR_Pos,      /**< 80% power, use this for 1.5 -
 886:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_60      = 2uL << SAR_CTRL_COMP_PWR_Pos,      /**< 60% power, use this for 1.0 -
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 17


 887:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_50      = 3uL << SAR_CTRL_COMP_PWR_Pos,      /**< 50% power, use this for 500 k
 888:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_40      = 4uL << SAR_CTRL_COMP_PWR_Pos,      /**< 40% power, use this for 250 -
 889:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_30      = 5uL << SAR_CTRL_COMP_PWR_Pos,      /**< 30% power, use this for 100 -
 890:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_20      = 6uL << SAR_CTRL_COMP_PWR_Pos,      /**< 20% power, use this for TDB s
 891:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_10      = 7uL << SAR_CTRL_COMP_PWR_Pos,      /**< 10% power, use this for < 100
 892:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_comp_pwr_t;
 893:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 894:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Enable or disable the SARMUX during Deep Sleep power mode. */
 895:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 896:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 897:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_DEEPSLEEP_SARMUX_OFF = 0uL << SAR_CTRL_DEEPSLEEP_ON_Pos,    /**< Disable SARMUX operatio
 898:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_DEEPSLEEP_SARMUX_ON  = 1uL << SAR_CTRL_DEEPSLEEP_ON_Pos     /**< Enable SARMUX operation
 899:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_sarmux_deep_sleep_t;
 900:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 901:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Enable or disable the SARSEQ control of routing switches */
 902:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 903:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 904:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SARSEQ_SWITCH_ENABLE    = 0uL << SAR_CTRL_SWITCH_DISABLE_Pos,    /**< Enable the SARSEQ 
 905:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SARSEQ_SWITCH_DISABLE   = 1uL << SAR_CTRL_SWITCH_DISABLE_Pos     /**< Disable the SARSEQ
 906:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_sarseq_routing_switches_t;
 907:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 908:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /* \} */
 909:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 910:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_sample_ctrl_register_enums
 911:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of enumerations are used in configuring the SAR SAMPLE_CTRL register
 912:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
 913:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 914:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure result alignment, either left or right aligned.
 915:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 916:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \note
 917:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Averaging always uses right alignment. If the \ref CY_SAR_LEFT_ALIGN
 918:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * is selected with averaging enabled, it is ignored.
 919:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 920:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \note
 921:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The voltage conversion functions (\ref Cy_SAR_CountsTo_Volts, \ref Cy_SAR_CountsTo_mVolts,
 922:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref Cy_SAR_CountsTo_uVolts) are only valid for right alignment.
 923:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * */
 924:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 925:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 926:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RIGHT_ALIGN  = 0uL << SAR_SAMPLE_CTRL_LEFT_ALIGN_Pos,    /**< Right align result data to
 927:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_LEFT_ALIGN   = 1uL << SAR_SAMPLE_CTRL_LEFT_ALIGN_Pos     /**< Left align result data to 
 928:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_sample_ctrl_result_align_t;
 929:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 930:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure format, signed or unsigned, of single-ended channels */
 931:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 932:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 933:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SINGLE_ENDED_UNSIGNED  = 0uL << SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_Pos,    /**< Result 
 934:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SINGLE_ENDED_SIGNED    = 1uL << SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_Pos     /**< Result 
 935:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_sample_ctrl_single_ended_format_t;
 936:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 937:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure format, signed or unsigned, of differential channels */
 938:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 939:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 940:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_DIFFERENTIAL_UNSIGNED  = 0uL << SAR_SAMPLE_CTRL_DIFFERENTIAL_SIGNED_Pos,    /**< Result 
 941:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_DIFFERENTIAL_SIGNED    = 1uL << SAR_SAMPLE_CTRL_DIFFERENTIAL_SIGNED_Pos     /**< Result 
 942:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_sample_ctrl_differential_format_t;
 943:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 18


 944:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure number of samples for averaging.
 945:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This applies only to channels with averaging enabled.
 946:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 947:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 948:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 949:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_2          = 0uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 950:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_4          = 1uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 951:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_8          = 2uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 952:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_16         = 3uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 953:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_32         = 4uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 954:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_64         = 5uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 955:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_128        = 6uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 956:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_256        = 7uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos     /**< Set samples averaged to
 957:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_sample_ctrl_avg_cnt_t;
 958:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 959:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the averaging mode.
 960:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 961:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Sequential accumulate and dump: a channel will be sampled back to back.
 962:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   The result is added to a running sum in a 20-bit register. At the end
 963:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   of the scan, the accumulated value is shifted right to fit into 16 bits
 964:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   and stored into the CHAN_RESULT register.
 965:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Sequential fixed:  a channel will be sampled back to back.
 966:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   The result is added to a running sum in a 20-bit register. At the end
 967:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   of the scan, the accumulated value is shifted right to fit into 12 bits
 968:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   and stored into the CHAN_RESULT register.
 969:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Interleaved: a channel will be sampled once per scan.
 970:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   The result is added to a running sum in a 16-bit register.
 971:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   In the scan where the final averaging count is reached,
 972:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   the accumulated value is shifted right to fit into 12 bits
 973:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   and stored into the CHAN_RESULT register.
 974:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   In all other scans, the CHAN_RESULT will have an invalid result.
 975:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   In interleaved mode, make sure that the averaging
 976:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   count is low enough to ensure that the intermediate value does not exceed 16 bits,
 977:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   that is averaging count is 16 or less. Otherwise, the MSBs will be lost.
 978:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   In the special case that averaging is enabled for all enabled channels
 979:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   and interleaved mode is used, the interrupt frequency
 980:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   will be reduced by a factor of the number of samples averaged.
 981:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 982:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 983:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 984:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_MODE_SEQUENTIAL_ACCUM    = 0uL,                               /**< Set mode to seque
 985:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_MODE_SEQUENTIAL_FIXED    = SAR_SAMPLE_CTRL_AVG_SHIFT_Msk,     /**< Set mode to seque
 986:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_MODE_INTERLEAVED         = SAR_SAMPLE_CTRL_AVG_MODE_Msk,      /**< Set mode to inter
 987:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_sample_ctrl_avg_mode_t;
 988:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 989:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the trigger mode.
 990:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 991:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Firmware triggering is always enabled and can be single shot or continuous.
 992:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Additionally, hardware triggering can be enabled with the option to be
 993:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * edge or level sensitive.
 994:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 995:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 996:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 997:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_TRIGGER_MODE_FW_ONLY        = 0uL,                                /**< Firmware trigger 
 998:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_TRIGGER_MODE_FW_AND_HWEDGE  = SAR_SAMPLE_CTRL_DSI_TRIGGER_EN_Msk, /**< Enable edge sensi
 999:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_TRIGGER_MODE_FW_AND_HWLEVEL = SAR_SAMPLE_CTRL_DSI_TRIGGER_EN_Msk | SAR_SAMPLE_CTRL_DSI_T
1000:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_sample_ctrl_trigger_mode_t;
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 19


1001:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1002:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /* \} */
1003:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1004:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_sample_time_shift_enums
1005:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of enumerations aids in configuring the SAR SAMPLE_TIME* registers
1006:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1007:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1008:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the sample time by using these shifts */
1009:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1010:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1011:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SAMPLE_TIME0_SHIFT       = SAR_SAMPLE_TIME01_SAMPLE_TIME0_Pos,             /**< Shift fo
1012:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SAMPLE_TIME1_SHIFT       = SAR_SAMPLE_TIME01_SAMPLE_TIME1_Pos,             /**< Shift fo
1013:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SAMPLE_TIME2_SHIFT       = SAR_SAMPLE_TIME23_SAMPLE_TIME2_Pos,             /**< Shift fo
1014:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SAMPLE_TIME3_SHIFT       = SAR_SAMPLE_TIME23_SAMPLE_TIME3_Pos,             /**< Shift fo
1015:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_sample_time_shift_t;
1016:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /* \} */
1017:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1018:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_range_thres_register_enums
1019:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of enumerations aids in configuring the SAR RANGE* registers
1020:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1021:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1022:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the lower and upper thresholds for range detection
1023:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1024:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SARSEQ supports range detection to allow for automatic detection of sample
1025:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * values compared to two programmable thresholds without CPU involvement.
1026:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Range detection is defined by two global thresholds and a condition.
1027:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The RANGE_LOW value defines the lower threshold and RANGE_HIGH defines
1028:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * the upper threshold of the range.
1029:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1030:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Range detect is done after averaging, alignment, and sign extension (if applicable).
1031:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * In other words, the thresholds values must have the same data format as the result data.
1032:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Range detection is always done for all channels scanned. By making RANGE_INTR_MASK=0,
1033:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * the firmware can choose to ignore the range detect interrupt for any channel.
1034:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1035:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1036:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1037:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RANGE_LOW_SHIFT      = SAR_RANGE_THRES_RANGE_LOW_Pos,        /**< Shift for setting lowe
1038:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RANGE_HIGH_SHIFT     = SAR_RANGE_THRES_RANGE_HIGH_Pos,       /**< Shift for setting uppe
1039:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_range_thres_shift_t;
1040:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1041:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the condition (below, inside, above, or outside) of the range detection interrupt */
1042:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1043:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1044:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RANGE_COND_BELOW     = 0uL,  /**< Range interrupt detected when result < RANGE_LOW */
1045:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RANGE_COND_INSIDE    = 1uL,  /**< Range interrupt detected when RANGE_LOW <= result < RA
1046:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RANGE_COND_ABOVE     = 2uL,  /**< Range interrupt detected when RANGE_HIGH <= result */
1047:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RANGE_COND_OUTSIDE   = 3uL,  /**< Range interrupt detected when result < RANGE_LOW || RA
1048:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_range_detect_condition_t;
1049:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /* \} */
1050:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1051:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_chan_config_register_enums
1052:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of enumerations aids in configuring the SAR CHAN_CONFIG register
1053:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1054:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1055:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the input mode of the channel
1056:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1057:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Single ended channel: the \ref cy_en_sar_ctrl_neg_sel_t selection in the \ref group_sar_init_st
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 20


1058:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   determines what drives the Vminus pin
1059:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Differential paired: Vplus and Vminus are a pair. Bit 0 of \ref cy_en_sar_chan_config_pos_pin_a
1060:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   is ignored and considered to be 0.
1061:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   In other words, \ref cy_en_sar_chan_config_pos_pin_addr_t "POS_PIN_ADDR" points to the even pin
1062:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   The even pin is connected to Vplus and the odd pin is connected to Vminus.
1063:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   \ref cy_en_sar_chan_config_pos_port_addr_t "POS_PORT_ADDR" is used to identify the port that co
1064:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Differential unpaired: The \ref cy_en_sar_chan_config_neg_pin_addr_t "NEG_PIN_ADDR" and
1065:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   \ref cy_en_sar_chan_config_neg_port_addr_t "NEG_PORT_ADDR" determine what drives the Vminus pin
1066:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   This is a variation of differential mode with no even-odd pair limitation
1067:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1068:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1069:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1070:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_SINGLE_ENDED            = 0uL,                                     /**< Single ende
1071:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_DIFFERENTIAL_PAIRED     = SAR_CHAN_CONFIG_DIFFERENTIAL_EN_Msk,     /**< Differentia
1072:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_DIFFERENTIAL_UNPAIRED   = SAR_CHAN_CONFIG_NEG_ADDR_EN_Msk          /**< Differentia
1073:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_chan_config_input_mode_t;
1074:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1075:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure address of the pin connected to the Vplus terminal of the SARADC. */
1076:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1077:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1078:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_0     = 0uL,                                            /**< Pin 0 on 
1079:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_1     = 1uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 1 on 
1080:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_2     = 2uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 2 on 
1081:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_3     = 3uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 3 on 
1082:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_4     = 4uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 4 on 
1083:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_5     = 5uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 5 on 
1084:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_6     = 6uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 6 on 
1085:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_7     = 7uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 7 on 
1086:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_chan_config_pos_pin_addr_t;
1087:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1088:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure address of the port that contains the pin connected to the Vplus terminal of the SARA
1089:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1090:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - \ref CY_SAR_POS_PORT_ADDR_SARMUX is for the dedicated SARMUX port (8 pins)
1091:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Port 1 through 4 are respectively the pins of CTB0, CTB1, CTB2, and CTB3 (if present)
1092:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Port 7, 5, and 6 (VPORT0/1/2) are the groups of internal signals that can be selected
1093:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   in the SARMUX or AROUTE (if present).
1094:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1095:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * See the \ref group_sar_sarmux section for more guidance.
1096:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1097:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1098:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1099:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_SARMUX         = 0uL,                                       /**< Dedicated
1100:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_CTB0           = 1uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< Outputs f
1101:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_CTB1           = 2uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< Outputs f
1102:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_CTB2           = 3uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< Outputs f
1103:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_CTB3           = 4uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< Outputs f
1104:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_AROUTE_VIRT2   = 5uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< AROUTE vi
1105:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_AROUTE_VIRT1   = 6uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< AROUTE vi
1106:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_SARMUX_VIRT    = 7uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< SARMUX vi
1107:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_chan_config_pos_port_addr_t;
1108:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1109:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Enable or disable averaging for the channel */
1110:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1111:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1112:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_AVG_DISABLE      = 0uL,                                 /**< Disable averaging for 
1113:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_AVG_ENABLE       = 1uL << SAR_CHAN_CONFIG_AVG_EN_Pos    /**< Enable averaging for t
1114:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_chan_config_avg_en_t;
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 21


1115:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1116:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Select which sample time to use for the channel.
1117:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * There are four global samples times available set by \ref group_sar_init_struct_sampleTime01 and
1118:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref group_sar_init_struct_sampleTime23.
1119:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1120:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1121:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1122:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_SAMPLE_TIME_0     = 0uL,                                          /**< Use sample t
1123:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_SAMPLE_TIME_1     = 1uL << SAR_CHAN_CONFIG_SAMPLE_TIME_SEL_Pos,   /**< Use sample t
1124:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_SAMPLE_TIME_2     = 2uL << SAR_CHAN_CONFIG_SAMPLE_TIME_SEL_Pos,   /**< Use sample t
1125:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_SAMPLE_TIME_3     = 3uL << SAR_CHAN_CONFIG_SAMPLE_TIME_SEL_Pos,   /**< Use sample t
1126:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_chan_config_sample_time_t;
1127:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1128:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure address of the pin connected to the Vminus terminal of the SARADC. */
1129:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1130:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1131:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_0     = 0uL,                                            /**< Pin 0 on 
1132:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_1     = 1uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 1 on 
1133:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_2     = 2uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 2 on 
1134:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_3     = 3uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 3 on 
1135:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_4     = 4uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 4 on 
1136:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_5     = 5uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 5 on 
1137:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_6     = 6uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 6 on 
1138:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_7     = 7uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 7 on 
1139:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_chan_config_neg_pin_addr_t;
1140:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1141:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure address of the port that contains the pin connected to the Vminus terminal of the SAR
1142:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1143:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Port 0 is 8 pins of the SARMUX
1144:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Port 7, 5, and 6 (VPORT0/1/2) are the groups of internal signals that can be selected
1145:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   in the SARMUX or AROUTE (if present).
1146:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1147:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1148:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1149:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_PORT_ADDR_SARMUX         = 0uL,                                       /**< Dedicated
1150:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_PORT_ADDR_AROUTE_VIRT2   = 5uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< AROUTE vi
1151:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_PORT_ADDR_AROUTE_VIRT1   = 6uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< AROUTE vi
1152:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_PORT_ADDR_SARMUX_VIRT    = 7uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< SARMUX vi
1153:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_chan_config_neg_port_addr_t;
1154:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1155:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /* \} */
1156:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1157:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_intr_mask_t_register_enums
1158:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of enumerations aids in configuring the SAR INTR_MASK register
1159:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1160:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1161:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure which signal will cause an interrupt event.
1162:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1163:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - End of scan (EOS): occurs after completing a scan of all enabled channels
1164:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Overflow: occurs when hardware sets a new EOS interrupt while the previous interrupt
1165:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   has not be cleared by the firmware
1166:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Firmware collision: occurs when firmware attempts to start one-shot
1167:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   conversion while the SAR is busy.
1168:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1169:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Enable all, one, or none of the interrupt events.
1170:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1171:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 22


1172:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1173:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_INTR_MASK_NONE           = 0uL,                                  /**< Disable all interr
1174:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_INTR_EOS_MASK            = SAR_INTR_MASK_EOS_MASK_Msk,           /**< Enable end of scan
1175:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_INTR_OVERFLOW_MASK       = SAR_INTR_MASK_OVERFLOW_MASK_Msk,      /**< Enable overflow in
1176:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_INTR_FW_COLLISION_MASK   = SAR_INTR_MASK_FW_COLLISION_MASK_Msk,  /**< Enable firmware co
1177:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_intr_mask_t;
1178:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1179:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /* \} */
1180:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1181:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_mux_switch_register_enums
1182:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of enumerations aids in configuring the \ref group_sar_init_struct_muxSwitch and \ref gr
1183:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1184:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1185:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1186:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Firmware control for the SARMUX switches to connect analog signals to the SAR ADC
1187:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1188:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * To close multiple switches, "OR" the enum values together.
1189:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1190:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * See the \ref group_sar_sarmux section for more guidance.
1191:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1192:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1193:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1194:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     /* SARMUX pins to Vplus */
1195:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P0_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P0_VPLUS_Msk,    /**< Switch between Pi
1196:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P1_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P1_VPLUS_Msk,    /**< Switch between Pi
1197:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P2_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P2_VPLUS_Msk,    /**< Switch between Pi
1198:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P3_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P3_VPLUS_Msk,    /**< Switch between Pi
1199:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P4_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P4_VPLUS_Msk,    /**< Switch between Pi
1200:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P5_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P5_VPLUS_Msk,    /**< Switch between Pi
1201:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P6_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P6_VPLUS_Msk,    /**< Switch between Pi
1202:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P7_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P7_VPLUS_Msk,    /**< Switch between Pi
1203:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1204:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     /* SARMUX pins to Vminus */
1205:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P0_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P0_VMINUS_Msk,   /**< Switch between Pi
1206:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P1_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P1_VMINUS_Msk,   /**< Switch between Pi
1207:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P2_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P2_VMINUS_Msk,   /**< Switch between Pi
1208:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P3_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P3_VMINUS_Msk,   /**< Switch between Pi
1209:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P4_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P4_VMINUS_Msk,   /**< Switch between Pi
1210:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P5_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P5_VMINUS_Msk,   /**< Switch between Pi
1211:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P6_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P6_VMINUS_Msk,   /**< Switch between Pi
1212:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P7_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P7_VMINUS_Msk,   /**< Switch between Pi
1213:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1214:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     /* Vssa to Vminus and temperature sensor to Vplus */
1215:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_VSSA_VMINUS      = SAR_MUX_SWITCH0_MUX_FW_VSSA_VMINUS_Msk,    /**< Switch between
1216:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_TEMP_VPLUS       = SAR_MUX_SWITCH0_MUX_FW_TEMP_VPLUS_Msk,     /**< Switch between
1217:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1218:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     /* Amuxbus A and B to Vplus and Vminus */
1219:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_AMUXBUSA_VPLUS   = SAR_MUX_SWITCH0_MUX_FW_AMUXBUSA_VPLUS_Msk,     /**< Switch bet
1220:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_AMUXBUSB_VPLUS   = SAR_MUX_SWITCH0_MUX_FW_AMUXBUSB_VPLUS_Msk,     /**< Switch bet
1221:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_AMUXBUSA_VMINUS  = SAR_MUX_SWITCH0_MUX_FW_AMUXBUSA_VMINUS_Msk,    /**< Switch bet
1222:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_AMUXBUSB_VMINUS  = SAR_MUX_SWITCH0_MUX_FW_AMUXBUSB_VMINUS_Msk,    /**< Switch bet
1223:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1224:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     /* Sarbus 0 and 1 to Vplus and Vminus */
1225:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_SARBUS0_VPLUS    = SAR_MUX_SWITCH0_MUX_FW_SARBUS0_VPLUS_Msk,      /**< Switch bet
1226:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_SARBUS1_VPLUS    = SAR_MUX_SWITCH0_MUX_FW_SARBUS1_VPLUS_Msk,      /**< Switch bet
1227:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_SARBUS0_VMINUS   = SAR_MUX_SWITCH0_MUX_FW_SARBUS0_VMINUS_Msk,     /**< Switch bet
1228:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_SARBUS1_VMINUS   = SAR_MUX_SWITCH0_MUX_FW_SARBUS1_VMINUS_Msk,     /**< Switch bet
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 23


1229:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1230:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     /* SARMUX pins to Core IO */
1231:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P4_COREIO0       = SAR_MUX_SWITCH0_MUX_FW_P4_COREIO0_Msk,      /**< Switch betwee
1232:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P5_COREIO1       = SAR_MUX_SWITCH0_MUX_FW_P5_COREIO1_Msk,      /**< Switch betwee
1233:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P6_COREIO2       = SAR_MUX_SWITCH0_MUX_FW_P6_COREIO2_Msk,      /**< Switch betwee
1234:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P7_COREIO3       = SAR_MUX_SWITCH0_MUX_FW_P7_COREIO3_Msk,      /**< Switch betwee
1235:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_mux_switch_fw_ctrl_t;
1236:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1237:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Mask definitions of SARMUX switches that can be controlled by the SARSEQ.
1238:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1239:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * To enable sequencer control of multiple switches, "OR" the enum values together.
1240:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1241:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * See the \ref group_sar_sarmux section for more guidance.
1242:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1243:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1244:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1245:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P0           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P0_Msk,        /**< Enable
1246:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P1           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P1_Msk,        /**< Enable
1247:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P2           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P2_Msk,        /**< Enable
1248:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P3           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P3_Msk,        /**< Enable
1249:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P4           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P4_Msk,        /**< Enable
1250:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P5           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P5_Msk,        /**< Enable
1251:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P6           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P6_Msk,        /**< Enable
1252:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P7           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P7_Msk,        /**< Enable
1253:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_VSSA         = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_VSSA_Msk,      /**< Enable
1254:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_TEMP         = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_TEMP_Msk,      /**< Enable
1255:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_AMUXBUSA     = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_AMUXBUSA_Msk,  /**< Enable
1256:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_AMUXBUSB     = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_AMUXBUSB_Msk,  /**< Enable
1257:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_SARBUS0      = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_SARBUS0_Msk,   /**< Enable
1258:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_SARBUS1      = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_SARBUS1_Msk,   /**< Enable
1259:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_mux_switch_sq_ctrl_t;
1260:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1261:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /* \} */
1262:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1263:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} group_sar_enums */
1264:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1265:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_data_structures
1266:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1267:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1268:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1269:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /***************************************
1270:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       Configuration Structures
1271:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ***************************************/
1272:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1273:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** This structure is used to initialize the SAR ADC subsystem.
1274:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1275:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SAR ADC subsystem is highly configurable with many options.
1276:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * When calling \ref Cy_SAR_Init, provide a pointer to the structure containing this configuration d
1277:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * A set of enumerations is provided in this
1278:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * driver to help with configuring this structure.
1279:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1280:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * See the \ref group_sar_initialization section for guidance.
1281:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** **/
1282:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef struct
1283:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1284:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t ctrl;                                      /**< Control register settings (applies to 
1285:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t sampleCtrl;                                /**< Sample control register settings (appl
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 24


1286:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t sampleTime01;                              /**< Sample time in ADC clocks for Sample T
1287:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t sampleTime23;                              /**< Sample time in ADC clocks for Sample T
1288:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t rangeThres;                                /**< Range detect threshold register for al
1289:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     cy_en_sar_range_detect_condition_t rangeCond;       /**< Range detect condition (below, inside,
1290:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t chanEn;                                    /**< Enable bits for the channels */
1291:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t chanConfig[CY_SAR_MAX_NUM_CHANNELS];       /**< Channel configuration */
1292:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t intrMask;                                  /**< Interrupt enable mask */
1293:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t satIntrMask;                               /**< Saturation detection interrupt enable 
1294:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t rangeIntrMask;                             /**< Range detection interrupt enable mask 
1295:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t muxSwitch;                                 /**< SARMUX firmware switches to connect an
1296:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t muxSwitchSqCtrl;                           /**< Enable SARSEQ control of specific SARM
1297:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     bool configRouting;                                 /**< Configure or ignore routing related re
1298:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t vrefMvValue;                               /**< Reference voltage in millivolts used i
1299:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** } cy_stc_sar_config_t;
1300:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1301:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** This structure is used by the driver to backup the state of the SAR
1302:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * before entering sleep so that it can be re-enabled after waking up */
1303:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef struct
1304:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1305:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t hwEnabled;         /**< SAR enabled state */
1306:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t continuous;        /**< State of the continuous bit */
1307:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** } cy_stc_sar_state_backup_t;
1308:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1309:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} group_sar_data_structures */
1310:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1311:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions
1312:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1313:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1314:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1315:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** This macro is for backward compatibility macro for driver v1.10 and before, 
1316:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****  * the preferred API is \ref Cy_SAR_DeepSleep */
1317:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define Cy_SAR_Sleep    Cy_SAR_DeepSleep
1318:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1319:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /***************************************
1320:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *        Function Prototypes
1321:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ***************************************/
1322:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1323:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_basic
1324:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of functions is for initialization and basic usage
1325:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1326:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1327:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** cy_en_sar_status_t Cy_SAR_Init(SAR_Type *base, const cy_stc_sar_config_t *config);
1328:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** cy_en_sar_status_t Cy_SAR_DeInit(SAR_Type *base, bool deInitRouting);
1329:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_Enable(SAR_Type *base);
1330:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_Disable(SAR_Type *base);
1331:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_StartConvert(SAR_Type *base, cy_en_sar_start_convert_sel_t startSelect);
1332:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_StopConvert(SAR_Type *base);
1333:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** cy_en_sar_status_t Cy_SAR_IsEndConversion(SAR_Type *base, cy_en_sar_return_mode_t retMode);
1334:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** int16_t Cy_SAR_GetResult16(const SAR_Type *base, uint32_t chan);
1335:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** int32_t Cy_SAR_GetResult32(const SAR_Type *base, uint32_t chan);
1336:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetChanResultUpdated(const SAR_Type *base);
1337:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1338:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1339:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_power
1340:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of functions is for Deep Sleep entry and exit
1341:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1342:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 25


1343:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** cy_en_syspm_status_t Cy_SAR_DeepSleepCallback(cy_stc_syspm_callback_params_t *callbackParams, cy_en
1344:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_DeepSleep(SAR_Type *base);
1345:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_Wakeup(SAR_Type *base);
1346:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1347:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1348:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_config
1349:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of functions allows changes to the SAR configuration
1350:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * after initialization.
1351:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1352:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1353:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_SetConvertMode(SAR_Type *base, cy_en_sar_sample_ctrl_trigger_mode_t mode);
1354:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetChanMask(SAR_Type *base, uint32_t enableMask);
1355:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_SetLowLimit(SAR_Type *base, uint32_t lowLimit);
1356:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_SetHighLimit(SAR_Type *base, uint32_t highLimit);
1357:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetRangeCond(SAR_Type *base, cy_en_sar_range_detect_condition_t cond);
1358:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1359:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1360:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_countsto
1361:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of functions performs counts to *volts conversions.
1362:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1363:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1364:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** int16_t Cy_SAR_RawCounts2Counts(const SAR_Type *base, uint32_t chan, int16_t adcCounts);
1365:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** float32_t Cy_SAR_CountsTo_Volts(const SAR_Type *base, uint32_t chan, int16_t adcCounts);
1366:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** int16_t Cy_SAR_CountsTo_mVolts(const SAR_Type *base, uint32_t chan, int16_t adcCounts);
1367:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** int32_t Cy_SAR_CountsTo_uVolts(const SAR_Type *base, uint32_t chan, int16_t adcCounts);
1368:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** cy_en_sar_status_t Cy_SAR_SetOffset(uint32_t chan, int16_t offset);
1369:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** cy_en_sar_status_t Cy_SAR_SetGain(uint32_t chan, int32_t adcGain);
1370:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1371:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1372:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_switches
1373:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of functions is for controlling/querying the SARMUX switches
1374:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1375:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1376:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_SetAnalogSwitch(SAR_Type *base, cy_en_sar_switch_register_sel_t switchSelect, uint32_t 
1377:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** uint32_t Cy_SAR_GetAnalogSwitch(const SAR_Type *base, cy_en_sar_switch_register_sel_t switchSelect)
1378:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetVssaVminusSwitch(SAR_Type *base, cy_en_sar_switch_state_t state);
1379:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_SetSwitchSarSeqCtrl(SAR_Type *base, uint32_t switchMask, cy_en_sar_switch_sar_seq_ctrl_
1380:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetVssaSarSeqCtrl(SAR_Type *base, cy_en_sar_switch_sar_seq_ctrl_t ctrl)
1381:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1382:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1383:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_interrupt
1384:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of functions are related to SAR interrupts.
1385:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1386:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1387:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetInterruptStatus(const SAR_Type *base);
1388:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_ClearInterrupt(SAR_Type *base, uint32_t intrMask);
1389:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetInterrupt(SAR_Type *base, uint32_t intrMask);
1390:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetInterruptMask(SAR_Type *base, uint32_t intrMask);
1391:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetInterruptMask(const SAR_Type *base);
1392:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetInterruptStatusMasked(const SAR_Type *base);
1393:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1394:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetRangeInterruptStatus(const SAR_Type *base);
1395:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_ClearRangeInterrupt(SAR_Type *base, uint32_t chanMask);
1396:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetRangeInterrupt(SAR_Type *base, uint32_t chanMask);
1397:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetRangeInterruptMask(SAR_Type *base, uint32_t chanMask);
1398:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetRangeInterruptMask(const SAR_Type *base);
1399:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetRangeInterruptStatusMasked(const SAR_Type *base);
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 26


1400:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1401:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetSatInterruptStatus(const SAR_Type *base);
1402:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_ClearSatInterrupt(SAR_Type *base, uint32_t chanMask);
1403:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetSatInterrupt(SAR_Type *base, uint32_t chanMask);
1404:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetSatInterruptMask(SAR_Type *base, uint32_t chanMask);
1405:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetSatInterruptMask(const SAR_Type *base);
1406:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetSatInterruptStatusMasked(const SAR_Type *base);
1407:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1408:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetInterruptCause(const SAR_Type *base);
1409:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1410:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1411:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1412:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_helper
1413:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of functions is for useful configuration query
1414:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1415:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1416:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** bool Cy_SAR_IsChannelSigned(const SAR_Type *base, uint32_t chan);
1417:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** bool Cy_SAR_IsChannelSingleEnded(const SAR_Type *base, uint32_t chan);
1418:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE bool Cy_SAR_IsChannelDifferential(const SAR_Type *base, uint32_t chan);
1419:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1420:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1421:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_basic
1422:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1423:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1424:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1425:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1426:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1427:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_Disable
1428:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1429:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1430:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Turn off the hardware block.
1431:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1432:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1433:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1434:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1435:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return None
1436:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1437:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
1438:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_Disable(SAR_Type *base)
1439:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
  27              		.loc 1 1439 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 8
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31 0000 80B5     		push	{r7, lr}
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 7, -8
  34              		.cfi_offset 14, -4
  35 0002 82B0     		sub	sp, sp, #8
  36              		.cfi_def_cfa_offset 16
  37 0004 00AF     		add	r7, sp, #0
  38              		.cfi_def_cfa_register 7
  39 0006 7860     		str	r0, [r7, #4]
1440:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     SAR_CTRL(base) &= ~SAR_CTRL_ENABLED_Msk;
  40              		.loc 1 1440 0
  41 0008 7B68     		ldr	r3, [r7, #4]
  42 000a 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 27


  43 000c 5B00     		lsls	r3, r3, #1
  44 000e 5A08     		lsrs	r2, r3, #1
  45 0010 7B68     		ldr	r3, [r7, #4]
  46 0012 1A60     		str	r2, [r3]
1441:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
  47              		.loc 1 1441 0
  48 0014 C046     		nop
  49 0016 BD46     		mov	sp, r7
  50 0018 02B0     		add	sp, sp, #8
  51              		@ sp needed
  52 001a 80BD     		pop	{r7, pc}
  53              		.cfi_endproc
  54              	.LFE79:
  55              		.size	Cy_SAR_Disable, .-Cy_SAR_Disable
  56              		.section	.rodata
  57              		.align	2
  58              	.LC0:
  59 0000 47656E65 		.ascii	"Generated_Source\\PSoC6\\pdl\\drivers/peripheral/sa"
  59      72617465 
  59      645F536F 
  59      75726365 
  59      5C50536F 
  60 0030 722F6379 		.ascii	"r/cy_sar.h\000"
  60      5F736172 
  60      2E6800
  61              		.section	.text.Cy_SAR_SetChanMask,"ax",%progbits
  62              		.align	2
  63              		.code	16
  64              		.thumb_func
  65              		.type	Cy_SAR_SetChanMask, %function
  66              	Cy_SAR_SetChanMask:
  67              	.LFB81:
1442:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1443:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1444:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1445:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_GetChanResultUpdated
1446:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1447:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1448:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Return whether the RESULT register has been updated or not.
1449:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * If the bit is high, the corresponding channel RESULT register was updated,
1450:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * i.e. was sampled during the previous scan and, in case of Interleaved averaging,
1451:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * reached the averaging count.
1452:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * If the bit is low, the corresponding channel is not enabled or the averaging count
1453:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * is not yet reached for Interleaved averaging.
1454:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1455:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1456:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1457:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1458:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return
1459:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Each bit of the result corresponds to the channel.
1460:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Bit 0 is for channel 0, etc.
1461:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1462:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \funcusage
1463:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1464:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_GET_CHAN_RESULT_UPDATED
1465:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1466:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 28


1467:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetChanResultUpdated(const SAR_Type *base)
1468:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1469:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     return SAR_CHAN_RESULT_UPDATED(base);
1470:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
1471:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1472:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1473:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_config
1474:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1475:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1476:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1477:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1478:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1479:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_SetChanMask
1480:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1481:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1482:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Set the enable/disable mask for the channels.
1483:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1484:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1485:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1486:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1487:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param enableMask
1488:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Channel enable/disable mask. Each bit corresponds to a channel.
1489:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - 0: the corresponding channel is disabled.
1490:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - 1: the corresponding channel is enabled; it will be included in the next scan.
1491:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1492:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return None
1493:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1494:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \funcusage
1495:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1496:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SET_CHAN_MASK
1497:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1498:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
1499:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetChanMask(SAR_Type *base, uint32_t enableMask)
1500:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
  68              		.loc 1 1500 0
  69              		.cfi_startproc
  70              		@ args = 0, pretend = 0, frame = 8
  71              		@ frame_needed = 1, uses_anonymous_args = 0
  72 0000 80B5     		push	{r7, lr}
  73              		.cfi_def_cfa_offset 8
  74              		.cfi_offset 7, -8
  75              		.cfi_offset 14, -4
  76 0002 82B0     		sub	sp, sp, #8
  77              		.cfi_def_cfa_offset 16
  78 0004 00AF     		add	r7, sp, #0
  79              		.cfi_def_cfa_register 7
  80 0006 7860     		str	r0, [r7, #4]
  81 0008 3960     		str	r1, [r7]
1501:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_ASSERT_L2(CY_SAR_CHANMASK(enableMask));
  82              		.loc 1 1501 0
  83 000a 3B68     		ldr	r3, [r7]
  84 000c 074A     		ldr	r2, .L4
  85 000e 9342     		cmp	r3, r2
  86 0010 05D9     		bls	.L3
  87              		.loc 1 1501 0 is_stmt 0 discriminator 1
  88 0012 074A     		ldr	r2, .L4+4
  89 0014 074B     		ldr	r3, .L4+8
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 29


  90 0016 1100     		movs	r1, r2
  91 0018 1800     		movs	r0, r3
  92 001a FFF7FEFF 		bl	Cy_SysLib_AssertFailed
  93              	.L3:
1502:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1503:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     SAR_CHAN_EN(base) = enableMask;
  94              		.loc 1 1503 0 is_stmt 1
  95 001e 7B68     		ldr	r3, [r7, #4]
  96 0020 3A68     		ldr	r2, [r7]
  97 0022 1A62     		str	r2, [r3, #32]
1504:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
  98              		.loc 1 1504 0
  99 0024 C046     		nop
 100 0026 BD46     		mov	sp, r7
 101 0028 02B0     		add	sp, sp, #8
 102              		@ sp needed
 103 002a 80BD     		pop	{r7, pc}
 104              	.L5:
 105              		.align	2
 106              	.L4:
 107 002c FFFF0000 		.word	65535
 108 0030 DD050000 		.word	1501
 109 0034 00000000 		.word	.LC0
 110              		.cfi_endproc
 111              	.LFE81:
 112              		.size	Cy_SAR_SetChanMask, .-Cy_SAR_SetChanMask
 113              		.section	.text.Cy_SAR_SetInterruptMask,"ax",%progbits
 114              		.align	2
 115              		.code	16
 116              		.thumb_func
 117              		.type	Cy_SAR_SetInterruptMask, %function
 118              	Cy_SAR_SetInterruptMask:
 119              	.LFB86:
1505:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1506:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1507:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1508:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_SetRangeCond
1509:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1510:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1511:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Set the condition in which range detection interrupts are triggered.
1512:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1513:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1514:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1515:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1516:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param cond
1517:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * A value of the enum \ref cy_en_sar_range_detect_condition_t.
1518:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1519:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return None
1520:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1521:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \funcusage
1522:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1523:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SET_RANGE_COND
1524:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1525:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
1526:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetRangeCond(SAR_Type *base, cy_en_sar_range_detect_condition_t cond)
1527:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1528:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_ASSERT_L3(CY_SAR_RANGECOND(cond));
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 30


1529:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1530:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     SAR_RANGE_COND(base) = (uint32_t)cond << SAR_RANGE_COND_RANGE_COND_Pos;
1531:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
1532:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1533:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1534:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1535:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_interrupt
1536:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1537:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1538:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1539:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_GetInterruptStatus
1540:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1541:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1542:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Return the interrupt register status.
1543:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1544:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1545:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1546:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1547:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return Interrupt status
1548:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1549:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \funcusage
1550:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1551:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_ISR
1552:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1553:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
1554:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetInterruptStatus(const SAR_Type *base)
1555:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1556:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     return SAR_INTR(base);
1557:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
1558:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1559:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1560:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1561:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_ClearInterrupt
1562:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1563:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1564:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Clear the interrupt.
1565:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The interrupt must be cleared with this function so that the hardware
1566:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * can set subsequent interrupts and those interrupts can be forwarded
1567:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * to the interrupt controller, if enabled.
1568:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1569:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1570:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1571:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1572:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param intrMask
1573:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The mask of interrupts to clear. Typically this will be the value returned
1574:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * from \ref Cy_SAR_GetInterruptStatus.
1575:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Alternately, select one or more values from \ref cy_en_sar_intr_mask_t and "OR" them together.
1576:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - \ref CY_SAR_INTR_EOS_MASK
1577:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - \ref CY_SAR_INTR_OVERFLOW_MASK
1578:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - \ref CY_SAR_INTR_FW_COLLISION_MASK
1579:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1580:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return None
1581:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1582:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
1583:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_ClearInterrupt(SAR_Type *base, uint32_t intrMask)
1584:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1585:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_ASSERT_L2(CY_SAR_INTRMASK(intrMask));
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 31


1586:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1587:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     SAR_INTR(base) = intrMask;
1588:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1589:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     /* Dummy read for buffered writes. */
1590:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     (void) SAR_INTR(base);
1591:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
1592:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1593:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1594:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1595:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_SetInterrupt
1596:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1597:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1598:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Trigger an interrupt with software.
1599:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1600:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1601:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1602:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1603:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param intrMask
1604:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The mask of interrupts to set.
1605:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Select one or more values from \ref cy_en_sar_intr_mask_t and "OR" them together.
1606:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - \ref CY_SAR_INTR_EOS_MASK
1607:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - \ref CY_SAR_INTR_OVERFLOW_MASK
1608:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - \ref CY_SAR_INTR_FW_COLLISION_MASK
1609:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1610:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return None
1611:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1612:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
1613:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetInterrupt(SAR_Type *base, uint32_t intrMask)
1614:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1615:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_ASSERT_L2(CY_SAR_INTRMASK(intrMask));
1616:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1617:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     SAR_INTR_SET(base) = intrMask;
1618:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
1619:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1620:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1621:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1622:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_SetInterruptMask
1623:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1624:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1625:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Enable which interrupts can trigger the CPU interrupt controller.
1626:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1627:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1628:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1629:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1630:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param intrMask
1631:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The mask of interrupts. Select one or more values from \ref cy_en_sar_intr_mask_t
1632:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * and "OR" them together.
1633:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - \ref CY_SAR_INTR_MASK_NONE : Disable EOS, overflow, and firmware collision interrupts.
1634:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - \ref CY_SAR_INTR_EOS_MASK
1635:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - \ref CY_SAR_INTR_OVERFLOW_MASK
1636:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - \ref CY_SAR_INTR_FW_COLLISION_MASK
1637:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1638:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return None
1639:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1640:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \funcusage
1641:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1642:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SET_INTERRUPT_MASK
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 32


1643:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1644:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
1645:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetInterruptMask(SAR_Type *base, uint32_t intrMask)
1646:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 120              		.loc 1 1646 0
 121              		.cfi_startproc
 122              		@ args = 0, pretend = 0, frame = 8
 123              		@ frame_needed = 1, uses_anonymous_args = 0
 124 0000 80B5     		push	{r7, lr}
 125              		.cfi_def_cfa_offset 8
 126              		.cfi_offset 7, -8
 127              		.cfi_offset 14, -4
 128 0002 82B0     		sub	sp, sp, #8
 129              		.cfi_def_cfa_offset 16
 130 0004 00AF     		add	r7, sp, #0
 131              		.cfi_def_cfa_register 7
 132 0006 7860     		str	r0, [r7, #4]
 133 0008 3960     		str	r1, [r7]
1647:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_ASSERT_L2(CY_SAR_INTRMASK(intrMask));
 134              		.loc 1 1647 0
 135 000a 3B68     		ldr	r3, [r7]
 136 000c 072B     		cmp	r3, #7
 137 000e 05D9     		bls	.L7
 138              		.loc 1 1647 0 is_stmt 0 discriminator 1
 139 0010 074A     		ldr	r2, .L8
 140 0012 084B     		ldr	r3, .L8+4
 141 0014 1100     		movs	r1, r2
 142 0016 1800     		movs	r0, r3
 143 0018 FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 144              	.L7:
1648:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1649:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     SAR_INTR_MASK(base) = intrMask;
 145              		.loc 1 1649 0 is_stmt 1
 146 001c 7A68     		ldr	r2, [r7, #4]
 147 001e 8623     		movs	r3, #134
 148 0020 9B00     		lsls	r3, r3, #2
 149 0022 3968     		ldr	r1, [r7]
 150 0024 D150     		str	r1, [r2, r3]
1650:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
 151              		.loc 1 1650 0
 152 0026 C046     		nop
 153 0028 BD46     		mov	sp, r7
 154 002a 02B0     		add	sp, sp, #8
 155              		@ sp needed
 156 002c 80BD     		pop	{r7, pc}
 157              	.L9:
 158 002e C046     		.align	2
 159              	.L8:
 160 0030 6F060000 		.word	1647
 161 0034 00000000 		.word	.LC0
 162              		.cfi_endproc
 163              	.LFE86:
 164              		.size	Cy_SAR_SetInterruptMask, .-Cy_SAR_SetInterruptMask
 165              		.section	.text.Cy_SAR_SetVssaVminusSwitch,"ax",%progbits
 166              		.align	2
 167              		.code	16
 168              		.thumb_func
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 33


 169              		.type	Cy_SAR_SetVssaVminusSwitch, %function
 170              	Cy_SAR_SetVssaVminusSwitch:
 171              	.LFB103:
1651:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1652:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1653:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1654:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_GetInterruptMask
1655:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1656:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1657:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Return which interrupts can trigger the CPU interrupt controller
1658:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * as configured by \ref Cy_SAR_SetInterruptMask.
1659:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1660:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1661:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1662:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1663:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return
1664:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Interrupt mask. Compare this value with masks in \ref cy_en_sar_intr_mask_t.
1665:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1666:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \funcusage
1667:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1668:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_GET_INTERRUPT_MASK
1669:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1670:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
1671:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetInterruptMask(const SAR_Type *base)
1672:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1673:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     return SAR_INTR_MASK(base);
1674:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
1675:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1676:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1677:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1678:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_GetInterruptStatusMasked
1679:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1680:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1681:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Return the bitwise AND between the interrupt request and mask registers.
1682:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * See \ref Cy_SAR_GetInterruptStatus and \ref Cy_SAR_GetInterruptMask.
1683:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1684:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1685:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1686:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1687:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return
1688:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Bitwise AND of the interrupt request and mask registers
1689:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1690:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
1691:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetInterruptStatusMasked(const SAR_Type *base)
1692:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1693:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     return SAR_INTR_MASKED(base);
1694:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
1695:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1696:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1697:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1698:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_GetRangeInterruptStatus
1699:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1700:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1701:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Return the range interrupt register status.
1702:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * If the status bit is low for a channel, the channel may not be enabled
1703:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * (\ref Cy_SAR_SetChanMask), range detection is not enabled for the
1704:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * channel (\ref Cy_SAR_SetRangeInterruptMask), or range detection was not
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 34


1705:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * triggered for the channel.
1706:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1707:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1708:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1709:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1710:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return
1711:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The range interrupt status for all channels. Bit 0 is for channel 0, etc.
1712:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1713:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \funcusage
1714:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1715:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_GET_RANGE_INTERRUPT_STATUS
1716:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1717:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
1718:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetRangeInterruptStatus(const SAR_Type *base)
1719:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1720:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     return SAR_RANGE_INTR(base);
1721:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
1722:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1723:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1724:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1725:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_ClearRangeInterrupt
1726:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1727:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1728:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Clear the range interrupt for the specified channel mask.
1729:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The interrupt must be cleared with this function so that
1730:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * the hardware can set subset interrupts and those interrupts can
1731:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * be forwarded to the interrupt controller, if enabled.
1732:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1733:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1734:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1735:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1736:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param chanMask
1737:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The channel mask. Bit 0 is for channel 0, etc.
1738:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Typically, this is the value returned from \ref Cy_SAR_GetRangeInterruptStatus.
1739:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1740:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return None
1741:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1742:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
1743:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_ClearRangeInterrupt(SAR_Type *base, uint32_t chanMask)
1744:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1745:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_ASSERT_L2(CY_SAR_CHANMASK(chanMask));
1746:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1747:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     SAR_RANGE_INTR(base) = chanMask;
1748:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1749:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     /* Dummy read for buffered writes. */
1750:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     (void) SAR_RANGE_INTR(base);
1751:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
1752:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1753:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1754:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1755:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_SetRangeInterrupt
1756:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1757:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1758:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Trigger a range interrupt with software for the specific channel mask.
1759:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1760:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1761:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 35


1762:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1763:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param chanMask
1764:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The channel mask. Bit 0 is for channel 0, etc.
1765:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1766:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return None
1767:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1768:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
1769:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetRangeInterrupt(SAR_Type *base, uint32_t chanMask)
1770:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1771:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_ASSERT_L2(CY_SAR_CHANMASK(chanMask));
1772:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1773:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     SAR_RANGE_INTR_SET(base) = chanMask;
1774:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
1775:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1776:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1777:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1778:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_SetRangeInterruptMask
1779:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1780:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1781:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Enable which channels can trigger a range interrupt.
1782:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1783:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1784:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1785:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1786:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param chanMask
1787:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The channel mask. Bit 0 is for channel 0, etc.
1788:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1789:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return None
1790:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1791:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \funcusage
1792:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1793:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SET_RANGE_INTERRUPT_MASK
1794:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1795:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
1796:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetRangeInterruptMask(SAR_Type *base, uint32_t chanMask)
1797:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1798:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_ASSERT_L2(CY_SAR_CHANMASK(chanMask));
1799:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1800:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     SAR_RANGE_INTR_MASK(base) = chanMask;
1801:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
1802:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1803:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1804:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1805:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_GetRangeInterruptMask
1806:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1807:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1808:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Return which interrupts can trigger a range interrupt as configured by
1809:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref Cy_SAR_SetRangeInterruptMask.
1810:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1811:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1812:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1813:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1814:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return
1815:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The range interrupt mask
1816:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1817:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
1818:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetRangeInterruptMask(const SAR_Type *base)
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 36


1819:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1820:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     return SAR_RANGE_INTR_MASK(base);
1821:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
1822:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1823:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1824:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1825:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_GetRangeInterruptStatusMasked
1826:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1827:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1828:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Return the bitwise AND between the range interrupt request and mask registers.
1829:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * See \ref Cy_SAR_GetRangeInterruptStatus and \ref Cy_SAR_GetRangeInterruptMask.
1830:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1831:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1832:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1833:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1834:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return
1835:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Bitwise AND between of range interrupt request and mask
1836:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1837:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
1838:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetRangeInterruptStatusMasked(const SAR_Type *base)
1839:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1840:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     return SAR_RANGE_INTR_MASKED(base);
1841:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
1842:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1843:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1844:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1845:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_GetSatInterruptStatus
1846:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1847:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1848:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Return the saturate interrupt register status.
1849:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * If the status bit is low for a channel, the channel may not be enabled
1850:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * (\ref Cy_SAR_SetChanMask), saturation detection is not enabled for the
1851:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * channel (\ref Cy_SAR_SetSatInterruptMask), or saturation detection was not
1852:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * triggered for the channel.
1853:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1854:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1855:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1856:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1857:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return
1858:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The saturate interrupt status for all channels. Bit 0 is for channel 0, etc.
1859:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1860:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \funcusage
1861:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1862:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_GET_SAT_INTERRUPT_STATUS
1863:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1864:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
1865:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetSatInterruptStatus(const SAR_Type *base)
1866:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1867:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     return SAR_SATURATE_INTR(base);
1868:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
1869:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1870:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1871:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1872:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_ClearSatInterrupt
1873:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1874:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1875:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Clear the saturate interrupt for the specified channel mask.
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 37


1876:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The interrupt must be cleared with this function so that the hardware
1877:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * can set subsequent interrupts and those interrupts can be forwarded
1878:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * to the interrupt controller, if enabled.
1879:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1880:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1881:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1882:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1883:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param chanMask
1884:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The channel mask. Bit 0 is for channel 0, etc.
1885:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Typically, this is the value returned from \ref Cy_SAR_GetSatInterruptStatus.
1886:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1887:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return None
1888:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1889:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
1890:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_ClearSatInterrupt(SAR_Type *base, uint32_t chanMask)
1891:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1892:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_ASSERT_L2(CY_SAR_CHANMASK(chanMask));
1893:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1894:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     SAR_SATURATE_INTR(base) = chanMask;
1895:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1896:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     /* Dummy read for buffered writes. */
1897:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     (void) SAR_SATURATE_INTR(base);
1898:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
1899:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1900:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1901:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1902:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_SetSatInterrupt
1903:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1904:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1905:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Trigger a saturate interrupt with software for the specific channel mask.
1906:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1907:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1908:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1909:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1910:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param chanMask
1911:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The channel mask. Bit 0 is for channel 0, etc.
1912:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1913:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return None
1914:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1915:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
1916:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetSatInterrupt(SAR_Type *base, uint32_t chanMask)
1917:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1918:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_ASSERT_L2(CY_SAR_CHANMASK(chanMask));
1919:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1920:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     SAR_SATURATE_INTR_SET(base) = chanMask;
1921:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
1922:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1923:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1924:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1925:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_SetSatInterruptMask
1926:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1927:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1928:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Enable which channels can trigger a saturate interrupt.
1929:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1930:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1931:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1932:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 38


1933:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param chanMask
1934:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The channel mask. Bit 0 is for channel 0, etc.
1935:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1936:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return None
1937:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1938:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \funcusage
1939:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1940:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_GET_SAT_INTERRUPT_MASK
1941:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1942:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
1943:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetSatInterruptMask(SAR_Type *base, uint32_t chanMask)
1944:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1945:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_ASSERT_L2(CY_SAR_CHANMASK(chanMask));
1946:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1947:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     SAR_SATURATE_INTR_MASK(base) = chanMask;
1948:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
1949:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1950:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1951:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1952:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_GetSatInterruptMask
1953:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1954:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1955:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Return which interrupts can trigger a saturate interrupt as configured
1956:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * by \ref Cy_SAR_SetSatInterruptMask.
1957:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1958:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1959:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1960:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1961:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return
1962:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The saturate interrupt mask. Bit 0 is for channel 0, etc.
1963:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1964:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
1965:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetSatInterruptMask(const SAR_Type *base)
1966:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1967:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     return SAR_SATURATE_INTR_MASK(base);
1968:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
1969:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1970:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1971:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_GetSatInterruptStatusMasked
1972:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1973:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1974:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Return the bitwise AND between the saturate interrupt request and mask registers.
1975:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * See \ref Cy_SAR_GetSatInterruptStatus and \ref Cy_SAR_GetSatInterruptMask.
1976:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1977:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1978:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1979:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1980:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return
1981:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Bitwise AND of the saturate interrupt request and mask
1982:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1983:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
1984:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetSatInterruptStatusMasked(const SAR_Type *base)
1985:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1986:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     return SAR_SATURATE_INTR_MASKED(base);
1987:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
1988:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1989:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 39


1990:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1991:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_GetInterruptCause
1992:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1993:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1994:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Return the cause of the interrupt.
1995:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The interrupt routine can be called due to one of the following events:
1996:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - End of scan (EOS)
1997:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Overflow
1998:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Firmware collision
1999:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Saturation detected on one or more channels
2000:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Range detected on one or more channels
2001:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
2002:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
2003:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
2004:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
2005:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return
2006:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Mask of what caused the interrupt. Compare this value with one of these masks:
2007:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - SAR_INTR_CAUSE_EOS_MASKED_MIR_Msk : EOS caused the interrupt
2008:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - SAR_INTR_CAUSE_OVERFLOW_MASKED_MIR_Msk : Overflow caused the interrupt
2009:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - SAR_INTR_CAUSE_FW_COLLISION_MASKED_MIR_Msk : Firmware collision cause the interrupt
2010:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - SAR_INTR_CAUSE_SATURATE_MASKED_RED_Msk : Saturation detection on one or more channels caused 
2011:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - SAR_INTR_CAUSE_RANGE_MASKED_RED_Msk : Range detection on one or more channels caused the inte
2012:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
2013:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
2014:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetInterruptCause(const SAR_Type *base)
2015:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
2016:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     return SAR_INTR_CAUSE(base);
2017:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
2018:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
2019:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
2020:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_helper
2021:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
2022:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
2023:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
2024:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
2025:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
2026:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_IsChannelDifferential
2027:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
2028:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
2029:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Return true of channel is differential, else false.
2030:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
2031:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
2032:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
2033:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
2034:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param chan
2035:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The channel to check, starting at 0.
2036:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
2037:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return
2038:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * A false is return if chan is invalid.
2039:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
2040:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \funcusage
2041:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
2042:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_IS_CHANNEL_DIFF
2043:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
2044:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
2045:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE bool Cy_SAR_IsChannelDifferential(const SAR_Type *base, uint32_t chan)
2046:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 40


2047:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     return !Cy_SAR_IsChannelSingleEnded(base, chan);
2048:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
2049:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
2050:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
2051:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_switches
2052:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
2053:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
2054:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
2055:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_SetVssaVminusSwitch
2056:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
2057:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
2058:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Open or close the switch between VSSA and Vminus of the SARADC through firmware.
2059:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This function calls \ref Cy_SAR_SetAnalogSwitch with switchSelect set to
2060:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref CY_SAR_MUX_SWITCH0 and switchMask set to SAR_MUX_SWITCH0_MUX_FW_VSSA_VMINUS_Msk.
2061:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
2062:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
2063:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
2064:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
2065:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param state
2066:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Open or close the switch. Select a value from \ref cy_en_sar_switch_state_t.
2067:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
2068:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return None
2069:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
2070:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \funcusage
2071:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
2072:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_VSSA_VMINUS_SWITCH
2073:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
2074:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
2075:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetVssaVminusSwitch(SAR_Type *base, cy_en_sar_switch_state_t state)
2076:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 172              		.loc 1 2076 0
 173              		.cfi_startproc
 174              		@ args = 0, pretend = 0, frame = 8
 175              		@ frame_needed = 1, uses_anonymous_args = 0
 176 0000 80B5     		push	{r7, lr}
 177              		.cfi_def_cfa_offset 8
 178              		.cfi_offset 7, -8
 179              		.cfi_offset 14, -4
 180 0002 82B0     		sub	sp, sp, #8
 181              		.cfi_def_cfa_offset 16
 182 0004 00AF     		add	r7, sp, #0
 183              		.cfi_def_cfa_register 7
 184 0006 7860     		str	r0, [r7, #4]
 185 0008 0A00     		movs	r2, r1
 186 000a FB1C     		adds	r3, r7, #3
 187 000c 1A70     		strb	r2, [r3]
2077:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     Cy_SAR_SetAnalogSwitch(base, CY_SAR_MUX_SWITCH0, SAR_MUX_SWITCH0_MUX_FW_VSSA_VMINUS_Msk, state)
 188              		.loc 1 2077 0
 189 000e FB1C     		adds	r3, r7, #3
 190 0010 1978     		ldrb	r1, [r3]
 191 0012 8023     		movs	r3, #128
 192 0014 5A02     		lsls	r2, r3, #9
 193 0016 7868     		ldr	r0, [r7, #4]
 194 0018 0B00     		movs	r3, r1
 195 001a 0021     		movs	r1, #0
 196 001c FFF7FEFF 		bl	Cy_SAR_SetAnalogSwitch
2078:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 41


 197              		.loc 1 2078 0
 198 0020 C046     		nop
 199 0022 BD46     		mov	sp, r7
 200 0024 02B0     		add	sp, sp, #8
 201              		@ sp needed
 202 0026 80BD     		pop	{r7, pc}
 203              		.cfi_endproc
 204              	.LFE103:
 205              		.size	Cy_SAR_SetVssaVminusSwitch, .-Cy_SAR_SetVssaVminusSwitch
 206              		.section	.text.Cy_SAR_SetVssaSarSeqCtrl,"ax",%progbits
 207              		.align	2
 208              		.code	16
 209              		.thumb_func
 210              		.type	Cy_SAR_SetVssaSarSeqCtrl, %function
 211              	Cy_SAR_SetVssaSarSeqCtrl:
 212              	.LFB104:
2079:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
2080:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
2081:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
2082:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_SetVssaSarSeqCtrl
2083:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
2084:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
2085:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Enable or disable SARSEQ control of the switch between VSSA and Vminus of the SARADC.
2086:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This function calls \ref Cy_SAR_SetSwitchSarSeqCtrl
2087:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * with switchMask set to SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_VSSA_Msk.
2088:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
2089:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
2090:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
2091:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
2092:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param ctrl
2093:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Enable or disable control. Select a value from \ref cy_en_sar_switch_sar_seq_ctrl_t.
2094:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
2095:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return None
2096:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
2097:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \funcusage
2098:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
2099:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_VSSA_SARSEQ_CTRL
2100:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
2101:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
2102:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetVssaSarSeqCtrl(SAR_Type *base, cy_en_sar_switch_sar_seq_ctrl_t ctrl)
2103:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 213              		.loc 1 2103 0
 214              		.cfi_startproc
 215              		@ args = 0, pretend = 0, frame = 8
 216              		@ frame_needed = 1, uses_anonymous_args = 0
 217 0000 80B5     		push	{r7, lr}
 218              		.cfi_def_cfa_offset 8
 219              		.cfi_offset 7, -8
 220              		.cfi_offset 14, -4
 221 0002 82B0     		sub	sp, sp, #8
 222              		.cfi_def_cfa_offset 16
 223 0004 00AF     		add	r7, sp, #0
 224              		.cfi_def_cfa_register 7
 225 0006 7860     		str	r0, [r7, #4]
 226 0008 0A00     		movs	r2, r1
 227 000a FB1C     		adds	r3, r7, #3
 228 000c 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 42


2104:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     Cy_SAR_SetSwitchSarSeqCtrl(base, SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_VSSA_Msk, ctrl);
 229              		.loc 1 2104 0
 230 000e FB1C     		adds	r3, r7, #3
 231 0010 1A78     		ldrb	r2, [r3]
 232 0012 8023     		movs	r3, #128
 233 0014 5902     		lsls	r1, r3, #9
 234 0016 7B68     		ldr	r3, [r7, #4]
 235 0018 1800     		movs	r0, r3
 236 001a FFF7FEFF 		bl	Cy_SAR_SetSwitchSarSeqCtrl
2105:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
 237              		.loc 1 2105 0
 238 001e C046     		nop
 239 0020 BD46     		mov	sp, r7
 240 0022 02B0     		add	sp, sp, #8
 241              		@ sp needed
 242 0024 80BD     		pop	{r7, pc}
 243              		.cfi_endproc
 244              	.LFE104:
 245              		.size	Cy_SAR_SetVssaSarSeqCtrl, .-Cy_SAR_SetVssaSarSeqCtrl
 246 0026 C046     		.section	.text.Cy_SysClk_PeriphSetDivider,"ax",%progbits
 247              		.align	2
 248              		.code	16
 249              		.thumb_func
 250              		.type	Cy_SysClk_PeriphSetDivider, %function
 251              	Cy_SysClk_PeriphSetDivider:
 252              	.LFB134:
 253              		.file 2 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/sysclk/cy_sysclk.h"
   1:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /***************************************************************************//**
   2:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \file cy_sysclk.h
   3:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \version 2.0
   4:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
   5:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Provides an API declaration of the sysclk driver.
   6:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
   7:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ********************************************************************************
   8:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \copyright
   9:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Copyright 2016-2020, Cypress Semiconductor Corporation. All rights reserved.
  10:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * You may use this file only in accordance with the license, terms, conditions,
  11:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * disclaimers, and limitations in the end user license agreement accompanying
  12:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * the software package with which this file was provided.
  13:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
  14:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
  15:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
  16:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk
  17:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
  18:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The System Clock (SysClk) driver contains the API for configuring system and
  19:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * peripheral clocks. 
  20:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
  21:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The functions and other declarations used in this driver are in cy_sysclk.h. 
  22:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * You can include cy_pdl.h (ModusToolbox only) to get access to all functions 
  23:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * and declarations in the PDL. 
  24:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
  25:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Firmware uses the API to configure , enable, or disable a clock.
  26:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * 
  27:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The clock system includes a variety of resources that can vary per device, including:
  28:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * - Internal clock sources such as internal oscillators
  29:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * - External clock sources such as crystal oscillators or a signal on an I/O pin
  30:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * - Generated clocks such as an FLL, a PLL, and peripheral clocks
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 43


  31:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
  32:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Consult the Technical Reference Manual for your device for details of the 
  33:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * clock system.
  34:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
  35:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The PDL defines clock system capabilities in:\n
  36:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * devices\<family\>/<series\>/include\<series\>_config.h. (E.g.
  37:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * devices/psoc6/include/psoc6_01_config.h).
  38:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * User-configurable clock speeds are defined in the file system_<series>.h.
  39:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
  40:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * As an illustration of the clocking system, the following diagram shows the
  41:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * PSoC 63 series clock tree. The actual tree may vary depending on the device series.
  42:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Consult the Technical Reference Manual for your device for details.
  43:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * ![](sysclk_tree.png)
  44:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
  45:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The sysclk driver supports multiple peripheral clocks, as well as the fast 
  46:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * clock, slow clock, backup domain clock, timer clock, and pump clock. The API
  47:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * for any given clock contains the functions to manage that clock. Functions
  48:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * for clock measurement and trimming are also provided.
  49:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
  50:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \section group_sysclk_configuration Configuration Considerations
  51:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The availability of clock functions depend on the availability of the chip
  52:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * resources that support those functions. Consult the device TRM before
  53:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * attempting to use these functions.
  54:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
  55:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * LPActive and LPSleep power modes limit the maximum clock frequency allowed
  56:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * on the device. Refer to the SysPm driver and the TRM for details.
  57:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
  58:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \section group_sysclk_more_information More Information
  59:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Refer to the technical reference manual (TRM) and the device datasheet.
  60:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
  61:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \section group_sysclk_MISRA MISRA-C Compliance
  62:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * <table class="doxtable">
  63:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
  64:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <th>MISRA Rule</th>
  65:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <th>Rule Class (Required/Advisory)</th>
  66:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <th>Rule Description</th>
  67:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <th>Description of Deviation(s)</th>
  68:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
  69:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
  70:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>10.3</td>
  71:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>R</td>
  72:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>A composite expression of the "essentially unsigned" type is being
  73:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         cast to a different type category.</td>
  74:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>The value got from the bitfield physically cannot exceed the enumeration
  75:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         that describes this bitfield. So, the code is safe by design.</td>
  76:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
  77:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
  78:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>10.4</td>
  79:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>R</td>
  80:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>A composite floating point expression is being cast to double, or unsigned.</td>
  81:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Casting a floating-point calculation result to an integer.</td>
  82:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
  83:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
  84:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>13.4</td>
  85:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>R</td>
  86:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>The controlling expression of a for statement shall not contain any objects of floating t
  87:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Scanning through a list of floating point values: only greater_than/less_then checks are 
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 44


  88:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         with floating point numbers, the loop counter is integer. </td>
  89:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
  90:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
  91:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>16.7</td>
  92:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>R</td>
  93:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>The object addressed by the pointer parameter is not modified and so the pointer could be
  94:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         type 'pointer to const'.</td>
  95:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>The callback function for system power management (SysPm) must be of generic callback typ
  96:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         contains non-const pointer parameter.</td>
  97:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
  98:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * </table>
  99:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 100:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \section group_sysclk_changelog Changelog
 101:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * <table class="doxtable">
 102:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr><th>Version</th><th>Changes</th><th>Reason for Change</th></tr>
 103:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
 104:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>2.0</td>
 105:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Updated the ECO trimming values calculation algorithm in the \ref Cy_SysClk_EcoConfigure 
 106:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         This change may invalidate the already used crystals, in cases: \n
 107:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         * The crystal frequency is less than 16 MHz (the supported crystal frequency range was ch
 108:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         * The maximum amplitude (internal calculation value) is less than 0.65 V. \n
 109:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 110:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         Also the second parameter cSum takes into account both C0 (the crystal itself shunt capac
 111:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         For detail, refer the \ref Cy_SysClk_EcoConfigure documentation and the ECO Trimming sect
 112:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Enhanced the ECO performance for high-noise conditions that result from simultaneous swit
 113:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
 114:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
 115:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td rowspan="4">1.20</td>
 116:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Flattened the organization of the driver source code into the single 
 117:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         source directory and the single include directory.
 118:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     </td>
 119:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Driver library directory-structure simplification.</td>
 120:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
 121:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
 122:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Updated \ref Cy_SysClk_FllLocked function description</td>
 123:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>The SRSS_ver1 HW details clarification</td>
 124:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
 125:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
 126:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Removed the following functions:
 127:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         - Cy_SysClk_FllLostLock
 128:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         - Cy_SysClk_WcoConfigureCsv
 129:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         - Cy_SysClk_ClkHfConfigureCsv
 130:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     </td>
 131:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>No hardware support for the removed functions.</td>
 132:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
 133:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
 134:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Added register access layer. Use register access macros instead
 135:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         of direct register access using dereferenced pointers.</td>
 136:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Makes register access device-independent, so that the PDL does 
 137:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         not need to be recompiled for each supported part number.</td>
 138:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
 139:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
 140:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>1.11</td>
 141:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Updated the following functions. Now they use a semaphore when 
 142:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         try to read the status or configure the SysClk measurement counters:
 143:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         * Cy_SysClk_StartClkMeasurementCounters()
 144:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         * Cy_SysClk_ClkMeasurementCountersGetFreq()
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 45


 145:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 146:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         Now Cy_SysClk_ClkMeasurementCountersGetFreq() returns zero value,
 147:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         if during measurement device was in the Deep Sleep or partially
 148:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         blocking flash operation occurred </td>
 149:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Added arbiter mechanism for correct usage of the SysClk measurement 
 150:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         counters</td>
 151:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
 152:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
 153:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>1.10.1</td>
 154:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Renamed Power Management section to Low Power Callback section</td>
 155:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Documentation update and clarification</td>
 156:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
 157:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
 158:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td rowspan="5">1.10</td>
 159:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Updated FLL parameter calculation</td>
 160:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Support low frequency sources</td>
 161:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
 162:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
 163:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Added Cy_SysClk_PiloSetTrim() and Cy_SysclkPiloGetTrim() functions</td>
 164:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Support PILO manual trims</td>
 165:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
 166:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
 167:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Made Cy_SysClk_FllLostLock() function dependent on SRSS v1</td>
 168:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Feature is not supported in SRSS v1</td>
 169:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
 170:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
 171:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Updated Cy_SysClk_DeepSleepCallback() to save/restore both FLL and PLL settings</td>
 172:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>The function should return when the lock is established or a timeout has occurred</td>
 173:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
 174:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
 175:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>General documentation updates</td>
 176:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td></td>
 177:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
 178:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
 179:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>1.0</td>
 180:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Initial version</td>
 181:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td></td>
 182:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
 183:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * </table>
 184:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 185:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_macros           Macros
 186:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 187:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 188:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_enums           General Enumerated Types
 189:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 190:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_returns         Function return values
 191:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 192:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_eco             External Crystal Oscillator (ECO)
 193:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 194:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The External Crystal Oscillator (ECO) is a clock source that consists
 195:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   of an oscillator circuit that drives an external crystal through its
 196:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   dedicated ECO pins. The ECO is a source clock that can be used to
 197:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   source one or more clock paths (Refer to \ref group_sysclk_path_src).
 198:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   These clock paths can then source the processors and peripherals in
 199:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   the device.
 200:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 201:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The ECO relies on the presence of an external crystal. The pins
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 46


 202:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   connected to this crystal must be configured to operate in analog
 203:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   drive mode with HSIOM connection set to GPIO control (HSIOM_SEL_GPIO).
 204:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 205:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_eco_funcs       Functions
 206:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 207:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_path_src           Clock Path Source
 208:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 209:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Clock paths are a series of multiplexers that allow a source clock
 210:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   to drive multiple clocking resources down the chain. These paths are
 211:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   used for active domain clocks that are not operational during chip 
 212:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   deep-sleep, hibernate and off modes. Illustrated below is a diagram
 213:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   of the clock paths for the PSoC 63 series, showing the first three
 214:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   clock paths. The source clocks for these paths are highlighted in
 215:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   the red box.
 216:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 217:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - IMO: 8 MHz Internal Main Oscillator (Default)
 218:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - EXTCLK: External clock (signal brought in through dedicated pins)
 219:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - ECO: External Crystal Oscillator (requires external crystal on dedicated pins)
 220:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - ALTHF: Select on-chip signals (e.g. BLE ECO)
 221:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - Digital Signal (DSI): Digital signal from a UDB source
 222:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 223:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Some clock paths such as path 0 and path 1 have additional resources
 224:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   that can be utilized to provide a higher frequency clock. For example, 
 225:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   path 0 source clock can be used as the reference clock for the FLL and 
 226:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   path 1 source clock can be used as the reference clock for the PLL.
 227:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 228:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_path_source.png)
 229:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 230:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \note The PDL driver cannot configure a clock path to use Digital Signal
 231:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Interconnect (DSI) outputs as sources. This must be done through DSI
 232:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   configuration tool such as PSoC Creator.
 233:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 234:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_path_src_funcs     Functions
 235:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_path_src_enums     Enumerated Types
 236:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 237:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_fll             Frequency Locked Loop (FLL)
 238:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 239:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The FLL is a clock generation circuit that can be used to produce a
 240:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   higher frequency clock from a reference clock. The output clock exhibits
 241:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   some characteristics of the reference clock such as the accuracy of the
 242:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   source. However other attributes such as the clock phase are not preserved.
 243:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The FLL is similar in purpose to a (Phase locked loop) PLL but they are
 244:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   not equivalent.
 245:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 246:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - They may have different frequency ranges.
 247:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - The FLL starts up (locks) faster and consumes less current than the PLL.
 248:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - The FLL accepts a source clock with lower frequency than PLL, such as the WCO (32 KHz). 
 249:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - The FLL does not lock phase. The hardware consist of a counter with a
 250:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     current-controlled oscillator (CCO). The counter counts the number of output
 251:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     clock edges in a reference clock period and adjusts the CCO until the
 252:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     expected ratio is achieved (locked). After initial lock, the CCO is
 253:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     adjusted dynamically to keep the ratio within tolerance. The lock tolerance
 254:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     is user-adjustable.
 255:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_fll.png)
 256:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 257:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The SysClk driver supports two models for configuring the FLL. The first
 258:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   model is to call the Cy_SysClk_FllConfigure() function, which calculates the 
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 47


 259:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   necessary parameters for the FLL at run-time. This may be necessary for dynamic
 260:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   run-time changes to the FLL. However this method is slow as it needs to perform 
 261:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   the calculation before configuring the FLL. The other model is to call 
 262:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Cy_SysClk_FllManualConfigure() function with pre-calculated parameter values. 
 263:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   This method is faster but requires prior knowledge of the necessary parameters.
 264:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Consult the device TRM for the FLL calculation equations.
 265:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 266:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_fll_funcs       Functions
 267:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_fll_structs     Data Structures
 268:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_fll_enums       Enumerated Types
 269:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 270:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_pll             Phase Locked Loop (PLL)
 271:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 272:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The PLL is a clock generation circuit that can be used to produce a
 273:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   higher frequency clock from a reference clock. The output clock exhibits
 274:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   characteristics of the reference clock such as the accuracy of the source
 275:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   and its phase. The PLL is similar in purpose to a (Frequency locked loop) FLL
 276:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   but they are not equivalent.
 277:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 278:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - They may have different frequency ranges.
 279:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - The PLL starts up more slowly and consumes more current than the FLL.
 280:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - The PLL requires a higher frequency source clock than PLL. 
 281:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_pll.png)
 282:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 283:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The SysClk driver supports two models for configuring the PLL. The first
 284:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   model is to call the Cy_SysClk_PllConfigure() function, which calculates the 
 285:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   necessary parameters for the PLL at run-time. This may be necessary for dynamic
 286:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   run-time changes to the PLL. However this method is slow as it needs to perform 
 287:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   the calculation before configuring the PLL. The other model is to call 
 288:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Cy_SysClk_PllManualConfigure() function with pre-calculated parameter values. 
 289:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   This method is faster but requires prior knowledge of the necessary parameters.
 290:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Consult the device TRM for the PLL calculation equations.
 291:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 292:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_pll_funcs       Functions
 293:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_pll_structs     Data Structures
 294:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 295:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_ilo             Internal Low-Speed Oscillator (ILO)
 296:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 297:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The ILO operates with no external components and outputs a stable clock at
 298:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   32.768 kHz nominal. The ILO is relatively low power and low accuracy. It is 
 299:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   available in all power modes and can be used as a source for the Backup domain clock.
 300:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_backup.png)
 301:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 302:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   To ensure the ILO remains active in Hibernate mode, and across power-on-reset
 303:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   (POR) or brown out detect (BOD), firmware must call Cy_SysClk_IloHibernateOn(). 
 304:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 305:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Additionally, the ILO clock can be trimmed to +/- 1.5% of nominal frequency using
 306:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   a higher precision clock source. Use the \ref group_sysclk_calclk API to measure 
 307:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   the current ILO frequency before trimming.
 308:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 309:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \note The ILO is always the source clock for the \ref group_wdt. Therefore:
 310:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - The WDT must be unlocked when making an ILO function call in the PDL
 311:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - It is recommended to always have the ILO enabled
 312:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 313:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_ilo_funcs       Functions
 314:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 315:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_pilo            Precision Internal Low-Speed Oscillator (PILO)
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 48


 316:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 317:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   PILO provides a higher accuracy 32.768 kHz clock than the \ref group_sysclk_ilo "ILO".
 318:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   When periodically calibrated using a high-accuracy clock such as the
 319:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \ref group_sysclk_eco "ECO", the PILO can achieve 250 ppm accuracy of nominal frequency.
 320:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The PILO is capable of operating in device Active, Sleep and Deep-Sleep power modes. 
 321:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   It is not available in Hibernate mode.
 322:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 323:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The PILO can be used as a source for the \ref group_sysclk_clk_lf. However,
 324:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   because PILO is disabled in Hibernate mode, RTC timers cannot operate in this mode
 325:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   when clocked using the PILO. Instead, either the \ref group_sysclk_ilo "ILO" or
 326:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \ref group_sysclk_wco "WCO" should be used when hibernate operation is required. 
 327:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 328:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_backup.png)
 329:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 330:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Periodic calibration to a high-accuracy clock (such as ECO) is required to
 331:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   maintain accuracy. The application should use the functions described in the 
 332:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \ref group_sysclk_calclk API to measure the current PILO frequency before trimming.
 333:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 334:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_pilo_funcs      Functions
 335:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 336:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_calclk          Clock Measurement
 337:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 338:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   These functions measure the frequency of a specified clock relative to a
 339:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   reference clock. They are typically called in the following order:
 340:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 341:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   1. Specify the measured clock, the count, and the reference clock
 342:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   2. Start the counters
 343:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   3. Wait for the measurement counter to finish counting
 344:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   4. Retrieve the measured frequency
 345:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 346:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \note These functions may also be used as part of a clock trimming
 347:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   process. Refer to the \ref group_sysclk_trim "Clock Trim" API.
 348:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 349:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_calclk_funcs    Functions
 350:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_calclk_enums    Enumerated Types
 351:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 352:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_trim            Clock Trim (ILO, PILO)
 353:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 354:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   These functions perform a single trim operation on the ILO or PILO. Each
 355:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   function's parameter is the actual frequency of the clock. To measure the
 356:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   frequency, use the functions described in the \ref group_sysclk_calclk API.
 357:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 358:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   To trim the clock as close as possible to the target frequency, multiple
 359:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   calls to the trim function may be needed. A typical usage example is to:
 360:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   1. Call the clock measurement functions to get the actual frequency of the clock
 361:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   2. Call the trim function, passing in the measured frequency
 362:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   3. Repeat the above until the trim function reports that the clock is trimmed to within limits.
 363:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 364:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_trim_funcs      Functions
 365:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 366:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_pm              Low Power Callback
 367:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 368:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Entering and exiting low power modes require compatible clock configurations
 369:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   to be set before entering low power and restored upon wake-up and exit. The
 370:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   SysClk driver provides a Cy_SysClk_DeepSleepCallback() function to support
 371:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   deep-sleep mode entry. 
 372:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 49


 373:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   This function can be called either by itself before initiating low-power mode
 374:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   entry or it can be used in conjunction with the SysPm driver as a registered 
 375:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   callback. To do so, register this function as a callback before calling 
 376:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Cy_SysPm_DeepSleep(). Specify \ref CY_SYSPM_DEEPSLEEP as the callback type, 
 377:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   and call Cy_SysPm_RegisterCallback().
 378:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   
 379:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \note If the FLL or PLL source is the ECO, this function must be called.
 380:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 381:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_pm_funcs        Functions
 382:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 383:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_wco             Watch Crystal Oscillator (WCO)
 384:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 385:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The WCO is a highly accurate 32.768 kHz clock source capable of operating
 386:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   in all power modes (excluding the Off mode). It is the primary clock source for
 387:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   the backup domain clock, which is used by the real-time clock (RTC). The 
 388:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   WCO can also be used as a source for the low-frequency clock to support other
 389:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   low power mode peripherals.
 390:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 391:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_backup.png)
 392:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 393:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The WCO requires the configuration of the dedicated WCO pins (SRSS_WCO_IN_PIN,
 394:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   SRSS_WCO_OUT_PIN). These must be configured as Analog Hi-Z drive modes and the
 395:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   HSIOM selection set to GPIO. The WCO can also be used in bypass mode, where
 396:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   an external 32.768 kHz square wave is brought in directly through the 
 397:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   SRSS_WCO_OUT_PIN pin.
 398:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 399:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Some devices support a built-in clock supervisor (CSV) in the WCO. The clock
 400:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   supervisor detects if the WCO has been lost; that is, the WCO is no longer 
 401:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   producing clock pulses. The CSV does this by checking to ensure there is at 
 402:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   least one WCO clock pulse within a certain time window. The ILO or PILO can be
 403:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   the supervising clock. Firmware can configure the CSV to trigger a fault,
 404:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   a reset, or both after specified cycles of the supervising clock.
 405:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 406:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_wco_funcs       Functions
 407:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_wco_structs     Data Structures
 408:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_wco_enums       Enumerated Types
 409:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 410:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_clk_hf          High-Frequency Clocks
 411:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 412:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Multiple high frequency clocks (CLK_HF) are available in the device. For example,
 413:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   PSoC 63 series has five high-frequency root clocks. Each CLK_HF has a particular
 414:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   connection and chip-specific destination on the device.
 415:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 416:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   |Name     |Description                                             |
 417:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   |:--------|:-------------------------------------------------------|
 418:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   |CLK_HF[0]| Root clock for CPUs, PERI, and AHB infrastructure      |
 419:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   |CLK_HF[1]| Root clock for the PDM/PCM and I2S audio subsystem     |
 420:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   |CLK_HF[2]| Root clock for the Serial Memory Interface subsystem   |
 421:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   |CLK_HF[3]| Root clock for USB communications                      |
 422:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   |CLK_HF[4]| Clock output on clk_ext pin (when used as an output)   |
 423:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 424:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_hf.png)
 425:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 426:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Note this is a particular example. The actual tree may vary depending on the device series.
 427:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Consult the Technical Reference Manual for your device for details.
 428:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   
 429:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   High frequency clocks are sourced by path clocks, which should be configured
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 50


 430:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   first. An exception to this rule is CLK_HF[0], which cannot be disabled. 
 431:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   This divided clock drives the core processors and the peripherals in the system.
 432:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   In order to update its clock source, CLK_HF[0] source must be selected without
 433:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   disabling the clock.
 434:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 435:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_hf_dist.png)
 436:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 437:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Some devices support a clock supervisor (CSV) for each root clock. These
 438:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   can detect frequency loss, or monitor that the clock frequency stays within
 439:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   a specified range. The possible supervising clocks are IMO, ECO, or ALTHF. 
 440:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Loss detection and frequency monitoring can be enabled or disabled independently.
 441:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Each has its own programmable action that occurs on detection of an error.
 442:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 443:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_hf_funcs    Functions
 444:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_hf_structs  Data Structures
 445:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_hf_enums    Enumerated Types
 446:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 447:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_clk_fast        Fast Clock
 448:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 449:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The fast clock drives the "fast" processor (e.g. Cortex-M4 processor in PSoC 6).
 450:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   This clock is sourced by CLK_HF[0] (\ref group_sysclk_clk_hf "HF Clocks").
 451:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   A divider value of 1~256 can be used to further divide the CLK_HF[0] to a
 452:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   desired clock speed for the processor.
 453:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 454:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_fast.png)
 455:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 456:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_fast_funcs  Functions
 457:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 458:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_clk_peri        Peripheral Clock
 459:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 460:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The peripheral clock is a divided clock of CLK_HF0 (\ref group_sysclk_clk_hf "HF Clocks").
 461:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   It is the source clock for the \ref group_sysclk_clk_slow, and most active domain
 462:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   peripheral clocks (\ref group_sysclk_clk_peripheral). A divider value of 1~256 
 463:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   can be used to further divide the CLK_HF[0] to a desired clock speed for the peripherals.
 464:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 465:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_peri.png)
 466:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 467:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_peri_funcs  Functions
 468:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 469:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_clk_peripheral  Peripherals Clock Dividers
 470:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 471:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   There are multiple peripheral clock dividers that, in effect, create 
 472:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   multiple separate peripheral clocks. The available dividers vary per device 
 473:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   series. As an example, for the PSoC 63 series there are 29 dividers:
 474:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 475:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - eight 8-bit dividers
 476:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - sixteen 16-bit dividers
 477:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - four fractional 16.5-bit dividers (16 integer bits, 5 fractional bits)
 478:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - one fractional 24.5-bit divider (24 integer bits, 5 fractional bits)
 479:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 480:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 481:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The 8-bit and 16-bit dividers are integer dividers. A divider value of 1 
 482:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   means the output frequency matches the input frequency (that is, there is
 483:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   no change). Otherwise the frequency is divided by the value of the divider.
 484:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   For example, if the input frequency is 50 MHz, and the divider is value 10,
 485:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   the output frequency is 5 MHz.
 486:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 51


 487:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The five fractional bits supports further precision in 1/32nd increments. For
 488:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   example, a divider with an integer value of 3 and a fractional value of
 489:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   4 (4/32) results in a divider of 3.125. Fractional dividers are useful when
 490:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   a high-precision clock is required, for example, for a UART/SPI serial
 491:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   interface.
 492:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 493:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_peri_divs.png)
 494:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 495:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Each peripheral can connect to any one of the programmable dividers. A
 496:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   particular peripheral clock divider can drive multiple peripherals.
 497:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   
 498:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The SysClk driver also supports phase aligning two peripheral clock dividers using
 499:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Cy_SysClk_PeriphEnablePhaseAlignDivider(). Alignment works for both integer
 500:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   and fractional dividers. The divider to which a second divider is aligned
 501:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   must already be enabled.
 502:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 503:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_peripheral_funcs Functions
 504:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_peripheral_enums Enumerated Types
 505:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 506:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_clk_slow        Slow Clock
 507:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 508:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The slow clock is the source clock for the "slow" processor (e.g. Cortex-M0+ in PSoC 6).
 509:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   This clock is a divided version of the \ref group_sysclk_clk_peri, which in turn is 
 510:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   a divided version of CLK_HF[0] (\ref group_sysclk_clk_hf "HF Clocks"). A divider 
 511:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   value of 1~256 can be used to further divide the Peri clock to a desired clock speed
 512:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   for the processor.
 513:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 514:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_slow.png)
 515:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 516:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_slow_funcs  Functions
 517:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 518:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_clk_lf          Low-Frequency Clock
 519:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 520:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The low-frequency clock is the source clock for the \ref group_mcwdt
 521:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   and can be the source clock for \ref group_sysclk_clk_bak, which drives the
 522:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \ref group_rtc.
 523:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   
 524:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The low-frequency clock has three possible source clocks:
 525:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \ref group_sysclk_ilo "ILO", \ref group_sysclk_pilo "PILO", and
 526:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \ref group_sysclk_wco "WCO".
 527:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 528:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_lf.png)
 529:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 530:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_lf_funcs    Functions
 531:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_lf_enums    Enumerated Types
 532:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 533:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_clk_timer       Timer Clock
 534:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 535:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The timer clock can be a source for the alternative clock driving 
 536:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   the \ref group_arm_system_timer. It can also be used as a reference clock 
 537:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   for a counter in the \ref group_energy_profiler "Energy Profiler".
 538:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   
 539:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The timer clock is a divided clock of either the IMO or CLK_HF[0]
 540:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   (\ref group_sysclk_clk_hf "HF Clocks").
 541:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 542:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_timer_funcs Functions
 543:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_timer_enums Enumerated Types
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 52


 544:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 545:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_clk_pump        Pump Clock
 546:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 547:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The pump clock is a clock source used to provide analog precision in low voltage
 548:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   applications. Depending on the usage scenario, it may be required to drive the
 549:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   internal voltage pump for the Continuous Time Block mini (CTBm) in the analog 
 550:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   subsystem. The pump clock is a divided clock of one of the clock paths 
 551:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   (\ref group_sysclk_path_src).
 552:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 553:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_pump_funcs  Functions
 554:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_pump_enums  Enumerated Types
 555:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 556:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_clk_bak         Backup Domain Clock
 557:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 558:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The backup domain clock drives the \ref group_rtc.
 559:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   This clock has two possible source clocks: \ref group_sysclk_wco "WCO"
 560:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   or the \ref group_sysclk_clk_lf. In turn the low frequency clock is sourced by
 561:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \ref group_sysclk_ilo "ILO", \ref group_sysclk_pilo "PILO", or
 562:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \ref group_sysclk_wco "WCO". Typically the ILO is not suitable as an RTC source,
 563:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   because of its low accuracy. However the ILO does operate in hibernate mode and
 564:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   may be used as an alternative to the WCO with a tradeoff in precision.
 565:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 566:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_bak_funcs   Functions
 567:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_bak_enums   Enumerated Types
 568:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 569:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 570:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 571:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #if !defined(CY_SYSCLK_H)
 572:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #define CY_SYSCLK_H
 573:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 574:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #include <stdbool.h>
 575:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #include "cy_device.h"
 576:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #include "cy_device_headers.h"
 577:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #include "cy_syslib.h"
 578:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #include "cy_syspm.h"
 579:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 580:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 581:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #if defined(__cplusplus)
 582:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** extern "C" {
 583:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #endif /* __cplusplus */
 584:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 585:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 586:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_macros
 587:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 588:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 589:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** Driver major version */
 590:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #define  CY_SYSCLK_DRV_VERSION_MAJOR   2
 591:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** Driver minor version */
 592:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #define  CY_SYSCLK_DRV_VERSION_MINOR   0
 593:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** Sysclk driver identifier */
 594:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #define CY_SYSCLK_ID   CY_PDL_DRV_ID(0x12U)
 595:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 596:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_macros */
 597:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 598:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 599:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_returns
 600:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 53


 601:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 602:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** Defines general-purpose function return values. */
 603:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
 604:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 605:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_SUCCESS       = 0u, /**< Command completed with no errors */
 606:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_BAD_PARAM     = (CY_SYSCLK_ID | CY_PDL_STATUS_ERROR | 1U), /**< Invalid function inpu
 607:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_TIMEOUT       = (CY_SYSCLK_ID | CY_PDL_STATUS_ERROR | 2U), /**< Timeout occurred */
 608:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_INVALID_STATE = (CY_SYSCLK_ID | CY_PDL_STATUS_ERROR | 3U)  /**< Clock is in an invali
 609:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_sysclk_status_t;
 610:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_returns */
 611:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 612:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \cond INTERNAL */
 613:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* Calculate a / b with rounding to the nearest integer. a and b must have the same sign. */
 614:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #define CY_SYSCLK_DIV_ROUND(a, b) (((a) + ((b) / 2u)) / (b))
 615:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* Calculate a / b with rounding up if remainder != 0. a and b must both be positive. */
 616:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #define CY_SYSCLK_DIV_ROUNDUP(a, b) ((((a) - 1U) / (b)) + 1U)
 617:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \endcond */
 618:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 619:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 620:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
 621:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ===========================    ECO SECTION    ============================ */
 622:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
 623:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 624:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 625:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_macros
 626:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 627:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 628:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 629:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 630:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_ecostatus ECO status
 631:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 632:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Constants used for expressing ECO status.
 633:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 634:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #define CY_SYSCLK_ECOSTAT_AMPLITUDE  0UL /**< \brief ECO does not have sufficient amplitude */
 635:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #define CY_SYSCLK_ECOSTAT_INACCURATE 1UL /**< \brief ECO may not be meeting accuracy and duty cycle
 636:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #define CY_SYSCLK_ECOSTAT_STABLE     2UL /**< \brief ECO has fully stabilized */
 637:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} */
 638:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 639:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_macros */
 640:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 641:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 642:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 643:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_eco_funcs
 644:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 645:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 646:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_sysclk_status_t Cy_SysClk_EcoConfigure(uint32_t freq, uint32_t cLoad, uint32_t esr, uint32_t 
 647:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_sysclk_status_t Cy_SysClk_EcoEnable(uint32_t timeoutus);
 648:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_EcoDisable(void);
 649:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint32_t Cy_SysClk_EcoGetStatus(void);
 650:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 651:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
 652:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_EcoDisable
 653:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
 654:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 655:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Disables the external crystal oscillator (ECO). This function should not be
 656:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * called if the ECO is sourcing clkHf[0].
 657:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 54


 658:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
 659:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_EcoDisable
 660:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 661:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
 662:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_EcoDisable(void)
 663:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 664:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     SRSS_CLK_ECO_CONFIG &= (uint32_t)~_VAL2FLD(SRSS_CLK_ECO_CONFIG_ECO_EN, 1U); /* 0 = disable */
 665:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
 666:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 667:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
 668:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_EcoGetStatus
 669:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
 670:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 671:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Reports the current status of the external crystal oscillator (ECO).
 672:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 673:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return
 674:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CY_SYSCLK_ECOSTAT_AMPLITUDE = ECO does not have sufficient amplitude<br>
 675:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CY_SYSCLK_ECOSTAT_INACCURATE = ECO has sufficient amplitude but may not be meeting accuracy and d
 676:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CY_SYSCLK_ECOSTAT_STABLE = ECO has fully stabilized
 677:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 678:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
 679:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_EcoGetStatus
 680:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 681:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
 682:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint32_t Cy_SysClk_EcoGetStatus(void)
 683:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 684:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint32_t retVal = (SRSS_CLK_ECO_STATUS & (SRSS_CLK_ECO_STATUS_ECO_OK_Msk | SRSS_CLK_ECO_STATUS_
 685:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     /* if ECO is not ready, just report the ECO_OK bit. Otherwise report 2 = ECO ready */
 686:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return ((0UL == (retVal & SRSS_CLK_ECO_STATUS_ECO_READY_Msk)) ? retVal : CY_SYSCLK_ECOSTAT_STAB
 687:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
 688:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_eco_funcs */
 689:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 690:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 691:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
 692:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ====================    INPUT MULTIPLEXER SECTION    ===================== */
 693:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
 694:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 695:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_path_src_enums
 696:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 697:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 698:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 699:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Input multiplexer clock sources
 700:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 701:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
 702:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 703:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKPATH_IN_IMO    =     0U, /**< Select the IMO as the output of the path mux */
 704:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKPATH_IN_EXT    =     1U, /**< Select the EXT as the output of the path mux */
 705:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKPATH_IN_ECO    =     2U, /**< Select the ECO as the output of the path mux */
 706:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKPATH_IN_ALTHF  =     3U, /**< Select the ALTHF as the output of the path mux.
 707:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                            *   Make sure the ALTHF clock source is available on use
 708:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                            */
 709:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKPATH_IN_DSIMUX =     4U, /**< Select the DSI MUX output as the output of the path 
 710:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKPATH_IN_DSI    = 0x100U, /**< Select a DSI signal (0 - 15) as the output of the DS
 711:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                            *   Make sure the DSI clock sources are available on use
 712:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                            */
 713:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKPATH_IN_ILO    = 0x110U, /**< Select the ILO (16) as the output of the DSI mux and
 714:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKPATH_IN_WCO    = 0x111U, /**< Select the WCO (17) as the output of the DSI mux and
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 55


 715:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKPATH_IN_ALTLF  = 0x112U, /**< Select the ALTLF (18) as the output of the DSI mux a
 716:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                            *   Make sure the ALTLF clock sources in available on us
 717:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                            */
 718:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKPATH_IN_PILO   = 0x113U  /**< Select the PILO (19) as the output of the DSI mux an
 719:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                            *   Make sure the PILO clock sources in available on use
 720:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                            */
 721:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_clkpath_in_sources_t;
 722:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_path_src_enums */
 723:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 724:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 725:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_path_src_funcs
 726:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 727:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 728:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_sysclk_status_t Cy_SysClk_ClkPathSetSource(uint32_t clkPath, cy_en_clkpath_in_sources_t sourc
 729:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_clkpath_in_sources_t Cy_SysClk_ClkPathGetSource(uint32_t clkPath);
 730:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_path_src_funcs */
 731:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 732:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 733:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
 734:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ===========================    FLL SECTION    ============================ */
 735:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
 736:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 737:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_fll_enums
 738:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 739:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 740:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** FLL and PLL output mode.
 741:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * See registers CLK_FLL_CONFIG3 and CLK_PLL_CONFIG0, bits BYPASS_SEL.
 742:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 743:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
 744:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 745:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_FLLPLL_OUTPUT_AUTO   = 0U, /**< Output FLL/PLL input source when not locked, and FLL/
 746:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_FLLPLL_OUTPUT_AUTO1  = 1U, /**< Same as AUTO */
 747:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_FLLPLL_OUTPUT_INPUT  = 2U, /**< Output FLL/PLL input source regardless of lock status
 748:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_FLLPLL_OUTPUT_OUTPUT = 3U  /**< Output FLL/PLL output regardless of lock status. This
 749:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_fll_pll_output_mode_t;
 750:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 751:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** FLL current-controlled oscillator (CCO) frequency ranges.
 752:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * See register CLK_FLL_CONFIG4, bits CCO_RANGE.
 753:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 754:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
 755:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 756:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_FLL_CCO_RANGE0, /**< Target frequency is in range  48 -  64 MHz. */
 757:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_FLL_CCO_RANGE1, /**< Target frequency is in range  64 -  85 MHz. */
 758:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_FLL_CCO_RANGE2, /**< Target frequency is in range  85 - 113 MHz. */
 759:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_FLL_CCO_RANGE3, /**< Target frequency is in range 113 - 150 MHz. */
 760:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_FLL_CCO_RANGE4  /**< Target frequency is in range 150 - 200 MHz. */
 761:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_fll_cco_ranges_t;
 762:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_fll_enums */
 763:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 764:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 765:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_fll_structs
 766:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 767:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 768:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** Structure containing information for manual configuration of FLL.
 769:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 770:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef struct
 771:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 56


 772:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint32_t                    fllMult;         /**< CLK_FLL_CONFIG  register, FLL_MULT bits */
 773:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint16_t                    refDiv;          /**< CLK_FLL_CONFIG2 register, FLL_REF_DIV bits */
 774:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_fll_cco_ranges_t      ccoRange;        /**< CLK_FLL_CONFIG4 register, CCO_RANGE bits */
 775:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     bool                        enableOutputDiv; /**< CLK_FLL_CONFIG  register, FLL_OUTPUT_DIV bit 
 776:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint16_t                    lockTolerance;   /**< CLK_FLL_CONFIG2 register, LOCK_TOL bits */
 777:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint8_t                     igain;           /**< CLK_FLL_CONFIG3 register, FLL_LF_IGAIN bits *
 778:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint8_t                     pgain;           /**< CLK_FLL_CONFIG3 register, FLL_LF_PGAIN bits *
 779:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint16_t                    settlingCount;   /**< CLK_FLL_CONFIG3 register, SETTLING_COUNT bits
 780:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_fll_pll_output_mode_t outputMode;      /**< CLK_FLL_CONFIG3 register, BYPASS_SEL bits */
 781:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint16_t                    cco_Freq;        /**< CLK_FLL_CONFIG4 register, CCO_FREQ bits */
 782:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_stc_fll_manual_config_t;
 783:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_fll_structs */
 784:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 785:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 786:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_fll_funcs
 787:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 788:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 789:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_sysclk_status_t Cy_SysClk_FllConfigure(uint32_t inputFreq, uint32_t outputFreq, cy_en_fll_pll
 790:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_sysclk_status_t Cy_SysClk_FllManualConfigure(const cy_stc_fll_manual_config_t *config);
 791:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** void Cy_SysClk_FllGetConfiguration(cy_stc_fll_manual_config_t *config);
 792:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_sysclk_status_t Cy_SysClk_FllEnable(uint32_t timeoutus);
 793:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE bool Cy_SysClk_FllLocked(void);
 794:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_FllDisable(void);
 795:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 796:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
 797:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_FllLocked
 798:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
 799:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 800:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Reports whether the FLL is locked first time during FLL starting.
 801:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Intended to be used with \ref Cy_SysClk_FllEnable with zero timeout.
 802:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 803:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return 
 804:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * false = not locked<br>
 805:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * true = locked
 806:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 807:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note
 808:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The unlock occurrence may appear during FLL normal operation, so this function 
 809:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * is not recommended to check the FLL normal operation stability.
 810:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 811:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
 812:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_FllLocked
 813:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 814:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
 815:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE bool Cy_SysClk_FllLocked(void)
 816:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 817:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (_FLD2BOOL(SRSS_CLK_FLL_STATUS_LOCKED, SRSS_CLK_FLL_STATUS));
 818:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
 819:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 820:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 821:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
 822:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_FllDisable
 823:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
 824:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 825:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Disables the FLL and the CCO.
 826:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 827:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return \ref cy_en_sysclk_status_t
 828:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 57


 829:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note 
 830:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref SystemCoreClockUpdate after this function calling 
 831:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * if it affects the CLK_HF0 frequency.
 832:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 833:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note
 834:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref Cy_SysLib_SetWaitStates after calling this function if
 835:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * the FLL is the source of CLK_HF0 and the CLK_HF0 frequency is decreasing.
 836:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 837:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
 838:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_FllDisable
 839:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 840:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
 841:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_FllDisable(void)
 842:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 843:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_REG32_CLR_SET(SRSS_CLK_FLL_CONFIG3, SRSS_CLK_FLL_CONFIG3_BYPASS_SEL, CY_SYSCLK_FLLPLL_OUTPUT
 844:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     SRSS_CLK_FLL_CONFIG  &= ~SRSS_CLK_FLL_CONFIG_FLL_ENABLE_Msk;
 845:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     SRSS_CLK_FLL_CONFIG4 &= ~SRSS_CLK_FLL_CONFIG4_CCO_ENABLE_Msk;
 846:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return CY_SYSCLK_SUCCESS;
 847:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
 848:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_fll_funcs */
 849:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 850:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 851:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
 852:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ===========================    PLL SECTION    ============================ */
 853:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
 854:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 855:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_pll_structs
 856:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 857:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 858:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** Structure containing information for configuration of a PLL.
 859:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 860:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef struct
 861:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 862:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint32_t                    inputFreq;  /**< frequency of PLL source, in Hz */
 863:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint32_t                    outputFreq; /**< frequency of PLL output, in Hz */
 864:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     bool                        lfMode;     /**< CLK_PLL_CONFIG register, PLL_LF_MODE bit */
 865:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_fll_pll_output_mode_t outputMode; /**< CLK_PLL_CONFIG register, BYPASS_SEL bits */
 866:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_stc_pll_config_t;
 867:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 868:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** Structure containing information for manual configuration of a PLL.
 869:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 870:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef struct
 871:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 872:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint8_t                     feedbackDiv;  /**< CLK_PLL_CONFIG register, FEEDBACK_DIV (P) bits *
 873:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint8_t                     referenceDiv; /**< CLK_PLL_CONFIG register, REFERENCE_DIV (Q) bits 
 874:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint8_t                     outputDiv;    /**< CLK_PLL_CONFIG register, OUTPUT_DIV bits */
 875:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     bool                        lfMode;       /**< CLK_PLL_CONFIG register, PLL_LF_MODE bit */
 876:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_fll_pll_output_mode_t outputMode;   /**< CLK_PLL_CONFIG register, BYPASS_SEL bits */
 877:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_stc_pll_manual_config_t;
 878:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_pll_structs */
 879:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 880:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 881:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_pll_funcs
 882:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 883:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 884:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_sysclk_status_t Cy_SysClk_PllConfigure(uint32_t clkPath, const cy_stc_pll_config_t *config);
 885:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_sysclk_status_t Cy_SysClk_PllManualConfigure(uint32_t clkPath, const cy_stc_pll_manual_config
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 58


 886:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_sysclk_status_t Cy_SysClk_PllGetConfiguration(uint32_t clkPath, cy_stc_pll_manual_config_t *c
 887:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_sysclk_status_t Cy_SysClk_PllEnable(uint32_t clkPath, uint32_t timeoutus);
 888:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE bool Cy_SysClk_PllLocked(uint32_t clkPath);
 889:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE bool Cy_SysClk_PllLostLock(uint32_t clkPath);
 890:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_PllDisable(uint32_t clkPath);
 891:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 892:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
 893:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PllLocked
 894:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
 895:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 896:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Reports whether or not the selected PLL is locked.
 897:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 898:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param clkPath Selects which PLL to check. 1 is the first PLL; 0 is invalid.
 899:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 900:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return 
 901:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * false = not locked<br>
 902:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * true = locked
 903:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 904:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
 905:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_PllLocked
 906:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 907:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
 908:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE bool Cy_SysClk_PllLocked(uint32_t clkPath)
 909:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 910:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     clkPath--; /* to correctly access PLL config and status registers structures */
 911:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_ASSERT_L1(clkPath < CY_SRSS_NUM_PLL);
 912:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (_FLD2BOOL(SRSS_CLK_PLL_STATUS_LOCKED, SRSS_CLK_PLL_STATUS[clkPath]));
 913:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
 914:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 915:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
 916:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PllLostLock
 917:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
 918:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 919:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Reports whether or not the selected PLL lost its lock since the last time this
 920:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * function was called. Clears the lost lock indicator.
 921:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 922:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param clkPath Selects which PLL to check. 1 is the first PLL; 0 is invalid.
 923:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 924:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return 
 925:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * false = did not lose lock<br>
 926:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * true = lost lock
 927:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 928:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
 929:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_PllLostLock
 930:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 931:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
 932:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE bool Cy_SysClk_PllLostLock(uint32_t clkPath)
 933:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 934:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     clkPath--; /* to correctly access PLL config and status registers structures */
 935:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_ASSERT_L1(clkPath < CY_SRSS_NUM_PLL);
 936:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     bool retVal = _FLD2BOOL(SRSS_CLK_PLL_STATUS_UNLOCK_OCCURRED, SRSS_CLK_PLL_STATUS[clkPath]);
 937:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     /* write a 1 to clear the unlock occurred bit */
 938:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     SRSS_CLK_PLL_STATUS[clkPath] = SRSS_CLK_PLL_STATUS_UNLOCK_OCCURRED_Msk;
 939:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (retVal);
 940:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
 941:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 942:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 59


 943:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PllDisable
 944:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
 945:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 946:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Disables the selected PLL.
 947:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 948:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param clkPath Selects which PLL to disable. 1 is the first PLL; 0 is invalid.
 949:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 950:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return Error / status code:<br>
 951:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CY_SYSCLK_SUCCESS - PLL successfully disabled<br>
 952:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CY_SYSCLK_BAD_PARAM - invalid clock path number
 953:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 954:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note 
 955:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref SystemCoreClockUpdate after this function calling 
 956:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * if it affects the CLK_HF0 frequency.
 957:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 958:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note
 959:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref Cy_SysLib_SetWaitStates before calling this function if
 960:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * the PLL is the source of CLK_HF0 and the CLK_HF0 frequency is increasing.
 961:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 962:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note
 963:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref Cy_SysLib_SetWaitStates after calling this function if
 964:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * the PLL is the source of CLK_HF0 and the CLK_HF0 frequency is decreasing.
 965:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 966:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
 967:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_PllDisable
 968:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 969:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
 970:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_PllDisable(uint32_t clkPath)
 971:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 972:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_sysclk_status_t retVal = CY_SYSCLK_BAD_PARAM;
 973:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     clkPath--; /* to correctly access PLL config and status registers structures */
 974:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if (clkPath < CY_SRSS_NUM_PLL)
 975:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
 976:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         /* First bypass PLL */
 977:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         CY_REG32_CLR_SET(SRSS_CLK_PLL_CONFIG[clkPath], SRSS_CLK_PLL_CONFIG_BYPASS_SEL, CY_SYSCLK_FL
 978:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         /* Wait at least 6 PLL clock cycles */
 979:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         Cy_SysLib_DelayUs(1U);
 980:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         /* And now disable the PLL itself */
 981:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         SRSS_CLK_PLL_CONFIG[clkPath] &= ~SRSS_CLK_PLL_CONFIG_ENABLE_Msk;
 982:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         retVal = CY_SYSCLK_SUCCESS;
 983:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
 984:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (retVal);
 985:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
 986:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_pll_funcs */
 987:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 988:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 989:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
 990:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ===========================    ILO SECTION    ============================ */
 991:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
 992:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 993:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_ilo_funcs
 994:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 995:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 996:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_IloEnable(void);
 997:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_IloDisable(void);
 998:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_IloHibernateOn(bool on);
 999:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 60


1000:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1001:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_IloEnable
1002:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1003:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1004:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Enables the ILO.
1005:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1006:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note The watchdog timer (WDT) must be unlocked before calling this function.
1007:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1008:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1009:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_IloEnable
1010:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1011:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1012:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_IloEnable(void)
1013:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1014:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     SRSS_CLK_ILO_CONFIG |= SRSS_CLK_ILO_CONFIG_ENABLE_Msk;
1015:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1016:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1017:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1018:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_IloDisable
1019:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1020:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1021:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Disables the ILO. ILO can't be disabled if WDT is enabled.
1022:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1023:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return Error / status code:<br>
1024:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CY_SYSCLK_SUCCESS - ILO successfully disabled<br>
1025:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CY_SYSCLK_INVALID_STATE - Cannot disable the ILO if the WDT is enabled.
1026:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1027:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note The watchdog timer (WDT) must be unlocked before calling this function.
1028:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Do not call this function if the WDT is enabled, because the WDT is clocked by
1029:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * the ILO.
1030:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1031:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1032:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_IloDisable
1033:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1034:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1035:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_IloDisable(void)
1036:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1037:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_sysclk_status_t retVal = CY_SYSCLK_INVALID_STATE;
1038:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if (!_FLD2BOOL(SRSS_WDT_CTL_WDT_EN, SRSS_WDT_CTL)) /* if disabled */
1039:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
1040:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         SRSS_CLK_ILO_CONFIG &= ~SRSS_CLK_ILO_CONFIG_ENABLE_Msk;
1041:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         retVal = CY_SYSCLK_SUCCESS;
1042:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1043:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return retVal;
1044:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1045:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1046:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1047:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_IloHibernateOn
1048:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1049:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1050:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Controls whether the ILO stays on during a hibernate, or through an XRES or
1051:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * brown-out detect (BOD) event.
1052:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1053:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param on
1054:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * true = ILO stays on during hibernate or across XRES/BOD.<br> 
1055:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * false = ILO turns off for hibernate or XRES/BOD.
1056:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 61


1057:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note Writes to the register/bit are ignored if the watchdog (WDT) is locked.
1058:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1059:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1060:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_IloHibernateOn
1061:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1062:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1063:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_IloHibernateOn(bool on)
1064:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1065:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_REG32_CLR_SET(SRSS_CLK_ILO_CONFIG, SRSS_CLK_ILO_CONFIG_ILO_BACKUP, (uint32_t)on);
1066:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1067:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_ilo_funcs */
1068:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1069:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1070:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1071:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ===========================    PILO SECTION    =========================== */
1072:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1073:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1074:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_pilo_funcs
1075:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1076:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1077:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_PiloEnable(void);
1078:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_PiloDisable(void);
1079:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_PiloSetTrim(uint32_t trimVal);
1080:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint32_t Cy_SysClk_PiloGetTrim(void);
1081:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1082:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1083:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PiloEnable
1084:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1085:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1086:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Enables the PILO. 
1087:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1088:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note This function blocks for 1 millisecond between enabling the PILO and 
1089:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * releasing the PILO reset.
1090:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1091:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1092:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_PiloEnable
1093:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1094:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1095:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_PiloEnable(void)
1096:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1097:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     SRSS_CLK_PILO_CONFIG |= _VAL2FLD(SRSS_CLK_PILO_CONFIG_PILO_EN, 1U); /* 1 = enable */
1098:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     Cy_SysLib_Delay(1U/*msec*/);
1099:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     /* release the reset and enable clock output */
1100:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     SRSS_CLK_PILO_CONFIG |= SRSS_CLK_PILO_CONFIG_PILO_RESET_N_Msk |
1101:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                             SRSS_CLK_PILO_CONFIG_PILO_CLK_EN_Msk;
1102:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1103:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1104:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1105:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PiloDisable
1106:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1107:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1108:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Disables the PILO.
1109:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1110:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1111:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_PiloDisable
1112:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1113:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 62


1114:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_PiloDisable(void)
1115:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1116:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     /* Clear PILO_EN, PILO_RESET_N, and PILO_CLK_EN bitfields. This disables the
1117:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****        PILO and holds the PILO in a reset state. */
1118:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     SRSS_CLK_PILO_CONFIG &= (uint32_t)~(SRSS_CLK_PILO_CONFIG_PILO_EN_Msk      |
1119:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                         SRSS_CLK_PILO_CONFIG_PILO_RESET_N_Msk |
1120:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                         SRSS_CLK_PILO_CONFIG_PILO_CLK_EN_Msk);
1121:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1122:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1123:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1124:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PiloSetTrim
1125:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1126:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1127:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Sets the PILO trim bits, which adjusts the PILO frequency. This is typically
1128:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * done after measuring the PILO frequency; see \ref Cy_SysClk_StartClkMeasurementCounters().
1129:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1130:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1131:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_PiloSetTrim
1132:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1133:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1134:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_PiloSetTrim(uint32_t trimVal)
1135:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1136:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_REG32_CLR_SET(SRSS_CLK_PILO_CONFIG, SRSS_CLK_PILO_CONFIG_PILO_FFREQ, trimVal);
1137:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1138:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1139:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1140:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PiloGetTrim
1141:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1142:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1143:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Reports the current PILO trim bits value.
1144:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1145:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1146:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Refer to the Cy_SysClk_PiloSetTrim() function usage.
1147:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1148:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1149:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint32_t Cy_SysClk_PiloGetTrim(void)
1150:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1151:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (_FLD2VAL(SRSS_CLK_PILO_CONFIG_PILO_FFREQ, SRSS_CLK_PILO_CONFIG));
1152:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1153:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_pilo_funcs */
1154:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1155:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1156:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1157:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ====================    CLOCK MEASUREMENT SECTION    ===================== */
1158:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1159:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1160:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_calclk_enums
1161:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1162:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1163:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** Defines all possible clock sources. */
1164:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
1165:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1166:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_NC =            0U,
1167:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_ILO =           1U,
1168:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_WCO =           2U,
1169:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_BAK =           3U,
1170:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_ALTLF =         4U,
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 63


1171:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_LFCLK =         5U,
1172:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_IMO =           6U,
1173:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PILO =          8U,
1174:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_FAST_CLKS =     0x100U,
1175:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_ECO =           0x101U,
1176:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_EXT =           0x102U,
1177:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_ALTHF =         0x103U,
1178:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_TIMERCLK =      0x104U,
1179:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH_CLKS =     0x500U,
1180:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH0 =         0x500U,
1181:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH1 =         0x501U,
1182:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH2 =         0x502U,
1183:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH3 =         0x503U,
1184:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH4 =         0x504U,
1185:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH5 =         0x505U,
1186:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH6 =         0x506U,
1187:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH7 =         0x507U,
1188:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH8 =         0x508U,
1189:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH9 =         0x509U,
1190:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH10 =        0x50AU,
1191:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH11 =        0x50BU,
1192:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH12 =        0x50CU,
1193:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH13 =        0x50DU,
1194:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH14 =        0x50EU,
1195:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH15 =        0x50FU,
1196:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHFS =        0x600U,
1197:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF0 =        0x600U,
1198:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF1 =        0x601U,
1199:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF2 =        0x602U,
1200:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF3 =        0x603U,
1201:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF4 =        0x604U,
1202:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF5 =        0x605U,
1203:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF6 =        0x606U,
1204:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF7 =        0x607U,
1205:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF8 =        0x608U,
1206:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF9 =        0x609U,
1207:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF10 =       0x60AU,
1208:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF11 =       0x60BU,
1209:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF12 =       0x60CU,
1210:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF13 =       0x60DU,
1211:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF14 =       0x60EU,
1212:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF15 =       0x60FU,
1213:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_LAST_CLK =      0x610U
1214:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_meas_clks_t;
1215:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_calclk_enums */
1216:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1217:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1218:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_calclk_funcs
1219:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1220:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1221:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_sysclk_status_t Cy_SysClk_StartClkMeasurementCounters(cy_en_meas_clks_t clock1, uint32_t coun
1222:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE bool Cy_SysClk_ClkMeasurementCountersDone(void);
1223:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** uint32_t Cy_SysClk_ClkMeasurementCountersGetFreq(bool measuredClock, uint32_t refClkFreq);
1224:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1225:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1226:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkMeasurementCountersDone
1227:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 64


1228:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1229:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Checks if clock measurement counting is done, that is, counter1 has counted down
1230:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * to zero. Call \ref Cy_SysClk_StartClkMeasurementCounters() before calling this function.
1231:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1232:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return Status of calibration counters:<br>
1233:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * true = done<br>
1234:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * false = not done
1235:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1236:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1237:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Refer to the Cy_SysClk_StartClkMeasurementCounters() function usage.
1238:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1239:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1240:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE bool Cy_SysClk_ClkMeasurementCountersDone(void)
1241:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1242:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (_FLD2BOOL(SRSS_CLK_CAL_CNT1_CAL_COUNTER_DONE, SRSS_CLK_CAL_CNT1));
1243:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1244:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_calclk_funcs */
1245:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1246:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1247:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1248:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ==========================    TRIM SECTION    ============================ */
1249:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1250:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1251:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_trim_funcs
1252:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1253:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1254:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** int32_t Cy_SysClk_IloTrim(uint32_t iloFreq);
1255:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** int32_t Cy_SysClk_PiloTrim(uint32_t piloFreq);
1256:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_trim_funcs */
1257:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1258:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1259:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1260:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ======================    POWER MANAGEMENT SECTION    ==================== */
1261:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1262:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1263:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_pm_funcs
1264:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1265:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1266:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_syspm_status_t Cy_SysClk_DeepSleepCallback(cy_stc_syspm_callback_params_t *callbackParams, cy
1267:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_pm_funcs */
1268:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1269:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1270:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1271:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ===========================    WCO SECTION    ============================ */
1272:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1273:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1274:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_wco_enums
1275:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1276:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1277:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** WCO bypass modes */
1278:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
1279:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1280:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_WCO_NOT_BYPASSED = 0u, /**< WCO is not bypassed crystal is used */
1281:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_WCO_BYPASSED = 1U      /**< WCO is bypassed external clock must be supplied  on XTAL 
1282:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_wco_bypass_modes_t;
1283:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1284:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** WCO CSV supervisor clock selections */
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 65


1285:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
1286:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1287:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_WCO_CSV_SUPERVISOR_ILO,   /**< WCO CSV supervisor clock source is the ILO */
1288:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_WCO_CSV_SUPERVISOR_ALTLF, /**< WCO CSV supervisor clock source is the alternate low-f
1289:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_WCO_CSV_SUPERVISOR_PILO   /**< WCO CSV supervisor clock source is the PILO */
1290:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_wco_csv_supervisor_clock_t;
1291:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1292:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1293:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Clock supervisor clock loss window. There must be one clock of the supervised
1294:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * clock within this many clocks of the supervising clock.
1295:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * See registers CLK_CSV_HF_CTL and CLK_CSV_WCO_CTL, bitfield CSV_LOSS_WINDOW.
1296:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1297:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
1298:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1299:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CSV_LOSS_4_CYCLES =   0u, /**< 1 clock must be seen within 4 cycles of the supervisin
1300:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CSV_LOSS_8_CYCLES =   1U, /**< 1 clock must be seen within 8 cycles of the supervisin
1301:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CSV_LOSS_16_CYCLES =  2u, /**< 1 clock must be seen within 16 cycles of the supervisi
1302:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CSV_LOSS_32_CYCLES =  3u, /**< 1 clock must be seen within 32 cycles of the supervisi
1303:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CSV_LOSS_64_CYCLES =  4u, /**< 1 clock must be seen within 64 cycles of the supervisi
1304:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CSV_LOSS_128_CYCLES = 5u, /**< 1 clock must be seen within 128 cycles of the supervis
1305:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CSV_LOSS_256_CYCLES = 6u, /**< 1 clock must be seen within 256 cycles of the supervis
1306:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CSV_LOSS_512_CYCLES = 7u  /**< 1 clock must be seen within 512 cycles of the supervis
1307:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_csv_loss_window_t;
1308:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1309:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1310:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Clock supervisor error actions. See register CLK_CSV_HF_CTL[CSV_FREQ_ACTION and CSV_LOSS_ACTION].
1311:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1312:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
1313:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1314:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CSV_ERROR_IGNORE = 0u,     /**< Ignore the error reported by the clock supervisor. */
1315:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CSV_ERROR_FAULT = 1U,      /**< Trigger a fault when an error is reported by the cloc
1316:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CSV_ERROR_RESET = 2u,      /**< Trigger a reset when an error is reported by the cloc
1317:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CSV_ERROR_FAULT_RESET = 3u /**< Trigger a fault then reset when an error is reported 
1318:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_csv_error_actions_t;
1319:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_wco_enums */
1320:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1321:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1322:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_wco_structs
1323:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1324:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1325:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1326:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * This structure is used to configure the clock supervisor for the WCO.
1327:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1328:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef struct
1329:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1330:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_wco_csv_supervisor_clock_t supervisorClock; /**< supervisor clock selection */
1331:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     bool enableLossDetection;                         /**< 1= enabled, 0= disabled. Note that if lo
1332:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_csv_loss_window_t lossWindow;               /**< \ref cy_en_csv_loss_window_t */
1333:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_csv_error_actions_t lossAction;             /**< \ref cy_en_csv_error_actions_t */
1334:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_stc_wco_csv_config_t;
1335:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_wco_structs */
1336:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1337:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1338:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_wco_funcs
1339:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1340:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1341:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_WcoEnable(uint32_t timeoutus);
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 66


1342:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE bool Cy_SysClk_WcoOkay(void);
1343:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_WcoDisable(void);
1344:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_WcoBypass(cy_en_wco_bypass_modes_t bypass);
1345:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1346:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1347:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1348:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_WcoEnable
1349:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1350:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1351:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Enables the WCO.
1352:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1353:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param timeoutus amount of time in microseconds to wait for the WCO to be ready.
1354:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * If WCO is not ready, WCO is stopped. To avoid waiting for WCO ready set this to 0,
1355:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * and manually check if WCO is okay using \ref Cy_SysClk_WcoOkay.
1356:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1357:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return Error / status code:<br>
1358:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CY_SYSCLK_SUCCESS - WCO successfully enabled<br>
1359:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CY_SYSCLK_TIMEOUT - Timeout waiting for WCO to stabilize
1360:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1361:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1362:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_WcoEnable
1363:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1364:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1365:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_WcoEnable(uint32_t timeoutus)
1366:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1367:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_sysclk_status_t rtnval = CY_SYSCLK_TIMEOUT;
1368:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1369:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     /* first set the WCO enable bit */
1370:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     BACKUP_CTL |= BACKUP_CTL_WCO_EN_Msk;
1371:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1372:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     /* now do the timeout wait for STATUS, bit WCO_OK */
1373:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     for (; (Cy_SysClk_WcoOkay() == false) && (0UL != timeoutus); timeoutus--)
1374:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
1375:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         Cy_SysLib_DelayUs(1U);
1376:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1377:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if (0UL != timeoutus)
1378:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
1379:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         rtnval = CY_SYSCLK_SUCCESS;
1380:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1381:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1382:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (rtnval);
1383:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1384:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1385:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1386:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_WcoOkay
1387:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1388:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1389:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Reports the status of the WCO_OK bit.
1390:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1391:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return 
1392:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * true = okay<br>
1393:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * false = not okay
1394:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1395:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1396:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_WcoOkay
1397:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1398:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 67


1399:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE bool Cy_SysClk_WcoOkay(void)
1400:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1401:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (_FLD2BOOL(BACKUP_STATUS_WCO_OK, BACKUP_STATUS));
1402:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1403:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1404:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1405:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_WcoDisable
1406:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1407:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1408:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Disables the WCO.
1409:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1410:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1411:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_WcoDisable
1412:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1413:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1414:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_WcoDisable(void)
1415:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1416:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     BACKUP_CTL &= (uint32_t)~BACKUP_CTL_WCO_EN_Msk;
1417:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1418:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1419:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1420:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_WcoBypass
1421:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1422:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1423:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Sets whether the WCO is bypassed or not. If it is bypassed, then a 32-kHz clock
1424:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * must be provided on the wco_out pin.
1425:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1426:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param bypass \ref cy_en_wco_bypass_modes_t
1427:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1428:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1429:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_WcoBypass
1430:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1431:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1432:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_WcoBypass(cy_en_wco_bypass_modes_t bypass)
1433:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1434:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_REG32_CLR_SET(BACKUP_CTL, BACKUP_CTL_WCO_BYPASS, bypass);
1435:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1436:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_wco_funcs */
1437:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1438:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1439:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1440:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* =========================    clkHf[n] SECTION    ========================= */
1441:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1442:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1443:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_clk_hf_enums
1444:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1445:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1446:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1447:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Selects which clkHf input, or root mux, to configure.
1448:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * See CLK_ROOT_SELECT registers, bits ROOT_MUX.
1449:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Used with functions \ref Cy_SysClk_ClkHfSetSource and \ref Cy_SysClk_ClkHfGetSource.
1450:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1451:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
1452:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1453:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH0  = 0U,  /**< clkHf input is Clock Path 0 */
1454:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH1  = 1U,  /**< clkHf input is Clock Path 1 */
1455:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH2  = 2U,  /**< clkHf input is Clock Path 2 */
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 68


1456:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH3  = 3U,  /**< clkHf input is Clock Path 3 */
1457:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH4  = 4U,  /**< clkHf input is Clock Path 4 */
1458:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH5  = 5U,  /**< clkHf input is Clock Path 5 */
1459:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH6  = 6U,  /**< clkHf input is Clock Path 6 */
1460:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH7  = 7U,  /**< clkHf input is Clock Path 7 */
1461:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH8  = 8U,  /**< clkHf input is Clock Path 8 */
1462:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH9  = 9U,  /**< clkHf input is Clock Path 9 */
1463:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH10 = 10U, /**< clkHf input is Clock Path 10 */
1464:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH11 = 11U, /**< clkHf input is Clock Path 11 */
1465:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH12 = 12U, /**< clkHf input is Clock Path 12 */
1466:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH13 = 13U, /**< clkHf input is Clock Path 13 */
1467:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH14 = 14U, /**< clkHf input is Clock Path 14 */
1468:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH15 = 15U, /**< clkHf input is Clock Path 15 */
1469:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_clkhf_in_sources_t;
1470:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1471:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1472:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1473:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * clkHf divider values. See CLK_ROOT_SELECT registers, bits ROOT_DIV.
1474:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Used with functions \ref Cy_SysClk_ClkHfSetDivider and \ref Cy_SysClk_ClkHfGetDivider.
1475:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1476:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
1477:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1478:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_NO_DIVIDE   = 0U,    /**< don't divide clkHf. */
1479:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_DIVIDE_BY_2 = 1U,    /**< divide clkHf by 2 */
1480:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_DIVIDE_BY_4 = 2U,    /**< divide clkHf by 4 */
1481:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_DIVIDE_BY_8 = 3U     /**< divide clkHf by 8 */
1482:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_clkhf_dividers_t;
1483:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1484:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1485:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * clkHf clock supervisor input sources. See register CLK_CSV_HF_CTL[CSV_MUX].
1486:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1487:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
1488:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1489:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_CSV_SUPERVISOR_IMO   = 0U,  /**< Supervising clock is the IMO. */
1490:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_CSV_SUPERVISOR_EXT   = 1U,  /**< Supervising clock is the external clock */
1491:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_CSV_SUPERVISOR_ALTHF = 2U   /**< Supervising clock is clk_althf */
1492:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_clkhf_csv_supervisor_clock_t;
1493:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_clk_hf_enums */
1494:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1495:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1496:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_clk_hf_structs
1497:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{SupervisingWindow
1498:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1499:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1500:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * This structure is used to configure the clock supervisor for clkHf.
1501:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1502:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef struct
1503:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1504:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_clkhf_csv_supervisor_clock_t supervisorClock; /**< \ref cy_en_clkhf_csv_supervisor_clock_
1505:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint16_t supervisingWindow;                         /**< Number of supervising clock cycles */
1506:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     bool enableFrequencyFaultDetection;                 /**< 1= enabled, 0= disabled */
1507:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint16_t frequencyLowerLimit;                       /**< Lowest frequency in kHz that supervise
1508:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint16_t frequencyUpperLimit;                       /**< Highest frequency in kHz that supervis
1509:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_csv_error_actions_t frequencyAction;          /**< \ref cy_en_csv_error_actions_t */
1510:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     bool enableLossDetection;                           /**< 1= enabled, 0= disabled */
1511:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_csv_loss_window_t lossWindow;                 /**< \ref cy_en_csv_loss_window_t */
1512:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_csv_error_actions_t lossAction;               /**< \ref cy_en_csv_error_actions_t */
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 69


1513:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_stc_clkhf_csv_config_t;
1514:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_clk_hf_structs */
1515:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1516:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1517:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_clk_hf_funcs
1518:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1519:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1520:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_ClkHfEnable(uint32_t clkHf);
1521:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_ClkHfDisable(uint32_t clkHf);
1522:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_ClkHfSetSource(uint32_t clkHf, cy_en_clkhf_in_sourc
1523:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_clkhf_in_sources_t Cy_SysClk_ClkHfGetSource(uint32_t clkHf);
1524:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_ClkHfSetDivider(uint32_t clkHf, cy_en_clkhf_divider
1525:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_clkhf_dividers_t Cy_SysClk_ClkHfGetDivider(uint32_t clkHf);
1526:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1527:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1528:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1529:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkHfEnable
1530:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1531:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1532:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Enables the selected clkHf.
1533:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1534:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param clkHf Selects which clkHf to enable.
1535:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1536:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return \ref cy_en_sysclk_status_t
1537:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1538:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1539:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_ClkHfEnable
1540:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1541:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1542:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_ClkHfEnable(uint32_t clkHf)
1543:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1544:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_sysclk_status_t retVal = CY_SYSCLK_BAD_PARAM;
1545:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if (clkHf < CY_SRSS_NUM_HFROOT)
1546:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
1547:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         SRSS_CLK_ROOT_SELECT[clkHf] |= SRSS_CLK_ROOT_SELECT_ENABLE_Msk;
1548:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         retVal = CY_SYSCLK_SUCCESS;
1549:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1550:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (retVal);
1551:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1552:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1553:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1554:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkHfDisable
1555:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1556:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1557:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Disables the selected clkHf.
1558:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1559:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param clkHf Selects which clkHf to enable.
1560:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1561:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return \ref cy_en_sysclk_status_t
1562:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1563:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note clkHf[0] cannot be disabled.
1564:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1565:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1566:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_ClkHfDisable
1567:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1568:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1569:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_ClkHfDisable(uint32_t clkHf)
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 70


1570:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1571:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_sysclk_status_t retVal = CY_SYSCLK_BAD_PARAM;
1572:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if ((0UL < clkHf) /* prevent CLK_HF0 disabling */
1573:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****            && (clkHf < CY_SRSS_NUM_HFROOT))
1574:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
1575:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         SRSS_CLK_ROOT_SELECT[clkHf] &= ~SRSS_CLK_ROOT_SELECT_ENABLE_Msk;
1576:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         retVal = CY_SYSCLK_SUCCESS;
1577:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1578:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (retVal);
1579:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1580:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1581:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1582:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkHfSetSource
1583:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1584:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1585:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Selects the source of the selected clkHf.
1586:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1587:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param clkHf selects which clkHf mux to configure.
1588:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1589:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param source \ref cy_en_clkhf_in_sources_t
1590:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1591:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return \ref cy_en_sysclk_status_t
1592:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1593:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note 
1594:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref SystemCoreClockUpdate after this function calling 
1595:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * if it affects the CLK_HF0 frequency.
1596:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1597:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note 
1598:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref Cy_SysLib_SetWaitStates before calling this function if
1599:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CLK_HF0 frequency is increasing.
1600:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1601:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note
1602:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref Cy_SysLib_SetWaitStates after calling this function if
1603:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CLK_HF0 frequency is decreasing.
1604:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1605:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1606:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_ClkHfSetSource
1607:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1608:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1609:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_ClkHfSetSource(uint32_t clkHf, cy_en_clkhf_in_sourc
1610:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1611:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_sysclk_status_t retVal = CY_SYSCLK_BAD_PARAM;
1612:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if ((clkHf < CY_SRSS_NUM_HFROOT) && (source <= CY_SYSCLK_CLKHF_IN_CLKPATH15))
1613:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
1614:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         CY_REG32_CLR_SET(SRSS_CLK_ROOT_SELECT[clkHf], SRSS_CLK_ROOT_SELECT_ROOT_MUX, source);
1615:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         retVal = CY_SYSCLK_SUCCESS;
1616:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1617:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (retVal);
1618:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1619:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1620:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1621:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkHfGetSource
1622:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1623:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1624:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Reports the source of the selected clkHf.
1625:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1626:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param clkHf selects which clkHf to get the source of.
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 71


1627:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1628:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return \ref cy_en_clkhf_in_sources_t
1629:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1630:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1631:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_ClkHfSetSource
1632:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1633:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1634:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_clkhf_in_sources_t Cy_SysClk_ClkHfGetSource(uint32_t clkHf)
1635:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1636:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_ASSERT_L1(clkHf < CY_SRSS_NUM_HFROOT);
1637:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (cy_en_clkhf_in_sources_t)(_FLD2VAL(SRSS_CLK_ROOT_SELECT_ROOT_MUX, SRSS_CLK_ROOT_SELECT[
1638:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1639:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1640:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1641:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkHfSetDivider
1642:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1643:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1644:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Sets the pre-divider for a clkHf.
1645:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1646:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param clkHf selects which clkHf divider to configure.
1647:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1648:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param divider \ref cy_en_clkhf_dividers_t
1649:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1650:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return \ref cy_en_sysclk_status_t
1651:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1652:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note Also call \ref Cy_SysClk_ClkHfSetSource to set the clkHf source.
1653:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1654:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note 
1655:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref SystemCoreClockUpdate after this function calling 
1656:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * if it affects the CLK_HF0 frequency.
1657:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1658:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note 
1659:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref Cy_SysLib_SetWaitStates before calling this function if
1660:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CLK_HF0 frequency is increasing.
1661:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1662:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note
1663:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref Cy_SysLib_SetWaitStates after calling this function if
1664:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CLK_HF0 frequency is decreasing.
1665:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1666:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1667:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_ClkHfSetDivider
1668:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1669:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1670:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_ClkHfSetDivider(uint32_t clkHf, cy_en_clkhf_divider
1671:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1672:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_sysclk_status_t retVal = CY_SYSCLK_BAD_PARAM;
1673:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if ((clkHf < CY_SRSS_NUM_HFROOT) && (divider <= CY_SYSCLK_CLKHF_DIVIDE_BY_8))
1674:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
1675:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         CY_REG32_CLR_SET(SRSS_CLK_ROOT_SELECT[clkHf], SRSS_CLK_ROOT_SELECT_ROOT_DIV, divider);
1676:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         retVal = CY_SYSCLK_SUCCESS;
1677:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1678:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (retVal);
1679:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1680:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1681:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1682:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkHfGetDivider
1683:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 72


1684:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1685:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Reports the pre-divider value for a clkHf.
1686:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1687:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param clkHf selects which clkHf to check divider of.
1688:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1689:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return \ref cy_en_clkhf_dividers_t
1690:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1691:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1692:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_ClkHfSetDivider
1693:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1694:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1695:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_clkhf_dividers_t Cy_SysClk_ClkHfGetDivider(uint32_t clkHf)
1696:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1697:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_ASSERT_L1(clkHf < CY_SRSS_NUM_HFROOT);
1698:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (cy_en_clkhf_dividers_t)(_FLD2VAL(SRSS_CLK_ROOT_SELECT_ROOT_DIV, SRSS_CLK_ROOT_SELECT[cl
1699:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1700:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_clk_hf_funcs */
1701:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1702:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1703:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1704:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* =========================    clk_fast SECTION    ========================= */
1705:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1706:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1707:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_clk_fast_funcs
1708:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1709:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1710:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_ClkFastSetDivider(uint8_t divider);
1711:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint8_t Cy_SysClk_ClkFastGetDivider(void);
1712:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1713:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1714:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkFastSetDivider
1715:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1716:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1717:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Sets the clock divider for the fast clock, which sources the main processor.
1718:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The source of this divider is clkHf[0].
1719:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1720:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param divider divider value between 0 and 255.
1721:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Causes integer division of (divider value + 1), or division by 1 to 256.
1722:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1723:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note 
1724:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref SystemCoreClockUpdate after this function calling.
1725:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1726:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note 
1727:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref Cy_SysLib_SetWaitStates before calling this function if
1728:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CLK_FAST frequency is increasing.
1729:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1730:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note
1731:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref Cy_SysLib_SetWaitStates after calling this function if
1732:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CLK_FAST frequency is decreasing.
1733:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1734:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1735:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_ClkFastSetDivider
1736:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1737:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1738:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_ClkFastSetDivider(uint8_t divider)
1739:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1740:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_REG32_CLR_SET(CPUSS_CM4_CLOCK_CTL, CPUSS_CM4_CLOCK_CTL_FAST_INT_DIV, divider);
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 73


1741:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1742:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1743:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1744:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkFastGetDivider
1745:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1746:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1747:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Returns the clock divider for the fast clock.
1748:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1749:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return The divider value for the fast clock.
1750:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The integer division done is by (divider value + 1), or division by 1 to 256.
1751:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1752:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1753:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_ClkFastSetDivider
1754:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1755:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1756:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint8_t Cy_SysClk_ClkFastGetDivider(void)
1757:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1758:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return ((uint8_t)_FLD2VAL(CPUSS_CM4_CLOCK_CTL_FAST_INT_DIV, CPUSS_CM4_CLOCK_CTL));
1759:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1760:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_clk_fast_funcs */
1761:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1762:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1763:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1764:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================    clk_peri SECTION    ========================== */
1765:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1766:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1767:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_clk_peri_funcs
1768:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1769:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1770:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_ClkPeriSetDivider(uint8_t divider);
1771:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint8_t Cy_SysClk_ClkPeriGetDivider(void);
1772:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1773:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1774:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkPeriSetDivider
1775:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1776:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1777:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Sets the clock divider for the peripheral clock tree. All peripheral clock
1778:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * dividers are sourced from this clock. Also the Cortex M0+ clock divider is
1779:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * sourced from this clock. The source of this divider is clkHf[0]
1780:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1781:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param divider divider value between 0 and 255
1782:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Causes integer division of (divider value + 1), or division by 1 to 256.
1783:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1784:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note 
1785:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref SystemCoreClockUpdate after this function calling.
1786:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1787:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1788:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_ClkPeriSetDivider
1789:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1790:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1791:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_ClkPeriSetDivider(uint8_t divider)
1792:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1793:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_REG32_CLR_SET(CPUSS_CM0_CLOCK_CTL, CPUSS_CM0_CLOCK_CTL_PERI_INT_DIV, divider);
1794:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1795:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1796:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1797:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkPeriGetDivider
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 74


1798:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1799:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1800:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Returns the clock divider of the peripheral (peri) clock.
1801:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1802:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return The divider value.
1803:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The integer division done is by (divider value + 1), or division by 1 to 256.
1804:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1805:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1806:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_ClkPeriSetDivider
1807:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1808:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1809:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint8_t Cy_SysClk_ClkPeriGetDivider(void)
1810:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1811:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return ((uint8_t)_FLD2VAL(CPUSS_CM0_CLOCK_CTL_PERI_INT_DIV, CPUSS_CM0_CLOCK_CTL));
1812:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1813:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_clk_peri_funcs */
1814:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1815:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1816:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1817:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* =====================    clk_peripherals SECTION    ====================== */
1818:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1819:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1820:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_clk_peripheral_enums
1821:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1822:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1823:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** Programmable clock divider types */
1824:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
1825:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1826:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_DIV_8_BIT    = 0U, /**< Divider Type is an 8 bit divider */
1827:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_DIV_16_BIT   = 1U, /**< Divider Type is a 16 bit divider */
1828:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_DIV_16_5_BIT = 2U, /**< Divider Type is a 16.5 bit fractional divider */
1829:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_DIV_24_5_BIT = 3U  /**< Divider Type is a 24.5 bit fractional divider */
1830:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_divider_types_t;
1831:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_clk_peripheral_enums */
1832:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1833:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1834:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_clk_peripheral_funcs
1835:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1836:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1837:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_PeriphSetDivider(cy_en_divider_types_t dividerType,
1838:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint32_t Cy_SysClk_PeriphGetDivider(cy_en_divider_types_t dividerType, uint32_t div
1839:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_PeriphSetFracDivider(cy_en_divider_types_t dividerT
1840:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_PeriphGetFracDivider(cy_en_divider_types_t dividerType, uint32_t div
1841:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_PeriphAssignDivider(en_clk_dst_t ipBlock, cy_en_div
1842:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint32_t Cy_SysClk_PeriphGetAssignedDivider(en_clk_dst_t ipBlock);
1843:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_PeriphEnableDivider(cy_en_divider_types_t dividerTy
1844:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_PeriphDisableDivider(cy_en_divider_types_t dividerT
1845:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_PeriphEnablePhaseAlignDivider(cy_en_divider_types_t
1846:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE bool Cy_SysClk_PeriphGetDividerEnabled(cy_en_divider_types_t dividerType, uint32_t 
1847:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** uint32_t Cy_SysClk_PeriphGetFrequency(cy_en_divider_types_t dividerType, uint32_t dividerNum);
1848:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1849:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1850:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PeriphSetDivider
1851:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1852:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1853:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Sets one of the programmable clock dividers. This is only used for integer
1854:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * dividers. Use \ref Cy_SysClk_PeriphSetFracDivider for setting factional dividers.
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 75


1855:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1856:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \pre If the specified clock divider is already enabled - it should be disabled
1857:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * prior to use this function by \ref Cy_SysClk_PeriphDisableDivider.
1858:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1859:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerType specifies which type of divider to use; \ref cy_en_divider_types_t
1860:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1861:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerNum the divider number.
1862:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1863:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerValue divider value
1864:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Causes integer division of (divider value + 1), or division by 1 to 256
1865:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * (8-bit divider) or 1 to 65536 (16-bit divider).
1866:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1867:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return \ref cy_en_sysclk_status_t
1868:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1869:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1870:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_PeriphSetDivider
1871:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1872:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1873:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t
1874:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                 Cy_SysClk_PeriphSetDivider(cy_en_divider_types_t dividerType,
1875:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                            uint32_t dividerNum, uint32_t dividerValue)
1876:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 254              		.loc 2 1876 0
 255              		.cfi_startproc
 256              		@ args = 0, pretend = 0, frame = 24
 257              		@ frame_needed = 1, uses_anonymous_args = 0
 258 0000 90B5     		push	{r4, r7, lr}
 259              		.cfi_def_cfa_offset 12
 260              		.cfi_offset 4, -12
 261              		.cfi_offset 7, -8
 262              		.cfi_offset 14, -4
 263 0002 87B0     		sub	sp, sp, #28
 264              		.cfi_def_cfa_offset 40
 265 0004 00AF     		add	r7, sp, #0
 266              		.cfi_def_cfa_register 7
 267 0006 B960     		str	r1, [r7, #8]
 268 0008 7A60     		str	r2, [r7, #4]
 269 000a 0F23     		movs	r3, #15
 270 000c FB18     		adds	r3, r7, r3
 271 000e 021C     		adds	r2, r0, #0
 272 0010 1A70     		strb	r2, [r3]
1877:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_sysclk_status_t retVal = CY_SYSCLK_BAD_PARAM;
 273              		.loc 2 1877 0
 274 0012 314B     		ldr	r3, .L18
 275 0014 7B61     		str	r3, [r7, #20]
1878:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if (dividerType == CY_SYSCLK_DIV_8_BIT)
 276              		.loc 2 1878 0
 277 0016 0F23     		movs	r3, #15
 278 0018 FB18     		adds	r3, r7, r3
 279 001a 1B78     		ldrb	r3, [r3]
 280 001c 002B     		cmp	r3, #0
 281 001e 28D1     		bne	.L13
1879:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
1880:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         if ((dividerNum < PERI_DIV_8_NR) &&
 282              		.loc 2 1880 0
 283 0020 BB68     		ldr	r3, [r7, #8]
 284 0022 072B     		cmp	r3, #7
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 76


 285 0024 53D8     		bhi	.L15
 286              		.loc 2 1880 0 is_stmt 0 discriminator 1
 287 0026 7B68     		ldr	r3, [r7, #4]
 288 0028 FF2B     		cmp	r3, #255
 289 002a 50D8     		bhi	.L15
1881:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             (dividerValue <= (PERI_DIV_8_CTL_INT8_DIV_Msk >> PERI_DIV_8_CTL_INT8_DIV_Pos)))
1882:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         {
1883:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             CY_REG32_CLR_SET(PERI_DIV_8_CTL[dividerNum], PERI_DIV_8_CTL_INT8_DIV, dividerValue);
 290              		.loc 2 1883 0 is_stmt 1
 291 002c BB68     		ldr	r3, [r7, #8]
 292 002e 9A00     		lsls	r2, r3, #2
 293 0030 2A4B     		ldr	r3, .L18+4
 294 0032 1B68     		ldr	r3, [r3]
 295 0034 9968     		ldr	r1, [r3, #8]
 296 0036 294B     		ldr	r3, .L18+4
 297 0038 1B68     		ldr	r3, [r3]
 298 003a 7420     		movs	r0, #116
 299 003c 1B5A     		ldrh	r3, [r3, r0]
 300 003e CB18     		adds	r3, r1, r3
 301 0040 D318     		adds	r3, r2, r3
 302 0042 1A00     		movs	r2, r3
 303 0044 BB68     		ldr	r3, [r7, #8]
 304 0046 9900     		lsls	r1, r3, #2
 305 0048 244B     		ldr	r3, .L18+4
 306 004a 1B68     		ldr	r3, [r3]
 307 004c 9868     		ldr	r0, [r3, #8]
 308 004e 234B     		ldr	r3, .L18+4
 309 0050 1B68     		ldr	r3, [r3]
 310 0052 7424     		movs	r4, #116
 311 0054 1B5B     		ldrh	r3, [r3, r4]
 312 0056 C318     		adds	r3, r0, r3
 313 0058 CB18     		adds	r3, r1, r3
 314 005a 1B68     		ldr	r3, [r3]
 315 005c 2049     		ldr	r1, .L18+8
 316 005e 1940     		ands	r1, r3
 317 0060 7B68     		ldr	r3, [r7, #4]
 318 0062 1B02     		lsls	r3, r3, #8
 319 0064 1B04     		lsls	r3, r3, #16
 320 0066 1B0C     		lsrs	r3, r3, #16
 321 0068 0B43     		orrs	r3, r1
 322 006a 1360     		str	r3, [r2]
1884:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             retVal = CY_SYSCLK_SUCCESS;
 323              		.loc 2 1884 0
 324 006c 0023     		movs	r3, #0
 325 006e 7B61     		str	r3, [r7, #20]
 326 0070 2DE0     		b	.L15
 327              	.L13:
1885:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         }
1886:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1887:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     else if (dividerType == CY_SYSCLK_DIV_16_BIT)
 328              		.loc 2 1887 0
 329 0072 0F23     		movs	r3, #15
 330 0074 FB18     		adds	r3, r7, r3
 331 0076 1B78     		ldrb	r3, [r3]
 332 0078 012B     		cmp	r3, #1
 333 007a 28D1     		bne	.L15
1888:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 77


1889:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         if ((dividerNum < PERI_DIV_16_NR) &&
 334              		.loc 2 1889 0
 335 007c BB68     		ldr	r3, [r7, #8]
 336 007e 0F2B     		cmp	r3, #15
 337 0080 25D8     		bhi	.L15
 338              		.loc 2 1889 0 is_stmt 0 discriminator 1
 339 0082 7B68     		ldr	r3, [r7, #4]
 340 0084 174A     		ldr	r2, .L18+12
 341 0086 9342     		cmp	r3, r2
 342 0088 21D8     		bhi	.L15
1890:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             (dividerValue <= (PERI_DIV_16_CTL_INT16_DIV_Msk >> PERI_DIV_16_CTL_INT16_DIV_Pos)))
1891:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         {
1892:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             CY_REG32_CLR_SET(PERI_DIV_16_CTL[dividerNum], PERI_DIV_16_CTL_INT16_DIV, dividerValue);
 343              		.loc 2 1892 0 is_stmt 1
 344 008a BB68     		ldr	r3, [r7, #8]
 345 008c 9A00     		lsls	r2, r3, #2
 346 008e 134B     		ldr	r3, .L18+4
 347 0090 1B68     		ldr	r3, [r3]
 348 0092 9968     		ldr	r1, [r3, #8]
 349 0094 114B     		ldr	r3, .L18+4
 350 0096 1B68     		ldr	r3, [r3]
 351 0098 7620     		movs	r0, #118
 352 009a 1B5A     		ldrh	r3, [r3, r0]
 353 009c CB18     		adds	r3, r1, r3
 354 009e D318     		adds	r3, r2, r3
 355 00a0 1A00     		movs	r2, r3
 356 00a2 BB68     		ldr	r3, [r7, #8]
 357 00a4 9900     		lsls	r1, r3, #2
 358 00a6 0D4B     		ldr	r3, .L18+4
 359 00a8 1B68     		ldr	r3, [r3]
 360 00aa 9868     		ldr	r0, [r3, #8]
 361 00ac 0B4B     		ldr	r3, .L18+4
 362 00ae 1B68     		ldr	r3, [r3]
 363 00b0 7624     		movs	r4, #118
 364 00b2 1B5B     		ldrh	r3, [r3, r4]
 365 00b4 C318     		adds	r3, r0, r3
 366 00b6 CB18     		adds	r3, r1, r3
 367 00b8 1B68     		ldr	r3, [r3]
 368 00ba 0B49     		ldr	r1, .L18+16
 369 00bc 1940     		ands	r1, r3
 370 00be 7B68     		ldr	r3, [r7, #4]
 371 00c0 1B02     		lsls	r3, r3, #8
 372 00c2 0A48     		ldr	r0, .L18+20
 373 00c4 0340     		ands	r3, r0
 374 00c6 0B43     		orrs	r3, r1
 375 00c8 1360     		str	r3, [r2]
1893:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             retVal = CY_SYSCLK_SUCCESS;
 376              		.loc 2 1893 0
 377 00ca 0023     		movs	r3, #0
 378 00cc 7B61     		str	r3, [r7, #20]
 379              	.L15:
1894:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         }
1895:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1896:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     else
1897:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     { /* return bad parameter */
1898:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1899:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (retVal);
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 78


 380              		.loc 2 1899 0
 381 00ce 7B69     		ldr	r3, [r7, #20]
1900:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
 382              		.loc 2 1900 0
 383 00d0 1800     		movs	r0, r3
 384 00d2 BD46     		mov	sp, r7
 385 00d4 07B0     		add	sp, sp, #28
 386              		@ sp needed
 387 00d6 90BD     		pop	{r4, r7, pc}
 388              	.L19:
 389              		.align	2
 390              	.L18:
 391 00d8 01004A00 		.word	4849665
 392 00dc 00000000 		.word	cy_device
 393 00e0 FF00FFFF 		.word	-65281
 394 00e4 FFFF0000 		.word	65535
 395 00e8 FF0000FF 		.word	-16776961
 396 00ec 00FFFF00 		.word	16776960
 397              		.cfi_endproc
 398              	.LFE134:
 399              		.size	Cy_SysClk_PeriphSetDivider, .-Cy_SysClk_PeriphSetDivider
 400              		.section	.text.Cy_SysClk_PeriphEnableDivider,"ax",%progbits
 401              		.align	2
 402              		.code	16
 403              		.thumb_func
 404              		.type	Cy_SysClk_PeriphEnableDivider, %function
 405              	Cy_SysClk_PeriphEnableDivider:
 406              	.LFB140:
1901:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1902:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1903:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PeriphGetDivider
1904:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1905:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1906:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Returns the integer divider value for the specified divider. One works for
1907:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * integer dividers. Use \ref Cy_SysClk_PeriphGetFracDivider to get the fractional
1908:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * divider value
1909:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1910:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerType specifies which type of divider to use; \ref cy_en_divider_types_t
1911:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1912:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerNum specifies which divider of the selected type to configure
1913:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1914:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return The divider value.
1915:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The integer division done is by (divider value + 1), or division by 1 to 256
1916:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * (8-bit divider) or 1 to 65536 (16-bit divider).
1917:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1918:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1919:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_PeriphSetDivider
1920:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1921:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1922:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint32_t Cy_SysClk_PeriphGetDivider(cy_en_divider_types_t dividerType, uint32_t div
1923:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1924:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint32_t retVal;
1925:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1926:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_ASSERT_L1(dividerType <= CY_SYSCLK_DIV_16_BIT);
1927:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1928:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if (dividerType == CY_SYSCLK_DIV_8_BIT)
1929:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 79


1930:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         CY_ASSERT_L1(dividerNum < PERI_DIV_8_NR);
1931:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         retVal = _FLD2VAL(PERI_DIV_8_CTL_INT8_DIV, PERI_DIV_8_CTL[dividerNum]);
1932:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1933:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     else
1934:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     { /* 16-bit divider */
1935:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         CY_ASSERT_L1(dividerNum < PERI_DIV_16_NR);
1936:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         retVal = _FLD2VAL(PERI_DIV_16_CTL_INT16_DIV, PERI_DIV_16_CTL[dividerNum]);
1937:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1938:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (retVal);
1939:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1940:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1941:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1942:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PeriphSetFracDivider
1943:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1944:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1945:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Sets one of the programmable clock dividers. This function should only be used
1946:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * for fractional clock dividers.
1947:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1948:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \pre If the specified clock divider is already enabled - it should be disabled
1949:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * prior to use this function by \ref Cy_SysClk_PeriphDisableDivider.
1950:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1951:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerType specifies which type of divider to use; \ref cy_en_divider_types_t
1952:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1953:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerNum specifies which divider of the selected type to configure
1954:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1955:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerIntValue the integer divider value
1956:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The source of the divider is peri_clk, which is a divided version of hf_clk[0].
1957:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The divider value causes integer division of (divider value + 1), or division
1958:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * by 1 to 65536 (16-bit divider) or 1 to 16777216 (24-bit divider).
1959:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1960:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerFracValue the fraction part of the divider
1961:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The fractional divider can be 1-32, thus it divides the clock by 1/32 for each
1962:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * count. To divide the clock by 11/32nds set this value to 11.
1963:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1964:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return \ref cy_en_sysclk_status_t
1965:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1966:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1967:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_PeriphSetFracDivider
1968:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1969:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1970:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t
1971:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                 Cy_SysClk_PeriphSetFracDivider(cy_en_divider_types_t dividerType, uint32_t dividerN
1972:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                                uint32_t dividerIntValue, uint32_t dividerFracValue)
1973:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1974:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_sysclk_status_t retVal = CY_SYSCLK_BAD_PARAM;
1975:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if (dividerType == CY_SYSCLK_DIV_16_5_BIT)
1976:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
1977:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         if ((dividerNum < PERI_DIV_16_5_NR) &&
1978:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             (dividerIntValue <= (PERI_DIV_16_5_CTL_INT16_DIV_Msk >> PERI_DIV_16_5_CTL_INT16_DIV_Pos
1979:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             (dividerFracValue <= (PERI_DIV_16_5_CTL_FRAC5_DIV_Msk >> PERI_DIV_16_5_CTL_FRAC5_DIV_Po
1980:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         {
1981:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             CY_REG32_CLR_SET(PERI_DIV_16_5_CTL[dividerNum], PERI_DIV_16_5_CTL_INT16_DIV, dividerInt
1982:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             CY_REG32_CLR_SET(PERI_DIV_16_5_CTL[dividerNum], PERI_DIV_16_5_CTL_FRAC5_DIV, dividerFra
1983:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             retVal = CY_SYSCLK_SUCCESS;
1984:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         }
1985:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1986:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     else if (dividerType == CY_SYSCLK_DIV_24_5_BIT)
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 80


1987:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
1988:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         if ((dividerNum < PERI_DIV_24_5_NR) &&
1989:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             (dividerIntValue <= (PERI_DIV_24_5_CTL_INT24_DIV_Msk >> PERI_DIV_24_5_CTL_INT24_DIV_Pos
1990:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             (dividerFracValue <= (PERI_DIV_24_5_CTL_FRAC5_DIV_Msk >> PERI_DIV_24_5_CTL_FRAC5_DIV_Po
1991:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         {
1992:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             CY_REG32_CLR_SET(PERI_DIV_24_5_CTL[dividerNum], PERI_DIV_24_5_CTL_INT24_DIV, dividerInt
1993:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             CY_REG32_CLR_SET(PERI_DIV_24_5_CTL[dividerNum], PERI_DIV_24_5_CTL_FRAC5_DIV, dividerFra
1994:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             retVal = CY_SYSCLK_SUCCESS;
1995:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         }
1996:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1997:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     else
1998:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     { /* return bad parameter */
1999:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
2000:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (retVal);
2001:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
2002:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2003:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
2004:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PeriphGetFracDivider
2005:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
2006:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2007:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Reports the integer and fractional parts of the divider
2008:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2009:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerType specifies which type of divider to use; \ref cy_en_divider_types_t
2010:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2011:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerNum specifies which divider of the selected type to configure
2012:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2013:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param *dividerIntValue pointer to return integer divider value
2014:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2015:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param *dividerFracValue pointer to return fractional divider value
2016:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2017:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return None. Loads pointed-to variables.
2018:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2019:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
2020:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_PeriphSetFracDivider
2021:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2022:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
2023:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_PeriphGetFracDivider(cy_en_divider_types_t dividerType, uint32_t div
2024:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                                     uint32_t *dividerIntValue, uint32_t *dividerFra
2025:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
2026:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_ASSERT_L1(((dividerType == CY_SYSCLK_DIV_16_5_BIT) || (dividerType == CY_SYSCLK_DIV_24_5_BIT
2027:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                  (dividerIntValue != NULL) && (dividerFracValue != NULL));
2028:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2029:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if (dividerType == CY_SYSCLK_DIV_16_5_BIT)
2030:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
2031:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         CY_ASSERT_L1(dividerNum < PERI_DIV_16_5_NR);
2032:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         *dividerIntValue  = _FLD2VAL(PERI_DIV_16_5_CTL_INT16_DIV, PERI_DIV_16_5_CTL[dividerNum]);
2033:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         *dividerFracValue = _FLD2VAL(PERI_DIV_16_5_CTL_FRAC5_DIV, PERI_DIV_16_5_CTL[dividerNum]);
2034:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
2035:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     else
2036:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     { /* 24.5-bit divider */
2037:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         CY_ASSERT_L1(dividerNum < PERI_DIV_24_5_NR);
2038:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         *dividerIntValue  = _FLD2VAL(PERI_DIV_24_5_CTL_INT24_DIV, PERI_DIV_24_5_CTL[dividerNum]);
2039:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         *dividerFracValue = _FLD2VAL(PERI_DIV_24_5_CTL_FRAC5_DIV, PERI_DIV_24_5_CTL[dividerNum]);
2040:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
2041:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
2042:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2043:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 81


2044:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PeriphAssignDivider
2045:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
2046:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2047:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Assigns a programmable divider to a selected IP block, such as a TCPWM or SCB.
2048:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2049:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param ipBlock specifies ip block to connect the clock divider to.
2050:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2051:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerType specifies which type of divider to use; \ref cy_en_divider_types_t
2052:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2053:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerNum specifies which divider of the selected type to configure
2054:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2055:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return \ref cy_en_sysclk_status_t
2056:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2057:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
2058:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_PeriphAssignDivider
2059:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2060:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
2061:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t
2062:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                 Cy_SysClk_PeriphAssignDivider(en_clk_dst_t ipBlock,
2063:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                               cy_en_divider_types_t dividerType, uint32_t dividerNu
2064:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
2065:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_sysclk_status_t retVal = CY_SYSCLK_BAD_PARAM;
2066:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if ((CY_PERI_CLOCK_NR > (uint32_t)ipBlock) && (CY_SYSCLK_DIV_24_5_BIT >= dividerType))
2067:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
2068:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         if (((dividerType == CY_SYSCLK_DIV_8_BIT)    && (dividerNum < PERI_DIV_8_NR))    ||
2069:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             ((dividerType == CY_SYSCLK_DIV_16_BIT)   && (dividerNum < PERI_DIV_16_NR))   ||
2070:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             ((dividerType == CY_SYSCLK_DIV_16_5_BIT) && (dividerNum < PERI_DIV_16_5_NR)) ||
2071:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             ((dividerType == CY_SYSCLK_DIV_24_5_BIT) && (dividerNum < PERI_DIV_24_5_NR)))
2072:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         {
2073:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             PERI_CLOCK_CTL[ipBlock] = _VAL2FLD(CY_PERI_CLOCK_CTL_TYPE_SEL, dividerType) |
2074:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                       _VAL2FLD(CY_PERI_CLOCK_CTL_DIV_SEL, dividerNum);
2075:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             retVal = CY_SYSCLK_SUCCESS;
2076:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         }
2077:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
2078:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (retVal);
2079:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
2080:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2081:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
2082:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PeriphGetAssignedDivider
2083:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
2084:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2085:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Reports which clock divider is assigned to a selected IP block.
2086:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2087:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param ipBlock specifies ip block to connect the clock divider to.
2088:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2089:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return The divider type and number, where bits [7:6] = type, bits[5:0] = divider
2090:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * number within that type
2091:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2092:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
2093:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_PeriphAssignDivider
2094:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2095:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
2096:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint32_t Cy_SysClk_PeriphGetAssignedDivider(en_clk_dst_t ipBlock)
2097:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
2098:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_ASSERT_L1(CY_PERI_CLOCK_NR > (uint32_t)ipBlock);
2099:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (PERI_CLOCK_CTL[ipBlock] & (CY_PERI_CLOCK_CTL_DIV_SEL_Msk | CY_PERI_CLOCK_CTL_TYPE_SEL_M
2100:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 82


2101:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2102:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
2103:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PeriphEnableDivider
2104:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
2105:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2106:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Enables the selected divider.
2107:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2108:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerType specifies which type of divider to use; \ref cy_en_divider_types_t
2109:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2110:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerNum specifies which divider of the selected type to configure
2111:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2112:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note This function also sets the phase alignment bits such that the enabled
2113:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * divider is aligned to clk_peri. See \ref Cy_SysClk_PeriphDisableDivider()
2114:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * for information on how to phase-align a divider after it is enabled.
2115:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2116:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
2117:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_PeriphEnableDivider
2118:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2119:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
2120:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t
2121:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                 Cy_SysClk_PeriphEnableDivider(cy_en_divider_types_t dividerType, uint32_t dividerNu
2122:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 407              		.loc 2 2122 0
 408              		.cfi_startproc
 409              		@ args = 0, pretend = 0, frame = 16
 410              		@ frame_needed = 1, uses_anonymous_args = 0
 411 0000 90B5     		push	{r4, r7, lr}
 412              		.cfi_def_cfa_offset 12
 413              		.cfi_offset 4, -12
 414              		.cfi_offset 7, -8
 415              		.cfi_offset 14, -4
 416 0002 85B0     		sub	sp, sp, #20
 417              		.cfi_def_cfa_offset 32
 418 0004 00AF     		add	r7, sp, #0
 419              		.cfi_def_cfa_register 7
 420 0006 0200     		movs	r2, r0
 421 0008 3960     		str	r1, [r7]
 422 000a FB1D     		adds	r3, r7, #7
 423 000c 1A70     		strb	r2, [r3]
2123:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_sysclk_status_t retVal = CY_SYSCLK_BAD_PARAM;
 424              		.loc 2 2123 0
 425 000e 334B     		ldr	r3, .L27
 426 0010 FB60     		str	r3, [r7, #12]
2124:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if (dividerType <= CY_SYSCLK_DIV_24_5_BIT)
 427              		.loc 2 2124 0
 428 0012 FB1D     		adds	r3, r7, #7
 429 0014 1B78     		ldrb	r3, [r3]
 430 0016 032B     		cmp	r3, #3
 431 0018 5AD8     		bhi	.L21
2125:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
2126:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         if (((dividerType == CY_SYSCLK_DIV_8_BIT)    && (dividerNum < PERI_DIV_8_NR))    ||
 432              		.loc 2 2126 0
 433 001a FB1D     		adds	r3, r7, #7
 434 001c 1B78     		ldrb	r3, [r3]
 435 001e 002B     		cmp	r3, #0
 436 0020 02D1     		bne	.L22
 437              		.loc 2 2126 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 83


 438 0022 3B68     		ldr	r3, [r7]
 439 0024 072B     		cmp	r3, #7
 440 0026 14D9     		bls	.L23
 441              	.L22:
 442              		.loc 2 2126 0 discriminator 3
 443 0028 FB1D     		adds	r3, r7, #7
 444 002a 1B78     		ldrb	r3, [r3]
 445 002c 012B     		cmp	r3, #1
 446 002e 02D1     		bne	.L24
2127:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             ((dividerType == CY_SYSCLK_DIV_16_BIT)   && (dividerNum < PERI_DIV_16_NR))   ||
 447              		.loc 2 2127 0 is_stmt 1
 448 0030 3B68     		ldr	r3, [r7]
 449 0032 0F2B     		cmp	r3, #15
 450 0034 0DD9     		bls	.L23
 451              	.L24:
 452              		.loc 2 2127 0 is_stmt 0 discriminator 1
 453 0036 FB1D     		adds	r3, r7, #7
 454 0038 1B78     		ldrb	r3, [r3]
 455 003a 022B     		cmp	r3, #2
 456 003c 02D1     		bne	.L25
2128:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             ((dividerType == CY_SYSCLK_DIV_16_5_BIT) && (dividerNum < PERI_DIV_16_5_NR)) ||
 457              		.loc 2 2128 0 is_stmt 1
 458 003e 3B68     		ldr	r3, [r7]
 459 0040 032B     		cmp	r3, #3
 460 0042 06D9     		bls	.L23
 461              	.L25:
 462              		.loc 2 2128 0 is_stmt 0 discriminator 1
 463 0044 FB1D     		adds	r3, r7, #7
 464 0046 1B78     		ldrb	r3, [r3]
 465 0048 032B     		cmp	r3, #3
 466 004a 41D1     		bne	.L21
2129:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             ((dividerType == CY_SYSCLK_DIV_24_5_BIT) && (dividerNum < PERI_DIV_24_5_NR)))
 467              		.loc 2 2129 0 is_stmt 1
 468 004c 3B68     		ldr	r3, [r7]
 469 004e 002B     		cmp	r3, #0
 470 0050 3ED1     		bne	.L21
 471              	.L23:
2130:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         {
2131:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             /* specify the divider, make the reference = clk_peri, and enable the divider */
2132:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             PERI_DIV_CMD = PERI_DIV_CMD_ENABLE_Msk                         |
 472              		.loc 2 2132 0
 473 0052 234B     		ldr	r3, .L27+4
 474 0054 1B68     		ldr	r3, [r3]
 475 0056 9B68     		ldr	r3, [r3, #8]
 476 0058 1C00     		movs	r4, r3
2133:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                            CY_PERI_DIV_CMD_PA_TYPE_SEL_Msk                 |
 477              		.loc 2 2133 0
 478 005a 214B     		ldr	r3, .L27+4
 479 005c 1B68     		ldr	r3, [r3]
 480 005e 7322     		movs	r2, #115
 481 0060 9B5C     		ldrb	r3, [r3, r2]
 482 0062 1A00     		movs	r2, r3
 483 0064 0323     		movs	r3, #3
 484 0066 9340     		lsls	r3, r3, r2
 485 0068 1A00     		movs	r2, r3
2134:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                            CY_PERI_DIV_CMD_PA_DIV_SEL_Msk                  |
 486              		.loc 2 2134 0
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 84


 487 006a 1D4B     		ldr	r3, .L27+4
 488 006c 1B68     		ldr	r3, [r3]
 489 006e 7021     		movs	r1, #112
 490 0070 5B5C     		ldrb	r3, [r3, r1]
 491 0072 1800     		movs	r0, r3
 492 0074 1A4B     		ldr	r3, .L27+4
 493 0076 1B68     		ldr	r3, [r3]
 494 0078 7221     		movs	r1, #114
 495 007a 5B5C     		ldrb	r3, [r3, r1]
 496 007c 9840     		lsls	r0, r0, r3
 497 007e 0300     		movs	r3, r0
2133:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                            CY_PERI_DIV_CMD_PA_TYPE_SEL_Msk                 |
 498              		.loc 2 2133 0
 499 0080 1A43     		orrs	r2, r3
2135:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                            _VAL2FLD(CY_PERI_DIV_CMD_TYPE_SEL, dividerType) |
 500              		.loc 2 2135 0
 501 0082 FB1D     		adds	r3, r7, #7
 502 0084 1978     		ldrb	r1, [r3]
 503 0086 164B     		ldr	r3, .L27+4
 504 0088 1B68     		ldr	r3, [r3]
 505 008a 7120     		movs	r0, #113
 506 008c 1B5C     		ldrb	r3, [r3, r0]
 507 008e 9940     		lsls	r1, r1, r3
 508 0090 134B     		ldr	r3, .L27+4
 509 0092 1B68     		ldr	r3, [r3]
 510 0094 7120     		movs	r0, #113
 511 0096 1B5C     		ldrb	r3, [r3, r0]
 512 0098 1800     		movs	r0, r3
 513 009a 0323     		movs	r3, #3
 514 009c 8340     		lsls	r3, r3, r0
 515 009e 0B40     		ands	r3, r1
2134:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                            CY_PERI_DIV_CMD_PA_DIV_SEL_Msk                  |
 516              		.loc 2 2134 0
 517 00a0 1A43     		orrs	r2, r3
2136:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                            _VAL2FLD(CY_PERI_DIV_CMD_DIV_SEL,  dividerNum);
 518              		.loc 2 2136 0
 519 00a2 0F4B     		ldr	r3, .L27+4
 520 00a4 1B68     		ldr	r3, [r3]
 521 00a6 7021     		movs	r1, #112
 522 00a8 5B5C     		ldrb	r3, [r3, r1]
 523 00aa 1900     		movs	r1, r3
 524 00ac 3B68     		ldr	r3, [r7]
 525 00ae 0B40     		ands	r3, r1
2135:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                            _VAL2FLD(CY_PERI_DIV_CMD_TYPE_SEL, dividerType) |
 526              		.loc 2 2135 0
 527 00b0 1343     		orrs	r3, r2
 528 00b2 8022     		movs	r2, #128
 529 00b4 1206     		lsls	r2, r2, #24
 530 00b6 1A43     		orrs	r2, r3
2132:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                            CY_PERI_DIV_CMD_PA_TYPE_SEL_Msk                 |
 531              		.loc 2 2132 0
 532 00b8 8023     		movs	r3, #128
 533 00ba DB00     		lsls	r3, r3, #3
 534 00bc E250     		str	r2, [r4, r3]
2137:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             (void)PERI_DIV_CMD; /* dummy read to handle buffered writes */
 535              		.loc 2 2137 0
 536 00be 084B     		ldr	r3, .L27+4
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 85


 537 00c0 1B68     		ldr	r3, [r3]
 538 00c2 9B68     		ldr	r3, [r3, #8]
 539 00c4 1A00     		movs	r2, r3
 540 00c6 8023     		movs	r3, #128
 541 00c8 DB00     		lsls	r3, r3, #3
 542 00ca D358     		ldr	r3, [r2, r3]
2138:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             retVal = CY_SYSCLK_SUCCESS;
 543              		.loc 2 2138 0
 544 00cc 0023     		movs	r3, #0
 545 00ce FB60     		str	r3, [r7, #12]
 546              	.L21:
2139:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         }
2140:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
2141:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (retVal);
 547              		.loc 2 2141 0
 548 00d0 FB68     		ldr	r3, [r7, #12]
2142:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
 549              		.loc 2 2142 0
 550 00d2 1800     		movs	r0, r3
 551 00d4 BD46     		mov	sp, r7
 552 00d6 05B0     		add	sp, sp, #20
 553              		@ sp needed
 554 00d8 90BD     		pop	{r4, r7, pc}
 555              	.L28:
 556 00da C046     		.align	2
 557              	.L27:
 558 00dc 01004A00 		.word	4849665
 559 00e0 00000000 		.word	cy_device
 560              		.cfi_endproc
 561              	.LFE140:
 562              		.size	Cy_SysClk_PeriphEnableDivider, .-Cy_SysClk_PeriphEnableDivider
 563              		.section	.text.Cy_SysClk_PeriphDisableDivider,"ax",%progbits
 564              		.align	2
 565              		.code	16
 566              		.thumb_func
 567              		.type	Cy_SysClk_PeriphDisableDivider, %function
 568              	Cy_SysClk_PeriphDisableDivider:
 569              	.LFB141:
2143:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2144:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
2145:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PeriphDisableDivider
2146:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
2147:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2148:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Disables a selected divider.
2149:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2150:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerType specifies which type of divider to use; \ref cy_en_divider_types_t.
2151:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2152:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerNum specifies which divider of the selected type to configure.
2153:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2154:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
2155:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_PeriphDisableDivider
2156:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2157:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
2158:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t
2159:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                 Cy_SysClk_PeriphDisableDivider(cy_en_divider_types_t dividerType, uint32_t dividerN
2160:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 570              		.loc 2 2160 0
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 86


 571              		.cfi_startproc
 572              		@ args = 0, pretend = 0, frame = 16
 573              		@ frame_needed = 1, uses_anonymous_args = 0
 574 0000 80B5     		push	{r7, lr}
 575              		.cfi_def_cfa_offset 8
 576              		.cfi_offset 7, -8
 577              		.cfi_offset 14, -4
 578 0002 84B0     		sub	sp, sp, #16
 579              		.cfi_def_cfa_offset 24
 580 0004 00AF     		add	r7, sp, #0
 581              		.cfi_def_cfa_register 7
 582 0006 0200     		movs	r2, r0
 583 0008 3960     		str	r1, [r7]
 584 000a FB1D     		adds	r3, r7, #7
 585 000c 1A70     		strb	r2, [r3]
2161:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_sysclk_status_t retVal = CY_SYSCLK_BAD_PARAM;
 586              		.loc 2 2161 0
 587 000e 254B     		ldr	r3, .L36
 588 0010 FB60     		str	r3, [r7, #12]
2162:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if (dividerType <= CY_SYSCLK_DIV_24_5_BIT)
 589              		.loc 2 2162 0
 590 0012 FB1D     		adds	r3, r7, #7
 591 0014 1B78     		ldrb	r3, [r3]
 592 0016 032B     		cmp	r3, #3
 593 0018 3ED8     		bhi	.L30
2163:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
2164:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         if (((dividerType == CY_SYSCLK_DIV_8_BIT)    && (dividerNum < PERI_DIV_8_NR))    ||
 594              		.loc 2 2164 0
 595 001a FB1D     		adds	r3, r7, #7
 596 001c 1B78     		ldrb	r3, [r3]
 597 001e 002B     		cmp	r3, #0
 598 0020 02D1     		bne	.L31
 599              		.loc 2 2164 0 is_stmt 0 discriminator 1
 600 0022 3B68     		ldr	r3, [r7]
 601 0024 072B     		cmp	r3, #7
 602 0026 14D9     		bls	.L32
 603              	.L31:
 604              		.loc 2 2164 0 discriminator 3
 605 0028 FB1D     		adds	r3, r7, #7
 606 002a 1B78     		ldrb	r3, [r3]
 607 002c 012B     		cmp	r3, #1
 608 002e 02D1     		bne	.L33
2165:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             ((dividerType == CY_SYSCLK_DIV_16_BIT)   && (dividerNum < PERI_DIV_16_NR))   ||
 609              		.loc 2 2165 0 is_stmt 1
 610 0030 3B68     		ldr	r3, [r7]
 611 0032 0F2B     		cmp	r3, #15
 612 0034 0DD9     		bls	.L32
 613              	.L33:
 614              		.loc 2 2165 0 is_stmt 0 discriminator 1
 615 0036 FB1D     		adds	r3, r7, #7
 616 0038 1B78     		ldrb	r3, [r3]
 617 003a 022B     		cmp	r3, #2
 618 003c 02D1     		bne	.L34
2166:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             ((dividerType == CY_SYSCLK_DIV_16_5_BIT) && (dividerNum < PERI_DIV_16_5_NR)) ||
 619              		.loc 2 2166 0 is_stmt 1
 620 003e 3B68     		ldr	r3, [r7]
 621 0040 032B     		cmp	r3, #3
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 87


 622 0042 06D9     		bls	.L32
 623              	.L34:
 624              		.loc 2 2166 0 is_stmt 0 discriminator 1
 625 0044 FB1D     		adds	r3, r7, #7
 626 0046 1B78     		ldrb	r3, [r3]
 627 0048 032B     		cmp	r3, #3
 628 004a 25D1     		bne	.L30
2167:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             ((dividerType == CY_SYSCLK_DIV_24_5_BIT) && (dividerNum < PERI_DIV_24_5_NR)))
 629              		.loc 2 2167 0 is_stmt 1
 630 004c 3B68     		ldr	r3, [r7]
 631 004e 002B     		cmp	r3, #0
 632 0050 22D1     		bne	.L30
 633              	.L32:
2168:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         {
2169:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             /* specify the divider and disable it */
2170:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             PERI_DIV_CMD = PERI_DIV_CMD_DISABLE_Msk          |
 634              		.loc 2 2170 0
 635 0052 154B     		ldr	r3, .L36+4
 636 0054 1B68     		ldr	r3, [r3]
 637 0056 9B68     		ldr	r3, [r3, #8]
 638 0058 1800     		movs	r0, r3
2171:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****              _VAL2FLD(CY_PERI_DIV_CMD_TYPE_SEL, dividerType) |
 639              		.loc 2 2171 0
 640 005a FB1D     		adds	r3, r7, #7
 641 005c 1A78     		ldrb	r2, [r3]
 642 005e 124B     		ldr	r3, .L36+4
 643 0060 1B68     		ldr	r3, [r3]
 644 0062 7121     		movs	r1, #113
 645 0064 5B5C     		ldrb	r3, [r3, r1]
 646 0066 9A40     		lsls	r2, r2, r3
 647 0068 0F4B     		ldr	r3, .L36+4
 648 006a 1B68     		ldr	r3, [r3]
 649 006c 7121     		movs	r1, #113
 650 006e 5B5C     		ldrb	r3, [r3, r1]
 651 0070 1900     		movs	r1, r3
 652 0072 0323     		movs	r3, #3
 653 0074 8B40     		lsls	r3, r3, r1
 654 0076 1A40     		ands	r2, r3
2172:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****              _VAL2FLD(CY_PERI_DIV_CMD_DIV_SEL,  dividerNum);
 655              		.loc 2 2172 0
 656 0078 0B4B     		ldr	r3, .L36+4
 657 007a 1B68     		ldr	r3, [r3]
 658 007c 7021     		movs	r1, #112
 659 007e 5B5C     		ldrb	r3, [r3, r1]
 660 0080 1900     		movs	r1, r3
 661 0082 3B68     		ldr	r3, [r7]
 662 0084 0B40     		ands	r3, r1
2171:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****              _VAL2FLD(CY_PERI_DIV_CMD_TYPE_SEL, dividerType) |
 663              		.loc 2 2171 0
 664 0086 1343     		orrs	r3, r2
 665 0088 8022     		movs	r2, #128
 666 008a D205     		lsls	r2, r2, #23
 667 008c 1A43     		orrs	r2, r3
2170:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****              _VAL2FLD(CY_PERI_DIV_CMD_TYPE_SEL, dividerType) |
 668              		.loc 2 2170 0
 669 008e 8023     		movs	r3, #128
 670 0090 DB00     		lsls	r3, r3, #3
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 88


 671 0092 C250     		str	r2, [r0, r3]
2173:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             retVal = CY_SYSCLK_SUCCESS;
 672              		.loc 2 2173 0
 673 0094 0023     		movs	r3, #0
 674 0096 FB60     		str	r3, [r7, #12]
 675              	.L30:
2174:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         }
2175:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
2176:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (retVal);
 676              		.loc 2 2176 0
 677 0098 FB68     		ldr	r3, [r7, #12]
2177:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
 678              		.loc 2 2177 0
 679 009a 1800     		movs	r0, r3
 680 009c BD46     		mov	sp, r7
 681 009e 04B0     		add	sp, sp, #16
 682              		@ sp needed
 683 00a0 80BD     		pop	{r7, pc}
 684              	.L37:
 685 00a2 C046     		.align	2
 686              	.L36:
 687 00a4 01004A00 		.word	4849665
 688 00a8 00000000 		.word	cy_device
 689              		.cfi_endproc
 690              	.LFE141:
 691              		.size	Cy_SysClk_PeriphDisableDivider, .-Cy_SysClk_PeriphDisableDivider
 692              		.section	.text.ADC_1_intSarClock_Enable,"ax",%progbits
 693              		.align	2
 694              		.code	16
 695              		.thumb_func
 696              		.type	ADC_1_intSarClock_Enable, %function
 697              	ADC_1_intSarClock_Enable:
 698              	.LFB162:
 699              		.file 3 "Generated_Source\\PSoC6\\ADC_1_intSarClock.h"
   1:Generated_Source\PSoC6/ADC_1_intSarClock.h **** /***************************************************************************//**
   2:Generated_Source\PSoC6/ADC_1_intSarClock.h **** * \file     ADC_1_intSarClock.h
   3:Generated_Source\PSoC6/ADC_1_intSarClock.h **** * \version  1.0
   4:Generated_Source\PSoC6/ADC_1_intSarClock.h **** *
   5:Generated_Source\PSoC6/ADC_1_intSarClock.h **** * \brief
   6:Generated_Source\PSoC6/ADC_1_intSarClock.h **** * Provides the source code to the API for the ADC_1_intSarClock Component.
   7:Generated_Source\PSoC6/ADC_1_intSarClock.h **** *
   8:Generated_Source\PSoC6/ADC_1_intSarClock.h **** ********************************************************************************
   9:Generated_Source\PSoC6/ADC_1_intSarClock.h **** * \copyright
  10:Generated_Source\PSoC6/ADC_1_intSarClock.h **** * Copyright 2015, Cypress Semiconductor Corporation. All rights reserved.
  11:Generated_Source\PSoC6/ADC_1_intSarClock.h **** * You may use this file only in accordance with the license, terms, conditions,
  12:Generated_Source\PSoC6/ADC_1_intSarClock.h **** * disclaimers, and limitations in the end user license agreement accompanying
  13:Generated_Source\PSoC6/ADC_1_intSarClock.h **** * the software package with which this file was provided.
  14:Generated_Source\PSoC6/ADC_1_intSarClock.h **** *******************************************************************************/
  15:Generated_Source\PSoC6/ADC_1_intSarClock.h **** 
  16:Generated_Source\PSoC6/ADC_1_intSarClock.h **** #if !defined(CY_ADC_1_intSarClock_NAME_ADC_1_intSarClock_H)
  17:Generated_Source\PSoC6/ADC_1_intSarClock.h **** #define CY_ADC_1_intSarClock_NAME_ADC_1_intSarClock_H
  18:Generated_Source\PSoC6/ADC_1_intSarClock.h **** 
  19:Generated_Source\PSoC6/ADC_1_intSarClock.h **** /* For _DIV_TYPE and _DIV_NUM #defines */
  20:Generated_Source\PSoC6/ADC_1_intSarClock.h **** #include "cyfitter.h"
  21:Generated_Source\PSoC6/ADC_1_intSarClock.h **** 
  22:Generated_Source\PSoC6/ADC_1_intSarClock.h **** /* makes uint32_t defined */
  23:Generated_Source\PSoC6/ADC_1_intSarClock.h **** #include <stdint.h>
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 89


  24:Generated_Source\PSoC6/ADC_1_intSarClock.h **** 
  25:Generated_Source\PSoC6/ADC_1_intSarClock.h **** #include "sysclk/cy_sysclk.h"
  26:Generated_Source\PSoC6/ADC_1_intSarClock.h **** 
  27:Generated_Source\PSoC6/ADC_1_intSarClock.h **** /***************************************
  28:Generated_Source\PSoC6/ADC_1_intSarClock.h **** * Preprocessor Macros
  29:Generated_Source\PSoC6/ADC_1_intSarClock.h **** ***************************************/
  30:Generated_Source\PSoC6/ADC_1_intSarClock.h **** /**
  31:Generated_Source\PSoC6/ADC_1_intSarClock.h **** * \addtogroup group_macros
  32:Generated_Source\PSoC6/ADC_1_intSarClock.h **** * @{
  33:Generated_Source\PSoC6/ADC_1_intSarClock.h **** */
  34:Generated_Source\PSoC6/ADC_1_intSarClock.h **** /** The peripheral clock divider number */
  35:Generated_Source\PSoC6/ADC_1_intSarClock.h **** #define ADC_1_intSarClock_DIV_NUM ((uint32_t)ADC_1_intSarClock__DIV_NUM)
  36:Generated_Source\PSoC6/ADC_1_intSarClock.h **** /** The peripheral clock divider type */
  37:Generated_Source\PSoC6/ADC_1_intSarClock.h **** #define ADC_1_intSarClock_DIV_TYPE ((cy_en_divider_types_t)ADC_1_intSarClock__DIV_TYPE)
  38:Generated_Source\PSoC6/ADC_1_intSarClock.h **** /** @} group_macros */
  39:Generated_Source\PSoC6/ADC_1_intSarClock.h **** 
  40:Generated_Source\PSoC6/ADC_1_intSarClock.h **** /***************************************
  41:Generated_Source\PSoC6/ADC_1_intSarClock.h **** * Function Prototypes
  42:Generated_Source\PSoC6/ADC_1_intSarClock.h **** ***************************************/
  43:Generated_Source\PSoC6/ADC_1_intSarClock.h **** 
  44:Generated_Source\PSoC6/ADC_1_intSarClock.h **** /**
  45:Generated_Source\PSoC6/ADC_1_intSarClock.h **** * \addtogroup group_general
  46:Generated_Source\PSoC6/ADC_1_intSarClock.h **** * @{
  47:Generated_Source\PSoC6/ADC_1_intSarClock.h **** */
  48:Generated_Source\PSoC6/ADC_1_intSarClock.h **** 
  49:Generated_Source\PSoC6/ADC_1_intSarClock.h **** /*******************************************************************************
  50:Generated_Source\PSoC6/ADC_1_intSarClock.h **** * Function Name: ADC_1_intSarClock_Enable
  51:Generated_Source\PSoC6/ADC_1_intSarClock.h **** ****************************************************************************//**
  52:Generated_Source\PSoC6/ADC_1_intSarClock.h **** *
  53:Generated_Source\PSoC6/ADC_1_intSarClock.h **** * Enables the programmable clock divider assigned to this Component.
  54:Generated_Source\PSoC6/ADC_1_intSarClock.h **** *
  55:Generated_Source\PSoC6/ADC_1_intSarClock.h **** * \param None
  56:Generated_Source\PSoC6/ADC_1_intSarClock.h **** *
  57:Generated_Source\PSoC6/ADC_1_intSarClock.h **** * \return None
  58:Generated_Source\PSoC6/ADC_1_intSarClock.h **** *
  59:Generated_Source\PSoC6/ADC_1_intSarClock.h **** *******************************************************************************/
  60:Generated_Source\PSoC6/ADC_1_intSarClock.h **** __STATIC_INLINE void ADC_1_intSarClock_Enable(void)
  61:Generated_Source\PSoC6/ADC_1_intSarClock.h **** {
 700              		.loc 3 61 0
 701              		.cfi_startproc
 702              		@ args = 0, pretend = 0, frame = 0
 703              		@ frame_needed = 1, uses_anonymous_args = 0
 704 0000 80B5     		push	{r7, lr}
 705              		.cfi_def_cfa_offset 8
 706              		.cfi_offset 7, -8
 707              		.cfi_offset 14, -4
 708 0002 00AF     		add	r7, sp, #0
 709              		.cfi_def_cfa_register 7
  62:Generated_Source\PSoC6/ADC_1_intSarClock.h ****     (void)Cy_SysClk_PeriphEnableDivider(ADC_1_intSarClock_DIV_TYPE, ADC_1_intSarClock_DIV_NUM);
 710              		.loc 3 62 0
 711 0004 0121     		movs	r1, #1
 712 0006 0020     		movs	r0, #0
 713 0008 FFF7FEFF 		bl	Cy_SysClk_PeriphEnableDivider
  63:Generated_Source\PSoC6/ADC_1_intSarClock.h **** }
 714              		.loc 3 63 0
 715 000c C046     		nop
 716 000e BD46     		mov	sp, r7
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 90


 717              		@ sp needed
 718 0010 80BD     		pop	{r7, pc}
 719              		.cfi_endproc
 720              	.LFE162:
 721              		.size	ADC_1_intSarClock_Enable, .-ADC_1_intSarClock_Enable
 722 0012 C046     		.section	.text.ADC_1_intSarClock_Disable,"ax",%progbits
 723              		.align	2
 724              		.code	16
 725              		.thumb_func
 726              		.type	ADC_1_intSarClock_Disable, %function
 727              	ADC_1_intSarClock_Disable:
 728              	.LFB163:
  64:Generated_Source\PSoC6/ADC_1_intSarClock.h **** 
  65:Generated_Source\PSoC6/ADC_1_intSarClock.h **** /*******************************************************************************
  66:Generated_Source\PSoC6/ADC_1_intSarClock.h **** * Function Name: ADC_1_intSarClock_Disable
  67:Generated_Source\PSoC6/ADC_1_intSarClock.h **** ****************************************************************************//**
  68:Generated_Source\PSoC6/ADC_1_intSarClock.h **** *
  69:Generated_Source\PSoC6/ADC_1_intSarClock.h **** * Disables the programmable clock divider assigned to this Component.
  70:Generated_Source\PSoC6/ADC_1_intSarClock.h **** *
  71:Generated_Source\PSoC6/ADC_1_intSarClock.h **** * \param None
  72:Generated_Source\PSoC6/ADC_1_intSarClock.h **** *
  73:Generated_Source\PSoC6/ADC_1_intSarClock.h **** * \return None
  74:Generated_Source\PSoC6/ADC_1_intSarClock.h **** *
  75:Generated_Source\PSoC6/ADC_1_intSarClock.h **** *******************************************************************************/
  76:Generated_Source\PSoC6/ADC_1_intSarClock.h **** __STATIC_INLINE void ADC_1_intSarClock_Disable(void)
  77:Generated_Source\PSoC6/ADC_1_intSarClock.h **** {
 729              		.loc 3 77 0
 730              		.cfi_startproc
 731              		@ args = 0, pretend = 0, frame = 0
 732              		@ frame_needed = 1, uses_anonymous_args = 0
 733 0000 80B5     		push	{r7, lr}
 734              		.cfi_def_cfa_offset 8
 735              		.cfi_offset 7, -8
 736              		.cfi_offset 14, -4
 737 0002 00AF     		add	r7, sp, #0
 738              		.cfi_def_cfa_register 7
  78:Generated_Source\PSoC6/ADC_1_intSarClock.h ****     (void)Cy_SysClk_PeriphDisableDivider(ADC_1_intSarClock_DIV_TYPE, ADC_1_intSarClock_DIV_NUM);
 739              		.loc 3 78 0
 740 0004 0121     		movs	r1, #1
 741 0006 0020     		movs	r0, #0
 742 0008 FFF7FEFF 		bl	Cy_SysClk_PeriphDisableDivider
  79:Generated_Source\PSoC6/ADC_1_intSarClock.h **** }
 743              		.loc 3 79 0
 744 000c C046     		nop
 745 000e BD46     		mov	sp, r7
 746              		@ sp needed
 747 0010 80BD     		pop	{r7, pc}
 748              		.cfi_endproc
 749              	.LFE163:
 750              		.size	ADC_1_intSarClock_Disable, .-ADC_1_intSarClock_Disable
 751 0012 C046     		.section	.text.ADC_1_intSarClock_SetDivider,"ax",%progbits
 752              		.align	2
 753              		.code	16
 754              		.thumb_func
 755              		.type	ADC_1_intSarClock_SetDivider, %function
 756              	ADC_1_intSarClock_SetDivider:
 757              	.LFB164:
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 91


  80:Generated_Source\PSoC6/ADC_1_intSarClock.h **** 
  81:Generated_Source\PSoC6/ADC_1_intSarClock.h **** /*******************************************************************************
  82:Generated_Source\PSoC6/ADC_1_intSarClock.h **** * Function Name: ADC_1_intSarClock_SetDivider
  83:Generated_Source\PSoC6/ADC_1_intSarClock.h **** ****************************************************************************//**
  84:Generated_Source\PSoC6/ADC_1_intSarClock.h **** *
  85:Generated_Source\PSoC6/ADC_1_intSarClock.h **** * Sets the value of a programmable clock divider assigned to this Component.
  86:Generated_Source\PSoC6/ADC_1_intSarClock.h **** * This is only used for integer dividers. Use ADC_1_intSarClock_SetFracDivider()
  87:Generated_Source\PSoC6/ADC_1_intSarClock.h **** * for setting factional dividers.
  88:Generated_Source\PSoC6/ADC_1_intSarClock.h **** *
  89:Generated_Source\PSoC6/ADC_1_intSarClock.h **** * \param dividerValue
  90:Generated_Source\PSoC6/ADC_1_intSarClock.h **** * The divider value. The source of the divider is peri_clk which is a divided
  91:Generated_Source\PSoC6/ADC_1_intSarClock.h **** * version of hf_clk[0]. The divider value causes integer division of
  92:Generated_Source\PSoC6/ADC_1_intSarClock.h **** * (divider value + 1), or division by 1 to 256 (8-bit divider) or
  93:Generated_Source\PSoC6/ADC_1_intSarClock.h **** * 1 to 65536 (16-bit divider).
  94:Generated_Source\PSoC6/ADC_1_intSarClock.h **** *
  95:Generated_Source\PSoC6/ADC_1_intSarClock.h **** * \return None
  96:Generated_Source\PSoC6/ADC_1_intSarClock.h **** *
  97:Generated_Source\PSoC6/ADC_1_intSarClock.h **** *******************************************************************************/
  98:Generated_Source\PSoC6/ADC_1_intSarClock.h **** __STATIC_INLINE void ADC_1_intSarClock_SetDivider(uint32_t dividerValue)
  99:Generated_Source\PSoC6/ADC_1_intSarClock.h **** {
 758              		.loc 3 99 0
 759              		.cfi_startproc
 760              		@ args = 0, pretend = 0, frame = 8
 761              		@ frame_needed = 1, uses_anonymous_args = 0
 762 0000 80B5     		push	{r7, lr}
 763              		.cfi_def_cfa_offset 8
 764              		.cfi_offset 7, -8
 765              		.cfi_offset 14, -4
 766 0002 82B0     		sub	sp, sp, #8
 767              		.cfi_def_cfa_offset 16
 768 0004 00AF     		add	r7, sp, #0
 769              		.cfi_def_cfa_register 7
 770 0006 7860     		str	r0, [r7, #4]
 100:Generated_Source\PSoC6/ADC_1_intSarClock.h ****     (void)Cy_SysClk_PeriphSetDivider(ADC_1_intSarClock_DIV_TYPE, ADC_1_intSarClock_DIV_NUM, divider
 771              		.loc 3 100 0
 772 0008 7B68     		ldr	r3, [r7, #4]
 773 000a 1A00     		movs	r2, r3
 774 000c 0121     		movs	r1, #1
 775 000e 0020     		movs	r0, #0
 776 0010 FFF7FEFF 		bl	Cy_SysClk_PeriphSetDivider
 101:Generated_Source\PSoC6/ADC_1_intSarClock.h **** }
 777              		.loc 3 101 0
 778 0014 C046     		nop
 779 0016 BD46     		mov	sp, r7
 780 0018 02B0     		add	sp, sp, #8
 781              		@ sp needed
 782 001a 80BD     		pop	{r7, pc}
 783              		.cfi_endproc
 784              	.LFE164:
 785              		.size	ADC_1_intSarClock_SetDivider, .-ADC_1_intSarClock_SetDivider
 786              		.section	.text.ADC_1_Enable,"ax",%progbits
 787              		.align	2
 788              		.code	16
 789              		.thumb_func
 790              		.type	ADC_1_Enable, %function
 791              	ADC_1_Enable:
 792              	.LFB168:
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 92


 793              		.file 4 "Generated_Source\\PSoC6\\ADC_1.h"
   1:Generated_Source\PSoC6/ADC_1.h **** /***************************************************************************//**
   2:Generated_Source\PSoC6/ADC_1.h **** * \file     ADC_1.h
   3:Generated_Source\PSoC6/ADC_1.h **** * \version  3.10
   4:Generated_Source\PSoC6/ADC_1.h **** *
   5:Generated_Source\PSoC6/ADC_1.h **** * \brief
   6:Generated_Source\PSoC6/ADC_1.h **** * Provides the source code to the API for the ADC_1 Component.
   7:Generated_Source\PSoC6/ADC_1.h **** *
   8:Generated_Source\PSoC6/ADC_1.h **** ********************************************************************************
   9:Generated_Source\PSoC6/ADC_1.h **** * \copyright
  10:Generated_Source\PSoC6/ADC_1.h **** * (c) 2017-2018, Cypress Semiconductor Corporation. All rights reserved.
  11:Generated_Source\PSoC6/ADC_1.h **** * This software, including source code, documentation and related
  12:Generated_Source\PSoC6/ADC_1.h **** * materials ("Software"), is owned by Cypress Semiconductor
  13:Generated_Source\PSoC6/ADC_1.h **** * Corporation ("Cypress") and is protected by and subject to worldwide
  14:Generated_Source\PSoC6/ADC_1.h **** * patent protection (United States and foreign), United States copyright
  15:Generated_Source\PSoC6/ADC_1.h **** * laws and international treaty provisions. Therefore, you may use this
  16:Generated_Source\PSoC6/ADC_1.h **** * Software only as provided in the license agreement accompanying the
  17:Generated_Source\PSoC6/ADC_1.h **** * software package from which you obtained this Software ("EULA").
  18:Generated_Source\PSoC6/ADC_1.h **** * If no EULA applies, Cypress hereby grants you a personal, nonexclusive,
  19:Generated_Source\PSoC6/ADC_1.h **** * non-transferable license to copy, modify, and compile the
  20:Generated_Source\PSoC6/ADC_1.h **** * Software source code solely for use in connection with Cypress's
  21:Generated_Source\PSoC6/ADC_1.h **** * integrated circuit products. Any reproduction, modification, translation,
  22:Generated_Source\PSoC6/ADC_1.h **** * compilation, or representation of this Software except as specified
  23:Generated_Source\PSoC6/ADC_1.h **** * above is prohibited without the express written permission of Cypress.
  24:Generated_Source\PSoC6/ADC_1.h **** * Disclaimer: THIS SOFTWARE IS PROVIDED AS-IS, WITH NO
  25:Generated_Source\PSoC6/ADC_1.h **** * WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING,
  26:Generated_Source\PSoC6/ADC_1.h **** * BUT NOT LIMITED TO, NONINFRINGEMENT, IMPLIED
  27:Generated_Source\PSoC6/ADC_1.h **** * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
  28:Generated_Source\PSoC6/ADC_1.h **** * PARTICULAR PURPOSE. Cypress reserves the right to make
  29:Generated_Source\PSoC6/ADC_1.h **** * changes to the Software without notice. Cypress does not assume any
  30:Generated_Source\PSoC6/ADC_1.h **** * liability arising out of the application or use of the Software or any
  31:Generated_Source\PSoC6/ADC_1.h **** * product or circuit described in the Software. Cypress does not
  32:Generated_Source\PSoC6/ADC_1.h **** * authorize its products for use in any products where a malfunction or
  33:Generated_Source\PSoC6/ADC_1.h **** * failure of the Cypress product may reasonably be expected to result in
  34:Generated_Source\PSoC6/ADC_1.h **** * significant property damage, injury or death ("High Risk Product"). By
  35:Generated_Source\PSoC6/ADC_1.h **** * including Cypress's product in a High Risk Product, the manufacturer
  36:Generated_Source\PSoC6/ADC_1.h **** * of such system or application assumes all risk of such use and in doing
  37:Generated_Source\PSoC6/ADC_1.h **** * so agrees to indemnify Cypress against all liability.
  38:Generated_Source\PSoC6/ADC_1.h **** *******************************************************************************/
  39:Generated_Source\PSoC6/ADC_1.h **** #if !defined(CY_ADC_1_H)
  40:Generated_Source\PSoC6/ADC_1.h **** #define CY_ADC_1_H
  41:Generated_Source\PSoC6/ADC_1.h **** 
  42:Generated_Source\PSoC6/ADC_1.h **** #include <cy_device_headers.h>
  43:Generated_Source\PSoC6/ADC_1.h **** #include <sar/cy_sar.h>
  44:Generated_Source\PSoC6/ADC_1.h **** 
  45:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_VREF_ROUTED                  ((0) == 1u)
  46:Generated_Source\PSoC6/ADC_1.h **** #if (ADC_1_VREF_ROUTED)
  47:Generated_Source\PSoC6/ADC_1.h **** #include "ADC_1_vrefAMux.h"
  48:Generated_Source\PSoC6/ADC_1.h **** #endif
  49:Generated_Source\PSoC6/ADC_1.h **** 
  50:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CLOCK_INTERNAL               ((1) == 1u)
  51:Generated_Source\PSoC6/ADC_1.h **** #if (ADC_1_CLOCK_INTERNAL)
  52:Generated_Source\PSoC6/ADC_1.h **** #include "ADC_1_intSarClock.h"
  53:Generated_Source\PSoC6/ADC_1.h **** #endif /* ADC_1_CLOCK_INTERNAL */
  54:Generated_Source\PSoC6/ADC_1.h **** 
  55:Generated_Source\PSoC6/ADC_1.h **** /**
  56:Generated_Source\PSoC6/ADC_1.h **** * \addtogroup group_structures
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 93


  57:Generated_Source\PSoC6/ADC_1.h **** *
  58:Generated_Source\PSoC6/ADC_1.h **** */
  59:Generated_Source\PSoC6/ADC_1.h **** typedef struct
  60:Generated_Source\PSoC6/ADC_1.h **** {
  61:Generated_Source\PSoC6/ADC_1.h ****     uint32_t channelBase;                   /* Start of channels for the configuration */
  62:Generated_Source\PSoC6/ADC_1.h ****     uint32_t numChannels;                   /* Number of channels in the configuration */
  63:Generated_Source\PSoC6/ADC_1.h ****     const cy_stc_sar_config_t *hwConfigStc; /* PDL structure */
  64:Generated_Source\PSoC6/ADC_1.h ****     uint32_t miscConfig;                    /* Miscellaneous configuration bits broken down as foll
  65:Generated_Source\PSoC6/ADC_1.h ****                                             [0] - Freerunning: Set if the sample mode is freerunnin
  66:Generated_Source\PSoC6/ADC_1.h ****                                             [2] - Mux Switch 0: Set when VSSA is used for the neg i
  67:Generated_Source\PSoC6/ADC_1.h ****                                             */
  68:Generated_Source\PSoC6/ADC_1.h **** #if (ADC_1_CLOCK_INTERNAL)
  69:Generated_Source\PSoC6/ADC_1.h ****     uint32_t clkDivider;                    /* Clock divider */
  70:Generated_Source\PSoC6/ADC_1.h **** #endif /* ADC_1_CLOCK_INTERNAL */
  71:Generated_Source\PSoC6/ADC_1.h **** 
  72:Generated_Source\PSoC6/ADC_1.h **** } ADC_1_CONFIG_STRUCT;
  73:Generated_Source\PSoC6/ADC_1.h **** /** @} structures */
  74:Generated_Source\PSoC6/ADC_1.h **** 
  75:Generated_Source\PSoC6/ADC_1.h **** /*******************************************************************************
  76:Generated_Source\PSoC6/ADC_1.h **** * Function Prototypes
  77:Generated_Source\PSoC6/ADC_1.h **** *******************************************************************************/
  78:Generated_Source\PSoC6/ADC_1.h **** void ADC_1_SelectConfig(uint32_t config, uint32_t restart);
  79:Generated_Source\PSoC6/ADC_1.h **** void ADC_1_InitConfig(const ADC_1_CONFIG_STRUCT *config);
  80:Generated_Source\PSoC6/ADC_1.h **** void ADC_1_Init(void);
  81:Generated_Source\PSoC6/ADC_1.h **** __STATIC_INLINE void ADC_1_Enable(void);
  82:Generated_Source\PSoC6/ADC_1.h **** 
  83:Generated_Source\PSoC6/ADC_1.h **** /**
  84:Generated_Source\PSoC6/ADC_1.h **** * \addtogroup group_general
  85:Generated_Source\PSoC6/ADC_1.h **** * @{
  86:Generated_Source\PSoC6/ADC_1.h **** */
  87:Generated_Source\PSoC6/ADC_1.h **** void ADC_1_Start(void);
  88:Generated_Source\PSoC6/ADC_1.h **** void ADC_1_StartEx(cy_israddress userIsr);
  89:Generated_Source\PSoC6/ADC_1.h **** __STATIC_INLINE void ADC_1_Stop(void);
  90:Generated_Source\PSoC6/ADC_1.h **** void ADC_1_StartConvert(void);
  91:Generated_Source\PSoC6/ADC_1.h **** __STATIC_INLINE void ADC_1_StopConvert(void);
  92:Generated_Source\PSoC6/ADC_1.h **** void ADC_1_SetConvertMode(cy_en_sar_start_convert_sel_t mode);
  93:Generated_Source\PSoC6/ADC_1.h **** void ADC_1_SetEosMask(uint32_t mask);
  94:Generated_Source\PSoC6/ADC_1.h **** uint32_t ADC_1_IsEndConversion(cy_en_sar_return_mode_t retMode);
  95:Generated_Source\PSoC6/ADC_1.h **** __STATIC_INLINE int16_t ADC_1_GetResult16(uint32_t chan);
  96:Generated_Source\PSoC6/ADC_1.h **** __STATIC_INLINE int32_t ADC_1_GetResult32(uint32_t chan);
  97:Generated_Source\PSoC6/ADC_1.h **** __STATIC_INLINE void ADC_1_SetLowLimit(uint32_t lowLimit);
  98:Generated_Source\PSoC6/ADC_1.h **** __STATIC_INLINE void ADC_1_SetHighLimit(uint32_t highLimit);
  99:Generated_Source\PSoC6/ADC_1.h **** __STATIC_INLINE void ADC_1_SetLimitMask(uint32_t limitMask);
 100:Generated_Source\PSoC6/ADC_1.h **** __STATIC_INLINE void ADC_1_SetSatMask(uint32_t satMask);
 101:Generated_Source\PSoC6/ADC_1.h **** __STATIC_INLINE cy_en_sar_status_t ADC_1_SetOffset(uint32_t chan, int16_t offset);
 102:Generated_Source\PSoC6/ADC_1.h **** __STATIC_INLINE cy_en_sar_status_t ADC_1_SetGain(uint32_t chan, int32_t adcGain);
 103:Generated_Source\PSoC6/ADC_1.h **** __STATIC_INLINE float32_t ADC_1_CountsTo_Volts(uint32_t chan, int16_t adcCounts);
 104:Generated_Source\PSoC6/ADC_1.h **** __STATIC_INLINE int16_t ADC_1_CountsTo_mVolts(uint32_t chan, int16_t adcCounts);
 105:Generated_Source\PSoC6/ADC_1.h **** __STATIC_INLINE int32_t ADC_1_CountsTo_uVolts(uint32_t chan, int16_t adcCounts);
 106:Generated_Source\PSoC6/ADC_1.h **** 
 107:Generated_Source\PSoC6/ADC_1.h **** /** @} general */
 108:Generated_Source\PSoC6/ADC_1.h **** 
 109:Generated_Source\PSoC6/ADC_1.h **** void ADC_1_SetChanMask(uint32_t enableMask);
 110:Generated_Source\PSoC6/ADC_1.h **** 
 111:Generated_Source\PSoC6/ADC_1.h **** /**
 112:Generated_Source\PSoC6/ADC_1.h **** * \addtogroup group_power
 113:Generated_Source\PSoC6/ADC_1.h **** * @{
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 94


 114:Generated_Source\PSoC6/ADC_1.h **** */
 115:Generated_Source\PSoC6/ADC_1.h **** __STATIC_INLINE void ADC_1_Sleep(void);
 116:Generated_Source\PSoC6/ADC_1.h **** __STATIC_INLINE void ADC_1_Wakeup(void);
 117:Generated_Source\PSoC6/ADC_1.h **** 
 118:Generated_Source\PSoC6/ADC_1.h **** /** @} power */
 119:Generated_Source\PSoC6/ADC_1.h **** 
 120:Generated_Source\PSoC6/ADC_1.h **** /**
 121:Generated_Source\PSoC6/ADC_1.h **** * \addtogroup group_interrupt
 122:Generated_Source\PSoC6/ADC_1.h **** * @{
 123:Generated_Source\PSoC6/ADC_1.h **** */
 124:Generated_Source\PSoC6/ADC_1.h **** void ADC_1_ISR(void);
 125:Generated_Source\PSoC6/ADC_1.h **** void ADC_1_IRQ_Enable(void);
 126:Generated_Source\PSoC6/ADC_1.h **** void ADC_1_IRQ_Disable(void);
 127:Generated_Source\PSoC6/ADC_1.h **** 
 128:Generated_Source\PSoC6/ADC_1.h **** /** @} interrupt */
 129:Generated_Source\PSoC6/ADC_1.h **** 
 130:Generated_Source\PSoC6/ADC_1.h **** /*******************************************************************************
 131:Generated_Source\PSoC6/ADC_1.h ****                                   Parameters
 132:Generated_Source\PSoC6/ADC_1.h **** The parameters that are set in the customizer are redefined as constants here.
 133:Generated_Source\PSoC6/ADC_1.h **** *******************************************************************************/
 134:Generated_Source\PSoC6/ADC_1.h **** 
 135:Generated_Source\PSoC6/ADC_1.h **** /*  Sample Mode setting constants */
 136:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_TOTAL_CONFIGS                (1ul)
 137:Generated_Source\PSoC6/ADC_1.h **** 
 138:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 139:Generated_Source\PSoC6/ADC_1.h **** /* Begin configuration 0 customizer defines                                   */
 140:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 141:Generated_Source\PSoC6/ADC_1.h **** 
 142:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_SAMPLE_RATE             (100000)
 143:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_CHANNEL_BASE            (0u)
 144:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_CHANNEL_COUNT           (1u)
 145:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_VREF_SEL_MASK           (0xf0u)
 146:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_NOMINAL_CLOCK_FREQ      (16666666u)
 147:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_CHANNEL_EN              (0x1u)
 148:Generated_Source\PSoC6/ADC_1.h **** 
 149:Generated_Source\PSoC6/ADC_1.h **** /* Sample Control Register */
 150:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_SINGLE_ENDED_FORMAT     (1uL)
 151:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_DIFFERENTIAL_FORMAT     (1uL)
 152:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_SAMPLES_AVERAGED        (0uL)
 153:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_RANGE_INTR_MASK         (0x0u)
 154:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_SATURATE_INTR_MASK      (0x0u)
 155:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_VNEG_INPUT_SEL          (0)
 156:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_SINGLE_PRESENT          (1)
 157:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_VREF_MV_VALUE           (3300)
 158:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_APERTURE_TIME0          (4uL)
 159:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_APERTURE_TIME1          (2uL)
 160:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_APERTURE_TIME2          (2uL)
 161:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_APERTURE_TIME3          (2uL)
 162:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_FREERUNNING             (0u)
 163:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_AVGERAGING_MODE         (1uL)
 164:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_LOW_LIMIT               (512u)
 165:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_HIGH_LIMIT              (3584u)
 166:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_RANGE_COND              (0uL)
 167:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_USE_SOC                 (0uL)
 168:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_VREF_PWR                (3uL)
 169:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_COMP_PWR                (3uL)
 170:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_COMP_DLY                (3uL)
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 95


 171:Generated_Source\PSoC6/ADC_1.h **** 
 172:Generated_Source\PSoC6/ADC_1.h **** /* Clock parameters*/
 173:Generated_Source\PSoC6/ADC_1.h **** #if (ADC_1_CLOCK_INTERNAL)
 174:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG0_CLOCKDIVIDER        (((CYDEV_CLK_PERICLK__HZ) / (ADC_1_CFG0_NOMINAL_CLOCK_FR
 175:Generated_Source\PSoC6/ADC_1.h **** #endif /* (ADC_1_CLOCK_INTERNAL) */
 176:Generated_Source\PSoC6/ADC_1.h **** 
 177:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 178:Generated_Source\PSoC6/ADC_1.h **** /* End configuration 0 customizer defines                                     */
 179:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 180:Generated_Source\PSoC6/ADC_1.h **** 
 181:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 182:Generated_Source\PSoC6/ADC_1.h **** /* Begin configuration 1 customizer defines                                   */
 183:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 184:Generated_Source\PSoC6/ADC_1.h **** 
 185:Generated_Source\PSoC6/ADC_1.h **** #if(ADC_1_TOTAL_CONFIGS > 1)
 186:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_SAMPLE_RATE             ()
 187:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_CHANNEL_BASE            (u)
 188:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_CHANNEL_COUNT           (u)
 189:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_VREF_SEL_MASK           (u)
 190:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_NOMINAL_CLOCK_FREQ      (u)
 191:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_CHANNEL_EN              (u)
 192:Generated_Source\PSoC6/ADC_1.h **** 
 193:Generated_Source\PSoC6/ADC_1.h ****     /* Sample Control Register */
 194:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_SINGLE_ENDED_FORMAT     (uL)
 195:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_DIFFERENTIAL_FORMAT     (uL)
 196:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_SAMPLES_AVERAGED        (uL)
 197:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_RANGE_INTR_MASK         (u)
 198:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_SATURATE_INTR_MASK      (u)
 199:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_VNEG_INPUT_SEL          ()
 200:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_SINGLE_PRESENT          ()
 201:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_VREF_MV_VALUE           ()
 202:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_APERTURE_TIME0          (uL)
 203:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_APERTURE_TIME1          (uL)
 204:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_APERTURE_TIME2          (uL)
 205:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_APERTURE_TIME3          (uL)
 206:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_FREERUNNING             (u)
 207:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_AVGERAGING_MODE         (uL)
 208:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_LOW_LIMIT               (u)
 209:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_HIGH_LIMIT              (u)
 210:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_RANGE_COND              (uL)
 211:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_USE_SOC                 (0uL)
 212:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_VREF_PWR                (uL)
 213:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_COMP_PWR                (uL)
 214:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_COMP_DLY                (uL)
 215:Generated_Source\PSoC6/ADC_1.h **** 
 216:Generated_Source\PSoC6/ADC_1.h ****     /* Clock parameters*/
 217:Generated_Source\PSoC6/ADC_1.h ****     #if (ADC_1_CLOCK_INTERNAL)
 218:Generated_Source\PSoC6/ADC_1.h ****         #define ADC_1_CFG1_CLOCKDIVIDER        (((CYDEV_CLK_PERICLK__HZ) / (ADC_1_CFG1_NOMINAL_CLOC
 219:Generated_Source\PSoC6/ADC_1.h ****     #endif /* (ADC_1_CLOCK_INTERNAL) */
 220:Generated_Source\PSoC6/ADC_1.h **** #endif /* #if(ADC_1_TOTAL_CONFIGS > 1) */
 221:Generated_Source\PSoC6/ADC_1.h **** 
 222:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 223:Generated_Source\PSoC6/ADC_1.h **** /* End configuration 1 customizer defines                                     */
 224:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 225:Generated_Source\PSoC6/ADC_1.h **** 
 226:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 227:Generated_Source\PSoC6/ADC_1.h **** /* Begin configuration 2 customizer defines                                         */
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 96


 228:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 229:Generated_Source\PSoC6/ADC_1.h **** 
 230:Generated_Source\PSoC6/ADC_1.h **** #if(ADC_1_TOTAL_CONFIGS > 2)
 231:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_SAMPLE_RATE             ()
 232:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_CHANNEL_BASE            (u)
 233:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_CHANNEL_COUNT           (u)
 234:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_VREF_SEL_MASK           (u)
 235:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_NOMINAL_CLOCK_FREQ      (u)
 236:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_CHANNEL_EN              (u)
 237:Generated_Source\PSoC6/ADC_1.h **** 
 238:Generated_Source\PSoC6/ADC_1.h ****     /* Sample Control Register */
 239:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_SINGLE_ENDED_FORMAT     (uL)
 240:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_DIFFERENTIAL_FORMAT     (uL)
 241:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_SAMPLES_AVERAGED        (uL)
 242:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_RANGE_INTR_MASK         (u)
 243:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_SATURATE_INTR_MASK      (u)
 244:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_VNEG_INPUT_SEL          ()
 245:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_SINGLE_PRESENT          ()
 246:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_VREF_MV_VALUE           ()
 247:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_APERTURE_TIME0          (uL)
 248:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_APERTURE_TIME1          (uL)
 249:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_APERTURE_TIME2          (uL)
 250:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_APERTURE_TIME3          (uL)
 251:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_FREERUNNING             (u)
 252:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_AVGERAGING_MODE         (uL)
 253:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_LOW_LIMIT               (u)
 254:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_HIGH_LIMIT              (u)
 255:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_RANGE_COND              (uL)
 256:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_USE_SOC                 (0uL)
 257:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_VREF_PWR                (uL)
 258:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_COMP_PWR                (uL)
 259:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_COMP_DLY                (uL)
 260:Generated_Source\PSoC6/ADC_1.h **** 
 261:Generated_Source\PSoC6/ADC_1.h ****     /* Clock parameters*/
 262:Generated_Source\PSoC6/ADC_1.h ****     #if (ADC_1_CLOCK_INTERNAL)
 263:Generated_Source\PSoC6/ADC_1.h ****         #define ADC_1_CFG2_CLOCKDIVIDER        (((CYDEV_CLK_PERICLK__HZ) / (ADC_1_CFG2_NOMINAL_CLOC
 264:Generated_Source\PSoC6/ADC_1.h ****     #endif /* (ADC_1_CLOCK_INTERNAL) */
 265:Generated_Source\PSoC6/ADC_1.h **** #endif /* (ADC_1_TOTAL_CONFIGS > 2) */
 266:Generated_Source\PSoC6/ADC_1.h **** 
 267:Generated_Source\PSoC6/ADC_1.h **** 
 268:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 269:Generated_Source\PSoC6/ADC_1.h **** /* End configuration 2 customizer defines                                     */
 270:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 271:Generated_Source\PSoC6/ADC_1.h **** 
 272:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 273:Generated_Source\PSoC6/ADC_1.h **** /* Begin configuration 3 customizer defines                                   */
 274:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 275:Generated_Source\PSoC6/ADC_1.h **** #if(ADC_1_TOTAL_CONFIGS > 3)
 276:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_SAMPLE_RATE             ()
 277:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_CHANNEL_BASE            (u)
 278:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_CHANNEL_COUNT           (u)
 279:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_VREF_SEL_MASK           (u)
 280:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_NOMINAL_CLOCK_FREQ      (u)
 281:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_CHANNEL_EN              (u)
 282:Generated_Source\PSoC6/ADC_1.h **** 
 283:Generated_Source\PSoC6/ADC_1.h ****     /* Sample Control Register */
 284:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_SINGLE_ENDED_FORMAT     (uL)
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 97


 285:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_DIFFERENTIAL_FORMAT     (uL)
 286:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_SAMPLES_AVERAGED        (uL)
 287:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_RANGE_INTR_MASK         (u)
 288:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_SATURATE_INTR_MASK      (u)
 289:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_VNEG_INPUT_SEL          ()
 290:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_SINGLE_PRESENT          ()
 291:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_VREF_MV_VALUE           ()
 292:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_APERTURE_TIME0          (uL)
 293:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_APERTURE_TIME1          (uL)
 294:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_APERTURE_TIME2          (uL)
 295:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_APERTURE_TIME3          (uL)
 296:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_FREERUNNING             (u)
 297:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_AVGERAGING_MODE         (uL)
 298:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_LOW_LIMIT               (u)
 299:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_HIGH_LIMIT              (u)
 300:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_RANGE_COND              (uL)
 301:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_USE_SOC                 (0uL)
 302:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_VREF_PWR                (uL)
 303:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_COMP_PWR                (uL)
 304:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_COMP_DLY                (uL)
 305:Generated_Source\PSoC6/ADC_1.h **** 
 306:Generated_Source\PSoC6/ADC_1.h ****     /* Clock parameters*/
 307:Generated_Source\PSoC6/ADC_1.h ****     #if (ADC_1_CLOCK_INTERNAL)
 308:Generated_Source\PSoC6/ADC_1.h ****         #define ADC_1_CFG3_CLOCKDIVIDER        (((CYDEV_CLK_PERICLK__HZ) / (ADC_1_CFG3_NOMINAL_CLOC
 309:Generated_Source\PSoC6/ADC_1.h ****     #endif /* (ADC_1_CLOCK_INTERNAL) */
 310:Generated_Source\PSoC6/ADC_1.h **** #endif /* (ADC_1_TOTAL_CONFIGS > 3) */
 311:Generated_Source\PSoC6/ADC_1.h **** 
 312:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 313:Generated_Source\PSoC6/ADC_1.h **** /* End configuration 3 customizer defines                                     */
 314:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 315:Generated_Source\PSoC6/ADC_1.h **** 
 316:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_DEFAULT_SAMPLE_MODE_SEL      (0u)
 317:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_FREERUNNING                  (1u)
 318:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_HARDWARESOC                  (1u)
 319:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_NEG_SEL_VSSA_KELVIN          (0x0uL)
 320:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_NEG_SEL_VREF                 (0x7uL)
 321:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_PWR_CTRL_VREF_NORMAL_PWR     (0x0uL)
 322:Generated_Source\PSoC6/ADC_1.h **** 
 323:Generated_Source\PSoC6/ADC_1.h **** /** ADC_1_TOTAL_CHANNELS_NUM
 324:Generated_Source\PSoC6/ADC_1.h **** * This constant represents the number of input channels available for scanning.
 325:Generated_Source\PSoC6/ADC_1.h **** */
 326:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_TOTAL_CHANNELS_NUM           (1u)
 327:Generated_Source\PSoC6/ADC_1.h **** 
 328:Generated_Source\PSoC6/ADC_1.h **** /*******************************************************************************
 329:Generated_Source\PSoC6/ADC_1.h **** *    Variables with External Linkage
 330:Generated_Source\PSoC6/ADC_1.h **** *******************************************************************************/
 331:Generated_Source\PSoC6/ADC_1.h **** /**
 332:Generated_Source\PSoC6/ADC_1.h **** * \addtogroup group_globals
 333:Generated_Source\PSoC6/ADC_1.h **** * Globals are noted in the descriptions of the functions that use globals.
 334:Generated_Source\PSoC6/ADC_1.h **** * They are marked with (R), (W), or (RW) noting whether the variable is read,
 335:Generated_Source\PSoC6/ADC_1.h **** * write, or read/write.
 336:Generated_Source\PSoC6/ADC_1.h **** * @{
 337:Generated_Source\PSoC6/ADC_1.h **** */
 338:Generated_Source\PSoC6/ADC_1.h **** 
 339:Generated_Source\PSoC6/ADC_1.h **** /** ADC_1_initVar
 340:Generated_Source\PSoC6/ADC_1.h **** * The ADC_1_initVar variable is used to indicate
 341:Generated_Source\PSoC6/ADC_1.h **** * initial configuration of this component. The variable is initialized to zero and
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 98


 342:Generated_Source\PSoC6/ADC_1.h **** * set to 1 the first time ADC_1_Start() is called. This allows for
 343:Generated_Source\PSoC6/ADC_1.h **** * component initialization without reinitialization in all subsequent calls to the
 344:Generated_Source\PSoC6/ADC_1.h **** * ADC_1_Start() routine.
 345:Generated_Source\PSoC6/ADC_1.h **** *
 346:Generated_Source\PSoC6/ADC_1.h **** * If reinitialization of the component is required, then the ADC_1_Init() function
 347:Generated_Source\PSoC6/ADC_1.h **** * can be called before the ADC_1_Start() or ADC_1_Enable()
 348:Generated_Source\PSoC6/ADC_1.h **** * functions.
 349:Generated_Source\PSoC6/ADC_1.h **** */
 350:Generated_Source\PSoC6/ADC_1.h **** extern uint8_t ADC_1_initVar;
 351:Generated_Source\PSoC6/ADC_1.h **** extern uint8_t ADC_1_selected;
 352:Generated_Source\PSoC6/ADC_1.h **** extern uint32_t ADC_1_currentConfig;
 353:Generated_Source\PSoC6/ADC_1.h **** 
 354:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_INIT_VAR_INIT_FLAG     (0x01u)
 355:Generated_Source\PSoC6/ADC_1.h **** 
 356:Generated_Source\PSoC6/ADC_1.h **** extern const ADC_1_CONFIG_STRUCT ADC_1_allConfigs[ADC_1_TOTAL_CONFIGS];
 357:Generated_Source\PSoC6/ADC_1.h **** 
 358:Generated_Source\PSoC6/ADC_1.h **** /* SysPm callback structure for deep sleep entry and exit.
 359:Generated_Source\PSoC6/ADC_1.h ****  * Call the Cy_SysPm_RegisterCallback function with this
 360:Generated_Source\PSoC6/ADC_1.h ****  * structure before calling Cy_SysPm_DeepSleep.
 361:Generated_Source\PSoC6/ADC_1.h **** */
 362:Generated_Source\PSoC6/ADC_1.h **** extern cy_stc_syspm_callback_t ADC_1_DeepSleepCallbackStruct;
 363:Generated_Source\PSoC6/ADC_1.h **** 
 364:Generated_Source\PSoC6/ADC_1.h **** /** @} globals */
 365:Generated_Source\PSoC6/ADC_1.h **** 
 366:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 367:Generated_Source\PSoC6/ADC_1.h **** /* *******************Global MUX_SWITCH0 Definitions ************************ */
 368:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 369:Generated_Source\PSoC6/ADC_1.h **** #if(ADC_1_CFG0_VNEG_INPUT_SEL == ADC_1_NEG_SEL_VSSA_KELVIN)
 370:Generated_Source\PSoC6/ADC_1.h ****     /* Do not connect VSSA to VMINUS when one channel in differential mode used */
 371:Generated_Source\PSoC6/ADC_1.h ****     #if((ADC_1_TOTAL_CHANNELS_NUM == 1u) && (ADC_1_CFG0_SINGLE_PRESENT == 0u))
 372:Generated_Source\PSoC6/ADC_1.h ****         #define ADC_1_MUX_SWITCH0_INIT      0u
 373:Generated_Source\PSoC6/ADC_1.h ****     #else    /* multiple channels or one single ended channel */
 374:Generated_Source\PSoC6/ADC_1.h ****         #define ADC_1_MUX_SWITCH0_INIT      1u
 375:Generated_Source\PSoC6/ADC_1.h ****     #endif /* ((ADC_1_TOTAL_CHANNELS_NUM == 1u) && (ADC_1_CFG0_SINGLE_PRESENT == 0u)) */
 376:Generated_Source\PSoC6/ADC_1.h **** #else
 377:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_MUX_SWITCH0_INIT          0u
 378:Generated_Source\PSoC6/ADC_1.h **** #endif /* ADC_1_CFG0_VNEG_INPUT_SEL == ADC_1_NEG_SEL_VSSA_KELVIN */
 379:Generated_Source\PSoC6/ADC_1.h **** 
 380:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 381:Generated_Source\PSoC6/ADC_1.h **** /* Begin configuration 0 calculated defines                                   */
 382:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 383:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_SAMPLE_TIME01_INIT \
 384:Generated_Source\PSoC6/ADC_1.h ****         ((ADC_1_CFG0_APERTURE_TIME0 \
 385:Generated_Source\PSoC6/ADC_1.h ****         << SAR_SAMPLE_TIME01_SAMPLE_TIME0_Pos) \
 386:Generated_Source\PSoC6/ADC_1.h ****         | (ADC_1_CFG0_APERTURE_TIME1 \
 387:Generated_Source\PSoC6/ADC_1.h ****         << SAR_SAMPLE_TIME01_SAMPLE_TIME1_Pos))
 388:Generated_Source\PSoC6/ADC_1.h **** 
 389:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_SAMPLE_TIME23_INIT \
 390:Generated_Source\PSoC6/ADC_1.h ****         ((ADC_1_CFG0_APERTURE_TIME2 \
 391:Generated_Source\PSoC6/ADC_1.h ****         << SAR_SAMPLE_TIME23_SAMPLE_TIME2_Pos) \
 392:Generated_Source\PSoC6/ADC_1.h ****         | (ADC_1_CFG0_APERTURE_TIME3 \
 393:Generated_Source\PSoC6/ADC_1.h ****         << SAR_SAMPLE_TIME23_SAMPLE_TIME3_Pos))
 394:Generated_Source\PSoC6/ADC_1.h **** 
 395:Generated_Source\PSoC6/ADC_1.h **** /* Enable soc pin if used */
 396:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_DSI_TRIGGER_EN_INIT \
 397:Generated_Source\PSoC6/ADC_1.h ****         (ADC_1_CFG0_USE_SOC \
 398:Generated_Source\PSoC6/ADC_1.h ****         << SAR_SAMPLE_CTRL_DSI_TRIGGER_EN_Pos)
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 99


 399:Generated_Source\PSoC6/ADC_1.h **** 
 400:Generated_Source\PSoC6/ADC_1.h **** /* Set soc operation to edge or level based on sample mode */
 401:Generated_Source\PSoC6/ADC_1.h **** #if(ADC_1_CFG0_FREERUNNING == ADC_1_FREERUNNING)
 402:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG0_DSI_TRIGGER_LEVEL_INIT    (SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_Msk)
 403:Generated_Source\PSoC6/ADC_1.h **** #else /* Edge trigger */
 404:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG0_DSI_TRIGGER_LEVEL_INIT    (0u)
 405:Generated_Source\PSoC6/ADC_1.h **** #endif /* End ADC_1_CFG0_FREERUNNING == ADC_1_FREERUNNING */
 406:Generated_Source\PSoC6/ADC_1.h **** 
 407:Generated_Source\PSoC6/ADC_1.h **** /* Set SE_NEG_INPUT */
 408:Generated_Source\PSoC6/ADC_1.h **** #if(ADC_1_CFG0_VNEG_INPUT_SEL == ADC_1_NEG_SEL_VSSA_KELVIN)
 409:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG0_SE_NEG_INPUT_INIT \
 410:Generated_Source\PSoC6/ADC_1.h ****             ((uint32)(ADC_1_NEG_SEL_VSSA_KELVIN \
 411:Generated_Source\PSoC6/ADC_1.h ****             << SAR_CTRL_NEG_SEL_Pos ))
 412:Generated_Source\PSoC6/ADC_1.h **** #elif(ADC_1_CFG0_VNEG_INPUT_SEL == ADC_1_NEG_SEL_VREF)
 413:Generated_Source\PSoC6/ADC_1.h **** 
 414:Generated_Source\PSoC6/ADC_1.h ****     /* Do not connect VNEG to VREF when one channel in differential mode used */
 415:Generated_Source\PSoC6/ADC_1.h ****     /* Only needed for config 0 since 2+ configs == 2+ channels */
 416:Generated_Source\PSoC6/ADC_1.h ****     #if((ADC_1_CFG0_CHANNEL_COUNT == 1u) && (ADC_1_CFG0_SINGLE_PRESENT == 0u))
 417:Generated_Source\PSoC6/ADC_1.h ****         #define ADC_1_CFG0_SE_NEG_INPUT_INIT     0u
 418:Generated_Source\PSoC6/ADC_1.h ****     #else    /* multiple channels or one single channel */
 419:Generated_Source\PSoC6/ADC_1.h ****         #define ADC_1_CFG0_SE_NEG_INPUT_INIT     (ADC_1_NEG_SEL_VREF \
 420:Generated_Source\PSoC6/ADC_1.h ****                                                             << SAR_CTRL_NEG_SEL_Pos )
 421:Generated_Source\PSoC6/ADC_1.h ****     #endif /* (ADC_1_CFG0_CHANNEL_COUNT == 1u) && (ADC_1_CFG0_CHANNELS_MODE != 0u) */
 422:Generated_Source\PSoC6/ADC_1.h **** #elif (ADC_1_CFG0_SINGLE_PRESENT != 0u)
 423:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG0_SE_NEG_INPUT_INIT         ADC_1_CFG0_NEG_OTHER
 424:Generated_Source\PSoC6/ADC_1.h **** #else
 425:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG0_SE_NEG_INPUT_INIT         0u
 426:Generated_Source\PSoC6/ADC_1.h **** #endif /* ADC_1_CFG0_VNEG_INPUT_SEL == ADC_1_NEG_SEL_VSSA_KELVIN */
 427:Generated_Source\PSoC6/ADC_1.h **** 
 428:Generated_Source\PSoC6/ADC_1.h **** #if(ADC_1_TOTAL_CHANNELS_NUM > 1u)
 429:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG0_NEG_OTHER                 (uint16)((uint16)ADC_1_SARMUX__VNEG0 << SAR_CTRL_N
 430:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG0_SWITCH_CONF_INIT          0u
 431:Generated_Source\PSoC6/ADC_1.h **** #else /* Disable SAR sequencer from enabling routing switches in single channel mode */
 432:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG0_SWITCH_CONF_INIT          SAR_CTRL_SWITCH_DISABLE_Msk
 433:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG0_NEG_OTHER                 0u
 434:Generated_Source\PSoC6/ADC_1.h **** #endif /* ADC_1_CFG0_CHANNEL_COUNT > 1u */
 435:Generated_Source\PSoC6/ADC_1.h **** 
 436:Generated_Source\PSoC6/ADC_1.h **** /* If the SAR is configured for multiple channels, always set SAR_HW_CTRL_NEGVREF to 1 */
 437:Generated_Source\PSoC6/ADC_1.h **** #if(ADC_1_TOTAL_CHANNELS_NUM == 1u)
 438:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG0_HW_CTRL_NEGVREF_INIT      0u
 439:Generated_Source\PSoC6/ADC_1.h **** #else
 440:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG0_HW_CTRL_NEGVREF_INIT      SAR_CTRL_SAR_HW_CTRL_NEGVREF_Msk
 441:Generated_Source\PSoC6/ADC_1.h **** #endif /* ADC_1_CFG0_CHANNEL_COUNT == 1u */
 442:Generated_Source\PSoC6/ADC_1.h **** 
 443:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_POWER_INIT  (ADC_1_PWR_CTRL_VREF_NORMAL_PWR)
 444:Generated_Source\PSoC6/ADC_1.h **** 
 445:Generated_Source\PSoC6/ADC_1.h **** /* SAMPLE_CTRL initial values */
 446:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_SE_RESULT_FORMAT_INIT \
 447:Generated_Source\PSoC6/ADC_1.h ****         (ADC_1_CFG0_SINGLE_ENDED_FORMAT \
 448:Generated_Source\PSoC6/ADC_1.h ****         << SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_Pos)
 449:Generated_Source\PSoC6/ADC_1.h **** 
 450:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_DIFF_RESULT_FORMAT_INIT \
 451:Generated_Source\PSoC6/ADC_1.h ****         (ADC_1_CFG0_DIFFERENTIAL_FORMAT \
 452:Generated_Source\PSoC6/ADC_1.h ****         << SAR_SAMPLE_CTRL_DIFFERENTIAL_SIGNED_Pos)
 453:Generated_Source\PSoC6/ADC_1.h **** 
 454:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_AVG_SAMPLES_NUM_INIT \
 455:Generated_Source\PSoC6/ADC_1.h ****         (ADC_1_CFG0_SAMPLES_AVERAGED \
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 100


 456:Generated_Source\PSoC6/ADC_1.h ****         << SAR_SAMPLE_CTRL_AVG_CNT_Pos)
 457:Generated_Source\PSoC6/ADC_1.h **** 
 458:Generated_Source\PSoC6/ADC_1.h **** /* Combination of Average Mode and Average Shift */
 459:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_AVG_MODE_INIT \
 460:Generated_Source\PSoC6/ADC_1.h ****         (ADC_1_CFG0_AVGERAGING_MODE \
 461:Generated_Source\PSoC6/ADC_1.h ****         << SAR_SAMPLE_CTRL_AVG_SHIFT_Pos)
 462:Generated_Source\PSoC6/ADC_1.h **** 
 463:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_TRIGGER_OUT_INIT      (0u)
 464:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_UAB_SCAN_MODE_INIT    (0u)
 465:Generated_Source\PSoC6/ADC_1.h **** 
 466:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_VREF_POWER_INIT  \
 467:Generated_Source\PSoC6/ADC_1.h ****         (ADC_1_CFG0_VREF_PWR \
 468:Generated_Source\PSoC6/ADC_1.h ****         << SAR_CTRL_PWR_CTRL_VREF_Pos)
 469:Generated_Source\PSoC6/ADC_1.h **** 
 470:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_COMP_PWR_INIT  \
 471:Generated_Source\PSoC6/ADC_1.h ****         (ADC_1_CFG0_COMP_PWR \
 472:Generated_Source\PSoC6/ADC_1.h ****         << SAR_CTRL_COMP_PWR_Pos)
 473:Generated_Source\PSoC6/ADC_1.h **** 
 474:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_COMP_DLY_INIT  \
 475:Generated_Source\PSoC6/ADC_1.h ****         (ADC_1_CFG0_COMP_DLY \
 476:Generated_Source\PSoC6/ADC_1.h ****         << SAR_CTRL_COMP_DLY_Pos)
 477:Generated_Source\PSoC6/ADC_1.h **** 
 478:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_CTRL_INIT  \
 479:Generated_Source\PSoC6/ADC_1.h ****         (ADC_1_CFG0_VREF_POWER_INIT \
 480:Generated_Source\PSoC6/ADC_1.h ****         | ADC_1_CFG0_VREF_SEL_MASK \
 481:Generated_Source\PSoC6/ADC_1.h ****         | ADC_1_CFG0_SE_NEG_INPUT_INIT \
 482:Generated_Source\PSoC6/ADC_1.h ****         | ADC_1_CFG0_HW_CTRL_NEGVREF_INIT \
 483:Generated_Source\PSoC6/ADC_1.h ****         | ADC_1_CFG0_COMP_DLY_INIT \
 484:Generated_Source\PSoC6/ADC_1.h ****         | SAR_CTRL_REFBUF_EN_Msk \
 485:Generated_Source\PSoC6/ADC_1.h ****         | ADC_1_CFG0_COMP_PWR_INIT \
 486:Generated_Source\PSoC6/ADC_1.h ****         | SAR_CTRL_DSI_SYNC_CONFIG_Msk  \
 487:Generated_Source\PSoC6/ADC_1.h ****         | ADC_1_CFG0_SWITCH_CONF_INIT )
 488:Generated_Source\PSoC6/ADC_1.h **** 
 489:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_SAMPLE_CTRL_INIT \
 490:Generated_Source\PSoC6/ADC_1.h ****         (ADC_1_CFG0_SE_RESULT_FORMAT_INIT \
 491:Generated_Source\PSoC6/ADC_1.h ****         | ADC_1_CFG0_DIFF_RESULT_FORMAT_INIT \
 492:Generated_Source\PSoC6/ADC_1.h ****         | ADC_1_CFG0_AVG_SAMPLES_NUM_INIT \
 493:Generated_Source\PSoC6/ADC_1.h ****         | ADC_1_CFG0_AVG_MODE_INIT \
 494:Generated_Source\PSoC6/ADC_1.h ****         | ADC_1_CFG0_DSI_TRIGGER_LEVEL_INIT \
 495:Generated_Source\PSoC6/ADC_1.h ****         | ADC_1_CFG0_DSI_TRIGGER_EN_INIT \
 496:Generated_Source\PSoC6/ADC_1.h ****         | ADC_1_CFG0_UAB_SCAN_MODE_INIT \
 497:Generated_Source\PSoC6/ADC_1.h ****         | SAR_SAMPLE_CTRL_VALID_IGNORE_Msk \
 498:Generated_Source\PSoC6/ADC_1.h ****         | ADC_1_CFG0_TRIGGER_OUT_INIT \
 499:Generated_Source\PSoC6/ADC_1.h ****         | SAR_SAMPLE_CTRL_EOS_DSI_OUT_EN_Msk \
 500:Generated_Source\PSoC6/ADC_1.h **** )
 501:Generated_Source\PSoC6/ADC_1.h **** 
 502:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_RANGE_THRES_INIT \
 503:Generated_Source\PSoC6/ADC_1.h ****         (ADC_1_CFG0_LOW_LIMIT \
 504:Generated_Source\PSoC6/ADC_1.h ****         | (uint32)((uint32)ADC_1_CFG0_HIGH_LIMIT \
 505:Generated_Source\PSoC6/ADC_1.h ****         << SAR_RANGE_THRES_RANGE_HIGH_Pos))
 506:Generated_Source\PSoC6/ADC_1.h **** 
 507:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_RANGE_COND_INIT   (cy_en_sar_range_detect_condition_t)ADC_1_CFG0_RANGE_COND
 508:Generated_Source\PSoC6/ADC_1.h **** 
 509:Generated_Source\PSoC6/ADC_1.h **** /* Misc Config
 510:Generated_Source\PSoC6/ADC_1.h ****     [0] - Freerunning: Set if the sample mode is freerunning
 511:Generated_Source\PSoC6/ADC_1.h **** */
 512:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_MISC_CONFIG_INIT \
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 101


 513:Generated_Source\PSoC6/ADC_1.h ****         (ADC_1_CFG0_FREERUNNING)
 514:Generated_Source\PSoC6/ADC_1.h **** 
 515:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 516:Generated_Source\PSoC6/ADC_1.h **** /* End configuration 0 calculated defines                                     */
 517:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 518:Generated_Source\PSoC6/ADC_1.h **** 
 519:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 520:Generated_Source\PSoC6/ADC_1.h **** /* Begin configuration 1 calculated defines                                   */
 521:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 522:Generated_Source\PSoC6/ADC_1.h **** #if(ADC_1_TOTAL_CONFIGS > 1)
 523:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_SAMPLE_TIME01_INIT \
 524:Generated_Source\PSoC6/ADC_1.h ****             ((ADC_1_CFG1_APERTURE_TIME0 \
 525:Generated_Source\PSoC6/ADC_1.h ****             << SAR_SAMPLE_TIME01_SAMPLE_TIME0_Pos) \
 526:Generated_Source\PSoC6/ADC_1.h ****             | (ADC_1_CFG1_APERTURE_TIME1 \
 527:Generated_Source\PSoC6/ADC_1.h ****             << SAR_SAMPLE_TIME01_SAMPLE_TIME1_Pos))
 528:Generated_Source\PSoC6/ADC_1.h **** 
 529:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_SAMPLE_TIME23_INIT \
 530:Generated_Source\PSoC6/ADC_1.h ****             ((ADC_1_CFG1_APERTURE_TIME2 \
 531:Generated_Source\PSoC6/ADC_1.h ****             << SAR_SAMPLE_TIME23_SAMPLE_TIME2_Pos) \
 532:Generated_Source\PSoC6/ADC_1.h ****             | (ADC_1_CFG1_APERTURE_TIME3 \
 533:Generated_Source\PSoC6/ADC_1.h ****             << SAR_SAMPLE_TIME23_SAMPLE_TIME3_Pos))
 534:Generated_Source\PSoC6/ADC_1.h **** 
 535:Generated_Source\PSoC6/ADC_1.h ****     /* Enable soc pin if used */
 536:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_DSI_TRIGGER_EN_INIT \
 537:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG1_USE_SOC \
 538:Generated_Source\PSoC6/ADC_1.h ****             << SAR_SAMPLE_CTRL_DSI_TRIGGER_EN_Pos)
 539:Generated_Source\PSoC6/ADC_1.h **** 
 540:Generated_Source\PSoC6/ADC_1.h ****     /* Set soc operation to edge or level based on sample mode */
 541:Generated_Source\PSoC6/ADC_1.h ****     #if(ADC_1_CFG1_FREERUNNING == ADC_1_FREERUNNING)
 542:Generated_Source\PSoC6/ADC_1.h ****         #define ADC_1_CFG1_DSI_TRIGGER_LEVEL_INIT    (SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_Msk)
 543:Generated_Source\PSoC6/ADC_1.h ****     #else /* Edge trigger */
 544:Generated_Source\PSoC6/ADC_1.h ****         #define ADC_1_CFG1_DSI_TRIGGER_LEVEL_INIT    (0u)
 545:Generated_Source\PSoC6/ADC_1.h ****     #endif /* End ADC_1_CFG1_FREERUNNING == ADC_1_FREERUNNING */
 546:Generated_Source\PSoC6/ADC_1.h **** 
 547:Generated_Source\PSoC6/ADC_1.h ****     /* Set SE_NEG_INPUT */
 548:Generated_Source\PSoC6/ADC_1.h ****     #if(ADC_1_CFG1_VNEG_INPUT_SEL == ADC_1_NEG_SEL_VSSA_KELVIN)
 549:Generated_Source\PSoC6/ADC_1.h ****         #define ADC_1_CFG1_SE_NEG_INPUT_INIT \
 550:Generated_Source\PSoC6/ADC_1.h ****             ((uint32)(ADC_1_NEG_SEL_VSSA_KELVIN \
 551:Generated_Source\PSoC6/ADC_1.h ****             << SAR_CTRL_NEG_SEL_Pos ))
 552:Generated_Source\PSoC6/ADC_1.h ****     #elif(ADC_1_CFG1_VNEG_INPUT_SEL == ADC_1_NEG_SEL_VREF)
 553:Generated_Source\PSoC6/ADC_1.h ****         #define ADC_1_CFG1_SE_NEG_INPUT_INIT     (ADC_1_NEG_SEL_VREF \
 554:Generated_Source\PSoC6/ADC_1.h ****                                                             << SAR_CTRL_NEG_SEL_Pos )
 555:Generated_Source\PSoC6/ADC_1.h ****     #elif (ADC_1_CFG1_SINGLE_PRESENT != 0u)
 556:Generated_Source\PSoC6/ADC_1.h ****         #define ADC_1_CFG1_SE_NEG_INPUT_INIT         ADC_1_CFG1_NEG_OTHER
 557:Generated_Source\PSoC6/ADC_1.h ****     #else
 558:Generated_Source\PSoC6/ADC_1.h ****         #define ADC_1_CFG1_SE_NEG_INPUT_INIT         0u
 559:Generated_Source\PSoC6/ADC_1.h ****     #endif /* ADC_1_CFG1_VNEG_INPUT_SEL == ADC_1_NEG_SEL_VSSA_KELVIN */
 560:Generated_Source\PSoC6/ADC_1.h **** 
 561:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_NEG_OTHER                 (uint16)((uint16)ADC_1_SARMUX__VNEG1 << SAR_CTRL_N
 562:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_SWITCH_CONF_INIT          0u
 563:Generated_Source\PSoC6/ADC_1.h **** 
 564:Generated_Source\PSoC6/ADC_1.h ****     /* If the SAR is configured for multiple channels, always set SAR_HW_CTRL_NEGVREF to 1 */
 565:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_HW_CTRL_NEGVREF_INIT      SAR_CTRL_SAR_HW_CTRL_NEGVREF_Msk
 566:Generated_Source\PSoC6/ADC_1.h **** 
 567:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_POWER_INIT  (ADC_1_PWR_CTRL_VREF_NORMAL_PWR)
 568:Generated_Source\PSoC6/ADC_1.h **** 
 569:Generated_Source\PSoC6/ADC_1.h ****     /* SAMPLE_CTRL initial values */
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 102


 570:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_SE_RESULT_FORMAT_INIT \
 571:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG1_SINGLE_ENDED_FORMAT \
 572:Generated_Source\PSoC6/ADC_1.h ****             << SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_Pos)
 573:Generated_Source\PSoC6/ADC_1.h **** 
 574:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_DIFF_RESULT_FORMAT_INIT \
 575:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG1_DIFFERENTIAL_FORMAT \
 576:Generated_Source\PSoC6/ADC_1.h ****             << SAR_SAMPLE_CTRL_DIFFERENTIAL_SIGNED_Pos)
 577:Generated_Source\PSoC6/ADC_1.h **** 
 578:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_AVG_SAMPLES_NUM_INIT \
 579:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG1_SAMPLES_AVERAGED \
 580:Generated_Source\PSoC6/ADC_1.h ****             << SAR_SAMPLE_CTRL_AVG_CNT_Pos)
 581:Generated_Source\PSoC6/ADC_1.h **** 
 582:Generated_Source\PSoC6/ADC_1.h ****     /* Combination of Average Mode and Average Shift */
 583:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_AVG_MODE_INIT \
 584:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG1_AVGERAGING_MODE \
 585:Generated_Source\PSoC6/ADC_1.h ****             << SAR_SAMPLE_CTRL_AVG_SHIFT_Pos)
 586:Generated_Source\PSoC6/ADC_1.h **** 
 587:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_TRIGGER_OUT_INIT      (0u)
 588:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_UAB_SCAN_MODE_INIT    (0u)
 589:Generated_Source\PSoC6/ADC_1.h **** 
 590:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_VREF_POWER_INIT  \
 591:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG1_VREF_PWR \
 592:Generated_Source\PSoC6/ADC_1.h ****             << SAR_CTRL_PWR_CTRL_VREF_Pos)
 593:Generated_Source\PSoC6/ADC_1.h **** 
 594:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_COMP_PWR_INIT  \
 595:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG1_COMP_PWR \
 596:Generated_Source\PSoC6/ADC_1.h ****             << SAR_CTRL_COMP_PWR_Pos)
 597:Generated_Source\PSoC6/ADC_1.h **** 
 598:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_COMP_DLY_INIT  \
 599:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG1_COMP_DLY \
 600:Generated_Source\PSoC6/ADC_1.h ****             << SAR_CTRL_COMP_DLY_Pos)
 601:Generated_Source\PSoC6/ADC_1.h **** 
 602:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_CTRL_INIT  \
 603:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG1_VREF_POWER_INIT \
 604:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG1_VREF_SEL_MASK \
 605:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG1_SE_NEG_INPUT_INIT \
 606:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG1_HW_CTRL_NEGVREF_INIT \
 607:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG1_COMP_DLY_INIT \
 608:Generated_Source\PSoC6/ADC_1.h ****             | SAR_CTRL_REFBUF_EN_Msk \
 609:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG1_COMP_PWR_INIT \
 610:Generated_Source\PSoC6/ADC_1.h ****             | SAR_CTRL_DSI_SYNC_CONFIG_Msk  \
 611:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG1_SWITCH_CONF_INIT )
 612:Generated_Source\PSoC6/ADC_1.h **** 
 613:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_SAMPLE_CTRL_INIT \
 614:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG1_SE_RESULT_FORMAT_INIT \
 615:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG1_DIFF_RESULT_FORMAT_INIT \
 616:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG1_AVG_SAMPLES_NUM_INIT \
 617:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG1_AVG_MODE_INIT \
 618:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG1_DSI_TRIGGER_LEVEL_INIT \
 619:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG1_DSI_TRIGGER_EN_INIT \
 620:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG1_UAB_SCAN_MODE_INIT \
 621:Generated_Source\PSoC6/ADC_1.h ****             | SAR_SAMPLE_CTRL_VALID_IGNORE_Msk \
 622:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG1_TRIGGER_OUT_INIT \
 623:Generated_Source\PSoC6/ADC_1.h ****             | SAR_SAMPLE_CTRL_EOS_DSI_OUT_EN_Msk \
 624:Generated_Source\PSoC6/ADC_1.h ****     )
 625:Generated_Source\PSoC6/ADC_1.h **** 
 626:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_RANGE_THRES_INIT \
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 103


 627:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG1_LOW_LIMIT \
 628:Generated_Source\PSoC6/ADC_1.h ****             | (uint32)((uint32)ADC_1_CFG1_HIGH_LIMIT \
 629:Generated_Source\PSoC6/ADC_1.h ****             << SAR_RANGE_THRES_RANGE_HIGH_Pos))
 630:Generated_Source\PSoC6/ADC_1.h **** 
 631:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_RANGE_COND_INIT   (cy_en_sar_range_detect_condition_t)ADC_1_CFG1_RANGE_COND
 632:Generated_Source\PSoC6/ADC_1.h **** 
 633:Generated_Source\PSoC6/ADC_1.h ****     /* Misc Config
 634:Generated_Source\PSoC6/ADC_1.h ****         [0] - Freerunning: Set if the sample mode is freerunning
 635:Generated_Source\PSoC6/ADC_1.h ****     */
 636:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_MISC_CONFIG_INIT \
 637:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG1_FREERUNNING)
 638:Generated_Source\PSoC6/ADC_1.h **** #endif /* ADC_1_TOTAL_CONFIGS > 1 */
 639:Generated_Source\PSoC6/ADC_1.h **** 
 640:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 641:Generated_Source\PSoC6/ADC_1.h **** /* End configuration 1 calculated defines                                     */
 642:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 643:Generated_Source\PSoC6/ADC_1.h **** 
 644:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 645:Generated_Source\PSoC6/ADC_1.h **** /* Begin configuration 2 calculated defines                                   */
 646:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 647:Generated_Source\PSoC6/ADC_1.h **** #if(ADC_1_TOTAL_CONFIGS > 2)
 648:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_SAMPLE_TIME01_INIT \
 649:Generated_Source\PSoC6/ADC_1.h ****             ((ADC_1_CFG2_APERTURE_TIME0 \
 650:Generated_Source\PSoC6/ADC_1.h ****             << SAR_SAMPLE_TIME01_SAMPLE_TIME0_Pos) \
 651:Generated_Source\PSoC6/ADC_1.h ****             | (ADC_1_CFG2_APERTURE_TIME1 \
 652:Generated_Source\PSoC6/ADC_1.h ****             << SAR_SAMPLE_TIME01_SAMPLE_TIME1_Pos))
 653:Generated_Source\PSoC6/ADC_1.h **** 
 654:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_SAMPLE_TIME23_INIT \
 655:Generated_Source\PSoC6/ADC_1.h ****             ((ADC_1_CFG2_APERTURE_TIME2 \
 656:Generated_Source\PSoC6/ADC_1.h ****             << SAR_SAMPLE_TIME23_SAMPLE_TIME2_Pos) \
 657:Generated_Source\PSoC6/ADC_1.h ****             | (ADC_1_CFG2_APERTURE_TIME3 \
 658:Generated_Source\PSoC6/ADC_1.h ****             << SAR_SAMPLE_TIME23_SAMPLE_TIME3_Pos))
 659:Generated_Source\PSoC6/ADC_1.h **** 
 660:Generated_Source\PSoC6/ADC_1.h ****     /* Enable soc pin if used */
 661:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_DSI_TRIGGER_EN_INIT \
 662:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG2_USE_SOC \
 663:Generated_Source\PSoC6/ADC_1.h ****             << SAR_SAMPLE_CTRL_DSI_TRIGGER_EN_Pos)
 664:Generated_Source\PSoC6/ADC_1.h **** 
 665:Generated_Source\PSoC6/ADC_1.h ****     /* Set soc operation to edge or level based on sample mode */
 666:Generated_Source\PSoC6/ADC_1.h ****     #if(ADC_1_CFG2_FREERUNNING == ADC_1_FREERUNNING)
 667:Generated_Source\PSoC6/ADC_1.h ****         #define ADC_1_CFG2_DSI_TRIGGER_LEVEL_INIT    (SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_Msk)
 668:Generated_Source\PSoC6/ADC_1.h ****     #else /* Edge trigger */
 669:Generated_Source\PSoC6/ADC_1.h ****         #define ADC_1_CFG2_DSI_TRIGGER_LEVEL_INIT    (0u)
 670:Generated_Source\PSoC6/ADC_1.h ****     #endif /* End ADC_1_CFG2_FREERUNNING == ADC_1_FREERUNNING */
 671:Generated_Source\PSoC6/ADC_1.h **** 
 672:Generated_Source\PSoC6/ADC_1.h ****     /* Set SE_NEG_INPUT */
 673:Generated_Source\PSoC6/ADC_1.h ****     #if(ADC_1_CFG2_VNEG_INPUT_SEL == ADC_1_NEG_SEL_VSSA_KELVIN)
 674:Generated_Source\PSoC6/ADC_1.h ****         #define ADC_1_CFG2_SE_NEG_INPUT_INIT \
 675:Generated_Source\PSoC6/ADC_1.h ****             ((uint32)(ADC_1_NEG_SEL_VSSA_KELVIN \
 676:Generated_Source\PSoC6/ADC_1.h ****             << SAR_CTRL_NEG_SEL_Pos ))
 677:Generated_Source\PSoC6/ADC_1.h ****     #elif(ADC_1_CFG2_VNEG_INPUT_SEL == ADC_1_NEG_SEL_VREF)
 678:Generated_Source\PSoC6/ADC_1.h ****         #define ADC_1_CFG2_SE_NEG_INPUT_INIT     (ADC_1_NEG_SEL_VREF \
 679:Generated_Source\PSoC6/ADC_1.h ****                                                                 << SAR_CTRL_NEG_SEL_Pos )
 680:Generated_Source\PSoC6/ADC_1.h ****     #elif (ADC_1_CFG2_SINGLE_PRESENT != 0u)
 681:Generated_Source\PSoC6/ADC_1.h ****         #define ADC_1_CFG2_SE_NEG_INPUT_INIT         ADC_1_CFG2_NEG_OTHER
 682:Generated_Source\PSoC6/ADC_1.h ****     #else
 683:Generated_Source\PSoC6/ADC_1.h ****         #define ADC_1_CFG2_SE_NEG_INPUT_INIT         0u
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 104


 684:Generated_Source\PSoC6/ADC_1.h ****     #endif /* ADC_1_CFG2_VNEG_INPUT_SEL == ADC_1_NEG_SEL_VSSA_KELVIN */
 685:Generated_Source\PSoC6/ADC_1.h **** 
 686:Generated_Source\PSoC6/ADC_1.h ****    #define ADC_1_CFG2_NEG_OTHER                 (uint16)((uint16)ADC_1_SARMUX__VNEG2 << SAR_CTRL_NE
 687:Generated_Source\PSoC6/ADC_1.h **** 
 688:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_SWITCH_CONF_INIT          0u
 689:Generated_Source\PSoC6/ADC_1.h **** 
 690:Generated_Source\PSoC6/ADC_1.h ****     /* If the SAR is configured for multiple channels, always set SAR_HW_CTRL_NEGVREF to 1 */
 691:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_HW_CTRL_NEGVREF_INIT      SAR_CTRL_SAR_HW_CTRL_NEGVREF_Msk
 692:Generated_Source\PSoC6/ADC_1.h **** 
 693:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_POWER_INIT  (ADC_1_PWR_CTRL_VREF_NORMAL_PWR)
 694:Generated_Source\PSoC6/ADC_1.h **** 
 695:Generated_Source\PSoC6/ADC_1.h ****     /* SAMPLE_CTRL initial values */
 696:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_SE_RESULT_FORMAT_INIT \
 697:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG2_SINGLE_ENDED_FORMAT \
 698:Generated_Source\PSoC6/ADC_1.h ****             << SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_Pos)
 699:Generated_Source\PSoC6/ADC_1.h **** 
 700:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_DIFF_RESULT_FORMAT_INIT \
 701:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG2_DIFFERENTIAL_FORMAT \
 702:Generated_Source\PSoC6/ADC_1.h ****             << SAR_SAMPLE_CTRL_DIFFERENTIAL_SIGNED_Pos)
 703:Generated_Source\PSoC6/ADC_1.h **** 
 704:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_AVG_SAMPLES_NUM_INIT \
 705:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG2_SAMPLES_AVERAGED \
 706:Generated_Source\PSoC6/ADC_1.h ****             << SAR_SAMPLE_CTRL_AVG_CNT_Pos)
 707:Generated_Source\PSoC6/ADC_1.h **** 
 708:Generated_Source\PSoC6/ADC_1.h ****     /* Combination of Average Mode and Average Shift */
 709:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_AVG_MODE_INIT \
 710:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG2_AVGERAGING_MODE \
 711:Generated_Source\PSoC6/ADC_1.h ****             << SAR_SAMPLE_CTRL_AVG_SHIFT_Pos)
 712:Generated_Source\PSoC6/ADC_1.h **** 
 713:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_TRIGGER_OUT_INIT      (0u)
 714:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_UAB_SCAN_MODE_INIT    (0u)
 715:Generated_Source\PSoC6/ADC_1.h **** 
 716:Generated_Source\PSoC6/ADC_1.h **** 
 717:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_VREF_POWER_INIT  \
 718:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG2_VREF_PWR \
 719:Generated_Source\PSoC6/ADC_1.h ****             << SAR_CTRL_PWR_CTRL_VREF_Pos)
 720:Generated_Source\PSoC6/ADC_1.h **** 
 721:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_COMP_PWR_INIT  \
 722:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG2_COMP_PWR \
 723:Generated_Source\PSoC6/ADC_1.h ****             << SAR_CTRL_COMP_PWR_Pos)
 724:Generated_Source\PSoC6/ADC_1.h **** 
 725:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_COMP_DLY_INIT  \
 726:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG2_COMP_DLY \
 727:Generated_Source\PSoC6/ADC_1.h ****             << SAR_CTRL_COMP_DLY_Pos)
 728:Generated_Source\PSoC6/ADC_1.h **** 
 729:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_CTRL_INIT  \
 730:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG2_VREF_POWER_INIT \
 731:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG2_VREF_SEL_MASK \
 732:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG2_SE_NEG_INPUT_INIT \
 733:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG2_HW_CTRL_NEGVREF_INIT \
 734:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG2_COMP_DLY_INIT \
 735:Generated_Source\PSoC6/ADC_1.h ****             | SAR_CTRL_REFBUF_EN_Msk \
 736:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG2_COMP_PWR_INIT \
 737:Generated_Source\PSoC6/ADC_1.h ****             | SAR_CTRL_DSI_SYNC_CONFIG_Msk  \
 738:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG2_SWITCH_CONF_INIT )
 739:Generated_Source\PSoC6/ADC_1.h **** 
 740:Generated_Source\PSoC6/ADC_1.h **** 
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 105


 741:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_SAMPLE_CTRL_INIT \
 742:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG2_SE_RESULT_FORMAT_INIT \
 743:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG2_DIFF_RESULT_FORMAT_INIT \
 744:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG2_AVG_SAMPLES_NUM_INIT \
 745:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG2_AVG_MODE_INIT \
 746:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG2_DSI_TRIGGER_LEVEL_INIT \
 747:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG2_DSI_TRIGGER_EN_INIT \
 748:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG2_UAB_SCAN_MODE_INIT \
 749:Generated_Source\PSoC6/ADC_1.h ****             | SAR_SAMPLE_CTRL_VALID_IGNORE_Msk \
 750:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG2_TRIGGER_OUT_INIT \
 751:Generated_Source\PSoC6/ADC_1.h ****             | SAR_SAMPLE_CTRL_EOS_DSI_OUT_EN_Msk \
 752:Generated_Source\PSoC6/ADC_1.h ****     )
 753:Generated_Source\PSoC6/ADC_1.h **** 
 754:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_RANGE_THRES_INIT \
 755:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG2_LOW_LIMIT \
 756:Generated_Source\PSoC6/ADC_1.h ****             | (uint32)((uint32)ADC_1_CFG2_HIGH_LIMIT \
 757:Generated_Source\PSoC6/ADC_1.h ****             << SAR_RANGE_THRES_RANGE_HIGH_Pos))
 758:Generated_Source\PSoC6/ADC_1.h **** 
 759:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_RANGE_COND_INIT   (cy_en_sar_range_detect_condition_t)ADC_1_CFG2_RANGE_COND
 760:Generated_Source\PSoC6/ADC_1.h **** 
 761:Generated_Source\PSoC6/ADC_1.h ****     /* Misc Config
 762:Generated_Source\PSoC6/ADC_1.h ****         [0] - Freerunning: Set if the sample mode is freerunning
 763:Generated_Source\PSoC6/ADC_1.h ****     */
 764:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_MISC_CONFIG_INIT \
 765:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG2_FREERUNNING)
 766:Generated_Source\PSoC6/ADC_1.h **** #endif /* ADC_1_TOTAL_CONFIGS > 2 */
 767:Generated_Source\PSoC6/ADC_1.h **** 
 768:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 769:Generated_Source\PSoC6/ADC_1.h **** /* End configuration 2 calculated defines                                     */
 770:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 771:Generated_Source\PSoC6/ADC_1.h **** 
 772:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 773:Generated_Source\PSoC6/ADC_1.h **** /* Begin configuration 3 calculated defines                                   */
 774:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 775:Generated_Source\PSoC6/ADC_1.h **** #if(ADC_1_TOTAL_CONFIGS > 3)
 776:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_SAMPLE_TIME01_INIT \
 777:Generated_Source\PSoC6/ADC_1.h ****             ((ADC_1_CFG3_APERTURE_TIME0 \
 778:Generated_Source\PSoC6/ADC_1.h ****             << SAR_SAMPLE_TIME01_SAMPLE_TIME0_Pos) \
 779:Generated_Source\PSoC6/ADC_1.h ****             | (ADC_1_CFG3_APERTURE_TIME1 \
 780:Generated_Source\PSoC6/ADC_1.h ****             << SAR_SAMPLE_TIME01_SAMPLE_TIME1_Pos))
 781:Generated_Source\PSoC6/ADC_1.h **** 
 782:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_SAMPLE_TIME23_INIT \
 783:Generated_Source\PSoC6/ADC_1.h ****             ((ADC_1_CFG3_APERTURE_TIME2 \
 784:Generated_Source\PSoC6/ADC_1.h ****             << SAR_SAMPLE_TIME23_SAMPLE_TIME2_Pos) \
 785:Generated_Source\PSoC6/ADC_1.h ****             | (ADC_1_CFG3_APERTURE_TIME3 \
 786:Generated_Source\PSoC6/ADC_1.h ****             << SAR_SAMPLE_TIME23_SAMPLE_TIME3_Pos))
 787:Generated_Source\PSoC6/ADC_1.h **** 
 788:Generated_Source\PSoC6/ADC_1.h ****     /* Enable soc pin if used */
 789:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_DSI_TRIGGER_EN_INIT \
 790:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG3_USE_SOC \
 791:Generated_Source\PSoC6/ADC_1.h ****              << SAR_SAMPLE_CTRL_DSI_TRIGGER_EN_Pos)
 792:Generated_Source\PSoC6/ADC_1.h **** 
 793:Generated_Source\PSoC6/ADC_1.h ****     /* Set soc operation to edge or level based on sample mode */
 794:Generated_Source\PSoC6/ADC_1.h ****     #if(ADC_1_CFG3_FREERUNNING == ADC_1_FREERUNNING)
 795:Generated_Source\PSoC6/ADC_1.h ****         #define ADC_1_CFG3_DSI_TRIGGER_LEVEL_INIT    (SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_Msk)
 796:Generated_Source\PSoC6/ADC_1.h ****     #else /* Edge trigger */
 797:Generated_Source\PSoC6/ADC_1.h ****         #define ADC_1_CFG3_DSI_TRIGGER_LEVEL_INIT    (0u)
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 106


 798:Generated_Source\PSoC6/ADC_1.h ****     #endif /* End ADC_1_CFG3_FREERUNNING == ADC_1_FREERUNNING */
 799:Generated_Source\PSoC6/ADC_1.h **** 
 800:Generated_Source\PSoC6/ADC_1.h ****     /* Set SE_NEG_INPUT  */
 801:Generated_Source\PSoC6/ADC_1.h ****     #if(ADC_1_CFG3_VNEG_INPUT_SEL == ADC_1_NEG_SEL_VSSA_KELVIN)
 802:Generated_Source\PSoC6/ADC_1.h ****         #define ADC_1_CFG3_SE_NEG_INPUT_INIT \
 803:Generated_Source\PSoC6/ADC_1.h ****             ((uint32)(ADC_1_NEG_SEL_VSSA_KELVIN \
 804:Generated_Source\PSoC6/ADC_1.h ****             << SAR_CTRL_NEG_SEL_Pos ))
 805:Generated_Source\PSoC6/ADC_1.h ****     #elif(ADC_1_CFG3_VNEG_INPUT_SEL == ADC_1_NEG_SEL_VREF)
 806:Generated_Source\PSoC6/ADC_1.h ****         #define ADC_1_CFG3_SE_NEG_INPUT_INIT     (ADC_1_NEG_SEL_VREF \
 807:Generated_Source\PSoC6/ADC_1.h ****                                                                 << SAR_CTRL_NEG_SEL_Pos )
 808:Generated_Source\PSoC6/ADC_1.h ****     #elif (ADC_1_CFG3_SINGLE_PRESENT != 0u)
 809:Generated_Source\PSoC6/ADC_1.h ****         #define ADC_1_CFG3_SE_NEG_INPUT_INIT         ADC_1_CFG3_NEG_OTHER
 810:Generated_Source\PSoC6/ADC_1.h ****     #else
 811:Generated_Source\PSoC6/ADC_1.h ****         #define ADC_1_CFG3_SE_NEG_INPUT_INIT         0u
 812:Generated_Source\PSoC6/ADC_1.h ****     #endif /* ADC_1_CFG3_VNEG_INPUT_SEL == ADC_1_NEG_SEL_VSSA_KELVIN */
 813:Generated_Source\PSoC6/ADC_1.h **** 
 814:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_NEG_OTHER                 (uint16)((uint16)ADC_1_SARMUX__VNEG3 << SAR_CTRL_N
 815:Generated_Source\PSoC6/ADC_1.h **** 
 816:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_SWITCH_CONF_INIT          0u
 817:Generated_Source\PSoC6/ADC_1.h **** 
 818:Generated_Source\PSoC6/ADC_1.h ****     /* If the SAR is configured for multiple channels, always set SAR_HW_CTRL_NEGVREF to 1 */
 819:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_HW_CTRL_NEGVREF_INIT      SAR_CTRL_SAR_HW_CTRL_NEGVREF_Msk
 820:Generated_Source\PSoC6/ADC_1.h **** 
 821:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_POWER_INIT  (ADC_1_PWR_CTRL_VREF_NORMAL_PWR)
 822:Generated_Source\PSoC6/ADC_1.h **** 
 823:Generated_Source\PSoC6/ADC_1.h ****     /* SAMPLE_CTRL initial values */
 824:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_SE_RESULT_FORMAT_INIT \
 825:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG3_SINGLE_ENDED_FORMAT \
 826:Generated_Source\PSoC6/ADC_1.h ****             << SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_Pos)
 827:Generated_Source\PSoC6/ADC_1.h **** 
 828:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_DIFF_RESULT_FORMAT_INIT \
 829:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG3_DIFFERENTIAL_FORMAT \
 830:Generated_Source\PSoC6/ADC_1.h ****             << SAR_SAMPLE_CTRL_DIFFERENTIAL_SIGNED_Pos)
 831:Generated_Source\PSoC6/ADC_1.h **** 
 832:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_AVG_SAMPLES_NUM_INIT \
 833:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG3_SAMPLES_AVERAGED \
 834:Generated_Source\PSoC6/ADC_1.h ****             << SAR_SAMPLE_CTRL_AVG_CNT_Pos)
 835:Generated_Source\PSoC6/ADC_1.h **** 
 836:Generated_Source\PSoC6/ADC_1.h ****     /* Combination of Average Mode and Average Shift */
 837:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_AVG_MODE_INIT \
 838:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG3_AVGERAGING_MODE \
 839:Generated_Source\PSoC6/ADC_1.h ****             << SAR_SAMPLE_CTRL_AVG_SHIFT_Pos)
 840:Generated_Source\PSoC6/ADC_1.h **** 
 841:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_TRIGGER_OUT_INIT      (0u)
 842:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_UAB_SCAN_MODE_INIT    (0u)
 843:Generated_Source\PSoC6/ADC_1.h **** 
 844:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_VREF_POWER_INIT  \
 845:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG3_VREF_PWR \
 846:Generated_Source\PSoC6/ADC_1.h ****             << SAR_CTRL_PWR_CTRL_VREF_Pos)
 847:Generated_Source\PSoC6/ADC_1.h **** 
 848:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_COMP_PWR_INIT  \
 849:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG3_COMP_PWR \
 850:Generated_Source\PSoC6/ADC_1.h ****             << SAR_CTRL_COMP_PWR_Pos)
 851:Generated_Source\PSoC6/ADC_1.h **** 
 852:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_COMP_DLY_INIT  \
 853:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG3_COMP_DLY \
 854:Generated_Source\PSoC6/ADC_1.h ****             << SAR_CTRL_COMP_DLY_Pos)
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 107


 855:Generated_Source\PSoC6/ADC_1.h **** 
 856:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_CTRL_INIT  \
 857:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG3_VREF_POWER_INIT \
 858:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG3_VREF_SEL_MASK \
 859:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG3_SE_NEG_INPUT_INIT \
 860:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG3_HW_CTRL_NEGVREF_INIT \
 861:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG3_COMP_DLY_INIT \
 862:Generated_Source\PSoC6/ADC_1.h ****             | SAR_CTRL_REFBUF_EN_Msk \
 863:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG3_COMP_PWR_INIT \
 864:Generated_Source\PSoC6/ADC_1.h ****             | SAR_CTRL_DSI_SYNC_CONFIG_Msk  \
 865:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG3_SWITCH_CONF_INIT )
 866:Generated_Source\PSoC6/ADC_1.h **** 
 867:Generated_Source\PSoC6/ADC_1.h **** 
 868:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_SAMPLE_CTRL_INIT \
 869:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG3_SE_RESULT_FORMAT_INIT \
 870:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG3_DIFF_RESULT_FORMAT_INIT \
 871:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG3_AVG_SAMPLES_NUM_INIT \
 872:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG3_AVG_MODE_INIT \
 873:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG3_DSI_TRIGGER_LEVEL_INIT \
 874:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG3_DSI_TRIGGER_EN_INIT \
 875:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG3_UAB_SCAN_MODE_INIT \
 876:Generated_Source\PSoC6/ADC_1.h ****             | SAR_SAMPLE_CTRL_VALID_IGNORE_Msk \
 877:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG3_TRIGGER_OUT_INIT \
 878:Generated_Source\PSoC6/ADC_1.h ****             | SAR_SAMPLE_CTRL_EOS_DSI_OUT_EN_Msk \
 879:Generated_Source\PSoC6/ADC_1.h ****     )
 880:Generated_Source\PSoC6/ADC_1.h **** 
 881:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_RANGE_THRES_INIT \
 882:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG3_LOW_LIMIT \
 883:Generated_Source\PSoC6/ADC_1.h ****             | (uint32)((uint32)ADC_1_CFG3_HIGH_LIMIT \
 884:Generated_Source\PSoC6/ADC_1.h ****             << SAR_RANGE_THRES_RANGE_HIGH_Pos))
 885:Generated_Source\PSoC6/ADC_1.h **** 
 886:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_RANGE_COND_INIT   (cy_en_sar_range_detect_condition_t)ADC_1_CFG3_RANGE_COND
 887:Generated_Source\PSoC6/ADC_1.h **** 
 888:Generated_Source\PSoC6/ADC_1.h ****     /* Misc Config
 889:Generated_Source\PSoC6/ADC_1.h ****         [0] - Freerunning: Set if the sample mode is freerunning
 890:Generated_Source\PSoC6/ADC_1.h ****     */
 891:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_MISC_CONFIG_INIT \
 892:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG3_FREERUNNING )
 893:Generated_Source\PSoC6/ADC_1.h **** 
 894:Generated_Source\PSoC6/ADC_1.h **** #endif /* ADC_1_TOTAL_CONFIGS > 3 */
 895:Generated_Source\PSoC6/ADC_1.h **** 
 896:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 897:Generated_Source\PSoC6/ADC_1.h **** /* End configuration 3 calculated defines                                     */
 898:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 899:Generated_Source\PSoC6/ADC_1.h **** 
 900:Generated_Source\PSoC6/ADC_1.h **** /******************************************************************************
 901:Generated_Source\PSoC6/ADC_1.h **** * Function Name: ADC_1_Enable
 902:Generated_Source\PSoC6/ADC_1.h **** ****************************************************************************//*
 903:Generated_Source\PSoC6/ADC_1.h **** *
 904:Generated_Source\PSoC6/ADC_1.h **** * \brief Enables the component.
 905:Generated_Source\PSoC6/ADC_1.h **** *
 906:Generated_Source\PSoC6/ADC_1.h **** * \param None
 907:Generated_Source\PSoC6/ADC_1.h **** *
 908:Generated_Source\PSoC6/ADC_1.h **** * \return None
 909:Generated_Source\PSoC6/ADC_1.h **** *
 910:Generated_Source\PSoC6/ADC_1.h **** * \sideeffect
 911:Generated_Source\PSoC6/ADC_1.h **** *  None
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 108


 912:Generated_Source\PSoC6/ADC_1.h **** *
 913:Generated_Source\PSoC6/ADC_1.h **** *******************************************************************************/
 914:Generated_Source\PSoC6/ADC_1.h **** __STATIC_INLINE void ADC_1_Enable(void)
 915:Generated_Source\PSoC6/ADC_1.h **** {
 794              		.loc 4 915 0
 795              		.cfi_startproc
 796              		@ args = 0, pretend = 0, frame = 0
 797              		@ frame_needed = 1, uses_anonymous_args = 0
 798 0000 80B5     		push	{r7, lr}
 799              		.cfi_def_cfa_offset 8
 800              		.cfi_offset 7, -8
 801              		.cfi_offset 14, -4
 802 0002 00AF     		add	r7, sp, #0
 803              		.cfi_def_cfa_register 7
 916:Generated_Source\PSoC6/ADC_1.h ****     Cy_SAR_Enable(ADC_1_SAR__HW);
 804              		.loc 4 916 0
 805 0004 034B     		ldr	r3, .L42
 806 0006 1800     		movs	r0, r3
 807 0008 FFF7FEFF 		bl	Cy_SAR_Enable
 917:Generated_Source\PSoC6/ADC_1.h **** }
 808              		.loc 4 917 0
 809 000c C046     		nop
 810 000e BD46     		mov	sp, r7
 811              		@ sp needed
 812 0010 80BD     		pop	{r7, pc}
 813              	.L43:
 814 0012 C046     		.align	2
 815              	.L42:
 816 0014 00001D41 		.word	1092419584
 817              		.cfi_endproc
 818              	.LFE168:
 819              		.size	ADC_1_Enable, .-ADC_1_Enable
 820              		.section	.text.ADC_1_Stop,"ax",%progbits
 821              		.align	2
 822              		.code	16
 823              		.thumb_func
 824              		.type	ADC_1_Stop, %function
 825              	ADC_1_Stop:
 826              	.LFB169:
 918:Generated_Source\PSoC6/ADC_1.h **** 
 919:Generated_Source\PSoC6/ADC_1.h **** /*******************************************************************************
 920:Generated_Source\PSoC6/ADC_1.h **** * Function Name: ADC_1_Stop
 921:Generated_Source\PSoC6/ADC_1.h **** ****************************************************************************//**
 922:Generated_Source\PSoC6/ADC_1.h **** *
 923:Generated_Source\PSoC6/ADC_1.h **** * \brief This function stops ADC conversions and puts the ADC into its lowest
 924:Generated_Source\PSoC6/ADC_1.h **** * power mode.
 925:Generated_Source\PSoC6/ADC_1.h **** *
 926:Generated_Source\PSoC6/ADC_1.h **** * \param None
 927:Generated_Source\PSoC6/ADC_1.h **** *
 928:Generated_Source\PSoC6/ADC_1.h **** * \return None
 929:Generated_Source\PSoC6/ADC_1.h **** *
 930:Generated_Source\PSoC6/ADC_1.h **** * \sideeffect
 931:Generated_Source\PSoC6/ADC_1.h **** * Do not use the ADC_1_Stop() API to halt conversions. Instead use the
 932:Generated_Source\PSoC6/ADC_1.h **** * ADC_1_StopConvert() API. If you use the ADC_1_Stop() API
 933:Generated_Source\PSoC6/ADC_1.h **** * to halt conversions then later use the ADC_1_Start() and
 934:Generated_Source\PSoC6/ADC_1.h **** * ADC_1_StartConvert() APIs to resume conversions, the first channel
 935:Generated_Source\PSoC6/ADC_1.h **** * of the scan may be corrupt. The ADC_1_StopConvert() API will enable
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 109


 936:Generated_Source\PSoC6/ADC_1.h **** * the ADC_1 to complete the current scan of channels. After the
 937:Generated_Source\PSoC6/ADC_1.h **** * channel scan is complete, the ADC_1 will stop all conversions, which
 938:Generated_Source\PSoC6/ADC_1.h **** * can be detected by the use of an ISR or the ADC_1_IsEndConversion()
 939:Generated_Source\PSoC6/ADC_1.h **** * function.
 940:Generated_Source\PSoC6/ADC_1.h **** *
 941:Generated_Source\PSoC6/ADC_1.h **** *******************************************************************************/
 942:Generated_Source\PSoC6/ADC_1.h **** __STATIC_INLINE void ADC_1_Stop(void)
 943:Generated_Source\PSoC6/ADC_1.h **** {
 827              		.loc 4 943 0
 828              		.cfi_startproc
 829              		@ args = 0, pretend = 0, frame = 0
 830              		@ frame_needed = 1, uses_anonymous_args = 0
 831 0000 80B5     		push	{r7, lr}
 832              		.cfi_def_cfa_offset 8
 833              		.cfi_offset 7, -8
 834              		.cfi_offset 14, -4
 835 0002 00AF     		add	r7, sp, #0
 836              		.cfi_def_cfa_register 7
 944:Generated_Source\PSoC6/ADC_1.h ****     Cy_SAR_Disable(ADC_1_SAR__HW);
 837              		.loc 4 944 0
 838 0004 034B     		ldr	r3, .L45
 839 0006 1800     		movs	r0, r3
 840 0008 FFF7FEFF 		bl	Cy_SAR_Disable
 945:Generated_Source\PSoC6/ADC_1.h **** }
 841              		.loc 4 945 0
 842 000c C046     		nop
 843 000e BD46     		mov	sp, r7
 844              		@ sp needed
 845 0010 80BD     		pop	{r7, pc}
 846              	.L46:
 847 0012 C046     		.align	2
 848              	.L45:
 849 0014 00001D41 		.word	1092419584
 850              		.cfi_endproc
 851              	.LFE169:
 852              		.size	ADC_1_Stop, .-ADC_1_Stop
 853              		.global	ADC_1_initVar
 854              		.bss
 855              		.type	ADC_1_initVar, %object
 856              		.size	ADC_1_initVar, 1
 857              	ADC_1_initVar:
 858 0000 00       		.space	1
 859              		.global	ADC_1_selected
 860              		.type	ADC_1_selected, %object
 861              		.size	ADC_1_selected, 1
 862              	ADC_1_selected:
 863 0001 00       		.space	1
 864              		.global	ADC_1_currentConfig
 865 0002 0000     		.align	2
 866              		.type	ADC_1_currentConfig, %object
 867              		.size	ADC_1_currentConfig, 4
 868              	ADC_1_currentConfig:
 869 0004 00000000 		.space	4
 870              		.section	.text.ADC_1_Start,"ax",%progbits
 871              		.align	2
 872              		.global	ADC_1_Start
 873              		.code	16
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 110


 874              		.thumb_func
 875              		.type	ADC_1_Start, %function
 876              	ADC_1_Start:
 877              	.LFB186:
 878              		.file 5 "Generated_Source\\PSoC6\\ADC_1.c"
   1:Generated_Source\PSoC6/ADC_1.c **** /***************************************************************************//**
   2:Generated_Source\PSoC6/ADC_1.c **** * \file     ADC_1.c
   3:Generated_Source\PSoC6/ADC_1.c **** * \version  3.10
   4:Generated_Source\PSoC6/ADC_1.c **** *
   5:Generated_Source\PSoC6/ADC_1.c **** * \brief
   6:Generated_Source\PSoC6/ADC_1.c **** * Provides the source code to the API for the ADC_1 Component.
   7:Generated_Source\PSoC6/ADC_1.c **** *
   8:Generated_Source\PSoC6/ADC_1.c **** ********************************************************************************
   9:Generated_Source\PSoC6/ADC_1.c **** * \copyright
  10:Generated_Source\PSoC6/ADC_1.c **** * (c) 2017-2018, Cypress Semiconductor Corporation. All rights reserved.
  11:Generated_Source\PSoC6/ADC_1.c **** * This software, including source code, documentation and related
  12:Generated_Source\PSoC6/ADC_1.c **** * materials ("Software"), is owned by Cypress Semiconductor
  13:Generated_Source\PSoC6/ADC_1.c **** * Corporation ("Cypress") and is protected by and subject to worldwide
  14:Generated_Source\PSoC6/ADC_1.c **** * patent protection (United States and foreign), United States copyright
  15:Generated_Source\PSoC6/ADC_1.c **** * laws and international treaty provisions. Therefore, you may use this
  16:Generated_Source\PSoC6/ADC_1.c **** * Software only as provided in the license agreement accompanying the
  17:Generated_Source\PSoC6/ADC_1.c **** * software package from which you obtained this Software ("EULA").
  18:Generated_Source\PSoC6/ADC_1.c **** * If no EULA applies, Cypress hereby grants you a personal, nonexclusive,
  19:Generated_Source\PSoC6/ADC_1.c **** * non-transferable license to copy, modify, and compile the
  20:Generated_Source\PSoC6/ADC_1.c **** * Software source code solely for use in connection with Cypress's
  21:Generated_Source\PSoC6/ADC_1.c **** * integrated circuit products. Any reproduction, modification, translation,
  22:Generated_Source\PSoC6/ADC_1.c **** * compilation, or representation of this Software except as specified
  23:Generated_Source\PSoC6/ADC_1.c **** * above is prohibited without the express written permission of Cypress.
  24:Generated_Source\PSoC6/ADC_1.c **** * Disclaimer: THIS SOFTWARE IS PROVIDED AS-IS, WITH NO
  25:Generated_Source\PSoC6/ADC_1.c **** * WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING,
  26:Generated_Source\PSoC6/ADC_1.c **** * BUT NOT LIMITED TO, NONINFRINGEMENT, IMPLIED
  27:Generated_Source\PSoC6/ADC_1.c **** * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
  28:Generated_Source\PSoC6/ADC_1.c **** * PARTICULAR PURPOSE. Cypress reserves the right to make
  29:Generated_Source\PSoC6/ADC_1.c **** * changes to the Software without notice. Cypress does not assume any
  30:Generated_Source\PSoC6/ADC_1.c **** * liability arising out of the application or use of the Software or any
  31:Generated_Source\PSoC6/ADC_1.c **** * product or circuit described in the Software. Cypress does not
  32:Generated_Source\PSoC6/ADC_1.c **** * authorize its products for use in any products where a malfunction or
  33:Generated_Source\PSoC6/ADC_1.c **** * failure of the Cypress product may reasonably be expected to result in
  34:Generated_Source\PSoC6/ADC_1.c **** * significant property damage, injury or death ("High Risk Product"). By
  35:Generated_Source\PSoC6/ADC_1.c **** * including Cypress's product in a High Risk Product, the manufacturer
  36:Generated_Source\PSoC6/ADC_1.c **** * of such system or application assumes all risk of such use and in doing
  37:Generated_Source\PSoC6/ADC_1.c **** * so agrees to indemnify Cypress against all liability.
  38:Generated_Source\PSoC6/ADC_1.c **** *******************************************************************************/
  39:Generated_Source\PSoC6/ADC_1.c **** #include "ADC_1.h"
  40:Generated_Source\PSoC6/ADC_1.c **** #include <sysint/cy_sysint.h>
  41:Generated_Source\PSoC6/ADC_1.c **** #include <cyfitter_sysint_cfg.h>
  42:Generated_Source\PSoC6/ADC_1.c **** 
  43:Generated_Source\PSoC6/ADC_1.c **** uint8_t ADC_1_initVar = 0u;
  44:Generated_Source\PSoC6/ADC_1.c **** uint8_t ADC_1_selected = 0u; /* 0 if no configuration selected. 1 otherwise. */
  45:Generated_Source\PSoC6/ADC_1.c **** uint32_t ADC_1_currentConfig = 0u; /* Currently active configuration */
  46:Generated_Source\PSoC6/ADC_1.c **** 
  47:Generated_Source\PSoC6/ADC_1.c **** /*******************************************************************************
  48:Generated_Source\PSoC6/ADC_1.c **** * Function Name: ADC_1_Start
  49:Generated_Source\PSoC6/ADC_1.c **** ****************************************************************************//**
  50:Generated_Source\PSoC6/ADC_1.c **** *
  51:Generated_Source\PSoC6/ADC_1.c **** * \brief Performs all required initialization for this component and enables the
  52:Generated_Source\PSoC6/ADC_1.c **** *  power. The power will be set to the appropriate power based on the clock
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 111


  53:Generated_Source\PSoC6/ADC_1.c **** *  frequency.
  54:Generated_Source\PSoC6/ADC_1.c **** *
  55:Generated_Source\PSoC6/ADC_1.c **** * \param None
  56:Generated_Source\PSoC6/ADC_1.c **** *
  57:Generated_Source\PSoC6/ADC_1.c **** * \return None
  58:Generated_Source\PSoC6/ADC_1.c **** *
  59:Generated_Source\PSoC6/ADC_1.c **** * \sideeffect None
  60:Generated_Source\PSoC6/ADC_1.c **** *
  61:Generated_Source\PSoC6/ADC_1.c **** * \globalvars
  62:Generated_Source\PSoC6/ADC_1.c **** *  \ref ADC_1_initVar (RW)
  63:Generated_Source\PSoC6/ADC_1.c **** *
  64:Generated_Source\PSoC6/ADC_1.c **** *******************************************************************************/
  65:Generated_Source\PSoC6/ADC_1.c **** void ADC_1_Start(void)
  66:Generated_Source\PSoC6/ADC_1.c **** {
 879              		.loc 5 66 0
 880              		.cfi_startproc
 881              		@ args = 0, pretend = 0, frame = 0
 882              		@ frame_needed = 1, uses_anonymous_args = 0
 883 0000 80B5     		push	{r7, lr}
 884              		.cfi_def_cfa_offset 8
 885              		.cfi_offset 7, -8
 886              		.cfi_offset 14, -4
 887 0002 00AF     		add	r7, sp, #0
 888              		.cfi_def_cfa_register 7
  67:Generated_Source\PSoC6/ADC_1.c ****     if (ADC_1_INIT_VAR_INIT_FLAG != (ADC_1_INIT_VAR_INIT_FLAG & ADC_1_initVar))
 889              		.loc 5 67 0
 890 0004 0A4B     		ldr	r3, .L50
 891 0006 1B78     		ldrb	r3, [r3]
 892 0008 0122     		movs	r2, #1
 893 000a 1340     		ands	r3, r2
 894 000c DBB2     		uxtb	r3, r3
 895 000e 002B     		cmp	r3, #0
 896 0010 08D1     		bne	.L48
  68:Generated_Source\PSoC6/ADC_1.c ****     {
  69:Generated_Source\PSoC6/ADC_1.c ****         ADC_1_Init();
 897              		.loc 5 69 0
 898 0012 FFF7FEFF 		bl	ADC_1_Init
  70:Generated_Source\PSoC6/ADC_1.c ****         ADC_1_initVar |= ADC_1_INIT_VAR_INIT_FLAG;
 899              		.loc 5 70 0
 900 0016 064B     		ldr	r3, .L50
 901 0018 1B78     		ldrb	r3, [r3]
 902 001a 0122     		movs	r2, #1
 903 001c 1343     		orrs	r3, r2
 904 001e DAB2     		uxtb	r2, r3
 905 0020 034B     		ldr	r3, .L50
 906 0022 1A70     		strb	r2, [r3]
 907              	.L48:
  71:Generated_Source\PSoC6/ADC_1.c ****     }
  72:Generated_Source\PSoC6/ADC_1.c **** 
  73:Generated_Source\PSoC6/ADC_1.c ****     ADC_1_Enable();
 908              		.loc 5 73 0
 909 0024 FFF7FEFF 		bl	ADC_1_Enable
  74:Generated_Source\PSoC6/ADC_1.c **** 
  75:Generated_Source\PSoC6/ADC_1.c ****     return;
 910              		.loc 5 75 0
 911 0028 C046     		nop
  76:Generated_Source\PSoC6/ADC_1.c **** }
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 112


 912              		.loc 5 76 0
 913 002a BD46     		mov	sp, r7
 914              		@ sp needed
 915 002c 80BD     		pop	{r7, pc}
 916              	.L51:
 917 002e C046     		.align	2
 918              	.L50:
 919 0030 00000000 		.word	ADC_1_initVar
 920              		.cfi_endproc
 921              	.LFE186:
 922              		.size	ADC_1_Start, .-ADC_1_Start
 923              		.section	.text.ADC_1_StartEx,"ax",%progbits
 924              		.align	2
 925              		.global	ADC_1_StartEx
 926              		.code	16
 927              		.thumb_func
 928              		.type	ADC_1_StartEx, %function
 929              	ADC_1_StartEx:
 930              	.LFB187:
  77:Generated_Source\PSoC6/ADC_1.c **** 
  78:Generated_Source\PSoC6/ADC_1.c **** /*******************************************************************************
  79:Generated_Source\PSoC6/ADC_1.c **** * Function Name: ADC_1_StartEx
  80:Generated_Source\PSoC6/ADC_1.c **** ****************************************************************************//**
  81:Generated_Source\PSoC6/ADC_1.c **** *
  82:Generated_Source\PSoC6/ADC_1.c **** * \brief This function starts the ADC_1 and sets the Interrupt
  83:Generated_Source\PSoC6/ADC_1.c **** * Service Routine to the provided address using the
  84:Generated_Source\PSoC6/ADC_1.c **** * Cy_SysInt_Init() function. Refer to the Interrupt component
  85:Generated_Source\PSoC6/ADC_1.c **** * datasheet for more information on the Cy_SysInt_Init() function.
  86:Generated_Source\PSoC6/ADC_1.c **** *
  87:Generated_Source\PSoC6/ADC_1.c **** * \param address This is the address of a user defined function for the ISR.
  88:Generated_Source\PSoC6/ADC_1.c **** *
  89:Generated_Source\PSoC6/ADC_1.c **** * \return None
  90:Generated_Source\PSoC6/ADC_1.c **** *
  91:Generated_Source\PSoC6/ADC_1.c **** * \sideeffect None
  92:Generated_Source\PSoC6/ADC_1.c **** *
  93:Generated_Source\PSoC6/ADC_1.c **** *******************************************************************************/
  94:Generated_Source\PSoC6/ADC_1.c **** void ADC_1_StartEx(cy_israddress userIsr)
  95:Generated_Source\PSoC6/ADC_1.c **** {
 931              		.loc 5 95 0
 932              		.cfi_startproc
 933              		@ args = 0, pretend = 0, frame = 8
 934              		@ frame_needed = 1, uses_anonymous_args = 0
 935 0000 80B5     		push	{r7, lr}
 936              		.cfi_def_cfa_offset 8
 937              		.cfi_offset 7, -8
 938              		.cfi_offset 14, -4
 939 0002 82B0     		sub	sp, sp, #8
 940              		.cfi_def_cfa_offset 16
 941 0004 00AF     		add	r7, sp, #0
 942              		.cfi_def_cfa_register 7
 943 0006 7860     		str	r0, [r7, #4]
  96:Generated_Source\PSoC6/ADC_1.c ****     ADC_1_Start();
 944              		.loc 5 96 0
 945 0008 FFF7FEFF 		bl	ADC_1_Start
  97:Generated_Source\PSoC6/ADC_1.c **** 
  98:Generated_Source\PSoC6/ADC_1.c ****     /* Interrupt core assignment will be up to the user. Initialize and enable the interrupt*/
  99:Generated_Source\PSoC6/ADC_1.c ****     #ifdef ADC_1_IRQ__INTC_CORTEXM4_ASSIGNED
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 113


 100:Generated_Source\PSoC6/ADC_1.c ****     #if (CY_CPU_CORTEX_M4)
 101:Generated_Source\PSoC6/ADC_1.c ****         (void)Cy_SysInt_Init(&ADC_1_IRQ_cfg, userIsr);
 102:Generated_Source\PSoC6/ADC_1.c ****         NVIC_EnableIRQ(ADC_1_IRQ_cfg.intrSrc);
 103:Generated_Source\PSoC6/ADC_1.c ****     #endif
 104:Generated_Source\PSoC6/ADC_1.c ****     #endif
 105:Generated_Source\PSoC6/ADC_1.c **** 
 106:Generated_Source\PSoC6/ADC_1.c ****     #ifdef ADC_1_IRQ__INTC_CORTEXM0P_ASSIGNED
 107:Generated_Source\PSoC6/ADC_1.c ****     #if (CY_CPU_CORTEX_M0P)
 108:Generated_Source\PSoC6/ADC_1.c ****         (void)Cy_SysInt_Init(&ADC_1_IRQ_cfg, userIsr);
 109:Generated_Source\PSoC6/ADC_1.c ****         NVIC_EnableIRQ(ADC_1_IRQ_cfg.intrSrc);
 110:Generated_Source\PSoC6/ADC_1.c ****     #endif
 111:Generated_Source\PSoC6/ADC_1.c ****     #endif
 112:Generated_Source\PSoC6/ADC_1.c **** 
 113:Generated_Source\PSoC6/ADC_1.c **** }
 946              		.loc 5 113 0
 947 000c C046     		nop
 948 000e BD46     		mov	sp, r7
 949 0010 02B0     		add	sp, sp, #8
 950              		@ sp needed
 951 0012 80BD     		pop	{r7, pc}
 952              		.cfi_endproc
 953              	.LFE187:
 954              		.size	ADC_1_StartEx, .-ADC_1_StartEx
 955              		.section	.text.ADC_1_InitConfig,"ax",%progbits
 956              		.align	2
 957              		.global	ADC_1_InitConfig
 958              		.code	16
 959              		.thumb_func
 960              		.type	ADC_1_InitConfig, %function
 961              	ADC_1_InitConfig:
 962              	.LFB188:
 114:Generated_Source\PSoC6/ADC_1.c **** 
 115:Generated_Source\PSoC6/ADC_1.c **** /* ****************************************************************************
 116:Generated_Source\PSoC6/ADC_1.c **** * Function Name: ADC_1_InitConfig
 117:Generated_Source\PSoC6/ADC_1.c **** ****************************************************************************//*
 118:Generated_Source\PSoC6/ADC_1.c **** *
 119:Generated_Source\PSoC6/ADC_1.c **** * \brief Configures all of the registers for a given configuration for scanning.
 120:Generated_Source\PSoC6/ADC_1.c **** *
 121:Generated_Source\PSoC6/ADC_1.c **** * \param scan Number of scan defined in the ADC_1.
 122:Generated_Source\PSoC6/ADC_1.c **** *
 123:Generated_Source\PSoC6/ADC_1.c **** * \return None
 124:Generated_Source\PSoC6/ADC_1.c **** *
 125:Generated_Source\PSoC6/ADC_1.c **** * \sideeffect None
 126:Generated_Source\PSoC6/ADC_1.c **** *
 127:Generated_Source\PSoC6/ADC_1.c **** *******************************************************************************/
 128:Generated_Source\PSoC6/ADC_1.c **** void ADC_1_InitConfig(const ADC_1_CONFIG_STRUCT *config)
 129:Generated_Source\PSoC6/ADC_1.c **** {
 963              		.loc 5 129 0
 964              		.cfi_startproc
 965              		@ args = 0, pretend = 0, frame = 16
 966              		@ frame_needed = 1, uses_anonymous_args = 0
 967 0000 80B5     		push	{r7, lr}
 968              		.cfi_def_cfa_offset 8
 969              		.cfi_offset 7, -8
 970              		.cfi_offset 14, -4
 971 0002 84B0     		sub	sp, sp, #16
 972              		.cfi_def_cfa_offset 24
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 114


 973 0004 00AF     		add	r7, sp, #0
 974              		.cfi_def_cfa_register 7
 975 0006 7860     		str	r0, [r7, #4]
 130:Generated_Source\PSoC6/ADC_1.c ****     bool deInitRouting = false;
 976              		.loc 5 130 0
 977 0008 0F23     		movs	r3, #15
 978 000a FB18     		adds	r3, r7, r3
 979 000c 0022     		movs	r2, #0
 980 000e 1A70     		strb	r2, [r3]
 131:Generated_Source\PSoC6/ADC_1.c **** 
 132:Generated_Source\PSoC6/ADC_1.c ****     /* If there is an internal SAR clock, set up its divider values. */
 133:Generated_Source\PSoC6/ADC_1.c ****     #if (ADC_1_CLOCK_INTERNAL)
 134:Generated_Source\PSoC6/ADC_1.c ****         ADC_1_intSarClock_Disable();
 981              		.loc 5 134 0
 982 0010 FFF7FEFF 		bl	ADC_1_intSarClock_Disable
 135:Generated_Source\PSoC6/ADC_1.c ****         ADC_1_intSarClock_SetDivider(config->clkDivider);
 983              		.loc 5 135 0
 984 0014 7B68     		ldr	r3, [r7, #4]
 985 0016 1B69     		ldr	r3, [r3, #16]
 986 0018 1800     		movs	r0, r3
 987 001a FFF7FEFF 		bl	ADC_1_intSarClock_SetDivider
 136:Generated_Source\PSoC6/ADC_1.c ****         ADC_1_intSarClock_Enable();
 988              		.loc 5 136 0
 989 001e FFF7FEFF 		bl	ADC_1_intSarClock_Enable
 137:Generated_Source\PSoC6/ADC_1.c ****     #endif /* ADC_1_CLOCK_INTERNAL */
 138:Generated_Source\PSoC6/ADC_1.c **** 
 139:Generated_Source\PSoC6/ADC_1.c ****     /* Init SAR and MUX registers */
 140:Generated_Source\PSoC6/ADC_1.c ****     (void)Cy_SAR_DeInit(ADC_1_SAR__HW, deInitRouting);
 990              		.loc 5 140 0
 991 0022 0F23     		movs	r3, #15
 992 0024 FB18     		adds	r3, r7, r3
 993 0026 1B78     		ldrb	r3, [r3]
 994 0028 0F4A     		ldr	r2, .L57
 995 002a 1900     		movs	r1, r3
 996 002c 1000     		movs	r0, r2
 997 002e FFF7FEFF 		bl	Cy_SAR_DeInit
 141:Generated_Source\PSoC6/ADC_1.c ****     (void)Cy_SAR_Init(ADC_1_SAR__HW, config->hwConfigStc);
 998              		.loc 5 141 0
 999 0032 7B68     		ldr	r3, [r7, #4]
 1000 0034 9B68     		ldr	r3, [r3, #8]
 1001 0036 0C4A     		ldr	r2, .L57
 1002 0038 1900     		movs	r1, r3
 1003 003a 1000     		movs	r0, r2
 1004 003c FFF7FEFF 		bl	Cy_SAR_Init
 142:Generated_Source\PSoC6/ADC_1.c **** 
 143:Generated_Source\PSoC6/ADC_1.c ****     /* Connect Vminus to VSSA when even one channel is single-ended or multiple channels configured
 144:Generated_Source\PSoC6/ADC_1.c ****     if(1uL == ADC_1_MUX_SWITCH0_INIT)
 145:Generated_Source\PSoC6/ADC_1.c ****     {
 146:Generated_Source\PSoC6/ADC_1.c ****         Cy_SAR_SetVssaVminusSwitch(ADC_1_SAR__HW, CY_SAR_SWITCH_CLOSE);
 1005              		.loc 5 146 0
 1006 0040 094B     		ldr	r3, .L57
 1007 0042 0121     		movs	r1, #1
 1008 0044 1800     		movs	r0, r3
 1009 0046 FFF7FEFF 		bl	Cy_SAR_SetVssaVminusSwitch
 147:Generated_Source\PSoC6/ADC_1.c **** 
 148:Generated_Source\PSoC6/ADC_1.c ****         /* Set MUX_HW_CTRL_VSSA in MUX_SWITCH_HW_CTRL when multiple channels enabled */
 149:Generated_Source\PSoC6/ADC_1.c ****         if(1uL < config->numChannels)
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 115


 1010              		.loc 5 149 0
 1011 004a 7B68     		ldr	r3, [r7, #4]
 1012 004c 5B68     		ldr	r3, [r3, #4]
 1013 004e 012B     		cmp	r3, #1
 1014 0050 05D9     		bls	.L56
 150:Generated_Source\PSoC6/ADC_1.c ****         {
 151:Generated_Source\PSoC6/ADC_1.c ****             Cy_SAR_SetVssaSarSeqCtrl(ADC_1_SAR__HW, CY_SAR_SWITCH_SEQ_CTRL_ENABLE);
 1015              		.loc 5 151 0
 1016 0052 054B     		ldr	r3, .L57
 1017 0054 0121     		movs	r1, #1
 1018 0056 1800     		movs	r0, r3
 1019 0058 FFF7FEFF 		bl	Cy_SAR_SetVssaSarSeqCtrl
 152:Generated_Source\PSoC6/ADC_1.c ****         }
 153:Generated_Source\PSoC6/ADC_1.c ****     }
 154:Generated_Source\PSoC6/ADC_1.c **** 
 155:Generated_Source\PSoC6/ADC_1.c ****     return;
 1020              		.loc 5 155 0
 1021 005c C046     		nop
 1022              	.L56:
 1023 005e C046     		nop
 156:Generated_Source\PSoC6/ADC_1.c **** }
 1024              		.loc 5 156 0
 1025 0060 BD46     		mov	sp, r7
 1026 0062 04B0     		add	sp, sp, #16
 1027              		@ sp needed
 1028 0064 80BD     		pop	{r7, pc}
 1029              	.L58:
 1030 0066 C046     		.align	2
 1031              	.L57:
 1032 0068 00001D41 		.word	1092419584
 1033              		.cfi_endproc
 1034              	.LFE188:
 1035              		.size	ADC_1_InitConfig, .-ADC_1_InitConfig
 1036              		.section	.text.ADC_1_SelectConfig,"ax",%progbits
 1037              		.align	2
 1038              		.global	ADC_1_SelectConfig
 1039              		.code	16
 1040              		.thumb_func
 1041              		.type	ADC_1_SelectConfig, %function
 1042              	ADC_1_SelectConfig:
 1043              	.LFB189:
 157:Generated_Source\PSoC6/ADC_1.c **** 
 158:Generated_Source\PSoC6/ADC_1.c **** /* ****************************************************************************
 159:Generated_Source\PSoC6/ADC_1.c **** * Function Name: ADC_1_SelectConfig
 160:Generated_Source\PSoC6/ADC_1.c **** ****************************************************************************//*
 161:Generated_Source\PSoC6/ADC_1.c **** *
 162:Generated_Source\PSoC6/ADC_1.c **** * \brief Selects the predefined configuration for scanning.
 163:Generated_Source\PSoC6/ADC_1.c **** *
 164:Generated_Source\PSoC6/ADC_1.c **** * \param config Number of configuration in the ADC_1.
 165:Generated_Source\PSoC6/ADC_1.c **** *
 166:Generated_Source\PSoC6/ADC_1.c **** * \param restart Set to 1u if the ADC_1 should be  restarted after
 167:Generated_Source\PSoC6/ADC_1.c **** * selecting the configuration.
 168:Generated_Source\PSoC6/ADC_1.c **** *
 169:Generated_Source\PSoC6/ADC_1.c **** *******************************************************************************/
 170:Generated_Source\PSoC6/ADC_1.c **** void ADC_1_SelectConfig(uint32_t config, uint32_t restart)
 171:Generated_Source\PSoC6/ADC_1.c **** {
 1044              		.loc 5 171 0
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 116


 1045              		.cfi_startproc
 1046              		@ args = 0, pretend = 0, frame = 8
 1047              		@ frame_needed = 1, uses_anonymous_args = 0
 1048 0000 80B5     		push	{r7, lr}
 1049              		.cfi_def_cfa_offset 8
 1050              		.cfi_offset 7, -8
 1051              		.cfi_offset 14, -4
 1052 0002 82B0     		sub	sp, sp, #8
 1053              		.cfi_def_cfa_offset 16
 1054 0004 00AF     		add	r7, sp, #0
 1055              		.cfi_def_cfa_register 7
 1056 0006 7860     		str	r0, [r7, #4]
 1057 0008 3960     		str	r1, [r7]
 172:Generated_Source\PSoC6/ADC_1.c ****     /* Check whether the configuration number is valid or not */
 173:Generated_Source\PSoC6/ADC_1.c ****     if(ADC_1_TOTAL_CONFIGS > config)
 1058              		.loc 5 173 0
 1059 000a 7B68     		ldr	r3, [r7, #4]
 1060 000c 002B     		cmp	r3, #0
 1061 000e 26D1     		bne	.L63
 174:Generated_Source\PSoC6/ADC_1.c ****     {
 175:Generated_Source\PSoC6/ADC_1.c ****         /* Stop the ADC before changing configurations */
 176:Generated_Source\PSoC6/ADC_1.c ****         ADC_1_Stop();
 1062              		.loc 5 176 0
 1063 0010 FFF7FEFF 		bl	ADC_1_Stop
 177:Generated_Source\PSoC6/ADC_1.c ****         ADC_1_selected = 1u;
 1064              		.loc 5 177 0
 1065 0014 144B     		ldr	r3, .L64
 1066 0016 0122     		movs	r2, #1
 1067 0018 1A70     		strb	r2, [r3]
 178:Generated_Source\PSoC6/ADC_1.c **** 
 179:Generated_Source\PSoC6/ADC_1.c ****         if(0u == ADC_1_initVar)
 1068              		.loc 5 179 0
 1069 001a 144B     		ldr	r3, .L64+4
 1070 001c 1B78     		ldrb	r3, [r3]
 1071 001e 002B     		cmp	r3, #0
 1072 0020 08D1     		bne	.L61
 180:Generated_Source\PSoC6/ADC_1.c ****         {
 181:Generated_Source\PSoC6/ADC_1.c ****             ADC_1_Init();
 1073              		.loc 5 181 0
 1074 0022 FFF7FEFF 		bl	ADC_1_Init
 182:Generated_Source\PSoC6/ADC_1.c ****             ADC_1_initVar |= ADC_1_INIT_VAR_INIT_FLAG;
 1075              		.loc 5 182 0
 1076 0026 114B     		ldr	r3, .L64+4
 1077 0028 1B78     		ldrb	r3, [r3]
 1078 002a 0122     		movs	r2, #1
 1079 002c 1343     		orrs	r3, r2
 1080 002e DAB2     		uxtb	r2, r3
 1081 0030 0E4B     		ldr	r3, .L64+4
 1082 0032 1A70     		strb	r2, [r3]
 1083              	.L61:
 183:Generated_Source\PSoC6/ADC_1.c ****         }
 184:Generated_Source\PSoC6/ADC_1.c ****         #if (ADC_1_VREF_ROUTED)
 185:Generated_Source\PSoC6/ADC_1.c ****             ADC_1_vrefAMux_DisconnectAll();
 186:Generated_Source\PSoC6/ADC_1.c ****         #endif
 187:Generated_Source\PSoC6/ADC_1.c **** 
 188:Generated_Source\PSoC6/ADC_1.c ****         ADC_1_InitConfig(&ADC_1_allConfigs[config]);
 1084              		.loc 5 188 0
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 117


 1085 0034 7A68     		ldr	r2, [r7, #4]
 1086 0036 1300     		movs	r3, r2
 1087 0038 9B00     		lsls	r3, r3, #2
 1088 003a 9B18     		adds	r3, r3, r2
 1089 003c 9B00     		lsls	r3, r3, #2
 1090 003e 0C4A     		ldr	r2, .L64+8
 1091 0040 9B18     		adds	r3, r3, r2
 1092 0042 1800     		movs	r0, r3
 1093 0044 FFF7FEFF 		bl	ADC_1_InitConfig
 189:Generated_Source\PSoC6/ADC_1.c **** 
 190:Generated_Source\PSoC6/ADC_1.c ****         #if (ADC_1_VREF_ROUTED)
 191:Generated_Source\PSoC6/ADC_1.c ****             ADC_1_vrefAMux_Select((uint8)config);
 192:Generated_Source\PSoC6/ADC_1.c ****         #endif
 193:Generated_Source\PSoC6/ADC_1.c **** 
 194:Generated_Source\PSoC6/ADC_1.c ****         ADC_1_currentConfig = config;
 1094              		.loc 5 194 0
 1095 0048 0A4B     		ldr	r3, .L64+12
 1096 004a 7A68     		ldr	r2, [r7, #4]
 1097 004c 1A60     		str	r2, [r3]
 195:Generated_Source\PSoC6/ADC_1.c **** 
 196:Generated_Source\PSoC6/ADC_1.c ****         if(1u == restart)
 1098              		.loc 5 196 0
 1099 004e 3B68     		ldr	r3, [r7]
 1100 0050 012B     		cmp	r3, #1
 1101 0052 04D1     		bne	.L63
 197:Generated_Source\PSoC6/ADC_1.c ****         {
 198:Generated_Source\PSoC6/ADC_1.c ****             /* Restart the ADC */
 199:Generated_Source\PSoC6/ADC_1.c ****             ADC_1_Start();
 1102              		.loc 5 199 0
 1103 0054 FFF7FEFF 		bl	ADC_1_Start
 200:Generated_Source\PSoC6/ADC_1.c **** 
 201:Generated_Source\PSoC6/ADC_1.c ****             /* Restart the scan */
 202:Generated_Source\PSoC6/ADC_1.c ****             ADC_1_StartConvert();
 1104              		.loc 5 202 0
 1105 0058 FFF7FEFF 		bl	ADC_1_StartConvert
 203:Generated_Source\PSoC6/ADC_1.c ****         }
 204:Generated_Source\PSoC6/ADC_1.c ****     }
 205:Generated_Source\PSoC6/ADC_1.c ****     return;
 1106              		.loc 5 205 0
 1107 005c C046     		nop
 1108              	.L63:
 1109 005e C046     		nop
 206:Generated_Source\PSoC6/ADC_1.c **** }
 1110              		.loc 5 206 0
 1111 0060 BD46     		mov	sp, r7
 1112 0062 02B0     		add	sp, sp, #8
 1113              		@ sp needed
 1114 0064 80BD     		pop	{r7, pc}
 1115              	.L65:
 1116 0066 C046     		.align	2
 1117              	.L64:
 1118 0068 00000000 		.word	ADC_1_selected
 1119 006c 00000000 		.word	ADC_1_initVar
 1120 0070 00000000 		.word	ADC_1_allConfigs
 1121 0074 00000000 		.word	ADC_1_currentConfig
 1122              		.cfi_endproc
 1123              	.LFE189:
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 118


 1124              		.size	ADC_1_SelectConfig, .-ADC_1_SelectConfig
 1125              		.section	.text.ADC_1_StartConvert,"ax",%progbits
 1126              		.align	2
 1127              		.global	ADC_1_StartConvert
 1128              		.code	16
 1129              		.thumb_func
 1130              		.type	ADC_1_StartConvert, %function
 1131              	ADC_1_StartConvert:
 1132              	.LFB190:
 207:Generated_Source\PSoC6/ADC_1.c **** 
 208:Generated_Source\PSoC6/ADC_1.c **** /*******************************************************************************
 209:Generated_Source\PSoC6/ADC_1.c **** * Function Name: ADC_1_StartConvert
 210:Generated_Source\PSoC6/ADC_1.c **** ****************************************************************************//**
 211:Generated_Source\PSoC6/ADC_1.c **** *
 212:Generated_Source\PSoC6/ADC_1.c **** * \brief In continuous mode, this API starts the conversion process and it runs
 213:Generated_Source\PSoC6/ADC_1.c **** * continuously.
 214:Generated_Source\PSoC6/ADC_1.c **** 
 215:Generated_Source\PSoC6/ADC_1.c **** * In Single Shot mode, the function triggers a single scan and
 216:Generated_Source\PSoC6/ADC_1.c **** * every scan requires a call of this function. The mode is set with the
 217:Generated_Source\PSoC6/ADC_1.c **** * Sample Mode parameter in the customizer. The customizer setting can be
 218:Generated_Source\PSoC6/ADC_1.c **** * overridden at run time with the ADC_1_SetConvertMode() function.
 219:Generated_Source\PSoC6/ADC_1.c **** *
 220:Generated_Source\PSoC6/ADC_1.c **** * \param None
 221:Generated_Source\PSoC6/ADC_1.c **** *
 222:Generated_Source\PSoC6/ADC_1.c **** * \return None
 223:Generated_Source\PSoC6/ADC_1.c **** *
 224:Generated_Source\PSoC6/ADC_1.c **** * \sideeffect None
 225:Generated_Source\PSoC6/ADC_1.c **** *
 226:Generated_Source\PSoC6/ADC_1.c **** *******************************************************************************/
 227:Generated_Source\PSoC6/ADC_1.c **** void ADC_1_StartConvert(void)
 228:Generated_Source\PSoC6/ADC_1.c **** {
 1133              		.loc 5 228 0
 1134              		.cfi_startproc
 1135              		@ args = 0, pretend = 0, frame = 0
 1136              		@ frame_needed = 1, uses_anonymous_args = 0
 1137 0000 80B5     		push	{r7, lr}
 1138              		.cfi_def_cfa_offset 8
 1139              		.cfi_offset 7, -8
 1140              		.cfi_offset 14, -4
 1141 0002 00AF     		add	r7, sp, #0
 1142              		.cfi_def_cfa_register 7
 229:Generated_Source\PSoC6/ADC_1.c ****     if (SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_Msk == (ADC_1_SAR__HW->SAMPLE_CTRL & SAR_SAMPLE_CTRL_DSI_
 1143              		.loc 5 229 0
 1144 0004 094B     		ldr	r3, .L70
 1145 0006 5A68     		ldr	r2, [r3, #4]
 1146 0008 8023     		movs	r3, #128
 1147 000a DB02     		lsls	r3, r3, #11
 1148 000c 1340     		ands	r3, r2
 1149 000e 05D0     		beq	.L67
 230:Generated_Source\PSoC6/ADC_1.c ****     {
 231:Generated_Source\PSoC6/ADC_1.c ****         Cy_SAR_StartConvert(ADC_1_SAR__HW, CY_SAR_START_CONVERT_CONTINUOUS);
 1150              		.loc 5 231 0
 1151 0010 064B     		ldr	r3, .L70
 1152 0012 0121     		movs	r1, #1
 1153 0014 1800     		movs	r0, r3
 1154 0016 FFF7FEFF 		bl	Cy_SAR_StartConvert
 232:Generated_Source\PSoC6/ADC_1.c ****     }
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 119


 233:Generated_Source\PSoC6/ADC_1.c ****     else
 234:Generated_Source\PSoC6/ADC_1.c ****     {
 235:Generated_Source\PSoC6/ADC_1.c ****         Cy_SAR_StartConvert(ADC_1_SAR__HW, CY_SAR_START_CONVERT_SINGLE_SHOT);
 236:Generated_Source\PSoC6/ADC_1.c ****     }
 237:Generated_Source\PSoC6/ADC_1.c **** }
 1155              		.loc 5 237 0
 1156 001a 04E0     		b	.L69
 1157              	.L67:
 235:Generated_Source\PSoC6/ADC_1.c ****     }
 1158              		.loc 5 235 0
 1159 001c 034B     		ldr	r3, .L70
 1160 001e 0021     		movs	r1, #0
 1161 0020 1800     		movs	r0, r3
 1162 0022 FFF7FEFF 		bl	Cy_SAR_StartConvert
 1163              	.L69:
 1164              		.loc 5 237 0
 1165 0026 C046     		nop
 1166 0028 BD46     		mov	sp, r7
 1167              		@ sp needed
 1168 002a 80BD     		pop	{r7, pc}
 1169              	.L71:
 1170              		.align	2
 1171              	.L70:
 1172 002c 00001D41 		.word	1092419584
 1173              		.cfi_endproc
 1174              	.LFE190:
 1175              		.size	ADC_1_StartConvert, .-ADC_1_StartConvert
 1176              		.section	.text.ADC_1_SetConvertMode,"ax",%progbits
 1177              		.align	2
 1178              		.global	ADC_1_SetConvertMode
 1179              		.code	16
 1180              		.thumb_func
 1181              		.type	ADC_1_SetConvertMode, %function
 1182              	ADC_1_SetConvertMode:
 1183              	.LFB191:
 238:Generated_Source\PSoC6/ADC_1.c **** 
 239:Generated_Source\PSoC6/ADC_1.c **** /*******************************************************************************
 240:Generated_Source\PSoC6/ADC_1.c **** * Function Name: ADC_1_SetConvertMode
 241:Generated_Source\PSoC6/ADC_1.c **** ****************************************************************************//**
 242:Generated_Source\PSoC6/ADC_1.c **** *
 243:Generated_Source\PSoC6/ADC_1.c **** * \brief Sets the conversion mode to either Single-Shot or continuous. This
 244:Generated_Source\PSoC6/ADC_1.c **** * function overrides the settings applied in the customizer. Changing
 245:Generated_Source\PSoC6/ADC_1.c **** * configurations will restore the values set in the customizer.
 246:Generated_Source\PSoC6/ADC_1.c **** *
 247:Generated_Source\PSoC6/ADC_1.c **** * \param mode Sets the conversion mode.
 248:Generated_Source\PSoC6/ADC_1.c **** *
 249:Generated_Source\PSoC6/ADC_1.c **** * \return None
 250:Generated_Source\PSoC6/ADC_1.c **** *
 251:Generated_Source\PSoC6/ADC_1.c **** * \sideeffect None
 252:Generated_Source\PSoC6/ADC_1.c **** *
 253:Generated_Source\PSoC6/ADC_1.c **** *******************************************************************************/
 254:Generated_Source\PSoC6/ADC_1.c **** void ADC_1_SetConvertMode(cy_en_sar_start_convert_sel_t mode)
 255:Generated_Source\PSoC6/ADC_1.c **** {
 1184              		.loc 5 255 0
 1185              		.cfi_startproc
 1186              		@ args = 0, pretend = 0, frame = 8
 1187              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 120


 1188 0000 80B5     		push	{r7, lr}
 1189              		.cfi_def_cfa_offset 8
 1190              		.cfi_offset 7, -8
 1191              		.cfi_offset 14, -4
 1192 0002 82B0     		sub	sp, sp, #8
 1193              		.cfi_def_cfa_offset 16
 1194 0004 00AF     		add	r7, sp, #0
 1195              		.cfi_def_cfa_register 7
 1196 0006 0200     		movs	r2, r0
 1197 0008 FB1D     		adds	r3, r7, #7
 1198 000a 1A70     		strb	r2, [r3]
 256:Generated_Source\PSoC6/ADC_1.c ****     switch(mode)
 1199              		.loc 5 256 0
 1200 000c FB1D     		adds	r3, r7, #7
 1201 000e 1B78     		ldrb	r3, [r3]
 1202 0010 012B     		cmp	r3, #1
 1203 0012 07D1     		bne	.L76
 257:Generated_Source\PSoC6/ADC_1.c ****     {
 258:Generated_Source\PSoC6/ADC_1.c ****     case CY_SAR_START_CONVERT_CONTINUOUS:
 259:Generated_Source\PSoC6/ADC_1.c ****         ADC_1_SAR__HW->SAMPLE_CTRL |= SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_Msk;
 1204              		.loc 5 259 0
 1205 0014 094B     		ldr	r3, .L77
 1206 0016 094A     		ldr	r2, .L77
 1207 0018 5268     		ldr	r2, [r2, #4]
 1208 001a 8021     		movs	r1, #128
 1209 001c C902     		lsls	r1, r1, #11
 1210 001e 0A43     		orrs	r2, r1
 1211 0020 5A60     		str	r2, [r3, #4]
 260:Generated_Source\PSoC6/ADC_1.c ****         break;
 1212              		.loc 5 260 0
 1213 0022 06E0     		b	.L75
 1214              	.L76:
 261:Generated_Source\PSoC6/ADC_1.c ****     case CY_SAR_START_CONVERT_SINGLE_SHOT:
 262:Generated_Source\PSoC6/ADC_1.c ****     default:
 263:Generated_Source\PSoC6/ADC_1.c ****         ADC_1_SAR__HW->SAMPLE_CTRL &= ~SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_Msk;
 1215              		.loc 5 263 0
 1216 0024 054B     		ldr	r3, .L77
 1217 0026 054A     		ldr	r2, .L77
 1218 0028 5268     		ldr	r2, [r2, #4]
 1219 002a 0549     		ldr	r1, .L77+4
 1220 002c 0A40     		ands	r2, r1
 1221 002e 5A60     		str	r2, [r3, #4]
 264:Generated_Source\PSoC6/ADC_1.c ****         break;
 1222              		.loc 5 264 0
 1223 0030 C046     		nop
 1224              	.L75:
 265:Generated_Source\PSoC6/ADC_1.c ****     }
 266:Generated_Source\PSoC6/ADC_1.c **** }
 1225              		.loc 5 266 0
 1226 0032 C046     		nop
 1227 0034 BD46     		mov	sp, r7
 1228 0036 02B0     		add	sp, sp, #8
 1229              		@ sp needed
 1230 0038 80BD     		pop	{r7, pc}
 1231              	.L78:
 1232 003a C046     		.align	2
 1233              	.L77:
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 121


 1234 003c 00001D41 		.word	1092419584
 1235 0040 FFFFFBFF 		.word	-262145
 1236              		.cfi_endproc
 1237              	.LFE191:
 1238              		.size	ADC_1_SetConvertMode, .-ADC_1_SetConvertMode
 1239              		.section	.text.ADC_1_IRQ_Enable,"ax",%progbits
 1240              		.align	2
 1241              		.global	ADC_1_IRQ_Enable
 1242              		.code	16
 1243              		.thumb_func
 1244              		.type	ADC_1_IRQ_Enable, %function
 1245              	ADC_1_IRQ_Enable:
 1246              	.LFB192:
 267:Generated_Source\PSoC6/ADC_1.c **** 
 268:Generated_Source\PSoC6/ADC_1.c **** /* ****************************************************************************
 269:Generated_Source\PSoC6/ADC_1.c **** * Function Name: ADC_1_IRQ_Enable
 270:Generated_Source\PSoC6/ADC_1.c **** ****************************************************************************//*
 271:Generated_Source\PSoC6/ADC_1.c **** *
 272:Generated_Source\PSoC6/ADC_1.c **** * \brief Enables interrupts to occur at the end of a conversion. Global
 273:Generated_Source\PSoC6/ADC_1.c **** * interrupts must also be enabled for the ADC_1 interrupts to occur.
 274:Generated_Source\PSoC6/ADC_1.c **** *
 275:Generated_Source\PSoC6/ADC_1.c **** * \param None
 276:Generated_Source\PSoC6/ADC_1.c **** *
 277:Generated_Source\PSoC6/ADC_1.c **** * \return None
 278:Generated_Source\PSoC6/ADC_1.c **** *
 279:Generated_Source\PSoC6/ADC_1.c **** * \sideeffect None
 280:Generated_Source\PSoC6/ADC_1.c **** *
 281:Generated_Source\PSoC6/ADC_1.c **** *******************************************************************************/
 282:Generated_Source\PSoC6/ADC_1.c **** void ADC_1_IRQ_Enable(void){
 1247              		.loc 5 282 0
 1248              		.cfi_startproc
 1249              		@ args = 0, pretend = 0, frame = 0
 1250              		@ frame_needed = 1, uses_anonymous_args = 0
 1251 0000 80B5     		push	{r7, lr}
 1252              		.cfi_def_cfa_offset 8
 1253              		.cfi_offset 7, -8
 1254              		.cfi_offset 14, -4
 1255 0002 00AF     		add	r7, sp, #0
 1256              		.cfi_def_cfa_register 7
 283:Generated_Source\PSoC6/ADC_1.c ****     /* Interrupt core assignment will be up to the user. */
 284:Generated_Source\PSoC6/ADC_1.c ****     #ifdef ADC_1_IRQ__INTC_CORTEXM4_ASSIGNED
 285:Generated_Source\PSoC6/ADC_1.c ****     #if (CY_CPU_CORTEX_M4)
 286:Generated_Source\PSoC6/ADC_1.c ****         NVIC_EnableIRQ(ADC_1_IRQ_cfg.intrSrc);
 287:Generated_Source\PSoC6/ADC_1.c ****     #endif
 288:Generated_Source\PSoC6/ADC_1.c ****     #endif
 289:Generated_Source\PSoC6/ADC_1.c **** 
 290:Generated_Source\PSoC6/ADC_1.c ****     #ifdef ADC_1_IRQ__INTC_CORTEXM0P_ASSIGNED
 291:Generated_Source\PSoC6/ADC_1.c ****     #if (CY_CPU_CORTEX_M0P)
 292:Generated_Source\PSoC6/ADC_1.c ****         NVIC_EnableIRQ(ADC_1_IRQ_cfg.intrSrc);
 293:Generated_Source\PSoC6/ADC_1.c ****     #endif
 294:Generated_Source\PSoC6/ADC_1.c ****     #endif
 295:Generated_Source\PSoC6/ADC_1.c **** }
 1257              		.loc 5 295 0
 1258 0004 C046     		nop
 1259 0006 BD46     		mov	sp, r7
 1260              		@ sp needed
 1261 0008 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 122


 1262              		.cfi_endproc
 1263              	.LFE192:
 1264              		.size	ADC_1_IRQ_Enable, .-ADC_1_IRQ_Enable
 1265              		.section	.text.ADC_1_IRQ_Disable,"ax",%progbits
 1266              		.align	2
 1267              		.global	ADC_1_IRQ_Disable
 1268              		.code	16
 1269              		.thumb_func
 1270              		.type	ADC_1_IRQ_Disable, %function
 1271              	ADC_1_IRQ_Disable:
 1272              	.LFB193:
 296:Generated_Source\PSoC6/ADC_1.c **** 
 297:Generated_Source\PSoC6/ADC_1.c **** /* ****************************************************************************
 298:Generated_Source\PSoC6/ADC_1.c **** * Function Name: ADC_1_IRQ_Disable
 299:Generated_Source\PSoC6/ADC_1.c **** ****************************************************************************//*
 300:Generated_Source\PSoC6/ADC_1.c **** *
 301:Generated_Source\PSoC6/ADC_1.c **** * \brief Disables end of conversion interrupts.
 302:Generated_Source\PSoC6/ADC_1.c **** *
 303:Generated_Source\PSoC6/ADC_1.c **** * \param None
 304:Generated_Source\PSoC6/ADC_1.c **** *
 305:Generated_Source\PSoC6/ADC_1.c **** * \return None
 306:Generated_Source\PSoC6/ADC_1.c **** *
 307:Generated_Source\PSoC6/ADC_1.c **** * \sideeffect None
 308:Generated_Source\PSoC6/ADC_1.c **** *
 309:Generated_Source\PSoC6/ADC_1.c **** *******************************************************************************/
 310:Generated_Source\PSoC6/ADC_1.c **** void ADC_1_IRQ_Disable(void){
 1273              		.loc 5 310 0
 1274              		.cfi_startproc
 1275              		@ args = 0, pretend = 0, frame = 0
 1276              		@ frame_needed = 1, uses_anonymous_args = 0
 1277 0000 80B5     		push	{r7, lr}
 1278              		.cfi_def_cfa_offset 8
 1279              		.cfi_offset 7, -8
 1280              		.cfi_offset 14, -4
 1281 0002 00AF     		add	r7, sp, #0
 1282              		.cfi_def_cfa_register 7
 311:Generated_Source\PSoC6/ADC_1.c ****     /* Interrupt core assignment will be up to the user. */
 312:Generated_Source\PSoC6/ADC_1.c ****     #ifdef ADC_1_IRQ__INTC_CORTEXM4_ASSIGNED
 313:Generated_Source\PSoC6/ADC_1.c ****     #if (CY_CPU_CORTEX_M4)
 314:Generated_Source\PSoC6/ADC_1.c ****         NVIC_DisableIRQ(ADC_1_IRQ_cfg.intrSrc);
 315:Generated_Source\PSoC6/ADC_1.c ****     #endif
 316:Generated_Source\PSoC6/ADC_1.c ****     #endif
 317:Generated_Source\PSoC6/ADC_1.c **** 
 318:Generated_Source\PSoC6/ADC_1.c ****     #ifdef ADC_1_IRQ__INTC_CORTEXM0P_ASSIGNED
 319:Generated_Source\PSoC6/ADC_1.c ****     #if (CY_CPU_CORTEX_M0P)
 320:Generated_Source\PSoC6/ADC_1.c ****         NVIC_DisableIRQ(ADC_1_IRQ_cfg.intrSrc);
 321:Generated_Source\PSoC6/ADC_1.c ****     #endif
 322:Generated_Source\PSoC6/ADC_1.c ****     #endif
 323:Generated_Source\PSoC6/ADC_1.c **** }
 1283              		.loc 5 323 0
 1284 0004 C046     		nop
 1285 0006 BD46     		mov	sp, r7
 1286              		@ sp needed
 1287 0008 80BD     		pop	{r7, pc}
 1288              		.cfi_endproc
 1289              	.LFE193:
 1290              		.size	ADC_1_IRQ_Disable, .-ADC_1_IRQ_Disable
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 123


 1291              		.section	.text.ADC_1_SetEosMask,"ax",%progbits
 1292              		.align	2
 1293              		.global	ADC_1_SetEosMask
 1294              		.code	16
 1295              		.thumb_func
 1296              		.type	ADC_1_SetEosMask, %function
 1297              	ADC_1_SetEosMask:
 1298              	.LFB194:
 324:Generated_Source\PSoC6/ADC_1.c **** 
 325:Generated_Source\PSoC6/ADC_1.c **** /*******************************************************************************
 326:Generated_Source\PSoC6/ADC_1.c **** * Function Name: ADC_1_SetEosMask
 327:Generated_Source\PSoC6/ADC_1.c **** ****************************************************************************//**
 328:Generated_Source\PSoC6/ADC_1.c **** *
 329:Generated_Source\PSoC6/ADC_1.c **** * \brief Sets or clears the End of Scan (EOS) interrupt mask.
 330:Generated_Source\PSoC6/ADC_1.c **** *
 331:Generated_Source\PSoC6/ADC_1.c **** * \param mask 1 to set the mask, 0 to clear the mask.
 332:Generated_Source\PSoC6/ADC_1.c **** *
 333:Generated_Source\PSoC6/ADC_1.c **** * \return None
 334:Generated_Source\PSoC6/ADC_1.c **** *
 335:Generated_Source\PSoC6/ADC_1.c **** * \sideeffect All other bits in the INTR register are cleared by this function.
 336:Generated_Source\PSoC6/ADC_1.c **** *
 337:Generated_Source\PSoC6/ADC_1.c **** *******************************************************************************/
 338:Generated_Source\PSoC6/ADC_1.c **** void ADC_1_SetEosMask(uint32_t mask)
 339:Generated_Source\PSoC6/ADC_1.c **** {
 1299              		.loc 5 339 0
 1300              		.cfi_startproc
 1301              		@ args = 0, pretend = 0, frame = 16
 1302              		@ frame_needed = 1, uses_anonymous_args = 0
 1303 0000 80B5     		push	{r7, lr}
 1304              		.cfi_def_cfa_offset 8
 1305              		.cfi_offset 7, -8
 1306              		.cfi_offset 14, -4
 1307 0002 84B0     		sub	sp, sp, #16
 1308              		.cfi_def_cfa_offset 24
 1309 0004 00AF     		add	r7, sp, #0
 1310              		.cfi_def_cfa_register 7
 1311 0006 7860     		str	r0, [r7, #4]
 340:Generated_Source\PSoC6/ADC_1.c ****     uint32_t intrMaskReg;
 341:Generated_Source\PSoC6/ADC_1.c **** 
 342:Generated_Source\PSoC6/ADC_1.c ****     intrMaskReg = (0uL == mask) ? CY_SAR_DEINIT : SAR_INTR_MASK_EOS_MASK_Msk;
 1312              		.loc 5 342 0
 1313 0008 7B68     		ldr	r3, [r7, #4]
 1314 000a 5A1E     		subs	r2, r3, #1
 1315 000c 9341     		sbcs	r3, r3, r2
 1316 000e DBB2     		uxtb	r3, r3
 1317 0010 FB60     		str	r3, [r7, #12]
 343:Generated_Source\PSoC6/ADC_1.c **** 
 344:Generated_Source\PSoC6/ADC_1.c ****     Cy_SAR_SetInterruptMask(ADC_1_SAR__HW, intrMaskReg);
 1318              		.loc 5 344 0
 1319 0012 FB68     		ldr	r3, [r7, #12]
 1320 0014 044A     		ldr	r2, .L82
 1321 0016 1900     		movs	r1, r3
 1322 0018 1000     		movs	r0, r2
 1323 001a FFF7FEFF 		bl	Cy_SAR_SetInterruptMask
 345:Generated_Source\PSoC6/ADC_1.c **** }
 1324              		.loc 5 345 0
 1325 001e C046     		nop
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 124


 1326 0020 BD46     		mov	sp, r7
 1327 0022 04B0     		add	sp, sp, #16
 1328              		@ sp needed
 1329 0024 80BD     		pop	{r7, pc}
 1330              	.L83:
 1331 0026 C046     		.align	2
 1332              	.L82:
 1333 0028 00001D41 		.word	1092419584
 1334              		.cfi_endproc
 1335              	.LFE194:
 1336              		.size	ADC_1_SetEosMask, .-ADC_1_SetEosMask
 1337              		.section	.text.ADC_1_SetChanMask,"ax",%progbits
 1338              		.align	2
 1339              		.global	ADC_1_SetChanMask
 1340              		.code	16
 1341              		.thumb_func
 1342              		.type	ADC_1_SetChanMask, %function
 1343              	ADC_1_SetChanMask:
 1344              	.LFB195:
 346:Generated_Source\PSoC6/ADC_1.c **** 
 347:Generated_Source\PSoC6/ADC_1.c **** /******************************************************************************
 348:Generated_Source\PSoC6/ADC_1.c **** * Function Name: ADC_1_SetChanMask
 349:Generated_Source\PSoC6/ADC_1.c **** ****************************************************************************//*
 350:Generated_Source\PSoC6/ADC_1.c **** *
 351:Generated_Source\PSoC6/ADC_1.c **** * \brief Sets enable/disable mask for all channels in current configuration.
 352:Generated_Source\PSoC6/ADC_1.c **** *
 353:Generated_Source\PSoC6/ADC_1.c **** *
 354:Generated_Source\PSoC6/ADC_1.c **** * \param enableMask
 355:Generated_Source\PSoC6/ADC_1.c **** *  Channel enable/disable mask.
 356:Generated_Source\PSoC6/ADC_1.c **** *
 357:Generated_Source\PSoC6/ADC_1.c **** * \sideeffect
 358:Generated_Source\PSoC6/ADC_1.c **** *  None.
 359:Generated_Source\PSoC6/ADC_1.c **** *
 360:Generated_Source\PSoC6/ADC_1.c **** *******************************************************************************/
 361:Generated_Source\PSoC6/ADC_1.c **** void ADC_1_SetChanMask(uint32_t enableMask)
 362:Generated_Source\PSoC6/ADC_1.c **** {
 1345              		.loc 5 362 0
 1346              		.cfi_startproc
 1347              		@ args = 0, pretend = 0, frame = 16
 1348              		@ frame_needed = 1, uses_anonymous_args = 0
 1349 0000 80B5     		push	{r7, lr}
 1350              		.cfi_def_cfa_offset 8
 1351              		.cfi_offset 7, -8
 1352              		.cfi_offset 14, -4
 1353 0002 84B0     		sub	sp, sp, #16
 1354              		.cfi_def_cfa_offset 24
 1355 0004 00AF     		add	r7, sp, #0
 1356              		.cfi_def_cfa_register 7
 1357 0006 7860     		str	r0, [r7, #4]
 363:Generated_Source\PSoC6/ADC_1.c ****     uint32 chanCount = ADC_1_allConfigs[ADC_1_currentConfig].numChannels;
 1358              		.loc 5 363 0
 1359 0008 0E4B     		ldr	r3, .L85
 1360 000a 1A68     		ldr	r2, [r3]
 1361 000c 0E49     		ldr	r1, .L85+4
 1362 000e 1300     		movs	r3, r2
 1363 0010 9B00     		lsls	r3, r3, #2
 1364 0012 9B18     		adds	r3, r3, r2
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 125


 1365 0014 9B00     		lsls	r3, r3, #2
 1366 0016 CB18     		adds	r3, r1, r3
 1367 0018 0433     		adds	r3, r3, #4
 1368 001a 1B68     		ldr	r3, [r3]
 1369 001c FB60     		str	r3, [r7, #12]
 364:Generated_Source\PSoC6/ADC_1.c ****     enableMask &= (uint32)((uint32)(1ul << chanCount) - 1ul);
 1370              		.loc 5 364 0
 1371 001e 0122     		movs	r2, #1
 1372 0020 FB68     		ldr	r3, [r7, #12]
 1373 0022 9A40     		lsls	r2, r2, r3
 1374 0024 1300     		movs	r3, r2
 1375 0026 5A1E     		subs	r2, r3, #1
 1376 0028 7B68     		ldr	r3, [r7, #4]
 1377 002a 1340     		ands	r3, r2
 1378 002c 7B60     		str	r3, [r7, #4]
 365:Generated_Source\PSoC6/ADC_1.c **** 
 366:Generated_Source\PSoC6/ADC_1.c ****     Cy_SAR_SetChanMask(ADC_1_SAR__HW, enableMask);
 1379              		.loc 5 366 0
 1380 002e 7B68     		ldr	r3, [r7, #4]
 1381 0030 064A     		ldr	r2, .L85+8
 1382 0032 1900     		movs	r1, r3
 1383 0034 1000     		movs	r0, r2
 1384 0036 FFF7FEFF 		bl	Cy_SAR_SetChanMask
 367:Generated_Source\PSoC6/ADC_1.c **** }
 1385              		.loc 5 367 0
 1386 003a C046     		nop
 1387 003c BD46     		mov	sp, r7
 1388 003e 04B0     		add	sp, sp, #16
 1389              		@ sp needed
 1390 0040 80BD     		pop	{r7, pc}
 1391              	.L86:
 1392 0042 C046     		.align	2
 1393              	.L85:
 1394 0044 00000000 		.word	ADC_1_currentConfig
 1395 0048 00000000 		.word	ADC_1_allConfigs
 1396 004c 00001D41 		.word	1092419584
 1397              		.cfi_endproc
 1398              	.LFE195:
 1399              		.size	ADC_1_SetChanMask, .-ADC_1_SetChanMask
 1400              		.section	.text.ADC_1_IsEndConversion,"ax",%progbits
 1401              		.align	2
 1402              		.global	ADC_1_IsEndConversion
 1403              		.code	16
 1404              		.thumb_func
 1405              		.type	ADC_1_IsEndConversion, %function
 1406              	ADC_1_IsEndConversion:
 1407              	.LFB196:
 368:Generated_Source\PSoC6/ADC_1.c **** 
 369:Generated_Source\PSoC6/ADC_1.c **** /*******************************************************************************
 370:Generated_Source\PSoC6/ADC_1.c **** * Function Name: ADC_1_IsEndConversion
 371:Generated_Source\PSoC6/ADC_1.c **** ****************************************************************************//**
 372:Generated_Source\PSoC6/ADC_1.c **** *
 373:Generated_Source\PSoC6/ADC_1.c **** * \brief Immediately returns the status of the conversion or does not return
 374:Generated_Source\PSoC6/ADC_1.c **** * (blocking) until the conversion completes, depending on the retMode parameter.
 375:Generated_Source\PSoC6/ADC_1.c **** * In blocking mode, there is a time out of about 10 seconds for a CPU speed of
 376:Generated_Source\PSoC6/ADC_1.c **** * 100 Mhz.
 377:Generated_Source\PSoC6/ADC_1.c **** *
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 126


 378:Generated_Source\PSoC6/ADC_1.c **** * \param retMode Check conversion return mode.
 379:Generated_Source\PSoC6/ADC_1.c **** *
 380:Generated_Source\PSoC6/ADC_1.c **** * \return uint32_t: If a nonzero value is returned, the last conversion is complete.
 381:Generated_Source\PSoC6/ADC_1.c **** * If the returned value is zero, the ADC_1 is still calculating the last result.
 382:Generated_Source\PSoC6/ADC_1.c **** *
 383:Generated_Source\PSoC6/ADC_1.c **** * \sideeffect This function reads the end of conversion status, and clears it afterward.
 384:Generated_Source\PSoC6/ADC_1.c **** *
 385:Generated_Source\PSoC6/ADC_1.c **** *******************************************************************************/
 386:Generated_Source\PSoC6/ADC_1.c **** uint32_t ADC_1_IsEndConversion(cy_en_sar_return_mode_t retMode)
 387:Generated_Source\PSoC6/ADC_1.c **** {
 1408              		.loc 5 387 0
 1409              		.cfi_startproc
 1410              		@ args = 0, pretend = 0, frame = 16
 1411              		@ frame_needed = 1, uses_anonymous_args = 0
 1412 0000 80B5     		push	{r7, lr}
 1413              		.cfi_def_cfa_offset 8
 1414              		.cfi_offset 7, -8
 1415              		.cfi_offset 14, -4
 1416 0002 84B0     		sub	sp, sp, #16
 1417              		.cfi_def_cfa_offset 24
 1418 0004 00AF     		add	r7, sp, #0
 1419              		.cfi_def_cfa_register 7
 1420 0006 0200     		movs	r2, r0
 1421 0008 FB1D     		adds	r3, r7, #7
 1422 000a 1A70     		strb	r2, [r3]
 388:Generated_Source\PSoC6/ADC_1.c ****     uint32 endOfConversion = 0u;
 1423              		.loc 5 388 0
 1424 000c 0023     		movs	r3, #0
 1425 000e FB60     		str	r3, [r7, #12]
 389:Generated_Source\PSoC6/ADC_1.c ****     cy_en_sar_status_t result;
 390:Generated_Source\PSoC6/ADC_1.c **** 
 391:Generated_Source\PSoC6/ADC_1.c ****     result = Cy_SAR_IsEndConversion(ADC_1_SAR__HW, retMode);
 1426              		.loc 5 391 0
 1427 0010 FB1D     		adds	r3, r7, #7
 1428 0012 1B78     		ldrb	r3, [r3]
 1429 0014 084A     		ldr	r2, .L90
 1430 0016 1900     		movs	r1, r3
 1431 0018 1000     		movs	r0, r2
 1432 001a FFF7FEFF 		bl	Cy_SAR_IsEndConversion
 1433 001e 0300     		movs	r3, r0
 1434 0020 BB60     		str	r3, [r7, #8]
 392:Generated_Source\PSoC6/ADC_1.c **** 
 393:Generated_Source\PSoC6/ADC_1.c ****     if (result == CY_SAR_SUCCESS)
 1435              		.loc 5 393 0
 1436 0022 BB68     		ldr	r3, [r7, #8]
 1437 0024 002B     		cmp	r3, #0
 1438 0026 01D1     		bne	.L88
 394:Generated_Source\PSoC6/ADC_1.c ****     {
 395:Generated_Source\PSoC6/ADC_1.c ****         endOfConversion = 1u;
 1439              		.loc 5 395 0
 1440 0028 0123     		movs	r3, #1
 1441 002a FB60     		str	r3, [r7, #12]
 1442              	.L88:
 396:Generated_Source\PSoC6/ADC_1.c ****     }
 397:Generated_Source\PSoC6/ADC_1.c **** 
 398:Generated_Source\PSoC6/ADC_1.c ****     return endOfConversion;
 1443              		.loc 5 398 0
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 127


 1444 002c FB68     		ldr	r3, [r7, #12]
 399:Generated_Source\PSoC6/ADC_1.c **** }
 1445              		.loc 5 399 0
 1446 002e 1800     		movs	r0, r3
 1447 0030 BD46     		mov	sp, r7
 1448 0032 04B0     		add	sp, sp, #16
 1449              		@ sp needed
 1450 0034 80BD     		pop	{r7, pc}
 1451              	.L91:
 1452 0036 C046     		.align	2
 1453              	.L90:
 1454 0038 00001D41 		.word	1092419584
 1455              		.cfi_endproc
 1456              	.LFE196:
 1457              		.size	ADC_1_IsEndConversion, .-ADC_1_IsEndConversion
 1458              		.section	.text.ADC_1_Init,"ax",%progbits
 1459              		.align	2
 1460              		.global	ADC_1_Init
 1461              		.code	16
 1462              		.thumb_func
 1463              		.type	ADC_1_Init, %function
 1464              	ADC_1_Init:
 1465              	.LFB197:
 400:Generated_Source\PSoC6/ADC_1.c **** 
 401:Generated_Source\PSoC6/ADC_1.c **** /* ****************************************************************************
 402:Generated_Source\PSoC6/ADC_1.c **** * Function Name: ADC_1_Init
 403:Generated_Source\PSoC6/ADC_1.c **** ****************************************************************************//*
 404:Generated_Source\PSoC6/ADC_1.c **** *
 405:Generated_Source\PSoC6/ADC_1.c **** * \brief Initialize the component according to parameters defined in the
 406:Generated_Source\PSoC6/ADC_1.c **** * customizer.
 407:Generated_Source\PSoC6/ADC_1.c **** *
 408:Generated_Source\PSoC6/ADC_1.c **** * \param None
 409:Generated_Source\PSoC6/ADC_1.c **** *
 410:Generated_Source\PSoC6/ADC_1.c **** * \return None
 411:Generated_Source\PSoC6/ADC_1.c **** *
 412:Generated_Source\PSoC6/ADC_1.c **** * \sideeffect None
 413:Generated_Source\PSoC6/ADC_1.c **** *
 414:Generated_Source\PSoC6/ADC_1.c **** *******************************************************************************/
 415:Generated_Source\PSoC6/ADC_1.c **** void ADC_1_Init(void)
 416:Generated_Source\PSoC6/ADC_1.c **** {
 1466              		.loc 5 416 0
 1467              		.cfi_startproc
 1468              		@ args = 0, pretend = 0, frame = 8
 1469              		@ frame_needed = 1, uses_anonymous_args = 0
 1470 0000 80B5     		push	{r7, lr}
 1471              		.cfi_def_cfa_offset 8
 1472              		.cfi_offset 7, -8
 1473              		.cfi_offset 14, -4
 1474 0002 82B0     		sub	sp, sp, #8
 1475              		.cfi_def_cfa_offset 16
 1476 0004 00AF     		add	r7, sp, #0
 1477              		.cfi_def_cfa_register 7
 417:Generated_Source\PSoC6/ADC_1.c ****     uint32_t configNum = 0u;
 1478              		.loc 5 417 0
 1479 0006 0023     		movs	r3, #0
 1480 0008 7B60     		str	r3, [r7, #4]
 418:Generated_Source\PSoC6/ADC_1.c **** 
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 128


 419:Generated_Source\PSoC6/ADC_1.c ****     if(0u == ADC_1_initVar)
 1481              		.loc 5 419 0
 1482 000a 0D4B     		ldr	r3, .L95
 1483 000c 1B78     		ldrb	r3, [r3]
 1484 000e 002B     		cmp	r3, #0
 1485 0010 12D1     		bne	.L94
 420:Generated_Source\PSoC6/ADC_1.c ****     {
 421:Generated_Source\PSoC6/ADC_1.c ****         /* Interrupt core assignment will be up to the user. Initialize but do not enable the inter
 422:Generated_Source\PSoC6/ADC_1.c ****         #ifdef ADC_1_IRQ__INTC_CORTEXM4_ASSIGNED
 423:Generated_Source\PSoC6/ADC_1.c ****         #if (CY_CPU_CORTEX_M4)
 424:Generated_Source\PSoC6/ADC_1.c ****             (void)Cy_SysInt_Init(&ADC_1_IRQ_cfg, &ADC_1_ISR);
 425:Generated_Source\PSoC6/ADC_1.c ****         #endif
 426:Generated_Source\PSoC6/ADC_1.c ****         #endif
 427:Generated_Source\PSoC6/ADC_1.c **** 
 428:Generated_Source\PSoC6/ADC_1.c ****         #ifdef ADC_1_IRQ__INTC_CORTEXM0P_ASSIGNED
 429:Generated_Source\PSoC6/ADC_1.c ****         #if (CY_CPU_CORTEX_M0P)
 430:Generated_Source\PSoC6/ADC_1.c ****             (void)Cy_SysInt_Init(&ADC_1_IRQ_cfg, &ADC_1_ISR);
 431:Generated_Source\PSoC6/ADC_1.c ****         #endif
 432:Generated_Source\PSoC6/ADC_1.c ****         #endif
 433:Generated_Source\PSoC6/ADC_1.c **** 
 434:Generated_Source\PSoC6/ADC_1.c ****         /* Initialize configuration zero if SelectConfig has not been called */
 435:Generated_Source\PSoC6/ADC_1.c ****         if(0u == ADC_1_selected)
 1486              		.loc 5 435 0
 1487 0012 0C4B     		ldr	r3, .L95+4
 1488 0014 1B78     		ldrb	r3, [r3]
 1489 0016 002B     		cmp	r3, #0
 1490 0018 0ED1     		bne	.L94
 436:Generated_Source\PSoC6/ADC_1.c ****         {
 437:Generated_Source\PSoC6/ADC_1.c ****             ADC_1_selected = 1u;
 1491              		.loc 5 437 0
 1492 001a 0A4B     		ldr	r3, .L95+4
 1493 001c 0122     		movs	r2, #1
 1494 001e 1A70     		strb	r2, [r3]
 438:Generated_Source\PSoC6/ADC_1.c ****             configNum = 0uL;
 1495              		.loc 5 438 0
 1496 0020 0023     		movs	r3, #0
 1497 0022 7B60     		str	r3, [r7, #4]
 439:Generated_Source\PSoC6/ADC_1.c **** 
 440:Generated_Source\PSoC6/ADC_1.c ****             /* Change Vref selection if is was routed by Creator. Break. */
 441:Generated_Source\PSoC6/ADC_1.c ****             #if (ADC_1_VREF_ROUTED)
 442:Generated_Source\PSoC6/ADC_1.c ****                 ADC_1_vrefAMux_DisconnectAll();
 443:Generated_Source\PSoC6/ADC_1.c ****             #endif
 444:Generated_Source\PSoC6/ADC_1.c **** 
 445:Generated_Source\PSoC6/ADC_1.c ****             ADC_1_InitConfig(&ADC_1_allConfigs[configNum]);
 1498              		.loc 5 445 0
 1499 0024 7A68     		ldr	r2, [r7, #4]
 1500 0026 1300     		movs	r3, r2
 1501 0028 9B00     		lsls	r3, r3, #2
 1502 002a 9B18     		adds	r3, r3, r2
 1503 002c 9B00     		lsls	r3, r3, #2
 1504 002e 064A     		ldr	r2, .L95+8
 1505 0030 9B18     		adds	r3, r3, r2
 1506 0032 1800     		movs	r0, r3
 1507 0034 FFF7FEFF 		bl	ADC_1_InitConfig
 1508              	.L94:
 446:Generated_Source\PSoC6/ADC_1.c **** 
 447:Generated_Source\PSoC6/ADC_1.c ****             /* Change Vref selection if is was routed by Creator. Make. */
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 129


 448:Generated_Source\PSoC6/ADC_1.c ****             #if (ADC_1_VREF_ROUTED)
 449:Generated_Source\PSoC6/ADC_1.c ****                 ADC_1_vrefAMux_Select((uint8)configNum);
 450:Generated_Source\PSoC6/ADC_1.c ****             #endif
 451:Generated_Source\PSoC6/ADC_1.c ****         }
 452:Generated_Source\PSoC6/ADC_1.c ****     }
 453:Generated_Source\PSoC6/ADC_1.c **** }
 1509              		.loc 5 453 0
 1510 0038 C046     		nop
 1511 003a BD46     		mov	sp, r7
 1512 003c 02B0     		add	sp, sp, #8
 1513              		@ sp needed
 1514 003e 80BD     		pop	{r7, pc}
 1515              	.L96:
 1516              		.align	2
 1517              	.L95:
 1518 0040 00000000 		.word	ADC_1_initVar
 1519 0044 00000000 		.word	ADC_1_selected
 1520 0048 00000000 		.word	ADC_1_allConfigs
 1521              		.cfi_endproc
 1522              	.LFE197:
 1523              		.size	ADC_1_Init, .-ADC_1_Init
 1524              		.text
 1525              	.Letext0:
 1526              		.file 6 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 1527              		.file 7 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 1528              		.file 8 "Generated_Source\\PSoC6\\pdl\\devices/psoc6/include/ip/cyip_peri.h"
 1529              		.file 9 "Generated_Source\\PSoC6\\pdl\\devices/psoc6/include/ip/cyip_sar.h"
 1530              		.file 10 "Generated_Source\\PSoC6\\pdl\\devices/psoc6/include/psoc6_01_config.h"
 1531              		.file 11 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/device/cy_device.h"
 1532              		.file 12 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/syslib/cy_syslib.h"
 1533              		.section	.debug_info,"",%progbits
 1534              	.Ldebug_info0:
 1535 0000 C2130000 		.4byte	0x13c2
 1536 0004 0400     		.2byte	0x4
 1537 0006 00000000 		.4byte	.Ldebug_abbrev0
 1538 000a 04       		.byte	0x4
 1539 000b 01       		.uleb128 0x1
 1540 000c 22100000 		.4byte	.LASF294
 1541 0010 0C       		.byte	0xc
 1542 0011 51010000 		.4byte	.LASF295
 1543 0015 31060000 		.4byte	.LASF296
 1544 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1545 001d 00000000 		.4byte	0
 1546 0021 00000000 		.4byte	.Ldebug_line0
 1547 0025 02       		.uleb128 0x2
 1548 0026 02       		.byte	0x2
 1549 0027 05       		.byte	0x5
 1550 0028 B8020000 		.4byte	.LASF0
 1551 002c 02       		.uleb128 0x2
 1552 002d 01       		.byte	0x1
 1553 002e 08       		.byte	0x8
 1554 002f 8F0B0000 		.4byte	.LASF1
 1555 0033 02       		.uleb128 0x2
 1556 0034 01       		.byte	0x1
 1557 0035 06       		.byte	0x6
 1558 0036 EE0F0000 		.4byte	.LASF2
 1559 003a 03       		.uleb128 0x3
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 130


 1560 003b 6D0D0000 		.4byte	.LASF3
 1561 003f 06       		.byte	0x6
 1562 0040 1D       		.byte	0x1d
 1563 0041 2C000000 		.4byte	0x2c
 1564 0045 03       		.uleb128 0x3
 1565 0046 6C090000 		.4byte	.LASF4
 1566 004a 06       		.byte	0x6
 1567 004b 29       		.byte	0x29
 1568 004c 25000000 		.4byte	0x25
 1569 0050 03       		.uleb128 0x3
 1570 0051 2E050000 		.4byte	.LASF5
 1571 0055 06       		.byte	0x6
 1572 0056 2B       		.byte	0x2b
 1573 0057 5B000000 		.4byte	0x5b
 1574 005b 02       		.uleb128 0x2
 1575 005c 02       		.byte	0x2
 1576 005d 07       		.byte	0x7
 1577 005e DB0A0000 		.4byte	.LASF6
 1578 0062 02       		.uleb128 0x2
 1579 0063 04       		.byte	0x4
 1580 0064 05       		.byte	0x5
 1581 0065 900C0000 		.4byte	.LASF7
 1582 0069 03       		.uleb128 0x3
 1583 006a BA0E0000 		.4byte	.LASF8
 1584 006e 06       		.byte	0x6
 1585 006f 41       		.byte	0x41
 1586 0070 74000000 		.4byte	0x74
 1587 0074 02       		.uleb128 0x2
 1588 0075 04       		.byte	0x4
 1589 0076 07       		.byte	0x7
 1590 0077 FD0D0000 		.4byte	.LASF9
 1591 007b 02       		.uleb128 0x2
 1592 007c 08       		.byte	0x8
 1593 007d 05       		.byte	0x5
 1594 007e BF080000 		.4byte	.LASF10
 1595 0082 02       		.uleb128 0x2
 1596 0083 08       		.byte	0x8
 1597 0084 07       		.byte	0x7
 1598 0085 BE040000 		.4byte	.LASF11
 1599 0089 04       		.uleb128 0x4
 1600 008a 04       		.byte	0x4
 1601 008b 05       		.byte	0x5
 1602 008c 696E7400 		.ascii	"int\000"
 1603 0090 02       		.uleb128 0x2
 1604 0091 04       		.byte	0x4
 1605 0092 07       		.byte	0x7
 1606 0093 82010000 		.4byte	.LASF12
 1607 0097 03       		.uleb128 0x3
 1608 0098 4A080000 		.4byte	.LASF13
 1609 009c 07       		.byte	0x7
 1610 009d 18       		.byte	0x18
 1611 009e 3A000000 		.4byte	0x3a
 1612 00a2 03       		.uleb128 0x3
 1613 00a3 9C040000 		.4byte	.LASF14
 1614 00a7 07       		.byte	0x7
 1615 00a8 20       		.byte	0x20
 1616 00a9 45000000 		.4byte	0x45
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 131


 1617 00ad 03       		.uleb128 0x3
 1618 00ae FA0A0000 		.4byte	.LASF15
 1619 00b2 07       		.byte	0x7
 1620 00b3 24       		.byte	0x24
 1621 00b4 50000000 		.4byte	0x50
 1622 00b8 03       		.uleb128 0x3
 1623 00b9 16040000 		.4byte	.LASF16
 1624 00bd 07       		.byte	0x7
 1625 00be 30       		.byte	0x30
 1626 00bf 69000000 		.4byte	0x69
 1627 00c3 02       		.uleb128 0x2
 1628 00c4 04       		.byte	0x4
 1629 00c5 07       		.byte	0x7
 1630 00c6 C20B0000 		.4byte	.LASF17
 1631 00ca 05       		.uleb128 0x5
 1632 00cb B8000000 		.4byte	0xb8
 1633 00cf 06       		.uleb128 0x6
 1634 00d0 CA000000 		.4byte	0xca
 1635 00d4 07       		.uleb128 0x7
 1636 00d5 CF000000 		.4byte	0xcf
 1637 00d9 E4000000 		.4byte	0xe4
 1638 00dd 08       		.uleb128 0x8
 1639 00de C3000000 		.4byte	0xc3
 1640 00e2 01       		.byte	0x1
 1641 00e3 00       		.byte	0
 1642 00e4 07       		.uleb128 0x7
 1643 00e5 CA000000 		.4byte	0xca
 1644 00e9 F4000000 		.4byte	0xf4
 1645 00ed 08       		.uleb128 0x8
 1646 00ee C3000000 		.4byte	0xc3
 1647 00f2 7F       		.byte	0x7f
 1648 00f3 00       		.byte	0
 1649 00f4 07       		.uleb128 0x7
 1650 00f5 CA000000 		.4byte	0xca
 1651 00f9 04010000 		.4byte	0x104
 1652 00fd 08       		.uleb128 0x8
 1653 00fe C3000000 		.4byte	0xc3
 1654 0102 0F       		.byte	0xf
 1655 0103 00       		.byte	0
 1656 0104 07       		.uleb128 0x7
 1657 0105 CF000000 		.4byte	0xcf
 1658 0109 14010000 		.4byte	0x114
 1659 010d 08       		.uleb128 0x8
 1660 010e C3000000 		.4byte	0xc3
 1661 0112 06       		.byte	0x6
 1662 0113 00       		.byte	0
 1663 0114 09       		.uleb128 0x9
 1664 0115 40       		.byte	0x40
 1665 0116 08       		.byte	0x8
 1666 0117 27       		.byte	0x27
 1667 0118 59010000 		.4byte	0x159
 1668 011c 0A       		.uleb128 0xa
 1669 011d F8060000 		.4byte	.LASF18
 1670 0121 08       		.byte	0x8
 1671 0122 28       		.byte	0x28
 1672 0123 CA000000 		.4byte	0xca
 1673 0127 00       		.byte	0
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 132


 1674 0128 0A       		.uleb128 0xa
 1675 0129 27000000 		.4byte	.LASF19
 1676 012d 08       		.byte	0x8
 1677 012e 29       		.byte	0x29
 1678 012f 5E010000 		.4byte	0x15e
 1679 0133 04       		.byte	0x4
 1680 0134 0A       		.uleb128 0xa
 1681 0135 8A040000 		.4byte	.LASF20
 1682 0139 08       		.byte	0x8
 1683 013a 2A       		.byte	0x2a
 1684 013b CA000000 		.4byte	0xca
 1685 013f 20       		.byte	0x20
 1686 0140 0A       		.uleb128 0xa
 1687 0141 C2110000 		.4byte	.LASF21
 1688 0145 08       		.byte	0x8
 1689 0146 2B       		.byte	0x2b
 1690 0147 CA000000 		.4byte	0xca
 1691 014b 24       		.byte	0x24
 1692 014c 0A       		.uleb128 0xa
 1693 014d 2D110000 		.4byte	.LASF22
 1694 0151 08       		.byte	0x8
 1695 0152 2C       		.byte	0x2c
 1696 0153 78010000 		.4byte	0x178
 1697 0157 28       		.byte	0x28
 1698 0158 00       		.byte	0
 1699 0159 05       		.uleb128 0x5
 1700 015a 04010000 		.4byte	0x104
 1701 015e 06       		.uleb128 0x6
 1702 015f 59010000 		.4byte	0x159
 1703 0163 07       		.uleb128 0x7
 1704 0164 CF000000 		.4byte	0xcf
 1705 0168 73010000 		.4byte	0x173
 1706 016c 08       		.uleb128 0x8
 1707 016d C3000000 		.4byte	0xc3
 1708 0171 05       		.byte	0x5
 1709 0172 00       		.byte	0
 1710 0173 05       		.uleb128 0x5
 1711 0174 63010000 		.4byte	0x163
 1712 0178 06       		.uleb128 0x6
 1713 0179 73010000 		.4byte	0x173
 1714 017d 03       		.uleb128 0x3
 1715 017e 4D110000 		.4byte	.LASF23
 1716 0182 08       		.byte	0x8
 1717 0183 2D       		.byte	0x2d
 1718 0184 14010000 		.4byte	0x114
 1719 0188 0B       		.uleb128 0xb
 1720 0189 0002     		.2byte	0x200
 1721 018b 08       		.byte	0x8
 1722 018c 32       		.byte	0x32
 1723 018d 9E010000 		.4byte	0x19e
 1724 0191 0A       		.uleb128 0xa
 1725 0192 6C070000 		.4byte	.LASF24
 1726 0196 08       		.byte	0x8
 1727 0197 33       		.byte	0x33
 1728 0198 9E010000 		.4byte	0x19e
 1729 019c 00       		.byte	0
 1730 019d 00       		.byte	0
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 133


 1731 019e 05       		.uleb128 0x5
 1732 019f E4000000 		.4byte	0xe4
 1733 01a3 03       		.uleb128 0x3
 1734 01a4 14000000 		.4byte	.LASF25
 1735 01a8 08       		.byte	0x8
 1736 01a9 34       		.byte	0x34
 1737 01aa 88010000 		.4byte	0x188
 1738 01ae 09       		.uleb128 0x9
 1739 01af 40       		.byte	0x40
 1740 01b0 08       		.byte	0x8
 1741 01b1 39       		.byte	0x39
 1742 01b2 FF010000 		.4byte	0x1ff
 1743 01b6 0A       		.uleb128 0xa
 1744 01b7 E6100000 		.4byte	.LASF26
 1745 01bb 08       		.byte	0x8
 1746 01bc 3A       		.byte	0x3a
 1747 01bd CA000000 		.4byte	0xca
 1748 01c1 00       		.byte	0
 1749 01c2 0A       		.uleb128 0xa
 1750 01c3 23110000 		.4byte	.LASF27
 1751 01c7 08       		.byte	0x8
 1752 01c8 3B       		.byte	0x3b
 1753 01c9 CA000000 		.4byte	0xca
 1754 01cd 04       		.byte	0x4
 1755 01ce 0A       		.uleb128 0xa
 1756 01cf 27000000 		.4byte	.LASF19
 1757 01d3 08       		.byte	0x8
 1758 01d4 3C       		.byte	0x3c
 1759 01d5 04020000 		.4byte	0x204
 1760 01d9 08       		.byte	0x8
 1761 01da 0A       		.uleb128 0xa
 1762 01db EC100000 		.4byte	.LASF28
 1763 01df 08       		.byte	0x8
 1764 01e0 3D       		.byte	0x3d
 1765 01e1 CF000000 		.4byte	0xcf
 1766 01e5 20       		.byte	0x20
 1767 01e6 0A       		.uleb128 0xa
 1768 01e7 28110000 		.4byte	.LASF29
 1769 01eb 08       		.byte	0x8
 1770 01ec 3E       		.byte	0x3e
 1771 01ed CA000000 		.4byte	0xca
 1772 01f1 24       		.byte	0x24
 1773 01f2 0A       		.uleb128 0xa
 1774 01f3 2D110000 		.4byte	.LASF22
 1775 01f7 08       		.byte	0x8
 1776 01f8 3F       		.byte	0x3f
 1777 01f9 0E020000 		.4byte	0x20e
 1778 01fd 28       		.byte	0x28
 1779 01fe 00       		.byte	0
 1780 01ff 05       		.uleb128 0x5
 1781 0200 63010000 		.4byte	0x163
 1782 0204 06       		.uleb128 0x6
 1783 0205 FF010000 		.4byte	0x1ff
 1784 0209 05       		.uleb128 0x5
 1785 020a 63010000 		.4byte	0x163
 1786 020e 06       		.uleb128 0x6
 1787 020f 09020000 		.4byte	0x209
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 134


 1788 0213 03       		.uleb128 0x3
 1789 0214 02040000 		.4byte	.LASF30
 1790 0218 08       		.byte	0x8
 1791 0219 40       		.byte	0x40
 1792 021a AE010000 		.4byte	0x1ae
 1793 021e 09       		.uleb128 0x9
 1794 021f 40       		.byte	0x40
 1795 0220 08       		.byte	0x8
 1796 0221 45       		.byte	0x45
 1797 0222 6F020000 		.4byte	0x26f
 1798 0226 0A       		.uleb128 0xa
 1799 0227 E6100000 		.4byte	.LASF26
 1800 022b 08       		.byte	0x8
 1801 022c 46       		.byte	0x46
 1802 022d CF000000 		.4byte	0xcf
 1803 0231 00       		.byte	0
 1804 0232 0A       		.uleb128 0xa
 1805 0233 23110000 		.4byte	.LASF27
 1806 0237 08       		.byte	0x8
 1807 0238 47       		.byte	0x47
 1808 0239 CA000000 		.4byte	0xca
 1809 023d 04       		.byte	0x4
 1810 023e 0A       		.uleb128 0xa
 1811 023f 27000000 		.4byte	.LASF19
 1812 0243 08       		.byte	0x8
 1813 0244 48       		.byte	0x48
 1814 0245 74020000 		.4byte	0x274
 1815 0249 08       		.byte	0x8
 1816 024a 0A       		.uleb128 0xa
 1817 024b EC100000 		.4byte	.LASF28
 1818 024f 08       		.byte	0x8
 1819 0250 49       		.byte	0x49
 1820 0251 CF000000 		.4byte	0xcf
 1821 0255 20       		.byte	0x20
 1822 0256 0A       		.uleb128 0xa
 1823 0257 28110000 		.4byte	.LASF29
 1824 025b 08       		.byte	0x8
 1825 025c 4A       		.byte	0x4a
 1826 025d CA000000 		.4byte	0xca
 1827 0261 24       		.byte	0x24
 1828 0262 0A       		.uleb128 0xa
 1829 0263 2D110000 		.4byte	.LASF22
 1830 0267 08       		.byte	0x8
 1831 0268 4B       		.byte	0x4b
 1832 0269 7E020000 		.4byte	0x27e
 1833 026d 28       		.byte	0x28
 1834 026e 00       		.byte	0
 1835 026f 05       		.uleb128 0x5
 1836 0270 63010000 		.4byte	0x163
 1837 0274 06       		.uleb128 0x6
 1838 0275 6F020000 		.4byte	0x26f
 1839 0279 05       		.uleb128 0x5
 1840 027a 63010000 		.4byte	0x163
 1841 027e 06       		.uleb128 0x6
 1842 027f 79020000 		.4byte	0x279
 1843 0283 03       		.uleb128 0x3
 1844 0284 EE110000 		.4byte	.LASF31
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 135


 1845 0288 08       		.byte	0x8
 1846 0289 4C       		.byte	0x4c
 1847 028a 1E020000 		.4byte	0x21e
 1848 028e 0B       		.uleb128 0xb
 1849 028f 0054     		.2byte	0x5400
 1850 0291 08       		.byte	0x8
 1851 0292 69       		.byte	0x69
 1852 0293 66030000 		.4byte	0x366
 1853 0297 0C       		.uleb128 0xc
 1854 0298 475200   		.ascii	"GR\000"
 1855 029b 08       		.byte	0x8
 1856 029c 6A       		.byte	0x6a
 1857 029d 66030000 		.4byte	0x366
 1858 02a1 00       		.byte	0
 1859 02a2 0D       		.uleb128 0xd
 1860 02a3 B20C0000 		.4byte	.LASF32
 1861 02a7 08       		.byte	0x8
 1862 02a8 6B       		.byte	0x6b
 1863 02a9 CA000000 		.4byte	0xca
 1864 02ad 0004     		.2byte	0x400
 1865 02af 0D       		.uleb128 0xd
 1866 02b0 27000000 		.4byte	.LASF19
 1867 02b4 08       		.byte	0x8
 1868 02b5 6C       		.byte	0x6c
 1869 02b6 8B030000 		.4byte	0x38b
 1870 02ba 0404     		.2byte	0x404
 1871 02bc 0D       		.uleb128 0xd
 1872 02bd E2000000 		.4byte	.LASF33
 1873 02c1 08       		.byte	0x8
 1874 02c2 6D       		.byte	0x6d
 1875 02c3 A0030000 		.4byte	0x3a0
 1876 02c7 0008     		.2byte	0x800
 1877 02c9 0D       		.uleb128 0xd
 1878 02ca ED060000 		.4byte	.LASF34
 1879 02ce 08       		.byte	0x8
 1880 02cf 6E       		.byte	0x6e
 1881 02d0 A5030000 		.4byte	0x3a5
 1882 02d4 0009     		.2byte	0x900
 1883 02d6 0D       		.uleb128 0xd
 1884 02d7 4F020000 		.4byte	.LASF35
 1885 02db 08       		.byte	0x8
 1886 02dc 6F       		.byte	0x6f
 1887 02dd AA030000 		.4byte	0x3aa
 1888 02e1 000A     		.2byte	0xa00
 1889 02e3 0D       		.uleb128 0xd
 1890 02e4 9C060000 		.4byte	.LASF36
 1891 02e8 08       		.byte	0x8
 1892 02e9 70       		.byte	0x70
 1893 02ea BF030000 		.4byte	0x3bf
 1894 02ee 000B     		.2byte	0xb00
 1895 02f0 0D       		.uleb128 0xd
 1896 02f1 2D110000 		.4byte	.LASF22
 1897 02f5 08       		.byte	0x8
 1898 02f6 71       		.byte	0x71
 1899 02f7 CF000000 		.4byte	0xcf
 1900 02fb FC0B     		.2byte	0xbfc
 1901 02fd 0D       		.uleb128 0xd
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 136


 1902 02fe F8060000 		.4byte	.LASF18
 1903 0302 08       		.byte	0x8
 1904 0303 72       		.byte	0x72
 1905 0304 C4030000 		.4byte	0x3c4
 1906 0308 000C     		.2byte	0xc00
 1907 030a 0D       		.uleb128 0xd
 1908 030b 1B0C0000 		.4byte	.LASF37
 1909 030f 08       		.byte	0x8
 1910 0310 73       		.byte	0x73
 1911 0311 DE030000 		.4byte	0x3de
 1912 0315 000E     		.2byte	0xe00
 1913 0317 0D       		.uleb128 0xd
 1914 0318 B8050000 		.4byte	.LASF38
 1915 031c 08       		.byte	0x8
 1916 031d 74       		.byte	0x74
 1917 031e CA000000 		.4byte	0xca
 1918 0322 0010     		.2byte	0x1000
 1919 0324 0D       		.uleb128 0xd
 1920 0325 250C0000 		.4byte	.LASF39
 1921 0329 08       		.byte	0x8
 1922 032a 75       		.byte	0x75
 1923 032b F9030000 		.4byte	0x3f9
 1924 032f 0410     		.2byte	0x1004
 1925 0331 0D       		.uleb128 0xd
 1926 0332 89070000 		.4byte	.LASF40
 1927 0336 08       		.byte	0x8
 1928 0337 76       		.byte	0x76
 1929 0338 FE030000 		.4byte	0x3fe
 1930 033c 0020     		.2byte	0x2000
 1931 033e 0D       		.uleb128 0xd
 1932 033f 72020000 		.4byte	.LASF41
 1933 0343 08       		.byte	0x8
 1934 0344 77       		.byte	0x77
 1935 0345 0E040000 		.4byte	0x40e
 1936 0349 0040     		.2byte	0x4000
 1937 034b 0D       		.uleb128 0xd
 1938 034c 2F0C0000 		.4byte	.LASF42
 1939 0350 08       		.byte	0x8
 1940 0351 78       		.byte	0x78
 1941 0352 34040000 		.4byte	0x434
 1942 0356 0048     		.2byte	0x4800
 1943 0358 0D       		.uleb128 0xd
 1944 0359 4A090000 		.4byte	.LASF43
 1945 035d 08       		.byte	0x8
 1946 035e 79       		.byte	0x79
 1947 035f 39040000 		.4byte	0x439
 1948 0363 0050     		.2byte	0x5000
 1949 0365 00       		.byte	0
 1950 0366 07       		.uleb128 0x7
 1951 0367 7D010000 		.4byte	0x17d
 1952 036b 76030000 		.4byte	0x376
 1953 036f 08       		.uleb128 0x8
 1954 0370 C3000000 		.4byte	0xc3
 1955 0374 0F       		.byte	0xf
 1956 0375 00       		.byte	0
 1957 0376 07       		.uleb128 0x7
 1958 0377 CF000000 		.4byte	0xcf
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 137


 1959 037b 86030000 		.4byte	0x386
 1960 037f 08       		.uleb128 0x8
 1961 0380 C3000000 		.4byte	0xc3
 1962 0384 FE       		.byte	0xfe
 1963 0385 00       		.byte	0
 1964 0386 05       		.uleb128 0x5
 1965 0387 76030000 		.4byte	0x376
 1966 038b 06       		.uleb128 0x6
 1967 038c 86030000 		.4byte	0x386
 1968 0390 07       		.uleb128 0x7
 1969 0391 CA000000 		.4byte	0xca
 1970 0395 A0030000 		.4byte	0x3a0
 1971 0399 08       		.uleb128 0x8
 1972 039a C3000000 		.4byte	0xc3
 1973 039e 3F       		.byte	0x3f
 1974 039f 00       		.byte	0
 1975 03a0 05       		.uleb128 0x5
 1976 03a1 90030000 		.4byte	0x390
 1977 03a5 05       		.uleb128 0x5
 1978 03a6 90030000 		.4byte	0x390
 1979 03aa 05       		.uleb128 0x5
 1980 03ab 90030000 		.4byte	0x390
 1981 03af 07       		.uleb128 0x7
 1982 03b0 CA000000 		.4byte	0xca
 1983 03b4 BF030000 		.4byte	0x3bf
 1984 03b8 08       		.uleb128 0x8
 1985 03b9 C3000000 		.4byte	0xc3
 1986 03bd 3E       		.byte	0x3e
 1987 03be 00       		.byte	0
 1988 03bf 05       		.uleb128 0x5
 1989 03c0 AF030000 		.4byte	0x3af
 1990 03c4 05       		.uleb128 0x5
 1991 03c5 E4000000 		.4byte	0xe4
 1992 03c9 07       		.uleb128 0x7
 1993 03ca CF000000 		.4byte	0xcf
 1994 03ce D9030000 		.4byte	0x3d9
 1995 03d2 08       		.uleb128 0x8
 1996 03d3 C3000000 		.4byte	0xc3
 1997 03d7 7F       		.byte	0x7f
 1998 03d8 00       		.byte	0
 1999 03d9 05       		.uleb128 0x5
 2000 03da C9030000 		.4byte	0x3c9
 2001 03de 06       		.uleb128 0x6
 2002 03df D9030000 		.4byte	0x3d9
 2003 03e3 07       		.uleb128 0x7
 2004 03e4 CF000000 		.4byte	0xcf
 2005 03e8 F4030000 		.4byte	0x3f4
 2006 03ec 0E       		.uleb128 0xe
 2007 03ed C3000000 		.4byte	0xc3
 2008 03f1 FE03     		.2byte	0x3fe
 2009 03f3 00       		.byte	0
 2010 03f4 05       		.uleb128 0x5
 2011 03f5 E3030000 		.4byte	0x3e3
 2012 03f9 06       		.uleb128 0x6
 2013 03fa F4030000 		.4byte	0x3f4
 2014 03fe 07       		.uleb128 0x7
 2015 03ff A3010000 		.4byte	0x1a3
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 138


 2016 0403 0E040000 		.4byte	0x40e
 2017 0407 08       		.uleb128 0x8
 2018 0408 C3000000 		.4byte	0xc3
 2019 040c 0F       		.byte	0xf
 2020 040d 00       		.byte	0
 2021 040e 07       		.uleb128 0x7
 2022 040f 13020000 		.4byte	0x213
 2023 0413 1E040000 		.4byte	0x41e
 2024 0417 08       		.uleb128 0x8
 2025 0418 C3000000 		.4byte	0xc3
 2026 041c 1F       		.byte	0x1f
 2027 041d 00       		.byte	0
 2028 041e 07       		.uleb128 0x7
 2029 041f CF000000 		.4byte	0xcf
 2030 0423 2F040000 		.4byte	0x42f
 2031 0427 0E       		.uleb128 0xe
 2032 0428 C3000000 		.4byte	0xc3
 2033 042c FF01     		.2byte	0x1ff
 2034 042e 00       		.byte	0
 2035 042f 05       		.uleb128 0x5
 2036 0430 1E040000 		.4byte	0x41e
 2037 0434 06       		.uleb128 0x6
 2038 0435 2F040000 		.4byte	0x42f
 2039 0439 07       		.uleb128 0x7
 2040 043a 83020000 		.4byte	0x283
 2041 043e 49040000 		.4byte	0x449
 2042 0442 08       		.uleb128 0x8
 2043 0443 C3000000 		.4byte	0xc3
 2044 0447 0F       		.byte	0xf
 2045 0448 00       		.byte	0
 2046 0449 03       		.uleb128 0x3
 2047 044a 700C0000 		.4byte	.LASF44
 2048 044e 08       		.byte	0x8
 2049 044f 7B       		.byte	0x7b
 2050 0450 8E020000 		.4byte	0x28e
 2051 0454 07       		.uleb128 0x7
 2052 0455 CF000000 		.4byte	0xcf
 2053 0459 64040000 		.4byte	0x464
 2054 045d 08       		.uleb128 0x8
 2055 045e C3000000 		.4byte	0xc3
 2056 0462 0F       		.byte	0xf
 2057 0463 00       		.byte	0
 2058 0464 07       		.uleb128 0x7
 2059 0465 CF000000 		.4byte	0xcf
 2060 0469 74040000 		.4byte	0x474
 2061 046d 08       		.uleb128 0x8
 2062 046e C3000000 		.4byte	0xc3
 2063 0472 02       		.byte	0x2
 2064 0473 00       		.byte	0
 2065 0474 07       		.uleb128 0x7
 2066 0475 CF000000 		.4byte	0xcf
 2067 0479 84040000 		.4byte	0x484
 2068 047d 08       		.uleb128 0x8
 2069 047e C3000000 		.4byte	0xc3
 2070 0482 0E       		.byte	0xe
 2071 0483 00       		.byte	0
 2072 0484 0B       		.uleb128 0xb
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 139


 2073 0485 080F     		.2byte	0xf08
 2074 0487 09       		.byte	0x9
 2075 0488 21       		.byte	0x21
 2076 0489 0C070000 		.4byte	0x70c
 2077 048d 0A       		.uleb128 0xa
 2078 048e 3F120000 		.4byte	.LASF45
 2079 0492 09       		.byte	0x9
 2080 0493 22       		.byte	0x22
 2081 0494 CA000000 		.4byte	0xca
 2082 0498 00       		.byte	0
 2083 0499 0A       		.uleb128 0xa
 2084 049a EF090000 		.4byte	.LASF46
 2085 049e 09       		.byte	0x9
 2086 049f 23       		.byte	0x23
 2087 04a0 CA000000 		.4byte	0xca
 2088 04a4 04       		.byte	0x4
 2089 04a5 0A       		.uleb128 0xa
 2090 04a6 27000000 		.4byte	.LASF19
 2091 04aa 09       		.byte	0x9
 2092 04ab 24       		.byte	0x24
 2093 04ac 11070000 		.4byte	0x711
 2094 04b0 08       		.byte	0x8
 2095 04b1 0A       		.uleb128 0xa
 2096 04b2 D0020000 		.4byte	.LASF47
 2097 04b6 09       		.byte	0x9
 2098 04b7 25       		.byte	0x25
 2099 04b8 CA000000 		.4byte	0xca
 2100 04bc 10       		.byte	0x10
 2101 04bd 0A       		.uleb128 0xa
 2102 04be 15050000 		.4byte	.LASF48
 2103 04c2 09       		.byte	0x9
 2104 04c3 26       		.byte	0x26
 2105 04c4 CA000000 		.4byte	0xca
 2106 04c8 14       		.byte	0x14
 2107 04c9 0A       		.uleb128 0xa
 2108 04ca 150D0000 		.4byte	.LASF49
 2109 04ce 09       		.byte	0x9
 2110 04cf 27       		.byte	0x27
 2111 04d0 CA000000 		.4byte	0xca
 2112 04d4 18       		.byte	0x18
 2113 04d5 0A       		.uleb128 0xa
 2114 04d6 7D060000 		.4byte	.LASF50
 2115 04da 09       		.byte	0x9
 2116 04db 28       		.byte	0x28
 2117 04dc CA000000 		.4byte	0xca
 2118 04e0 1C       		.byte	0x1c
 2119 04e1 0A       		.uleb128 0xa
 2120 04e2 22010000 		.4byte	.LASF51
 2121 04e6 09       		.byte	0x9
 2122 04e7 29       		.byte	0x29
 2123 04e8 CA000000 		.4byte	0xca
 2124 04ec 20       		.byte	0x20
 2125 04ed 0A       		.uleb128 0xa
 2126 04ee 7A0A0000 		.4byte	.LASF52
 2127 04f2 09       		.byte	0x9
 2128 04f3 2A       		.byte	0x2a
 2129 04f4 CA000000 		.4byte	0xca
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 140


 2130 04f8 24       		.byte	0x24
 2131 04f9 0A       		.uleb128 0xa
 2132 04fa 2D110000 		.4byte	.LASF22
 2133 04fe 09       		.byte	0x9
 2134 04ff 2B       		.byte	0x2b
 2135 0500 2B070000 		.4byte	0x72b
 2136 0504 28       		.byte	0x28
 2137 0505 0A       		.uleb128 0xa
 2138 0506 790E0000 		.4byte	.LASF53
 2139 050a 09       		.byte	0x9
 2140 050b 2C       		.byte	0x2c
 2141 050c 30070000 		.4byte	0x730
 2142 0510 80       		.byte	0x80
 2143 0511 0A       		.uleb128 0xa
 2144 0512 1B0C0000 		.4byte	.LASF37
 2145 0516 09       		.byte	0x9
 2146 0517 2D       		.byte	0x2d
 2147 0518 3A070000 		.4byte	0x73a
 2148 051c C0       		.byte	0xc0
 2149 051d 0D       		.uleb128 0xd
 2150 051e 470D0000 		.4byte	.LASF54
 2151 0522 09       		.byte	0x9
 2152 0523 2E       		.byte	0x2e
 2153 0524 44070000 		.4byte	0x744
 2154 0528 0001     		.2byte	0x100
 2155 052a 0D       		.uleb128 0xd
 2156 052b 250C0000 		.4byte	.LASF39
 2157 052f 09       		.byte	0x9
 2158 0530 2F       		.byte	0x2f
 2159 0531 4E070000 		.4byte	0x74e
 2160 0535 4001     		.2byte	0x140
 2161 0537 0D       		.uleb128 0xd
 2162 0538 A5090000 		.4byte	.LASF55
 2163 053c 09       		.byte	0x9
 2164 053d 30       		.byte	0x30
 2165 053e 58070000 		.4byte	0x758
 2166 0542 8001     		.2byte	0x180
 2167 0544 0D       		.uleb128 0xd
 2168 0545 2F0C0000 		.4byte	.LASF42
 2169 0549 09       		.byte	0x9
 2170 054a 31       		.byte	0x31
 2171 054b 62070000 		.4byte	0x762
 2172 054f C001     		.2byte	0x1c0
 2173 0551 0D       		.uleb128 0xd
 2174 0552 50000000 		.4byte	.LASF56
 2175 0556 09       		.byte	0x9
 2176 0557 32       		.byte	0x32
 2177 0558 CF000000 		.4byte	0xcf
 2178 055c 0002     		.2byte	0x200
 2179 055e 0D       		.uleb128 0xd
 2180 055f 470E0000 		.4byte	.LASF57
 2181 0563 09       		.byte	0x9
 2182 0564 33       		.byte	0x33
 2183 0565 CF000000 		.4byte	0xcf
 2184 0569 0402     		.2byte	0x204
 2185 056b 0D       		.uleb128 0xd
 2186 056c 32020000 		.4byte	.LASF58
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 141


 2187 0570 09       		.byte	0x9
 2188 0571 34       		.byte	0x34
 2189 0572 CF000000 		.4byte	0xcf
 2190 0576 0802     		.2byte	0x208
 2191 0578 0D       		.uleb128 0xd
 2192 0579 1F080000 		.4byte	.LASF59
 2193 057d 09       		.byte	0x9
 2194 057e 35       		.byte	0x35
 2195 057f CF000000 		.4byte	0xcf
 2196 0583 0C02     		.2byte	0x20c
 2197 0585 0D       		.uleb128 0xd
 2198 0586 4E040000 		.4byte	.LASF60
 2199 058a 09       		.byte	0x9
 2200 058b 36       		.byte	0x36
 2201 058c CA000000 		.4byte	0xca
 2202 0590 1002     		.2byte	0x210
 2203 0592 0D       		.uleb128 0xd
 2204 0593 16030000 		.4byte	.LASF61
 2205 0597 09       		.byte	0x9
 2206 0598 37       		.byte	0x37
 2207 0599 CA000000 		.4byte	0xca
 2208 059d 1402     		.2byte	0x214
 2209 059f 0D       		.uleb128 0xd
 2210 05a0 E5090000 		.4byte	.LASF62
 2211 05a4 09       		.byte	0x9
 2212 05a5 38       		.byte	0x38
 2213 05a6 CA000000 		.4byte	0xca
 2214 05aa 1802     		.2byte	0x218
 2215 05ac 0D       		.uleb128 0xd
 2216 05ad AE0D0000 		.4byte	.LASF63
 2217 05b1 09       		.byte	0x9
 2218 05b2 39       		.byte	0x39
 2219 05b3 CF000000 		.4byte	0xcf
 2220 05b7 1C02     		.2byte	0x21c
 2221 05b9 0D       		.uleb128 0xd
 2222 05ba C2020000 		.4byte	.LASF64
 2223 05be 09       		.byte	0x9
 2224 05bf 3A       		.byte	0x3a
 2225 05c0 CA000000 		.4byte	0xca
 2226 05c4 2002     		.2byte	0x220
 2227 05c6 0D       		.uleb128 0xd
 2228 05c7 77070000 		.4byte	.LASF65
 2229 05cb 09       		.byte	0x9
 2230 05cc 3B       		.byte	0x3b
 2231 05cd CA000000 		.4byte	0xca
 2232 05d1 2402     		.2byte	0x224
 2233 05d3 0D       		.uleb128 0xd
 2234 05d4 FD0E0000 		.4byte	.LASF66
 2235 05d8 09       		.byte	0x9
 2236 05d9 3C       		.byte	0x3c
 2237 05da CA000000 		.4byte	0xca
 2238 05de 2802     		.2byte	0x228
 2239 05e0 0D       		.uleb128 0xd
 2240 05e1 57070000 		.4byte	.LASF67
 2241 05e5 09       		.byte	0x9
 2242 05e6 3D       		.byte	0x3d
 2243 05e7 CF000000 		.4byte	0xcf
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 142


 2244 05eb 2C02     		.2byte	0x22c
 2245 05ed 0D       		.uleb128 0xd
 2246 05ee CE090000 		.4byte	.LASF68
 2247 05f2 09       		.byte	0x9
 2248 05f3 3E       		.byte	0x3e
 2249 05f4 CA000000 		.4byte	0xca
 2250 05f8 3002     		.2byte	0x230
 2251 05fa 0D       		.uleb128 0xd
 2252 05fb 88080000 		.4byte	.LASF69
 2253 05ff 09       		.byte	0x9
 2254 0600 3F       		.byte	0x3f
 2255 0601 CA000000 		.4byte	0xca
 2256 0605 3402     		.2byte	0x234
 2257 0607 0D       		.uleb128 0xd
 2258 0608 17060000 		.4byte	.LASF70
 2259 060c 09       		.byte	0x9
 2260 060d 40       		.byte	0x40
 2261 060e CA000000 		.4byte	0xca
 2262 0612 3802     		.2byte	0x238
 2263 0614 0D       		.uleb128 0xd
 2264 0615 30000000 		.4byte	.LASF71
 2265 0619 09       		.byte	0x9
 2266 061a 41       		.byte	0x41
 2267 061b CF000000 		.4byte	0xcf
 2268 061f 3C02     		.2byte	0x23c
 2269 0621 0D       		.uleb128 0xd
 2270 0622 A2010000 		.4byte	.LASF72
 2271 0626 09       		.byte	0x9
 2272 0627 42       		.byte	0x42
 2273 0628 CF000000 		.4byte	0xcf
 2274 062c 4002     		.2byte	0x240
 2275 062e 0D       		.uleb128 0xd
 2276 062f 390C0000 		.4byte	.LASF73
 2277 0633 09       		.byte	0x9
 2278 0634 43       		.byte	0x43
 2279 0635 6C070000 		.4byte	0x76c
 2280 0639 4402     		.2byte	0x244
 2281 063b 0D       		.uleb128 0xd
 2282 063c 6B050000 		.4byte	.LASF74
 2283 0640 09       		.byte	0x9
 2284 0641 44       		.byte	0x44
 2285 0642 CA000000 		.4byte	0xca
 2286 0646 8002     		.2byte	0x280
 2287 0648 0D       		.uleb128 0xd
 2288 0649 430C0000 		.4byte	.LASF75
 2289 064d 09       		.byte	0x9
 2290 064e 45       		.byte	0x45
 2291 064f 76070000 		.4byte	0x776
 2292 0653 8402     		.2byte	0x284
 2293 0655 0D       		.uleb128 0xd
 2294 0656 F5020000 		.4byte	.LASF76
 2295 065a 09       		.byte	0x9
 2296 065b 46       		.byte	0x46
 2297 065c CF000000 		.4byte	0xcf
 2298 0660 9002     		.2byte	0x290
 2299 0662 0D       		.uleb128 0xd
 2300 0663 FE040000 		.4byte	.LASF77
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 143


 2301 0667 09       		.byte	0x9
 2302 0668 47       		.byte	0x47
 2303 0669 80070000 		.4byte	0x780
 2304 066d 9402     		.2byte	0x294
 2305 066f 0D       		.uleb128 0xd
 2306 0670 46110000 		.4byte	.LASF78
 2307 0674 09       		.byte	0x9
 2308 0675 48       		.byte	0x48
 2309 0676 CF000000 		.4byte	0xcf
 2310 067a A002     		.2byte	0x2a0
 2311 067c 0D       		.uleb128 0xd
 2312 067d 34080000 		.4byte	.LASF79
 2313 0681 09       		.byte	0x9
 2314 0682 49       		.byte	0x49
 2315 0683 CF000000 		.4byte	0xcf
 2316 0687 A402     		.2byte	0x2a4
 2317 0689 0D       		.uleb128 0xd
 2318 068a 5C0C0000 		.4byte	.LASF80
 2319 068e 09       		.byte	0x9
 2320 068f 4A       		.byte	0x4a
 2321 0690 8A070000 		.4byte	0x78a
 2322 0694 A802     		.2byte	0x2a8
 2323 0696 0D       		.uleb128 0xd
 2324 0697 3B0E0000 		.4byte	.LASF81
 2325 069b 09       		.byte	0x9
 2326 069c 4B       		.byte	0x4b
 2327 069d CA000000 		.4byte	0xca
 2328 06a1 0003     		.2byte	0x300
 2329 06a3 0D       		.uleb128 0xd
 2330 06a4 240A0000 		.4byte	.LASF82
 2331 06a8 09       		.byte	0x9
 2332 06a9 4C       		.byte	0x4c
 2333 06aa CA000000 		.4byte	0xca
 2334 06ae 0403     		.2byte	0x304
 2335 06b0 0D       		.uleb128 0xd
 2336 06b1 660C0000 		.4byte	.LASF83
 2337 06b5 09       		.byte	0x9
 2338 06b6 4D       		.byte	0x4d
 2339 06b7 A4070000 		.4byte	0x7a4
 2340 06bb 0803     		.2byte	0x308
 2341 06bd 0D       		.uleb128 0xd
 2342 06be DD0D0000 		.4byte	.LASF84
 2343 06c2 09       		.byte	0x9
 2344 06c3 4E       		.byte	0x4e
 2345 06c4 CA000000 		.4byte	0xca
 2346 06c8 4003     		.2byte	0x340
 2347 06ca 0D       		.uleb128 0xd
 2348 06cb 7D0C0000 		.4byte	.LASF85
 2349 06cf 09       		.byte	0x9
 2350 06d0 4F       		.byte	0x4f
 2351 06d1 CA000000 		.4byte	0xca
 2352 06d5 4403     		.2byte	0x344
 2353 06d7 0D       		.uleb128 0xd
 2354 06d8 D4100000 		.4byte	.LASF86
 2355 06dc 09       		.byte	0x9
 2356 06dd 50       		.byte	0x50
 2357 06de CF000000 		.4byte	0xcf
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 144


 2358 06e2 4803     		.2byte	0x348
 2359 06e4 0D       		.uleb128 0xd
 2360 06e5 180F0000 		.4byte	.LASF87
 2361 06e9 09       		.byte	0x9
 2362 06ea 51       		.byte	0x51
 2363 06eb BF070000 		.4byte	0x7bf
 2364 06ef 4C03     		.2byte	0x34c
 2365 06f1 0D       		.uleb128 0xd
 2366 06f2 A60E0000 		.4byte	.LASF88
 2367 06f6 09       		.byte	0x9
 2368 06f7 52       		.byte	0x52
 2369 06f8 CA000000 		.4byte	0xca
 2370 06fc 000F     		.2byte	0xf00
 2371 06fe 0D       		.uleb128 0xd
 2372 06ff B00E0000 		.4byte	.LASF89
 2373 0703 09       		.byte	0x9
 2374 0704 53       		.byte	0x53
 2375 0705 CA000000 		.4byte	0xca
 2376 0709 040F     		.2byte	0xf04
 2377 070b 00       		.byte	0
 2378 070c 05       		.uleb128 0x5
 2379 070d D4000000 		.4byte	0xd4
 2380 0711 06       		.uleb128 0x6
 2381 0712 0C070000 		.4byte	0x70c
 2382 0716 07       		.uleb128 0x7
 2383 0717 CF000000 		.4byte	0xcf
 2384 071b 26070000 		.4byte	0x726
 2385 071f 08       		.uleb128 0x8
 2386 0720 C3000000 		.4byte	0xc3
 2387 0724 15       		.byte	0x15
 2388 0725 00       		.byte	0
 2389 0726 05       		.uleb128 0x5
 2390 0727 16070000 		.4byte	0x716
 2391 072b 06       		.uleb128 0x6
 2392 072c 26070000 		.4byte	0x726
 2393 0730 05       		.uleb128 0x5
 2394 0731 F4000000 		.4byte	0xf4
 2395 0735 05       		.uleb128 0x5
 2396 0736 54040000 		.4byte	0x454
 2397 073a 06       		.uleb128 0x6
 2398 073b 35070000 		.4byte	0x735
 2399 073f 05       		.uleb128 0x5
 2400 0740 54040000 		.4byte	0x454
 2401 0744 06       		.uleb128 0x6
 2402 0745 3F070000 		.4byte	0x73f
 2403 0749 05       		.uleb128 0x5
 2404 074a 54040000 		.4byte	0x454
 2405 074e 06       		.uleb128 0x6
 2406 074f 49070000 		.4byte	0x749
 2407 0753 05       		.uleb128 0x5
 2408 0754 54040000 		.4byte	0x454
 2409 0758 06       		.uleb128 0x6
 2410 0759 53070000 		.4byte	0x753
 2411 075d 05       		.uleb128 0x5
 2412 075e 54040000 		.4byte	0x454
 2413 0762 06       		.uleb128 0x6
 2414 0763 5D070000 		.4byte	0x75d
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 145


 2415 0767 05       		.uleb128 0x5
 2416 0768 74040000 		.4byte	0x474
 2417 076c 06       		.uleb128 0x6
 2418 076d 67070000 		.4byte	0x767
 2419 0771 05       		.uleb128 0x5
 2420 0772 64040000 		.4byte	0x464
 2421 0776 06       		.uleb128 0x6
 2422 0777 71070000 		.4byte	0x771
 2423 077b 05       		.uleb128 0x5
 2424 077c 64040000 		.4byte	0x464
 2425 0780 06       		.uleb128 0x6
 2426 0781 7B070000 		.4byte	0x77b
 2427 0785 05       		.uleb128 0x5
 2428 0786 16070000 		.4byte	0x716
 2429 078a 06       		.uleb128 0x6
 2430 078b 85070000 		.4byte	0x785
 2431 078f 07       		.uleb128 0x7
 2432 0790 CF000000 		.4byte	0xcf
 2433 0794 9F070000 		.4byte	0x79f
 2434 0798 08       		.uleb128 0x8
 2435 0799 C3000000 		.4byte	0xc3
 2436 079d 0D       		.byte	0xd
 2437 079e 00       		.byte	0
 2438 079f 05       		.uleb128 0x5
 2439 07a0 8F070000 		.4byte	0x78f
 2440 07a4 06       		.uleb128 0x6
 2441 07a5 9F070000 		.4byte	0x79f
 2442 07a9 07       		.uleb128 0x7
 2443 07aa CF000000 		.4byte	0xcf
 2444 07ae BA070000 		.4byte	0x7ba
 2445 07b2 0E       		.uleb128 0xe
 2446 07b3 C3000000 		.4byte	0xc3
 2447 07b7 EC02     		.2byte	0x2ec
 2448 07b9 00       		.byte	0
 2449 07ba 05       		.uleb128 0x5
 2450 07bb A9070000 		.4byte	0x7a9
 2451 07bf 06       		.uleb128 0x6
 2452 07c0 BA070000 		.4byte	0x7ba
 2453 07c4 03       		.uleb128 0x3
 2454 07c5 3F070000 		.4byte	.LASF90
 2455 07c9 09       		.byte	0x9
 2456 07ca 54       		.byte	0x54
 2457 07cb 84040000 		.4byte	0x484
 2458 07cf 0F       		.uleb128 0xf
 2459 07d0 BE030000 		.4byte	.LASF91
 2460 07d4 0A       		.byte	0xa
 2461 07d5 5206     		.2byte	0x652
 2462 07d7 C4070000 		.4byte	0x7c4
 2463 07db 02       		.uleb128 0x2
 2464 07dc 08       		.byte	0x8
 2465 07dd 04       		.byte	0x4
 2466 07de EE0A0000 		.4byte	.LASF92
 2467 07e2 09       		.uleb128 0x9
 2468 07e3 B8       		.byte	0xb8
 2469 07e4 0B       		.byte	0xb
 2470 07e5 34       		.byte	0x34
 2471 07e6 F30B0000 		.4byte	0xbf3
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 146


 2472 07ea 0A       		.uleb128 0xa
 2473 07eb 45020000 		.4byte	.LASF93
 2474 07ef 0B       		.byte	0xb
 2475 07f0 37       		.byte	0x37
 2476 07f1 B8000000 		.4byte	0xb8
 2477 07f5 00       		.byte	0
 2478 07f6 0A       		.uleb128 0xa
 2479 07f7 91040000 		.4byte	.LASF94
 2480 07fb 0B       		.byte	0xb
 2481 07fc 38       		.byte	0x38
 2482 07fd B8000000 		.4byte	0xb8
 2483 0801 04       		.byte	0x4
 2484 0802 0A       		.uleb128 0xa
 2485 0803 2A010000 		.4byte	.LASF95
 2486 0807 0B       		.byte	0xb
 2487 0808 39       		.byte	0x39
 2488 0809 B8000000 		.4byte	0xb8
 2489 080d 08       		.byte	0x8
 2490 080e 0A       		.uleb128 0xa
 2491 080f 06010000 		.4byte	.LASF96
 2492 0813 0B       		.byte	0xb
 2493 0814 3A       		.byte	0x3a
 2494 0815 B8000000 		.4byte	0xb8
 2495 0819 0C       		.byte	0xc
 2496 081a 0A       		.uleb128 0xa
 2497 081b DA0C0000 		.4byte	.LASF97
 2498 081f 0B       		.byte	0xb
 2499 0820 3B       		.byte	0x3b
 2500 0821 B8000000 		.4byte	0xb8
 2501 0825 10       		.byte	0x10
 2502 0826 0A       		.uleb128 0xa
 2503 0827 8A090000 		.4byte	.LASF98
 2504 082b 0B       		.byte	0xb
 2505 082c 3C       		.byte	0x3c
 2506 082d B8000000 		.4byte	0xb8
 2507 0831 14       		.byte	0x14
 2508 0832 0A       		.uleb128 0xa
 2509 0833 CF060000 		.4byte	.LASF99
 2510 0837 0B       		.byte	0xb
 2511 0838 3D       		.byte	0x3d
 2512 0839 B8000000 		.4byte	0xb8
 2513 083d 18       		.byte	0x18
 2514 083e 0A       		.uleb128 0xa
 2515 083f 1A110000 		.4byte	.LASF100
 2516 0843 0B       		.byte	0xb
 2517 0844 3E       		.byte	0x3e
 2518 0845 B8000000 		.4byte	0xb8
 2519 0849 1C       		.byte	0x1c
 2520 084a 0A       		.uleb128 0xa
 2521 084b CD080000 		.4byte	.LASF101
 2522 084f 0B       		.byte	0xb
 2523 0850 3F       		.byte	0x3f
 2524 0851 B8000000 		.4byte	0xb8
 2525 0855 20       		.byte	0x20
 2526 0856 0A       		.uleb128 0xa
 2527 0857 E4080000 		.4byte	.LASF102
 2528 085b 0B       		.byte	0xb
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 147


 2529 085c 40       		.byte	0x40
 2530 085d B8000000 		.4byte	0xb8
 2531 0861 24       		.byte	0x24
 2532 0862 0A       		.uleb128 0xa
 2533 0863 990C0000 		.4byte	.LASF103
 2534 0867 0B       		.byte	0xb
 2535 0868 43       		.byte	0x43
 2536 0869 97000000 		.4byte	0x97
 2537 086d 28       		.byte	0x28
 2538 086e 0A       		.uleb128 0xa
 2539 086f 59040000 		.4byte	.LASF104
 2540 0873 0B       		.byte	0xb
 2541 0874 44       		.byte	0x44
 2542 0875 97000000 		.4byte	0x97
 2543 0879 29       		.byte	0x29
 2544 087a 0A       		.uleb128 0xa
 2545 087b 800B0000 		.4byte	.LASF105
 2546 087f 0B       		.byte	0xb
 2547 0880 45       		.byte	0x45
 2548 0881 97000000 		.4byte	0x97
 2549 0885 2A       		.byte	0x2a
 2550 0886 0A       		.uleb128 0xa
 2551 0887 BA0C0000 		.4byte	.LASF106
 2552 088b 0B       		.byte	0xb
 2553 088c 46       		.byte	0x46
 2554 088d 97000000 		.4byte	0x97
 2555 0891 2B       		.byte	0x2b
 2556 0892 0A       		.uleb128 0xa
 2557 0893 A60C0000 		.4byte	.LASF107
 2558 0897 0B       		.byte	0xb
 2559 0898 47       		.byte	0x47
 2560 0899 97000000 		.4byte	0x97
 2561 089d 2C       		.byte	0x2c
 2562 089e 0A       		.uleb128 0xa
 2563 089f F00D0000 		.4byte	.LASF108
 2564 08a3 0B       		.byte	0xb
 2565 08a4 48       		.byte	0x48
 2566 08a5 97000000 		.4byte	0x97
 2567 08a9 2D       		.byte	0x2d
 2568 08aa 0A       		.uleb128 0xa
 2569 08ab 02120000 		.4byte	.LASF109
 2570 08af 0B       		.byte	0xb
 2571 08b0 49       		.byte	0x49
 2572 08b1 97000000 		.4byte	0x97
 2573 08b5 2E       		.byte	0x2e
 2574 08b6 0A       		.uleb128 0xa
 2575 08b7 F2100000 		.4byte	.LASF110
 2576 08bb 0B       		.byte	0xb
 2577 08bc 4A       		.byte	0x4a
 2578 08bd 97000000 		.4byte	0x97
 2579 08c1 2F       		.byte	0x2f
 2580 08c2 0A       		.uleb128 0xa
 2581 08c3 9A030000 		.4byte	.LASF111
 2582 08c7 0B       		.byte	0xb
 2583 08c8 4B       		.byte	0x4b
 2584 08c9 97000000 		.4byte	0x97
 2585 08cd 30       		.byte	0x30
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 148


 2586 08ce 0A       		.uleb128 0xa
 2587 08cf 190A0000 		.4byte	.LASF112
 2588 08d3 0B       		.byte	0xb
 2589 08d4 4E       		.byte	0x4e
 2590 08d5 97000000 		.4byte	0x97
 2591 08d9 31       		.byte	0x31
 2592 08da 0A       		.uleb128 0xa
 2593 08db 05100000 		.4byte	.LASF113
 2594 08df 0B       		.byte	0xb
 2595 08e0 4F       		.byte	0x4f
 2596 08e1 97000000 		.4byte	0x97
 2597 08e5 32       		.byte	0x32
 2598 08e6 0A       		.uleb128 0xa
 2599 08e7 D9090000 		.4byte	.LASF114
 2600 08eb 0B       		.byte	0xb
 2601 08ec 50       		.byte	0x50
 2602 08ed 97000000 		.4byte	0x97
 2603 08f1 33       		.byte	0x33
 2604 08f2 0A       		.uleb128 0xa
 2605 08f3 F6010000 		.4byte	.LASF115
 2606 08f7 0B       		.byte	0xb
 2607 08f8 51       		.byte	0x51
 2608 08f9 97000000 		.4byte	0x97
 2609 08fd 34       		.byte	0x34
 2610 08fe 0A       		.uleb128 0xa
 2611 08ff 08050000 		.4byte	.LASF116
 2612 0903 0B       		.byte	0xb
 2613 0904 52       		.byte	0x52
 2614 0905 A2000000 		.4byte	0xa2
 2615 0909 36       		.byte	0x36
 2616 090a 0A       		.uleb128 0xa
 2617 090b 79020000 		.4byte	.LASF117
 2618 090f 0B       		.byte	0xb
 2619 0910 53       		.byte	0x53
 2620 0911 A2000000 		.4byte	0xa2
 2621 0915 38       		.byte	0x38
 2622 0916 0A       		.uleb128 0xa
 2623 0917 90020000 		.4byte	.LASF118
 2624 091b 0B       		.byte	0xb
 2625 091c 54       		.byte	0x54
 2626 091d A2000000 		.4byte	0xa2
 2627 0921 3A       		.byte	0x3a
 2628 0922 0A       		.uleb128 0xa
 2629 0923 37110000 		.4byte	.LASF119
 2630 0927 0B       		.byte	0xb
 2631 0928 55       		.byte	0x55
 2632 0929 97000000 		.4byte	0x97
 2633 092d 3C       		.byte	0x3c
 2634 092e 0A       		.uleb128 0xa
 2635 092f 6C030000 		.4byte	.LASF120
 2636 0933 0B       		.byte	0xb
 2637 0934 56       		.byte	0x56
 2638 0935 97000000 		.4byte	0x97
 2639 0939 3D       		.byte	0x3d
 2640 093a 0A       		.uleb128 0xa
 2641 093b 470B0000 		.4byte	.LASF121
 2642 093f 0B       		.byte	0xb
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 149


 2643 0940 57       		.byte	0x57
 2644 0941 97000000 		.4byte	0x97
 2645 0945 3E       		.byte	0x3e
 2646 0946 0A       		.uleb128 0xa
 2647 0947 C8000000 		.4byte	.LASF122
 2648 094b 0B       		.byte	0xb
 2649 094c 58       		.byte	0x58
 2650 094d 97000000 		.4byte	0x97
 2651 0951 3F       		.byte	0x3f
 2652 0952 0A       		.uleb128 0xa
 2653 0953 AD010000 		.4byte	.LASF123
 2654 0957 0B       		.byte	0xb
 2655 0958 59       		.byte	0x59
 2656 0959 97000000 		.4byte	0x97
 2657 095d 40       		.byte	0x40
 2658 095e 0A       		.uleb128 0xa
 2659 095f 3B0A0000 		.4byte	.LASF124
 2660 0963 0B       		.byte	0xb
 2661 0964 5A       		.byte	0x5a
 2662 0965 97000000 		.4byte	0x97
 2663 0969 41       		.byte	0x41
 2664 096a 0A       		.uleb128 0xa
 2665 096b CF0F0000 		.4byte	.LASF125
 2666 096f 0B       		.byte	0xb
 2667 0970 5B       		.byte	0x5b
 2668 0971 97000000 		.4byte	0x97
 2669 0975 42       		.byte	0x42
 2670 0976 0A       		.uleb128 0xa
 2671 0977 23070000 		.4byte	.LASF126
 2672 097b 0B       		.byte	0xb
 2673 097c 5C       		.byte	0x5c
 2674 097d 97000000 		.4byte	0x97
 2675 0981 43       		.byte	0x43
 2676 0982 0A       		.uleb128 0xa
 2677 0983 00080000 		.4byte	.LASF127
 2678 0987 0B       		.byte	0xb
 2679 0988 5D       		.byte	0x5d
 2680 0989 97000000 		.4byte	0x97
 2681 098d 44       		.byte	0x44
 2682 098e 0A       		.uleb128 0xa
 2683 098f C80C0000 		.4byte	.LASF128
 2684 0993 0B       		.byte	0xb
 2685 0994 5E       		.byte	0x5e
 2686 0995 B8000000 		.4byte	0xb8
 2687 0999 48       		.byte	0x48
 2688 099a 0A       		.uleb128 0xa
 2689 099b 11080000 		.4byte	.LASF129
 2690 099f 0B       		.byte	0xb
 2691 09a0 5F       		.byte	0x5f
 2692 09a1 B8000000 		.4byte	0xb8
 2693 09a5 4C       		.byte	0x4c
 2694 09a6 0A       		.uleb128 0xa
 2695 09a7 AD0F0000 		.4byte	.LASF130
 2696 09ab 0B       		.byte	0xb
 2697 09ac 60       		.byte	0x60
 2698 09ad 97000000 		.4byte	0x97
 2699 09b1 50       		.byte	0x50
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 150


 2700 09b2 0A       		.uleb128 0xa
 2701 09b3 05060000 		.4byte	.LASF131
 2702 09b7 0B       		.byte	0xb
 2703 09b8 61       		.byte	0x61
 2704 09b9 97000000 		.4byte	0x97
 2705 09bd 51       		.byte	0x51
 2706 09be 0A       		.uleb128 0xa
 2707 09bf 3A090000 		.4byte	.LASF132
 2708 09c3 0B       		.byte	0xb
 2709 09c4 62       		.byte	0x62
 2710 09c5 97000000 		.4byte	0x97
 2711 09c9 52       		.byte	0x52
 2712 09ca 0A       		.uleb128 0xa
 2713 09cb 67040000 		.4byte	.LASF133
 2714 09cf 0B       		.byte	0xb
 2715 09d0 63       		.byte	0x63
 2716 09d1 97000000 		.4byte	0x97
 2717 09d5 53       		.byte	0x53
 2718 09d6 0A       		.uleb128 0xa
 2719 09d7 230F0000 		.4byte	.LASF134
 2720 09db 0B       		.byte	0xb
 2721 09dc 64       		.byte	0x64
 2722 09dd 97000000 		.4byte	0x97
 2723 09e1 54       		.byte	0x54
 2724 09e2 0A       		.uleb128 0xa
 2725 09e3 88060000 		.4byte	.LASF135
 2726 09e7 0B       		.byte	0xb
 2727 09e8 65       		.byte	0x65
 2728 09e9 97000000 		.4byte	0x97
 2729 09ed 55       		.byte	0x55
 2730 09ee 0A       		.uleb128 0xa
 2731 09ef 00000000 		.4byte	.LASF136
 2732 09f3 0B       		.byte	0xb
 2733 09f4 66       		.byte	0x66
 2734 09f5 97000000 		.4byte	0x97
 2735 09f9 56       		.byte	0x56
 2736 09fa 0A       		.uleb128 0xa
 2737 09fb 76090000 		.4byte	.LASF137
 2738 09ff 0B       		.byte	0xb
 2739 0a00 67       		.byte	0x67
 2740 0a01 97000000 		.4byte	0x97
 2741 0a05 57       		.byte	0x57
 2742 0a06 0A       		.uleb128 0xa
 2743 0a07 7B050000 		.4byte	.LASF138
 2744 0a0b 0B       		.byte	0xb
 2745 0a0c 68       		.byte	0x68
 2746 0a0d 97000000 		.4byte	0x97
 2747 0a11 58       		.byte	0x58
 2748 0a12 0A       		.uleb128 0xa
 2749 0a13 5D110000 		.4byte	.LASF139
 2750 0a17 0B       		.byte	0xb
 2751 0a18 69       		.byte	0x69
 2752 0a19 97000000 		.4byte	0x97
 2753 0a1d 59       		.byte	0x59
 2754 0a1e 0A       		.uleb128 0xa
 2755 0a1f FA0F0000 		.4byte	.LASF140
 2756 0a23 0B       		.byte	0xb
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 151


 2757 0a24 6E       		.byte	0x6e
 2758 0a25 AD000000 		.4byte	0xad
 2759 0a29 5A       		.byte	0x5a
 2760 0a2a 0A       		.uleb128 0xa
 2761 0a2b 48010000 		.4byte	.LASF141
 2762 0a2f 0B       		.byte	0xb
 2763 0a30 6F       		.byte	0x6f
 2764 0a31 AD000000 		.4byte	0xad
 2765 0a35 5C       		.byte	0x5c
 2766 0a36 0A       		.uleb128 0xa
 2767 0a37 D5080000 		.4byte	.LASF142
 2768 0a3b 0B       		.byte	0xb
 2769 0a3c 70       		.byte	0x70
 2770 0a3d 97000000 		.4byte	0x97
 2771 0a41 5E       		.byte	0x5e
 2772 0a42 0A       		.uleb128 0xa
 2773 0a43 550B0000 		.4byte	.LASF143
 2774 0a47 0B       		.byte	0xb
 2775 0a48 71       		.byte	0x71
 2776 0a49 97000000 		.4byte	0x97
 2777 0a4d 5F       		.byte	0x5f
 2778 0a4e 0A       		.uleb128 0xa
 2779 0a4f 2E070000 		.4byte	.LASF144
 2780 0a53 0B       		.byte	0xb
 2781 0a54 72       		.byte	0x72
 2782 0a55 97000000 		.4byte	0x97
 2783 0a59 60       		.byte	0x60
 2784 0a5a 0A       		.uleb128 0xa
 2785 0a5b A9060000 		.4byte	.LASF145
 2786 0a5f 0B       		.byte	0xb
 2787 0a60 73       		.byte	0x73
 2788 0a61 B8000000 		.4byte	0xb8
 2789 0a65 64       		.byte	0x64
 2790 0a66 0A       		.uleb128 0xa
 2791 0a67 16120000 		.4byte	.LASF146
 2792 0a6b 0B       		.byte	0xb
 2793 0a6c 76       		.byte	0x76
 2794 0a6d AD000000 		.4byte	0xad
 2795 0a71 68       		.byte	0x68
 2796 0a72 0A       		.uleb128 0xa
 2797 0a73 100B0000 		.4byte	.LASF147
 2798 0a77 0B       		.byte	0xb
 2799 0a78 77       		.byte	0x77
 2800 0a79 AD000000 		.4byte	0xad
 2801 0a7d 6A       		.byte	0x6a
 2802 0a7e 0A       		.uleb128 0xa
 2803 0a7f BF090000 		.4byte	.LASF148
 2804 0a83 0B       		.byte	0xb
 2805 0a84 78       		.byte	0x78
 2806 0a85 AD000000 		.4byte	0xad
 2807 0a89 6C       		.byte	0x6c
 2808 0a8a 0A       		.uleb128 0xa
 2809 0a8b 5F030000 		.4byte	.LASF149
 2810 0a8f 0B       		.byte	0xb
 2811 0a90 79       		.byte	0x79
 2812 0a91 AD000000 		.4byte	0xad
 2813 0a95 6E       		.byte	0x6e
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 152


 2814 0a96 0A       		.uleb128 0xa
 2815 0a97 65080000 		.4byte	.LASF150
 2816 0a9b 0B       		.byte	0xb
 2817 0a9c 7B       		.byte	0x7b
 2818 0a9d 97000000 		.4byte	0x97
 2819 0aa1 70       		.byte	0x70
 2820 0aa2 0A       		.uleb128 0xa
 2821 0aa3 C7030000 		.4byte	.LASF151
 2822 0aa7 0B       		.byte	0xb
 2823 0aa8 7C       		.byte	0x7c
 2824 0aa9 97000000 		.4byte	0x97
 2825 0aad 71       		.byte	0x71
 2826 0aae 0A       		.uleb128 0xa
 2827 0aaf 00030000 		.4byte	.LASF152
 2828 0ab3 0B       		.byte	0xb
 2829 0ab4 7D       		.byte	0x7d
 2830 0ab5 97000000 		.4byte	0x97
 2831 0ab9 72       		.byte	0x72
 2832 0aba 0A       		.uleb128 0xa
 2833 0abb D4010000 		.4byte	.LASF153
 2834 0abf 0B       		.byte	0xb
 2835 0ac0 7E       		.byte	0x7e
 2836 0ac1 97000000 		.4byte	0x97
 2837 0ac5 73       		.byte	0x73
 2838 0ac6 0A       		.uleb128 0xa
 2839 0ac7 090C0000 		.4byte	.LASF154
 2840 0acb 0B       		.byte	0xb
 2841 0acc 80       		.byte	0x80
 2842 0acd AD000000 		.4byte	0xad
 2843 0ad1 74       		.byte	0x74
 2844 0ad2 0A       		.uleb128 0xa
 2845 0ad3 9C0A0000 		.4byte	.LASF155
 2846 0ad7 0B       		.byte	0xb
 2847 0ad8 81       		.byte	0x81
 2848 0ad9 AD000000 		.4byte	0xad
 2849 0add 76       		.byte	0x76
 2850 0ade 0A       		.uleb128 0xa
 2851 0adf DF070000 		.4byte	.LASF156
 2852 0ae3 0B       		.byte	0xb
 2853 0ae4 82       		.byte	0x82
 2854 0ae5 AD000000 		.4byte	0xad
 2855 0ae9 78       		.byte	0x78
 2856 0aea 0A       		.uleb128 0xa
 2857 0aeb D5040000 		.4byte	.LASF157
 2858 0aef 0B       		.byte	0xb
 2859 0af0 83       		.byte	0x83
 2860 0af1 AD000000 		.4byte	0xad
 2861 0af5 7A       		.byte	0x7a
 2862 0af6 0A       		.uleb128 0xa
 2863 0af7 820D0000 		.4byte	.LASF158
 2864 0afb 0B       		.byte	0xb
 2865 0afc 86       		.byte	0x86
 2866 0afd 97000000 		.4byte	0x97
 2867 0b01 7C       		.byte	0x7c
 2868 0b02 0A       		.uleb128 0xa
 2869 0b03 BE0F0000 		.4byte	.LASF159
 2870 0b07 0B       		.byte	0xb
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 153


 2871 0b08 87       		.byte	0x87
 2872 0b09 97000000 		.4byte	0x97
 2873 0b0d 7D       		.byte	0x7d
 2874 0b0e 0A       		.uleb128 0xa
 2875 0b0f A4040000 		.4byte	.LASF160
 2876 0b13 0B       		.byte	0xb
 2877 0b14 88       		.byte	0x88
 2878 0b15 97000000 		.4byte	0x97
 2879 0b19 7E       		.byte	0x7e
 2880 0b1a 0A       		.uleb128 0xa
 2881 0b1b 3A040000 		.4byte	.LASF161
 2882 0b1f 0B       		.byte	0xb
 2883 0b20 89       		.byte	0x89
 2884 0b21 97000000 		.4byte	0x97
 2885 0b25 7F       		.byte	0x7f
 2886 0b26 0A       		.uleb128 0xa
 2887 0b27 EA040000 		.4byte	.LASF162
 2888 0b2b 0B       		.byte	0xb
 2889 0b2c 8A       		.byte	0x8a
 2890 0b2d 97000000 		.4byte	0x97
 2891 0b31 80       		.byte	0x80
 2892 0b32 0A       		.uleb128 0xa
 2893 0b33 B1000000 		.4byte	.LASF163
 2894 0b37 0B       		.byte	0xb
 2895 0b38 8D       		.byte	0x8d
 2896 0b39 B8000000 		.4byte	0xb8
 2897 0b3d 84       		.byte	0x84
 2898 0b3e 0A       		.uleb128 0xa
 2899 0b3f 970D0000 		.4byte	.LASF164
 2900 0b43 0B       		.byte	0xb
 2901 0b44 8E       		.byte	0x8e
 2902 0b45 B8000000 		.4byte	0xb8
 2903 0b49 88       		.byte	0x88
 2904 0b4a 0A       		.uleb128 0xa
 2905 0b4b B4100000 		.4byte	.LASF165
 2906 0b4f 0B       		.byte	0xb
 2907 0b50 8F       		.byte	0x8f
 2908 0b51 B8000000 		.4byte	0xb8
 2909 0b55 8C       		.byte	0x8c
 2910 0b56 0A       		.uleb128 0xa
 2911 0b57 F40B0000 		.4byte	.LASF166
 2912 0b5b 0B       		.byte	0xb
 2913 0b5c 90       		.byte	0x90
 2914 0b5d B8000000 		.4byte	0xb8
 2915 0b61 90       		.byte	0x90
 2916 0b62 0A       		.uleb128 0xa
 2917 0b63 580D0000 		.4byte	.LASF167
 2918 0b67 0B       		.byte	0xb
 2919 0b68 91       		.byte	0x91
 2920 0b69 B8000000 		.4byte	0xb8
 2921 0b6d 94       		.byte	0x94
 2922 0b6e 0A       		.uleb128 0xa
 2923 0b6f DC030000 		.4byte	.LASF168
 2924 0b73 0B       		.byte	0xb
 2925 0b74 92       		.byte	0x92
 2926 0b75 B8000000 		.4byte	0xb8
 2927 0b79 98       		.byte	0x98
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 154


 2928 0b7a 0A       		.uleb128 0xa
 2929 0b7b BA0D0000 		.4byte	.LASF169
 2930 0b7f 0B       		.byte	0xb
 2931 0b80 93       		.byte	0x93
 2932 0b81 B8000000 		.4byte	0xb8
 2933 0b85 9C       		.byte	0x9c
 2934 0b86 0A       		.uleb128 0xa
 2935 0b87 0D070000 		.4byte	.LASF170
 2936 0b8b 0B       		.byte	0xb
 2937 0b8c 94       		.byte	0x94
 2938 0b8d B8000000 		.4byte	0xb8
 2939 0b91 A0       		.byte	0xa0
 2940 0b92 0A       		.uleb128 0xa
 2941 0b93 33010000 		.4byte	.LASF171
 2942 0b97 0B       		.byte	0xb
 2943 0b98 95       		.byte	0x95
 2944 0b99 AD000000 		.4byte	0xad
 2945 0b9d A4       		.byte	0xa4
 2946 0b9e 0A       		.uleb128 0xa
 2947 0b9f DF0B0000 		.4byte	.LASF172
 2948 0ba3 0B       		.byte	0xb
 2949 0ba4 96       		.byte	0x96
 2950 0ba5 AD000000 		.4byte	0xad
 2951 0ba9 A6       		.byte	0xa6
 2952 0baa 0A       		.uleb128 0xa
 2953 0bab 2F0E0000 		.4byte	.LASF173
 2954 0baf 0B       		.byte	0xb
 2955 0bb0 97       		.byte	0x97
 2956 0bb1 AD000000 		.4byte	0xad
 2957 0bb5 A8       		.byte	0xa8
 2958 0bb6 0A       		.uleb128 0xa
 2959 0bb7 B1080000 		.4byte	.LASF174
 2960 0bbb 0B       		.byte	0xb
 2961 0bbc 98       		.byte	0x98
 2962 0bbd AD000000 		.4byte	0xad
 2963 0bc1 AA       		.byte	0xaa
 2964 0bc2 0A       		.uleb128 0xa
 2965 0bc3 B1090000 		.4byte	.LASF175
 2966 0bc7 0B       		.byte	0xb
 2967 0bc8 99       		.byte	0x99
 2968 0bc9 AD000000 		.4byte	0xad
 2969 0bcd AC       		.byte	0xac
 2970 0bce 0A       		.uleb128 0xa
 2971 0bcf 4B0A0000 		.4byte	.LASF176
 2972 0bd3 0B       		.byte	0xb
 2973 0bd4 9A       		.byte	0x9a
 2974 0bd5 AD000000 		.4byte	0xad
 2975 0bd9 AE       		.byte	0xae
 2976 0bda 0A       		.uleb128 0xa
 2977 0bdb 77030000 		.4byte	.LASF177
 2978 0bdf 0B       		.byte	0xb
 2979 0be0 9D       		.byte	0x9d
 2980 0be1 AD000000 		.4byte	0xad
 2981 0be5 B0       		.byte	0xb0
 2982 0be6 0A       		.uleb128 0xa
 2983 0be7 62000000 		.4byte	.LASF178
 2984 0beb 0B       		.byte	0xb
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 155


 2985 0bec 9E       		.byte	0x9e
 2986 0bed B8000000 		.4byte	0xb8
 2987 0bf1 B4       		.byte	0xb4
 2988 0bf2 00       		.byte	0
 2989 0bf3 03       		.uleb128 0x3
 2990 0bf4 F2030000 		.4byte	.LASF179
 2991 0bf8 0B       		.byte	0xb
 2992 0bf9 9F       		.byte	0x9f
 2993 0bfa E2070000 		.4byte	0x7e2
 2994 0bfe 0F       		.uleb128 0xf
 2995 0bff C50E0000 		.4byte	.LASF180
 2996 0c03 0C       		.byte	0xc
 2997 0c04 EE01     		.2byte	0x1ee
 2998 0c06 0A0C0000 		.4byte	0xc0a
 2999 0c0a 10       		.uleb128 0x10
 3000 0c0b 04       		.byte	0x4
 3001 0c0c 100C0000 		.4byte	0xc10
 3002 0c10 11       		.uleb128 0x11
 3003 0c11 0F       		.uleb128 0xf
 3004 0c12 210D0000 		.4byte	.LASF181
 3005 0c16 0C       		.byte	0xc
 3006 0c17 F601     		.2byte	0x1f6
 3007 0c19 1D0C0000 		.4byte	0xc1d
 3008 0c1d 02       		.uleb128 0x2
 3009 0c1e 01       		.byte	0x1
 3010 0c1f 08       		.byte	0x8
 3011 0c20 8A0B0000 		.4byte	.LASF182
 3012 0c24 02       		.uleb128 0x2
 3013 0c25 04       		.byte	0x4
 3014 0c26 04       		.byte	0x4
 3015 0c27 53040000 		.4byte	.LASF183
 3016 0c2b 02       		.uleb128 0x2
 3017 0c2c 08       		.byte	0x8
 3018 0c2d 04       		.byte	0x4
 3019 0c2e 510D0000 		.4byte	.LASF184
 3020 0c32 0F       		.uleb128 0xf
 3021 0c33 120A0000 		.4byte	.LASF185
 3022 0c37 0C       		.byte	0xc
 3023 0c38 EC03     		.2byte	0x3ec
 3024 0c3a B8000000 		.4byte	0xb8
 3025 0c3e 12       		.uleb128 0x12
 3026 0c3f 04       		.byte	0x4
 3027 0c40 90000000 		.4byte	0x90
 3028 0c44 01       		.byte	0x1
 3029 0c45 FE02     		.2byte	0x2fe
 3030 0c47 6D0C0000 		.4byte	0xc6d
 3031 0c4b 13       		.uleb128 0x13
 3032 0c4c 79080000 		.4byte	.LASF186
 3033 0c50 00       		.byte	0
 3034 0c51 14       		.uleb128 0x14
 3035 0c52 94090000 		.4byte	.LASF187
 3036 0c56 01000600 		.4byte	0x60001
 3037 0c5a 14       		.uleb128 0x14
 3038 0c5b 030A0000 		.4byte	.LASF188
 3039 0c5f 02000600 		.4byte	0x60002
 3040 0c63 14       		.uleb128 0x14
 3041 0c64 280D0000 		.4byte	.LASF189
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 156


 3042 0c68 03000600 		.4byte	0x60003
 3043 0c6c 00       		.byte	0
 3044 0c6d 0F       		.uleb128 0xf
 3045 0c6e 52080000 		.4byte	.LASF190
 3046 0c72 01       		.byte	0x1
 3047 0c73 0303     		.2byte	0x303
 3048 0c75 3E0C0000 		.4byte	0xc3e
 3049 0c79 12       		.uleb128 0x12
 3050 0c7a 01       		.byte	0x1
 3051 0c7b 2C000000 		.4byte	0x2c
 3052 0c7f 01       		.byte	0x1
 3053 0c80 0703     		.2byte	0x307
 3054 0c82 930C0000 		.4byte	0xc93
 3055 0c86 13       		.uleb128 0x13
 3056 0c87 590A0000 		.4byte	.LASF191
 3057 0c8b 00       		.byte	0
 3058 0c8c 13       		.uleb128 0x13
 3059 0c8d CE110000 		.4byte	.LASF192
 3060 0c91 01       		.byte	0x1
 3061 0c92 00       		.byte	0
 3062 0c93 0F       		.uleb128 0xf
 3063 0c94 41030000 		.4byte	.LASF193
 3064 0c98 01       		.byte	0x1
 3065 0c99 0A03     		.2byte	0x30a
 3066 0c9b 790C0000 		.4byte	0xc79
 3067 0c9f 12       		.uleb128 0x12
 3068 0ca0 01       		.byte	0x1
 3069 0ca1 2C000000 		.4byte	0x2c
 3070 0ca5 01       		.byte	0x1
 3071 0ca6 0E03     		.2byte	0x30e
 3072 0ca8 B90C0000 		.4byte	0xcb9
 3073 0cac 13       		.uleb128 0x13
 3074 0cad A3050000 		.4byte	.LASF194
 3075 0cb1 00       		.byte	0
 3076 0cb2 13       		.uleb128 0x13
 3077 0cb3 DE020000 		.4byte	.LASF195
 3078 0cb7 01       		.byte	0x1
 3079 0cb8 00       		.byte	0
 3080 0cb9 0F       		.uleb128 0xf
 3081 0cba 5B0E0000 		.4byte	.LASF196
 3082 0cbe 01       		.byte	0x1
 3083 0cbf 1103     		.2byte	0x311
 3084 0cc1 9F0C0000 		.4byte	0xc9f
 3085 0cc5 12       		.uleb128 0x12
 3086 0cc6 01       		.byte	0x1
 3087 0cc7 2C000000 		.4byte	0x2c
 3088 0ccb 01       		.byte	0x1
 3089 0ccc 1503     		.2byte	0x315
 3090 0cce DF0C0000 		.4byte	0xcdf
 3091 0cd2 13       		.uleb128 0x13
 3092 0cd3 D30E0000 		.4byte	.LASF197
 3093 0cd7 00       		.byte	0
 3094 0cd8 13       		.uleb128 0x13
 3095 0cd9 7F110000 		.4byte	.LASF198
 3096 0cdd 01       		.byte	0x1
 3097 0cde 00       		.byte	0
 3098 0cdf 0F       		.uleb128 0xf
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 157


 3099 0ce0 07020000 		.4byte	.LASF199
 3100 0ce4 01       		.byte	0x1
 3101 0ce5 1803     		.2byte	0x318
 3102 0ce7 C50C0000 		.4byte	0xcc5
 3103 0ceb 12       		.uleb128 0x12
 3104 0cec 01       		.byte	0x1
 3105 0ced 2C000000 		.4byte	0x2c
 3106 0cf1 01       		.byte	0x1
 3107 0cf2 1C03     		.2byte	0x31c
 3108 0cf4 050D0000 		.4byte	0xd05
 3109 0cf8 13       		.uleb128 0x13
 3110 0cf9 7C0F0000 		.4byte	.LASF200
 3111 0cfd 00       		.byte	0
 3112 0cfe 13       		.uleb128 0x13
 3113 0cff A40B0000 		.4byte	.LASF201
 3114 0d03 01       		.byte	0x1
 3115 0d04 00       		.byte	0
 3116 0d05 0F       		.uleb128 0xf
 3117 0d06 A7070000 		.4byte	.LASF202
 3118 0d0a 01       		.byte	0x1
 3119 0d0b 1F03     		.2byte	0x31f
 3120 0d0d EB0C0000 		.4byte	0xceb
 3121 0d11 12       		.uleb128 0x12
 3122 0d12 01       		.byte	0x1
 3123 0d13 2C000000 		.4byte	0x2c
 3124 0d17 01       		.byte	0x1
 3125 0d18 2303     		.2byte	0x323
 3126 0d1a 250D0000 		.4byte	0xd25
 3127 0d1e 13       		.uleb128 0x13
 3128 0d1f BF050000 		.4byte	.LASF203
 3129 0d23 00       		.byte	0
 3130 0d24 00       		.byte	0
 3131 0d25 12       		.uleb128 0x12
 3132 0d26 01       		.byte	0x1
 3133 0d27 2C000000 		.4byte	0x2c
 3134 0d2b 01       		.byte	0x1
 3135 0d2c 1304     		.2byte	0x413
 3136 0d2e 4B0D0000 		.4byte	0xd4b
 3137 0d32 13       		.uleb128 0x13
 3138 0d33 A6030000 		.4byte	.LASF204
 3139 0d37 00       		.byte	0
 3140 0d38 13       		.uleb128 0x13
 3141 0d39 39050000 		.4byte	.LASF205
 3142 0d3d 01       		.byte	0x1
 3143 0d3e 13       		.uleb128 0x13
 3144 0d3f 8F070000 		.4byte	.LASF206
 3145 0d43 02       		.byte	0x2
 3146 0d44 13       		.uleb128 0x13
 3147 0d45 BA010000 		.4byte	.LASF207
 3148 0d49 03       		.byte	0x3
 3149 0d4a 00       		.byte	0
 3150 0d4b 0F       		.uleb128 0xf
 3151 0d4c 9F110000 		.4byte	.LASF208
 3152 0d50 01       		.byte	0x1
 3153 0d51 1804     		.2byte	0x418
 3154 0d53 250D0000 		.4byte	0xd25
 3155 0d57 12       		.uleb128 0x12
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 158


 3156 0d58 01       		.byte	0x1
 3157 0d59 2C000000 		.4byte	0x2c
 3158 0d5d 01       		.byte	0x1
 3159 0d5e 9404     		.2byte	0x494
 3160 0d60 7D0D0000 		.4byte	0xd7d
 3161 0d64 13       		.uleb128 0x13
 3162 0d65 900E0000 		.4byte	.LASF209
 3163 0d69 00       		.byte	0
 3164 0d6a 13       		.uleb128 0x13
 3165 0d6b BA060000 		.4byte	.LASF210
 3166 0d6f 01       		.byte	0x1
 3167 0d70 13       		.uleb128 0x13
 3168 0d71 EF080000 		.4byte	.LASF211
 3169 0d75 02       		.byte	0x2
 3170 0d76 13       		.uleb128 0x13
 3171 0d77 1C090000 		.4byte	.LASF212
 3172 0d7b 04       		.byte	0x4
 3173 0d7c 00       		.byte	0
 3174 0d7d 15       		.uleb128 0x15
 3175 0d7e 78       		.byte	0x78
 3176 0d7f 01       		.byte	0x1
 3177 0d80 0205     		.2byte	0x502
 3178 0d82 4A0E0000 		.4byte	0xe4a
 3179 0d86 16       		.uleb128 0x16
 3180 0d87 66050000 		.4byte	.LASF213
 3181 0d8b 01       		.byte	0x1
 3182 0d8c 0405     		.2byte	0x504
 3183 0d8e B8000000 		.4byte	0xb8
 3184 0d92 00       		.byte	0
 3185 0d93 16       		.uleb128 0x16
 3186 0d94 850E0000 		.4byte	.LASF214
 3187 0d98 01       		.byte	0x1
 3188 0d99 0505     		.2byte	0x505
 3189 0d9b B8000000 		.4byte	0xb8
 3190 0d9f 04       		.byte	0x4
 3191 0da0 16       		.uleb128 0x16
 3192 0da1 3A0B0000 		.4byte	.LASF215
 3193 0da5 01       		.byte	0x1
 3194 0da6 0605     		.2byte	0x506
 3195 0da8 B8000000 		.4byte	0xb8
 3196 0dac 08       		.byte	0x8
 3197 0dad 16       		.uleb128 0x16
 3198 0dae D00D0000 		.4byte	.LASF216
 3199 0db2 01       		.byte	0x1
 3200 0db3 0705     		.2byte	0x507
 3201 0db5 B8000000 		.4byte	0xb8
 3202 0db9 0C       		.byte	0xc
 3203 0dba 16       		.uleb128 0x16
 3204 0dbb 23050000 		.4byte	.LASF217
 3205 0dbf 01       		.byte	0x1
 3206 0dc0 0805     		.2byte	0x508
 3207 0dc2 B8000000 		.4byte	0xb8
 3208 0dc6 10       		.byte	0x10
 3209 0dc7 16       		.uleb128 0x16
 3210 0dc8 A7080000 		.4byte	.LASF218
 3211 0dcc 01       		.byte	0x1
 3212 0dcd 0905     		.2byte	0x509
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 159


 3213 0dcf 4B0D0000 		.4byte	0xd4b
 3214 0dd3 14       		.byte	0x14
 3215 0dd4 16       		.uleb128 0x16
 3216 0dd5 D8070000 		.4byte	.LASF219
 3217 0dd9 01       		.byte	0x1
 3218 0dda 0A05     		.2byte	0x50a
 3219 0ddc B8000000 		.4byte	0xb8
 3220 0de0 18       		.byte	0x18
 3221 0de1 16       		.uleb128 0x16
 3222 0de2 C9100000 		.4byte	.LASF220
 3223 0de6 01       		.byte	0x1
 3224 0de7 0B05     		.2byte	0x50b
 3225 0de9 4A0E0000 		.4byte	0xe4a
 3226 0ded 1C       		.byte	0x1c
 3227 0dee 16       		.uleb128 0x16
 3228 0def 0D120000 		.4byte	.LASF221
 3229 0df3 01       		.byte	0x1
 3230 0df4 0C05     		.2byte	0x50c
 3231 0df6 B8000000 		.4byte	0xb8
 3232 0dfa 5C       		.byte	0x5c
 3233 0dfb 16       		.uleb128 0x16
 3234 0dfc 35030000 		.4byte	.LASF222
 3235 0e00 01       		.byte	0x1
 3236 0e01 0D05     		.2byte	0x50d
 3237 0e03 B8000000 		.4byte	0xb8
 3238 0e07 60       		.byte	0x60
 3239 0e08 16       		.uleb128 0x16
 3240 0e09 71110000 		.4byte	.LASF223
 3241 0e0d 01       		.byte	0x1
 3242 0e0e 0E05     		.2byte	0x50e
 3243 0e10 B8000000 		.4byte	0xb8
 3244 0e14 64       		.byte	0x64
 3245 0e15 16       		.uleb128 0x16
 3246 0e16 D10A0000 		.4byte	.LASF224
 3247 0e1a 01       		.byte	0x1
 3248 0e1b 0F05     		.2byte	0x50f
 3249 0e1d B8000000 		.4byte	0xb8
 3250 0e21 68       		.byte	0x68
 3251 0e22 16       		.uleb128 0x16
 3252 0e23 97080000 		.4byte	.LASF225
 3253 0e27 01       		.byte	0x1
 3254 0e28 1005     		.2byte	0x510
 3255 0e2a B8000000 		.4byte	0xb8
 3256 0e2e 6C       		.byte	0x6c
 3257 0e2f 16       		.uleb128 0x16
 3258 0e30 0C110000 		.4byte	.LASF226
 3259 0e34 01       		.byte	0x1
 3260 0e35 1105     		.2byte	0x511
 3261 0e37 5A0E0000 		.4byte	0xe5a
 3262 0e3b 70       		.byte	0x70
 3263 0e3c 16       		.uleb128 0x16
 3264 0e3d 4B070000 		.4byte	.LASF227
 3265 0e41 01       		.byte	0x1
 3266 0e42 1205     		.2byte	0x512
 3267 0e44 B8000000 		.4byte	0xb8
 3268 0e48 74       		.byte	0x74
 3269 0e49 00       		.byte	0
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 160


 3270 0e4a 07       		.uleb128 0x7
 3271 0e4b B8000000 		.4byte	0xb8
 3272 0e4f 5A0E0000 		.4byte	0xe5a
 3273 0e53 08       		.uleb128 0x8
 3274 0e54 C3000000 		.4byte	0xc3
 3275 0e58 0F       		.byte	0xf
 3276 0e59 00       		.byte	0
 3277 0e5a 02       		.uleb128 0x2
 3278 0e5b 01       		.byte	0x1
 3279 0e5c 02       		.byte	0x2
 3280 0e5d 77060000 		.4byte	.LASF228
 3281 0e61 0F       		.uleb128 0xf
 3282 0e62 52050000 		.4byte	.LASF229
 3283 0e66 01       		.byte	0x1
 3284 0e67 1305     		.2byte	0x513
 3285 0e69 7D0D0000 		.4byte	0xd7d
 3286 0e6d 12       		.uleb128 0x12
 3287 0e6e 04       		.byte	0x4
 3288 0e6f 90000000 		.4byte	0x90
 3289 0e73 02       		.byte	0x2
 3290 0e74 5C02     		.2byte	0x25c
 3291 0e76 9C0E0000 		.4byte	0xe9c
 3292 0e7a 13       		.uleb128 0x13
 3293 0e7b 20020000 		.4byte	.LASF230
 3294 0e7f 00       		.byte	0
 3295 0e80 14       		.uleb128 0x14
 3296 0e81 CB0B0000 		.4byte	.LASF231
 3297 0e85 01004A00 		.4byte	0x4a0001
 3298 0e89 14       		.uleb128 0x14
 3299 0e8a 70010000 		.4byte	.LASF232
 3300 0e8e 02004A00 		.4byte	0x4a0002
 3301 0e92 14       		.uleb128 0x14
 3302 0e93 220B0000 		.4byte	.LASF233
 3303 0e97 03004A00 		.4byte	0x4a0003
 3304 0e9b 00       		.byte	0
 3305 0e9c 0F       		.uleb128 0xf
 3306 0e9d D2050000 		.4byte	.LASF234
 3307 0ea1 02       		.byte	0x2
 3308 0ea2 6102     		.2byte	0x261
 3309 0ea4 6D0E0000 		.4byte	0xe6d
 3310 0ea8 12       		.uleb128 0x12
 3311 0ea9 01       		.byte	0x1
 3312 0eaa 2C000000 		.4byte	0x2c
 3313 0eae 02       		.byte	0x2
 3314 0eaf 2107     		.2byte	0x721
 3315 0eb1 CE0E0000 		.4byte	0xece
 3316 0eb5 13       		.uleb128 0x13
 3317 0eb6 0E010000 		.4byte	.LASF235
 3318 0eba 00       		.byte	0
 3319 0ebb 13       		.uleb128 0x13
 3320 0ebc 6B0B0000 		.4byte	.LASF236
 3321 0ec0 01       		.byte	0x1
 3322 0ec1 13       		.uleb128 0x13
 3323 0ec2 850A0000 		.4byte	.LASF237
 3324 0ec6 02       		.byte	0x2
 3325 0ec7 13       		.uleb128 0x13
 3326 0ec8 E60E0000 		.4byte	.LASF238
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 161


 3327 0ecc 03       		.byte	0x3
 3328 0ecd 00       		.byte	0
 3329 0ece 0F       		.uleb128 0xf
 3330 0ecf 3E0F0000 		.4byte	.LASF239
 3331 0ed3 02       		.byte	0x2
 3332 0ed4 2607     		.2byte	0x726
 3333 0ed6 A80E0000 		.4byte	0xea8
 3334 0eda 09       		.uleb128 0x9
 3335 0edb 14       		.byte	0x14
 3336 0edc 04       		.byte	0x4
 3337 0edd 3B       		.byte	0x3b
 3338 0ede 1F0F0000 		.4byte	0xf1f
 3339 0ee2 0A       		.uleb128 0xa
 3340 0ee3 44120000 		.4byte	.LASF240
 3341 0ee7 04       		.byte	0x4
 3342 0ee8 3D       		.byte	0x3d
 3343 0ee9 B8000000 		.4byte	0xb8
 3344 0eed 00       		.byte	0
 3345 0eee 0A       		.uleb128 0xa
 3346 0eef 7E040000 		.4byte	.LASF241
 3347 0ef3 04       		.byte	0x4
 3348 0ef4 3E       		.byte	0x3e
 3349 0ef5 B8000000 		.4byte	0xb8
 3350 0ef9 04       		.byte	0x4
 3351 0efa 0A       		.uleb128 0xa
 3352 0efb 84020000 		.4byte	.LASF242
 3353 0eff 04       		.byte	0x4
 3354 0f00 3F       		.byte	0x3f
 3355 0f01 1F0F0000 		.4byte	0xf1f
 3356 0f05 08       		.byte	0x8
 3357 0f06 0A       		.uleb128 0xa
 3358 0f07 770D0000 		.4byte	.LASF243
 3359 0f0b 04       		.byte	0x4
 3360 0f0c 40       		.byte	0x40
 3361 0f0d B8000000 		.4byte	0xb8
 3362 0f11 0C       		.byte	0xc
 3363 0f12 0A       		.uleb128 0xa
 3364 0f13 330F0000 		.4byte	.LASF244
 3365 0f17 04       		.byte	0x4
 3366 0f18 45       		.byte	0x45
 3367 0f19 B8000000 		.4byte	0xb8
 3368 0f1d 10       		.byte	0x10
 3369 0f1e 00       		.byte	0
 3370 0f1f 10       		.uleb128 0x10
 3371 0f20 04       		.byte	0x4
 3372 0f21 250F0000 		.4byte	0xf25
 3373 0f25 06       		.uleb128 0x6
 3374 0f26 610E0000 		.4byte	0xe61
 3375 0f2a 03       		.uleb128 0x3
 3376 0f2b 8F050000 		.4byte	.LASF245
 3377 0f2f 04       		.byte	0x4
 3378 0f30 48       		.byte	0x48
 3379 0f31 DA0E0000 		.4byte	0xeda
 3380 0f35 17       		.uleb128 0x17
 3381 0f36 4D0C0000 		.4byte	.LASF246
 3382 0f3a 01       		.byte	0x1
 3383 0f3b 9E05     		.2byte	0x59e
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 162


 3384 0f3d 00000000 		.4byte	.LFB79
 3385 0f41 1C000000 		.4byte	.LFE79-.LFB79
 3386 0f45 01       		.uleb128 0x1
 3387 0f46 9C       		.byte	0x9c
 3388 0f47 5B0F0000 		.4byte	0xf5b
 3389 0f4b 18       		.uleb128 0x18
 3390 0f4c 79040000 		.4byte	.LASF248
 3391 0f50 01       		.byte	0x1
 3392 0f51 9E05     		.2byte	0x59e
 3393 0f53 5B0F0000 		.4byte	0xf5b
 3394 0f57 02       		.uleb128 0x2
 3395 0f58 91       		.byte	0x91
 3396 0f59 74       		.sleb128 -12
 3397 0f5a 00       		.byte	0
 3398 0f5b 10       		.uleb128 0x10
 3399 0f5c 04       		.byte	0x4
 3400 0f5d CF070000 		.4byte	0x7cf
 3401 0f61 19       		.uleb128 0x19
 3402 0f62 09090000 		.4byte	.LASF247
 3403 0f66 01       		.byte	0x1
 3404 0f67 DB05     		.2byte	0x5db
 3405 0f69 00000000 		.4byte	.LFB81
 3406 0f6d 38000000 		.4byte	.LFE81-.LFB81
 3407 0f71 01       		.uleb128 0x1
 3408 0f72 9C       		.byte	0x9c
 3409 0f73 960F0000 		.4byte	0xf96
 3410 0f77 18       		.uleb128 0x18
 3411 0f78 79040000 		.4byte	.LASF248
 3412 0f7c 01       		.byte	0x1
 3413 0f7d DB05     		.2byte	0x5db
 3414 0f7f 5B0F0000 		.4byte	0xf5b
 3415 0f83 02       		.uleb128 0x2
 3416 0f84 91       		.byte	0x91
 3417 0f85 74       		.sleb128 -12
 3418 0f86 18       		.uleb128 0x18
 3419 0f87 02070000 		.4byte	.LASF249
 3420 0f8b 01       		.byte	0x1
 3421 0f8c DB05     		.2byte	0x5db
 3422 0f8e B8000000 		.4byte	0xb8
 3423 0f92 02       		.uleb128 0x2
 3424 0f93 91       		.byte	0x91
 3425 0f94 70       		.sleb128 -16
 3426 0f95 00       		.byte	0
 3427 0f96 19       		.uleb128 0x19
 3428 0f97 540F0000 		.4byte	.LASF250
 3429 0f9b 01       		.byte	0x1
 3430 0f9c 6D06     		.2byte	0x66d
 3431 0f9e 00000000 		.4byte	.LFB86
 3432 0fa2 38000000 		.4byte	.LFE86-.LFB86
 3433 0fa6 01       		.uleb128 0x1
 3434 0fa7 9C       		.byte	0x9c
 3435 0fa8 CB0F0000 		.4byte	0xfcb
 3436 0fac 18       		.uleb128 0x18
 3437 0fad 79040000 		.4byte	.LASF248
 3438 0fb1 01       		.byte	0x1
 3439 0fb2 6D06     		.2byte	0x66d
 3440 0fb4 5B0F0000 		.4byte	0xf5b
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 163


 3441 0fb8 02       		.uleb128 0x2
 3442 0fb9 91       		.byte	0x91
 3443 0fba 74       		.sleb128 -12
 3444 0fbb 18       		.uleb128 0x18
 3445 0fbc 0D120000 		.4byte	.LASF221
 3446 0fc0 01       		.byte	0x1
 3447 0fc1 6D06     		.2byte	0x66d
 3448 0fc3 B8000000 		.4byte	0xb8
 3449 0fc7 02       		.uleb128 0x2
 3450 0fc8 91       		.byte	0x91
 3451 0fc9 70       		.sleb128 -16
 3452 0fca 00       		.byte	0
 3453 0fcb 19       		.uleb128 0x19
 3454 0fcc 1F040000 		.4byte	.LASF251
 3455 0fd0 01       		.byte	0x1
 3456 0fd1 1B08     		.2byte	0x81b
 3457 0fd3 00000000 		.4byte	.LFB103
 3458 0fd7 28000000 		.4byte	.LFE103-.LFB103
 3459 0fdb 01       		.uleb128 0x1
 3460 0fdc 9C       		.byte	0x9c
 3461 0fdd 00100000 		.4byte	0x1000
 3462 0fe1 18       		.uleb128 0x18
 3463 0fe2 79040000 		.4byte	.LASF248
 3464 0fe6 01       		.byte	0x1
 3465 0fe7 1B08     		.2byte	0x81b
 3466 0fe9 5B0F0000 		.4byte	0xf5b
 3467 0fed 02       		.uleb128 0x2
 3468 0fee 91       		.byte	0x91
 3469 0fef 74       		.sleb128 -12
 3470 0ff0 18       		.uleb128 0x18
 3471 0ff1 730E0000 		.4byte	.LASF252
 3472 0ff5 01       		.byte	0x1
 3473 0ff6 1B08     		.2byte	0x81b
 3474 0ff8 DF0C0000 		.4byte	0xcdf
 3475 0ffc 02       		.uleb128 0x2
 3476 0ffd 91       		.byte	0x91
 3477 0ffe 73       		.sleb128 -13
 3478 0fff 00       		.byte	0
 3479 1000 19       		.uleb128 0x19
 3480 1001 160E0000 		.4byte	.LASF253
 3481 1005 01       		.byte	0x1
 3482 1006 3608     		.2byte	0x836
 3483 1008 00000000 		.4byte	.LFB104
 3484 100c 26000000 		.4byte	.LFE104-.LFB104
 3485 1010 01       		.uleb128 0x1
 3486 1011 9C       		.byte	0x9c
 3487 1012 35100000 		.4byte	0x1035
 3488 1016 18       		.uleb128 0x18
 3489 1017 79040000 		.4byte	.LASF248
 3490 101b 01       		.byte	0x1
 3491 101c 3608     		.2byte	0x836
 3492 101e 5B0F0000 		.4byte	0xf5b
 3493 1022 02       		.uleb128 0x2
 3494 1023 91       		.byte	0x91
 3495 1024 74       		.sleb128 -12
 3496 1025 18       		.uleb128 0x18
 3497 1026 66050000 		.4byte	.LASF213
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 164


 3498 102a 01       		.byte	0x1
 3499 102b 3608     		.2byte	0x836
 3500 102d 050D0000 		.4byte	0xd05
 3501 1031 02       		.uleb128 0x2
 3502 1032 91       		.byte	0x91
 3503 1033 73       		.sleb128 -13
 3504 1034 00       		.byte	0
 3505 1035 1A       		.uleb128 0x1a
 3506 1036 51090000 		.4byte	.LASF257
 3507 103a 02       		.byte	0x2
 3508 103b 5207     		.2byte	0x752
 3509 103d 9C0E0000 		.4byte	0xe9c
 3510 1041 00000000 		.4byte	.LFB134
 3511 1045 F0000000 		.4byte	.LFE134-.LFB134
 3512 1049 01       		.uleb128 0x1
 3513 104a 9C       		.byte	0x9c
 3514 104b 8C100000 		.4byte	0x108c
 3515 104f 18       		.uleb128 0x18
 3516 1050 F4070000 		.4byte	.LASF254
 3517 1054 02       		.byte	0x2
 3518 1055 5207     		.2byte	0x752
 3519 1057 CE0E0000 		.4byte	0xece
 3520 105b 02       		.uleb128 0x2
 3521 105c 91       		.byte	0x91
 3522 105d 67       		.sleb128 -25
 3523 105e 18       		.uleb128 0x18
 3524 105f EB010000 		.4byte	.LASF255
 3525 1063 02       		.byte	0x2
 3526 1064 5307     		.2byte	0x753
 3527 1066 B8000000 		.4byte	0xb8
 3528 106a 02       		.uleb128 0x2
 3529 106b 91       		.byte	0x91
 3530 106c 60       		.sleb128 -32
 3531 106d 18       		.uleb128 0x18
 3532 106e 3D080000 		.4byte	.LASF256
 3533 1072 02       		.byte	0x2
 3534 1073 5307     		.2byte	0x753
 3535 1075 B8000000 		.4byte	0xb8
 3536 1079 02       		.uleb128 0x2
 3537 107a 91       		.byte	0x91
 3538 107b 5C       		.sleb128 -36
 3539 107c 1B       		.uleb128 0x1b
 3540 107d 0F0E0000 		.4byte	.LASF259
 3541 1081 02       		.byte	0x2
 3542 1082 5507     		.2byte	0x755
 3543 1084 9C0E0000 		.4byte	0xe9c
 3544 1088 02       		.uleb128 0x2
 3545 1089 91       		.byte	0x91
 3546 108a 6C       		.sleb128 -20
 3547 108b 00       		.byte	0
 3548 108c 1A       		.uleb128 0x1a
 3549 108d E30C0000 		.4byte	.LASF258
 3550 1091 02       		.byte	0x2
 3551 1092 4908     		.2byte	0x849
 3552 1094 9C0E0000 		.4byte	0xe9c
 3553 1098 00000000 		.4byte	.LFB140
 3554 109c E4000000 		.4byte	.LFE140-.LFB140
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 165


 3555 10a0 01       		.uleb128 0x1
 3556 10a1 9C       		.byte	0x9c
 3557 10a2 D4100000 		.4byte	0x10d4
 3558 10a6 18       		.uleb128 0x18
 3559 10a7 F4070000 		.4byte	.LASF254
 3560 10ab 02       		.byte	0x2
 3561 10ac 4908     		.2byte	0x849
 3562 10ae CE0E0000 		.4byte	0xece
 3563 10b2 02       		.uleb128 0x2
 3564 10b3 91       		.byte	0x91
 3565 10b4 67       		.sleb128 -25
 3566 10b5 18       		.uleb128 0x18
 3567 10b6 EB010000 		.4byte	.LASF255
 3568 10ba 02       		.byte	0x2
 3569 10bb 4908     		.2byte	0x849
 3570 10bd B8000000 		.4byte	0xb8
 3571 10c1 02       		.uleb128 0x2
 3572 10c2 91       		.byte	0x91
 3573 10c3 60       		.sleb128 -32
 3574 10c4 1B       		.uleb128 0x1b
 3575 10c5 0F0E0000 		.4byte	.LASF259
 3576 10c9 02       		.byte	0x2
 3577 10ca 4B08     		.2byte	0x84b
 3578 10cc 9C0E0000 		.4byte	0xe9c
 3579 10d0 02       		.uleb128 0x2
 3580 10d1 91       		.byte	0x91
 3581 10d2 6C       		.sleb128 -20
 3582 10d3 00       		.byte	0
 3583 10d4 1A       		.uleb128 0x1a
 3584 10d5 88000000 		.4byte	.LASF260
 3585 10d9 02       		.byte	0x2
 3586 10da 6F08     		.2byte	0x86f
 3587 10dc 9C0E0000 		.4byte	0xe9c
 3588 10e0 00000000 		.4byte	.LFB141
 3589 10e4 AC000000 		.4byte	.LFE141-.LFB141
 3590 10e8 01       		.uleb128 0x1
 3591 10e9 9C       		.byte	0x9c
 3592 10ea 1C110000 		.4byte	0x111c
 3593 10ee 18       		.uleb128 0x18
 3594 10ef F4070000 		.4byte	.LASF254
 3595 10f3 02       		.byte	0x2
 3596 10f4 6F08     		.2byte	0x86f
 3597 10f6 CE0E0000 		.4byte	0xece
 3598 10fa 02       		.uleb128 0x2
 3599 10fb 91       		.byte	0x91
 3600 10fc 6F       		.sleb128 -17
 3601 10fd 18       		.uleb128 0x18
 3602 10fe EB010000 		.4byte	.LASF255
 3603 1102 02       		.byte	0x2
 3604 1103 6F08     		.2byte	0x86f
 3605 1105 B8000000 		.4byte	0xb8
 3606 1109 02       		.uleb128 0x2
 3607 110a 91       		.byte	0x91
 3608 110b 68       		.sleb128 -24
 3609 110c 1B       		.uleb128 0x1b
 3610 110d 0F0E0000 		.4byte	.LASF259
 3611 1111 02       		.byte	0x2
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 166


 3612 1112 7108     		.2byte	0x871
 3613 1114 9C0E0000 		.4byte	0xe9c
 3614 1118 02       		.uleb128 0x2
 3615 1119 91       		.byte	0x91
 3616 111a 74       		.sleb128 -12
 3617 111b 00       		.byte	0
 3618 111c 1C       		.uleb128 0x1c
 3619 111d 26120000 		.4byte	.LASF261
 3620 1121 03       		.byte	0x3
 3621 1122 3C       		.byte	0x3c
 3622 1123 00000000 		.4byte	.LFB162
 3623 1127 12000000 		.4byte	.LFE162-.LFB162
 3624 112b 01       		.uleb128 0x1
 3625 112c 9C       		.byte	0x9c
 3626 112d 1C       		.uleb128 0x1c
 3627 112e EC000000 		.4byte	.LASF262
 3628 1132 03       		.byte	0x3
 3629 1133 4C       		.byte	0x4c
 3630 1134 00000000 		.4byte	.LFB163
 3631 1138 12000000 		.4byte	.LFE163-.LFB163
 3632 113c 01       		.uleb128 0x1
 3633 113d 9C       		.byte	0x9c
 3634 113e 1D       		.uleb128 0x1d
 3635 113f E8050000 		.4byte	.LASF263
 3636 1143 03       		.byte	0x3
 3637 1144 62       		.byte	0x62
 3638 1145 00000000 		.4byte	.LFB164
 3639 1149 1C000000 		.4byte	.LFE164-.LFB164
 3640 114d 01       		.uleb128 0x1
 3641 114e 9C       		.byte	0x9c
 3642 114f 62110000 		.4byte	0x1162
 3643 1153 1E       		.uleb128 0x1e
 3644 1154 3D080000 		.4byte	.LASF256
 3645 1158 03       		.byte	0x3
 3646 1159 62       		.byte	0x62
 3647 115a B8000000 		.4byte	0xb8
 3648 115e 02       		.uleb128 0x2
 3649 115f 91       		.byte	0x91
 3650 1160 74       		.sleb128 -12
 3651 1161 00       		.byte	0
 3652 1162 1F       		.uleb128 0x1f
 3653 1163 030B0000 		.4byte	.LASF264
 3654 1167 04       		.byte	0x4
 3655 1168 9203     		.2byte	0x392
 3656 116a 00000000 		.4byte	.LFB168
 3657 116e 18000000 		.4byte	.LFE168-.LFB168
 3658 1172 01       		.uleb128 0x1
 3659 1173 9C       		.byte	0x9c
 3660 1174 1F       		.uleb128 0x1f
 3661 1175 D8060000 		.4byte	.LASF265
 3662 1179 04       		.byte	0x4
 3663 117a AE03     		.2byte	0x3ae
 3664 117c 00000000 		.4byte	.LFB169
 3665 1180 18000000 		.4byte	.LFE169-.LFB169
 3666 1184 01       		.uleb128 0x1
 3667 1185 9C       		.byte	0x9c
 3668 1186 20       		.uleb128 0x20
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 167


 3669 1187 6B060000 		.4byte	.LASF273
 3670 118b 05       		.byte	0x5
 3671 118c 41       		.byte	0x41
 3672 118d 00000000 		.4byte	.LFB186
 3673 1191 34000000 		.4byte	.LFE186-.LFB186
 3674 1195 01       		.uleb128 0x1
 3675 1196 9C       		.byte	0x9c
 3676 1197 21       		.uleb128 0x21
 3677 1198 D4000000 		.4byte	.LASF267
 3678 119c 05       		.byte	0x5
 3679 119d 5E       		.byte	0x5e
 3680 119e 00000000 		.4byte	.LFB187
 3681 11a2 14000000 		.4byte	.LFE187-.LFB187
 3682 11a6 01       		.uleb128 0x1
 3683 11a7 9C       		.byte	0x9c
 3684 11a8 BB110000 		.4byte	0x11bb
 3685 11ac 1E       		.uleb128 0x1e
 3686 11ad FB090000 		.4byte	.LASF266
 3687 11b1 05       		.byte	0x5
 3688 11b2 5E       		.byte	0x5e
 3689 11b3 FE0B0000 		.4byte	0xbfe
 3690 11b7 02       		.uleb128 0x2
 3691 11b8 91       		.byte	0x91
 3692 11b9 74       		.sleb128 -12
 3693 11ba 00       		.byte	0
 3694 11bb 21       		.uleb128 0x21
 3695 11bc 1F030000 		.4byte	.LASF268
 3696 11c0 05       		.byte	0x5
 3697 11c1 80       		.byte	0x80
 3698 11c2 00000000 		.4byte	.LFB188
 3699 11c6 6C000000 		.4byte	.LFE188-.LFB188
 3700 11ca 01       		.uleb128 0x1
 3701 11cb 9C       		.byte	0x9c
 3702 11cc ED110000 		.4byte	0x11ed
 3703 11d0 1E       		.uleb128 0x1e
 3704 11d1 9D0B0000 		.4byte	.LASF269
 3705 11d5 05       		.byte	0x5
 3706 11d6 80       		.byte	0x80
 3707 11d7 ED110000 		.4byte	0x11ed
 3708 11db 02       		.uleb128 0x2
 3709 11dc 91       		.byte	0x91
 3710 11dd 6C       		.sleb128 -20
 3711 11de 22       		.uleb128 0x22
 3712 11df FE100000 		.4byte	.LASF270
 3713 11e3 05       		.byte	0x5
 3714 11e4 82       		.byte	0x82
 3715 11e5 5A0E0000 		.4byte	0xe5a
 3716 11e9 02       		.uleb128 0x2
 3717 11ea 91       		.byte	0x91
 3718 11eb 77       		.sleb128 -9
 3719 11ec 00       		.byte	0
 3720 11ed 10       		.uleb128 0x10
 3721 11ee 04       		.byte	0x4
 3722 11ef F3110000 		.4byte	0x11f3
 3723 11f3 06       		.uleb128 0x6
 3724 11f4 2A0F0000 		.4byte	0xf2a
 3725 11f8 21       		.uleb128 0x21
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 168


 3726 11f9 DB0F0000 		.4byte	.LASF271
 3727 11fd 05       		.byte	0x5
 3728 11fe AA       		.byte	0xaa
 3729 11ff 00000000 		.4byte	.LFB189
 3730 1203 78000000 		.4byte	.LFE189-.LFB189
 3731 1207 01       		.uleb128 0x1
 3732 1208 9C       		.byte	0x9c
 3733 1209 2A120000 		.4byte	0x122a
 3734 120d 1E       		.uleb128 0x1e
 3735 120e 9D0B0000 		.4byte	.LASF269
 3736 1212 05       		.byte	0x5
 3737 1213 AA       		.byte	0xaa
 3738 1214 B8000000 		.4byte	0xb8
 3739 1218 02       		.uleb128 0x2
 3740 1219 91       		.byte	0x91
 3741 121a 74       		.sleb128 -12
 3742 121b 1E       		.uleb128 0x1e
 3743 121c 9A010000 		.4byte	.LASF272
 3744 1220 05       		.byte	0x5
 3745 1221 AA       		.byte	0xaa
 3746 1222 B8000000 		.4byte	0xb8
 3747 1226 02       		.uleb128 0x2
 3748 1227 91       		.byte	0x91
 3749 1228 70       		.sleb128 -16
 3750 1229 00       		.byte	0
 3751 122a 20       		.uleb128 0x20
 3752 122b A5020000 		.4byte	.LASF274
 3753 122f 05       		.byte	0x5
 3754 1230 E3       		.byte	0xe3
 3755 1231 00000000 		.4byte	.LFB190
 3756 1235 30000000 		.4byte	.LFE190-.LFB190
 3757 1239 01       		.uleb128 0x1
 3758 123a 9C       		.byte	0x9c
 3759 123b 23       		.uleb128 0x23
 3760 123c 85030000 		.4byte	.LASF275
 3761 1240 05       		.byte	0x5
 3762 1241 FE       		.byte	0xfe
 3763 1242 00000000 		.4byte	.LFB191
 3764 1246 44000000 		.4byte	.LFE191-.LFB191
 3765 124a 01       		.uleb128 0x1
 3766 124b 9C       		.byte	0x9c
 3767 124c 5F120000 		.4byte	0x125f
 3768 1250 1E       		.uleb128 0x1e
 3769 1251 30030000 		.4byte	.LASF276
 3770 1255 05       		.byte	0x5
 3771 1256 FE       		.byte	0xfe
 3772 1257 930C0000 		.4byte	0xc93
 3773 125b 02       		.uleb128 0x2
 3774 125c 91       		.byte	0x91
 3775 125d 77       		.sleb128 -9
 3776 125e 00       		.byte	0
 3777 125f 24       		.uleb128 0x24
 3778 1260 C7070000 		.4byte	.LASF277
 3779 1264 05       		.byte	0x5
 3780 1265 1A01     		.2byte	0x11a
 3781 1267 00000000 		.4byte	.LFB192
 3782 126b 0A000000 		.4byte	.LFE192-.LFB192
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 169


 3783 126f 01       		.uleb128 0x1
 3784 1270 9C       		.byte	0x9c
 3785 1271 24       		.uleb128 0x24
 3786 1272 9B0F0000 		.4byte	.LASF278
 3787 1276 05       		.byte	0x5
 3788 1277 3601     		.2byte	0x136
 3789 1279 00000000 		.4byte	.LFB193
 3790 127d 0A000000 		.4byte	.LFE193-.LFB193
 3791 1281 01       		.uleb128 0x1
 3792 1282 9C       		.byte	0x9c
 3793 1283 25       		.uleb128 0x25
 3794 1284 C00A0000 		.4byte	.LASF279
 3795 1288 05       		.byte	0x5
 3796 1289 5201     		.2byte	0x152
 3797 128b 00000000 		.4byte	.LFB194
 3798 128f 2C000000 		.4byte	.LFE194-.LFB194
 3799 1293 01       		.uleb128 0x1
 3800 1294 9C       		.byte	0x9c
 3801 1295 B8120000 		.4byte	0x12b8
 3802 1299 18       		.uleb128 0x18
 3803 129a 360A0000 		.4byte	.LASF280
 3804 129e 05       		.byte	0x5
 3805 129f 5201     		.2byte	0x152
 3806 12a1 B8000000 		.4byte	0xb8
 3807 12a5 02       		.uleb128 0x2
 3808 12a6 91       		.byte	0x91
 3809 12a7 6C       		.sleb128 -20
 3810 12a8 1B       		.uleb128 0x1b
 3811 12a9 93110000 		.4byte	.LASF281
 3812 12ad 05       		.byte	0x5
 3813 12ae 5401     		.2byte	0x154
 3814 12b0 B8000000 		.4byte	0xb8
 3815 12b4 02       		.uleb128 0x2
 3816 12b5 91       		.byte	0x91
 3817 12b6 74       		.sleb128 -12
 3818 12b7 00       		.byte	0
 3819 12b8 25       		.uleb128 0x25
 3820 12b9 76000000 		.4byte	.LASF282
 3821 12bd 05       		.byte	0x5
 3822 12be 6901     		.2byte	0x169
 3823 12c0 00000000 		.4byte	.LFB195
 3824 12c4 50000000 		.4byte	.LFE195-.LFB195
 3825 12c8 01       		.uleb128 0x1
 3826 12c9 9C       		.byte	0x9c
 3827 12ca ED120000 		.4byte	0x12ed
 3828 12ce 18       		.uleb128 0x18
 3829 12cf 02070000 		.4byte	.LASF249
 3830 12d3 05       		.byte	0x5
 3831 12d4 6901     		.2byte	0x169
 3832 12d6 B8000000 		.4byte	0xb8
 3833 12da 02       		.uleb128 0x2
 3834 12db 91       		.byte	0x91
 3835 12dc 6C       		.sleb128 -20
 3836 12dd 1B       		.uleb128 0x1b
 3837 12de E3060000 		.4byte	.LASF283
 3838 12e2 05       		.byte	0x5
 3839 12e3 6B01     		.2byte	0x16b
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 170


 3840 12e5 320C0000 		.4byte	0xc32
 3841 12e9 02       		.uleb128 0x2
 3842 12ea 91       		.byte	0x91
 3843 12eb 74       		.sleb128 -12
 3844 12ec 00       		.byte	0
 3845 12ed 26       		.uleb128 0x26
 3846 12ee 5C020000 		.4byte	.LASF297
 3847 12f2 05       		.byte	0x5
 3848 12f3 8201     		.2byte	0x182
 3849 12f5 B8000000 		.4byte	0xb8
 3850 12f9 00000000 		.4byte	.LFB196
 3851 12fd 3C000000 		.4byte	.LFE196-.LFB196
 3852 1301 01       		.uleb128 0x1
 3853 1302 9C       		.byte	0x9c
 3854 1303 35130000 		.4byte	0x1335
 3855 1307 18       		.uleb128 0x18
 3856 1308 100F0000 		.4byte	.LASF284
 3857 130c 05       		.byte	0x5
 3858 130d 8201     		.2byte	0x182
 3859 130f B90C0000 		.4byte	0xcb9
 3860 1313 02       		.uleb128 0x2
 3861 1314 91       		.byte	0x91
 3862 1315 6F       		.sleb128 -17
 3863 1316 1B       		.uleb128 0x1b
 3864 1317 6C0F0000 		.4byte	.LASF285
 3865 131b 05       		.byte	0x5
 3866 131c 8401     		.2byte	0x184
 3867 131e 320C0000 		.4byte	0xc32
 3868 1322 02       		.uleb128 0x2
 3869 1323 91       		.byte	0x91
 3870 1324 74       		.sleb128 -12
 3871 1325 1B       		.uleb128 0x1b
 3872 1326 B7040000 		.4byte	.LASF286
 3873 132a 05       		.byte	0x5
 3874 132b 8501     		.2byte	0x185
 3875 132d 6D0C0000 		.4byte	0xc6d
 3876 1331 02       		.uleb128 0x2
 3877 1332 91       		.byte	0x91
 3878 1333 70       		.sleb128 -16
 3879 1334 00       		.byte	0
 3880 1335 25       		.uleb128 0x25
 3881 1336 8F010000 		.4byte	.LASF287
 3882 133a 05       		.byte	0x5
 3883 133b 9F01     		.2byte	0x19f
 3884 133d 00000000 		.4byte	.LFB197
 3885 1341 4C000000 		.4byte	.LFE197-.LFB197
 3886 1345 01       		.uleb128 0x1
 3887 1346 9C       		.byte	0x9c
 3888 1347 5B130000 		.4byte	0x135b
 3889 134b 1B       		.uleb128 0x1b
 3890 134c 27060000 		.4byte	.LASF288
 3891 1350 05       		.byte	0x5
 3892 1351 A101     		.2byte	0x1a1
 3893 1353 B8000000 		.4byte	0xb8
 3894 1357 02       		.uleb128 0x2
 3895 1358 91       		.byte	0x91
 3896 1359 74       		.sleb128 -12
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 171


 3897 135a 00       		.byte	0
 3898 135b 27       		.uleb128 0x27
 3899 135c A7000000 		.4byte	.LASF289
 3900 1360 0B       		.byte	0xb
 3901 1361 A7       		.byte	0xa7
 3902 1362 66130000 		.4byte	0x1366
 3903 1366 10       		.uleb128 0x10
 3904 1367 04       		.byte	0x4
 3905 1368 6C130000 		.4byte	0x136c
 3906 136c 06       		.uleb128 0x6
 3907 136d F30B0000 		.4byte	0xbf3
 3908 1371 28       		.uleb128 0x28
 3909 1372 42000000 		.4byte	.LASF290
 3910 1376 05       		.byte	0x5
 3911 1377 2B       		.byte	0x2b
 3912 1378 97000000 		.4byte	0x97
 3913 137c 05       		.uleb128 0x5
 3914 137d 03       		.byte	0x3
 3915 137e 00000000 		.4byte	ADC_1_initVar
 3916 1382 28       		.uleb128 0x28
 3917 1383 13100000 		.4byte	.LASF291
 3918 1387 05       		.byte	0x5
 3919 1388 2C       		.byte	0x2c
 3920 1389 97000000 		.4byte	0x97
 3921 138d 05       		.uleb128 0x5
 3922 138e 03       		.byte	0x3
 3923 138f 00000000 		.4byte	ADC_1_selected
 3924 1393 28       		.uleb128 0x28
 3925 1394 010D0000 		.4byte	.LASF292
 3926 1398 05       		.byte	0x5
 3927 1399 2D       		.byte	0x2d
 3928 139a B8000000 		.4byte	0xb8
 3929 139e 05       		.uleb128 0x5
 3930 139f 03       		.byte	0x3
 3931 13a0 00000000 		.4byte	ADC_1_currentConfig
 3932 13a4 07       		.uleb128 0x7
 3933 13a5 F3110000 		.4byte	0x11f3
 3934 13a9 B4130000 		.4byte	0x13b4
 3935 13ad 08       		.uleb128 0x8
 3936 13ae C3000000 		.4byte	0xc3
 3937 13b2 00       		.byte	0
 3938 13b3 00       		.byte	0
 3939 13b4 29       		.uleb128 0x29
 3940 13b5 AF0A0000 		.4byte	.LASF293
 3941 13b9 04       		.byte	0x4
 3942 13ba 6401     		.2byte	0x164
 3943 13bc C0130000 		.4byte	0x13c0
 3944 13c0 06       		.uleb128 0x6
 3945 13c1 A4130000 		.4byte	0x13a4
 3946 13c5 00       		.byte	0
 3947              		.section	.debug_abbrev,"",%progbits
 3948              	.Ldebug_abbrev0:
 3949 0000 01       		.uleb128 0x1
 3950 0001 11       		.uleb128 0x11
 3951 0002 01       		.byte	0x1
 3952 0003 25       		.uleb128 0x25
 3953 0004 0E       		.uleb128 0xe
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 172


 3954 0005 13       		.uleb128 0x13
 3955 0006 0B       		.uleb128 0xb
 3956 0007 03       		.uleb128 0x3
 3957 0008 0E       		.uleb128 0xe
 3958 0009 1B       		.uleb128 0x1b
 3959 000a 0E       		.uleb128 0xe
 3960 000b 55       		.uleb128 0x55
 3961 000c 17       		.uleb128 0x17
 3962 000d 11       		.uleb128 0x11
 3963 000e 01       		.uleb128 0x1
 3964 000f 10       		.uleb128 0x10
 3965 0010 17       		.uleb128 0x17
 3966 0011 00       		.byte	0
 3967 0012 00       		.byte	0
 3968 0013 02       		.uleb128 0x2
 3969 0014 24       		.uleb128 0x24
 3970 0015 00       		.byte	0
 3971 0016 0B       		.uleb128 0xb
 3972 0017 0B       		.uleb128 0xb
 3973 0018 3E       		.uleb128 0x3e
 3974 0019 0B       		.uleb128 0xb
 3975 001a 03       		.uleb128 0x3
 3976 001b 0E       		.uleb128 0xe
 3977 001c 00       		.byte	0
 3978 001d 00       		.byte	0
 3979 001e 03       		.uleb128 0x3
 3980 001f 16       		.uleb128 0x16
 3981 0020 00       		.byte	0
 3982 0021 03       		.uleb128 0x3
 3983 0022 0E       		.uleb128 0xe
 3984 0023 3A       		.uleb128 0x3a
 3985 0024 0B       		.uleb128 0xb
 3986 0025 3B       		.uleb128 0x3b
 3987 0026 0B       		.uleb128 0xb
 3988 0027 49       		.uleb128 0x49
 3989 0028 13       		.uleb128 0x13
 3990 0029 00       		.byte	0
 3991 002a 00       		.byte	0
 3992 002b 04       		.uleb128 0x4
 3993 002c 24       		.uleb128 0x24
 3994 002d 00       		.byte	0
 3995 002e 0B       		.uleb128 0xb
 3996 002f 0B       		.uleb128 0xb
 3997 0030 3E       		.uleb128 0x3e
 3998 0031 0B       		.uleb128 0xb
 3999 0032 03       		.uleb128 0x3
 4000 0033 08       		.uleb128 0x8
 4001 0034 00       		.byte	0
 4002 0035 00       		.byte	0
 4003 0036 05       		.uleb128 0x5
 4004 0037 35       		.uleb128 0x35
 4005 0038 00       		.byte	0
 4006 0039 49       		.uleb128 0x49
 4007 003a 13       		.uleb128 0x13
 4008 003b 00       		.byte	0
 4009 003c 00       		.byte	0
 4010 003d 06       		.uleb128 0x6
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 173


 4011 003e 26       		.uleb128 0x26
 4012 003f 00       		.byte	0
 4013 0040 49       		.uleb128 0x49
 4014 0041 13       		.uleb128 0x13
 4015 0042 00       		.byte	0
 4016 0043 00       		.byte	0
 4017 0044 07       		.uleb128 0x7
 4018 0045 01       		.uleb128 0x1
 4019 0046 01       		.byte	0x1
 4020 0047 49       		.uleb128 0x49
 4021 0048 13       		.uleb128 0x13
 4022 0049 01       		.uleb128 0x1
 4023 004a 13       		.uleb128 0x13
 4024 004b 00       		.byte	0
 4025 004c 00       		.byte	0
 4026 004d 08       		.uleb128 0x8
 4027 004e 21       		.uleb128 0x21
 4028 004f 00       		.byte	0
 4029 0050 49       		.uleb128 0x49
 4030 0051 13       		.uleb128 0x13
 4031 0052 2F       		.uleb128 0x2f
 4032 0053 0B       		.uleb128 0xb
 4033 0054 00       		.byte	0
 4034 0055 00       		.byte	0
 4035 0056 09       		.uleb128 0x9
 4036 0057 13       		.uleb128 0x13
 4037 0058 01       		.byte	0x1
 4038 0059 0B       		.uleb128 0xb
 4039 005a 0B       		.uleb128 0xb
 4040 005b 3A       		.uleb128 0x3a
 4041 005c 0B       		.uleb128 0xb
 4042 005d 3B       		.uleb128 0x3b
 4043 005e 0B       		.uleb128 0xb
 4044 005f 01       		.uleb128 0x1
 4045 0060 13       		.uleb128 0x13
 4046 0061 00       		.byte	0
 4047 0062 00       		.byte	0
 4048 0063 0A       		.uleb128 0xa
 4049 0064 0D       		.uleb128 0xd
 4050 0065 00       		.byte	0
 4051 0066 03       		.uleb128 0x3
 4052 0067 0E       		.uleb128 0xe
 4053 0068 3A       		.uleb128 0x3a
 4054 0069 0B       		.uleb128 0xb
 4055 006a 3B       		.uleb128 0x3b
 4056 006b 0B       		.uleb128 0xb
 4057 006c 49       		.uleb128 0x49
 4058 006d 13       		.uleb128 0x13
 4059 006e 38       		.uleb128 0x38
 4060 006f 0B       		.uleb128 0xb
 4061 0070 00       		.byte	0
 4062 0071 00       		.byte	0
 4063 0072 0B       		.uleb128 0xb
 4064 0073 13       		.uleb128 0x13
 4065 0074 01       		.byte	0x1
 4066 0075 0B       		.uleb128 0xb
 4067 0076 05       		.uleb128 0x5
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 174


 4068 0077 3A       		.uleb128 0x3a
 4069 0078 0B       		.uleb128 0xb
 4070 0079 3B       		.uleb128 0x3b
 4071 007a 0B       		.uleb128 0xb
 4072 007b 01       		.uleb128 0x1
 4073 007c 13       		.uleb128 0x13
 4074 007d 00       		.byte	0
 4075 007e 00       		.byte	0
 4076 007f 0C       		.uleb128 0xc
 4077 0080 0D       		.uleb128 0xd
 4078 0081 00       		.byte	0
 4079 0082 03       		.uleb128 0x3
 4080 0083 08       		.uleb128 0x8
 4081 0084 3A       		.uleb128 0x3a
 4082 0085 0B       		.uleb128 0xb
 4083 0086 3B       		.uleb128 0x3b
 4084 0087 0B       		.uleb128 0xb
 4085 0088 49       		.uleb128 0x49
 4086 0089 13       		.uleb128 0x13
 4087 008a 38       		.uleb128 0x38
 4088 008b 0B       		.uleb128 0xb
 4089 008c 00       		.byte	0
 4090 008d 00       		.byte	0
 4091 008e 0D       		.uleb128 0xd
 4092 008f 0D       		.uleb128 0xd
 4093 0090 00       		.byte	0
 4094 0091 03       		.uleb128 0x3
 4095 0092 0E       		.uleb128 0xe
 4096 0093 3A       		.uleb128 0x3a
 4097 0094 0B       		.uleb128 0xb
 4098 0095 3B       		.uleb128 0x3b
 4099 0096 0B       		.uleb128 0xb
 4100 0097 49       		.uleb128 0x49
 4101 0098 13       		.uleb128 0x13
 4102 0099 38       		.uleb128 0x38
 4103 009a 05       		.uleb128 0x5
 4104 009b 00       		.byte	0
 4105 009c 00       		.byte	0
 4106 009d 0E       		.uleb128 0xe
 4107 009e 21       		.uleb128 0x21
 4108 009f 00       		.byte	0
 4109 00a0 49       		.uleb128 0x49
 4110 00a1 13       		.uleb128 0x13
 4111 00a2 2F       		.uleb128 0x2f
 4112 00a3 05       		.uleb128 0x5
 4113 00a4 00       		.byte	0
 4114 00a5 00       		.byte	0
 4115 00a6 0F       		.uleb128 0xf
 4116 00a7 16       		.uleb128 0x16
 4117 00a8 00       		.byte	0
 4118 00a9 03       		.uleb128 0x3
 4119 00aa 0E       		.uleb128 0xe
 4120 00ab 3A       		.uleb128 0x3a
 4121 00ac 0B       		.uleb128 0xb
 4122 00ad 3B       		.uleb128 0x3b
 4123 00ae 05       		.uleb128 0x5
 4124 00af 49       		.uleb128 0x49
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 175


 4125 00b0 13       		.uleb128 0x13
 4126 00b1 00       		.byte	0
 4127 00b2 00       		.byte	0
 4128 00b3 10       		.uleb128 0x10
 4129 00b4 0F       		.uleb128 0xf
 4130 00b5 00       		.byte	0
 4131 00b6 0B       		.uleb128 0xb
 4132 00b7 0B       		.uleb128 0xb
 4133 00b8 49       		.uleb128 0x49
 4134 00b9 13       		.uleb128 0x13
 4135 00ba 00       		.byte	0
 4136 00bb 00       		.byte	0
 4137 00bc 11       		.uleb128 0x11
 4138 00bd 15       		.uleb128 0x15
 4139 00be 00       		.byte	0
 4140 00bf 27       		.uleb128 0x27
 4141 00c0 19       		.uleb128 0x19
 4142 00c1 00       		.byte	0
 4143 00c2 00       		.byte	0
 4144 00c3 12       		.uleb128 0x12
 4145 00c4 04       		.uleb128 0x4
 4146 00c5 01       		.byte	0x1
 4147 00c6 0B       		.uleb128 0xb
 4148 00c7 0B       		.uleb128 0xb
 4149 00c8 49       		.uleb128 0x49
 4150 00c9 13       		.uleb128 0x13
 4151 00ca 3A       		.uleb128 0x3a
 4152 00cb 0B       		.uleb128 0xb
 4153 00cc 3B       		.uleb128 0x3b
 4154 00cd 05       		.uleb128 0x5
 4155 00ce 01       		.uleb128 0x1
 4156 00cf 13       		.uleb128 0x13
 4157 00d0 00       		.byte	0
 4158 00d1 00       		.byte	0
 4159 00d2 13       		.uleb128 0x13
 4160 00d3 28       		.uleb128 0x28
 4161 00d4 00       		.byte	0
 4162 00d5 03       		.uleb128 0x3
 4163 00d6 0E       		.uleb128 0xe
 4164 00d7 1C       		.uleb128 0x1c
 4165 00d8 0B       		.uleb128 0xb
 4166 00d9 00       		.byte	0
 4167 00da 00       		.byte	0
 4168 00db 14       		.uleb128 0x14
 4169 00dc 28       		.uleb128 0x28
 4170 00dd 00       		.byte	0
 4171 00de 03       		.uleb128 0x3
 4172 00df 0E       		.uleb128 0xe
 4173 00e0 1C       		.uleb128 0x1c
 4174 00e1 06       		.uleb128 0x6
 4175 00e2 00       		.byte	0
 4176 00e3 00       		.byte	0
 4177 00e4 15       		.uleb128 0x15
 4178 00e5 13       		.uleb128 0x13
 4179 00e6 01       		.byte	0x1
 4180 00e7 0B       		.uleb128 0xb
 4181 00e8 0B       		.uleb128 0xb
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 176


 4182 00e9 3A       		.uleb128 0x3a
 4183 00ea 0B       		.uleb128 0xb
 4184 00eb 3B       		.uleb128 0x3b
 4185 00ec 05       		.uleb128 0x5
 4186 00ed 01       		.uleb128 0x1
 4187 00ee 13       		.uleb128 0x13
 4188 00ef 00       		.byte	0
 4189 00f0 00       		.byte	0
 4190 00f1 16       		.uleb128 0x16
 4191 00f2 0D       		.uleb128 0xd
 4192 00f3 00       		.byte	0
 4193 00f4 03       		.uleb128 0x3
 4194 00f5 0E       		.uleb128 0xe
 4195 00f6 3A       		.uleb128 0x3a
 4196 00f7 0B       		.uleb128 0xb
 4197 00f8 3B       		.uleb128 0x3b
 4198 00f9 05       		.uleb128 0x5
 4199 00fa 49       		.uleb128 0x49
 4200 00fb 13       		.uleb128 0x13
 4201 00fc 38       		.uleb128 0x38
 4202 00fd 0B       		.uleb128 0xb
 4203 00fe 00       		.byte	0
 4204 00ff 00       		.byte	0
 4205 0100 17       		.uleb128 0x17
 4206 0101 2E       		.uleb128 0x2e
 4207 0102 01       		.byte	0x1
 4208 0103 03       		.uleb128 0x3
 4209 0104 0E       		.uleb128 0xe
 4210 0105 3A       		.uleb128 0x3a
 4211 0106 0B       		.uleb128 0xb
 4212 0107 3B       		.uleb128 0x3b
 4213 0108 05       		.uleb128 0x5
 4214 0109 27       		.uleb128 0x27
 4215 010a 19       		.uleb128 0x19
 4216 010b 11       		.uleb128 0x11
 4217 010c 01       		.uleb128 0x1
 4218 010d 12       		.uleb128 0x12
 4219 010e 06       		.uleb128 0x6
 4220 010f 40       		.uleb128 0x40
 4221 0110 18       		.uleb128 0x18
 4222 0111 9742     		.uleb128 0x2117
 4223 0113 19       		.uleb128 0x19
 4224 0114 01       		.uleb128 0x1
 4225 0115 13       		.uleb128 0x13
 4226 0116 00       		.byte	0
 4227 0117 00       		.byte	0
 4228 0118 18       		.uleb128 0x18
 4229 0119 05       		.uleb128 0x5
 4230 011a 00       		.byte	0
 4231 011b 03       		.uleb128 0x3
 4232 011c 0E       		.uleb128 0xe
 4233 011d 3A       		.uleb128 0x3a
 4234 011e 0B       		.uleb128 0xb
 4235 011f 3B       		.uleb128 0x3b
 4236 0120 05       		.uleb128 0x5
 4237 0121 49       		.uleb128 0x49
 4238 0122 13       		.uleb128 0x13
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 177


 4239 0123 02       		.uleb128 0x2
 4240 0124 18       		.uleb128 0x18
 4241 0125 00       		.byte	0
 4242 0126 00       		.byte	0
 4243 0127 19       		.uleb128 0x19
 4244 0128 2E       		.uleb128 0x2e
 4245 0129 01       		.byte	0x1
 4246 012a 03       		.uleb128 0x3
 4247 012b 0E       		.uleb128 0xe
 4248 012c 3A       		.uleb128 0x3a
 4249 012d 0B       		.uleb128 0xb
 4250 012e 3B       		.uleb128 0x3b
 4251 012f 05       		.uleb128 0x5
 4252 0130 27       		.uleb128 0x27
 4253 0131 19       		.uleb128 0x19
 4254 0132 11       		.uleb128 0x11
 4255 0133 01       		.uleb128 0x1
 4256 0134 12       		.uleb128 0x12
 4257 0135 06       		.uleb128 0x6
 4258 0136 40       		.uleb128 0x40
 4259 0137 18       		.uleb128 0x18
 4260 0138 9642     		.uleb128 0x2116
 4261 013a 19       		.uleb128 0x19
 4262 013b 01       		.uleb128 0x1
 4263 013c 13       		.uleb128 0x13
 4264 013d 00       		.byte	0
 4265 013e 00       		.byte	0
 4266 013f 1A       		.uleb128 0x1a
 4267 0140 2E       		.uleb128 0x2e
 4268 0141 01       		.byte	0x1
 4269 0142 03       		.uleb128 0x3
 4270 0143 0E       		.uleb128 0xe
 4271 0144 3A       		.uleb128 0x3a
 4272 0145 0B       		.uleb128 0xb
 4273 0146 3B       		.uleb128 0x3b
 4274 0147 05       		.uleb128 0x5
 4275 0148 27       		.uleb128 0x27
 4276 0149 19       		.uleb128 0x19
 4277 014a 49       		.uleb128 0x49
 4278 014b 13       		.uleb128 0x13
 4279 014c 11       		.uleb128 0x11
 4280 014d 01       		.uleb128 0x1
 4281 014e 12       		.uleb128 0x12
 4282 014f 06       		.uleb128 0x6
 4283 0150 40       		.uleb128 0x40
 4284 0151 18       		.uleb128 0x18
 4285 0152 9742     		.uleb128 0x2117
 4286 0154 19       		.uleb128 0x19
 4287 0155 01       		.uleb128 0x1
 4288 0156 13       		.uleb128 0x13
 4289 0157 00       		.byte	0
 4290 0158 00       		.byte	0
 4291 0159 1B       		.uleb128 0x1b
 4292 015a 34       		.uleb128 0x34
 4293 015b 00       		.byte	0
 4294 015c 03       		.uleb128 0x3
 4295 015d 0E       		.uleb128 0xe
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 178


 4296 015e 3A       		.uleb128 0x3a
 4297 015f 0B       		.uleb128 0xb
 4298 0160 3B       		.uleb128 0x3b
 4299 0161 05       		.uleb128 0x5
 4300 0162 49       		.uleb128 0x49
 4301 0163 13       		.uleb128 0x13
 4302 0164 02       		.uleb128 0x2
 4303 0165 18       		.uleb128 0x18
 4304 0166 00       		.byte	0
 4305 0167 00       		.byte	0
 4306 0168 1C       		.uleb128 0x1c
 4307 0169 2E       		.uleb128 0x2e
 4308 016a 00       		.byte	0
 4309 016b 03       		.uleb128 0x3
 4310 016c 0E       		.uleb128 0xe
 4311 016d 3A       		.uleb128 0x3a
 4312 016e 0B       		.uleb128 0xb
 4313 016f 3B       		.uleb128 0x3b
 4314 0170 0B       		.uleb128 0xb
 4315 0171 27       		.uleb128 0x27
 4316 0172 19       		.uleb128 0x19
 4317 0173 11       		.uleb128 0x11
 4318 0174 01       		.uleb128 0x1
 4319 0175 12       		.uleb128 0x12
 4320 0176 06       		.uleb128 0x6
 4321 0177 40       		.uleb128 0x40
 4322 0178 18       		.uleb128 0x18
 4323 0179 9642     		.uleb128 0x2116
 4324 017b 19       		.uleb128 0x19
 4325 017c 00       		.byte	0
 4326 017d 00       		.byte	0
 4327 017e 1D       		.uleb128 0x1d
 4328 017f 2E       		.uleb128 0x2e
 4329 0180 01       		.byte	0x1
 4330 0181 03       		.uleb128 0x3
 4331 0182 0E       		.uleb128 0xe
 4332 0183 3A       		.uleb128 0x3a
 4333 0184 0B       		.uleb128 0xb
 4334 0185 3B       		.uleb128 0x3b
 4335 0186 0B       		.uleb128 0xb
 4336 0187 27       		.uleb128 0x27
 4337 0188 19       		.uleb128 0x19
 4338 0189 11       		.uleb128 0x11
 4339 018a 01       		.uleb128 0x1
 4340 018b 12       		.uleb128 0x12
 4341 018c 06       		.uleb128 0x6
 4342 018d 40       		.uleb128 0x40
 4343 018e 18       		.uleb128 0x18
 4344 018f 9642     		.uleb128 0x2116
 4345 0191 19       		.uleb128 0x19
 4346 0192 01       		.uleb128 0x1
 4347 0193 13       		.uleb128 0x13
 4348 0194 00       		.byte	0
 4349 0195 00       		.byte	0
 4350 0196 1E       		.uleb128 0x1e
 4351 0197 05       		.uleb128 0x5
 4352 0198 00       		.byte	0
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 179


 4353 0199 03       		.uleb128 0x3
 4354 019a 0E       		.uleb128 0xe
 4355 019b 3A       		.uleb128 0x3a
 4356 019c 0B       		.uleb128 0xb
 4357 019d 3B       		.uleb128 0x3b
 4358 019e 0B       		.uleb128 0xb
 4359 019f 49       		.uleb128 0x49
 4360 01a0 13       		.uleb128 0x13
 4361 01a1 02       		.uleb128 0x2
 4362 01a2 18       		.uleb128 0x18
 4363 01a3 00       		.byte	0
 4364 01a4 00       		.byte	0
 4365 01a5 1F       		.uleb128 0x1f
 4366 01a6 2E       		.uleb128 0x2e
 4367 01a7 00       		.byte	0
 4368 01a8 03       		.uleb128 0x3
 4369 01a9 0E       		.uleb128 0xe
 4370 01aa 3A       		.uleb128 0x3a
 4371 01ab 0B       		.uleb128 0xb
 4372 01ac 3B       		.uleb128 0x3b
 4373 01ad 05       		.uleb128 0x5
 4374 01ae 27       		.uleb128 0x27
 4375 01af 19       		.uleb128 0x19
 4376 01b0 11       		.uleb128 0x11
 4377 01b1 01       		.uleb128 0x1
 4378 01b2 12       		.uleb128 0x12
 4379 01b3 06       		.uleb128 0x6
 4380 01b4 40       		.uleb128 0x40
 4381 01b5 18       		.uleb128 0x18
 4382 01b6 9642     		.uleb128 0x2116
 4383 01b8 19       		.uleb128 0x19
 4384 01b9 00       		.byte	0
 4385 01ba 00       		.byte	0
 4386 01bb 20       		.uleb128 0x20
 4387 01bc 2E       		.uleb128 0x2e
 4388 01bd 00       		.byte	0
 4389 01be 3F       		.uleb128 0x3f
 4390 01bf 19       		.uleb128 0x19
 4391 01c0 03       		.uleb128 0x3
 4392 01c1 0E       		.uleb128 0xe
 4393 01c2 3A       		.uleb128 0x3a
 4394 01c3 0B       		.uleb128 0xb
 4395 01c4 3B       		.uleb128 0x3b
 4396 01c5 0B       		.uleb128 0xb
 4397 01c6 27       		.uleb128 0x27
 4398 01c7 19       		.uleb128 0x19
 4399 01c8 11       		.uleb128 0x11
 4400 01c9 01       		.uleb128 0x1
 4401 01ca 12       		.uleb128 0x12
 4402 01cb 06       		.uleb128 0x6
 4403 01cc 40       		.uleb128 0x40
 4404 01cd 18       		.uleb128 0x18
 4405 01ce 9642     		.uleb128 0x2116
 4406 01d0 19       		.uleb128 0x19
 4407 01d1 00       		.byte	0
 4408 01d2 00       		.byte	0
 4409 01d3 21       		.uleb128 0x21
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 180


 4410 01d4 2E       		.uleb128 0x2e
 4411 01d5 01       		.byte	0x1
 4412 01d6 3F       		.uleb128 0x3f
 4413 01d7 19       		.uleb128 0x19
 4414 01d8 03       		.uleb128 0x3
 4415 01d9 0E       		.uleb128 0xe
 4416 01da 3A       		.uleb128 0x3a
 4417 01db 0B       		.uleb128 0xb
 4418 01dc 3B       		.uleb128 0x3b
 4419 01dd 0B       		.uleb128 0xb
 4420 01de 27       		.uleb128 0x27
 4421 01df 19       		.uleb128 0x19
 4422 01e0 11       		.uleb128 0x11
 4423 01e1 01       		.uleb128 0x1
 4424 01e2 12       		.uleb128 0x12
 4425 01e3 06       		.uleb128 0x6
 4426 01e4 40       		.uleb128 0x40
 4427 01e5 18       		.uleb128 0x18
 4428 01e6 9642     		.uleb128 0x2116
 4429 01e8 19       		.uleb128 0x19
 4430 01e9 01       		.uleb128 0x1
 4431 01ea 13       		.uleb128 0x13
 4432 01eb 00       		.byte	0
 4433 01ec 00       		.byte	0
 4434 01ed 22       		.uleb128 0x22
 4435 01ee 34       		.uleb128 0x34
 4436 01ef 00       		.byte	0
 4437 01f0 03       		.uleb128 0x3
 4438 01f1 0E       		.uleb128 0xe
 4439 01f2 3A       		.uleb128 0x3a
 4440 01f3 0B       		.uleb128 0xb
 4441 01f4 3B       		.uleb128 0x3b
 4442 01f5 0B       		.uleb128 0xb
 4443 01f6 49       		.uleb128 0x49
 4444 01f7 13       		.uleb128 0x13
 4445 01f8 02       		.uleb128 0x2
 4446 01f9 18       		.uleb128 0x18
 4447 01fa 00       		.byte	0
 4448 01fb 00       		.byte	0
 4449 01fc 23       		.uleb128 0x23
 4450 01fd 2E       		.uleb128 0x2e
 4451 01fe 01       		.byte	0x1
 4452 01ff 3F       		.uleb128 0x3f
 4453 0200 19       		.uleb128 0x19
 4454 0201 03       		.uleb128 0x3
 4455 0202 0E       		.uleb128 0xe
 4456 0203 3A       		.uleb128 0x3a
 4457 0204 0B       		.uleb128 0xb
 4458 0205 3B       		.uleb128 0x3b
 4459 0206 0B       		.uleb128 0xb
 4460 0207 27       		.uleb128 0x27
 4461 0208 19       		.uleb128 0x19
 4462 0209 11       		.uleb128 0x11
 4463 020a 01       		.uleb128 0x1
 4464 020b 12       		.uleb128 0x12
 4465 020c 06       		.uleb128 0x6
 4466 020d 40       		.uleb128 0x40
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 181


 4467 020e 18       		.uleb128 0x18
 4468 020f 9742     		.uleb128 0x2117
 4469 0211 19       		.uleb128 0x19
 4470 0212 01       		.uleb128 0x1
 4471 0213 13       		.uleb128 0x13
 4472 0214 00       		.byte	0
 4473 0215 00       		.byte	0
 4474 0216 24       		.uleb128 0x24
 4475 0217 2E       		.uleb128 0x2e
 4476 0218 00       		.byte	0
 4477 0219 3F       		.uleb128 0x3f
 4478 021a 19       		.uleb128 0x19
 4479 021b 03       		.uleb128 0x3
 4480 021c 0E       		.uleb128 0xe
 4481 021d 3A       		.uleb128 0x3a
 4482 021e 0B       		.uleb128 0xb
 4483 021f 3B       		.uleb128 0x3b
 4484 0220 05       		.uleb128 0x5
 4485 0221 27       		.uleb128 0x27
 4486 0222 19       		.uleb128 0x19
 4487 0223 11       		.uleb128 0x11
 4488 0224 01       		.uleb128 0x1
 4489 0225 12       		.uleb128 0x12
 4490 0226 06       		.uleb128 0x6
 4491 0227 40       		.uleb128 0x40
 4492 0228 18       		.uleb128 0x18
 4493 0229 9742     		.uleb128 0x2117
 4494 022b 19       		.uleb128 0x19
 4495 022c 00       		.byte	0
 4496 022d 00       		.byte	0
 4497 022e 25       		.uleb128 0x25
 4498 022f 2E       		.uleb128 0x2e
 4499 0230 01       		.byte	0x1
 4500 0231 3F       		.uleb128 0x3f
 4501 0232 19       		.uleb128 0x19
 4502 0233 03       		.uleb128 0x3
 4503 0234 0E       		.uleb128 0xe
 4504 0235 3A       		.uleb128 0x3a
 4505 0236 0B       		.uleb128 0xb
 4506 0237 3B       		.uleb128 0x3b
 4507 0238 05       		.uleb128 0x5
 4508 0239 27       		.uleb128 0x27
 4509 023a 19       		.uleb128 0x19
 4510 023b 11       		.uleb128 0x11
 4511 023c 01       		.uleb128 0x1
 4512 023d 12       		.uleb128 0x12
 4513 023e 06       		.uleb128 0x6
 4514 023f 40       		.uleb128 0x40
 4515 0240 18       		.uleb128 0x18
 4516 0241 9642     		.uleb128 0x2116
 4517 0243 19       		.uleb128 0x19
 4518 0244 01       		.uleb128 0x1
 4519 0245 13       		.uleb128 0x13
 4520 0246 00       		.byte	0
 4521 0247 00       		.byte	0
 4522 0248 26       		.uleb128 0x26
 4523 0249 2E       		.uleb128 0x2e
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 182


 4524 024a 01       		.byte	0x1
 4525 024b 3F       		.uleb128 0x3f
 4526 024c 19       		.uleb128 0x19
 4527 024d 03       		.uleb128 0x3
 4528 024e 0E       		.uleb128 0xe
 4529 024f 3A       		.uleb128 0x3a
 4530 0250 0B       		.uleb128 0xb
 4531 0251 3B       		.uleb128 0x3b
 4532 0252 05       		.uleb128 0x5
 4533 0253 27       		.uleb128 0x27
 4534 0254 19       		.uleb128 0x19
 4535 0255 49       		.uleb128 0x49
 4536 0256 13       		.uleb128 0x13
 4537 0257 11       		.uleb128 0x11
 4538 0258 01       		.uleb128 0x1
 4539 0259 12       		.uleb128 0x12
 4540 025a 06       		.uleb128 0x6
 4541 025b 40       		.uleb128 0x40
 4542 025c 18       		.uleb128 0x18
 4543 025d 9642     		.uleb128 0x2116
 4544 025f 19       		.uleb128 0x19
 4545 0260 01       		.uleb128 0x1
 4546 0261 13       		.uleb128 0x13
 4547 0262 00       		.byte	0
 4548 0263 00       		.byte	0
 4549 0264 27       		.uleb128 0x27
 4550 0265 34       		.uleb128 0x34
 4551 0266 00       		.byte	0
 4552 0267 03       		.uleb128 0x3
 4553 0268 0E       		.uleb128 0xe
 4554 0269 3A       		.uleb128 0x3a
 4555 026a 0B       		.uleb128 0xb
 4556 026b 3B       		.uleb128 0x3b
 4557 026c 0B       		.uleb128 0xb
 4558 026d 49       		.uleb128 0x49
 4559 026e 13       		.uleb128 0x13
 4560 026f 3F       		.uleb128 0x3f
 4561 0270 19       		.uleb128 0x19
 4562 0271 3C       		.uleb128 0x3c
 4563 0272 19       		.uleb128 0x19
 4564 0273 00       		.byte	0
 4565 0274 00       		.byte	0
 4566 0275 28       		.uleb128 0x28
 4567 0276 34       		.uleb128 0x34
 4568 0277 00       		.byte	0
 4569 0278 03       		.uleb128 0x3
 4570 0279 0E       		.uleb128 0xe
 4571 027a 3A       		.uleb128 0x3a
 4572 027b 0B       		.uleb128 0xb
 4573 027c 3B       		.uleb128 0x3b
 4574 027d 0B       		.uleb128 0xb
 4575 027e 49       		.uleb128 0x49
 4576 027f 13       		.uleb128 0x13
 4577 0280 3F       		.uleb128 0x3f
 4578 0281 19       		.uleb128 0x19
 4579 0282 02       		.uleb128 0x2
 4580 0283 18       		.uleb128 0x18
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 183


 4581 0284 00       		.byte	0
 4582 0285 00       		.byte	0
 4583 0286 29       		.uleb128 0x29
 4584 0287 34       		.uleb128 0x34
 4585 0288 00       		.byte	0
 4586 0289 03       		.uleb128 0x3
 4587 028a 0E       		.uleb128 0xe
 4588 028b 3A       		.uleb128 0x3a
 4589 028c 0B       		.uleb128 0xb
 4590 028d 3B       		.uleb128 0x3b
 4591 028e 05       		.uleb128 0x5
 4592 028f 49       		.uleb128 0x49
 4593 0290 13       		.uleb128 0x13
 4594 0291 3F       		.uleb128 0x3f
 4595 0292 19       		.uleb128 0x19
 4596 0293 3C       		.uleb128 0x3c
 4597 0294 19       		.uleb128 0x19
 4598 0295 00       		.byte	0
 4599 0296 00       		.byte	0
 4600 0297 00       		.byte	0
 4601              		.section	.debug_aranges,"",%progbits
 4602 0000 DC000000 		.4byte	0xdc
 4603 0004 0200     		.2byte	0x2
 4604 0006 00000000 		.4byte	.Ldebug_info0
 4605 000a 04       		.byte	0x4
 4606 000b 00       		.byte	0
 4607 000c 0000     		.2byte	0
 4608 000e 0000     		.2byte	0
 4609 0010 00000000 		.4byte	.LFB79
 4610 0014 1C000000 		.4byte	.LFE79-.LFB79
 4611 0018 00000000 		.4byte	.LFB81
 4612 001c 38000000 		.4byte	.LFE81-.LFB81
 4613 0020 00000000 		.4byte	.LFB86
 4614 0024 38000000 		.4byte	.LFE86-.LFB86
 4615 0028 00000000 		.4byte	.LFB103
 4616 002c 28000000 		.4byte	.LFE103-.LFB103
 4617 0030 00000000 		.4byte	.LFB104
 4618 0034 26000000 		.4byte	.LFE104-.LFB104
 4619 0038 00000000 		.4byte	.LFB134
 4620 003c F0000000 		.4byte	.LFE134-.LFB134
 4621 0040 00000000 		.4byte	.LFB140
 4622 0044 E4000000 		.4byte	.LFE140-.LFB140
 4623 0048 00000000 		.4byte	.LFB141
 4624 004c AC000000 		.4byte	.LFE141-.LFB141
 4625 0050 00000000 		.4byte	.LFB162
 4626 0054 12000000 		.4byte	.LFE162-.LFB162
 4627 0058 00000000 		.4byte	.LFB163
 4628 005c 12000000 		.4byte	.LFE163-.LFB163
 4629 0060 00000000 		.4byte	.LFB164
 4630 0064 1C000000 		.4byte	.LFE164-.LFB164
 4631 0068 00000000 		.4byte	.LFB168
 4632 006c 18000000 		.4byte	.LFE168-.LFB168
 4633 0070 00000000 		.4byte	.LFB169
 4634 0074 18000000 		.4byte	.LFE169-.LFB169
 4635 0078 00000000 		.4byte	.LFB186
 4636 007c 34000000 		.4byte	.LFE186-.LFB186
 4637 0080 00000000 		.4byte	.LFB187
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 184


 4638 0084 14000000 		.4byte	.LFE187-.LFB187
 4639 0088 00000000 		.4byte	.LFB188
 4640 008c 6C000000 		.4byte	.LFE188-.LFB188
 4641 0090 00000000 		.4byte	.LFB189
 4642 0094 78000000 		.4byte	.LFE189-.LFB189
 4643 0098 00000000 		.4byte	.LFB190
 4644 009c 30000000 		.4byte	.LFE190-.LFB190
 4645 00a0 00000000 		.4byte	.LFB191
 4646 00a4 44000000 		.4byte	.LFE191-.LFB191
 4647 00a8 00000000 		.4byte	.LFB192
 4648 00ac 0A000000 		.4byte	.LFE192-.LFB192
 4649 00b0 00000000 		.4byte	.LFB193
 4650 00b4 0A000000 		.4byte	.LFE193-.LFB193
 4651 00b8 00000000 		.4byte	.LFB194
 4652 00bc 2C000000 		.4byte	.LFE194-.LFB194
 4653 00c0 00000000 		.4byte	.LFB195
 4654 00c4 50000000 		.4byte	.LFE195-.LFB195
 4655 00c8 00000000 		.4byte	.LFB196
 4656 00cc 3C000000 		.4byte	.LFE196-.LFB196
 4657 00d0 00000000 		.4byte	.LFB197
 4658 00d4 4C000000 		.4byte	.LFE197-.LFB197
 4659 00d8 00000000 		.4byte	0
 4660 00dc 00000000 		.4byte	0
 4661              		.section	.debug_ranges,"",%progbits
 4662              	.Ldebug_ranges0:
 4663 0000 00000000 		.4byte	.LFB79
 4664 0004 1C000000 		.4byte	.LFE79
 4665 0008 00000000 		.4byte	.LFB81
 4666 000c 38000000 		.4byte	.LFE81
 4667 0010 00000000 		.4byte	.LFB86
 4668 0014 38000000 		.4byte	.LFE86
 4669 0018 00000000 		.4byte	.LFB103
 4670 001c 28000000 		.4byte	.LFE103
 4671 0020 00000000 		.4byte	.LFB104
 4672 0024 26000000 		.4byte	.LFE104
 4673 0028 00000000 		.4byte	.LFB134
 4674 002c F0000000 		.4byte	.LFE134
 4675 0030 00000000 		.4byte	.LFB140
 4676 0034 E4000000 		.4byte	.LFE140
 4677 0038 00000000 		.4byte	.LFB141
 4678 003c AC000000 		.4byte	.LFE141
 4679 0040 00000000 		.4byte	.LFB162
 4680 0044 12000000 		.4byte	.LFE162
 4681 0048 00000000 		.4byte	.LFB163
 4682 004c 12000000 		.4byte	.LFE163
 4683 0050 00000000 		.4byte	.LFB164
 4684 0054 1C000000 		.4byte	.LFE164
 4685 0058 00000000 		.4byte	.LFB168
 4686 005c 18000000 		.4byte	.LFE168
 4687 0060 00000000 		.4byte	.LFB169
 4688 0064 18000000 		.4byte	.LFE169
 4689 0068 00000000 		.4byte	.LFB186
 4690 006c 34000000 		.4byte	.LFE186
 4691 0070 00000000 		.4byte	.LFB187
 4692 0074 14000000 		.4byte	.LFE187
 4693 0078 00000000 		.4byte	.LFB188
 4694 007c 6C000000 		.4byte	.LFE188
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 185


 4695 0080 00000000 		.4byte	.LFB189
 4696 0084 78000000 		.4byte	.LFE189
 4697 0088 00000000 		.4byte	.LFB190
 4698 008c 30000000 		.4byte	.LFE190
 4699 0090 00000000 		.4byte	.LFB191
 4700 0094 44000000 		.4byte	.LFE191
 4701 0098 00000000 		.4byte	.LFB192
 4702 009c 0A000000 		.4byte	.LFE192
 4703 00a0 00000000 		.4byte	.LFB193
 4704 00a4 0A000000 		.4byte	.LFE193
 4705 00a8 00000000 		.4byte	.LFB194
 4706 00ac 2C000000 		.4byte	.LFE194
 4707 00b0 00000000 		.4byte	.LFB195
 4708 00b4 50000000 		.4byte	.LFE195
 4709 00b8 00000000 		.4byte	.LFB196
 4710 00bc 3C000000 		.4byte	.LFE196
 4711 00c0 00000000 		.4byte	.LFB197
 4712 00c4 4C000000 		.4byte	.LFE197
 4713 00c8 00000000 		.4byte	0
 4714 00cc 00000000 		.4byte	0
 4715              		.section	.debug_line,"",%progbits
 4716              	.Ldebug_line0:
 4717 0000 8F050000 		.section	.debug_str,"MS",%progbits,1
 4717      0200F502 
 4717      00000201 
 4717      FB0E0D00 
 4717      01010101 
 4718              	.LASF136:
 4719 0000 666C6173 		.ascii	"flashCtlMainWs1Freq\000"
 4719      6843746C 
 4719      4D61696E 
 4719      57733146 
 4719      72657100 
 4720              	.LASF25:
 4721 0014 50455249 		.ascii	"PERI_TR_GR_V1_Type\000"
 4721      5F54525F 
 4721      47525F56 
 4721      315F5479 
 4721      706500
 4722              	.LASF19:
 4723 0027 52455345 		.ascii	"RESERVED\000"
 4723      52564544 
 4723      00
 4724              	.LASF71:
 4725 0030 52414E47 		.ascii	"RANGE_INTR_MASKED\000"
 4725      455F494E 
 4725      54525F4D 
 4725      41534B45 
 4725      4400
 4726              	.LASF290:
 4727 0042 4144435F 		.ascii	"ADC_1_initVar\000"
 4727      315F696E 
 4727      69745661 
 4727      7200
 4728              	.LASF56:
 4729 0050 4348414E 		.ascii	"CHAN_WORK_UPDATED\000"
 4729      5F574F52 
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 186


 4729      4B5F5550 
 4729      44415445 
 4729      4400
 4730              	.LASF178:
 4731 0062 6970634C 		.ascii	"ipcLockStatusOffset\000"
 4731      6F636B53 
 4731      74617475 
 4731      734F6666 
 4731      73657400 
 4732              	.LASF282:
 4733 0076 4144435F 		.ascii	"ADC_1_SetChanMask\000"
 4733      315F5365 
 4733      74436861 
 4733      6E4D6173 
 4733      6B00
 4734              	.LASF260:
 4735 0088 43795F53 		.ascii	"Cy_SysClk_PeriphDisableDivider\000"
 4735      7973436C 
 4735      6B5F5065 
 4735      72697068 
 4735      44697361 
 4736              	.LASF289:
 4737 00a7 63795F64 		.ascii	"cy_device\000"
 4737      65766963 
 4737      6500
 4738              	.LASF163:
 4739 00b1 63707573 		.ascii	"cpussCm0ClockCtlOffset\000"
 4739      73436D30 
 4739      436C6F63 
 4739      6B43746C 
 4739      4F666673 
 4740              	.LASF122:
 4741 00c8 70657269 		.ascii	"periClockNr\000"
 4741      436C6F63 
 4741      6B4E7200 
 4742              	.LASF267:
 4743 00d4 4144435F 		.ascii	"ADC_1_StartEx\000"
 4743      315F5374 
 4743      61727445 
 4743      7800
 4744              	.LASF33:
 4745 00e2 4449565F 		.ascii	"DIV_8_CTL\000"
 4745      385F4354 
 4745      4C00
 4746              	.LASF262:
 4747 00ec 4144435F 		.ascii	"ADC_1_intSarClock_Disable\000"
 4747      315F696E 
 4747      74536172 
 4747      436C6F63 
 4747      6B5F4469 
 4748              	.LASF96:
 4749 0106 75646242 		.ascii	"udbBase\000"
 4749      61736500 
 4750              	.LASF235:
 4751 010e 43595F53 		.ascii	"CY_SYSCLK_DIV_8_BIT\000"
 4751      5953434C 
 4751      4B5F4449 
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 187


 4751      565F385F 
 4751      42495400 
 4752              	.LASF51:
 4753 0122 4348414E 		.ascii	"CHAN_EN\000"
 4753      5F454E00 
 4754              	.LASF95:
 4755 012a 70657269 		.ascii	"periBase\000"
 4755      42617365 
 4755      00
 4756              	.LASF171:
 4757 0133 63707573 		.ascii	"cpussCm0NmiCtlOffset\000"
 4757      73436D30 
 4757      4E6D6943 
 4757      746C4F66 
 4757      66736574 
 4758              	.LASF141:
 4759 0148 64774368 		.ascii	"dwChSize\000"
 4759      53697A65 
 4759      00
 4760              	.LASF295:
 4761 0151 47656E65 		.ascii	"Generated_Source\\PSoC6\\ADC_1.c\000"
 4761      72617465 
 4761      645F536F 
 4761      75726365 
 4761      5C50536F 
 4762              	.LASF232:
 4763 0170 43595F53 		.ascii	"CY_SYSCLK_TIMEOUT\000"
 4763      5953434C 
 4763      4B5F5449 
 4763      4D454F55 
 4763      5400
 4764              	.LASF12:
 4765 0182 756E7369 		.ascii	"unsigned int\000"
 4765      676E6564 
 4765      20696E74 
 4765      00
 4766              	.LASF287:
 4767 018f 4144435F 		.ascii	"ADC_1_Init\000"
 4767      315F496E 
 4767      697400
 4768              	.LASF272:
 4769 019a 72657374 		.ascii	"restart\000"
 4769      61727400 
 4770              	.LASF72:
 4771 01a2 494E5452 		.ascii	"INTR_CAUSE\000"
 4771      5F434155 
 4771      534500
 4772              	.LASF123:
 4773 01ad 736D6966 		.ascii	"smifDeviceNr\000"
 4773      44657669 
 4773      63654E72 
 4773      00
 4774              	.LASF207:
 4775 01ba 43595F53 		.ascii	"CY_SAR_RANGE_COND_OUTSIDE\000"
 4775      41525F52 
 4775      414E4745 
 4775      5F434F4E 
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 188


 4775      445F4F55 
 4776              	.LASF153:
 4777 01d4 70657269 		.ascii	"periDivCmdPaTypeSelPos\000"
 4777      44697643 
 4777      6D645061 
 4777      54797065 
 4777      53656C50 
 4778              	.LASF255:
 4779 01eb 64697669 		.ascii	"dividerNum\000"
 4779      6465724E 
 4779      756D00
 4780              	.LASF115:
 4781 01f6 63707573 		.ascii	"cpussFlashPaSize\000"
 4781      73466C61 
 4781      73685061 
 4781      53697A65 
 4781      00
 4782              	.LASF199:
 4783 0207 63795F65 		.ascii	"cy_en_sar_switch_state_t\000"
 4783      6E5F7361 
 4783      725F7377 
 4783      69746368 
 4783      5F737461 
 4784              	.LASF230:
 4785 0220 43595F53 		.ascii	"CY_SYSCLK_SUCCESS\000"
 4785      5953434C 
 4785      4B5F5355 
 4785      43434553 
 4785      5300
 4786              	.LASF58:
 4787 0232 4348414E 		.ascii	"CHAN_WORK_NEWVALUE\000"
 4787      5F574F52 
 4787      4B5F4E45 
 4787      5756414C 
 4787      554500
 4788              	.LASF93:
 4789 0245 63707573 		.ascii	"cpussBase\000"
 4789      73426173 
 4789      6500
 4790              	.LASF35:
 4791 024f 4449565F 		.ascii	"DIV_16_5_CTL\000"
 4791      31365F35 
 4791      5F43544C 
 4791      00
 4792              	.LASF297:
 4793 025c 4144435F 		.ascii	"ADC_1_IsEndConversion\000"
 4793      315F4973 
 4793      456E6443 
 4793      6F6E7665 
 4793      7273696F 
 4794              	.LASF41:
 4795 0272 5050555F 		.ascii	"PPU_PR\000"
 4795      505200
 4796              	.LASF117:
 4797 0279 63707573 		.ascii	"cpussFmIrq\000"
 4797      73466D49 
 4797      727100
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 189


 4798              	.LASF242:
 4799 0284 6877436F 		.ascii	"hwConfigStc\000"
 4799      6E666967 
 4799      53746300 
 4800              	.LASF118:
 4801 0290 63707573 		.ascii	"cpussNotConnectedIrq\000"
 4801      734E6F74 
 4801      436F6E6E 
 4801      65637465 
 4801      64497271 
 4802              	.LASF274:
 4803 02a5 4144435F 		.ascii	"ADC_1_StartConvert\000"
 4803      315F5374 
 4803      61727443 
 4803      6F6E7665 
 4803      727400
 4804              	.LASF0:
 4805 02b8 73686F72 		.ascii	"short int\000"
 4805      7420696E 
 4805      7400
 4806              	.LASF64:
 4807 02c2 53415455 		.ascii	"SATURATE_INTR\000"
 4807      52415445 
 4807      5F494E54 
 4807      5200
 4808              	.LASF47:
 4809 02d0 53414D50 		.ascii	"SAMPLE_TIME01\000"
 4809      4C455F54 
 4809      494D4530 
 4809      3100
 4810              	.LASF195:
 4811 02de 43595F53 		.ascii	"CY_SAR_WAIT_FOR_RESULT\000"
 4811      41525F57 
 4811      4149545F 
 4811      464F525F 
 4811      52455355 
 4812              	.LASF76:
 4813 02f5 494E4A5F 		.ascii	"INJ_RESULT\000"
 4813      52455355 
 4813      4C5400
 4814              	.LASF152:
 4815 0300 70657269 		.ascii	"periDivCmdPaDivSelPos\000"
 4815      44697643 
 4815      6D645061 
 4815      44697653 
 4815      656C506F 
 4816              	.LASF61:
 4817 0316 494E5452 		.ascii	"INTR_SET\000"
 4817      5F534554 
 4817      00
 4818              	.LASF268:
 4819 031f 4144435F 		.ascii	"ADC_1_InitConfig\000"
 4819      315F496E 
 4819      6974436F 
 4819      6E666967 
 4819      00
 4820              	.LASF276:
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 190


 4821 0330 6D6F6465 		.ascii	"mode\000"
 4821      00
 4822              	.LASF222:
 4823 0335 73617449 		.ascii	"satIntrMask\000"
 4823      6E74724D 
 4823      61736B00 
 4824              	.LASF193:
 4825 0341 63795F65 		.ascii	"cy_en_sar_start_convert_sel_t\000"
 4825      6E5F7361 
 4825      725F7374 
 4825      6172745F 
 4825      636F6E76 
 4826              	.LASF149:
 4827 035f 70657269 		.ascii	"periTrGrSize\000"
 4827      54724772 
 4827      53697A65 
 4827      00
 4828              	.LASF120:
 4829 036c 73727373 		.ascii	"srssNumPll\000"
 4829      4E756D50 
 4829      6C6C00
 4830              	.LASF177:
 4831 0377 69706353 		.ascii	"ipcStructSize\000"
 4831      74727563 
 4831      7453697A 
 4831      6500
 4832              	.LASF275:
 4833 0385 4144435F 		.ascii	"ADC_1_SetConvertMode\000"
 4833      315F5365 
 4833      74436F6E 
 4833      76657274 
 4833      4D6F6465 
 4834              	.LASF111:
 4835 039a 70726F74 		.ascii	"protVersion\000"
 4835      56657273 
 4835      696F6E00 
 4836              	.LASF204:
 4837 03a6 43595F53 		.ascii	"CY_SAR_RANGE_COND_BELOW\000"
 4837      41525F52 
 4837      414E4745 
 4837      5F434F4E 
 4837      445F4245 
 4838              	.LASF91:
 4839 03be 5341525F 		.ascii	"SAR_Type\000"
 4839      54797065 
 4839      00
 4840              	.LASF151:
 4841 03c7 70657269 		.ascii	"periDivCmdTypeSelPos\000"
 4841      44697643 
 4841      6D645479 
 4841      70655365 
 4841      6C506F73 
 4842              	.LASF168:
 4843 03dc 63707573 		.ascii	"cpussTrimRamCtlOffset\000"
 4843      73547269 
 4843      6D52616D 
 4843      43746C4F 
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 191


 4843      66667365 
 4844              	.LASF179:
 4845 03f2 63795F73 		.ascii	"cy_stc_device_t\000"
 4845      74635F64 
 4845      65766963 
 4845      655F7400 
 4846              	.LASF30:
 4847 0402 50455249 		.ascii	"PERI_PPU_PR_V1_Type\000"
 4847      5F505055 
 4847      5F50525F 
 4847      56315F54 
 4847      79706500 
 4848              	.LASF16:
 4849 0416 75696E74 		.ascii	"uint32_t\000"
 4849      33325F74 
 4849      00
 4850              	.LASF251:
 4851 041f 43795F53 		.ascii	"Cy_SAR_SetVssaVminusSwitch\000"
 4851      41525F53 
 4851      65745673 
 4851      7361566D 
 4851      696E7573 
 4852              	.LASF161:
 4853 043a 6770696F 		.ascii	"gpioPrtCfgOutOffset\000"
 4853      50727443 
 4853      66674F75 
 4853      744F6666 
 4853      73657400 
 4854              	.LASF60:
 4855 044e 494E5452 		.ascii	"INTR\000"
 4855      00
 4856              	.LASF183:
 4857 0453 666C6F61 		.ascii	"float\000"
 4857      7400
 4858              	.LASF104:
 4859 0459 63727970 		.ascii	"cryptoVersion\000"
 4859      746F5665 
 4859      7273696F 
 4859      6E00
 4860              	.LASF133:
 4861 0467 666C6173 		.ascii	"flashProgramDelay\000"
 4861      6850726F 
 4861      6772616D 
 4861      44656C61 
 4861      7900
 4862              	.LASF248:
 4863 0479 62617365 		.ascii	"base\000"
 4863      00
 4864              	.LASF241:
 4865 047e 6E756D43 		.ascii	"numChannels\000"
 4865      68616E6E 
 4865      656C7300 
 4866              	.LASF20:
 4867 048a 534C5F43 		.ascii	"SL_CTL\000"
 4867      544C00
 4868              	.LASF94:
 4869 0491 666C6173 		.ascii	"flashcBase\000"
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 192


 4869      68634261 
 4869      736500
 4870              	.LASF14:
 4871 049c 696E7431 		.ascii	"int16_t\000"
 4871      365F7400 
 4872              	.LASF160:
 4873 04a4 6770696F 		.ascii	"gpioPrtCfgInOffset\000"
 4873      50727443 
 4873      6667496E 
 4873      4F666673 
 4873      657400
 4874              	.LASF286:
 4875 04b7 72657375 		.ascii	"result\000"
 4875      6C7400
 4876              	.LASF11:
 4877 04be 6C6F6E67 		.ascii	"long long unsigned int\000"
 4877      206C6F6E 
 4877      6720756E 
 4877      7369676E 
 4877      65642069 
 4878              	.LASF157:
 4879 04d5 70657269 		.ascii	"periDiv24_5CtlOffset\000"
 4879      44697632 
 4879      345F3543 
 4879      746C4F66 
 4879      66736574 
 4880              	.LASF162:
 4881 04ea 6770696F 		.ascii	"gpioPrtCfgSioOffset\000"
 4881      50727443 
 4881      66675369 
 4881      6F4F6666 
 4881      73657400 
 4882              	.LASF77:
 4883 04fe 52455345 		.ascii	"RESERVED7\000"
 4883      52564544 
 4883      3700
 4884              	.LASF116:
 4885 0508 63707573 		.ascii	"cpussIpc0Irq\000"
 4885      73497063 
 4885      30497271 
 4885      00
 4886              	.LASF48:
 4887 0515 53414D50 		.ascii	"SAMPLE_TIME23\000"
 4887      4C455F54 
 4887      494D4532 
 4887      3300
 4888              	.LASF217:
 4889 0523 72616E67 		.ascii	"rangeThres\000"
 4889      65546872 
 4889      657300
 4890              	.LASF5:
 4891 052e 5F5F7569 		.ascii	"__uint16_t\000"
 4891      6E743136 
 4891      5F7400
 4892              	.LASF205:
 4893 0539 43595F53 		.ascii	"CY_SAR_RANGE_COND_INSIDE\000"
 4893      41525F52 
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 193


 4893      414E4745 
 4893      5F434F4E 
 4893      445F494E 
 4894              	.LASF229:
 4895 0552 63795F73 		.ascii	"cy_stc_sar_config_t\000"
 4895      74635F73 
 4895      61725F63 
 4895      6F6E6669 
 4895      675F7400 
 4896              	.LASF213:
 4897 0566 6374726C 		.ascii	"ctrl\000"
 4897      00
 4898              	.LASF74:
 4899 056b 494E4A5F 		.ascii	"INJ_CHAN_CONFIG\000"
 4899      4348414E 
 4899      5F434F4E 
 4899      46494700 
 4900              	.LASF138:
 4901 057b 666C6173 		.ascii	"flashCtlMainWs3Freq\000"
 4901      6843746C 
 4901      4D61696E 
 4901      57733346 
 4901      72657100 
 4902              	.LASF245:
 4903 058f 4144435F 		.ascii	"ADC_1_CONFIG_STRUCT\000"
 4903      315F434F 
 4903      4E464947 
 4903      5F535452 
 4903      55435400 
 4904              	.LASF194:
 4905 05a3 43595F53 		.ascii	"CY_SAR_RETURN_STATUS\000"
 4905      41525F52 
 4905      45545552 
 4905      4E5F5354 
 4905      41545553 
 4906              	.LASF38:
 4907 05b8 54525F43 		.ascii	"TR_CMD\000"
 4907      4D4400
 4908              	.LASF203:
 4909 05bf 43595F53 		.ascii	"CY_SAR_MUX_SWITCH0\000"
 4909      41525F4D 
 4909      55585F53 
 4909      57495443 
 4909      483000
 4910              	.LASF234:
 4911 05d2 63795F65 		.ascii	"cy_en_sysclk_status_t\000"
 4911      6E5F7379 
 4911      73636C6B 
 4911      5F737461 
 4911      7475735F 
 4912              	.LASF263:
 4913 05e8 4144435F 		.ascii	"ADC_1_intSarClock_SetDivider\000"
 4913      315F696E 
 4913      74536172 
 4913      436C6F63 
 4913      6B5F5365 
 4914              	.LASF131:
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 194


 4915 0605 666C6173 		.ascii	"flashPipeRequired\000"
 4915      68506970 
 4915      65526571 
 4915      75697265 
 4915      6400
 4916              	.LASF70:
 4917 0617 52414E47 		.ascii	"RANGE_INTR_MASK\000"
 4917      455F494E 
 4917      54525F4D 
 4917      41534B00 
 4918              	.LASF288:
 4919 0627 636F6E66 		.ascii	"configNum\000"
 4919      69674E75 
 4919      6D00
 4920              	.LASF296:
 4921 0631 443A5C4F 		.ascii	"D:\\OneDrive - UNSW\\Documents\\thesis\\VDAC_Saw_Ex"
 4921      6E654472 
 4921      69766520 
 4921      2D20554E 
 4921      53575C44 
 4922 0660 706F7274 		.ascii	"port.cydsn\000"
 4922      2E637964 
 4922      736E00
 4923              	.LASF273:
 4924 066b 4144435F 		.ascii	"ADC_1_Start\000"
 4924      315F5374 
 4924      61727400 
 4925              	.LASF228:
 4926 0677 5F426F6F 		.ascii	"_Bool\000"
 4926      6C00
 4927              	.LASF50:
 4928 067d 52414E47 		.ascii	"RANGE_COND\000"
 4928      455F434F 
 4928      4E4400
 4929              	.LASF135:
 4930 0688 666C6173 		.ascii	"flashCtlMainWs0Freq\000"
 4930      6843746C 
 4930      4D61696E 
 4930      57733046 
 4930      72657100 
 4931              	.LASF36:
 4932 069c 4449565F 		.ascii	"DIV_24_5_CTL\000"
 4932      32345F35 
 4932      5F43544C 
 4932      00
 4933              	.LASF145:
 4934 06a9 64775374 		.ascii	"dwStatusChIdxMsk\000"
 4934      61747573 
 4934      43684964 
 4934      784D736B 
 4934      00
 4935              	.LASF210:
 4936 06ba 43595F53 		.ascii	"CY_SAR_INTR_EOS_MASK\000"
 4936      41525F49 
 4936      4E54525F 
 4936      454F535F 
 4936      4D41534B 
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 195


 4937              	.LASF99:
 4938 06cf 6770696F 		.ascii	"gpioBase\000"
 4938      42617365 
 4938      00
 4939              	.LASF265:
 4940 06d8 4144435F 		.ascii	"ADC_1_Stop\000"
 4940      315F5374 
 4940      6F7000
 4941              	.LASF283:
 4942 06e3 6368616E 		.ascii	"chanCount\000"
 4942      436F756E 
 4942      7400
 4943              	.LASF34:
 4944 06ed 4449565F 		.ascii	"DIV_16_CTL\000"
 4944      31365F43 
 4944      544C00
 4945              	.LASF18:
 4946 06f8 434C4F43 		.ascii	"CLOCK_CTL\000"
 4946      4B5F4354 
 4946      4C00
 4947              	.LASF249:
 4948 0702 656E6162 		.ascii	"enableMask\000"
 4948      6C654D61 
 4948      736B00
 4949              	.LASF170:
 4950 070d 63707573 		.ascii	"cpussSysTickCtlOffset\000"
 4950      73537973 
 4950      5469636B 
 4950      43746C4F 
 4950      66667365 
 4951              	.LASF126:
 4952 0723 75646250 		.ascii	"udbPresent\000"
 4952      72657365 
 4952      6E7400
 4953              	.LASF144:
 4954 072e 64775374 		.ascii	"dwStatusChIdxPos\000"
 4954      61747573 
 4954      43684964 
 4954      78506F73 
 4954      00
 4955              	.LASF90:
 4956 073f 5341525F 		.ascii	"SAR_V1_Type\000"
 4956      56315F54 
 4956      79706500 
 4957              	.LASF227:
 4958 074b 76726566 		.ascii	"vrefMvValue\000"
 4958      4D765661 
 4958      6C756500 
 4959              	.LASF67:
 4960 0757 53415455 		.ascii	"SATURATE_INTR_MASKED\000"
 4960      52415445 
 4960      5F494E54 
 4960      525F4D41 
 4960      534B4544 
 4961              	.LASF24:
 4962 076c 54525F4F 		.ascii	"TR_OUT_CTL\000"
 4962      55545F43 
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 196


 4962      544C00
 4963              	.LASF65:
 4964 0777 53415455 		.ascii	"SATURATE_INTR_SET\000"
 4964      52415445 
 4964      5F494E54 
 4964      525F5345 
 4964      5400
 4965              	.LASF40:
 4966 0789 54525F47 		.ascii	"TR_GR\000"
 4966      5200
 4967              	.LASF206:
 4968 078f 43595F53 		.ascii	"CY_SAR_RANGE_COND_ABOVE\000"
 4968      41525F52 
 4968      414E4745 
 4968      5F434F4E 
 4968      445F4142 
 4969              	.LASF202:
 4970 07a7 63795F65 		.ascii	"cy_en_sar_switch_sar_seq_ctrl_t\000"
 4970      6E5F7361 
 4970      725F7377 
 4970      69746368 
 4970      5F736172 
 4971              	.LASF277:
 4972 07c7 4144435F 		.ascii	"ADC_1_IRQ_Enable\000"
 4972      315F4952 
 4972      515F456E 
 4972      61626C65 
 4972      00
 4973              	.LASF219:
 4974 07d8 6368616E 		.ascii	"chanEn\000"
 4974      456E00
 4975              	.LASF156:
 4976 07df 70657269 		.ascii	"periDiv16_5CtlOffset\000"
 4976      44697631 
 4976      365F3543 
 4976      746C4F66 
 4976      66736574 
 4977              	.LASF254:
 4978 07f4 64697669 		.ascii	"dividerType\000"
 4978      64657254 
 4978      79706500 
 4979              	.LASF127:
 4980 0800 73797350 		.ascii	"sysPmSimoPresent\000"
 4980      6D53696D 
 4980      6F507265 
 4980      73656E74 
 4980      00
 4981              	.LASF129:
 4982 0811 63727970 		.ascii	"cryptoMemSize\000"
 4982      746F4D65 
 4982      6D53697A 
 4982      6500
 4983              	.LASF59:
 4984 081f 4348414E 		.ascii	"CHAN_RESULT_NEWVALUE\000"
 4984      5F524553 
 4984      554C545F 
 4984      4E455756 
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 197


 4984      414C5545 
 4985              	.LASF79:
 4986 0834 4156475F 		.ascii	"AVG_STAT\000"
 4986      53544154 
 4986      00
 4987              	.LASF256:
 4988 083d 64697669 		.ascii	"dividerValue\000"
 4988      64657256 
 4988      616C7565 
 4988      00
 4989              	.LASF13:
 4990 084a 75696E74 		.ascii	"uint8_t\000"
 4990      385F7400 
 4991              	.LASF190:
 4992 0852 63795F65 		.ascii	"cy_en_sar_status_t\000"
 4992      6E5F7361 
 4992      725F7374 
 4992      61747573 
 4992      5F7400
 4993              	.LASF150:
 4994 0865 70657269 		.ascii	"periDivCmdDivSelMsk\000"
 4994      44697643 
 4994      6D644469 
 4994      7653656C 
 4994      4D736B00 
 4995              	.LASF186:
 4996 0879 43595F53 		.ascii	"CY_SAR_SUCCESS\000"
 4996      41525F53 
 4996      55434345 
 4996      535300
 4997              	.LASF69:
 4998 0888 52414E47 		.ascii	"RANGE_INTR_SET\000"
 4998      455F494E 
 4998      54525F53 
 4998      455400
 4999              	.LASF225:
 5000 0897 6D757853 		.ascii	"muxSwitchSqCtrl\000"
 5000      77697463 
 5000      68537143 
 5000      74726C00 
 5001              	.LASF218:
 5002 08a7 72616E67 		.ascii	"rangeCond\000"
 5002      65436F6E 
 5002      6400
 5003              	.LASF174:
 5004 08b1 63707573 		.ascii	"cpussRam0Ctl0\000"
 5004      7352616D 
 5004      3043746C 
 5004      3000
 5005              	.LASF10:
 5006 08bf 6C6F6E67 		.ascii	"long long int\000"
 5006      206C6F6E 
 5006      6720696E 
 5006      7400
 5007              	.LASF101:
 5008 08cd 69706342 		.ascii	"ipcBase\000"
 5008      61736500 
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 198


 5009              	.LASF142:
 5010 08d5 64774368 		.ascii	"dwChCtlPrioPos\000"
 5010      43746C50 
 5010      72696F50 
 5010      6F7300
 5011              	.LASF102:
 5012 08e4 63727970 		.ascii	"cryptoBase\000"
 5012      746F4261 
 5012      736500
 5013              	.LASF211:
 5014 08ef 43595F53 		.ascii	"CY_SAR_INTR_OVERFLOW_MASK\000"
 5014      41525F49 
 5014      4E54525F 
 5014      4F564552 
 5014      464C4F57 
 5015              	.LASF247:
 5016 0909 43795F53 		.ascii	"Cy_SAR_SetChanMask\000"
 5016      41525F53 
 5016      65744368 
 5016      616E4D61 
 5016      736B00
 5017              	.LASF212:
 5018 091c 43595F53 		.ascii	"CY_SAR_INTR_FW_COLLISION_MASK\000"
 5018      41525F49 
 5018      4E54525F 
 5018      46575F43 
 5018      4F4C4C49 
 5019              	.LASF132:
 5020 093a 666C6173 		.ascii	"flashWriteDelay\000"
 5020      68577269 
 5020      74654465 
 5020      6C617900 
 5021              	.LASF43:
 5022 094a 5050555F 		.ascii	"PPU_GR\000"
 5022      475200
 5023              	.LASF257:
 5024 0951 43795F53 		.ascii	"Cy_SysClk_PeriphSetDivider\000"
 5024      7973436C 
 5024      6B5F5065 
 5024      72697068 
 5024      53657444 
 5025              	.LASF4:
 5026 096c 5F5F696E 		.ascii	"__int16_t\000"
 5026      7431365F 
 5026      7400
 5027              	.LASF137:
 5028 0976 666C6173 		.ascii	"flashCtlMainWs2Freq\000"
 5028      6843746C 
 5028      4D61696E 
 5028      57733246 
 5028      72657100 
 5029              	.LASF98:
 5030 098a 6873696F 		.ascii	"hsiomBase\000"
 5030      6D426173 
 5030      6500
 5031              	.LASF187:
 5032 0994 43595F53 		.ascii	"CY_SAR_BAD_PARAM\000"
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 199


 5032      41525F42 
 5032      41445F50 
 5032      4152414D 
 5032      00
 5033              	.LASF55:
 5034 09a5 4348414E 		.ascii	"CHAN_RESULT\000"
 5034      5F524553 
 5034      554C5400 
 5035              	.LASF175:
 5036 09b1 63707573 		.ascii	"cpussRam1Ctl0\000"
 5036      7352616D 
 5036      3143746C 
 5036      3000
 5037              	.LASF148:
 5038 09bf 70657269 		.ascii	"periTrGrOffset\000"
 5038      54724772 
 5038      4F666673 
 5038      657400
 5039              	.LASF68:
 5040 09ce 52414E47 		.ascii	"RANGE_INTR\000"
 5040      455F494E 
 5040      545200
 5041              	.LASF114:
 5042 09d9 63707573 		.ascii	"cpussDwChNr\000"
 5042      73447743 
 5042      684E7200 
 5043              	.LASF62:
 5044 09e5 494E5452 		.ascii	"INTR_MASK\000"
 5044      5F4D4153 
 5044      4B00
 5045              	.LASF46:
 5046 09ef 53414D50 		.ascii	"SAMPLE_CTRL\000"
 5046      4C455F43 
 5046      54524C00 
 5047              	.LASF266:
 5048 09fb 75736572 		.ascii	"userIsr\000"
 5048      49737200 
 5049              	.LASF188:
 5050 0a03 43595F53 		.ascii	"CY_SAR_TIMEOUT\000"
 5050      41525F54 
 5050      494D454F 
 5050      555400
 5051              	.LASF185:
 5052 0a12 75696E74 		.ascii	"uint32\000"
 5052      333200
 5053              	.LASF112:
 5054 0a19 63707573 		.ascii	"cpussIpcNr\000"
 5054      73497063 
 5054      4E7200
 5055              	.LASF82:
 5056 0a24 4D55585F 		.ascii	"MUX_SWITCH_CLEAR0\000"
 5056      53574954 
 5056      43485F43 
 5056      4C454152 
 5056      3000
 5057              	.LASF280:
 5058 0a36 6D61736B 		.ascii	"mask\000"
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 200


 5058      00
 5059              	.LASF124:
 5060 0a3b 70617373 		.ascii	"passSarChannels\000"
 5060      53617243 
 5060      68616E6E 
 5060      656C7300 
 5061              	.LASF176:
 5062 0a4b 63707573 		.ascii	"cpussRam2Ctl0\000"
 5062      7352616D 
 5062      3243746C 
 5062      3000
 5063              	.LASF191:
 5064 0a59 43595F53 		.ascii	"CY_SAR_START_CONVERT_SINGLE_SHOT\000"
 5064      41525F53 
 5064      54415254 
 5064      5F434F4E 
 5064      56455254 
 5065              	.LASF52:
 5066 0a7a 53544152 		.ascii	"START_CTRL\000"
 5066      545F4354 
 5066      524C00
 5067              	.LASF237:
 5068 0a85 43595F53 		.ascii	"CY_SYSCLK_DIV_16_5_BIT\000"
 5068      5953434C 
 5068      4B5F4449 
 5068      565F3136 
 5068      5F355F42 
 5069              	.LASF155:
 5070 0a9c 70657269 		.ascii	"periDiv16CtlOffset\000"
 5070      44697631 
 5070      3643746C 
 5070      4F666673 
 5070      657400
 5071              	.LASF293:
 5072 0aaf 4144435F 		.ascii	"ADC_1_allConfigs\000"
 5072      315F616C 
 5072      6C436F6E 
 5072      66696773 
 5072      00
 5073              	.LASF279:
 5074 0ac0 4144435F 		.ascii	"ADC_1_SetEosMask\000"
 5074      315F5365 
 5074      74456F73 
 5074      4D61736B 
 5074      00
 5075              	.LASF224:
 5076 0ad1 6D757853 		.ascii	"muxSwitch\000"
 5076      77697463 
 5076      6800
 5077              	.LASF6:
 5078 0adb 73686F72 		.ascii	"short unsigned int\000"
 5078      7420756E 
 5078      7369676E 
 5078      65642069 
 5078      6E7400
 5079              	.LASF92:
 5080 0aee 6C6F6E67 		.ascii	"long double\000"
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 201


 5080      20646F75 
 5080      626C6500 
 5081              	.LASF15:
 5082 0afa 75696E74 		.ascii	"uint16_t\000"
 5082      31365F74 
 5082      00
 5083              	.LASF264:
 5084 0b03 4144435F 		.ascii	"ADC_1_Enable\000"
 5084      315F456E 
 5084      61626C65 
 5084      00
 5085              	.LASF147:
 5086 0b10 70657269 		.ascii	"periTrCmdGrSelMsk\000"
 5086      5472436D 
 5086      64477253 
 5086      656C4D73 
 5086      6B00
 5087              	.LASF233:
 5088 0b22 43595F53 		.ascii	"CY_SYSCLK_INVALID_STATE\000"
 5088      5953434C 
 5088      4B5F494E 
 5088      56414C49 
 5088      445F5354 
 5089              	.LASF215:
 5090 0b3a 73616D70 		.ascii	"sampleTime01\000"
 5090      6C655469 
 5090      6D653031 
 5090      00
 5091              	.LASF121:
 5092 0b47 73727373 		.ascii	"srssNumHfroot\000"
 5092      4E756D48 
 5092      66726F6F 
 5092      7400
 5093              	.LASF143:
 5094 0b55 64774368 		.ascii	"dwChCtlPreemptablePos\000"
 5094      43746C50 
 5094      7265656D 
 5094      70746162 
 5094      6C65506F 
 5095              	.LASF236:
 5096 0b6b 43595F53 		.ascii	"CY_SYSCLK_DIV_16_BIT\000"
 5096      5953434C 
 5096      4B5F4449 
 5096      565F3136 
 5096      5F424954 
 5097              	.LASF105:
 5098 0b80 64775665 		.ascii	"dwVersion\000"
 5098      7273696F 
 5098      6E00
 5099              	.LASF182:
 5100 0b8a 63686172 		.ascii	"char\000"
 5100      00
 5101              	.LASF1:
 5102 0b8f 756E7369 		.ascii	"unsigned char\000"
 5102      676E6564 
 5102      20636861 
 5102      7200
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 202


 5103              	.LASF269:
 5104 0b9d 636F6E66 		.ascii	"config\000"
 5104      696700
 5105              	.LASF201:
 5106 0ba4 43595F53 		.ascii	"CY_SAR_SWITCH_SEQ_CTRL_ENABLE\000"
 5106      41525F53 
 5106      57495443 
 5106      485F5345 
 5106      515F4354 
 5107              	.LASF17:
 5108 0bc2 73697A65 		.ascii	"sizetype\000"
 5108      74797065 
 5108      00
 5109              	.LASF231:
 5110 0bcb 43595F53 		.ascii	"CY_SYSCLK_BAD_PARAM\000"
 5110      5953434C 
 5110      4B5F4241 
 5110      445F5041 
 5110      52414D00 
 5111              	.LASF172:
 5112 0bdf 63707573 		.ascii	"cpussCm4NmiCtlOffset\000"
 5112      73436D34 
 5112      4E6D6943 
 5112      746C4F66 
 5112      66736574 
 5113              	.LASF166:
 5114 0bf4 63707573 		.ascii	"cpussCm0StatusOffset\000"
 5114      73436D30 
 5114      53746174 
 5114      75734F66 
 5114      66736574 
 5115              	.LASF154:
 5116 0c09 70657269 		.ascii	"periDiv8CtlOffset\000"
 5116      44697638 
 5116      43746C4F 
 5116      66667365 
 5116      7400
 5117              	.LASF37:
 5118 0c1b 52455345 		.ascii	"RESERVED2\000"
 5118      52564544 
 5118      3200
 5119              	.LASF39:
 5120 0c25 52455345 		.ascii	"RESERVED3\000"
 5120      52564544 
 5120      3300
 5121              	.LASF42:
 5122 0c2f 52455345 		.ascii	"RESERVED4\000"
 5122      52564544 
 5122      3400
 5123              	.LASF73:
 5124 0c39 52455345 		.ascii	"RESERVED5\000"
 5124      52564544 
 5124      3500
 5125              	.LASF75:
 5126 0c43 52455345 		.ascii	"RESERVED6\000"
 5126      52564544 
 5126      3600
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 203


 5127              	.LASF246:
 5128 0c4d 43795F53 		.ascii	"Cy_SAR_Disable\000"
 5128      41525F44 
 5128      69736162 
 5128      6C6500
 5129              	.LASF80:
 5130 0c5c 52455345 		.ascii	"RESERVED8\000"
 5130      52564544 
 5130      3800
 5131              	.LASF83:
 5132 0c66 52455345 		.ascii	"RESERVED9\000"
 5132      52564544 
 5132      3900
 5133              	.LASF44:
 5134 0c70 50455249 		.ascii	"PERI_V1_Type\000"
 5134      5F56315F 
 5134      54797065 
 5134      00
 5135              	.LASF85:
 5136 0c7d 4D55585F 		.ascii	"MUX_SWITCH_SQ_CTRL\000"
 5136      53574954 
 5136      43485F53 
 5136      515F4354 
 5136      524C00
 5137              	.LASF7:
 5138 0c90 6C6F6E67 		.ascii	"long int\000"
 5138      20696E74 
 5138      00
 5139              	.LASF103:
 5140 0c99 63707573 		.ascii	"cpussVersion\000"
 5140      73566572 
 5140      73696F6E 
 5140      00
 5141              	.LASF107:
 5142 0ca6 6770696F 		.ascii	"gpioVersion\000"
 5142      56657273 
 5142      696F6E00 
 5143              	.LASF32:
 5144 0cb2 4449565F 		.ascii	"DIV_CMD\000"
 5144      434D4400 
 5145              	.LASF106:
 5146 0cba 666C6173 		.ascii	"flashcVersion\000"
 5146      68635665 
 5146      7273696F 
 5146      6E00
 5147              	.LASF128:
 5148 0cc8 70726F74 		.ascii	"protBusMasterMask\000"
 5148      4275734D 
 5148      61737465 
 5148      724D6173 
 5148      6B00
 5149              	.LASF97:
 5150 0cda 70726F74 		.ascii	"protBase\000"
 5150      42617365 
 5150      00
 5151              	.LASF258:
 5152 0ce3 43795F53 		.ascii	"Cy_SysClk_PeriphEnableDivider\000"
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 204


 5152      7973436C 
 5152      6B5F5065 
 5152      72697068 
 5152      456E6162 
 5153              	.LASF292:
 5154 0d01 4144435F 		.ascii	"ADC_1_currentConfig\000"
 5154      315F6375 
 5154      7272656E 
 5154      74436F6E 
 5154      66696700 
 5155              	.LASF49:
 5156 0d15 52414E47 		.ascii	"RANGE_THRES\000"
 5156      455F5448 
 5156      52455300 
 5157              	.LASF181:
 5158 0d21 63686172 		.ascii	"char_t\000"
 5158      5F7400
 5159              	.LASF189:
 5160 0d28 43595F53 		.ascii	"CY_SAR_CONVERSION_NOT_COMPLETE\000"
 5160      41525F43 
 5160      4F4E5645 
 5160      5253494F 
 5160      4E5F4E4F 
 5161              	.LASF54:
 5162 0d47 4348414E 		.ascii	"CHAN_WORK\000"
 5162      5F574F52 
 5162      4B00
 5163              	.LASF184:
 5164 0d51 646F7562 		.ascii	"double\000"
 5164      6C6500
 5165              	.LASF167:
 5166 0d58 63707573 		.ascii	"cpussCm4PwrCtlOffset\000"
 5166      73436D34 
 5166      50777243 
 5166      746C4F66 
 5166      66736574 
 5167              	.LASF3:
 5168 0d6d 5F5F7569 		.ascii	"__uint8_t\000"
 5168      6E74385F 
 5168      7400
 5169              	.LASF243:
 5170 0d77 6D697363 		.ascii	"miscConfig\000"
 5170      436F6E66 
 5170      696700
 5171              	.LASF158:
 5172 0d82 6770696F 		.ascii	"gpioPrtIntrCfgOffset\000"
 5172      50727449 
 5172      6E747243 
 5172      66674F66 
 5172      66736574 
 5173              	.LASF164:
 5174 0d97 63707573 		.ascii	"cpussCm4ClockCtlOffset\000"
 5174      73436D34 
 5174      436C6F63 
 5174      6B43746C 
 5174      4F666673 
 5175              	.LASF63:
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 205


 5176 0dae 494E5452 		.ascii	"INTR_MASKED\000"
 5176      5F4D4153 
 5176      4B454400 
 5177              	.LASF169:
 5178 0dba 63707573 		.ascii	"cpussTrimRomCtlOffset\000"
 5178      73547269 
 5178      6D526F6D 
 5178      43746C4F 
 5178      66667365 
 5179              	.LASF216:
 5180 0dd0 73616D70 		.ascii	"sampleTime23\000"
 5180      6C655469 
 5180      6D653233 
 5180      00
 5181              	.LASF84:
 5182 0ddd 4D55585F 		.ascii	"MUX_SWITCH_DS_CTRL\000"
 5182      53574954 
 5182      43485F44 
 5182      535F4354 
 5182      524C00
 5183              	.LASF108:
 5184 0df0 6873696F 		.ascii	"hsiomVersion\000"
 5184      6D566572 
 5184      73696F6E 
 5184      00
 5185              	.LASF9:
 5186 0dfd 6C6F6E67 		.ascii	"long unsigned int\000"
 5186      20756E73 
 5186      69676E65 
 5186      6420696E 
 5186      7400
 5187              	.LASF259:
 5188 0e0f 72657456 		.ascii	"retVal\000"
 5188      616C00
 5189              	.LASF253:
 5190 0e16 43795F53 		.ascii	"Cy_SAR_SetVssaSarSeqCtrl\000"
 5190      41525F53 
 5190      65745673 
 5190      73615361 
 5190      72536571 
 5191              	.LASF173:
 5192 0e2f 63707573 		.ascii	"cpussRomCtl\000"
 5192      73526F6D 
 5192      43746C00 
 5193              	.LASF81:
 5194 0e3b 4D55585F 		.ascii	"MUX_SWITCH0\000"
 5194      53574954 
 5194      43483000 
 5195              	.LASF57:
 5196 0e47 4348414E 		.ascii	"CHAN_RESULT_UPDATED\000"
 5196      5F524553 
 5196      554C545F 
 5196      55504441 
 5196      54454400 
 5197              	.LASF196:
 5198 0e5b 63795F65 		.ascii	"cy_en_sar_return_mode_t\000"
 5198      6E5F7361 
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 206


 5198      725F7265 
 5198      7475726E 
 5198      5F6D6F64 
 5199              	.LASF252:
 5200 0e73 73746174 		.ascii	"state\000"
 5200      6500
 5201              	.LASF53:
 5202 0e79 4348414E 		.ascii	"CHAN_CONFIG\000"
 5202      5F434F4E 
 5202      46494700 
 5203              	.LASF214:
 5204 0e85 73616D70 		.ascii	"sampleCtrl\000"
 5204      6C654374 
 5204      726C00
 5205              	.LASF209:
 5206 0e90 43595F53 		.ascii	"CY_SAR_INTR_MASK_NONE\000"
 5206      41525F49 
 5206      4E54525F 
 5206      4D41534B 
 5206      5F4E4F4E 
 5207              	.LASF88:
 5208 0ea6 414E415F 		.ascii	"ANA_TRIM0\000"
 5208      5452494D 
 5208      3000
 5209              	.LASF89:
 5210 0eb0 414E415F 		.ascii	"ANA_TRIM1\000"
 5210      5452494D 
 5210      3100
 5211              	.LASF8:
 5212 0eba 5F5F7569 		.ascii	"__uint32_t\000"
 5212      6E743332 
 5212      5F7400
 5213              	.LASF180:
 5214 0ec5 63795F69 		.ascii	"cy_israddress\000"
 5214      73726164 
 5214      64726573 
 5214      7300
 5215              	.LASF197:
 5216 0ed3 43595F53 		.ascii	"CY_SAR_SWITCH_OPEN\000"
 5216      41525F53 
 5216      57495443 
 5216      485F4F50 
 5216      454E00
 5217              	.LASF238:
 5218 0ee6 43595F53 		.ascii	"CY_SYSCLK_DIV_24_5_BIT\000"
 5218      5953434C 
 5218      4B5F4449 
 5218      565F3234 
 5218      5F355F42 
 5219              	.LASF66:
 5220 0efd 53415455 		.ascii	"SATURATE_INTR_MASK\000"
 5220      52415445 
 5220      5F494E54 
 5220      525F4D41 
 5220      534B00
 5221              	.LASF284:
 5222 0f10 7265744D 		.ascii	"retMode\000"
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 207


 5222      6F646500 
 5223              	.LASF87:
 5224 0f18 52455345 		.ascii	"RESERVED10\000"
 5224      52564544 
 5224      313000
 5225              	.LASF134:
 5226 0f23 666C6173 		.ascii	"flashEraseDelay\000"
 5226      68457261 
 5226      73654465 
 5226      6C617900 
 5227              	.LASF244:
 5228 0f33 636C6B44 		.ascii	"clkDivider\000"
 5228      69766964 
 5228      657200
 5229              	.LASF239:
 5230 0f3e 63795F65 		.ascii	"cy_en_divider_types_t\000"
 5230      6E5F6469 
 5230      76696465 
 5230      725F7479 
 5230      7065735F 
 5231              	.LASF250:
 5232 0f54 43795F53 		.ascii	"Cy_SAR_SetInterruptMask\000"
 5232      41525F53 
 5232      6574496E 
 5232      74657272 
 5232      7570744D 
 5233              	.LASF285:
 5234 0f6c 656E644F 		.ascii	"endOfConversion\000"
 5234      66436F6E 
 5234      76657273 
 5234      696F6E00 
 5235              	.LASF200:
 5236 0f7c 43595F53 		.ascii	"CY_SAR_SWITCH_SEQ_CTRL_DISABLE\000"
 5236      41525F53 
 5236      57495443 
 5236      485F5345 
 5236      515F4354 
 5237              	.LASF278:
 5238 0f9b 4144435F 		.ascii	"ADC_1_IRQ_Disable\000"
 5238      315F4952 
 5238      515F4469 
 5238      7361626C 
 5238      6500
 5239              	.LASF130:
 5240 0fad 666C6173 		.ascii	"flashRwwRequired\000"
 5240      68527777 
 5240      52657175 
 5240      69726564 
 5240      00
 5241              	.LASF159:
 5242 0fbe 6770696F 		.ascii	"gpioPrtCfgOffset\000"
 5242      50727443 
 5242      66674F66 
 5242      66736574 
 5242      00
 5243              	.LASF125:
 5244 0fcf 65704D6F 		.ascii	"epMonitorNr\000"
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 208


 5244      6E69746F 
 5244      724E7200 
 5245              	.LASF271:
 5246 0fdb 4144435F 		.ascii	"ADC_1_SelectConfig\000"
 5246      315F5365 
 5246      6C656374 
 5246      436F6E66 
 5246      696700
 5247              	.LASF2:
 5248 0fee 7369676E 		.ascii	"signed char\000"
 5248      65642063 
 5248      68617200 
 5249              	.LASF140:
 5250 0ffa 64774368 		.ascii	"dwChOffset\000"
 5250      4F666673 
 5250      657400
 5251              	.LASF113:
 5252 1005 63707573 		.ascii	"cpussIpcIrqNr\000"
 5252      73497063 
 5252      4972714E 
 5252      7200
 5253              	.LASF291:
 5254 1013 4144435F 		.ascii	"ADC_1_selected\000"
 5254      315F7365 
 5254      6C656374 
 5254      656400
 5255              	.LASF294:
 5256 1022 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 5256      43313120 
 5256      352E342E 
 5256      31203230 
 5256      31363036 
 5257 1055 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0plus -mthumb -"
 5257      20726576 
 5257      6973696F 
 5257      6E203233 
 5257      37373135 
 5258 1088 67202D4F 		.ascii	"g -O0 -ffunction-sections -ffat-lto-objects\000"
 5258      30202D66 
 5258      66756E63 
 5258      74696F6E 
 5258      2D736563 
 5259              	.LASF165:
 5260 10b4 63707573 		.ascii	"cpussCm4StatusOffset\000"
 5260      73436D34 
 5260      53746174 
 5260      75734F66 
 5260      66736574 
 5261              	.LASF220:
 5262 10c9 6368616E 		.ascii	"chanConfig\000"
 5262      436F6E66 
 5262      696700
 5263              	.LASF86:
 5264 10d4 4D55585F 		.ascii	"MUX_SWITCH_STATUS\000"
 5264      53574954 
 5264      43485F53 
 5264      54415455 
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 209


 5264      5300
 5265              	.LASF26:
 5266 10e6 41444452 		.ascii	"ADDR0\000"
 5266      3000
 5267              	.LASF28:
 5268 10ec 41444452 		.ascii	"ADDR1\000"
 5268      3100
 5269              	.LASF110:
 5270 10f2 70657269 		.ascii	"periVersion\000"
 5270      56657273 
 5270      696F6E00 
 5271              	.LASF270:
 5272 10fe 6465496E 		.ascii	"deInitRouting\000"
 5272      6974526F 
 5272      7574696E 
 5272      6700
 5273              	.LASF226:
 5274 110c 636F6E66 		.ascii	"configRouting\000"
 5274      6967526F 
 5274      7574696E 
 5274      6700
 5275              	.LASF100:
 5276 111a 70617373 		.ascii	"passBase\000"
 5276      42617365 
 5276      00
 5277              	.LASF27:
 5278 1123 41545430 		.ascii	"ATT0\000"
 5278      00
 5279              	.LASF29:
 5280 1128 41545431 		.ascii	"ATT1\000"
 5280      00
 5281              	.LASF22:
 5282 112d 52455345 		.ascii	"RESERVED1\000"
 5282      52564544 
 5282      3100
 5283              	.LASF119:
 5284 1137 73727373 		.ascii	"srssNumClkpath\000"
 5284      4E756D43 
 5284      6C6B7061 
 5284      746800
 5285              	.LASF78:
 5286 1146 53544154 		.ascii	"STATUS\000"
 5286      555300
 5287              	.LASF23:
 5288 114d 50455249 		.ascii	"PERI_GR_V1_Type\000"
 5288      5F47525F 
 5288      56315F54 
 5288      79706500 
 5289              	.LASF139:
 5290 115d 666C6173 		.ascii	"flashCtlMainWs4Freq\000"
 5290      6843746C 
 5290      4D61696E 
 5290      57733446 
 5290      72657100 
 5291              	.LASF223:
 5292 1171 72616E67 		.ascii	"rangeIntrMask\000"
 5292      65496E74 
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 210


 5292      724D6173 
 5292      6B00
 5293              	.LASF198:
 5294 117f 43595F53 		.ascii	"CY_SAR_SWITCH_CLOSE\000"
 5294      41525F53 
 5294      57495443 
 5294      485F434C 
 5294      4F534500 
 5295              	.LASF281:
 5296 1193 696E7472 		.ascii	"intrMaskReg\000"
 5296      4D61736B 
 5296      52656700 
 5297              	.LASF208:
 5298 119f 63795F65 		.ascii	"cy_en_sar_range_detect_condition_t\000"
 5298      6E5F7361 
 5298      725F7261 
 5298      6E67655F 
 5298      64657465 
 5299              	.LASF21:
 5300 11c2 54494D45 		.ascii	"TIMEOUT_CTL\000"
 5300      4F55545F 
 5300      43544C00 
 5301              	.LASF192:
 5302 11ce 43595F53 		.ascii	"CY_SAR_START_CONVERT_CONTINUOUS\000"
 5302      41525F53 
 5302      54415254 
 5302      5F434F4E 
 5302      56455254 
 5303              	.LASF31:
 5304 11ee 50455249 		.ascii	"PERI_PPU_GR_V1_Type\000"
 5304      5F505055 
 5304      5F47525F 
 5304      56315F54 
 5304      79706500 
 5305              	.LASF109:
 5306 1202 69706356 		.ascii	"ipcVersion\000"
 5306      65727369 
 5306      6F6E00
 5307              	.LASF221:
 5308 120d 696E7472 		.ascii	"intrMask\000"
 5308      4D61736B 
 5308      00
 5309              	.LASF146:
 5310 1216 70657269 		.ascii	"periTrCmdOffset\000"
 5310      5472436D 
 5310      644F6666 
 5310      73657400 
 5311              	.LASF261:
 5312 1226 4144435F 		.ascii	"ADC_1_intSarClock_Enable\000"
 5312      315F696E 
 5312      74536172 
 5312      436C6F63 
 5312      6B5F456E 
 5313              	.LASF45:
 5314 123f 4354524C 		.ascii	"CTRL\000"
 5314      00
 5315              	.LASF240:
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccoe8swO.s 			page 211


 5316 1244 6368616E 		.ascii	"channelBase\000"
 5316      6E656C42 
 5316      61736500 
 5317              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
