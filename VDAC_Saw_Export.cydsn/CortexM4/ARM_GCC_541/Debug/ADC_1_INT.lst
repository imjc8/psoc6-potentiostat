ARM GAS  C:\Users\JC\AppData\Local\Temp\ccdNpiZW.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.syntax unified
  16              		.file	"ADC_1_INT.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.section	.text.Cy_SAR_GetInterruptStatus,"ax",%progbits
  21              		.align	2
  22              		.thumb
  23              		.thumb_func
  24              		.type	Cy_SAR_GetInterruptStatus, %function
  25              	Cy_SAR_GetInterruptStatus:
  26              	.LFB170:
  27              		.file 1 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/sar/cy_sar.h"
   1:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /***************************************************************************//**
   2:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \file cy_sar.h
   3:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \version 1.20
   4:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
   5:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Header file for the SAR driver.
   6:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
   7:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ********************************************************************************
   8:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \copyright
   9:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Copyright 2017-2018, Cypress Semiconductor Corporation. All rights reserved.
  10:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * You may use this file only in accordance with the license, terms, conditions,
  11:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * disclaimers, and limitations in the end user license agreement accompanying
  12:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * the software package with which this file was provided.
  13:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
  14:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
  15:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /**
  16:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \addtogroup group_sar
  17:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
  18:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This driver configures and controls the SAR ADC subsystem block.
  19:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  20:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The functions and other declarations used in this driver are in cy_sar.h. 
  21:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * You can include cy_pdl.h (ModusToolbox only) to get access to all functions 
  22:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * and declarations in the PDL. 
  23:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  24:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This SAR ADC subsystem is comprised of:
  25:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - a 12-bit SAR converter (SARADC)
  26:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - an embedded reference block (SARREF)
  27:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - a mux (\ref group_sar_sarmux "SARMUX") at the inputs of the converter
  28:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - a sequence controller (\ref group_sar_sarmux "SARSEQ") that enables multi-channel acquisition
  29:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       in a round robin fashion, without CPU intervention, to maximize scan rates.
  30:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccdNpiZW.s 			page 2


  31:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_block_diagram.png
  32:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  33:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The high level features of the subsystem are:
  34:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - maximum sample rate of 1 Msps
  35:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Sixteen individually configurable channels (depends on device routing capabilities)
  36:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - per channel selectable
  37:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       - single-ended or differential input mode
  38:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       - input from external pin (8 channels in single-ended mode or 4 channels in differential mo
  39:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *         or from internal signals (AMUXBUS, CTB, Die Temperature Sensor)
  40:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       - choose one of four programmable acquisition times
  41:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       - averaging and accumulation
  42:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - scan can be triggered by firmware or hardware in single shot or continuous mode
  43:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - hardware averaging from 2 to 256 samples
  44:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - selectable voltage references
  45:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       - internal VDDA and VDDA/2 references
  46:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       - buffered 1.2 V bandgap reference from \ref group_sysanalog "AREF"
  47:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       - external reference from dedicated pin
  48:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Interrupt generation
  49:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  50:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_usage Usage
  51:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  52:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The high level steps to use this driver are:
  53:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  54:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   -# \ref group_sar_initialization
  55:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   -# \ref group_sar_trigger_conversions
  56:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   -# \ref group_sar_handle_interrupts
  57:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   -# \ref group_sar_retrieve_result
  58:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  59:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_initialization Initialization and Enable
  60:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  61:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * To configure the SAR subsystem, call \ref Cy_SAR_Init. Pass in a pointer to the \ref SAR_Type
  62:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * structure for the base hardware register address and pass in the configuration structure,
  63:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref cy_stc_sar_config_t.
  64:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  65:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * After initialization, call \ref Cy_SAR_Enable to enable the hardware.
  66:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  67:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Here is guidance on how to set the data fields of the configuration structure:
  68:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  69:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_ctrl uint32_t ctrl
  70:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  71:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field specifies configurations that apply to all channels such as the Vref
  72:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * source or the negative terminal selection for all single-ended channels.
  73:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Select a value from each of the following enums that begin with "cy_en_sar_ctrl_" and "OR" them t
  74:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_pwr_ctrl_vref_t
  75:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_vref_sel_t
  76:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_bypass_cap_t
  77:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_neg_sel_t
  78:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_hw_ctrl_negvref_t
  79:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_comp_delay_t
  80:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_comp_pwr_t
  81:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_sarmux_deep_sleep_t
  82:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_sarseq_routing_switches_t
  83:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  84:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SAR_CTRL
  85:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  86:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_sampleCtrl uint32_t sampleCtrl
  87:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccdNpiZW.s 			page 3


  88:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures sampling details that apply to all channels.
  89:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Select a value from each of the following enums that begin with "cy_en_sar_sample_" and "OR" them
  90:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_result_align_t
  91:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_single_ended_format_t
  92:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_differential_format_t
  93:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_avg_cnt_t
  94:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_avg_mode_t
  95:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_trigger_mode_t
  96:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  97:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SAMPLE_CTRL
  98:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  99:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_sampleTime01 uint32_t sampleTime01
 100:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 101:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures the value for sample times 0 and 1 in ADC clock cycles.
 102:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 103:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SAR has four programmable 10-bit aperture times that are configured using two data fields,
 104:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref group_sar_init_struct_sampleTime01 and
 105:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref group_sar_init_struct_sampleTime23.
 106:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Ten bits allow for a range of 0 to 1023 cycles, however 0 and 1 are invalid.
 107:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The minimum aperture time is 167 ns. With an 18 MHz ADC clock, this is
 108:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * equal to 3 cycles or a value of 4 in this field. The actual aperture time is one cycle less than
 109:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * the value stored in this field.
 110:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 111:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Use the shifts defined in \ref cy_en_sar_sample_time_shift_t.
 112:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 113:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SAMPLE_TIME01
 114:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 115:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_sampleTime23 uint32_t sampleTime23
 116:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 117:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures the value for sample times 2 and 3 in ADC clock cycles.
 118:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Use the shifts defined in \ref cy_en_sar_sample_time_shift_t.
 119:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 120:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SAMPLE_TIME23
 121:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 122:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_rangeThres uint32_t rangeThres
 123:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 124:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures the upper and lower thresholds for the range interrupt.
 125:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * These thresholds apply on a global level for all channels with range detection enabled.
 126:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 127:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SARSEQ supports range detection to allow for automatic detection of sample values
 128:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * compared to two programmable thresholds without CPU involvement.
 129:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Range detection is done after averaging, alignment, and sign extension (if applicable). In other 
 130:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * threshold values need to have the same data format as the result data.
 131:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The values are interpreted as signed or unsigned according to each channel's configuration.
 132:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 133:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Use the shifts defined in \ref cy_en_sar_range_thres_shift_t.
 134:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 135:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The \ref Cy_SAR_SetLowLimit and \ref Cy_SAR_SetHighLimit provide run-time configurability of thes
 136:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 137:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_RANGE_THRES
 138:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 139:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_rangeCond cy_en_sar_range_detect_condition_t rangeCond
 140:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 141:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures the condition (below, inside, outside, or above) that will trigger
 142:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * the range interrupt. Select a value from the \ref cy_en_sar_range_detect_condition_t enum.
 143:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 144:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_chanEn uint32_t chanEn
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccdNpiZW.s 			page 4


 145:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 146:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures which channels will be scanned.
 147:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Each bit corresponds to a channel. Bit 0 enables channel 0, bit 1 enables channel 1,
 148:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * bit 2 enables channel 2, and so on.
 149:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 150:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_chanConfig uint32_t chanConfig[16]
 151:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 152:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Each channel has its own channel configuration register.
 153:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The channel configuration specifies which pin/signal is connected to that channel
 154:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * and how the channel is sampled.
 155:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 156:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Select a value from each of the following enums that begin with "cy_en_sar_chan_config_" and "OR"
 157:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 158:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_input_mode_t
 159:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_pos_pin_addr_t
 160:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_pos_port_addr_t
 161:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_avg_en_t
 162:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_sample_time_t
 163:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_neg_pin_addr_t
 164:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_neg_port_addr_t
 165:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 166:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Some important considerations are:
 167:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - The POS_PORT_ADDR and POS_PIN_ADDR bit fields are used by the SARSEQ to select
 168:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   the connection to the positive terminal (Vplus) of the ADC for each channel.
 169:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - When the channel is an unpaired differential input (\ref CY_SAR_CHAN_DIFFERENTIAL_UNPAIRED), 
 170:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   NEG_PORT_ADDR and NEG_PIN_ADDR are used by the SARSEQ to select the connection
 171:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   to the negative terminal (Vminus) of the ADC.
 172:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - When the channel is a differential input pair (\ref CY_SAR_CHAN_DIFFERENTIAL_PAIRED), the NEG
 173:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   For differential input pairs, only the pin for the positive terminal needs to be
 174:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   specified and this pin must be even. For example, Pin 0 (positive terminal) and Pin 1 (negative
 175:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   are a pair. Pin 2 (positive terminal) and Pin 3 (negative terminal) are a pair.
 176:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 177:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * If the SARSEQ is disabled (\ref cy_en_sar_ctrl_sarseq_routing_switches_t) or
 178:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * it is not controlling any switches (\ref group_sar_init_struct_muxSwitchSqCtrl = 0), the port and
 179:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * are ignored. This is possible when there is only one channel to scan.
 180:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 181:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_CHAN_CONFIG
 182:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 183:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_intrMask uint32_t intrMask
 184:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 185:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures which interrupt events (end of scan, overflow, or firmware collision) will 
 186:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 187:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Select one or more values from the \ref cy_en_sar_intr_mask_t enum and "OR" them
 188:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * together.
 189:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 190:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_INTR_MASK
 191:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 192:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_satIntrMask uint32_t satIntrMask
 193:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 194:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures which channels will cause a saturation interrupt.
 195:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 196:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SARSEQ has a saturation detect that is always applied to every conversion.
 197:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This feature detects whether a channel's sample value is equal to the minimum or maximum values.
 198:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This allows the firmware to take action, for example, discard the result, when the SARADC saturat
 199:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The sample value is tested right after conversion, that is, before averaging. This means that it
 200:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * can happen that the interrupt is set while the averaged result in the data register is not
 201:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * equal to the minimum or maximum.
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccdNpiZW.s 			page 5


 202:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 203:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Each bit corresponds to a channel. A value of 0 disables saturation detection for all channels.
 204:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 205:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_rangeIntrMask uint32_t rangeIntrMask
 206:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 207:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures which channels will cause a range detection interrupt.
 208:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Each bit corresponds to a channel. A value of 0 disables range detection for all channels.
 209:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 210:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_muxSwitch uint32_t muxSwitch
 211:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 212:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field is the firmware control of the SARMUX switches.
 213:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 214:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Use one or more values from the \ref cy_en_sar_mux_switch_fw_ctrl_t enum and "OR" them together.
 215:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * If the SARSEQ is enabled, the SARMUX switches that will be used must
 216:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * also be closed using this firmware control.
 217:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 218:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_MUX_SWITCH
 219:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 220:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Firmware control can be changed at run-time by calling \ref Cy_SAR_SetAnalogSwitch with \ref CY_S
 221:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * and the desired switch states.
 222:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 223:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_muxSwitchSqCtrl uint32_t muxSwitchSqCtrl
 224:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 225:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field enables or disables SARSEQ control of the SARMUX switches.
 226:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * To disable control of all switches, set this field to 0. To disable the SARSEQ all together,
 227:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * use \ref CY_SAR_SARSEQ_SWITCH_DISABLE when configuring the \ref group_sar_init_struct_ctrl regist
 228:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 229:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Use one or more values from the \ref cy_en_sar_mux_switch_sq_ctrl_t enum and "OR" them together.
 230:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 231:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_MUX_SQ_CTRL
 232:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 233:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * SARSEQ control can be changed at run-time by calling \ref Cy_SAR_SetSwitchSarSeqCtrl.
 234:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 235:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_configRouting bool configRouting
 236:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 237:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * If true, the \ref group_sar_init_struct_muxSwitch and \ref group_sar_init_struct_muxSwitchSqCtrl 
 238:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * will be used. If false, the fields will be ignored.
 239:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 240:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_vrefMvValue uint32_t vrefMvValue
 241:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 242:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field sets the value of the reference voltage in millivolts used. This value
 243:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * is used for converting counts to volts in the \ref Cy_SAR_CountsTo_Volts, \ref Cy_SAR_CountsTo_mV
 244:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref Cy_SAR_CountsTo_uVolts functions.
 245:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 246:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_trigger_conversions Triggering Conversions
 247:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 248:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SAR subsystem has the following modes for triggering a conversion:
 249:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * <table class="doxtable">
 250:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 251:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>Mode</th>
 252:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>Description</th>
 253:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>Usage</th>
 254:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 255:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 256:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Continuous</td>
 257:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>After completing a scan, the
 258:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     SARSEQ will immediately start the next scan. That is, the SARSEQ will always be BUSY.
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccdNpiZW.s 			page 6


 259:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     As a result all other triggers, firmware or hardware, are essentially ignored.
 260:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *  </td>
 261:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>To enter this mode, call \ref Cy_SAR_StartConvert with \ref CY_SAR_START_CONVERT_CONTINUO
 262:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     To stop continuous conversions, call \ref Cy_SAR_StopConvert.
 263:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     </td>
 264:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 265:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 266:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Firmware single shot</td>
 267:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>A single conversion of all enabled channels is triggered with a function call to \ref Cy_
 268:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     \ref CY_SAR_START_CONVERT_SINGLE_SHOT.
 269:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     </td>
 270:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>
 271:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     Firmware triggering is always available by calling \ref Cy_SAR_StartConvert with \ref CY_SAR_
 272:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     To allow only firmware triggering, or disable
 273:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     hardware triggering, set up the \ref cy_stc_sar_config_t config structure with \ref CY_SAR_TR
 274:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     </td>
 275:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 276:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 277:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Hardware edge sensitive</td>
 278:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>A single conversion of all enabled channels is triggered on the rising edge of the hardwa
 279:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     trigger signal.</td>
 280:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>To enable this mode, set up the \ref cy_stc_sar_config_t config structure with
 281:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     \ref CY_SAR_TRIGGER_MODE_FW_AND_HWEDGE.</td>
 282:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *    </tr>
 283:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *    <tr>
 284:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Hardware level sensitive</td>
 285:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Conversions are triggered continuously when the hardware trigger signal is high.</td>
 286:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>To enable this mode, set up the \ref cy_stc_sar_config_t config structure with
 287:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     \ref CY_SAR_TRIGGER_MODE_FW_AND_HWLEVEL.</td>
 288:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *    </tr>
 289:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * </table>
 290:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 291:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The trigger mode can be changed during run time with \ref Cy_SAR_SetConvertMode.
 292:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 293:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * For the hardware trigger modes, use the \ref group_trigmux driver to route an internal or externa
 294:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * signal to the SAR trigger input.
 295:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * When making the required \ref Cy_TrigMux_Connect calls, use the pre-defined enum, TRIG6_OUT_PASS_
 296:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * for the SAR trigger input.
 297:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 298:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_CONFIG_TRIGGER
 299:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 300:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_handle_interrupts Handling Interrupts
 301:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 302:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SAR can generate interrupts on these events:
 303:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 304:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - End of scan (EOS): when scanning of all enabled channels complete.
 305:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Overflow: when the result register is updated before the previous result is read.
 306:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - FW collision: when a new trigger is received while the SAR is still processing the previous t
 307:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Saturation detection: when the channel result is equal to the minimum or maximum value.
 308:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Range detection: when the channel result meets the programmed upper or lower threshold values
 309:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 310:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SAR interrupt to the NVIC is raised any time the intersection (logic and) of the interrupt
 311:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * flags and the corresponding interrupt masks are non-zero.
 312:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 313:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Implement an interrupt routine and assign it to the SAR interrupt.
 314:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Use the pre-defined enum, pass_interrupt_sar_IRQn, as the interrupt source for the SAR.
 315:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccdNpiZW.s 			page 7


 316:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The following code snippet demonstrates how to implement a routine to handle the interrupt.
 317:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The routine gets called when any one of the SAR interrupts are triggered.
 318:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * When servicing an interrupt, the user must clear the interrupt so that subsequent
 319:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * interrupts can be handled.
 320:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 321:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_ISR
 322:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 323:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The following code snippet demonstrates how to configure and enable the interrupt.
 324:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 325:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_CONFIG_INTR
 326:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 327:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Alternately, instead of handling the interrupts, the \ref Cy_SAR_IsEndConversion function
 328:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * allows for firmware polling of the end of conversion status.
 329:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 330:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_retrieve_result Retrieve Channel Results
 331:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 332:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Retrieve the ADC result by calling \ref Cy_SAR_GetResult16 with the desired channel.
 333:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * To convert the result to a voltage, pass the ADC result to \ref Cy_SAR_CountsTo_Volts, \ref Cy_SA
 334:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref Cy_SAR_CountsTo_uVolts.
 335:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 336:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_clock SAR Clock Configuration
 337:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 338:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SAR requires a clock. Assign a clock to the SAR using the
 339:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * pre-defined enum, PCLK_PASS_CLOCK_SAR, to identify the SAR subsystem.
 340:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Set the clock divider value to achieve the desired clock rate. The SAR can support
 341:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * a maximum frequency of 18 MHz.
 342:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 343:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm4.c SAR_SNIPPET_CONFIGURE_CLOCK
 344:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 345:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_scan_time Scan Rate
 346:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 347:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The scan rate is dependent on the following:
 348:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 349:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - ADC clock rate
 350:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Number of channels
 351:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Averaging
 352:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Resolution
 353:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Acquisition times
 354:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 355:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_acquisition_time Acquisition Time
 356:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 357:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The acquisition time of a channel is based on which of the four global aperture times are selecte
 358:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * channel. The selection is done during initialization per channel with \ref group_sar_init_struct_
 359:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The four global aperture times are also set during initialization with \ref group_sar_init_struct
 360:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref group_sar_init_struct_sampleTime23. Note that these global aperture times are in SAR clock c
 361:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * acquisition time is 1 less than that value in the register.
 362:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 363:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_acquisition_time_eqn.png
 364:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 365:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_channel_sample_time Channel Sample Time
 366:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 367:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The sample time for a channel is the time required to acquire the analog signal
 368:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * and convert it to a digital code.
 369:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 370:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_channel_sample_time_eqn.png
 371:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 372:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SAR ADC is a 12-bit converter so Resolution = 12.
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccdNpiZW.s 			page 8


 373:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 374:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_total_scan_time Total Scan Time
 375:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 376:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Channels using one of the sequential averaging modes (\ref CY_SAR_AVG_MODE_SEQUENTIAL_ACCUM or \r
 377:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * are sampled multiple times per scan. The number of samples averaged are set during initialization
 378:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * with \ref group_sar_init_struct_sampleCtrl using one of the values from \ref cy_en_sar_sample_ctr
 379:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Channels that are not averaged or use the \ref CY_SAR_AVG_MODE_INTERLEAVED mode are only sampled 
 380:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 381:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The total scan time is the sum of each channel's sample time multiplied by the samples per scan.
 382:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 383:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_scan_rate_eqn.png
 384:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 385:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * where N is the total number of channels in the scan.
 386:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 387:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_sarmux SARMUX and SARSEQ
 388:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 389:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SARMUX is an analog programmable multiplexer. Its switches can be controlled by the SARSEQ or
 390:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * and the inputs can come from:
 391:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - a dedicated port (can support 8 single-ended channels or 4 differential channels)
 392:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - an internal die temperature (DieTemp) sensor
 393:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - CTB output via SARBUS0/1 (if CTBs are available on the device)
 394:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - AMUXBUSA/B
 395:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 396:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The following figure shows the SARMUX switches. See the device datasheet for the exact location o
 397:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 398:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_sarmux_switches.png
 399:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 400:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * When using the SARSEQ, the following configurations must be performed:
 401:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - enable SARSEQ control of required switches (see \ref group_sar_init_struct_muxSwitchSqCtrl)
 402:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - close the required switches with firmware (see \ref group_sar_init_struct_muxSwitch)
 403:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - configure the POS_PORT_ADDR and POS_PIN_ADDR, and if used, the NEG_PORT_ADDR and NEG_PIN_ADDR
 404:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 405:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * While firmware can control every switch in the SARMUX, not every switch can be controlled by the 
 406:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Additionally, switches outside of the SARMUX such as the AMUXBUSA/B switches or
 407:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * CTB switches will require separate function calls (see \ref group_gpio "GPIO" and \ref group_ctb 
 408:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SARSEQ can control three switches in the \ref group_ctb "CTB" driver (see \ref Cy_CTB_EnableS
 409:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * These switches need to be enabled for SARSEQ control if the CTB outputs are used as the SARMUX in
 410:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 411:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The following table shows the required POS_PORT_ADDR and POS_PIN_ADDR settings
 412:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * for different input connections.
 413:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 414:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * <table class="doxtable">
 415:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 416:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>Input Connection Selection</th>
 417:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>POS_PORT_ADDR</th>
 418:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>POS_PIN_ADDR</th>
 419:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 420:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 421:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>SARMUX dedicated port</td>
 422:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_SARMUX</td>
 423:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_0 through \ref CY_SAR_CHAN_POS_PIN_ADDR_7</td>
 424:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 425:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 426:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>DieTemp sensor</td>
 427:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_SARMUX_VIRT</td>
 428:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_0</td>
 429:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccdNpiZW.s 			page 9


 430:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 431:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>AMUXBUSA</td>
 432:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_SARMUX_VIRT</td>
 433:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_2</td>
 434:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 435:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 436:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>AMUXBUSB</td>
 437:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_SARMUX_VIRT</td>
 438:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_3</td>
 439:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 440:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 441:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>CTB0 Opamp0 1x output</td>
 442:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_CTB0</td>
 443:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_2</td>
 444:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 445:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 446:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>CTB0 Opamp1 1x output</td>
 447:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_CTB0</td>
 448:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_3</td>
 449:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 450:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * </table>
 451:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 452:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_sarmux_dietemp Input from DieTemp sensor
 453:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 454:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * When using the DieTemp sensor, always use single-ended mode.
 455:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The temperature sensor can be routed to Vplus using the \ref CY_SAR_MUX_FW_TEMP_VPLUS switch.
 456:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Connecting this switch will also enable the sensor. Set the \ref group_sar_acquisition_time "acqu
 457:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * be at least 1 us to meet the settling time of the temperature sensor.
 458:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 459:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_sarmux_dietemp.png
 460:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 461:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_02.cydsn/main_cm4.c SNIPPET_SAR_SARMUX_DIETEMP
 462:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 463:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_sarmux_se_diff Input from SARMUX port
 464:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 465:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The following figure and code snippet show how two GPIOs on the SARMUX dedicated port
 466:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * are connected to the SARADC as separate single-ended channels and as a differential-pair channel.
 467:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 468:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_sarmux_dedicated_port.png
 469:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 470:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_02.cydsn/main_cm4.c SNIPPET_SAR_SARMUX_SE_DIFF
 471:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 472:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_sarmux_ctb Input from CTB output visa SARBUS0/1
 473:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 474:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The following figure and code snippet show how the two opamp outputs from the CTB
 475:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * are connected to the SARADC as separate single-ended channels and as a differential-pair channel.
 476:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Note that separate function calls are needed to configure and enable the opamps, perform required
 477:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * and enable SARSEQ control of the switches contained in the CTB.
 478:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 479:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_sarmux_ctb.png
 480:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 481:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_02.cydsn/main_cm4.c SNIPPET_SAR_SARMUX_CTB
 482:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 483:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_sarmux_amuxbus Input from other pins through AMUXBUSA/B
 484:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 485:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The following figure and code snippet show how two GPIOs on any port through the AMUXBUSA and AMU
 486:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * are connected to the SARADC as separate single-ended channels and as a differential-pair channel.
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccdNpiZW.s 			page 10


 487:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Note that separate function calls are needed to route the device pins to the SARMUX. The AMUXBUSe
 488:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * are separated into multiple segments and these segments are connected/disconnected using the AMUX
 489:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * registers in the HSIOM. In the following code snippet, to connect Port 1 to the SARMUX, the left 
 490:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * switches of AMUX_SPLIT_CTL[1] and AMUX_SPLIT_CTL[6] need to be closed.
 491:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 492:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_sarmux_amuxbus.png
 493:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 494:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_02.cydsn/main_cm4.c SNIPPET_SAR_SARMUX_AMUXBUS
 495:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 496:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_low_power Low Power Support
 497:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This SAR driver provides a callback function to handle power mode transitions.
 498:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The \ref Cy_SAR_DeepSleepCallback function ensures that SAR conversions are stopped
 499:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * before Deep Sleep entry. Upon wakeup, the callback
 500:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * enables the hardware and continuous conversions, if previously enabled.
 501:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 502:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * To trigger the callback execution, the callback must be registered before calling \ref Cy_SysPm_C
 503:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref group_syspm driver for more information about power mode transitions and
 504:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * callback registration.
 505:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 506:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Recall that during configuration of the \ref group_sar_init_struct_ctrl "ctrl" field,
 507:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * the SARMUX can be configured to remain enabled in Deep Sleep mode.
 508:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * All other blocks (SARADC, REFBUF, and SARSEQ) do not support Deep Sleep mode operation.
 509:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 510:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_more_information More Information
 511:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * For more information on the SAR ADC subsystem, refer to the technical reference manual (TRM).
 512:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 513:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_MISRA MISRA-C Compliance]
 514:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 515:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This driver has the following specific deviations:
 516:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 517:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * <table class="doxtable">
 518:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 519:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>MISRA Rule</th>
 520:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>Rule Class (Required/Advisory)</th>
 521:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>Rule Description</th>
 522:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>Description of Deviation(s)</th>
 523:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 524:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 525:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>11.4</td>
 526:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Advisory</td>
 527:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>A cast should not be performed between a pointer to object type and a different pointer t
 528:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>The cy_syspm driver defines the pointer to void in the \ref cy_stc_syspm_callback_params_
 529:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       This SAR driver implements a Deep Sleep callback conforming to the cy_syspm driver requirem
 530:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       When the callback is called, the base should point to the SAR_Type register address.
 531:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     </td>
 532:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 533:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * </table>
 534:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 535:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_changelog Changelog
 536:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * <table class="doxtable">
 537:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr><th>Version</th><th>Changes</th><th>Reason for Change</th></tr>
 538:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 539:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td rowspan="2">1.20</td>
 540:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Flattened the organization of the driver source code into the single source directory and
 541:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Driver library directory-structure simplification.</td>
 542:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 543:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccdNpiZW.s 			page 11


 544:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Added register access layer. Use register access macros instead
 545:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *         of direct register access using dereferenced pointers.</td>
 546:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Makes register access device-independent, so that the PDL does 
 547:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *         not need to be recompiled for each supported part number.</td>
 548:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 549:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 550:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td rowspan="3">1.10</td>
 551:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td> Added workaround for parts with out of range CAP_TRIM in Init API.</td>
 552:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td> Correct CAP_TRIM is necessary achieving specified SAR ADC linearity</td>
 553:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 554:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 555:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td> Turn off the entire hardware block only if the SARMUX is not enabled 
 556:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *          for Deep Sleep operation.                
 557:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     </td>
 558:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td> Improvement of the \ref Cy_SAR_DeepSleep flow</td>
 559:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 560:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 561:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Updated "Low Power Support" section to describe registering the Deep Sleep callback.
 562:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *         Added parenthesis around logical AND operation in Sleep API.</td>
 563:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Documentation update and clarification</td>
 564:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 565:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 566:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>1.0</td>
 567:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Initial version</td>
 568:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td></td>
 569:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 570:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * </table>
 571:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 572:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \defgroup group_sar_macros Macros
 573:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \defgroup group_sar_functions Functions
 574:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   \{
 575:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_functions_basic         Initialization and Basic Functions
 576:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_functions_power         Low Power Callback
 577:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_functions_config        Run-time Configuration Functions
 578:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_functions_countsto      Counts Conversion Functions
 579:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_functions_interrupt     Interrupt Functions
 580:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_functions_switches      SARMUX Switch Control Functions
 581:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_functions_helper        Useful Configuration Query Functions
 582:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   \}
 583:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \defgroup group_sar_globals Global Variables
 584:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \defgroup group_sar_data_structures Data Structures
 585:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \defgroup group_sar_enums Enumerated Types
 586:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   \{
 587:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_ctrl_register_enums         Control Register Enums
 588:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_sample_ctrl_register_enums  Sample Control Register Enums
 589:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_sample_time_shift_enums     Sample Time Register Enums
 590:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_range_thres_register_enums  Range Interrupt Register Enums
 591:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_chan_config_register_enums  Channel Configuration Register Enums
 592:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_intr_mask_t_register_enums  Interrupt Mask Register Enums
 593:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_mux_switch_register_enums   SARMUX Switch Control Register Enums
 594:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   \}
 595:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 596:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 597:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #if !defined(CY_SAR_H)
 598:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_H
 599:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 600:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #include <stdint.h>
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccdNpiZW.s 			page 12


 601:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #include <stdbool.h>
 602:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #include <stddef.h>
 603:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #include "cy_device_headers.h"
 604:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #include "cy_syslib.h"
 605:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #include "cy_syspm.h"
 606:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #include "cy_device.h"
 607:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 608:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #ifdef CY_IP_MXS40PASS_SAR
 609:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 610:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #if defined(__cplusplus)
 611:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** extern "C" {
 612:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #endif
 613:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 614:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_macros
 615:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
 616:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 617:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 618:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Driver major version */
 619:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_DRV_VERSION_MAJOR        1
 620:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 621:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Driver minor version */
 622:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_DRV_VERSION_MINOR        20
 623:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 624:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** SAR driver identifier */
 625:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_ID                       CY_PDL_DRV_ID(0x01u)
 626:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 627:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Maximum number of channels */
 628:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_MAX_NUM_CHANNELS         (PASS_SAR_SAR_CHANNELS)
 629:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 630:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \cond INTERNAL */
 631:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_DEINIT                   (0uL)             /**< De-init value for most SAR registers
 632:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SAMPLE_TIME_DEINIT       ((3uL << SAR_SAMPLE_TIME01_SAMPLE_TIME0_Pos) | (3uL << SAR_
 633:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CLEAR_ALL_SWITCHES       (0x3FFFFFFFuL)    /**< Value to clear all SARMUX switches *
 634:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_DEINIT_SQ_CTRL           (SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P0_Msk \
 635:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P1_Msk \
 636:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P2_Msk \
 637:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P3_Msk \
 638:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P4_Msk \
 639:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P5_Msk \
 640:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P6_Msk \
 641:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P7_Msk \
 642:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_VSSA_Msk \
 643:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_TEMP_Msk \
 644:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_AMUXBUSA_Msk \
 645:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_AMUXBUSB_Msk \
 646:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_SARBUS0_Msk \
 647:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_SARBUS1_Msk)
 648:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_REG_CTRL_MASK            (SAR_CTRL_PWR_CTRL_VREF_Msk \
 649:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_VREF_SEL_Msk \
 650:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_VREF_BYP_CAP_EN_Msk \
 651:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_NEG_SEL_Msk \
 652:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_SAR_HW_CTRL_NEGVREF_Msk \
 653:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_COMP_DLY_Msk \
 654:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_REFBUF_EN_Msk \
 655:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_COMP_PWR_Msk \
 656:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_DEEPSLEEP_ON_Msk \
 657:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_DSI_SYNC_CONFIG_Msk \
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccdNpiZW.s 			page 13


 658:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_DSI_MODE_Msk \
 659:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_SWITCH_DISABLE_Msk \
 660:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_ENABLED_Msk)
 661:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_REG_SAMPLE_CTRL_MASK     (SAR_SAMPLE_CTRL_LEFT_ALIGN_Msk \
 662:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_Msk \
 663:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_DIFFERENTIAL_SIGNED_Msk \
 664:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_AVG_CNT_Msk \
 665:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_AVG_SHIFT_Msk \
 666:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_AVG_MODE_Msk \
 667:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_CONTINUOUS_Msk \
 668:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_DSI_TRIGGER_EN_Msk \
 669:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_Msk \
 670:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_DSI_SYNC_TRIGGER_Msk \
 671:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_UAB_SCAN_MODE_Msk \
 672:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_REPEAT_INVALID_Msk \
 673:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_VALID_SEL_Msk \
 674:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_VALID_SEL_EN_Msk \
 675:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_VALID_IGNORE_Msk \
 676:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_TRIGGER_OUT_EN_Msk \
 677:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_EOS_DSI_OUT_EN_Msk)
 678:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_REG_CHAN_CONFIG_MASK     (SAR_CHAN_CONFIG_POS_PIN_ADDR_Msk \
 679:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_POS_PORT_ADDR_Msk \
 680:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_DIFFERENTIAL_EN_Msk \
 681:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_AVG_EN_Msk \
 682:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_SAMPLE_TIME_SEL_Msk \
 683:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_NEG_PIN_ADDR_Msk \
 684:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_NEG_PORT_ADDR_Msk \
 685:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_NEG_ADDR_EN_Msk \
 686:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_DSI_OUT_EN_Msk)
 687:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_REG_SAMPLE_TIME_MASK     (SAR_SAMPLE_TIME01_SAMPLE_TIME0_Msk | SAR_SAMPLE_TIME01_SAM
 688:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 689:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_2US_DELAY                (2u)              /**< Delay used in Enable API function to
 690:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_10V_COUNTS               (10.0F)           /**< Value of 10 in volts */
 691:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_10MV_COUNTS              (10000)           /**< Value of 10 in millivolts */
 692:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_10UV_COUNTS              (10000000L)       /**< Value of 10 in microvolts */
 693:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_WRK_MAX_12BIT            (0x00001000uL)    /**< Maximum SAR work register value for 
 694:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_RANGE_LIMIT_MAX          (0xFFFFuL)        /**< Maximum value for the low and high r
 695:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CAP_TRIM_MAX             (0x3FuL)          /**< Maximum value for CAP_TRIM */
 696:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CAP_TRIM_MIN             (0x00uL)          /**< Maximum value for CAP_TRIM */
 697:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CAP_TRIM                 (0x0BuL)          /**< Correct cap trim value */
 698:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 699:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /**< Macros for conditions used in CY_ASSERT calls */
 700:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CHANNUM(chan)            ((chan) < CY_SAR_MAX_NUM_CHANNELS)
 701:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CHANMASK(mask)           ((mask) < (1uL << CY_SAR_MAX_NUM_CHANNELS))
 702:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_RANGECOND(cond)          ((cond) <= CY_SAR_RANGE_COND_OUTSIDE)
 703:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_INTRMASK(mask)           ((mask) <= (uint32_t)(CY_SAR_INTR_EOS_MASK | CY_SAR_INTR_OV
 704:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_TRIGGER(mode)            (((mode) == CY_SAR_TRIGGER_MODE_FW_ONLY) \
 705:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         || ((mode) == CY_SAR_TRIGGER_MODE_FW_AND_HWEDGE) \
 706:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         || ((mode) == CY_SAR_TRIGGER_MODE_FW_AND_HWLEVEL))
 707:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_RETURN(mode)             (((mode) == CY_SAR_RETURN_STATUS) || ((mode) == CY_SAR_WAIT
 708:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_STARTCONVERT(mode)       (((mode) == CY_SAR_START_CONVERT_SINGLE_SHOT) || ((mode) ==
 709:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_RANGE_LIMIT(limit)       ((limit) <= CY_SAR_RANGE_LIMIT_MAX)
 710:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SWITCHSELECT(select)     ((select) == CY_SAR_MUX_SWITCH0)
 711:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SWITCHMASK(mask)         ((mask) <= CY_SAR_CLEAR_ALL_SWITCHES)
 712:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SWITCHSTATE(state)       (((state) == CY_SAR_SWITCH_OPEN) || ((state) == CY_SAR_SWIT
 713:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SQMASK(mask)             (((mask) & (~CY_SAR_DEINIT_SQ_CTRL)) == 0uL)
 714:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SQCTRL(ctrl)             (((ctrl) == CY_SAR_SWITCH_SEQ_CTRL_ENABLE) || ((ctrl) == CY
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccdNpiZW.s 			page 14


 715:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 716:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CTRL(value)              (((value) & (~CY_SAR_REG_CTRL_MASK)) == 0uL)
 717:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SAMPLE_CTRL(value)       (((value) & (~CY_SAR_REG_SAMPLE_CTRL_MASK)) == 0uL)
 718:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SAMPLE_TIME(value)       (((value) & (~CY_SAR_REG_SAMPLE_TIME_MASK)) == 0uL)
 719:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CHAN_CONFIG(value)       (((value) & (~CY_SAR_REG_CHAN_CONFIG_MASK)) == 0uL)
 720:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \endcond */
 721:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 722:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} group_sar_macro */
 723:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 724:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_globals
 725:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
 726:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 727:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /***************************************
 728:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *        Global Variables
 729:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ***************************************/
 730:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 731:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** This array is used to calibrate the offset for each channel.
 732:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 733:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * At initialization, channels that are single-ended, signed, and with Vneg = Vref
 734:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * have an offset of -(2^12)/2 = -2048. All other channels have an offset of 0.
 735:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The offset can be overridden using \ref Cy_SAR_SetOffset.
 736:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 737:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The channel offsets are used by the \ref Cy_SAR_CountsTo_Volts, \ref Cy_SAR_CountsTo_mVolts, and
 738:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref Cy_SAR_CountsTo_uVolts functions to convert counts to voltage.
 739:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 740:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 741:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** extern volatile int16_t Cy_SAR_offset[CY_SAR_MAX_NUM_CHANNELS];
 742:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 743:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** This array is used to calibrate the gain for each channel.
 744:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 745:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * It is set at initialization and the value depends on the SARADC resolution
 746:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * and voltage reference, 10*(2^12)/(2*Vref).
 747:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The gain can be overridden using \ref Cy_SAR_SetGain.
 748:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 749:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The channel gains are used by the \ref Cy_SAR_CountsTo_Volts, \ref Cy_SAR_CountsTo_mVolts, and
 750:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref Cy_SAR_CountsTo_uVolts functions to convert counts to voltage.
 751:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 752:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** extern volatile int32_t Cy_SAR_countsPer10Volt[CY_SAR_MAX_NUM_CHANNELS];
 753:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 754:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} group_sar_globals */
 755:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 756:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_enums
 757:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
 758:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 759:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 760:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /******************************************************************************
 761:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****  * Enumerations
 762:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****  *****************************************************************************/
 763:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 764:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** The SAR status/error code definitions */
 765:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 766:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 767:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SUCCESS    = 0x00uL,                                      /**< Success */
 768:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_BAD_PARAM  = CY_SAR_ID | CY_PDL_STATUS_ERROR | 0x01uL,    /**< Invalid input parameters 
 769:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_TIMEOUT    = CY_SAR_ID | CY_PDL_STATUS_ERROR | 0x02uL,    /**< A timeout occurred */
 770:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CONVERSION_NOT_COMPLETE = CY_SAR_ID | CY_PDL_STATUS_ERROR | 0x03uL,    /**< SAR conversi
 771:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_status_t;
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccdNpiZW.s 			page 15


 772:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 773:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Definitions for starting a conversion used in \ref Cy_SAR_StartConvert */
 774:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 775:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 776:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_START_CONVERT_SINGLE_SHOT = 0uL, /**< Start a single scan (one shot) from firmware */
 777:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_START_CONVERT_CONTINUOUS  = 1uL, /**< Continuously scan enabled channels and ignores all
 778:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_start_convert_sel_t;
 779:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 780:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Definitions for the return mode used in \ref Cy_SAR_IsEndConversion */
 781:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 782:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 783:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RETURN_STATUS    = 0uL,      /**< Immediately returns the conversion status. */
 784:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_WAIT_FOR_RESULT  = 1uL,    /**< Does not return a result until the conversion of all seq
 785:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_return_mode_t;
 786:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 787:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Switch state definitions */
 788:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 789:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 790:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SWITCH_OPEN      = 0uL,    /**< Open the switch */
 791:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SWITCH_CLOSE     = 1uL     /**< Close the switch */
 792:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_switch_state_t;
 793:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 794:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Definitions for sequencer control of switches */
 795:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 796:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 797:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SWITCH_SEQ_CTRL_DISABLE = 0uL, /**< Disable sequencer control of switch */
 798:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SWITCH_SEQ_CTRL_ENABLE  = 1uL  /**< Enable sequencer control of switch */
 799:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_switch_sar_seq_ctrl_t;
 800:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 801:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Switch register selection for \ref Cy_SAR_SetAnalogSwitch and \ref Cy_SAR_GetAnalogSwitch */
 802:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 803:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 804:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SWITCH0  = 0uL,      /**< SARMUX switch control register */
 805:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_switch_register_sel_t;
 806:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 807:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_ctrl_register_enums
 808:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of enumerations aids in configuring the SAR CTRL register
 809:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
 810:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 811:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Reference voltage buffer power mode definitions */
 812:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 813:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 814:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_100     = 0uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< Full power (100%) */
 815:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_80      = 1uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 80% power */
 816:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_60      = 2uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 60% power */
 817:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_50      = 3uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 50% power */
 818:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_40      = 4uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 40% power */
 819:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_30      = 5uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 30% power */
 820:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_20      = 6uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 20% power */
 821:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_10      = 7uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 10% power */
 822:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_pwr_ctrl_vref_t;
 823:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 824:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Reference voltage selection definitions */
 825:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 826:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 827:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_SEL_BGR         = 4uL << SAR_CTRL_VREF_SEL_Pos,     /**< System wide bandgap from \
 828:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_SEL_EXT         = 5uL << SAR_CTRL_VREF_SEL_Pos,     /**< External Vref direct from 
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccdNpiZW.s 			page 16


 829:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_SEL_VDDA_DIV_2  = 6uL << SAR_CTRL_VREF_SEL_Pos,     /**< Vdda/2 (Vref buffer on) */
 830:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_SEL_VDDA        = 7uL << SAR_CTRL_VREF_SEL_Pos      /**< Vdda */
 831:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_vref_sel_t;
 832:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 833:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Vref bypass cap enable.
 834:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * When enabled, a bypass capacitor should
 835:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * be connected to the dedicated Vref pin of the device.
 836:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Refer to the device datasheet for the minimum bypass capacitor value to use.
 837:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 838:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 839:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 840:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_BYPASS_CAP_DISABLE = 0uL << SAR_CTRL_VREF_BYP_CAP_EN_Pos,    /**< Disable Vref bypass ca
 841:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_BYPASS_CAP_ENABLE  = 1uL << SAR_CTRL_VREF_BYP_CAP_EN_Pos     /**< Enable Vref bypass cap
 842:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_bypass_cap_t;
 843:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 844:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Negative terminal (Vminus) selection definitions for single-ended channels.
 845:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 846:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The Vminus input for single ended channels can be connected to
 847:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Vref, VSSA, or routed out to an external pin.
 848:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The options for routing to a pin are through Pin 1, Pin 3, Pin 5, or Pin 7
 849:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * of the SARMUX dedicated port or an acore wire in AROUTE, if available on the device.
 850:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 851:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref CY_SAR_NEG_SEL_VSSA_KELVIN comes straight from a Vssa pad without any shared branches
 852:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * so as to keep quiet and avoid voltage drops.
 853:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 854:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 855:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 856:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_SEL_VSSA_KELVIN  = 0uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to VSSA_KELVIN 
 857:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_SEL_P1           = 2uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to Pin 1 of SAR
 858:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_SEL_P3           = 3uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to Pin 3 of SAR
 859:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_SEL_P5           = 4uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to Pin 5 of SAR
 860:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_SEL_P7           = 5uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to Pin 6 of SAR
 861:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_SEL_ACORE        = 6uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to an ACORE in 
 862:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_SEL_VREF         = 7uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to VREF input o
 863:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_neg_sel_t;
 864:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 865:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Enable hardware control of the switch between Vref and the Vminus input */
 866:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 867:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 868:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CTRL_NEGVREF_FW_ONLY = 0uL << SAR_CTRL_SAR_HW_CTRL_NEGVREF_Pos,    /**< Only firmware co
 869:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CTRL_NEGVREF_HW      = 1uL << SAR_CTRL_SAR_HW_CTRL_NEGVREF_Pos     /**< Enable hardware 
 870:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_hw_ctrl_negvref_t;
 871:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 872:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the comparator latch delay */
 873:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 874:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 875:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CTRL_COMP_DLY_2P5    = 0uL << SAR_CTRL_COMP_DLY_Pos,    /**< 2.5 ns delay, use for SAR c
 876:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CTRL_COMP_DLY_4      = 1uL << SAR_CTRL_COMP_DLY_Pos,    /**< 4 ns delay, use for SAR con
 877:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CTRL_COMP_DLY_10     = 2uL << SAR_CTRL_COMP_DLY_Pos,    /**< 10 ns delay, use for SAR co
 878:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CTRL_COMP_DLY_12     = 3uL << SAR_CTRL_COMP_DLY_Pos     /**< 12 ns delay, use for SAR co
 879:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_comp_delay_t;
 880:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 881:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the comparator power mode */
 882:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 883:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 884:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_100     = 0uL << SAR_CTRL_COMP_PWR_Pos,      /**< 100% power, use this for > 2 
 885:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_80      = 1uL << SAR_CTRL_COMP_PWR_Pos,      /**< 80% power, use this for 1.5 -
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccdNpiZW.s 			page 17


 886:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_60      = 2uL << SAR_CTRL_COMP_PWR_Pos,      /**< 60% power, use this for 1.0 -
 887:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_50      = 3uL << SAR_CTRL_COMP_PWR_Pos,      /**< 50% power, use this for 500 k
 888:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_40      = 4uL << SAR_CTRL_COMP_PWR_Pos,      /**< 40% power, use this for 250 -
 889:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_30      = 5uL << SAR_CTRL_COMP_PWR_Pos,      /**< 30% power, use this for 100 -
 890:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_20      = 6uL << SAR_CTRL_COMP_PWR_Pos,      /**< 20% power, use this for TDB s
 891:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_10      = 7uL << SAR_CTRL_COMP_PWR_Pos,      /**< 10% power, use this for < 100
 892:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_comp_pwr_t;
 893:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 894:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Enable or disable the SARMUX during Deep Sleep power mode. */
 895:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 896:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 897:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_DEEPSLEEP_SARMUX_OFF = 0uL << SAR_CTRL_DEEPSLEEP_ON_Pos,    /**< Disable SARMUX operatio
 898:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_DEEPSLEEP_SARMUX_ON  = 1uL << SAR_CTRL_DEEPSLEEP_ON_Pos     /**< Enable SARMUX operation
 899:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_sarmux_deep_sleep_t;
 900:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 901:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Enable or disable the SARSEQ control of routing switches */
 902:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 903:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 904:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SARSEQ_SWITCH_ENABLE    = 0uL << SAR_CTRL_SWITCH_DISABLE_Pos,    /**< Enable the SARSEQ 
 905:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SARSEQ_SWITCH_DISABLE   = 1uL << SAR_CTRL_SWITCH_DISABLE_Pos     /**< Disable the SARSEQ
 906:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_sarseq_routing_switches_t;
 907:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 908:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /* \} */
 909:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 910:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_sample_ctrl_register_enums
 911:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of enumerations are used in configuring the SAR SAMPLE_CTRL register
 912:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
 913:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 914:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure result alignment, either left or right aligned.
 915:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 916:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \note
 917:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Averaging always uses right alignment. If the \ref CY_SAR_LEFT_ALIGN
 918:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * is selected with averaging enabled, it is ignored.
 919:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 920:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \note
 921:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The voltage conversion functions (\ref Cy_SAR_CountsTo_Volts, \ref Cy_SAR_CountsTo_mVolts,
 922:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref Cy_SAR_CountsTo_uVolts) are only valid for right alignment.
 923:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * */
 924:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 925:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 926:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RIGHT_ALIGN  = 0uL << SAR_SAMPLE_CTRL_LEFT_ALIGN_Pos,    /**< Right align result data to
 927:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_LEFT_ALIGN   = 1uL << SAR_SAMPLE_CTRL_LEFT_ALIGN_Pos     /**< Left align result data to 
 928:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_sample_ctrl_result_align_t;
 929:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 930:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure format, signed or unsigned, of single-ended channels */
 931:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 932:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 933:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SINGLE_ENDED_UNSIGNED  = 0uL << SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_Pos,    /**< Result 
 934:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SINGLE_ENDED_SIGNED    = 1uL << SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_Pos     /**< Result 
 935:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_sample_ctrl_single_ended_format_t;
 936:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 937:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure format, signed or unsigned, of differential channels */
 938:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 939:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 940:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_DIFFERENTIAL_UNSIGNED  = 0uL << SAR_SAMPLE_CTRL_DIFFERENTIAL_SIGNED_Pos,    /**< Result 
 941:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_DIFFERENTIAL_SIGNED    = 1uL << SAR_SAMPLE_CTRL_DIFFERENTIAL_SIGNED_Pos     /**< Result 
 942:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_sample_ctrl_differential_format_t;
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccdNpiZW.s 			page 18


 943:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 944:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure number of samples for averaging.
 945:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This applies only to channels with averaging enabled.
 946:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 947:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 948:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 949:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_2          = 0uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 950:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_4          = 1uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 951:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_8          = 2uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 952:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_16         = 3uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 953:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_32         = 4uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 954:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_64         = 5uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 955:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_128        = 6uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 956:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_256        = 7uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos     /**< Set samples averaged to
 957:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_sample_ctrl_avg_cnt_t;
 958:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 959:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the averaging mode.
 960:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 961:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Sequential accumulate and dump: a channel will be sampled back to back.
 962:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   The result is added to a running sum in a 20-bit register. At the end
 963:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   of the scan, the accumulated value is shifted right to fit into 16 bits
 964:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   and stored into the CHAN_RESULT register.
 965:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Sequential fixed:  a channel will be sampled back to back.
 966:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   The result is added to a running sum in a 20-bit register. At the end
 967:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   of the scan, the accumulated value is shifted right to fit into 12 bits
 968:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   and stored into the CHAN_RESULT register.
 969:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Interleaved: a channel will be sampled once per scan.
 970:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   The result is added to a running sum in a 16-bit register.
 971:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   In the scan where the final averaging count is reached,
 972:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   the accumulated value is shifted right to fit into 12 bits
 973:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   and stored into the CHAN_RESULT register.
 974:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   In all other scans, the CHAN_RESULT will have an invalid result.
 975:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   In interleaved mode, make sure that the averaging
 976:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   count is low enough to ensure that the intermediate value does not exceed 16 bits,
 977:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   that is averaging count is 16 or less. Otherwise, the MSBs will be lost.
 978:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   In the special case that averaging is enabled for all enabled channels
 979:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   and interleaved mode is used, the interrupt frequency
 980:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   will be reduced by a factor of the number of samples averaged.
 981:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 982:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 983:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 984:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_MODE_SEQUENTIAL_ACCUM    = 0uL,                               /**< Set mode to seque
 985:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_MODE_SEQUENTIAL_FIXED    = SAR_SAMPLE_CTRL_AVG_SHIFT_Msk,     /**< Set mode to seque
 986:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_MODE_INTERLEAVED         = SAR_SAMPLE_CTRL_AVG_MODE_Msk,      /**< Set mode to inter
 987:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_sample_ctrl_avg_mode_t;
 988:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 989:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the trigger mode.
 990:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 991:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Firmware triggering is always enabled and can be single shot or continuous.
 992:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Additionally, hardware triggering can be enabled with the option to be
 993:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * edge or level sensitive.
 994:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 995:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 996:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 997:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_TRIGGER_MODE_FW_ONLY        = 0uL,                                /**< Firmware trigger 
 998:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_TRIGGER_MODE_FW_AND_HWEDGE  = SAR_SAMPLE_CTRL_DSI_TRIGGER_EN_Msk, /**< Enable edge sensi
 999:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_TRIGGER_MODE_FW_AND_HWLEVEL = SAR_SAMPLE_CTRL_DSI_TRIGGER_EN_Msk | SAR_SAMPLE_CTRL_DSI_T
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccdNpiZW.s 			page 19


1000:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_sample_ctrl_trigger_mode_t;
1001:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1002:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /* \} */
1003:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1004:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_sample_time_shift_enums
1005:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of enumerations aids in configuring the SAR SAMPLE_TIME* registers
1006:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1007:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1008:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the sample time by using these shifts */
1009:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1010:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1011:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SAMPLE_TIME0_SHIFT       = SAR_SAMPLE_TIME01_SAMPLE_TIME0_Pos,             /**< Shift fo
1012:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SAMPLE_TIME1_SHIFT       = SAR_SAMPLE_TIME01_SAMPLE_TIME1_Pos,             /**< Shift fo
1013:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SAMPLE_TIME2_SHIFT       = SAR_SAMPLE_TIME23_SAMPLE_TIME2_Pos,             /**< Shift fo
1014:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SAMPLE_TIME3_SHIFT       = SAR_SAMPLE_TIME23_SAMPLE_TIME3_Pos,             /**< Shift fo
1015:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_sample_time_shift_t;
1016:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /* \} */
1017:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1018:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_range_thres_register_enums
1019:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of enumerations aids in configuring the SAR RANGE* registers
1020:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1021:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1022:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the lower and upper thresholds for range detection
1023:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1024:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SARSEQ supports range detection to allow for automatic detection of sample
1025:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * values compared to two programmable thresholds without CPU involvement.
1026:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Range detection is defined by two global thresholds and a condition.
1027:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The RANGE_LOW value defines the lower threshold and RANGE_HIGH defines
1028:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * the upper threshold of the range.
1029:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1030:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Range detect is done after averaging, alignment, and sign extension (if applicable).
1031:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * In other words, the thresholds values must have the same data format as the result data.
1032:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Range detection is always done for all channels scanned. By making RANGE_INTR_MASK=0,
1033:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * the firmware can choose to ignore the range detect interrupt for any channel.
1034:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1035:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1036:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1037:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RANGE_LOW_SHIFT      = SAR_RANGE_THRES_RANGE_LOW_Pos,        /**< Shift for setting lowe
1038:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RANGE_HIGH_SHIFT     = SAR_RANGE_THRES_RANGE_HIGH_Pos,       /**< Shift for setting uppe
1039:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_range_thres_shift_t;
1040:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1041:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the condition (below, inside, above, or outside) of the range detection interrupt */
1042:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1043:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1044:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RANGE_COND_BELOW     = 0uL,  /**< Range interrupt detected when result < RANGE_LOW */
1045:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RANGE_COND_INSIDE    = 1uL,  /**< Range interrupt detected when RANGE_LOW <= result < RA
1046:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RANGE_COND_ABOVE     = 2uL,  /**< Range interrupt detected when RANGE_HIGH <= result */
1047:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RANGE_COND_OUTSIDE   = 3uL,  /**< Range interrupt detected when result < RANGE_LOW || RA
1048:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_range_detect_condition_t;
1049:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /* \} */
1050:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1051:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_chan_config_register_enums
1052:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of enumerations aids in configuring the SAR CHAN_CONFIG register
1053:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1054:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1055:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the input mode of the channel
1056:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccdNpiZW.s 			page 20


1057:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Single ended channel: the \ref cy_en_sar_ctrl_neg_sel_t selection in the \ref group_sar_init_st
1058:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   determines what drives the Vminus pin
1059:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Differential paired: Vplus and Vminus are a pair. Bit 0 of \ref cy_en_sar_chan_config_pos_pin_a
1060:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   is ignored and considered to be 0.
1061:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   In other words, \ref cy_en_sar_chan_config_pos_pin_addr_t "POS_PIN_ADDR" points to the even pin
1062:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   The even pin is connected to Vplus and the odd pin is connected to Vminus.
1063:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   \ref cy_en_sar_chan_config_pos_port_addr_t "POS_PORT_ADDR" is used to identify the port that co
1064:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Differential unpaired: The \ref cy_en_sar_chan_config_neg_pin_addr_t "NEG_PIN_ADDR" and
1065:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   \ref cy_en_sar_chan_config_neg_port_addr_t "NEG_PORT_ADDR" determine what drives the Vminus pin
1066:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   This is a variation of differential mode with no even-odd pair limitation
1067:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1068:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1069:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1070:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_SINGLE_ENDED            = 0uL,                                     /**< Single ende
1071:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_DIFFERENTIAL_PAIRED     = SAR_CHAN_CONFIG_DIFFERENTIAL_EN_Msk,     /**< Differentia
1072:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_DIFFERENTIAL_UNPAIRED   = SAR_CHAN_CONFIG_NEG_ADDR_EN_Msk          /**< Differentia
1073:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_chan_config_input_mode_t;
1074:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1075:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure address of the pin connected to the Vplus terminal of the SARADC. */
1076:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1077:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1078:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_0     = 0uL,                                            /**< Pin 0 on 
1079:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_1     = 1uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 1 on 
1080:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_2     = 2uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 2 on 
1081:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_3     = 3uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 3 on 
1082:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_4     = 4uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 4 on 
1083:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_5     = 5uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 5 on 
1084:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_6     = 6uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 6 on 
1085:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_7     = 7uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 7 on 
1086:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_chan_config_pos_pin_addr_t;
1087:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1088:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure address of the port that contains the pin connected to the Vplus terminal of the SARA
1089:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1090:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - \ref CY_SAR_POS_PORT_ADDR_SARMUX is for the dedicated SARMUX port (8 pins)
1091:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Port 1 through 4 are respectively the pins of CTB0, CTB1, CTB2, and CTB3 (if present)
1092:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Port 7, 5, and 6 (VPORT0/1/2) are the groups of internal signals that can be selected
1093:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   in the SARMUX or AROUTE (if present).
1094:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1095:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * See the \ref group_sar_sarmux section for more guidance.
1096:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1097:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1098:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1099:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_SARMUX         = 0uL,                                       /**< Dedicated
1100:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_CTB0           = 1uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< Outputs f
1101:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_CTB1           = 2uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< Outputs f
1102:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_CTB2           = 3uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< Outputs f
1103:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_CTB3           = 4uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< Outputs f
1104:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_AROUTE_VIRT2   = 5uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< AROUTE vi
1105:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_AROUTE_VIRT1   = 6uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< AROUTE vi
1106:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_SARMUX_VIRT    = 7uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< SARMUX vi
1107:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_chan_config_pos_port_addr_t;
1108:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1109:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Enable or disable averaging for the channel */
1110:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1111:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1112:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_AVG_DISABLE      = 0uL,                                 /**< Disable averaging for 
1113:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_AVG_ENABLE       = 1uL << SAR_CHAN_CONFIG_AVG_EN_Pos    /**< Enable averaging for t
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccdNpiZW.s 			page 21


1114:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_chan_config_avg_en_t;
1115:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1116:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Select which sample time to use for the channel.
1117:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * There are four global samples times available set by \ref group_sar_init_struct_sampleTime01 and
1118:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref group_sar_init_struct_sampleTime23.
1119:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1120:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1121:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1122:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_SAMPLE_TIME_0     = 0uL,                                          /**< Use sample t
1123:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_SAMPLE_TIME_1     = 1uL << SAR_CHAN_CONFIG_SAMPLE_TIME_SEL_Pos,   /**< Use sample t
1124:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_SAMPLE_TIME_2     = 2uL << SAR_CHAN_CONFIG_SAMPLE_TIME_SEL_Pos,   /**< Use sample t
1125:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_SAMPLE_TIME_3     = 3uL << SAR_CHAN_CONFIG_SAMPLE_TIME_SEL_Pos,   /**< Use sample t
1126:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_chan_config_sample_time_t;
1127:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1128:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure address of the pin connected to the Vminus terminal of the SARADC. */
1129:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1130:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1131:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_0     = 0uL,                                            /**< Pin 0 on 
1132:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_1     = 1uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 1 on 
1133:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_2     = 2uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 2 on 
1134:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_3     = 3uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 3 on 
1135:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_4     = 4uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 4 on 
1136:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_5     = 5uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 5 on 
1137:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_6     = 6uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 6 on 
1138:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_7     = 7uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 7 on 
1139:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_chan_config_neg_pin_addr_t;
1140:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1141:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure address of the port that contains the pin connected to the Vminus terminal of the SAR
1142:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1143:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Port 0 is 8 pins of the SARMUX
1144:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Port 7, 5, and 6 (VPORT0/1/2) are the groups of internal signals that can be selected
1145:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   in the SARMUX or AROUTE (if present).
1146:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1147:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1148:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1149:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_PORT_ADDR_SARMUX         = 0uL,                                       /**< Dedicated
1150:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_PORT_ADDR_AROUTE_VIRT2   = 5uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< AROUTE vi
1151:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_PORT_ADDR_AROUTE_VIRT1   = 6uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< AROUTE vi
1152:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_PORT_ADDR_SARMUX_VIRT    = 7uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< SARMUX vi
1153:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_chan_config_neg_port_addr_t;
1154:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1155:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /* \} */
1156:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1157:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_intr_mask_t_register_enums
1158:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of enumerations aids in configuring the SAR INTR_MASK register
1159:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1160:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1161:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure which signal will cause an interrupt event.
1162:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1163:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - End of scan (EOS): occurs after completing a scan of all enabled channels
1164:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Overflow: occurs when hardware sets a new EOS interrupt while the previous interrupt
1165:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   has not be cleared by the firmware
1166:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Firmware collision: occurs when firmware attempts to start one-shot
1167:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   conversion while the SAR is busy.
1168:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1169:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Enable all, one, or none of the interrupt events.
1170:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccdNpiZW.s 			page 22


1171:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1172:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1173:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_INTR_MASK_NONE           = 0uL,                                  /**< Disable all interr
1174:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_INTR_EOS_MASK            = SAR_INTR_MASK_EOS_MASK_Msk,           /**< Enable end of scan
1175:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_INTR_OVERFLOW_MASK       = SAR_INTR_MASK_OVERFLOW_MASK_Msk,      /**< Enable overflow in
1176:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_INTR_FW_COLLISION_MASK   = SAR_INTR_MASK_FW_COLLISION_MASK_Msk,  /**< Enable firmware co
1177:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_intr_mask_t;
1178:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1179:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /* \} */
1180:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1181:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_mux_switch_register_enums
1182:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of enumerations aids in configuring the \ref group_sar_init_struct_muxSwitch and \ref gr
1183:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1184:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1185:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1186:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Firmware control for the SARMUX switches to connect analog signals to the SAR ADC
1187:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1188:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * To close multiple switches, "OR" the enum values together.
1189:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1190:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * See the \ref group_sar_sarmux section for more guidance.
1191:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1192:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1193:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1194:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     /* SARMUX pins to Vplus */
1195:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P0_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P0_VPLUS_Msk,    /**< Switch between Pi
1196:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P1_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P1_VPLUS_Msk,    /**< Switch between Pi
1197:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P2_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P2_VPLUS_Msk,    /**< Switch between Pi
1198:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P3_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P3_VPLUS_Msk,    /**< Switch between Pi
1199:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P4_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P4_VPLUS_Msk,    /**< Switch between Pi
1200:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P5_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P5_VPLUS_Msk,    /**< Switch between Pi
1201:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P6_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P6_VPLUS_Msk,    /**< Switch between Pi
1202:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P7_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P7_VPLUS_Msk,    /**< Switch between Pi
1203:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1204:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     /* SARMUX pins to Vminus */
1205:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P0_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P0_VMINUS_Msk,   /**< Switch between Pi
1206:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P1_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P1_VMINUS_Msk,   /**< Switch between Pi
1207:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P2_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P2_VMINUS_Msk,   /**< Switch between Pi
1208:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P3_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P3_VMINUS_Msk,   /**< Switch between Pi
1209:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P4_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P4_VMINUS_Msk,   /**< Switch between Pi
1210:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P5_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P5_VMINUS_Msk,   /**< Switch between Pi
1211:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P6_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P6_VMINUS_Msk,   /**< Switch between Pi
1212:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P7_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P7_VMINUS_Msk,   /**< Switch between Pi
1213:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1214:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     /* Vssa to Vminus and temperature sensor to Vplus */
1215:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_VSSA_VMINUS      = SAR_MUX_SWITCH0_MUX_FW_VSSA_VMINUS_Msk,    /**< Switch between
1216:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_TEMP_VPLUS       = SAR_MUX_SWITCH0_MUX_FW_TEMP_VPLUS_Msk,     /**< Switch between
1217:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1218:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     /* Amuxbus A and B to Vplus and Vminus */
1219:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_AMUXBUSA_VPLUS   = SAR_MUX_SWITCH0_MUX_FW_AMUXBUSA_VPLUS_Msk,     /**< Switch bet
1220:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_AMUXBUSB_VPLUS   = SAR_MUX_SWITCH0_MUX_FW_AMUXBUSB_VPLUS_Msk,     /**< Switch bet
1221:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_AMUXBUSA_VMINUS  = SAR_MUX_SWITCH0_MUX_FW_AMUXBUSA_VMINUS_Msk,    /**< Switch bet
1222:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_AMUXBUSB_VMINUS  = SAR_MUX_SWITCH0_MUX_FW_AMUXBUSB_VMINUS_Msk,    /**< Switch bet
1223:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1224:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     /* Sarbus 0 and 1 to Vplus and Vminus */
1225:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_SARBUS0_VPLUS    = SAR_MUX_SWITCH0_MUX_FW_SARBUS0_VPLUS_Msk,      /**< Switch bet
1226:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_SARBUS1_VPLUS    = SAR_MUX_SWITCH0_MUX_FW_SARBUS1_VPLUS_Msk,      /**< Switch bet
1227:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_SARBUS0_VMINUS   = SAR_MUX_SWITCH0_MUX_FW_SARBUS0_VMINUS_Msk,     /**< Switch bet
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccdNpiZW.s 			page 23


1228:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_SARBUS1_VMINUS   = SAR_MUX_SWITCH0_MUX_FW_SARBUS1_VMINUS_Msk,     /**< Switch bet
1229:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1230:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     /* SARMUX pins to Core IO */
1231:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P4_COREIO0       = SAR_MUX_SWITCH0_MUX_FW_P4_COREIO0_Msk,      /**< Switch betwee
1232:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P5_COREIO1       = SAR_MUX_SWITCH0_MUX_FW_P5_COREIO1_Msk,      /**< Switch betwee
1233:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P6_COREIO2       = SAR_MUX_SWITCH0_MUX_FW_P6_COREIO2_Msk,      /**< Switch betwee
1234:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P7_COREIO3       = SAR_MUX_SWITCH0_MUX_FW_P7_COREIO3_Msk,      /**< Switch betwee
1235:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_mux_switch_fw_ctrl_t;
1236:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1237:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Mask definitions of SARMUX switches that can be controlled by the SARSEQ.
1238:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1239:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * To enable sequencer control of multiple switches, "OR" the enum values together.
1240:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1241:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * See the \ref group_sar_sarmux section for more guidance.
1242:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1243:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1244:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1245:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P0           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P0_Msk,        /**< Enable
1246:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P1           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P1_Msk,        /**< Enable
1247:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P2           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P2_Msk,        /**< Enable
1248:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P3           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P3_Msk,        /**< Enable
1249:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P4           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P4_Msk,        /**< Enable
1250:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P5           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P5_Msk,        /**< Enable
1251:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P6           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P6_Msk,        /**< Enable
1252:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P7           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P7_Msk,        /**< Enable
1253:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_VSSA         = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_VSSA_Msk,      /**< Enable
1254:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_TEMP         = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_TEMP_Msk,      /**< Enable
1255:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_AMUXBUSA     = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_AMUXBUSA_Msk,  /**< Enable
1256:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_AMUXBUSB     = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_AMUXBUSB_Msk,  /**< Enable
1257:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_SARBUS0      = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_SARBUS0_Msk,   /**< Enable
1258:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_SARBUS1      = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_SARBUS1_Msk,   /**< Enable
1259:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_mux_switch_sq_ctrl_t;
1260:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1261:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /* \} */
1262:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1263:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} group_sar_enums */
1264:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1265:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_data_structures
1266:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1267:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1268:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1269:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /***************************************
1270:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       Configuration Structures
1271:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ***************************************/
1272:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1273:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** This structure is used to initialize the SAR ADC subsystem.
1274:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1275:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SAR ADC subsystem is highly configurable with many options.
1276:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * When calling \ref Cy_SAR_Init, provide a pointer to the structure containing this configuration d
1277:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * A set of enumerations is provided in this
1278:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * driver to help with configuring this structure.
1279:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1280:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * See the \ref group_sar_initialization section for guidance.
1281:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** **/
1282:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef struct
1283:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1284:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t ctrl;                                      /**< Control register settings (applies to 
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccdNpiZW.s 			page 24


1285:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t sampleCtrl;                                /**< Sample control register settings (appl
1286:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t sampleTime01;                              /**< Sample time in ADC clocks for Sample T
1287:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t sampleTime23;                              /**< Sample time in ADC clocks for Sample T
1288:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t rangeThres;                                /**< Range detect threshold register for al
1289:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     cy_en_sar_range_detect_condition_t rangeCond;       /**< Range detect condition (below, inside,
1290:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t chanEn;                                    /**< Enable bits for the channels */
1291:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t chanConfig[CY_SAR_MAX_NUM_CHANNELS];       /**< Channel configuration */
1292:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t intrMask;                                  /**< Interrupt enable mask */
1293:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t satIntrMask;                               /**< Saturation detection interrupt enable 
1294:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t rangeIntrMask;                             /**< Range detection interrupt enable mask 
1295:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t muxSwitch;                                 /**< SARMUX firmware switches to connect an
1296:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t muxSwitchSqCtrl;                           /**< Enable SARSEQ control of specific SARM
1297:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     bool configRouting;                                 /**< Configure or ignore routing related re
1298:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t vrefMvValue;                               /**< Reference voltage in millivolts used i
1299:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** } cy_stc_sar_config_t;
1300:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1301:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** This structure is used by the driver to backup the state of the SAR
1302:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * before entering sleep so that it can be re-enabled after waking up */
1303:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef struct
1304:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1305:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t hwEnabled;         /**< SAR enabled state */
1306:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t continuous;        /**< State of the continuous bit */
1307:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** } cy_stc_sar_state_backup_t;
1308:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1309:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} group_sar_data_structures */
1310:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1311:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions
1312:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1313:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1314:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1315:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** This macro is for backward compatibility macro for driver v1.10 and before, 
1316:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****  * the preferred API is \ref Cy_SAR_DeepSleep */
1317:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define Cy_SAR_Sleep    Cy_SAR_DeepSleep
1318:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1319:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /***************************************
1320:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *        Function Prototypes
1321:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ***************************************/
1322:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1323:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_basic
1324:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of functions is for initialization and basic usage
1325:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1326:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1327:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** cy_en_sar_status_t Cy_SAR_Init(SAR_Type *base, const cy_stc_sar_config_t *config);
1328:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** cy_en_sar_status_t Cy_SAR_DeInit(SAR_Type *base, bool deInitRouting);
1329:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_Enable(SAR_Type *base);
1330:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_Disable(SAR_Type *base);
1331:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_StartConvert(SAR_Type *base, cy_en_sar_start_convert_sel_t startSelect);
1332:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_StopConvert(SAR_Type *base);
1333:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** cy_en_sar_status_t Cy_SAR_IsEndConversion(SAR_Type *base, cy_en_sar_return_mode_t retMode);
1334:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** int16_t Cy_SAR_GetResult16(const SAR_Type *base, uint32_t chan);
1335:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** int32_t Cy_SAR_GetResult32(const SAR_Type *base, uint32_t chan);
1336:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetChanResultUpdated(const SAR_Type *base);
1337:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1338:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1339:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_power
1340:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of functions is for Deep Sleep entry and exit
1341:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccdNpiZW.s 			page 25


1342:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1343:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** cy_en_syspm_status_t Cy_SAR_DeepSleepCallback(cy_stc_syspm_callback_params_t *callbackParams, cy_en
1344:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_DeepSleep(SAR_Type *base);
1345:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_Wakeup(SAR_Type *base);
1346:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1347:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1348:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_config
1349:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of functions allows changes to the SAR configuration
1350:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * after initialization.
1351:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1352:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1353:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_SetConvertMode(SAR_Type *base, cy_en_sar_sample_ctrl_trigger_mode_t mode);
1354:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetChanMask(SAR_Type *base, uint32_t enableMask);
1355:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_SetLowLimit(SAR_Type *base, uint32_t lowLimit);
1356:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_SetHighLimit(SAR_Type *base, uint32_t highLimit);
1357:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetRangeCond(SAR_Type *base, cy_en_sar_range_detect_condition_t cond);
1358:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1359:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1360:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_countsto
1361:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of functions performs counts to *volts conversions.
1362:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1363:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1364:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** int16_t Cy_SAR_RawCounts2Counts(const SAR_Type *base, uint32_t chan, int16_t adcCounts);
1365:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** float32_t Cy_SAR_CountsTo_Volts(const SAR_Type *base, uint32_t chan, int16_t adcCounts);
1366:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** int16_t Cy_SAR_CountsTo_mVolts(const SAR_Type *base, uint32_t chan, int16_t adcCounts);
1367:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** int32_t Cy_SAR_CountsTo_uVolts(const SAR_Type *base, uint32_t chan, int16_t adcCounts);
1368:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** cy_en_sar_status_t Cy_SAR_SetOffset(uint32_t chan, int16_t offset);
1369:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** cy_en_sar_status_t Cy_SAR_SetGain(uint32_t chan, int32_t adcGain);
1370:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1371:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1372:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_switches
1373:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of functions is for controlling/querying the SARMUX switches
1374:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1375:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1376:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_SetAnalogSwitch(SAR_Type *base, cy_en_sar_switch_register_sel_t switchSelect, uint32_t 
1377:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** uint32_t Cy_SAR_GetAnalogSwitch(const SAR_Type *base, cy_en_sar_switch_register_sel_t switchSelect)
1378:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetVssaVminusSwitch(SAR_Type *base, cy_en_sar_switch_state_t state);
1379:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_SetSwitchSarSeqCtrl(SAR_Type *base, uint32_t switchMask, cy_en_sar_switch_sar_seq_ctrl_
1380:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetVssaSarSeqCtrl(SAR_Type *base, cy_en_sar_switch_sar_seq_ctrl_t ctrl)
1381:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1382:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1383:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_interrupt
1384:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of functions are related to SAR interrupts.
1385:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1386:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1387:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetInterruptStatus(const SAR_Type *base);
1388:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_ClearInterrupt(SAR_Type *base, uint32_t intrMask);
1389:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetInterrupt(SAR_Type *base, uint32_t intrMask);
1390:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetInterruptMask(SAR_Type *base, uint32_t intrMask);
1391:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetInterruptMask(const SAR_Type *base);
1392:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetInterruptStatusMasked(const SAR_Type *base);
1393:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1394:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetRangeInterruptStatus(const SAR_Type *base);
1395:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_ClearRangeInterrupt(SAR_Type *base, uint32_t chanMask);
1396:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetRangeInterrupt(SAR_Type *base, uint32_t chanMask);
1397:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetRangeInterruptMask(SAR_Type *base, uint32_t chanMask);
1398:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetRangeInterruptMask(const SAR_Type *base);
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccdNpiZW.s 			page 26


1399:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetRangeInterruptStatusMasked(const SAR_Type *base);
1400:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1401:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetSatInterruptStatus(const SAR_Type *base);
1402:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_ClearSatInterrupt(SAR_Type *base, uint32_t chanMask);
1403:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetSatInterrupt(SAR_Type *base, uint32_t chanMask);
1404:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetSatInterruptMask(SAR_Type *base, uint32_t chanMask);
1405:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetSatInterruptMask(const SAR_Type *base);
1406:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetSatInterruptStatusMasked(const SAR_Type *base);
1407:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1408:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetInterruptCause(const SAR_Type *base);
1409:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1410:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1411:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1412:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_helper
1413:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of functions is for useful configuration query
1414:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1415:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1416:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** bool Cy_SAR_IsChannelSigned(const SAR_Type *base, uint32_t chan);
1417:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** bool Cy_SAR_IsChannelSingleEnded(const SAR_Type *base, uint32_t chan);
1418:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE bool Cy_SAR_IsChannelDifferential(const SAR_Type *base, uint32_t chan);
1419:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1420:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1421:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_basic
1422:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1423:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1424:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1425:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1426:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1427:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_Disable
1428:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1429:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1430:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Turn off the hardware block.
1431:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1432:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1433:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1434:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1435:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return None
1436:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1437:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
1438:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_Disable(SAR_Type *base)
1439:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1440:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     SAR_CTRL(base) &= ~SAR_CTRL_ENABLED_Msk;
1441:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
1442:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1443:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1444:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1445:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_GetChanResultUpdated
1446:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1447:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1448:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Return whether the RESULT register has been updated or not.
1449:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * If the bit is high, the corresponding channel RESULT register was updated,
1450:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * i.e. was sampled during the previous scan and, in case of Interleaved averaging,
1451:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * reached the averaging count.
1452:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * If the bit is low, the corresponding channel is not enabled or the averaging count
1453:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * is not yet reached for Interleaved averaging.
1454:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1455:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccdNpiZW.s 			page 27


1456:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1457:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1458:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return
1459:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Each bit of the result corresponds to the channel.
1460:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Bit 0 is for channel 0, etc.
1461:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1462:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \funcusage
1463:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1464:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_GET_CHAN_RESULT_UPDATED
1465:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1466:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
1467:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetChanResultUpdated(const SAR_Type *base)
1468:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1469:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     return SAR_CHAN_RESULT_UPDATED(base);
1470:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
1471:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1472:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1473:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_config
1474:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1475:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1476:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1477:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1478:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1479:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_SetChanMask
1480:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1481:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1482:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Set the enable/disable mask for the channels.
1483:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1484:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1485:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1486:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1487:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param enableMask
1488:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Channel enable/disable mask. Each bit corresponds to a channel.
1489:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - 0: the corresponding channel is disabled.
1490:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - 1: the corresponding channel is enabled; it will be included in the next scan.
1491:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1492:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return None
1493:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1494:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \funcusage
1495:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1496:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SET_CHAN_MASK
1497:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1498:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
1499:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetChanMask(SAR_Type *base, uint32_t enableMask)
1500:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1501:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_ASSERT_L2(CY_SAR_CHANMASK(enableMask));
1502:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1503:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     SAR_CHAN_EN(base) = enableMask;
1504:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
1505:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1506:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1507:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1508:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_SetRangeCond
1509:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1510:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1511:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Set the condition in which range detection interrupts are triggered.
1512:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccdNpiZW.s 			page 28


1513:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1514:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1515:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1516:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param cond
1517:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * A value of the enum \ref cy_en_sar_range_detect_condition_t.
1518:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1519:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return None
1520:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1521:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \funcusage
1522:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1523:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SET_RANGE_COND
1524:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1525:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
1526:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetRangeCond(SAR_Type *base, cy_en_sar_range_detect_condition_t cond)
1527:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1528:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_ASSERT_L3(CY_SAR_RANGECOND(cond));
1529:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1530:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     SAR_RANGE_COND(base) = (uint32_t)cond << SAR_RANGE_COND_RANGE_COND_Pos;
1531:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
1532:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1533:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1534:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1535:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_interrupt
1536:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1537:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1538:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1539:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_GetInterruptStatus
1540:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1541:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1542:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Return the interrupt register status.
1543:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1544:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1545:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1546:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1547:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return Interrupt status
1548:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1549:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \funcusage
1550:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1551:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_ISR
1552:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1553:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
1554:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetInterruptStatus(const SAR_Type *base)
1555:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
  28              		.loc 1 1555 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 8
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33 0000 80B4     		push	{r7}
  34              		.cfi_def_cfa_offset 4
  35              		.cfi_offset 7, -4
  36 0002 83B0     		sub	sp, sp, #12
  37              		.cfi_def_cfa_offset 16
  38 0004 00AF     		add	r7, sp, #0
  39              		.cfi_def_cfa_register 7
  40 0006 7860     		str	r0, [r7, #4]
1556:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     return SAR_INTR(base);
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccdNpiZW.s 			page 29


  41              		.loc 1 1556 0
  42 0008 7B68     		ldr	r3, [r7, #4]
  43 000a D3F81032 		ldr	r3, [r3, #528]
1557:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
  44              		.loc 1 1557 0
  45 000e 1846     		mov	r0, r3
  46 0010 0C37     		adds	r7, r7, #12
  47              		.cfi_def_cfa_offset 4
  48 0012 BD46     		mov	sp, r7
  49              		.cfi_def_cfa_register 13
  50              		@ sp needed
  51 0014 5DF8047B 		ldr	r7, [sp], #4
  52              		.cfi_restore 7
  53              		.cfi_def_cfa_offset 0
  54 0018 7047     		bx	lr
  55              		.cfi_endproc
  56              	.LFE170:
  57              		.size	Cy_SAR_GetInterruptStatus, .-Cy_SAR_GetInterruptStatus
  58 001a 00BF     		.section	.rodata
  59              		.align	2
  60              	.LC0:
  61 0000 47656E65 		.ascii	"Generated_Source\\PSoC6\\pdl\\drivers/peripheral/sa"
  61      72617465 
  61      645F536F 
  61      75726365 
  61      5C50536F 
  62 0030 722F6379 		.ascii	"r/cy_sar.h\000"
  62      5F736172 
  62      2E6800
  63              		.section	.text.Cy_SAR_ClearInterrupt,"ax",%progbits
  64              		.align	2
  65              		.thumb
  66              		.thumb_func
  67              		.type	Cy_SAR_ClearInterrupt, %function
  68              	Cy_SAR_ClearInterrupt:
  69              	.LFB171:
1558:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1559:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1560:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1561:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_ClearInterrupt
1562:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1563:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1564:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Clear the interrupt.
1565:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The interrupt must be cleared with this function so that the hardware
1566:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * can set subsequent interrupts and those interrupts can be forwarded
1567:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * to the interrupt controller, if enabled.
1568:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1569:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1570:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1571:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1572:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param intrMask
1573:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The mask of interrupts to clear. Typically this will be the value returned
1574:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * from \ref Cy_SAR_GetInterruptStatus.
1575:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Alternately, select one or more values from \ref cy_en_sar_intr_mask_t and "OR" them together.
1576:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - \ref CY_SAR_INTR_EOS_MASK
1577:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - \ref CY_SAR_INTR_OVERFLOW_MASK
1578:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - \ref CY_SAR_INTR_FW_COLLISION_MASK
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccdNpiZW.s 			page 30


1579:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1580:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return None
1581:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1582:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
1583:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_ClearInterrupt(SAR_Type *base, uint32_t intrMask)
1584:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
  70              		.loc 1 1584 0
  71              		.cfi_startproc
  72              		@ args = 0, pretend = 0, frame = 8
  73              		@ frame_needed = 1, uses_anonymous_args = 0
  74 0000 80B5     		push	{r7, lr}
  75              		.cfi_def_cfa_offset 8
  76              		.cfi_offset 7, -8
  77              		.cfi_offset 14, -4
  78 0002 82B0     		sub	sp, sp, #8
  79              		.cfi_def_cfa_offset 16
  80 0004 00AF     		add	r7, sp, #0
  81              		.cfi_def_cfa_register 7
  82 0006 7860     		str	r0, [r7, #4]
  83 0008 3960     		str	r1, [r7]
1585:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_ASSERT_L2(CY_SAR_INTRMASK(intrMask));
  84              		.loc 1 1585 0
  85 000a 3B68     		ldr	r3, [r7]
  86 000c 072B     		cmp	r3, #7
  87 000e 04D9     		bls	.L4
  88              		.loc 1 1585 0 is_stmt 0 discriminator 1
  89 0010 40F23161 		movw	r1, #1585
  90 0014 0648     		ldr	r0, .L5
  91 0016 FFF7FEFF 		bl	Cy_SysLib_AssertFailed
  92              	.L4:
1586:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1587:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     SAR_INTR(base) = intrMask;
  93              		.loc 1 1587 0 is_stmt 1
  94 001a 7B68     		ldr	r3, [r7, #4]
  95 001c 3A68     		ldr	r2, [r7]
  96 001e C3F81022 		str	r2, [r3, #528]
1588:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1589:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     /* Dummy read for buffered writes. */
1590:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     (void) SAR_INTR(base);
  97              		.loc 1 1590 0
  98 0022 7B68     		ldr	r3, [r7, #4]
  99 0024 D3F81032 		ldr	r3, [r3, #528]
1591:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
 100              		.loc 1 1591 0
 101 0028 00BF     		nop
 102 002a 0837     		adds	r7, r7, #8
 103              		.cfi_def_cfa_offset 8
 104 002c BD46     		mov	sp, r7
 105              		.cfi_def_cfa_register 13
 106              		@ sp needed
 107 002e 80BD     		pop	{r7, pc}
 108              	.L6:
 109              		.align	2
 110              	.L5:
 111 0030 00000000 		.word	.LC0
 112              		.cfi_endproc
 113              	.LFE171:
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccdNpiZW.s 			page 31


 114              		.size	Cy_SAR_ClearInterrupt, .-Cy_SAR_ClearInterrupt
 115              		.section	.text.ADC_1_ISR,"ax",%progbits
 116              		.align	2
 117              		.global	ADC_1_ISR
 118              		.thumb
 119              		.thumb_func
 120              		.type	ADC_1_ISR, %function
 121              	ADC_1_ISR:
 122              	.LFB271:
 123              		.file 2 "Generated_Source\\PSoC6\\ADC_1_INT.c"
   1:Generated_Source\PSoC6/ADC_1_INT.c **** /***************************************************************************//**
   2:Generated_Source\PSoC6/ADC_1_INT.c **** * \file     ADC_1_INT.c
   3:Generated_Source\PSoC6/ADC_1_INT.c **** * \version  3.10
   4:Generated_Source\PSoC6/ADC_1_INT.c **** *
   5:Generated_Source\PSoC6/ADC_1_INT.c **** * \brief
   6:Generated_Source\PSoC6/ADC_1_INT.c **** * Provides the initialization data structure for the ADC_1 Component.
   7:Generated_Source\PSoC6/ADC_1_INT.c **** *
   8:Generated_Source\PSoC6/ADC_1_INT.c **** ********************************************************************************
   9:Generated_Source\PSoC6/ADC_1_INT.c **** * \copyright
  10:Generated_Source\PSoC6/ADC_1_INT.c **** * (c) 2017-2018, Cypress Semiconductor Corporation. All rights reserved.
  11:Generated_Source\PSoC6/ADC_1_INT.c **** * This software, including source code, documentation and related
  12:Generated_Source\PSoC6/ADC_1_INT.c **** * materials ("Software"), is owned by Cypress Semiconductor
  13:Generated_Source\PSoC6/ADC_1_INT.c **** * Corporation ("Cypress") and is protected by and subject to worldwide
  14:Generated_Source\PSoC6/ADC_1_INT.c **** * patent protection (United States and foreign), United States copyright
  15:Generated_Source\PSoC6/ADC_1_INT.c **** * laws and international treaty provisions. Therefore, you may use this
  16:Generated_Source\PSoC6/ADC_1_INT.c **** * Software only as provided in the license agreement accompanying the
  17:Generated_Source\PSoC6/ADC_1_INT.c **** * software package from which you obtained this Software ("EULA").
  18:Generated_Source\PSoC6/ADC_1_INT.c **** * If no EULA applies, Cypress hereby grants you a personal, nonexclusive,
  19:Generated_Source\PSoC6/ADC_1_INT.c **** * non-transferable license to copy, modify, and compile the
  20:Generated_Source\PSoC6/ADC_1_INT.c **** * Software source code solely for use in connection with Cypress's
  21:Generated_Source\PSoC6/ADC_1_INT.c **** * integrated circuit products. Any reproduction, modification, translation,
  22:Generated_Source\PSoC6/ADC_1_INT.c **** * compilation, or representation of this Software except as specified
  23:Generated_Source\PSoC6/ADC_1_INT.c **** * above is prohibited without the express written permission of Cypress.
  24:Generated_Source\PSoC6/ADC_1_INT.c **** * Disclaimer: THIS SOFTWARE IS PROVIDED AS-IS, WITH NO
  25:Generated_Source\PSoC6/ADC_1_INT.c **** * WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING,
  26:Generated_Source\PSoC6/ADC_1_INT.c **** * BUT NOT LIMITED TO, NONINFRINGEMENT, IMPLIED
  27:Generated_Source\PSoC6/ADC_1_INT.c **** * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
  28:Generated_Source\PSoC6/ADC_1_INT.c **** * PARTICULAR PURPOSE. Cypress reserves the right to make
  29:Generated_Source\PSoC6/ADC_1_INT.c **** * changes to the Software without notice. Cypress does not assume any
  30:Generated_Source\PSoC6/ADC_1_INT.c **** * liability arising out of the application or use of the Software or any
  31:Generated_Source\PSoC6/ADC_1_INT.c **** * product or circuit described in the Software. Cypress does not
  32:Generated_Source\PSoC6/ADC_1_INT.c **** * authorize its products for use in any products where a malfunction or
  33:Generated_Source\PSoC6/ADC_1_INT.c **** * failure of the Cypress product may reasonably be expected to result in
  34:Generated_Source\PSoC6/ADC_1_INT.c **** * significant property damage, injury or death ("High Risk Product"). By
  35:Generated_Source\PSoC6/ADC_1_INT.c **** * including Cypress's product in a High Risk Product, the manufacturer
  36:Generated_Source\PSoC6/ADC_1_INT.c **** * of such system or application assumes all risk of such use and in doing
  37:Generated_Source\PSoC6/ADC_1_INT.c **** * so agrees to indemnify Cypress against all liability.
  38:Generated_Source\PSoC6/ADC_1_INT.c **** *******************************************************************************/
  39:Generated_Source\PSoC6/ADC_1_INT.c **** #include "ADC_1.h"
  40:Generated_Source\PSoC6/ADC_1_INT.c **** #include "cyapicallbacks.h"
  41:Generated_Source\PSoC6/ADC_1_INT.c **** 
  42:Generated_Source\PSoC6/ADC_1_INT.c **** /******************************************************************************
  43:Generated_Source\PSoC6/ADC_1_INT.c **** * Custom Declarations and Variables
  44:Generated_Source\PSoC6/ADC_1_INT.c **** * - add user include files, prototypes and variables between the following
  45:Generated_Source\PSoC6/ADC_1_INT.c **** *   #START and #END tags
  46:Generated_Source\PSoC6/ADC_1_INT.c **** ******************************************************************************/
  47:Generated_Source\PSoC6/ADC_1_INT.c **** /* `#START ADC_1_SYS_VAR`  */
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccdNpiZW.s 			page 32


  48:Generated_Source\PSoC6/ADC_1_INT.c **** 
  49:Generated_Source\PSoC6/ADC_1_INT.c **** /* `#END`  */
  50:Generated_Source\PSoC6/ADC_1_INT.c **** 
  51:Generated_Source\PSoC6/ADC_1_INT.c **** /******************************************************************************
  52:Generated_Source\PSoC6/ADC_1_INT.c **** * Function Name: ADC_1_ISR
  53:Generated_Source\PSoC6/ADC_1_INT.c **** *******************************************************************************
  54:Generated_Source\PSoC6/ADC_1_INT.c **** *
  55:Generated_Source\PSoC6/ADC_1_INT.c **** * \brief Handle Interrupt Service Routine.
  56:Generated_Source\PSoC6/ADC_1_INT.c **** *
  57:Generated_Source\PSoC6/ADC_1_INT.c **** * \param None
  58:Generated_Source\PSoC6/ADC_1_INT.c **** *
  59:Generated_Source\PSoC6/ADC_1_INT.c **** * \return None
  60:Generated_Source\PSoC6/ADC_1_INT.c **** *
  61:Generated_Source\PSoC6/ADC_1_INT.c **** * \sideeffect None
  62:Generated_Source\PSoC6/ADC_1_INT.c **** *
  63:Generated_Source\PSoC6/ADC_1_INT.c **** ******************************************************************************/
  64:Generated_Source\PSoC6/ADC_1_INT.c **** void ADC_1_ISR(void)
  65:Generated_Source\PSoC6/ADC_1_INT.c **** {
 124              		.loc 2 65 0
 125              		.cfi_startproc
 126              		@ args = 0, pretend = 0, frame = 8
 127              		@ frame_needed = 1, uses_anonymous_args = 0
 128 0000 80B5     		push	{r7, lr}
 129              		.cfi_def_cfa_offset 8
 130              		.cfi_offset 7, -8
 131              		.cfi_offset 14, -4
 132 0002 82B0     		sub	sp, sp, #8
 133              		.cfi_def_cfa_offset 16
 134 0004 00AF     		add	r7, sp, #0
 135              		.cfi_def_cfa_register 7
  66:Generated_Source\PSoC6/ADC_1_INT.c ****     uint32_t intr_status;
  67:Generated_Source\PSoC6/ADC_1_INT.c **** 
  68:Generated_Source\PSoC6/ADC_1_INT.c ****     /* Read interrupt status register */
  69:Generated_Source\PSoC6/ADC_1_INT.c ****     intr_status = Cy_SAR_GetInterruptStatus(ADC_1_SAR__HW);
 136              		.loc 2 69 0
 137 0006 0748     		ldr	r0, .L8
 138 0008 FFF7FEFF 		bl	Cy_SAR_GetInterruptStatus
 139 000c 7860     		str	r0, [r7, #4]
  70:Generated_Source\PSoC6/ADC_1_INT.c **** 
  71:Generated_Source\PSoC6/ADC_1_INT.c ****     /* ISR Macro Callback */
  72:Generated_Source\PSoC6/ADC_1_INT.c ****     #ifdef ADC_1_ISR_CALLBACK
  73:Generated_Source\PSoC6/ADC_1_INT.c ****         ADC_1_ISR_Callback();
  74:Generated_Source\PSoC6/ADC_1_INT.c ****     #endif
  75:Generated_Source\PSoC6/ADC_1_INT.c **** 
  76:Generated_Source\PSoC6/ADC_1_INT.c ****     /************************************************************************
  77:Generated_Source\PSoC6/ADC_1_INT.c ****     *  Custom Code
  78:Generated_Source\PSoC6/ADC_1_INT.c ****     *  - add user ISR code between the following #START and #END tags
  79:Generated_Source\PSoC6/ADC_1_INT.c ****     *************************************************************************/
  80:Generated_Source\PSoC6/ADC_1_INT.c ****     /* `#START MAIN_ADC_1_ISR`  */
  81:Generated_Source\PSoC6/ADC_1_INT.c **** 
  82:Generated_Source\PSoC6/ADC_1_INT.c ****     /* `#END`  */
  83:Generated_Source\PSoC6/ADC_1_INT.c **** 
  84:Generated_Source\PSoC6/ADC_1_INT.c ****     /* Clear handled interrupt */
  85:Generated_Source\PSoC6/ADC_1_INT.c ****     Cy_SAR_ClearInterrupt(ADC_1_SAR__HW, intr_status);
 140              		.loc 2 85 0
 141 000e 7968     		ldr	r1, [r7, #4]
 142 0010 0448     		ldr	r0, .L8
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccdNpiZW.s 			page 33


 143 0012 FFF7FEFF 		bl	Cy_SAR_ClearInterrupt
  86:Generated_Source\PSoC6/ADC_1_INT.c ****     /* Read interrupt status register to ensure write completed due to buffered writes */
  87:Generated_Source\PSoC6/ADC_1_INT.c ****     (void)Cy_SAR_GetInterruptStatus(ADC_1_SAR__HW);
 144              		.loc 2 87 0
 145 0016 0348     		ldr	r0, .L8
 146 0018 FFF7FEFF 		bl	Cy_SAR_GetInterruptStatus
  88:Generated_Source\PSoC6/ADC_1_INT.c **** }
 147              		.loc 2 88 0
 148 001c 00BF     		nop
 149 001e 0837     		adds	r7, r7, #8
 150              		.cfi_def_cfa_offset 8
 151 0020 BD46     		mov	sp, r7
 152              		.cfi_def_cfa_register 13
 153              		@ sp needed
 154 0022 80BD     		pop	{r7, pc}
 155              	.L9:
 156              		.align	2
 157              	.L8:
 158 0024 00001D41 		.word	1092419584
 159              		.cfi_endproc
 160              	.LFE271:
 161              		.size	ADC_1_ISR, .-ADC_1_ISR
 162              		.text
 163              	.Letext0:
 164              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 165              		.file 4 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 166              		.file 5 "Generated_Source\\PSoC6\\pdl\\devices/psoc6/include/ip/cyip_sar.h"
 167              		.file 6 "Generated_Source\\PSoC6\\pdl\\devices/psoc6/include/psoc6_01_config.h"
 168              		.file 7 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/device/cy_device.h"
 169              		.file 8 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/syslib/cy_syslib.h"
 170              		.file 9 "Generated_Source\\PSoC6\\ADC_1.h"
 171              		.file 10 "Generated_Source\\PSoC6\\pdl\\cmsis/include/core_cm4.h"
 172              		.section	.debug_info,"",%progbits
 173              	.Ldebug_info0:
 174 0000 620B0000 		.4byte	0xb62
 175 0004 0400     		.2byte	0x4
 176 0006 00000000 		.4byte	.Ldebug_abbrev0
 177 000a 04       		.byte	0x4
 178 000b 01       		.uleb128 0x1
 179 000c E7000000 		.4byte	.LASF201
 180 0010 0C       		.byte	0xc
 181 0011 3B090000 		.4byte	.LASF202
 182 0015 600B0000 		.4byte	.LASF203
 183 0019 00000000 		.4byte	.Ldebug_ranges0+0
 184 001d 00000000 		.4byte	0
 185 0021 00000000 		.4byte	.Ldebug_line0
 186 0025 02       		.uleb128 0x2
 187 0026 02       		.byte	0x2
 188 0027 05       		.byte	0x5
 189 0028 09090000 		.4byte	.LASF0
 190 002c 02       		.uleb128 0x2
 191 002d 01       		.byte	0x1
 192 002e 06       		.byte	0x6
 193 002f A8020000 		.4byte	.LASF1
 194 0033 03       		.uleb128 0x3
 195 0034 BC000000 		.4byte	.LASF3
 196 0038 03       		.byte	0x3
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccdNpiZW.s 			page 34


 197 0039 1D       		.byte	0x1d
 198 003a 3E000000 		.4byte	0x3e
 199 003e 02       		.uleb128 0x2
 200 003f 01       		.byte	0x1
 201 0040 08       		.byte	0x8
 202 0041 CD080000 		.4byte	.LASF2
 203 0045 03       		.uleb128 0x3
 204 0046 B9040000 		.4byte	.LASF4
 205 004a 03       		.byte	0x3
 206 004b 29       		.byte	0x29
 207 004c 25000000 		.4byte	0x25
 208 0050 03       		.uleb128 0x3
 209 0051 1D0A0000 		.4byte	.LASF5
 210 0055 03       		.byte	0x3
 211 0056 2B       		.byte	0x2b
 212 0057 5B000000 		.4byte	0x5b
 213 005b 02       		.uleb128 0x2
 214 005c 02       		.byte	0x2
 215 005d 07       		.byte	0x7
 216 005e 47040000 		.4byte	.LASF6
 217 0062 03       		.uleb128 0x3
 218 0063 5F060000 		.4byte	.LASF7
 219 0067 03       		.byte	0x3
 220 0068 3F       		.byte	0x3f
 221 0069 6D000000 		.4byte	0x6d
 222 006d 02       		.uleb128 0x2
 223 006e 04       		.byte	0x4
 224 006f 05       		.byte	0x5
 225 0070 79030000 		.4byte	.LASF8
 226 0074 03       		.uleb128 0x3
 227 0075 84040000 		.4byte	.LASF9
 228 0079 03       		.byte	0x3
 229 007a 41       		.byte	0x41
 230 007b 7F000000 		.4byte	0x7f
 231 007f 02       		.uleb128 0x2
 232 0080 04       		.byte	0x4
 233 0081 07       		.byte	0x7
 234 0082 41050000 		.4byte	.LASF10
 235 0086 02       		.uleb128 0x2
 236 0087 08       		.byte	0x8
 237 0088 05       		.byte	0x5
 238 0089 9A020000 		.4byte	.LASF11
 239 008d 02       		.uleb128 0x2
 240 008e 08       		.byte	0x8
 241 008f 07       		.byte	0x7
 242 0090 D5010000 		.4byte	.LASF12
 243 0094 04       		.uleb128 0x4
 244 0095 04       		.byte	0x4
 245 0096 05       		.byte	0x5
 246 0097 696E7400 		.ascii	"int\000"
 247 009b 02       		.uleb128 0x2
 248 009c 04       		.byte	0x4
 249 009d 07       		.byte	0x7
 250 009e 12050000 		.4byte	.LASF13
 251 00a2 03       		.uleb128 0x3
 252 00a3 3B0A0000 		.4byte	.LASF14
 253 00a7 04       		.byte	0x4
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccdNpiZW.s 			page 35


 254 00a8 18       		.byte	0x18
 255 00a9 33000000 		.4byte	0x33
 256 00ad 03       		.uleb128 0x3
 257 00ae 7E020000 		.4byte	.LASF15
 258 00b2 04       		.byte	0x4
 259 00b3 20       		.byte	0x20
 260 00b4 45000000 		.4byte	0x45
 261 00b8 03       		.uleb128 0x3
 262 00b9 23060000 		.4byte	.LASF16
 263 00bd 04       		.byte	0x4
 264 00be 24       		.byte	0x24
 265 00bf 50000000 		.4byte	0x50
 266 00c3 03       		.uleb128 0x3
 267 00c4 C5080000 		.4byte	.LASF17
 268 00c8 04       		.byte	0x4
 269 00c9 2C       		.byte	0x2c
 270 00ca 62000000 		.4byte	0x62
 271 00ce 03       		.uleb128 0x3
 272 00cf CB090000 		.4byte	.LASF18
 273 00d3 04       		.byte	0x4
 274 00d4 30       		.byte	0x30
 275 00d5 74000000 		.4byte	0x74
 276 00d9 02       		.uleb128 0x2
 277 00da 04       		.byte	0x4
 278 00db 07       		.byte	0x7
 279 00dc 1F050000 		.4byte	.LASF19
 280 00e0 05       		.uleb128 0x5
 281 00e1 CE000000 		.4byte	0xce
 282 00e5 06       		.uleb128 0x6
 283 00e6 E0000000 		.4byte	0xe0
 284 00ea 07       		.uleb128 0x7
 285 00eb E5000000 		.4byte	0xe5
 286 00ef FA000000 		.4byte	0xfa
 287 00f3 08       		.uleb128 0x8
 288 00f4 D9000000 		.4byte	0xd9
 289 00f8 01       		.byte	0x1
 290 00f9 00       		.byte	0
 291 00fa 07       		.uleb128 0x7
 292 00fb E0000000 		.4byte	0xe0
 293 00ff 0A010000 		.4byte	0x10a
 294 0103 08       		.uleb128 0x8
 295 0104 D9000000 		.4byte	0xd9
 296 0108 0F       		.byte	0xf
 297 0109 00       		.byte	0
 298 010a 07       		.uleb128 0x7
 299 010b E5000000 		.4byte	0xe5
 300 010f 1A010000 		.4byte	0x11a
 301 0113 08       		.uleb128 0x8
 302 0114 D9000000 		.4byte	0xd9
 303 0118 0F       		.byte	0xf
 304 0119 00       		.byte	0
 305 011a 07       		.uleb128 0x7
 306 011b E5000000 		.4byte	0xe5
 307 011f 2A010000 		.4byte	0x12a
 308 0123 08       		.uleb128 0x8
 309 0124 D9000000 		.4byte	0xd9
 310 0128 02       		.byte	0x2
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccdNpiZW.s 			page 36


 311 0129 00       		.byte	0
 312 012a 07       		.uleb128 0x7
 313 012b E5000000 		.4byte	0xe5
 314 012f 3A010000 		.4byte	0x13a
 315 0133 08       		.uleb128 0x8
 316 0134 D9000000 		.4byte	0xd9
 317 0138 0E       		.byte	0xe
 318 0139 00       		.byte	0
 319 013a 09       		.uleb128 0x9
 320 013b 080F     		.2byte	0xf08
 321 013d 05       		.byte	0x5
 322 013e 21       		.byte	0x21
 323 013f C2030000 		.4byte	0x3c2
 324 0143 0A       		.uleb128 0xa
 325 0144 CD0A0000 		.4byte	.LASF20
 326 0148 05       		.byte	0x5
 327 0149 22       		.byte	0x22
 328 014a E0000000 		.4byte	0xe0
 329 014e 00       		.byte	0
 330 014f 0A       		.uleb128 0xa
 331 0150 7C070000 		.4byte	.LASF21
 332 0154 05       		.byte	0x5
 333 0155 23       		.byte	0x23
 334 0156 E0000000 		.4byte	0xe0
 335 015a 04       		.byte	0x4
 336 015b 0A       		.uleb128 0xa
 337 015c 26090000 		.4byte	.LASF22
 338 0160 05       		.byte	0x5
 339 0161 24       		.byte	0x24
 340 0162 C7030000 		.4byte	0x3c7
 341 0166 08       		.byte	0x8
 342 0167 0A       		.uleb128 0xa
 343 0168 AB040000 		.4byte	.LASF23
 344 016c 05       		.byte	0x5
 345 016d 25       		.byte	0x25
 346 016e E0000000 		.4byte	0xe0
 347 0172 10       		.byte	0x10
 348 0173 0A       		.uleb128 0xa
 349 0174 AD070000 		.4byte	.LASF24
 350 0178 05       		.byte	0x5
 351 0179 26       		.byte	0x26
 352 017a E0000000 		.4byte	0xe0
 353 017e 14       		.byte	0x14
 354 017f 0A       		.uleb128 0xa
 355 0180 88070000 		.4byte	.LASF25
 356 0184 05       		.byte	0x5
 357 0185 27       		.byte	0x27
 358 0186 E0000000 		.4byte	0xe0
 359 018a 18       		.byte	0x18
 360 018b 0A       		.uleb128 0xa
 361 018c B1010000 		.4byte	.LASF26
 362 0190 05       		.byte	0x5
 363 0191 28       		.byte	0x28
 364 0192 E0000000 		.4byte	0xe0
 365 0196 1C       		.byte	0x1c
 366 0197 0A       		.uleb128 0xa
 367 0198 A5070000 		.4byte	.LASF27
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccdNpiZW.s 			page 37


 368 019c 05       		.byte	0x5
 369 019d 29       		.byte	0x29
 370 019e E0000000 		.4byte	0xe0
 371 01a2 20       		.byte	0x20
 372 01a3 0A       		.uleb128 0xa
 373 01a4 B7060000 		.4byte	.LASF28
 374 01a8 05       		.byte	0x5
 375 01a9 2A       		.byte	0x2a
 376 01aa E0000000 		.4byte	0xe0
 377 01ae 24       		.byte	0x24
 378 01af 0A       		.uleb128 0xa
 379 01b0 3B080000 		.4byte	.LASF29
 380 01b4 05       		.byte	0x5
 381 01b5 2B       		.byte	0x2b
 382 01b6 E1030000 		.4byte	0x3e1
 383 01ba 28       		.byte	0x28
 384 01bb 0A       		.uleb128 0xa
 385 01bc D1040000 		.4byte	.LASF30
 386 01c0 05       		.byte	0x5
 387 01c1 2C       		.byte	0x2c
 388 01c2 E6030000 		.4byte	0x3e6
 389 01c6 80       		.byte	0x80
 390 01c7 0A       		.uleb128 0xa
 391 01c8 87090000 		.4byte	.LASF31
 392 01cc 05       		.byte	0x5
 393 01cd 2D       		.byte	0x2d
 394 01ce F0030000 		.4byte	0x3f0
 395 01d2 C0       		.byte	0xc0
 396 01d3 0B       		.uleb128 0xb
 397 01d4 A30A0000 		.4byte	.LASF32
 398 01d8 05       		.byte	0x5
 399 01d9 2E       		.byte	0x2e
 400 01da FA030000 		.4byte	0x3fa
 401 01de 0001     		.2byte	0x100
 402 01e0 0B       		.uleb128 0xb
 403 01e1 4F080000 		.4byte	.LASF33
 404 01e5 05       		.byte	0x5
 405 01e6 2F       		.byte	0x2f
 406 01e7 04040000 		.4byte	0x404
 407 01eb 4001     		.2byte	0x140
 408 01ed 0B       		.uleb128 0xb
 409 01ee 1F070000 		.4byte	.LASF34
 410 01f2 05       		.byte	0x5
 411 01f3 30       		.byte	0x30
 412 01f4 0E040000 		.4byte	0x40e
 413 01f8 8001     		.2byte	0x180
 414 01fa 0B       		.uleb128 0xb
 415 01fb 9F090000 		.4byte	.LASF35
 416 01ff 05       		.byte	0x5
 417 0200 31       		.byte	0x31
 418 0201 18040000 		.4byte	0x418
 419 0205 C001     		.2byte	0x1c0
 420 0207 0B       		.uleb128 0xb
 421 0208 F8050000 		.4byte	.LASF36
 422 020c 05       		.byte	0x5
 423 020d 32       		.byte	0x32
 424 020e E5000000 		.4byte	0xe5
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccdNpiZW.s 			page 38


 425 0212 0002     		.2byte	0x200
 426 0214 0B       		.uleb128 0xb
 427 0215 380B0000 		.4byte	.LASF37
 428 0219 05       		.byte	0x5
 429 021a 33       		.byte	0x33
 430 021b E5000000 		.4byte	0xe5
 431 021f 0402     		.2byte	0x204
 432 0221 0B       		.uleb128 0xb
 433 0222 53050000 		.4byte	.LASF38
 434 0226 05       		.byte	0x5
 435 0227 34       		.byte	0x34
 436 0228 E5000000 		.4byte	0xe5
 437 022c 0802     		.2byte	0x208
 438 022e 0B       		.uleb128 0xb
 439 022f 72090000 		.4byte	.LASF39
 440 0233 05       		.byte	0x5
 441 0234 35       		.byte	0x35
 442 0235 E5000000 		.4byte	0xe5
 443 0239 0C02     		.2byte	0x20c
 444 023b 0B       		.uleb128 0xb
 445 023c 630A0000 		.4byte	.LASF40
 446 0240 05       		.byte	0x5
 447 0241 36       		.byte	0x36
 448 0242 E0000000 		.4byte	0xe0
 449 0246 1002     		.2byte	0x210
 450 0248 0B       		.uleb128 0xb
 451 0249 C2060000 		.4byte	.LASF41
 452 024d 05       		.byte	0x5
 453 024e 37       		.byte	0x37
 454 024f E0000000 		.4byte	0xe0
 455 0253 1402     		.2byte	0x214
 456 0255 0B       		.uleb128 0xb
 457 0256 84050000 		.4byte	.LASF42
 458 025a 05       		.byte	0x5
 459 025b 38       		.byte	0x38
 460 025c E0000000 		.4byte	0xe0
 461 0260 1802     		.2byte	0x218
 462 0262 0B       		.uleb128 0xb
 463 0263 FE070000 		.4byte	.LASF43
 464 0267 05       		.byte	0x5
 465 0268 39       		.byte	0x39
 466 0269 E5000000 		.4byte	0xe5
 467 026d 1C02     		.2byte	0x21c
 468 026f 0B       		.uleb128 0xb
 469 0270 C3040000 		.4byte	.LASF44
 470 0274 05       		.byte	0x5
 471 0275 3A       		.byte	0x3a
 472 0276 E0000000 		.4byte	0xe0
 473 027a 2002     		.2byte	0x220
 474 027c 0B       		.uleb128 0xb
 475 027d EC070000 		.4byte	.LASF45
 476 0281 05       		.byte	0x5
 477 0282 3B       		.byte	0x3b
 478 0283 E0000000 		.4byte	0xe0
 479 0287 2402     		.2byte	0x224
 480 0289 0B       		.uleb128 0xb
 481 028a 500A0000 		.4byte	.LASF46
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccdNpiZW.s 			page 39


 482 028e 05       		.byte	0x5
 483 028f 3C       		.byte	0x3c
 484 0290 E0000000 		.4byte	0xe0
 485 0294 2802     		.2byte	0x228
 486 0296 0B       		.uleb128 0xb
 487 0297 5C0C0000 		.4byte	.LASF47
 488 029b 05       		.byte	0x5
 489 029c 3D       		.byte	0x3d
 490 029d E5000000 		.4byte	0xe5
 491 02a1 2C02     		.2byte	0x22c
 492 02a3 0B       		.uleb128 0xb
 493 02a4 ED050000 		.4byte	.LASF48
 494 02a8 05       		.byte	0x5
 495 02a9 3E       		.byte	0x3e
 496 02aa E0000000 		.4byte	0xe0
 497 02ae 3002     		.2byte	0x230
 498 02b0 0B       		.uleb128 0xb
 499 02b1 F40B0000 		.4byte	.LASF49
 500 02b5 05       		.byte	0x5
 501 02b6 3F       		.byte	0x3f
 502 02b7 E0000000 		.4byte	0xe0
 503 02bb 3402     		.2byte	0x234
 504 02bd 0B       		.uleb128 0xb
 505 02be 6E020000 		.4byte	.LASF50
 506 02c2 05       		.byte	0x5
 507 02c3 40       		.byte	0x40
 508 02c4 E0000000 		.4byte	0xe0
 509 02c8 3802     		.2byte	0x238
 510 02ca 0B       		.uleb128 0xb
 511 02cb 340C0000 		.4byte	.LASF51
 512 02cf 05       		.byte	0x5
 513 02d0 41       		.byte	0x41
 514 02d1 E5000000 		.4byte	0xe5
 515 02d5 3C02     		.2byte	0x23c
 516 02d7 0B       		.uleb128 0xb
 517 02d8 94030000 		.4byte	.LASF52
 518 02dc 05       		.byte	0x5
 519 02dd 42       		.byte	0x42
 520 02de E5000000 		.4byte	0xe5
 521 02e2 4002     		.2byte	0x240
 522 02e4 0B       		.uleb128 0xb
 523 02e5 65080000 		.4byte	.LASF53
 524 02e9 05       		.byte	0x5
 525 02ea 43       		.byte	0x43
 526 02eb 22040000 		.4byte	0x422
 527 02ef 4402     		.2byte	0x244
 528 02f1 0B       		.uleb128 0xb
 529 02f2 1F000000 		.4byte	.LASF54
 530 02f6 05       		.byte	0x5
 531 02f7 44       		.byte	0x44
 532 02f8 E0000000 		.4byte	0xe0
 533 02fc 8002     		.2byte	0x280
 534 02fe 0B       		.uleb128 0xb
 535 02ff 6F080000 		.4byte	.LASF55
 536 0303 05       		.byte	0x5
 537 0304 45       		.byte	0x45
 538 0305 2C040000 		.4byte	0x42c
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccdNpiZW.s 			page 40


 539 0309 8402     		.2byte	0x284
 540 030b 0B       		.uleb128 0xb
 541 030c AD030000 		.4byte	.LASF56
 542 0310 05       		.byte	0x5
 543 0311 46       		.byte	0x46
 544 0312 E5000000 		.4byte	0xe5
 545 0316 9002     		.2byte	0x290
 546 0318 0B       		.uleb128 0xb
 547 0319 79080000 		.4byte	.LASF57
 548 031d 05       		.byte	0x5
 549 031e 47       		.byte	0x47
 550 031f 36040000 		.4byte	0x436
 551 0323 9402     		.2byte	0x294
 552 0325 0B       		.uleb128 0xb
 553 0326 F70A0000 		.4byte	.LASF58
 554 032a 05       		.byte	0x5
 555 032b 48       		.byte	0x48
 556 032c E5000000 		.4byte	0xe5
 557 0330 A002     		.2byte	0x2a0
 558 0332 0B       		.uleb128 0xb
 559 0333 16000000 		.4byte	.LASF59
 560 0337 05       		.byte	0x5
 561 0338 49       		.byte	0x49
 562 0339 E5000000 		.4byte	0xe5
 563 033d A402     		.2byte	0x2a4
 564 033f 0B       		.uleb128 0xb
 565 0340 83080000 		.4byte	.LASF60
 566 0344 05       		.byte	0x5
 567 0345 4A       		.byte	0x4a
 568 0346 40040000 		.4byte	0x440
 569 034a A802     		.2byte	0x2a8
 570 034c 0B       		.uleb128 0xb
 571 034d A2000000 		.4byte	.LASF61
 572 0351 05       		.byte	0x5
 573 0352 4B       		.byte	0x4b
 574 0353 E0000000 		.4byte	0xe0
 575 0357 0003     		.2byte	0x300
 576 0359 0B       		.uleb128 0xb
 577 035a 11040000 		.4byte	.LASF62
 578 035e 05       		.byte	0x5
 579 035f 4C       		.byte	0x4c
 580 0360 E0000000 		.4byte	0xe0
 581 0364 0403     		.2byte	0x304
 582 0366 0B       		.uleb128 0xb
 583 0367 8D080000 		.4byte	.LASF63
 584 036b 05       		.byte	0x5
 585 036c 4D       		.byte	0x4d
 586 036d 5A040000 		.4byte	0x45a
 587 0371 0803     		.2byte	0x308
 588 0373 0B       		.uleb128 0xb
 589 0374 71050000 		.4byte	.LASF64
 590 0378 05       		.byte	0x5
 591 0379 4E       		.byte	0x4e
 592 037a E0000000 		.4byte	0xe0
 593 037e 4003     		.2byte	0x340
 594 0380 0B       		.uleb128 0xb
 595 0381 BA0A0000 		.4byte	.LASF65
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccdNpiZW.s 			page 41


 596 0385 05       		.byte	0x5
 597 0386 4F       		.byte	0x4f
 598 0387 E0000000 		.4byte	0xe0
 599 038b 4403     		.2byte	0x344
 600 038d 0B       		.uleb128 0xb
 601 038e 82030000 		.4byte	.LASF66
 602 0392 05       		.byte	0x5
 603 0393 50       		.byte	0x50
 604 0394 E5000000 		.4byte	0xe5
 605 0398 4803     		.2byte	0x348
 606 039a 0B       		.uleb128 0xb
 607 039b 20030000 		.4byte	.LASF67
 608 039f 05       		.byte	0x5
 609 03a0 51       		.byte	0x51
 610 03a1 75040000 		.4byte	0x475
 611 03a5 4C03     		.2byte	0x34c
 612 03a7 0B       		.uleb128 0xb
 613 03a8 5A020000 		.4byte	.LASF68
 614 03ac 05       		.byte	0x5
 615 03ad 52       		.byte	0x52
 616 03ae E0000000 		.4byte	0xe0
 617 03b2 000F     		.2byte	0xf00
 618 03b4 0B       		.uleb128 0xb
 619 03b5 64020000 		.4byte	.LASF69
 620 03b9 05       		.byte	0x5
 621 03ba 53       		.byte	0x53
 622 03bb E0000000 		.4byte	0xe0
 623 03bf 040F     		.2byte	0xf04
 624 03c1 00       		.byte	0
 625 03c2 05       		.uleb128 0x5
 626 03c3 EA000000 		.4byte	0xea
 627 03c7 06       		.uleb128 0x6
 628 03c8 C2030000 		.4byte	0x3c2
 629 03cc 07       		.uleb128 0x7
 630 03cd E5000000 		.4byte	0xe5
 631 03d1 DC030000 		.4byte	0x3dc
 632 03d5 08       		.uleb128 0x8
 633 03d6 D9000000 		.4byte	0xd9
 634 03da 15       		.byte	0x15
 635 03db 00       		.byte	0
 636 03dc 05       		.uleb128 0x5
 637 03dd CC030000 		.4byte	0x3cc
 638 03e1 06       		.uleb128 0x6
 639 03e2 DC030000 		.4byte	0x3dc
 640 03e6 05       		.uleb128 0x5
 641 03e7 FA000000 		.4byte	0xfa
 642 03eb 05       		.uleb128 0x5
 643 03ec 0A010000 		.4byte	0x10a
 644 03f0 06       		.uleb128 0x6
 645 03f1 EB030000 		.4byte	0x3eb
 646 03f5 05       		.uleb128 0x5
 647 03f6 0A010000 		.4byte	0x10a
 648 03fa 06       		.uleb128 0x6
 649 03fb F5030000 		.4byte	0x3f5
 650 03ff 05       		.uleb128 0x5
 651 0400 0A010000 		.4byte	0x10a
 652 0404 06       		.uleb128 0x6
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccdNpiZW.s 			page 42


 653 0405 FF030000 		.4byte	0x3ff
 654 0409 05       		.uleb128 0x5
 655 040a 0A010000 		.4byte	0x10a
 656 040e 06       		.uleb128 0x6
 657 040f 09040000 		.4byte	0x409
 658 0413 05       		.uleb128 0x5
 659 0414 0A010000 		.4byte	0x10a
 660 0418 06       		.uleb128 0x6
 661 0419 13040000 		.4byte	0x413
 662 041d 05       		.uleb128 0x5
 663 041e 2A010000 		.4byte	0x12a
 664 0422 06       		.uleb128 0x6
 665 0423 1D040000 		.4byte	0x41d
 666 0427 05       		.uleb128 0x5
 667 0428 1A010000 		.4byte	0x11a
 668 042c 06       		.uleb128 0x6
 669 042d 27040000 		.4byte	0x427
 670 0431 05       		.uleb128 0x5
 671 0432 1A010000 		.4byte	0x11a
 672 0436 06       		.uleb128 0x6
 673 0437 31040000 		.4byte	0x431
 674 043b 05       		.uleb128 0x5
 675 043c CC030000 		.4byte	0x3cc
 676 0440 06       		.uleb128 0x6
 677 0441 3B040000 		.4byte	0x43b
 678 0445 07       		.uleb128 0x7
 679 0446 E5000000 		.4byte	0xe5
 680 044a 55040000 		.4byte	0x455
 681 044e 08       		.uleb128 0x8
 682 044f D9000000 		.4byte	0xd9
 683 0453 0D       		.byte	0xd
 684 0454 00       		.byte	0
 685 0455 05       		.uleb128 0x5
 686 0456 45040000 		.4byte	0x445
 687 045a 06       		.uleb128 0x6
 688 045b 55040000 		.4byte	0x455
 689 045f 07       		.uleb128 0x7
 690 0460 E5000000 		.4byte	0xe5
 691 0464 70040000 		.4byte	0x470
 692 0468 0C       		.uleb128 0xc
 693 0469 D9000000 		.4byte	0xd9
 694 046d EC02     		.2byte	0x2ec
 695 046f 00       		.byte	0
 696 0470 05       		.uleb128 0x5
 697 0471 5F040000 		.4byte	0x45f
 698 0475 06       		.uleb128 0x6
 699 0476 70040000 		.4byte	0x470
 700 047a 03       		.uleb128 0x3
 701 047b 2F090000 		.4byte	.LASF70
 702 047f 05       		.byte	0x5
 703 0480 54       		.byte	0x54
 704 0481 3A010000 		.4byte	0x13a
 705 0485 0D       		.uleb128 0xd
 706 0486 97050000 		.4byte	.LASF71
 707 048a 06       		.byte	0x6
 708 048b 5206     		.2byte	0x652
 709 048d 7A040000 		.4byte	0x47a
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccdNpiZW.s 			page 43


 710 0491 02       		.uleb128 0x2
 711 0492 08       		.byte	0x8
 712 0493 04       		.byte	0x4
 713 0494 F2090000 		.4byte	.LASF72
 714 0498 0E       		.uleb128 0xe
 715 0499 B8       		.byte	0xb8
 716 049a 07       		.byte	0x7
 717 049b 34       		.byte	0x34
 718 049c A9080000 		.4byte	0x8a9
 719 04a0 0A       		.uleb128 0xa
 720 04a1 BC010000 		.4byte	.LASF73
 721 04a5 07       		.byte	0x7
 722 04a6 37       		.byte	0x37
 723 04a7 CE000000 		.4byte	0xce
 724 04ab 00       		.byte	0
 725 04ac 0A       		.uleb128 0xa
 726 04ad 97000000 		.4byte	.LASF74
 727 04b1 07       		.byte	0x7
 728 04b2 38       		.byte	0x38
 729 04b3 CE000000 		.4byte	0xce
 730 04b7 04       		.byte	0x4
 731 04b8 0A       		.uleb128 0xa
 732 04b9 B8030000 		.4byte	.LASF75
 733 04bd 07       		.byte	0x7
 734 04be 39       		.byte	0x39
 735 04bf CE000000 		.4byte	0xce
 736 04c3 08       		.byte	0x8
 737 04c4 0A       		.uleb128 0xa
 738 04c5 9E080000 		.4byte	.LASF76
 739 04c9 07       		.byte	0x7
 740 04ca 3A       		.byte	0x3a
 741 04cb CE000000 		.4byte	0xce
 742 04cf 0C       		.byte	0xc
 743 04d0 0A       		.uleb128 0xa
 744 04d1 F7020000 		.4byte	.LASF77
 745 04d5 07       		.byte	0x7
 746 04d6 3B       		.byte	0x3b
 747 04d7 CE000000 		.4byte	0xce
 748 04db 10       		.byte	0x10
 749 04dc 0A       		.uleb128 0xa
 750 04dd 2B030000 		.4byte	.LASF78
 751 04e1 07       		.byte	0x7
 752 04e2 3C       		.byte	0x3c
 753 04e3 CE000000 		.4byte	0xce
 754 04e7 14       		.byte	0x14
 755 04e8 0A       		.uleb128 0xa
 756 04e9 8E050000 		.4byte	.LASF79
 757 04ed 07       		.byte	0x7
 758 04ee 3D       		.byte	0x3d
 759 04ef CE000000 		.4byte	0xce
 760 04f3 18       		.byte	0x18
 761 04f4 0A       		.uleb128 0xa
 762 04f5 8E000000 		.4byte	.LASF80
 763 04f9 07       		.byte	0x7
 764 04fa 3E       		.byte	0x3e
 765 04fb CE000000 		.4byte	0xce
 766 04ff 1C       		.byte	0x1c
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccdNpiZW.s 			page 44


 767 0500 0A       		.uleb128 0xa
 768 0501 2C0C0000 		.4byte	.LASF81
 769 0505 07       		.byte	0x7
 770 0506 3F       		.byte	0x3f
 771 0507 CE000000 		.4byte	0xce
 772 050b 20       		.byte	0x20
 773 050c 0A       		.uleb128 0xa
 774 050d D4070000 		.4byte	.LASF82
 775 0511 07       		.byte	0x7
 776 0512 40       		.byte	0x40
 777 0513 CE000000 		.4byte	0xce
 778 0517 24       		.byte	0x24
 779 0518 0A       		.uleb128 0xa
 780 0519 CB060000 		.4byte	.LASF83
 781 051d 07       		.byte	0x7
 782 051e 43       		.byte	0x43
 783 051f A2000000 		.4byte	0xa2
 784 0523 28       		.byte	0x28
 785 0524 0A       		.uleb128 0xa
 786 0525 74000000 		.4byte	.LASF84
 787 0529 07       		.byte	0x7
 788 052a 44       		.byte	0x44
 789 052b A2000000 		.4byte	0xa2
 790 052f 29       		.byte	0x29
 791 0530 0A       		.uleb128 0xa
 792 0531 220C0000 		.4byte	.LASF85
 793 0535 07       		.byte	0x7
 794 0536 45       		.byte	0x45
 795 0537 A2000000 		.4byte	0xa2
 796 053b 2A       		.byte	0x2a
 797 053c 0A       		.uleb128 0xa
 798 053d C6070000 		.4byte	.LASF86
 799 0541 07       		.byte	0x7
 800 0542 46       		.byte	0x46
 801 0543 A2000000 		.4byte	0xa2
 802 0547 2B       		.byte	0x2b
 803 0548 0A       		.uleb128 0xa
 804 0549 17060000 		.4byte	.LASF87
 805 054d 07       		.byte	0x7
 806 054e 47       		.byte	0x47
 807 054f A2000000 		.4byte	0xa2
 808 0553 2C       		.byte	0x2c
 809 0554 0A       		.uleb128 0xa
 810 0555 430A0000 		.4byte	.LASF88
 811 0559 07       		.byte	0x7
 812 055a 48       		.byte	0x48
 813 055b A2000000 		.4byte	0xa2
 814 055f 2D       		.byte	0x2d
 815 0560 0A       		.uleb128 0xa
 816 0561 00030000 		.4byte	.LASF89
 817 0565 07       		.byte	0x7
 818 0566 49       		.byte	0x49
 819 0567 A2000000 		.4byte	0xa2
 820 056b 2E       		.byte	0x2e
 821 056c 0A       		.uleb128 0xa
 822 056d DD060000 		.4byte	.LASF90
 823 0571 07       		.byte	0x7
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccdNpiZW.s 			page 45


 824 0572 4A       		.byte	0x4a
 825 0573 A2000000 		.4byte	0xa2
 826 0577 2F       		.byte	0x2f
 827 0578 0A       		.uleb128 0xa
 828 0579 030A0000 		.4byte	.LASF91
 829 057d 07       		.byte	0x7
 830 057e 4B       		.byte	0x4b
 831 057f A2000000 		.4byte	0xa2
 832 0583 30       		.byte	0x30
 833 0584 0A       		.uleb128 0xa
 834 0585 66050000 		.4byte	.LASF92
 835 0589 07       		.byte	0x7
 836 058a 4E       		.byte	0x4e
 837 058b A2000000 		.4byte	0xa2
 838 058f 31       		.byte	0x31
 839 0590 0A       		.uleb128 0xa
 840 0591 AE000000 		.4byte	.LASF93
 841 0595 07       		.byte	0x7
 842 0596 4F       		.byte	0x4f
 843 0597 A2000000 		.4byte	0xa2
 844 059b 32       		.byte	0x32
 845 059c 0A       		.uleb128 0xa
 846 059d 06050000 		.4byte	.LASF94
 847 05a1 07       		.byte	0x7
 848 05a2 50       		.byte	0x50
 849 05a3 A2000000 		.4byte	0xa2
 850 05a7 33       		.byte	0x33
 851 05a8 0A       		.uleb128 0xa
 852 05a9 2B070000 		.4byte	.LASF95
 853 05ad 07       		.byte	0x7
 854 05ae 51       		.byte	0x51
 855 05af A2000000 		.4byte	0xa2
 856 05b3 34       		.byte	0x34
 857 05b4 0A       		.uleb128 0xa
 858 05b5 AD0A0000 		.4byte	.LASF96
 859 05b9 07       		.byte	0x7
 860 05ba 52       		.byte	0x52
 861 05bb AD000000 		.4byte	0xad
 862 05bf 36       		.byte	0x36
 863 05c0 0A       		.uleb128 0xa
 864 05c1 EA030000 		.4byte	.LASF97
 865 05c5 07       		.byte	0x7
 866 05c6 53       		.byte	0x53
 867 05c7 AD000000 		.4byte	0xad
 868 05cb 38       		.byte	0x38
 869 05cc 0A       		.uleb128 0xa
 870 05cd 080B0000 		.4byte	.LASF98
 871 05d1 07       		.byte	0x7
 872 05d2 54       		.byte	0x54
 873 05d3 AD000000 		.4byte	0xad
 874 05d7 3A       		.byte	0x3a
 875 05d8 0A       		.uleb128 0xa
 876 05d9 030C0000 		.4byte	.LASF99
 877 05dd 07       		.byte	0x7
 878 05de 55       		.byte	0x55
 879 05df A2000000 		.4byte	0xa2
 880 05e3 3C       		.byte	0x3c
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccdNpiZW.s 			page 46


 881 05e4 0A       		.uleb128 0xa
 882 05e5 23040000 		.4byte	.LASF100
 883 05e9 07       		.byte	0x7
 884 05ea 56       		.byte	0x56
 885 05eb A2000000 		.4byte	0xa2
 886 05ef 3D       		.byte	0x3d
 887 05f0 0A       		.uleb128 0xa
 888 05f1 91090000 		.4byte	.LASF101
 889 05f5 07       		.byte	0x7
 890 05f6 57       		.byte	0x57
 891 05f7 A2000000 		.4byte	0xa2
 892 05fb 3E       		.byte	0x3e
 893 05fc 0A       		.uleb128 0xa
 894 05fd 82000000 		.4byte	.LASF102
 895 0601 07       		.byte	0x7
 896 0602 58       		.byte	0x58
 897 0603 A2000000 		.4byte	0xa2
 898 0607 3F       		.byte	0x3f
 899 0608 0A       		.uleb128 0xa
 900 0609 DF070000 		.4byte	.LASF103
 901 060d 07       		.byte	0x7
 902 060e 59       		.byte	0x59
 903 060f A2000000 		.4byte	0xa2
 904 0613 40       		.byte	0x40
 905 0614 0A       		.uleb128 0xa
 906 0615 8F040000 		.4byte	.LASF104
 907 0619 07       		.byte	0x7
 908 061a 5A       		.byte	0x5a
 909 061b A2000000 		.4byte	0xa2
 910 061f 41       		.byte	0x41
 911 0620 0A       		.uleb128 0xa
 912 0621 69060000 		.4byte	.LASF105
 913 0625 07       		.byte	0x7
 914 0626 5B       		.byte	0x5b
 915 0627 A2000000 		.4byte	0xa2
 916 062b 42       		.byte	0x42
 917 062c 0A       		.uleb128 0xa
 918 062d BB070000 		.4byte	.LASF106
 919 0631 07       		.byte	0x7
 920 0632 5C       		.byte	0x5c
 921 0633 A2000000 		.4byte	0xa2
 922 0637 43       		.byte	0x43
 923 0638 0A       		.uleb128 0xa
 924 0639 C1030000 		.4byte	.LASF107
 925 063d 07       		.byte	0x7
 926 063e 5D       		.byte	0x5d
 927 063f A2000000 		.4byte	0xa2
 928 0643 44       		.byte	0x44
 929 0644 0A       		.uleb128 0xa
 930 0645 D4090000 		.4byte	.LASF108
 931 0649 07       		.byte	0x7
 932 064a 5E       		.byte	0x5e
 933 064b CE000000 		.4byte	0xce
 934 064f 48       		.byte	0x48
 935 0650 0A       		.uleb128 0xa
 936 0651 9F030000 		.4byte	.LASF109
 937 0655 07       		.byte	0x7
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccdNpiZW.s 			page 47


 938 0656 5F       		.byte	0x5f
 939 0657 CE000000 		.4byte	0xce
 940 065b 4C       		.byte	0x4c
 941 065c 0A       		.uleb128 0xa
 942 065d 830C0000 		.4byte	.LASF110
 943 0661 07       		.byte	0x7
 944 0662 60       		.byte	0x60
 945 0663 A2000000 		.4byte	0xa2
 946 0667 50       		.byte	0x50
 947 0668 0A       		.uleb128 0xa
 948 0669 48020000 		.4byte	.LASF111
 949 066d 07       		.byte	0x7
 950 066e 61       		.byte	0x61
 951 066f A2000000 		.4byte	0xa2
 952 0673 51       		.byte	0x51
 953 0674 0A       		.uleb128 0xa
 954 0675 1D0B0000 		.4byte	.LASF112
 955 0679 07       		.byte	0x7
 956 067a 62       		.byte	0x62
 957 067b A2000000 		.4byte	0xa2
 958 067f 52       		.byte	0x52
 959 0680 0A       		.uleb128 0xa
 960 0681 710C0000 		.4byte	.LASF113
 961 0685 07       		.byte	0x7
 962 0686 63       		.byte	0x63
 963 0687 A2000000 		.4byte	0xa2
 964 068b 53       		.byte	0x53
 965 068c 0A       		.uleb128 0xa
 966 068d A9090000 		.4byte	.LASF114
 967 0691 07       		.byte	0x7
 968 0692 64       		.byte	0x64
 969 0693 A2000000 		.4byte	0xa2
 970 0697 54       		.byte	0x54
 971 0698 0A       		.uleb128 0xa
 972 0699 E30A0000 		.4byte	.LASF115
 973 069d 07       		.byte	0x7
 974 069e 65       		.byte	0x65
 975 069f A2000000 		.4byte	0xa2
 976 06a3 55       		.byte	0x55
 977 06a4 0A       		.uleb128 0xa
 978 06a5 6D0A0000 		.4byte	.LASF116
 979 06a9 07       		.byte	0x7
 980 06aa 66       		.byte	0x66
 981 06ab A2000000 		.4byte	0xa2
 982 06af 56       		.byte	0x56
 983 06b0 0A       		.uleb128 0xa
 984 06b1 A0050000 		.4byte	.LASF117
 985 06b5 07       		.byte	0x7
 986 06b6 67       		.byte	0x67
 987 06b7 A2000000 		.4byte	0xa2
 988 06bb 57       		.byte	0x57
 989 06bc 0A       		.uleb128 0xa
 990 06bd 2F000000 		.4byte	.LASF118
 991 06c1 07       		.byte	0x7
 992 06c2 68       		.byte	0x68
 993 06c3 A2000000 		.4byte	0xa2
 994 06c7 58       		.byte	0x58
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccdNpiZW.s 			page 48


 995 06c8 0A       		.uleb128 0xa
 996 06c9 F5080000 		.4byte	.LASF119
 997 06cd 07       		.byte	0x7
 998 06ce 69       		.byte	0x69
 999 06cf A2000000 		.4byte	0xa2
 1000 06d3 59       		.byte	0x59
 1001 06d4 0A       		.uleb128 0xa
 1002 06d5 14070000 		.4byte	.LASF120
 1003 06d9 07       		.byte	0x7
 1004 06da 6E       		.byte	0x6e
 1005 06db B8000000 		.4byte	0xb8
 1006 06df 5A       		.byte	0x5a
 1007 06e0 0A       		.uleb128 0xa
 1008 06e1 8C0A0000 		.4byte	.LASF121
 1009 06e5 07       		.byte	0x7
 1010 06e6 6F       		.byte	0x6f
 1011 06e7 B8000000 		.4byte	0xb8
 1012 06eb 5C       		.byte	0x5c
 1013 06ec 0A       		.uleb128 0xa
 1014 06ed C6010000 		.4byte	.LASF122
 1015 06f1 07       		.byte	0x7
 1016 06f2 70       		.byte	0x70
 1017 06f3 A2000000 		.4byte	0xa2
 1018 06f7 5E       		.byte	0x5e
 1019 06f8 0A       		.uleb128 0xa
 1020 06f9 6E040000 		.4byte	.LASF123
 1021 06fd 07       		.byte	0x7
 1022 06fe 71       		.byte	0x71
 1023 06ff A2000000 		.4byte	0xa2
 1024 0703 5F       		.byte	0x5f
 1025 0704 0A       		.uleb128 0xa
 1026 0705 94070000 		.4byte	.LASF124
 1027 0709 07       		.byte	0x7
 1028 070a 72       		.byte	0x72
 1029 070b A2000000 		.4byte	0xa2
 1030 070f 60       		.byte	0x60
 1031 0710 0A       		.uleb128 0xa
 1032 0711 10080000 		.4byte	.LASF125
 1033 0715 07       		.byte	0x7
 1034 0716 73       		.byte	0x73
 1035 0717 CE000000 		.4byte	0xce
 1036 071b 64       		.byte	0x64
 1037 071c 0A       		.uleb128 0xa
 1038 071d 01020000 		.4byte	.LASF126
 1039 0721 07       		.byte	0x7
 1040 0722 76       		.byte	0x76
 1041 0723 B8000000 		.4byte	0xb8
 1042 0727 68       		.byte	0x68
 1043 0728 0A       		.uleb128 0xa
 1044 0729 2F050000 		.4byte	.LASF127
 1045 072d 07       		.byte	0x7
 1046 072e 77       		.byte	0x77
 1047 072f B8000000 		.4byte	0xb8
 1048 0733 6A       		.byte	0x6a
 1049 0734 0A       		.uleb128 0xa
 1050 0735 B4050000 		.4byte	.LASF128
 1051 0739 07       		.byte	0x7
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccdNpiZW.s 			page 49


 1052 073a 78       		.byte	0x78
 1053 073b B8000000 		.4byte	0xb8
 1054 073f 6C       		.byte	0x6c
 1055 0740 0A       		.uleb128 0xa
 1056 0741 0A060000 		.4byte	.LASF129
 1057 0745 07       		.byte	0x7
 1058 0746 79       		.byte	0x79
 1059 0747 B8000000 		.4byte	0xb8
 1060 074b 6E       		.byte	0x6e
 1061 074c 0A       		.uleb128 0xa
 1062 074d 5E090000 		.4byte	.LASF130
 1063 0751 07       		.byte	0x7
 1064 0752 7B       		.byte	0x7b
 1065 0753 A2000000 		.4byte	0xa2
 1066 0757 70       		.byte	0x70
 1067 0758 0A       		.uleb128 0xa
 1068 0759 B4020000 		.4byte	.LASF131
 1069 075d 07       		.byte	0x7
 1070 075e 7C       		.byte	0x7c
 1071 075f A2000000 		.4byte	0xa2
 1072 0763 71       		.byte	0x71
 1073 0764 0A       		.uleb128 0xa
 1074 0765 460C0000 		.4byte	.LASF132
 1075 0769 07       		.byte	0x7
 1076 076a 7D       		.byte	0x7d
 1077 076b A2000000 		.4byte	0xa2
 1078 076f 72       		.byte	0x72
 1079 0770 0A       		.uleb128 0xa
 1080 0771 49070000 		.4byte	.LASF133
 1081 0775 07       		.byte	0x7
 1082 0776 7E       		.byte	0x7e
 1083 0777 A2000000 		.4byte	0xa2
 1084 077b 73       		.byte	0x73
 1085 077c 0A       		.uleb128 0xa
 1086 077d B9090000 		.4byte	.LASF134
 1087 0781 07       		.byte	0x7
 1088 0782 80       		.byte	0x80
 1089 0783 B8000000 		.4byte	0xb8
 1090 0787 74       		.byte	0x74
 1091 0788 0A       		.uleb128 0xa
 1092 0789 280A0000 		.4byte	.LASF135
 1093 078d 07       		.byte	0x7
 1094 078e 81       		.byte	0x81
 1095 078f B8000000 		.4byte	0xb8
 1096 0793 76       		.byte	0x76
 1097 0794 0A       		.uleb128 0xa
 1098 0795 FC030000 		.4byte	.LASF136
 1099 0799 07       		.byte	0x7
 1100 079a 82       		.byte	0x82
 1101 079b B8000000 		.4byte	0xb8
 1102 079f 78       		.byte	0x78
 1103 07a0 0A       		.uleb128 0xa
 1104 07a1 D2000000 		.4byte	.LASF137
 1105 07a5 07       		.byte	0x7
 1106 07a6 83       		.byte	0x83
 1107 07a7 B8000000 		.4byte	0xb8
 1108 07ab 7A       		.byte	0x7a
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccdNpiZW.s 			page 50


 1109 07ac 0A       		.uleb128 0xa
 1110 07ad AF0B0000 		.4byte	.LASF138
 1111 07b1 07       		.byte	0x7
 1112 07b2 86       		.byte	0x86
 1113 07b3 A2000000 		.4byte	0xa2
 1114 07b7 7C       		.byte	0x7c
 1115 07b8 0A       		.uleb128 0xa
 1116 07b9 D20A0000 		.4byte	.LASF139
 1117 07bd 07       		.byte	0x7
 1118 07be 87       		.byte	0x87
 1119 07bf A2000000 		.4byte	0xa2
 1120 07c3 7D       		.byte	0x7d
 1121 07c4 0A       		.uleb128 0xa
 1122 07c5 43000000 		.4byte	.LASF140
 1123 07c9 07       		.byte	0x7
 1124 07ca 88       		.byte	0x88
 1125 07cb A2000000 		.4byte	0xa2
 1126 07cf 7E       		.byte	0x7e
 1127 07d0 0A       		.uleb128 0xa
 1128 07d1 5A040000 		.4byte	.LASF141
 1129 07d5 07       		.byte	0x7
 1130 07d6 89       		.byte	0x89
 1131 07d7 A2000000 		.4byte	0xa2
 1132 07db 7F       		.byte	0x7f
 1133 07dc 0A       		.uleb128 0xa
 1134 07dd F2040000 		.4byte	.LASF142
 1135 07e1 07       		.byte	0x7
 1136 07e2 8A       		.byte	0x8a
 1137 07e3 A2000000 		.4byte	0xa2
 1138 07e7 80       		.byte	0x80
 1139 07e8 0A       		.uleb128 0xa
 1140 07e9 A0060000 		.4byte	.LASF143
 1141 07ed 07       		.byte	0x7
 1142 07ee 8D       		.byte	0x8d
 1143 07ef CE000000 		.4byte	0xce
 1144 07f3 84       		.byte	0x84
 1145 07f4 0A       		.uleb128 0xa
 1146 07f5 9A010000 		.4byte	.LASF144
 1147 07f9 07       		.byte	0x7
 1148 07fa 8E       		.byte	0x8e
 1149 07fb CE000000 		.4byte	0xce
 1150 07ff 88       		.byte	0x88
 1151 0800 0A       		.uleb128 0xa
 1152 0801 9A0B0000 		.4byte	.LASF145
 1153 0805 07       		.byte	0x7
 1154 0806 8F       		.byte	0x8f
 1155 0807 CE000000 		.4byte	0xce
 1156 080b 8C       		.byte	0x8c
 1157 080c 0A       		.uleb128 0xa
 1158 080d E9060000 		.4byte	.LASF146
 1159 0811 07       		.byte	0x7
 1160 0812 90       		.byte	0x90
 1161 0813 CE000000 		.4byte	0xce
 1162 0817 90       		.byte	0x90
 1163 0818 0A       		.uleb128 0xa
 1164 0819 DD040000 		.4byte	.LASF147
 1165 081d 07       		.byte	0x7
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccdNpiZW.s 			page 51


 1166 081e 91       		.byte	0x91
 1167 081f CE000000 		.4byte	0xce
 1168 0823 94       		.byte	0x94
 1169 0824 0A       		.uleb128 0xa
 1170 0825 8A060000 		.4byte	.LASF148
 1171 0829 07       		.byte	0x7
 1172 082a 92       		.byte	0x92
 1173 082b CE000000 		.4byte	0xce
 1174 082f 98       		.byte	0x98
 1175 0830 0A       		.uleb128 0xa
 1176 0831 DE0B0000 		.4byte	.LASF149
 1177 0835 07       		.byte	0x7
 1178 0836 93       		.byte	0x93
 1179 0837 CE000000 		.4byte	0xce
 1180 083b 9C       		.byte	0x9c
 1181 083c 0A       		.uleb128 0xa
 1182 083d 11020000 		.4byte	.LASF150
 1183 0841 07       		.byte	0x7
 1184 0842 94       		.byte	0x94
 1185 0843 CE000000 		.4byte	0xce
 1186 0847 A0       		.byte	0xa0
 1187 0848 0A       		.uleb128 0xa
 1188 0849 0B030000 		.4byte	.LASF151
 1189 084d 07       		.byte	0x7
 1190 084e 95       		.byte	0x95
 1191 084f B8000000 		.4byte	0xb8
 1192 0853 A4       		.byte	0xa4
 1193 0854 0A       		.uleb128 0xa
 1194 0855 75060000 		.4byte	.LASF152
 1195 0859 07       		.byte	0x7
 1196 085a 96       		.byte	0x96
 1197 085b B8000000 		.4byte	0xb8
 1198 085f A6       		.byte	0xa6
 1199 0860 0A       		.uleb128 0xa
 1200 0861 59080000 		.4byte	.LASF153
 1201 0865 07       		.byte	0x7
 1202 0866 97       		.byte	0x97
 1203 0867 B8000000 		.4byte	0xb8
 1204 086b A8       		.byte	0xa8
 1205 086c 0A       		.uleb128 0xa
 1206 086d 0F0A0000 		.4byte	.LASF154
 1207 0871 07       		.byte	0x7
 1208 0872 98       		.byte	0x98
 1209 0873 B8000000 		.4byte	0xb8
 1210 0877 AA       		.byte	0xaa
 1211 0878 0A       		.uleb128 0xa
 1212 0879 C3050000 		.4byte	.LASF155
 1213 087d 07       		.byte	0x7
 1214 087e 99       		.byte	0x99
 1215 087f B8000000 		.4byte	0xb8
 1216 0883 AC       		.byte	0xac
 1217 0884 0A       		.uleb128 0xa
 1218 0885 60070000 		.4byte	.LASF156
 1219 0889 07       		.byte	0x7
 1220 088a 9A       		.byte	0x9a
 1221 088b B8000000 		.4byte	0xb8
 1222 088f AE       		.byte	0xae
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccdNpiZW.s 			page 52


 1223 0890 0A       		.uleb128 0xa
 1224 0891 950A0000 		.4byte	.LASF157
 1225 0895 07       		.byte	0x7
 1226 0896 9D       		.byte	0x9d
 1227 0897 B8000000 		.4byte	0xb8
 1228 089b B0       		.byte	0xb0
 1229 089c 0A       		.uleb128 0xa
 1230 089d 56000000 		.4byte	.LASF158
 1231 08a1 07       		.byte	0x7
 1232 08a2 9E       		.byte	0x9e
 1233 08a3 CE000000 		.4byte	0xce
 1234 08a7 B4       		.byte	0xb4
 1235 08a8 00       		.byte	0
 1236 08a9 03       		.uleb128 0x3
 1237 08aa 38060000 		.4byte	.LASF159
 1238 08ae 07       		.byte	0x7
 1239 08af 9F       		.byte	0x9f
 1240 08b0 98040000 		.4byte	0x498
 1241 08b4 0D       		.uleb128 0xd
 1242 08b5 28050000 		.4byte	.LASF160
 1243 08b9 08       		.byte	0x8
 1244 08ba F601     		.2byte	0x1f6
 1245 08bc C0080000 		.4byte	0x8c0
 1246 08c0 02       		.uleb128 0x2
 1247 08c1 01       		.byte	0x1
 1248 08c2 08       		.byte	0x8
 1249 08c3 FE090000 		.4byte	.LASF161
 1250 08c7 02       		.uleb128 0x2
 1251 08c8 04       		.byte	0x4
 1252 08c9 04       		.byte	0x4
 1253 08ca 0A080000 		.4byte	.LASF162
 1254 08ce 02       		.uleb128 0x2
 1255 08cf 08       		.byte	0x8
 1256 08d0 04       		.byte	0x4
 1257 08d1 F5030000 		.4byte	.LASF163
 1258 08d5 0F       		.uleb128 0xf
 1259 08d6 01       		.byte	0x1
 1260 08d7 3E000000 		.4byte	0x3e
 1261 08db 01       		.byte	0x1
 1262 08dc 1304     		.2byte	0x413
 1263 08de FB080000 		.4byte	0x8fb
 1264 08e2 10       		.uleb128 0x10
 1265 08e3 43030000 		.4byte	.LASF164
 1266 08e7 00       		.byte	0
 1267 08e8 10       		.uleb128 0x10
 1268 08e9 A6080000 		.4byte	.LASF165
 1269 08ed 01       		.byte	0x1
 1270 08ee 10       		.uleb128 0x10
 1271 08ef D2030000 		.4byte	.LASF166
 1272 08f3 02       		.byte	0x2
 1273 08f4 10       		.uleb128 0x10
 1274 08f5 C40B0000 		.4byte	.LASF167
 1275 08f9 03       		.byte	0x3
 1276 08fa 00       		.byte	0
 1277 08fb 0D       		.uleb128 0xd
 1278 08fc C9020000 		.4byte	.LASF168
 1279 0900 01       		.byte	0x1
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccdNpiZW.s 			page 53


 1280 0901 1804     		.2byte	0x418
 1281 0903 D5080000 		.4byte	0x8d5
 1282 0907 0F       		.uleb128 0xf
 1283 0908 01       		.byte	0x1
 1284 0909 3E000000 		.4byte	0x3e
 1285 090d 01       		.byte	0x1
 1286 090e 9404     		.2byte	0x494
 1287 0910 2D090000 		.4byte	0x92d
 1288 0914 10       		.uleb128 0x10
 1289 0915 FE060000 		.4byte	.LASF169
 1290 0919 00       		.byte	0
 1291 091a 10       		.uleb128 0x10
 1292 091b EC010000 		.4byte	.LASF170
 1293 091f 01       		.byte	0x1
 1294 0920 10       		.uleb128 0x10
 1295 0921 DB080000 		.4byte	.LASF171
 1296 0925 02       		.byte	0x2
 1297 0926 10       		.uleb128 0x10
 1298 0927 5B030000 		.4byte	.LASF172
 1299 092b 04       		.byte	0x4
 1300 092c 00       		.byte	0
 1301 092d 11       		.uleb128 0x11
 1302 092e 78       		.byte	0x78
 1303 092f 01       		.byte	0x1
 1304 0930 0205     		.2byte	0x502
 1305 0932 FA090000 		.4byte	0x9fa
 1306 0936 12       		.uleb128 0x12
 1307 0937 680A0000 		.4byte	.LASF173
 1308 093b 01       		.byte	0x1
 1309 093c 0405     		.2byte	0x504
 1310 093e CE000000 		.4byte	0xce
 1311 0942 00       		.byte	0
 1312 0943 12       		.uleb128 0x12
 1313 0944 2D0B0000 		.4byte	.LASF174
 1314 0948 01       		.byte	0x1
 1315 0949 0505     		.2byte	0x505
 1316 094b CE000000 		.4byte	0xce
 1317 094f 04       		.byte	0x4
 1318 0950 12       		.uleb128 0x12
 1319 0951 3A040000 		.4byte	.LASF175
 1320 0955 01       		.byte	0x1
 1321 0956 0605     		.2byte	0x506
 1322 0958 CE000000 		.4byte	0xce
 1323 095c 08       		.byte	0x8
 1324 095d 12       		.uleb128 0x12
 1325 095e 3C070000 		.4byte	.LASF176
 1326 0962 01       		.byte	0x1
 1327 0963 0705     		.2byte	0x507
 1328 0965 CE000000 		.4byte	0xce
 1329 0969 0C       		.byte	0xc
 1330 096a 12       		.uleb128 0x12
 1331 096b E2050000 		.4byte	.LASF177
 1332 096f 01       		.byte	0x1
 1333 0970 0805     		.2byte	0x508
 1334 0972 CE000000 		.4byte	0xce
 1335 0976 10       		.byte	0x10
 1336 0977 12       		.uleb128 0x12
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccdNpiZW.s 			page 54


 1337 0978 FE0A0000 		.4byte	.LASF178
 1338 097c 01       		.byte	0x1
 1339 097d 0905     		.2byte	0x509
 1340 097f FB080000 		.4byte	0x8fb
 1341 0983 14       		.byte	0x14
 1342 0984 12       		.uleb128 0x12
 1343 0985 97080000 		.4byte	.LASF179
 1344 0989 01       		.byte	0x1
 1345 098a 0A05     		.2byte	0x50a
 1346 098c CE000000 		.4byte	0xce
 1347 0990 18       		.byte	0x18
 1348 0991 12       		.uleb128 0x12
 1349 0992 48060000 		.4byte	.LASF180
 1350 0996 01       		.byte	0x1
 1351 0997 0B05     		.2byte	0x50b
 1352 0999 FA090000 		.4byte	0x9fa
 1353 099d 1C       		.byte	0x1c
 1354 099e 12       		.uleb128 0x12
 1355 099f 1D090000 		.4byte	.LASF181
 1356 09a3 01       		.byte	0x1
 1357 09a4 0C05     		.2byte	0x50c
 1358 09a6 CE000000 		.4byte	0xce
 1359 09aa 5C       		.byte	0x5c
 1360 09ab 12       		.uleb128 0x12
 1361 09ac C6000000 		.4byte	.LASF182
 1362 09b0 01       		.byte	0x1
 1363 09b1 0D05     		.2byte	0x50d
 1364 09b3 CE000000 		.4byte	0xce
 1365 09b7 60       		.byte	0x60
 1366 09b8 12       		.uleb128 0x12
 1367 09b9 35030000 		.4byte	.LASF183
 1368 09bd 01       		.byte	0x1
 1369 09be 0E05     		.2byte	0x50e
 1370 09c0 CE000000 		.4byte	0xce
 1371 09c4 64       		.byte	0x64
 1372 09c5 12       		.uleb128 0x12
 1373 09c6 13090000 		.4byte	.LASF184
 1374 09ca 01       		.byte	0x1
 1375 09cb 0F05     		.2byte	0x50f
 1376 09cd CE000000 		.4byte	0xce
 1377 09d1 68       		.byte	0x68
 1378 09d2 12       		.uleb128 0x12
 1379 09d3 120C0000 		.4byte	.LASF185
 1380 09d7 01       		.byte	0x1
 1381 09d8 1005     		.2byte	0x510
 1382 09da CE000000 		.4byte	0xce
 1383 09de 6C       		.byte	0x6c
 1384 09df 12       		.uleb128 0x12
 1385 09e0 6E070000 		.4byte	.LASF186
 1386 09e4 01       		.byte	0x1
 1387 09e5 1105     		.2byte	0x511
 1388 09e7 0A0A0000 		.4byte	0xa0a
 1389 09eb 70       		.byte	0x70
 1390 09ec 12       		.uleb128 0x12
 1391 09ed E6090000 		.4byte	.LASF187
 1392 09f1 01       		.byte	0x1
 1393 09f2 1205     		.2byte	0x512
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccdNpiZW.s 			page 55


 1394 09f4 CE000000 		.4byte	0xce
 1395 09f8 74       		.byte	0x74
 1396 09f9 00       		.byte	0
 1397 09fa 07       		.uleb128 0x7
 1398 09fb CE000000 		.4byte	0xce
 1399 09ff 0A0A0000 		.4byte	0xa0a
 1400 0a03 08       		.uleb128 0x8
 1401 0a04 D9000000 		.4byte	0xd9
 1402 0a08 0F       		.byte	0xf
 1403 0a09 00       		.byte	0
 1404 0a0a 02       		.uleb128 0x2
 1405 0a0b 01       		.byte	0x1
 1406 0a0c 02       		.byte	0x2
 1407 0a0d BF080000 		.4byte	.LASF188
 1408 0a11 0D       		.uleb128 0xd
 1409 0a12 86020000 		.4byte	.LASF189
 1410 0a16 01       		.byte	0x1
 1411 0a17 1305     		.2byte	0x513
 1412 0a19 2D090000 		.4byte	0x92d
 1413 0a1d 0E       		.uleb128 0xe
 1414 0a1e 14       		.byte	0x14
 1415 0a1f 09       		.byte	0x9
 1416 0a20 3B       		.byte	0x3b
 1417 0a21 620A0000 		.4byte	0xa62
 1418 0a25 0A       		.uleb128 0xa
 1419 0a26 53060000 		.4byte	.LASF190
 1420 0a2a 09       		.byte	0x9
 1421 0a2b 3D       		.byte	0x3d
 1422 0a2c CE000000 		.4byte	0xce
 1423 0a30 00       		.byte	0
 1424 0a31 0A       		.uleb128 0xa
 1425 0a32 2C060000 		.4byte	.LASF191
 1426 0a36 09       		.byte	0x9
 1427 0a37 3E       		.byte	0x3e
 1428 0a38 CE000000 		.4byte	0xce
 1429 0a3c 04       		.byte	0x4
 1430 0a3d 0A       		.uleb128 0xa
 1431 0a3e 9F040000 		.4byte	.LASF192
 1432 0a42 09       		.byte	0x9
 1433 0a43 3F       		.byte	0x3f
 1434 0a44 620A0000 		.4byte	0xa62
 1435 0a48 08       		.byte	0x8
 1436 0a49 0A       		.uleb128 0xa
 1437 0a4a 810A0000 		.4byte	.LASF193
 1438 0a4e 09       		.byte	0x9
 1439 0a4f 40       		.byte	0x40
 1440 0a50 CE000000 		.4byte	0xce
 1441 0a54 0C       		.byte	0xc
 1442 0a55 0A       		.uleb128 0xa
 1443 0a56 EC020000 		.4byte	.LASF194
 1444 0a5a 09       		.byte	0x9
 1445 0a5b 45       		.byte	0x45
 1446 0a5c CE000000 		.4byte	0xce
 1447 0a60 10       		.byte	0x10
 1448 0a61 00       		.byte	0
 1449 0a62 13       		.uleb128 0x13
 1450 0a63 04       		.byte	0x4
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccdNpiZW.s 			page 56


 1451 0a64 680A0000 		.4byte	0xa68
 1452 0a68 06       		.uleb128 0x6
 1453 0a69 110A0000 		.4byte	0xa11
 1454 0a6d 03       		.uleb128 0x3
 1455 0a6e 4C0B0000 		.4byte	.LASF195
 1456 0a72 09       		.byte	0x9
 1457 0a73 48       		.byte	0x48
 1458 0a74 1D0A0000 		.4byte	0xa1d
 1459 0a78 14       		.uleb128 0x14
 1460 0a79 21080000 		.4byte	.LASF204
 1461 0a7d 01       		.byte	0x1
 1462 0a7e 1206     		.2byte	0x612
 1463 0a80 CE000000 		.4byte	0xce
 1464 0a84 00000000 		.4byte	.LFB170
 1465 0a88 1A000000 		.4byte	.LFE170-.LFB170
 1466 0a8c 01       		.uleb128 0x1
 1467 0a8d 9C       		.byte	0x9c
 1468 0a8e A20A0000 		.4byte	0xaa2
 1469 0a92 15       		.uleb128 0x15
 1470 0a93 D8060000 		.4byte	.LASF196
 1471 0a97 01       		.byte	0x1
 1472 0a98 1206     		.2byte	0x612
 1473 0a9a A20A0000 		.4byte	0xaa2
 1474 0a9e 02       		.uleb128 0x2
 1475 0a9f 91       		.byte	0x91
 1476 0aa0 74       		.sleb128 -12
 1477 0aa1 00       		.byte	0
 1478 0aa2 13       		.uleb128 0x13
 1479 0aa3 04       		.byte	0x4
 1480 0aa4 A80A0000 		.4byte	0xaa8
 1481 0aa8 06       		.uleb128 0x6
 1482 0aa9 85040000 		.4byte	0x485
 1483 0aad 16       		.uleb128 0x16
 1484 0aae 00000000 		.4byte	.LASF205
 1485 0ab2 01       		.byte	0x1
 1486 0ab3 2F06     		.2byte	0x62f
 1487 0ab5 00000000 		.4byte	.LFB171
 1488 0ab9 34000000 		.4byte	.LFE171-.LFB171
 1489 0abd 01       		.uleb128 0x1
 1490 0abe 9C       		.byte	0x9c
 1491 0abf E20A0000 		.4byte	0xae2
 1492 0ac3 15       		.uleb128 0x15
 1493 0ac4 D8060000 		.4byte	.LASF196
 1494 0ac8 01       		.byte	0x1
 1495 0ac9 2F06     		.2byte	0x62f
 1496 0acb E20A0000 		.4byte	0xae2
 1497 0acf 02       		.uleb128 0x2
 1498 0ad0 91       		.byte	0x91
 1499 0ad1 74       		.sleb128 -12
 1500 0ad2 15       		.uleb128 0x15
 1501 0ad3 1D090000 		.4byte	.LASF181
 1502 0ad7 01       		.byte	0x1
 1503 0ad8 2F06     		.2byte	0x62f
 1504 0ada CE000000 		.4byte	0xce
 1505 0ade 02       		.uleb128 0x2
 1506 0adf 91       		.byte	0x91
 1507 0ae0 70       		.sleb128 -16
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccdNpiZW.s 			page 57


 1508 0ae1 00       		.byte	0
 1509 0ae2 13       		.uleb128 0x13
 1510 0ae3 04       		.byte	0x4
 1511 0ae4 85040000 		.4byte	0x485
 1512 0ae8 17       		.uleb128 0x17
 1513 0ae9 6A000000 		.4byte	.LASF206
 1514 0aed 02       		.byte	0x2
 1515 0aee 40       		.byte	0x40
 1516 0aef 00000000 		.4byte	.LFB271
 1517 0af3 28000000 		.4byte	.LFE271-.LFB271
 1518 0af7 01       		.uleb128 0x1
 1519 0af8 9C       		.byte	0x9c
 1520 0af9 0C0B0000 		.4byte	0xb0c
 1521 0afd 18       		.uleb128 0x18
 1522 0afe 2E040000 		.4byte	.LASF207
 1523 0b02 02       		.byte	0x2
 1524 0b03 42       		.byte	0x42
 1525 0b04 CE000000 		.4byte	0xce
 1526 0b08 02       		.uleb128 0x2
 1527 0b09 91       		.byte	0x91
 1528 0b0a 74       		.sleb128 -12
 1529 0b0b 00       		.byte	0
 1530 0b0c 19       		.uleb128 0x19
 1531 0b0d 27020000 		.4byte	.LASF197
 1532 0b11 0A       		.byte	0xa
 1533 0b12 F907     		.2byte	0x7f9
 1534 0b14 180B0000 		.4byte	0xb18
 1535 0b18 05       		.uleb128 0x5
 1536 0b19 C3000000 		.4byte	0xc3
 1537 0b1d 1A       		.uleb128 0x1a
 1538 0b1e 45080000 		.4byte	.LASF198
 1539 0b22 07       		.byte	0x7
 1540 0b23 A7       		.byte	0xa7
 1541 0b24 280B0000 		.4byte	0xb28
 1542 0b28 13       		.uleb128 0x13
 1543 0b29 04       		.byte	0x4
 1544 0b2a 2E0B0000 		.4byte	0xb2e
 1545 0b2e 06       		.uleb128 0x6
 1546 0b2f A9080000 		.4byte	0x8a9
 1547 0b33 19       		.uleb128 0x19
 1548 0b34 34020000 		.4byte	.LASF199
 1549 0b38 09       		.byte	0x9
 1550 0b39 6001     		.2byte	0x160
 1551 0b3b CE000000 		.4byte	0xce
 1552 0b3f 07       		.uleb128 0x7
 1553 0b40 4F0B0000 		.4byte	0xb4f
 1554 0b44 4F0B0000 		.4byte	0xb4f
 1555 0b48 08       		.uleb128 0x8
 1556 0b49 D9000000 		.4byte	0xd9
 1557 0b4d 00       		.byte	0
 1558 0b4e 00       		.byte	0
 1559 0b4f 06       		.uleb128 0x6
 1560 0b50 6D0A0000 		.4byte	0xa6d
 1561 0b54 19       		.uleb128 0x19
 1562 0b55 D1050000 		.4byte	.LASF200
 1563 0b59 09       		.byte	0x9
 1564 0b5a 6401     		.2byte	0x164
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccdNpiZW.s 			page 58


 1565 0b5c 600B0000 		.4byte	0xb60
 1566 0b60 06       		.uleb128 0x6
 1567 0b61 3F0B0000 		.4byte	0xb3f
 1568 0b65 00       		.byte	0
 1569              		.section	.debug_abbrev,"",%progbits
 1570              	.Ldebug_abbrev0:
 1571 0000 01       		.uleb128 0x1
 1572 0001 11       		.uleb128 0x11
 1573 0002 01       		.byte	0x1
 1574 0003 25       		.uleb128 0x25
 1575 0004 0E       		.uleb128 0xe
 1576 0005 13       		.uleb128 0x13
 1577 0006 0B       		.uleb128 0xb
 1578 0007 03       		.uleb128 0x3
 1579 0008 0E       		.uleb128 0xe
 1580 0009 1B       		.uleb128 0x1b
 1581 000a 0E       		.uleb128 0xe
 1582 000b 55       		.uleb128 0x55
 1583 000c 17       		.uleb128 0x17
 1584 000d 11       		.uleb128 0x11
 1585 000e 01       		.uleb128 0x1
 1586 000f 10       		.uleb128 0x10
 1587 0010 17       		.uleb128 0x17
 1588 0011 00       		.byte	0
 1589 0012 00       		.byte	0
 1590 0013 02       		.uleb128 0x2
 1591 0014 24       		.uleb128 0x24
 1592 0015 00       		.byte	0
 1593 0016 0B       		.uleb128 0xb
 1594 0017 0B       		.uleb128 0xb
 1595 0018 3E       		.uleb128 0x3e
 1596 0019 0B       		.uleb128 0xb
 1597 001a 03       		.uleb128 0x3
 1598 001b 0E       		.uleb128 0xe
 1599 001c 00       		.byte	0
 1600 001d 00       		.byte	0
 1601 001e 03       		.uleb128 0x3
 1602 001f 16       		.uleb128 0x16
 1603 0020 00       		.byte	0
 1604 0021 03       		.uleb128 0x3
 1605 0022 0E       		.uleb128 0xe
 1606 0023 3A       		.uleb128 0x3a
 1607 0024 0B       		.uleb128 0xb
 1608 0025 3B       		.uleb128 0x3b
 1609 0026 0B       		.uleb128 0xb
 1610 0027 49       		.uleb128 0x49
 1611 0028 13       		.uleb128 0x13
 1612 0029 00       		.byte	0
 1613 002a 00       		.byte	0
 1614 002b 04       		.uleb128 0x4
 1615 002c 24       		.uleb128 0x24
 1616 002d 00       		.byte	0
 1617 002e 0B       		.uleb128 0xb
 1618 002f 0B       		.uleb128 0xb
 1619 0030 3E       		.uleb128 0x3e
 1620 0031 0B       		.uleb128 0xb
 1621 0032 03       		.uleb128 0x3
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccdNpiZW.s 			page 59


 1622 0033 08       		.uleb128 0x8
 1623 0034 00       		.byte	0
 1624 0035 00       		.byte	0
 1625 0036 05       		.uleb128 0x5
 1626 0037 35       		.uleb128 0x35
 1627 0038 00       		.byte	0
 1628 0039 49       		.uleb128 0x49
 1629 003a 13       		.uleb128 0x13
 1630 003b 00       		.byte	0
 1631 003c 00       		.byte	0
 1632 003d 06       		.uleb128 0x6
 1633 003e 26       		.uleb128 0x26
 1634 003f 00       		.byte	0
 1635 0040 49       		.uleb128 0x49
 1636 0041 13       		.uleb128 0x13
 1637 0042 00       		.byte	0
 1638 0043 00       		.byte	0
 1639 0044 07       		.uleb128 0x7
 1640 0045 01       		.uleb128 0x1
 1641 0046 01       		.byte	0x1
 1642 0047 49       		.uleb128 0x49
 1643 0048 13       		.uleb128 0x13
 1644 0049 01       		.uleb128 0x1
 1645 004a 13       		.uleb128 0x13
 1646 004b 00       		.byte	0
 1647 004c 00       		.byte	0
 1648 004d 08       		.uleb128 0x8
 1649 004e 21       		.uleb128 0x21
 1650 004f 00       		.byte	0
 1651 0050 49       		.uleb128 0x49
 1652 0051 13       		.uleb128 0x13
 1653 0052 2F       		.uleb128 0x2f
 1654 0053 0B       		.uleb128 0xb
 1655 0054 00       		.byte	0
 1656 0055 00       		.byte	0
 1657 0056 09       		.uleb128 0x9
 1658 0057 13       		.uleb128 0x13
 1659 0058 01       		.byte	0x1
 1660 0059 0B       		.uleb128 0xb
 1661 005a 05       		.uleb128 0x5
 1662 005b 3A       		.uleb128 0x3a
 1663 005c 0B       		.uleb128 0xb
 1664 005d 3B       		.uleb128 0x3b
 1665 005e 0B       		.uleb128 0xb
 1666 005f 01       		.uleb128 0x1
 1667 0060 13       		.uleb128 0x13
 1668 0061 00       		.byte	0
 1669 0062 00       		.byte	0
 1670 0063 0A       		.uleb128 0xa
 1671 0064 0D       		.uleb128 0xd
 1672 0065 00       		.byte	0
 1673 0066 03       		.uleb128 0x3
 1674 0067 0E       		.uleb128 0xe
 1675 0068 3A       		.uleb128 0x3a
 1676 0069 0B       		.uleb128 0xb
 1677 006a 3B       		.uleb128 0x3b
 1678 006b 0B       		.uleb128 0xb
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccdNpiZW.s 			page 60


 1679 006c 49       		.uleb128 0x49
 1680 006d 13       		.uleb128 0x13
 1681 006e 38       		.uleb128 0x38
 1682 006f 0B       		.uleb128 0xb
 1683 0070 00       		.byte	0
 1684 0071 00       		.byte	0
 1685 0072 0B       		.uleb128 0xb
 1686 0073 0D       		.uleb128 0xd
 1687 0074 00       		.byte	0
 1688 0075 03       		.uleb128 0x3
 1689 0076 0E       		.uleb128 0xe
 1690 0077 3A       		.uleb128 0x3a
 1691 0078 0B       		.uleb128 0xb
 1692 0079 3B       		.uleb128 0x3b
 1693 007a 0B       		.uleb128 0xb
 1694 007b 49       		.uleb128 0x49
 1695 007c 13       		.uleb128 0x13
 1696 007d 38       		.uleb128 0x38
 1697 007e 05       		.uleb128 0x5
 1698 007f 00       		.byte	0
 1699 0080 00       		.byte	0
 1700 0081 0C       		.uleb128 0xc
 1701 0082 21       		.uleb128 0x21
 1702 0083 00       		.byte	0
 1703 0084 49       		.uleb128 0x49
 1704 0085 13       		.uleb128 0x13
 1705 0086 2F       		.uleb128 0x2f
 1706 0087 05       		.uleb128 0x5
 1707 0088 00       		.byte	0
 1708 0089 00       		.byte	0
 1709 008a 0D       		.uleb128 0xd
 1710 008b 16       		.uleb128 0x16
 1711 008c 00       		.byte	0
 1712 008d 03       		.uleb128 0x3
 1713 008e 0E       		.uleb128 0xe
 1714 008f 3A       		.uleb128 0x3a
 1715 0090 0B       		.uleb128 0xb
 1716 0091 3B       		.uleb128 0x3b
 1717 0092 05       		.uleb128 0x5
 1718 0093 49       		.uleb128 0x49
 1719 0094 13       		.uleb128 0x13
 1720 0095 00       		.byte	0
 1721 0096 00       		.byte	0
 1722 0097 0E       		.uleb128 0xe
 1723 0098 13       		.uleb128 0x13
 1724 0099 01       		.byte	0x1
 1725 009a 0B       		.uleb128 0xb
 1726 009b 0B       		.uleb128 0xb
 1727 009c 3A       		.uleb128 0x3a
 1728 009d 0B       		.uleb128 0xb
 1729 009e 3B       		.uleb128 0x3b
 1730 009f 0B       		.uleb128 0xb
 1731 00a0 01       		.uleb128 0x1
 1732 00a1 13       		.uleb128 0x13
 1733 00a2 00       		.byte	0
 1734 00a3 00       		.byte	0
 1735 00a4 0F       		.uleb128 0xf
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccdNpiZW.s 			page 61


 1736 00a5 04       		.uleb128 0x4
 1737 00a6 01       		.byte	0x1
 1738 00a7 0B       		.uleb128 0xb
 1739 00a8 0B       		.uleb128 0xb
 1740 00a9 49       		.uleb128 0x49
 1741 00aa 13       		.uleb128 0x13
 1742 00ab 3A       		.uleb128 0x3a
 1743 00ac 0B       		.uleb128 0xb
 1744 00ad 3B       		.uleb128 0x3b
 1745 00ae 05       		.uleb128 0x5
 1746 00af 01       		.uleb128 0x1
 1747 00b0 13       		.uleb128 0x13
 1748 00b1 00       		.byte	0
 1749 00b2 00       		.byte	0
 1750 00b3 10       		.uleb128 0x10
 1751 00b4 28       		.uleb128 0x28
 1752 00b5 00       		.byte	0
 1753 00b6 03       		.uleb128 0x3
 1754 00b7 0E       		.uleb128 0xe
 1755 00b8 1C       		.uleb128 0x1c
 1756 00b9 0B       		.uleb128 0xb
 1757 00ba 00       		.byte	0
 1758 00bb 00       		.byte	0
 1759 00bc 11       		.uleb128 0x11
 1760 00bd 13       		.uleb128 0x13
 1761 00be 01       		.byte	0x1
 1762 00bf 0B       		.uleb128 0xb
 1763 00c0 0B       		.uleb128 0xb
 1764 00c1 3A       		.uleb128 0x3a
 1765 00c2 0B       		.uleb128 0xb
 1766 00c3 3B       		.uleb128 0x3b
 1767 00c4 05       		.uleb128 0x5
 1768 00c5 01       		.uleb128 0x1
 1769 00c6 13       		.uleb128 0x13
 1770 00c7 00       		.byte	0
 1771 00c8 00       		.byte	0
 1772 00c9 12       		.uleb128 0x12
 1773 00ca 0D       		.uleb128 0xd
 1774 00cb 00       		.byte	0
 1775 00cc 03       		.uleb128 0x3
 1776 00cd 0E       		.uleb128 0xe
 1777 00ce 3A       		.uleb128 0x3a
 1778 00cf 0B       		.uleb128 0xb
 1779 00d0 3B       		.uleb128 0x3b
 1780 00d1 05       		.uleb128 0x5
 1781 00d2 49       		.uleb128 0x49
 1782 00d3 13       		.uleb128 0x13
 1783 00d4 38       		.uleb128 0x38
 1784 00d5 0B       		.uleb128 0xb
 1785 00d6 00       		.byte	0
 1786 00d7 00       		.byte	0
 1787 00d8 13       		.uleb128 0x13
 1788 00d9 0F       		.uleb128 0xf
 1789 00da 00       		.byte	0
 1790 00db 0B       		.uleb128 0xb
 1791 00dc 0B       		.uleb128 0xb
 1792 00dd 49       		.uleb128 0x49
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccdNpiZW.s 			page 62


 1793 00de 13       		.uleb128 0x13
 1794 00df 00       		.byte	0
 1795 00e0 00       		.byte	0
 1796 00e1 14       		.uleb128 0x14
 1797 00e2 2E       		.uleb128 0x2e
 1798 00e3 01       		.byte	0x1
 1799 00e4 03       		.uleb128 0x3
 1800 00e5 0E       		.uleb128 0xe
 1801 00e6 3A       		.uleb128 0x3a
 1802 00e7 0B       		.uleb128 0xb
 1803 00e8 3B       		.uleb128 0x3b
 1804 00e9 05       		.uleb128 0x5
 1805 00ea 27       		.uleb128 0x27
 1806 00eb 19       		.uleb128 0x19
 1807 00ec 49       		.uleb128 0x49
 1808 00ed 13       		.uleb128 0x13
 1809 00ee 11       		.uleb128 0x11
 1810 00ef 01       		.uleb128 0x1
 1811 00f0 12       		.uleb128 0x12
 1812 00f1 06       		.uleb128 0x6
 1813 00f2 40       		.uleb128 0x40
 1814 00f3 18       		.uleb128 0x18
 1815 00f4 9742     		.uleb128 0x2117
 1816 00f6 19       		.uleb128 0x19
 1817 00f7 01       		.uleb128 0x1
 1818 00f8 13       		.uleb128 0x13
 1819 00f9 00       		.byte	0
 1820 00fa 00       		.byte	0
 1821 00fb 15       		.uleb128 0x15
 1822 00fc 05       		.uleb128 0x5
 1823 00fd 00       		.byte	0
 1824 00fe 03       		.uleb128 0x3
 1825 00ff 0E       		.uleb128 0xe
 1826 0100 3A       		.uleb128 0x3a
 1827 0101 0B       		.uleb128 0xb
 1828 0102 3B       		.uleb128 0x3b
 1829 0103 05       		.uleb128 0x5
 1830 0104 49       		.uleb128 0x49
 1831 0105 13       		.uleb128 0x13
 1832 0106 02       		.uleb128 0x2
 1833 0107 18       		.uleb128 0x18
 1834 0108 00       		.byte	0
 1835 0109 00       		.byte	0
 1836 010a 16       		.uleb128 0x16
 1837 010b 2E       		.uleb128 0x2e
 1838 010c 01       		.byte	0x1
 1839 010d 03       		.uleb128 0x3
 1840 010e 0E       		.uleb128 0xe
 1841 010f 3A       		.uleb128 0x3a
 1842 0110 0B       		.uleb128 0xb
 1843 0111 3B       		.uleb128 0x3b
 1844 0112 05       		.uleb128 0x5
 1845 0113 27       		.uleb128 0x27
 1846 0114 19       		.uleb128 0x19
 1847 0115 11       		.uleb128 0x11
 1848 0116 01       		.uleb128 0x1
 1849 0117 12       		.uleb128 0x12
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccdNpiZW.s 			page 63


 1850 0118 06       		.uleb128 0x6
 1851 0119 40       		.uleb128 0x40
 1852 011a 18       		.uleb128 0x18
 1853 011b 9642     		.uleb128 0x2116
 1854 011d 19       		.uleb128 0x19
 1855 011e 01       		.uleb128 0x1
 1856 011f 13       		.uleb128 0x13
 1857 0120 00       		.byte	0
 1858 0121 00       		.byte	0
 1859 0122 17       		.uleb128 0x17
 1860 0123 2E       		.uleb128 0x2e
 1861 0124 01       		.byte	0x1
 1862 0125 3F       		.uleb128 0x3f
 1863 0126 19       		.uleb128 0x19
 1864 0127 03       		.uleb128 0x3
 1865 0128 0E       		.uleb128 0xe
 1866 0129 3A       		.uleb128 0x3a
 1867 012a 0B       		.uleb128 0xb
 1868 012b 3B       		.uleb128 0x3b
 1869 012c 0B       		.uleb128 0xb
 1870 012d 27       		.uleb128 0x27
 1871 012e 19       		.uleb128 0x19
 1872 012f 11       		.uleb128 0x11
 1873 0130 01       		.uleb128 0x1
 1874 0131 12       		.uleb128 0x12
 1875 0132 06       		.uleb128 0x6
 1876 0133 40       		.uleb128 0x40
 1877 0134 18       		.uleb128 0x18
 1878 0135 9642     		.uleb128 0x2116
 1879 0137 19       		.uleb128 0x19
 1880 0138 01       		.uleb128 0x1
 1881 0139 13       		.uleb128 0x13
 1882 013a 00       		.byte	0
 1883 013b 00       		.byte	0
 1884 013c 18       		.uleb128 0x18
 1885 013d 34       		.uleb128 0x34
 1886 013e 00       		.byte	0
 1887 013f 03       		.uleb128 0x3
 1888 0140 0E       		.uleb128 0xe
 1889 0141 3A       		.uleb128 0x3a
 1890 0142 0B       		.uleb128 0xb
 1891 0143 3B       		.uleb128 0x3b
 1892 0144 0B       		.uleb128 0xb
 1893 0145 49       		.uleb128 0x49
 1894 0146 13       		.uleb128 0x13
 1895 0147 02       		.uleb128 0x2
 1896 0148 18       		.uleb128 0x18
 1897 0149 00       		.byte	0
 1898 014a 00       		.byte	0
 1899 014b 19       		.uleb128 0x19
 1900 014c 34       		.uleb128 0x34
 1901 014d 00       		.byte	0
 1902 014e 03       		.uleb128 0x3
 1903 014f 0E       		.uleb128 0xe
 1904 0150 3A       		.uleb128 0x3a
 1905 0151 0B       		.uleb128 0xb
 1906 0152 3B       		.uleb128 0x3b
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccdNpiZW.s 			page 64


 1907 0153 05       		.uleb128 0x5
 1908 0154 49       		.uleb128 0x49
 1909 0155 13       		.uleb128 0x13
 1910 0156 3F       		.uleb128 0x3f
 1911 0157 19       		.uleb128 0x19
 1912 0158 3C       		.uleb128 0x3c
 1913 0159 19       		.uleb128 0x19
 1914 015a 00       		.byte	0
 1915 015b 00       		.byte	0
 1916 015c 1A       		.uleb128 0x1a
 1917 015d 34       		.uleb128 0x34
 1918 015e 00       		.byte	0
 1919 015f 03       		.uleb128 0x3
 1920 0160 0E       		.uleb128 0xe
 1921 0161 3A       		.uleb128 0x3a
 1922 0162 0B       		.uleb128 0xb
 1923 0163 3B       		.uleb128 0x3b
 1924 0164 0B       		.uleb128 0xb
 1925 0165 49       		.uleb128 0x49
 1926 0166 13       		.uleb128 0x13
 1927 0167 3F       		.uleb128 0x3f
 1928 0168 19       		.uleb128 0x19
 1929 0169 3C       		.uleb128 0x3c
 1930 016a 19       		.uleb128 0x19
 1931 016b 00       		.byte	0
 1932 016c 00       		.byte	0
 1933 016d 00       		.byte	0
 1934              		.section	.debug_aranges,"",%progbits
 1935 0000 2C000000 		.4byte	0x2c
 1936 0004 0200     		.2byte	0x2
 1937 0006 00000000 		.4byte	.Ldebug_info0
 1938 000a 04       		.byte	0x4
 1939 000b 00       		.byte	0
 1940 000c 0000     		.2byte	0
 1941 000e 0000     		.2byte	0
 1942 0010 00000000 		.4byte	.LFB170
 1943 0014 1A000000 		.4byte	.LFE170-.LFB170
 1944 0018 00000000 		.4byte	.LFB171
 1945 001c 34000000 		.4byte	.LFE171-.LFB171
 1946 0020 00000000 		.4byte	.LFB271
 1947 0024 28000000 		.4byte	.LFE271-.LFB271
 1948 0028 00000000 		.4byte	0
 1949 002c 00000000 		.4byte	0
 1950              		.section	.debug_ranges,"",%progbits
 1951              	.Ldebug_ranges0:
 1952 0000 00000000 		.4byte	.LFB170
 1953 0004 1A000000 		.4byte	.LFE170
 1954 0008 00000000 		.4byte	.LFB171
 1955 000c 34000000 		.4byte	.LFE171
 1956 0010 00000000 		.4byte	.LFB271
 1957 0014 28000000 		.4byte	.LFE271
 1958 0018 00000000 		.4byte	0
 1959 001c 00000000 		.4byte	0
 1960              		.section	.debug_line,"",%progbits
 1961              	.Ldebug_line0:
 1962 0000 11030000 		.section	.debug_str,"MS",%progbits,1
 1962      0200C602 
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccdNpiZW.s 			page 65


 1962      00000201 
 1962      FB0E0D00 
 1962      01010101 
 1963              	.LASF205:
 1964 0000 43795F53 		.ascii	"Cy_SAR_ClearInterrupt\000"
 1964      41525F43 
 1964      6C656172 
 1964      496E7465 
 1964      72727570 
 1965              	.LASF59:
 1966 0016 4156475F 		.ascii	"AVG_STAT\000"
 1966      53544154 
 1966      00
 1967              	.LASF54:
 1968 001f 494E4A5F 		.ascii	"INJ_CHAN_CONFIG\000"
 1968      4348414E 
 1968      5F434F4E 
 1968      46494700 
 1969              	.LASF118:
 1970 002f 666C6173 		.ascii	"flashCtlMainWs3Freq\000"
 1970      6843746C 
 1970      4D61696E 
 1970      57733346 
 1970      72657100 
 1971              	.LASF140:
 1972 0043 6770696F 		.ascii	"gpioPrtCfgInOffset\000"
 1972      50727443 
 1972      6667496E 
 1972      4F666673 
 1972      657400
 1973              	.LASF158:
 1974 0056 6970634C 		.ascii	"ipcLockStatusOffset\000"
 1974      6F636B53 
 1974      74617475 
 1974      734F6666 
 1974      73657400 
 1975              	.LASF206:
 1976 006a 4144435F 		.ascii	"ADC_1_ISR\000"
 1976      315F4953 
 1976      5200
 1977              	.LASF84:
 1978 0074 63727970 		.ascii	"cryptoVersion\000"
 1978      746F5665 
 1978      7273696F 
 1978      6E00
 1979              	.LASF102:
 1980 0082 70657269 		.ascii	"periClockNr\000"
 1980      436C6F63 
 1980      6B4E7200 
 1981              	.LASF80:
 1982 008e 70617373 		.ascii	"passBase\000"
 1982      42617365 
 1982      00
 1983              	.LASF74:
 1984 0097 666C6173 		.ascii	"flashcBase\000"
 1984      68634261 
 1984      736500
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccdNpiZW.s 			page 66


 1985              	.LASF61:
 1986 00a2 4D55585F 		.ascii	"MUX_SWITCH0\000"
 1986      53574954 
 1986      43483000 
 1987              	.LASF93:
 1988 00ae 63707573 		.ascii	"cpussIpcIrqNr\000"
 1988      73497063 
 1988      4972714E 
 1988      7200
 1989              	.LASF3:
 1990 00bc 5F5F7569 		.ascii	"__uint8_t\000"
 1990      6E74385F 
 1990      7400
 1991              	.LASF182:
 1992 00c6 73617449 		.ascii	"satIntrMask\000"
 1992      6E74724D 
 1992      61736B00 
 1993              	.LASF137:
 1994 00d2 70657269 		.ascii	"periDiv24_5CtlOffset\000"
 1994      44697632 
 1994      345F3543 
 1994      746C4F66 
 1994      66736574 
 1995              	.LASF201:
 1996 00e7 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1996      43313120 
 1996      352E342E 
 1996      31203230 
 1996      31363036 
 1997 011a 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m4 -mfloat-abi=s"
 1997      20726576 
 1997      6973696F 
 1997      6E203233 
 1997      37373135 
 1998 014d 6F667466 		.ascii	"oftfp -mfpu=fpv4-sp-d16 -mthumb -g -O0 -ffunction-s"
 1998      70202D6D 
 1998      6670753D 
 1998      66707634 
 1998      2D73702D 
 1999 0180 65637469 		.ascii	"ections -ffat-lto-objects\000"
 1999      6F6E7320 
 1999      2D666661 
 1999      742D6C74 
 1999      6F2D6F62 
 2000              	.LASF144:
 2001 019a 63707573 		.ascii	"cpussCm4ClockCtlOffset\000"
 2001      73436D34 
 2001      436C6F63 
 2001      6B43746C 
 2001      4F666673 
 2002              	.LASF26:
 2003 01b1 52414E47 		.ascii	"RANGE_COND\000"
 2003      455F434F 
 2003      4E4400
 2004              	.LASF73:
 2005 01bc 63707573 		.ascii	"cpussBase\000"
 2005      73426173 
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccdNpiZW.s 			page 67


 2005      6500
 2006              	.LASF122:
 2007 01c6 64774368 		.ascii	"dwChCtlPrioPos\000"
 2007      43746C50 
 2007      72696F50 
 2007      6F7300
 2008              	.LASF12:
 2009 01d5 6C6F6E67 		.ascii	"long long unsigned int\000"
 2009      206C6F6E 
 2009      6720756E 
 2009      7369676E 
 2009      65642069 
 2010              	.LASF170:
 2011 01ec 43595F53 		.ascii	"CY_SAR_INTR_EOS_MASK\000"
 2011      41525F49 
 2011      4E54525F 
 2011      454F535F 
 2011      4D41534B 
 2012              	.LASF126:
 2013 0201 70657269 		.ascii	"periTrCmdOffset\000"
 2013      5472436D 
 2013      644F6666 
 2013      73657400 
 2014              	.LASF150:
 2015 0211 63707573 		.ascii	"cpussSysTickCtlOffset\000"
 2015      73537973 
 2015      5469636B 
 2015      43746C4F 
 2015      66667365 
 2016              	.LASF197:
 2017 0227 49544D5F 		.ascii	"ITM_RxBuffer\000"
 2017      52784275 
 2017      66666572 
 2017      00
 2018              	.LASF199:
 2019 0234 4144435F 		.ascii	"ADC_1_currentConfig\000"
 2019      315F6375 
 2019      7272656E 
 2019      74436F6E 
 2019      66696700 
 2020              	.LASF111:
 2021 0248 666C6173 		.ascii	"flashPipeRequired\000"
 2021      68506970 
 2021      65526571 
 2021      75697265 
 2021      6400
 2022              	.LASF68:
 2023 025a 414E415F 		.ascii	"ANA_TRIM0\000"
 2023      5452494D 
 2023      3000
 2024              	.LASF69:
 2025 0264 414E415F 		.ascii	"ANA_TRIM1\000"
 2025      5452494D 
 2025      3100
 2026              	.LASF50:
 2027 026e 52414E47 		.ascii	"RANGE_INTR_MASK\000"
 2027      455F494E 
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccdNpiZW.s 			page 68


 2027      54525F4D 
 2027      41534B00 
 2028              	.LASF15:
 2029 027e 696E7431 		.ascii	"int16_t\000"
 2029      365F7400 
 2030              	.LASF189:
 2031 0286 63795F73 		.ascii	"cy_stc_sar_config_t\000"
 2031      74635F73 
 2031      61725F63 
 2031      6F6E6669 
 2031      675F7400 
 2032              	.LASF11:
 2033 029a 6C6F6E67 		.ascii	"long long int\000"
 2033      206C6F6E 
 2033      6720696E 
 2033      7400
 2034              	.LASF1:
 2035 02a8 7369676E 		.ascii	"signed char\000"
 2035      65642063 
 2035      68617200 
 2036              	.LASF131:
 2037 02b4 70657269 		.ascii	"periDivCmdTypeSelPos\000"
 2037      44697643 
 2037      6D645479 
 2037      70655365 
 2037      6C506F73 
 2038              	.LASF168:
 2039 02c9 63795F65 		.ascii	"cy_en_sar_range_detect_condition_t\000"
 2039      6E5F7361 
 2039      725F7261 
 2039      6E67655F 
 2039      64657465 
 2040              	.LASF194:
 2041 02ec 636C6B44 		.ascii	"clkDivider\000"
 2041      69766964 
 2041      657200
 2042              	.LASF77:
 2043 02f7 70726F74 		.ascii	"protBase\000"
 2043      42617365 
 2043      00
 2044              	.LASF89:
 2045 0300 69706356 		.ascii	"ipcVersion\000"
 2045      65727369 
 2045      6F6E00
 2046              	.LASF151:
 2047 030b 63707573 		.ascii	"cpussCm0NmiCtlOffset\000"
 2047      73436D30 
 2047      4E6D6943 
 2047      746C4F66 
 2047      66736574 
 2048              	.LASF67:
 2049 0320 52455345 		.ascii	"RESERVED10\000"
 2049      52564544 
 2049      313000
 2050              	.LASF78:
 2051 032b 6873696F 		.ascii	"hsiomBase\000"
 2051      6D426173 
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccdNpiZW.s 			page 69


 2051      6500
 2052              	.LASF183:
 2053 0335 72616E67 		.ascii	"rangeIntrMask\000"
 2053      65496E74 
 2053      724D6173 
 2053      6B00
 2054              	.LASF164:
 2055 0343 43595F53 		.ascii	"CY_SAR_RANGE_COND_BELOW\000"
 2055      41525F52 
 2055      414E4745 
 2055      5F434F4E 
 2055      445F4245 
 2056              	.LASF172:
 2057 035b 43595F53 		.ascii	"CY_SAR_INTR_FW_COLLISION_MASK\000"
 2057      41525F49 
 2057      4E54525F 
 2057      46575F43 
 2057      4F4C4C49 
 2058              	.LASF8:
 2059 0379 6C6F6E67 		.ascii	"long int\000"
 2059      20696E74 
 2059      00
 2060              	.LASF66:
 2061 0382 4D55585F 		.ascii	"MUX_SWITCH_STATUS\000"
 2061      53574954 
 2061      43485F53 
 2061      54415455 
 2061      5300
 2062              	.LASF52:
 2063 0394 494E5452 		.ascii	"INTR_CAUSE\000"
 2063      5F434155 
 2063      534500
 2064              	.LASF109:
 2065 039f 63727970 		.ascii	"cryptoMemSize\000"
 2065      746F4D65 
 2065      6D53697A 
 2065      6500
 2066              	.LASF56:
 2067 03ad 494E4A5F 		.ascii	"INJ_RESULT\000"
 2067      52455355 
 2067      4C5400
 2068              	.LASF75:
 2069 03b8 70657269 		.ascii	"periBase\000"
 2069      42617365 
 2069      00
 2070              	.LASF107:
 2071 03c1 73797350 		.ascii	"sysPmSimoPresent\000"
 2071      6D53696D 
 2071      6F507265 
 2071      73656E74 
 2071      00
 2072              	.LASF166:
 2073 03d2 43595F53 		.ascii	"CY_SAR_RANGE_COND_ABOVE\000"
 2073      41525F52 
 2073      414E4745 
 2073      5F434F4E 
 2073      445F4142 
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccdNpiZW.s 			page 70


 2074              	.LASF97:
 2075 03ea 63707573 		.ascii	"cpussFmIrq\000"
 2075      73466D49 
 2075      727100
 2076              	.LASF163:
 2077 03f5 646F7562 		.ascii	"double\000"
 2077      6C6500
 2078              	.LASF136:
 2079 03fc 70657269 		.ascii	"periDiv16_5CtlOffset\000"
 2079      44697631 
 2079      365F3543 
 2079      746C4F66 
 2079      66736574 
 2080              	.LASF62:
 2081 0411 4D55585F 		.ascii	"MUX_SWITCH_CLEAR0\000"
 2081      53574954 
 2081      43485F43 
 2081      4C454152 
 2081      3000
 2082              	.LASF100:
 2083 0423 73727373 		.ascii	"srssNumPll\000"
 2083      4E756D50 
 2083      6C6C00
 2084              	.LASF207:
 2085 042e 696E7472 		.ascii	"intr_status\000"
 2085      5F737461 
 2085      74757300 
 2086              	.LASF175:
 2087 043a 73616D70 		.ascii	"sampleTime01\000"
 2087      6C655469 
 2087      6D653031 
 2087      00
 2088              	.LASF6:
 2089 0447 73686F72 		.ascii	"short unsigned int\000"
 2089      7420756E 
 2089      7369676E 
 2089      65642069 
 2089      6E7400
 2090              	.LASF141:
 2091 045a 6770696F 		.ascii	"gpioPrtCfgOutOffset\000"
 2091      50727443 
 2091      66674F75 
 2091      744F6666 
 2091      73657400 
 2092              	.LASF123:
 2093 046e 64774368 		.ascii	"dwChCtlPreemptablePos\000"
 2093      43746C50 
 2093      7265656D 
 2093      70746162 
 2093      6C65506F 
 2094              	.LASF9:
 2095 0484 5F5F7569 		.ascii	"__uint32_t\000"
 2095      6E743332 
 2095      5F7400
 2096              	.LASF104:
 2097 048f 70617373 		.ascii	"passSarChannels\000"
 2097      53617243 
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccdNpiZW.s 			page 71


 2097      68616E6E 
 2097      656C7300 
 2098              	.LASF192:
 2099 049f 6877436F 		.ascii	"hwConfigStc\000"
 2099      6E666967 
 2099      53746300 
 2100              	.LASF23:
 2101 04ab 53414D50 		.ascii	"SAMPLE_TIME01\000"
 2101      4C455F54 
 2101      494D4530 
 2101      3100
 2102              	.LASF4:
 2103 04b9 5F5F696E 		.ascii	"__int16_t\000"
 2103      7431365F 
 2103      7400
 2104              	.LASF44:
 2105 04c3 53415455 		.ascii	"SATURATE_INTR\000"
 2105      52415445 
 2105      5F494E54 
 2105      5200
 2106              	.LASF30:
 2107 04d1 4348414E 		.ascii	"CHAN_CONFIG\000"
 2107      5F434F4E 
 2107      46494700 
 2108              	.LASF147:
 2109 04dd 63707573 		.ascii	"cpussCm4PwrCtlOffset\000"
 2109      73436D34 
 2109      50777243 
 2109      746C4F66 
 2109      66736574 
 2110              	.LASF142:
 2111 04f2 6770696F 		.ascii	"gpioPrtCfgSioOffset\000"
 2111      50727443 
 2111      66675369 
 2111      6F4F6666 
 2111      73657400 
 2112              	.LASF94:
 2113 0506 63707573 		.ascii	"cpussDwChNr\000"
 2113      73447743 
 2113      684E7200 
 2114              	.LASF13:
 2115 0512 756E7369 		.ascii	"unsigned int\000"
 2115      676E6564 
 2115      20696E74 
 2115      00
 2116              	.LASF19:
 2117 051f 73697A65 		.ascii	"sizetype\000"
 2117      74797065 
 2117      00
 2118              	.LASF160:
 2119 0528 63686172 		.ascii	"char_t\000"
 2119      5F7400
 2120              	.LASF127:
 2121 052f 70657269 		.ascii	"periTrCmdGrSelMsk\000"
 2121      5472436D 
 2121      64477253 
 2121      656C4D73 
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccdNpiZW.s 			page 72


 2121      6B00
 2122              	.LASF10:
 2123 0541 6C6F6E67 		.ascii	"long unsigned int\000"
 2123      20756E73 
 2123      69676E65 
 2123      6420696E 
 2123      7400
 2124              	.LASF38:
 2125 0553 4348414E 		.ascii	"CHAN_WORK_NEWVALUE\000"
 2125      5F574F52 
 2125      4B5F4E45 
 2125      5756414C 
 2125      554500
 2126              	.LASF92:
 2127 0566 63707573 		.ascii	"cpussIpcNr\000"
 2127      73497063 
 2127      4E7200
 2128              	.LASF64:
 2129 0571 4D55585F 		.ascii	"MUX_SWITCH_DS_CTRL\000"
 2129      53574954 
 2129      43485F44 
 2129      535F4354 
 2129      524C00
 2130              	.LASF42:
 2131 0584 494E5452 		.ascii	"INTR_MASK\000"
 2131      5F4D4153 
 2131      4B00
 2132              	.LASF79:
 2133 058e 6770696F 		.ascii	"gpioBase\000"
 2133      42617365 
 2133      00
 2134              	.LASF71:
 2135 0597 5341525F 		.ascii	"SAR_Type\000"
 2135      54797065 
 2135      00
 2136              	.LASF117:
 2137 05a0 666C6173 		.ascii	"flashCtlMainWs2Freq\000"
 2137      6843746C 
 2137      4D61696E 
 2137      57733246 
 2137      72657100 
 2138              	.LASF128:
 2139 05b4 70657269 		.ascii	"periTrGrOffset\000"
 2139      54724772 
 2139      4F666673 
 2139      657400
 2140              	.LASF155:
 2141 05c3 63707573 		.ascii	"cpussRam1Ctl0\000"
 2141      7352616D 
 2141      3143746C 
 2141      3000
 2142              	.LASF200:
 2143 05d1 4144435F 		.ascii	"ADC_1_allConfigs\000"
 2143      315F616C 
 2143      6C436F6E 
 2143      66696773 
 2143      00
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccdNpiZW.s 			page 73


 2144              	.LASF177:
 2145 05e2 72616E67 		.ascii	"rangeThres\000"
 2145      65546872 
 2145      657300
 2146              	.LASF48:
 2147 05ed 52414E47 		.ascii	"RANGE_INTR\000"
 2147      455F494E 
 2147      545200
 2148              	.LASF36:
 2149 05f8 4348414E 		.ascii	"CHAN_WORK_UPDATED\000"
 2149      5F574F52 
 2149      4B5F5550 
 2149      44415445 
 2149      4400
 2150              	.LASF129:
 2151 060a 70657269 		.ascii	"periTrGrSize\000"
 2151      54724772 
 2151      53697A65 
 2151      00
 2152              	.LASF87:
 2153 0617 6770696F 		.ascii	"gpioVersion\000"
 2153      56657273 
 2153      696F6E00 
 2154              	.LASF16:
 2155 0623 75696E74 		.ascii	"uint16_t\000"
 2155      31365F74 
 2155      00
 2156              	.LASF191:
 2157 062c 6E756D43 		.ascii	"numChannels\000"
 2157      68616E6E 
 2157      656C7300 
 2158              	.LASF159:
 2159 0638 63795F73 		.ascii	"cy_stc_device_t\000"
 2159      74635F64 
 2159      65766963 
 2159      655F7400 
 2160              	.LASF180:
 2161 0648 6368616E 		.ascii	"chanConfig\000"
 2161      436F6E66 
 2161      696700
 2162              	.LASF190:
 2163 0653 6368616E 		.ascii	"channelBase\000"
 2163      6E656C42 
 2163      61736500 
 2164              	.LASF7:
 2165 065f 5F5F696E 		.ascii	"__int32_t\000"
 2165      7433325F 
 2165      7400
 2166              	.LASF105:
 2167 0669 65704D6F 		.ascii	"epMonitorNr\000"
 2167      6E69746F 
 2167      724E7200 
 2168              	.LASF152:
 2169 0675 63707573 		.ascii	"cpussCm4NmiCtlOffset\000"
 2169      73436D34 
 2169      4E6D6943 
 2169      746C4F66 
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccdNpiZW.s 			page 74


 2169      66736574 
 2170              	.LASF148:
 2171 068a 63707573 		.ascii	"cpussTrimRamCtlOffset\000"
 2171      73547269 
 2171      6D52616D 
 2171      43746C4F 
 2171      66667365 
 2172              	.LASF143:
 2173 06a0 63707573 		.ascii	"cpussCm0ClockCtlOffset\000"
 2173      73436D30 
 2173      436C6F63 
 2173      6B43746C 
 2173      4F666673 
 2174              	.LASF28:
 2175 06b7 53544152 		.ascii	"START_CTRL\000"
 2175      545F4354 
 2175      524C00
 2176              	.LASF41:
 2177 06c2 494E5452 		.ascii	"INTR_SET\000"
 2177      5F534554 
 2177      00
 2178              	.LASF83:
 2179 06cb 63707573 		.ascii	"cpussVersion\000"
 2179      73566572 
 2179      73696F6E 
 2179      00
 2180              	.LASF196:
 2181 06d8 62617365 		.ascii	"base\000"
 2181      00
 2182              	.LASF90:
 2183 06dd 70657269 		.ascii	"periVersion\000"
 2183      56657273 
 2183      696F6E00 
 2184              	.LASF146:
 2185 06e9 63707573 		.ascii	"cpussCm0StatusOffset\000"
 2185      73436D30 
 2185      53746174 
 2185      75734F66 
 2185      66736574 
 2186              	.LASF169:
 2187 06fe 43595F53 		.ascii	"CY_SAR_INTR_MASK_NONE\000"
 2187      41525F49 
 2187      4E54525F 
 2187      4D41534B 
 2187      5F4E4F4E 
 2188              	.LASF120:
 2189 0714 64774368 		.ascii	"dwChOffset\000"
 2189      4F666673 
 2189      657400
 2190              	.LASF34:
 2191 071f 4348414E 		.ascii	"CHAN_RESULT\000"
 2191      5F524553 
 2191      554C5400 
 2192              	.LASF95:
 2193 072b 63707573 		.ascii	"cpussFlashPaSize\000"
 2193      73466C61 
 2193      73685061 
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccdNpiZW.s 			page 75


 2193      53697A65 
 2193      00
 2194              	.LASF176:
 2195 073c 73616D70 		.ascii	"sampleTime23\000"
 2195      6C655469 
 2195      6D653233 
 2195      00
 2196              	.LASF133:
 2197 0749 70657269 		.ascii	"periDivCmdPaTypeSelPos\000"
 2197      44697643 
 2197      6D645061 
 2197      54797065 
 2197      53656C50 
 2198              	.LASF156:
 2199 0760 63707573 		.ascii	"cpussRam2Ctl0\000"
 2199      7352616D 
 2199      3243746C 
 2199      3000
 2200              	.LASF186:
 2201 076e 636F6E66 		.ascii	"configRouting\000"
 2201      6967526F 
 2201      7574696E 
 2201      6700
 2202              	.LASF21:
 2203 077c 53414D50 		.ascii	"SAMPLE_CTRL\000"
 2203      4C455F43 
 2203      54524C00 
 2204              	.LASF25:
 2205 0788 52414E47 		.ascii	"RANGE_THRES\000"
 2205      455F5448 
 2205      52455300 
 2206              	.LASF124:
 2207 0794 64775374 		.ascii	"dwStatusChIdxPos\000"
 2207      61747573 
 2207      43684964 
 2207      78506F73 
 2207      00
 2208              	.LASF27:
 2209 07a5 4348414E 		.ascii	"CHAN_EN\000"
 2209      5F454E00 
 2210              	.LASF24:
 2211 07ad 53414D50 		.ascii	"SAMPLE_TIME23\000"
 2211      4C455F54 
 2211      494D4532 
 2211      3300
 2212              	.LASF106:
 2213 07bb 75646250 		.ascii	"udbPresent\000"
 2213      72657365 
 2213      6E7400
 2214              	.LASF86:
 2215 07c6 666C6173 		.ascii	"flashcVersion\000"
 2215      68635665 
 2215      7273696F 
 2215      6E00
 2216              	.LASF82:
 2217 07d4 63727970 		.ascii	"cryptoBase\000"
 2217      746F4261 
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccdNpiZW.s 			page 76


 2217      736500
 2218              	.LASF103:
 2219 07df 736D6966 		.ascii	"smifDeviceNr\000"
 2219      44657669 
 2219      63654E72 
 2219      00
 2220              	.LASF45:
 2221 07ec 53415455 		.ascii	"SATURATE_INTR_SET\000"
 2221      52415445 
 2221      5F494E54 
 2221      525F5345 
 2221      5400
 2222              	.LASF43:
 2223 07fe 494E5452 		.ascii	"INTR_MASKED\000"
 2223      5F4D4153 
 2223      4B454400 
 2224              	.LASF162:
 2225 080a 666C6F61 		.ascii	"float\000"
 2225      7400
 2226              	.LASF125:
 2227 0810 64775374 		.ascii	"dwStatusChIdxMsk\000"
 2227      61747573 
 2227      43684964 
 2227      784D736B 
 2227      00
 2228              	.LASF204:
 2229 0821 43795F53 		.ascii	"Cy_SAR_GetInterruptStatus\000"
 2229      41525F47 
 2229      6574496E 
 2229      74657272 
 2229      75707453 
 2230              	.LASF29:
 2231 083b 52455345 		.ascii	"RESERVED1\000"
 2231      52564544 
 2231      3100
 2232              	.LASF198:
 2233 0845 63795F64 		.ascii	"cy_device\000"
 2233      65766963 
 2233      6500
 2234              	.LASF33:
 2235 084f 52455345 		.ascii	"RESERVED3\000"
 2235      52564544 
 2235      3300
 2236              	.LASF153:
 2237 0859 63707573 		.ascii	"cpussRomCtl\000"
 2237      73526F6D 
 2237      43746C00 
 2238              	.LASF53:
 2239 0865 52455345 		.ascii	"RESERVED5\000"
 2239      52564544 
 2239      3500
 2240              	.LASF55:
 2241 086f 52455345 		.ascii	"RESERVED6\000"
 2241      52564544 
 2241      3600
 2242              	.LASF57:
 2243 0879 52455345 		.ascii	"RESERVED7\000"
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccdNpiZW.s 			page 77


 2243      52564544 
 2243      3700
 2244              	.LASF60:
 2245 0883 52455345 		.ascii	"RESERVED8\000"
 2245      52564544 
 2245      3800
 2246              	.LASF63:
 2247 088d 52455345 		.ascii	"RESERVED9\000"
 2247      52564544 
 2247      3900
 2248              	.LASF179:
 2249 0897 6368616E 		.ascii	"chanEn\000"
 2249      456E00
 2250              	.LASF76:
 2251 089e 75646242 		.ascii	"udbBase\000"
 2251      61736500 
 2252              	.LASF165:
 2253 08a6 43595F53 		.ascii	"CY_SAR_RANGE_COND_INSIDE\000"
 2253      41525F52 
 2253      414E4745 
 2253      5F434F4E 
 2253      445F494E 
 2254              	.LASF188:
 2255 08bf 5F426F6F 		.ascii	"_Bool\000"
 2255      6C00
 2256              	.LASF17:
 2257 08c5 696E7433 		.ascii	"int32_t\000"
 2257      325F7400 
 2258              	.LASF2:
 2259 08cd 756E7369 		.ascii	"unsigned char\000"
 2259      676E6564 
 2259      20636861 
 2259      7200
 2260              	.LASF171:
 2261 08db 43595F53 		.ascii	"CY_SAR_INTR_OVERFLOW_MASK\000"
 2261      41525F49 
 2261      4E54525F 
 2261      4F564552 
 2261      464C4F57 
 2262              	.LASF119:
 2263 08f5 666C6173 		.ascii	"flashCtlMainWs4Freq\000"
 2263      6843746C 
 2263      4D61696E 
 2263      57733446 
 2263      72657100 
 2264              	.LASF0:
 2265 0909 73686F72 		.ascii	"short int\000"
 2265      7420696E 
 2265      7400
 2266              	.LASF184:
 2267 0913 6D757853 		.ascii	"muxSwitch\000"
 2267      77697463 
 2267      6800
 2268              	.LASF181:
 2269 091d 696E7472 		.ascii	"intrMask\000"
 2269      4D61736B 
 2269      00
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccdNpiZW.s 			page 78


 2270              	.LASF22:
 2271 0926 52455345 		.ascii	"RESERVED\000"
 2271      52564544 
 2271      00
 2272              	.LASF70:
 2273 092f 5341525F 		.ascii	"SAR_V1_Type\000"
 2273      56315F54 
 2273      79706500 
 2274              	.LASF202:
 2275 093b 47656E65 		.ascii	"Generated_Source\\PSoC6\\ADC_1_INT.c\000"
 2275      72617465 
 2275      645F536F 
 2275      75726365 
 2275      5C50536F 
 2276              	.LASF130:
 2277 095e 70657269 		.ascii	"periDivCmdDivSelMsk\000"
 2277      44697643 
 2277      6D644469 
 2277      7653656C 
 2277      4D736B00 
 2278              	.LASF39:
 2279 0972 4348414E 		.ascii	"CHAN_RESULT_NEWVALUE\000"
 2279      5F524553 
 2279      554C545F 
 2279      4E455756 
 2279      414C5545 
 2280              	.LASF31:
 2281 0987 52455345 		.ascii	"RESERVED2\000"
 2281      52564544 
 2281      3200
 2282              	.LASF101:
 2283 0991 73727373 		.ascii	"srssNumHfroot\000"
 2283      4E756D48 
 2283      66726F6F 
 2283      7400
 2284              	.LASF35:
 2285 099f 52455345 		.ascii	"RESERVED4\000"
 2285      52564544 
 2285      3400
 2286              	.LASF114:
 2287 09a9 666C6173 		.ascii	"flashEraseDelay\000"
 2287      68457261 
 2287      73654465 
 2287      6C617900 
 2288              	.LASF134:
 2289 09b9 70657269 		.ascii	"periDiv8CtlOffset\000"
 2289      44697638 
 2289      43746C4F 
 2289      66667365 
 2289      7400
 2290              	.LASF18:
 2291 09cb 75696E74 		.ascii	"uint32_t\000"
 2291      33325F74 
 2291      00
 2292              	.LASF108:
 2293 09d4 70726F74 		.ascii	"protBusMasterMask\000"
 2293      4275734D 
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccdNpiZW.s 			page 79


 2293      61737465 
 2293      724D6173 
 2293      6B00
 2294              	.LASF187:
 2295 09e6 76726566 		.ascii	"vrefMvValue\000"
 2295      4D765661 
 2295      6C756500 
 2296              	.LASF72:
 2297 09f2 6C6F6E67 		.ascii	"long double\000"
 2297      20646F75 
 2297      626C6500 
 2298              	.LASF161:
 2299 09fe 63686172 		.ascii	"char\000"
 2299      00
 2300              	.LASF91:
 2301 0a03 70726F74 		.ascii	"protVersion\000"
 2301      56657273 
 2301      696F6E00 
 2302              	.LASF154:
 2303 0a0f 63707573 		.ascii	"cpussRam0Ctl0\000"
 2303      7352616D 
 2303      3043746C 
 2303      3000
 2304              	.LASF5:
 2305 0a1d 5F5F7569 		.ascii	"__uint16_t\000"
 2305      6E743136 
 2305      5F7400
 2306              	.LASF135:
 2307 0a28 70657269 		.ascii	"periDiv16CtlOffset\000"
 2307      44697631 
 2307      3643746C 
 2307      4F666673 
 2307      657400
 2308              	.LASF14:
 2309 0a3b 75696E74 		.ascii	"uint8_t\000"
 2309      385F7400 
 2310              	.LASF88:
 2311 0a43 6873696F 		.ascii	"hsiomVersion\000"
 2311      6D566572 
 2311      73696F6E 
 2311      00
 2312              	.LASF46:
 2313 0a50 53415455 		.ascii	"SATURATE_INTR_MASK\000"
 2313      52415445 
 2313      5F494E54 
 2313      525F4D41 
 2313      534B00
 2314              	.LASF40:
 2315 0a63 494E5452 		.ascii	"INTR\000"
 2315      00
 2316              	.LASF173:
 2317 0a68 6374726C 		.ascii	"ctrl\000"
 2317      00
 2318              	.LASF116:
 2319 0a6d 666C6173 		.ascii	"flashCtlMainWs1Freq\000"
 2319      6843746C 
 2319      4D61696E 
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccdNpiZW.s 			page 80


 2319      57733146 
 2319      72657100 
 2320              	.LASF193:
 2321 0a81 6D697363 		.ascii	"miscConfig\000"
 2321      436F6E66 
 2321      696700
 2322              	.LASF121:
 2323 0a8c 64774368 		.ascii	"dwChSize\000"
 2323      53697A65 
 2323      00
 2324              	.LASF157:
 2325 0a95 69706353 		.ascii	"ipcStructSize\000"
 2325      74727563 
 2325      7453697A 
 2325      6500
 2326              	.LASF32:
 2327 0aa3 4348414E 		.ascii	"CHAN_WORK\000"
 2327      5F574F52 
 2327      4B00
 2328              	.LASF96:
 2329 0aad 63707573 		.ascii	"cpussIpc0Irq\000"
 2329      73497063 
 2329      30497271 
 2329      00
 2330              	.LASF65:
 2331 0aba 4D55585F 		.ascii	"MUX_SWITCH_SQ_CTRL\000"
 2331      53574954 
 2331      43485F53 
 2331      515F4354 
 2331      524C00
 2332              	.LASF20:
 2333 0acd 4354524C 		.ascii	"CTRL\000"
 2333      00
 2334              	.LASF139:
 2335 0ad2 6770696F 		.ascii	"gpioPrtCfgOffset\000"
 2335      50727443 
 2335      66674F66 
 2335      66736574 
 2335      00
 2336              	.LASF115:
 2337 0ae3 666C6173 		.ascii	"flashCtlMainWs0Freq\000"
 2337      6843746C 
 2337      4D61696E 
 2337      57733046 
 2337      72657100 
 2338              	.LASF58:
 2339 0af7 53544154 		.ascii	"STATUS\000"
 2339      555300
 2340              	.LASF178:
 2341 0afe 72616E67 		.ascii	"rangeCond\000"
 2341      65436F6E 
 2341      6400
 2342              	.LASF98:
 2343 0b08 63707573 		.ascii	"cpussNotConnectedIrq\000"
 2343      734E6F74 
 2343      436F6E6E 
 2343      65637465 
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccdNpiZW.s 			page 81


 2343      64497271 
 2344              	.LASF112:
 2345 0b1d 666C6173 		.ascii	"flashWriteDelay\000"
 2345      68577269 
 2345      74654465 
 2345      6C617900 
 2346              	.LASF174:
 2347 0b2d 73616D70 		.ascii	"sampleCtrl\000"
 2347      6C654374 
 2347      726C00
 2348              	.LASF37:
 2349 0b38 4348414E 		.ascii	"CHAN_RESULT_UPDATED\000"
 2349      5F524553 
 2349      554C545F 
 2349      55504441 
 2349      54454400 
 2350              	.LASF195:
 2351 0b4c 4144435F 		.ascii	"ADC_1_CONFIG_STRUCT\000"
 2351      315F434F 
 2351      4E464947 
 2351      5F535452 
 2351      55435400 
 2352              	.LASF203:
 2353 0b60 443A5C4F 		.ascii	"D:\\OneDrive - UNSW\\Documents\\thesis\\VDAC_Saw_Ex"
 2353      6E654472 
 2353      69766520 
 2353      2D20554E 
 2353      53575C44 
 2354 0b8f 706F7274 		.ascii	"port.cydsn\000"
 2354      2E637964 
 2354      736E00
 2355              	.LASF145:
 2356 0b9a 63707573 		.ascii	"cpussCm4StatusOffset\000"
 2356      73436D34 
 2356      53746174 
 2356      75734F66 
 2356      66736574 
 2357              	.LASF138:
 2358 0baf 6770696F 		.ascii	"gpioPrtIntrCfgOffset\000"
 2358      50727449 
 2358      6E747243 
 2358      66674F66 
 2358      66736574 
 2359              	.LASF167:
 2360 0bc4 43595F53 		.ascii	"CY_SAR_RANGE_COND_OUTSIDE\000"
 2360      41525F52 
 2360      414E4745 
 2360      5F434F4E 
 2360      445F4F55 
 2361              	.LASF149:
 2362 0bde 63707573 		.ascii	"cpussTrimRomCtlOffset\000"
 2362      73547269 
 2362      6D526F6D 
 2362      43746C4F 
 2362      66667365 
 2363              	.LASF49:
 2364 0bf4 52414E47 		.ascii	"RANGE_INTR_SET\000"
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccdNpiZW.s 			page 82


 2364      455F494E 
 2364      54525F53 
 2364      455400
 2365              	.LASF99:
 2366 0c03 73727373 		.ascii	"srssNumClkpath\000"
 2366      4E756D43 
 2366      6C6B7061 
 2366      746800
 2367              	.LASF185:
 2368 0c12 6D757853 		.ascii	"muxSwitchSqCtrl\000"
 2368      77697463 
 2368      68537143 
 2368      74726C00 
 2369              	.LASF85:
 2370 0c22 64775665 		.ascii	"dwVersion\000"
 2370      7273696F 
 2370      6E00
 2371              	.LASF81:
 2372 0c2c 69706342 		.ascii	"ipcBase\000"
 2372      61736500 
 2373              	.LASF51:
 2374 0c34 52414E47 		.ascii	"RANGE_INTR_MASKED\000"
 2374      455F494E 
 2374      54525F4D 
 2374      41534B45 
 2374      4400
 2375              	.LASF132:
 2376 0c46 70657269 		.ascii	"periDivCmdPaDivSelPos\000"
 2376      44697643 
 2376      6D645061 
 2376      44697653 
 2376      656C506F 
 2377              	.LASF47:
 2378 0c5c 53415455 		.ascii	"SATURATE_INTR_MASKED\000"
 2378      52415445 
 2378      5F494E54 
 2378      525F4D41 
 2378      534B4544 
 2379              	.LASF113:
 2380 0c71 666C6173 		.ascii	"flashProgramDelay\000"
 2380      6850726F 
 2380      6772616D 
 2380      44656C61 
 2380      7900
 2381              	.LASF110:
 2382 0c83 666C6173 		.ascii	"flashRwwRequired\000"
 2382      68527777 
 2382      52657175 
 2382      69726564 
 2382      00
 2383              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
