ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.syntax unified
  16              		.file	"ADC_1.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.section	.text.__NVIC_EnableIRQ,"ax",%progbits
  21              		.align	2
  22              		.thumb
  23              		.thumb_func
  24              		.type	__NVIC_EnableIRQ, %function
  25              	__NVIC_EnableIRQ:
  26              	.LFB104:
  27              		.file 1 "Generated_Source\\PSoC6\\pdl\\cmsis/include/core_cm4.h"
   1:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /**************************************************************************//**
   2:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****  * @file     core_cm4.h
   3:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****  * @brief    CMSIS Cortex-M4 Core Peripheral Access Layer Header File
   4:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****  * @version  V5.0.5
   5:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****  * @date     08. January 2018
   6:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****  ******************************************************************************/
   7:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /*
   8:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****  * Copyright (c) 2009-2017 ARM Limited. All rights reserved.
   9:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****  *
  10:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****  *
  12:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****  * not use this file except in compliance with the License.
  14:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****  * You may obtain a copy of the License at
  15:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****  *
  16:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****  *
  18:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****  * See the License for the specific language governing permissions and
  22:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****  * limitations under the License.
  23:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****  */
  24:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
  25:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #if   defined ( __ICCARM__ )
  26:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   #pragma system_include         /* treat file as system include file for MISRA check */
  27:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #elif defined (__clang__)
  28:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   #pragma clang system_header   /* treat file as system include file */
  29:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #endif
  30:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 2


  31:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #ifndef __CORE_CM4_H_GENERIC
  32:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define __CORE_CM4_H_GENERIC
  33:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
  34:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #include <stdint.h>
  35:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
  36:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #ifdef __cplusplus
  37:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****  extern "C" {
  38:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #endif
  39:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
  40:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /**
  41:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \page CMSIS_MISRA_Exceptions  MISRA-C:2004 Compliance Exceptions
  42:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   CMSIS violates the following MISRA-C:2004 rules:
  43:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
  44:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****    \li Required Rule 8.5, object/function definition in header file.<br>
  45:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****      Function definitions in header files are used to allow 'inlining'.
  46:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
  47:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****    \li Required Rule 18.4, declaration of union type or object of union type: '{...}'.<br>
  48:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****      Unions are used for effective representation of core registers.
  49:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
  50:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****    \li Advisory Rule 19.7, Function-like macro defined.<br>
  51:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****      Function-like macros are used to allow more efficient code.
  52:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****  */
  53:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
  54:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
  55:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /*******************************************************************************
  56:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****  *                 CMSIS definitions
  57:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****  ******************************************************************************/
  58:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /**
  59:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \ingroup Cortex_M4
  60:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   @{
  61:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****  */
  62:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
  63:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #include "cmsis_version.h"
  64:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****  
  65:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /* CMSIS CM4 definitions */
  66:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define __CM4_CMSIS_VERSION_MAIN  (__CM_CMSIS_VERSION_MAIN)              /*!< \deprecated [31:16] C
  67:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define __CM4_CMSIS_VERSION_SUB   (__CM_CMSIS_VERSION_SUB)               /*!< \deprecated [15:0]  C
  68:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define __CM4_CMSIS_VERSION       ((__CM4_CMSIS_VERSION_MAIN << 16U) | \
  69:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****                                     __CM4_CMSIS_VERSION_SUB           )  /*!< \deprecated CMSIS HAL
  70:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
  71:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define __CORTEX_M                (4U)                                   /*!< Cortex-M Core */
  72:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
  73:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /** __FPU_USED indicates whether an FPU is used or not.
  74:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     For this, __FPU_PRESENT has to be checked prior to making use of FPU specific registers and fun
  75:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** */
  76:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #if defined ( __CC_ARM )
  77:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   #if defined __TARGET_FPU_VFP
  78:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
  79:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****       #define __FPU_USED       1U
  80:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     #else
  81:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
  82:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****       #define __FPU_USED       0U
  83:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     #endif
  84:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   #else
  85:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     #define __FPU_USED         0U
  86:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   #endif
  87:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 3


  88:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #elif defined (__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  89:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   #if defined __ARM_PCS_VFP
  90:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
  91:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****       #define __FPU_USED       1U
  92:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     #else
  93:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
  94:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****       #define __FPU_USED       0U
  95:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     #endif
  96:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   #else
  97:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     #define __FPU_USED         0U
  98:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   #endif
  99:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 100:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #elif defined ( __GNUC__ )
 101:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   #if defined (__VFP_FP__) && !defined(__SOFTFP__)
 102:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 103:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****       #define __FPU_USED       1U
 104:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     #else
 105:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 106:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****       #define __FPU_USED       0U
 107:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     #endif
 108:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   #else
 109:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     #define __FPU_USED         0U
 110:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   #endif
 111:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 112:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #elif defined ( __ICCARM__ )
 113:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   #if defined __ARMVFP__
 114:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 115:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****       #define __FPU_USED       1U
 116:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     #else
 117:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 118:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****       #define __FPU_USED       0U
 119:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     #endif
 120:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   #else
 121:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     #define __FPU_USED         0U
 122:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   #endif
 123:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 124:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #elif defined ( __TI_ARM__ )
 125:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   #if defined __TI_VFP_SUPPORT__
 126:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 127:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****       #define __FPU_USED       1U
 128:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     #else
 129:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 130:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****       #define __FPU_USED       0U
 131:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     #endif
 132:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   #else
 133:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     #define __FPU_USED         0U
 134:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   #endif
 135:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 136:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #elif defined ( __TASKING__ )
 137:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   #if defined __FPU_VFP__
 138:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 139:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****       #define __FPU_USED       1U
 140:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     #else
 141:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 142:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****       #define __FPU_USED       0U
 143:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     #endif
 144:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   #else
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 4


 145:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     #define __FPU_USED         0U
 146:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   #endif
 147:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 148:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #elif defined ( __CSMC__ )
 149:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   #if ( __CSMC__ & 0x400U)
 150:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 151:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****       #define __FPU_USED       1U
 152:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     #else
 153:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 154:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****       #define __FPU_USED       0U
 155:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     #endif
 156:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   #else
 157:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     #define __FPU_USED         0U
 158:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   #endif
 159:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 160:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #endif
 161:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 162:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #include "cmsis_compiler.h"               /* CMSIS compiler specific defines */
 163:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 164:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 165:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #ifdef __cplusplus
 166:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** }
 167:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #endif
 168:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 169:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #endif /* __CORE_CM4_H_GENERIC */
 170:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 171:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #ifndef __CMSIS_GENERIC
 172:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 173:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #ifndef __CORE_CM4_H_DEPENDANT
 174:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define __CORE_CM4_H_DEPENDANT
 175:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 176:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #ifdef __cplusplus
 177:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****  extern "C" {
 178:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #endif
 179:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 180:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /* check device defines and use defaults */
 181:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #if defined __CHECK_DEVICE_DEFINES
 182:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   #ifndef __CM4_REV
 183:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     #define __CM4_REV               0x0000U
 184:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     #warning "__CM4_REV not defined in device header file; using default!"
 185:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   #endif
 186:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 187:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   #ifndef __FPU_PRESENT
 188:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     #define __FPU_PRESENT             0U
 189:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     #warning "__FPU_PRESENT not defined in device header file; using default!"
 190:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   #endif
 191:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 192:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   #ifndef __MPU_PRESENT
 193:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     #define __MPU_PRESENT             0U
 194:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     #warning "__MPU_PRESENT not defined in device header file; using default!"
 195:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   #endif
 196:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 197:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   #ifndef __NVIC_PRIO_BITS
 198:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     #define __NVIC_PRIO_BITS          3U
 199:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 200:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   #endif
 201:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 5


 202:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   #ifndef __Vendor_SysTickConfig
 203:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     #define __Vendor_SysTickConfig    0U
 204:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 205:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   #endif
 206:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #endif
 207:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 208:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /* IO definitions (access restrictions to peripheral registers) */
 209:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /**
 210:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     \defgroup CMSIS_glob_defs CMSIS Global Defines
 211:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 212:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     <strong>IO Type Qualifiers</strong> are used
 213:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     \li to specify the access to peripheral variables.
 214:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     \li for automatic generation of peripheral register debug information.
 215:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** */
 216:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #ifdef __cplusplus
 217:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   #define   __I     volatile             /*!< Defines 'read only' permissions */
 218:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #else
 219:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   #define   __I     volatile const       /*!< Defines 'read only' permissions */
 220:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #endif
 221:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define     __O     volatile             /*!< Defines 'write only' permissions */
 222:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define     __IO    volatile             /*!< Defines 'read / write' permissions */
 223:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 224:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /* following defines should be used for structure members */
 225:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define     __IM     volatile const      /*! Defines 'read only' structure member permissions */
 226:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define     __OM     volatile            /*! Defines 'write only' structure member permissions */
 227:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define     __IOM    volatile            /*! Defines 'read / write' structure member permissions */
 228:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 229:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /*@} end of group Cortex_M4 */
 230:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 231:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 232:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 233:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /*******************************************************************************
 234:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****  *                 Register Abstraction
 235:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   Core Register contain:
 236:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   - Core Register
 237:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   - Core NVIC Register
 238:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   - Core SCB Register
 239:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   - Core SysTick Register
 240:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   - Core Debug Register
 241:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   - Core MPU Register
 242:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   - Core FPU Register
 243:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****  ******************************************************************************/
 244:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /**
 245:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \defgroup CMSIS_core_register Defines and Type Definitions
 246:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \brief Type definitions and defines for Cortex-M processor based devices.
 247:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** */
 248:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 249:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /**
 250:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \ingroup    CMSIS_core_register
 251:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \defgroup   CMSIS_CORE  Status and Control Registers
 252:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \brief      Core Register type definitions.
 253:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   @{
 254:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****  */
 255:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 256:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /**
 257:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \brief  Union type to access the Application Program Status Register (APSR).
 258:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****  */
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 6


 259:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** typedef union
 260:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** {
 261:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   struct
 262:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   {
 263:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     uint32_t _reserved0:16;              /*!< bit:  0..15  Reserved */
 264:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 265:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     uint32_t _reserved1:7;               /*!< bit: 20..26  Reserved */
 266:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 267:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 268:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 269:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 270:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 271:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 272:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 273:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** } APSR_Type;
 274:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 275:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /* APSR Register Definitions */
 276:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define APSR_N_Pos                         31U                                            /*!< APSR
 277:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define APSR_N_Msk                         (1UL << APSR_N_Pos)                            /*!< APSR
 278:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 279:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define APSR_Z_Pos                         30U                                            /*!< APSR
 280:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define APSR_Z_Msk                         (1UL << APSR_Z_Pos)                            /*!< APSR
 281:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 282:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define APSR_C_Pos                         29U                                            /*!< APSR
 283:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define APSR_C_Msk                         (1UL << APSR_C_Pos)                            /*!< APSR
 284:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 285:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define APSR_V_Pos                         28U                                            /*!< APSR
 286:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define APSR_V_Msk                         (1UL << APSR_V_Pos)                            /*!< APSR
 287:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 288:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define APSR_Q_Pos                         27U                                            /*!< APSR
 289:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define APSR_Q_Msk                         (1UL << APSR_Q_Pos)                            /*!< APSR
 290:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 291:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define APSR_GE_Pos                        16U                                            /*!< APSR
 292:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define APSR_GE_Msk                        (0xFUL << APSR_GE_Pos)                         /*!< APSR
 293:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 294:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 295:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /**
 296:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \brief  Union type to access the Interrupt Program Status Register (IPSR).
 297:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****  */
 298:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** typedef union
 299:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** {
 300:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   struct
 301:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   {
 302:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 303:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved */
 304:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 305:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 306:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** } IPSR_Type;
 307:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 308:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /* IPSR Register Definitions */
 309:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define IPSR_ISR_Pos                        0U                                            /*!< IPSR
 310:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define IPSR_ISR_Msk                       (0x1FFUL /*<< IPSR_ISR_Pos*/)                  /*!< IPSR
 311:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 312:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 313:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /**
 314:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 315:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****  */
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 7


 316:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** typedef union
 317:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** {
 318:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   struct
 319:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   {
 320:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 321:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     uint32_t _reserved0:1;               /*!< bit:      9  Reserved */
 322:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     uint32_t ICI_IT_1:6;                 /*!< bit: 10..15  ICI/IT part 1 */
 323:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 324:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     uint32_t _reserved1:4;               /*!< bit: 20..23  Reserved */
 325:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit */
 326:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     uint32_t ICI_IT_2:2;                 /*!< bit: 25..26  ICI/IT part 2 */
 327:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 328:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 329:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 330:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 331:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 332:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 333:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 334:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** } xPSR_Type;
 335:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 336:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /* xPSR Register Definitions */
 337:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define xPSR_N_Pos                         31U                                            /*!< xPSR
 338:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define xPSR_N_Msk                         (1UL << xPSR_N_Pos)                            /*!< xPSR
 339:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 340:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define xPSR_Z_Pos                         30U                                            /*!< xPSR
 341:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define xPSR_Z_Msk                         (1UL << xPSR_Z_Pos)                            /*!< xPSR
 342:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 343:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define xPSR_C_Pos                         29U                                            /*!< xPSR
 344:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define xPSR_C_Msk                         (1UL << xPSR_C_Pos)                            /*!< xPSR
 345:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 346:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define xPSR_V_Pos                         28U                                            /*!< xPSR
 347:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define xPSR_V_Msk                         (1UL << xPSR_V_Pos)                            /*!< xPSR
 348:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 349:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define xPSR_Q_Pos                         27U                                            /*!< xPSR
 350:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define xPSR_Q_Msk                         (1UL << xPSR_Q_Pos)                            /*!< xPSR
 351:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 352:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define xPSR_ICI_IT_2_Pos                  25U                                            /*!< xPSR
 353:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define xPSR_ICI_IT_2_Msk                  (3UL << xPSR_ICI_IT_2_Pos)                     /*!< xPSR
 354:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 355:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define xPSR_T_Pos                         24U                                            /*!< xPSR
 356:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define xPSR_T_Msk                         (1UL << xPSR_T_Pos)                            /*!< xPSR
 357:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 358:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define xPSR_GE_Pos                        16U                                            /*!< xPSR
 359:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define xPSR_GE_Msk                        (0xFUL << xPSR_GE_Pos)                         /*!< xPSR
 360:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 361:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define xPSR_ICI_IT_1_Pos                  10U                                            /*!< xPSR
 362:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define xPSR_ICI_IT_1_Msk                  (0x3FUL << xPSR_ICI_IT_1_Pos)                  /*!< xPSR
 363:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 364:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define xPSR_ISR_Pos                        0U                                            /*!< xPSR
 365:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define xPSR_ISR_Msk                       (0x1FFUL /*<< xPSR_ISR_Pos*/)                  /*!< xPSR
 366:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 367:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 368:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /**
 369:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \brief  Union type to access the Control Registers (CONTROL).
 370:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****  */
 371:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** typedef union
 372:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** {
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 8


 373:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   struct
 374:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   {
 375:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     uint32_t nPRIV:1;                    /*!< bit:      0  Execution privilege in Thread mode */
 376:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack to be used */
 377:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     uint32_t FPCA:1;                     /*!< bit:      2  FP extension active flag */
 378:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     uint32_t _reserved0:29;              /*!< bit:  3..31  Reserved */
 379:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 380:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 381:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** } CONTROL_Type;
 382:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 383:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /* CONTROL Register Definitions */
 384:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define CONTROL_FPCA_Pos                    2U                                            /*!< CONT
 385:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define CONTROL_FPCA_Msk                   (1UL << CONTROL_FPCA_Pos)                      /*!< CONT
 386:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 387:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define CONTROL_SPSEL_Pos                   1U                                            /*!< CONT
 388:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define CONTROL_SPSEL_Msk                  (1UL << CONTROL_SPSEL_Pos)                     /*!< CONT
 389:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 390:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define CONTROL_nPRIV_Pos                   0U                                            /*!< CONT
 391:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define CONTROL_nPRIV_Msk                  (1UL /*<< CONTROL_nPRIV_Pos*/)                 /*!< CONT
 392:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 393:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /*@} end of group CMSIS_CORE */
 394:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 395:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 396:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /**
 397:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \ingroup    CMSIS_core_register
 398:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \defgroup   CMSIS_NVIC  Nested Vectored Interrupt Controller (NVIC)
 399:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \brief      Type definitions for the NVIC Registers
 400:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   @{
 401:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****  */
 402:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 403:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /**
 404:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 405:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****  */
 406:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** typedef struct
 407:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** {
 408:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IOM uint32_t ISER[8U];               /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register */
 409:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****         uint32_t RESERVED0[24U];
 410:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IOM uint32_t ICER[8U];               /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
 411:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****         uint32_t RSERVED1[24U];
 412:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IOM uint32_t ISPR[8U];               /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register *
 413:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****         uint32_t RESERVED2[24U];
 414:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IOM uint32_t ICPR[8U];               /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
 415:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****         uint32_t RESERVED3[24U];
 416:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IOM uint32_t IABR[8U];               /*!< Offset: 0x200 (R/W)  Interrupt Active bit Register */
 417:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****         uint32_t RESERVED4[56U];
 418:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IOM uint8_t  IP[240U];               /*!< Offset: 0x300 (R/W)  Interrupt Priority Register (8Bi
 419:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****         uint32_t RESERVED5[644U];
 420:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __OM  uint32_t STIR;                   /*!< Offset: 0xE00 ( /W)  Software Trigger Interrupt Regis
 421:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** }  NVIC_Type;
 422:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 423:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /* Software Triggered Interrupt Register Definitions */
 424:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define NVIC_STIR_INTID_Pos                 0U                                         /*!< STIR: I
 425:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define NVIC_STIR_INTID_Msk                (0x1FFUL /*<< NVIC_STIR_INTID_Pos*/)        /*!< STIR: I
 426:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 427:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /*@} end of group CMSIS_NVIC */
 428:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 429:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 9


 430:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /**
 431:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \ingroup  CMSIS_core_register
 432:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \defgroup CMSIS_SCB     System Control Block (SCB)
 433:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \brief    Type definitions for the System Control Block Registers
 434:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   @{
 435:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****  */
 436:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 437:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /**
 438:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \brief  Structure type to access the System Control Block (SCB).
 439:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****  */
 440:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** typedef struct
 441:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** {
 442:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IM  uint32_t CPUID;                  /*!< Offset: 0x000 (R/ )  CPUID Base Register */
 443:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IOM uint32_t ICSR;                   /*!< Offset: 0x004 (R/W)  Interrupt Control and State Regi
 444:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IOM uint32_t VTOR;                   /*!< Offset: 0x008 (R/W)  Vector Table Offset Register */
 445:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IOM uint32_t AIRCR;                  /*!< Offset: 0x00C (R/W)  Application Interrupt and Reset 
 446:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IOM uint32_t SCR;                    /*!< Offset: 0x010 (R/W)  System Control Register */
 447:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IOM uint32_t CCR;                    /*!< Offset: 0x014 (R/W)  Configuration Control Register *
 448:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IOM uint8_t  SHP[12U];               /*!< Offset: 0x018 (R/W)  System Handlers Priority Registe
 449:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IOM uint32_t SHCSR;                  /*!< Offset: 0x024 (R/W)  System Handler Control and State
 450:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IOM uint32_t CFSR;                   /*!< Offset: 0x028 (R/W)  Configurable Fault Status Regist
 451:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IOM uint32_t HFSR;                   /*!< Offset: 0x02C (R/W)  HardFault Status Register */
 452:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IOM uint32_t DFSR;                   /*!< Offset: 0x030 (R/W)  Debug Fault Status Register */
 453:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IOM uint32_t MMFAR;                  /*!< Offset: 0x034 (R/W)  MemManage Fault Address Register
 454:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IOM uint32_t BFAR;                   /*!< Offset: 0x038 (R/W)  BusFault Address Register */
 455:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IOM uint32_t AFSR;                   /*!< Offset: 0x03C (R/W)  Auxiliary Fault Status Register 
 456:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IM  uint32_t PFR[2U];                /*!< Offset: 0x040 (R/ )  Processor Feature Register */
 457:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IM  uint32_t DFR;                    /*!< Offset: 0x048 (R/ )  Debug Feature Register */
 458:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IM  uint32_t ADR;                    /*!< Offset: 0x04C (R/ )  Auxiliary Feature Register */
 459:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IM  uint32_t MMFR[4U];               /*!< Offset: 0x050 (R/ )  Memory Model Feature Register */
 460:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IM  uint32_t ISAR[5U];               /*!< Offset: 0x060 (R/ )  Instruction Set Attributes Regis
 461:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****         uint32_t RESERVED0[5U];
 462:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IOM uint32_t CPACR;                  /*!< Offset: 0x088 (R/W)  Coprocessor Access Control Regis
 463:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** } SCB_Type;
 464:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 465:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /* SCB CPUID Register Definitions */
 466:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24U                                            /*!< SCB 
 467:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 468:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 469:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_CPUID_VARIANT_Pos              20U                                            /*!< SCB 
 470:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 471:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 472:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16U                                            /*!< SCB 
 473:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 474:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 475:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_CPUID_PARTNO_Pos                4U                                            /*!< SCB 
 476:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 477:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 478:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_CPUID_REVISION_Pos              0U                                            /*!< SCB 
 479:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL /*<< SCB_CPUID_REVISION_Pos*/)          /*!< SCB 
 480:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 481:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /* SCB Interrupt Control State Register Definitions */
 482:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Pos            31U                                            /*!< SCB 
 483:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1UL << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 484:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 485:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_ICSR_PENDSVSET_Pos             28U                                            /*!< SCB 
 486:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 10


 487:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 488:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Pos             27U                                            /*!< SCB 
 489:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 490:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 491:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_ICSR_PENDSTSET_Pos             26U                                            /*!< SCB 
 492:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 493:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 494:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Pos             25U                                            /*!< SCB 
 495:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 496:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 497:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23U                                            /*!< SCB 
 498:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 499:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 500:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_ICSR_ISRPENDING_Pos            22U                                            /*!< SCB 
 501:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 502:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 503:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_ICSR_VECTPENDING_Pos           12U                                            /*!< SCB 
 504:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 505:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 506:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_ICSR_RETTOBASE_Pos             11U                                            /*!< SCB 
 507:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_ICSR_RETTOBASE_Msk             (1UL << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 508:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 509:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Pos             0U                                            /*!< SCB 
 510:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL /*<< SCB_ICSR_VECTACTIVE_Pos*/)       /*!< SCB 
 511:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 512:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /* SCB Vector Table Offset Register Definitions */
 513:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_VTOR_TBLOFF_Pos                 7U                                            /*!< SCB 
 514:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_VTOR_TBLOFF_Msk                (0x1FFFFFFUL << SCB_VTOR_TBLOFF_Pos)           /*!< SCB 
 515:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 516:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 517:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_AIRCR_VECTKEY_Pos              16U                                            /*!< SCB 
 518:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 519:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 520:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16U                                            /*!< SCB 
 521:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 522:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 523:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Pos            15U                                            /*!< SCB 
 524:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 525:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 526:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Pos              8U                                            /*!< SCB 
 527:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7UL << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 528:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 529:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2U                                            /*!< SCB 
 530:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 531:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 532:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1U                                            /*!< SCB 
 533:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 534:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 535:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_AIRCR_VECTRESET_Pos             0U                                            /*!< SCB 
 536:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_AIRCR_VECTRESET_Msk            (1UL /*<< SCB_AIRCR_VECTRESET_Pos*/)           /*!< SCB 
 537:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 538:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /* SCB System Control Register Definitions */
 539:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_SCR_SEVONPEND_Pos               4U                                            /*!< SCB 
 540:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 541:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 542:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Pos               2U                                            /*!< SCB 
 543:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 11


 544:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 545:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1U                                            /*!< SCB 
 546:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 547:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 548:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /* SCB Configuration Control Register Definitions */
 549:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_CCR_STKALIGN_Pos                9U                                            /*!< SCB 
 550:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_CCR_STKALIGN_Msk               (1UL << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 551:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 552:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Pos               8U                                            /*!< SCB 
 553:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1UL << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 554:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 555:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Pos               4U                                            /*!< SCB 
 556:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1UL << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 557:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 558:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3U                                            /*!< SCB 
 559:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 560:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 561:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_CCR_USERSETMPEND_Pos            1U                                            /*!< SCB 
 562:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_CCR_USERSETMPEND_Msk           (1UL << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 563:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 564:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0U                                            /*!< SCB 
 565:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1UL /*<< SCB_CCR_NONBASETHRDENA_Pos*/)        /*!< SCB 
 566:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 567:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /* SCB System Handler Control and State Register Definitions */
 568:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18U                                            /*!< SCB 
 569:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1UL << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 570:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 571:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17U                                            /*!< SCB 
 572:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1UL << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 573:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 574:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16U                                            /*!< SCB 
 575:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1UL << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 576:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 577:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15U                                            /*!< SCB 
 578:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 579:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 580:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14U                                            /*!< SCB 
 581:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1UL << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 582:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 583:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13U                                            /*!< SCB 
 584:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1UL << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 585:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 586:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12U                                            /*!< SCB 
 587:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1UL << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 588:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 589:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11U                                            /*!< SCB 
 590:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1UL << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 591:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 592:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Pos            10U                                            /*!< SCB 
 593:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1UL << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 594:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 595:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_SHCSR_MONITORACT_Pos            8U                                            /*!< SCB 
 596:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_SHCSR_MONITORACT_Msk           (1UL << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 597:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 598:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Pos             7U                                            /*!< SCB 
 599:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1UL << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 600:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 12


 601:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3U                                            /*!< SCB 
 602:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1UL << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 603:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 604:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1U                                            /*!< SCB 
 605:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1UL << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 606:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 607:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0U                                            /*!< SCB 
 608:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1UL /*<< SCB_SHCSR_MEMFAULTACT_Pos*/)         /*!< SCB 
 609:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 610:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /* SCB Configurable Fault Status Register Definitions */
 611:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Pos            16U                                            /*!< SCB 
 612:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFUL << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 613:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 614:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8U                                            /*!< SCB 
 615:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFUL << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 616:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 617:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0U                                            /*!< SCB 
 618:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFUL /*<< SCB_CFSR_MEMFAULTSR_Pos*/)        /*!< SCB 
 619:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 620:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /* MemManage Fault Status Register (part of SCB Configurable Fault Status Register) */
 621:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_CFSR_MMARVALID_Pos             (SCB_SHCSR_MEMFAULTACT_Pos + 7U)               /*!< SCB 
 622:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_CFSR_MMARVALID_Msk             (1UL << SCB_CFSR_MMARVALID_Pos)                /*!< SCB 
 623:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 624:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_CFSR_MLSPERR_Pos               (SCB_SHCSR_MEMFAULTACT_Pos + 5U)               /*!< SCB 
 625:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_CFSR_MLSPERR_Msk               (1UL << SCB_CFSR_MLSPERR_Pos)                  /*!< SCB 
 626:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 627:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_CFSR_MSTKERR_Pos               (SCB_SHCSR_MEMFAULTACT_Pos + 4U)               /*!< SCB 
 628:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_CFSR_MSTKERR_Msk               (1UL << SCB_CFSR_MSTKERR_Pos)                  /*!< SCB 
 629:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 630:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_CFSR_MUNSTKERR_Pos             (SCB_SHCSR_MEMFAULTACT_Pos + 3U)               /*!< SCB 
 631:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_CFSR_MUNSTKERR_Msk             (1UL << SCB_CFSR_MUNSTKERR_Pos)                /*!< SCB 
 632:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 633:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_CFSR_DACCVIOL_Pos              (SCB_SHCSR_MEMFAULTACT_Pos + 1U)               /*!< SCB 
 634:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_CFSR_DACCVIOL_Msk              (1UL << SCB_CFSR_DACCVIOL_Pos)                 /*!< SCB 
 635:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 636:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_CFSR_IACCVIOL_Pos              (SCB_SHCSR_MEMFAULTACT_Pos + 0U)               /*!< SCB 
 637:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_CFSR_IACCVIOL_Msk              (1UL /*<< SCB_CFSR_IACCVIOL_Pos*/)             /*!< SCB 
 638:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 639:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /* BusFault Status Register (part of SCB Configurable Fault Status Register) */
 640:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_CFSR_BFARVALID_Pos            (SCB_CFSR_BUSFAULTSR_Pos + 7U)                  /*!< SCB 
 641:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_CFSR_BFARVALID_Msk            (1UL << SCB_CFSR_BFARVALID_Pos)                 /*!< SCB 
 642:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 643:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_CFSR_LSPERR_Pos               (SCB_CFSR_BUSFAULTSR_Pos + 5U)                  /*!< SCB 
 644:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_CFSR_LSPERR_Msk               (1UL << SCB_CFSR_LSPERR_Pos)                    /*!< SCB 
 645:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 646:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_CFSR_STKERR_Pos               (SCB_CFSR_BUSFAULTSR_Pos + 4U)                  /*!< SCB 
 647:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_CFSR_STKERR_Msk               (1UL << SCB_CFSR_STKERR_Pos)                    /*!< SCB 
 648:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 649:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_CFSR_UNSTKERR_Pos             (SCB_CFSR_BUSFAULTSR_Pos + 3U)                  /*!< SCB 
 650:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_CFSR_UNSTKERR_Msk             (1UL << SCB_CFSR_UNSTKERR_Pos)                  /*!< SCB 
 651:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 652:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_CFSR_IMPRECISERR_Pos          (SCB_CFSR_BUSFAULTSR_Pos + 2U)                  /*!< SCB 
 653:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_CFSR_IMPRECISERR_Msk          (1UL << SCB_CFSR_IMPRECISERR_Pos)               /*!< SCB 
 654:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 655:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_CFSR_PRECISERR_Pos            (SCB_CFSR_BUSFAULTSR_Pos + 1U)                  /*!< SCB 
 656:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_CFSR_PRECISERR_Msk            (1UL << SCB_CFSR_PRECISERR_Pos)                 /*!< SCB 
 657:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 13


 658:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_CFSR_IBUSERR_Pos              (SCB_CFSR_BUSFAULTSR_Pos + 0U)                  /*!< SCB 
 659:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_CFSR_IBUSERR_Msk              (1UL << SCB_CFSR_IBUSERR_Pos)                   /*!< SCB 
 660:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 661:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /* UsageFault Status Register (part of SCB Configurable Fault Status Register) */
 662:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_CFSR_DIVBYZERO_Pos            (SCB_CFSR_USGFAULTSR_Pos + 9U)                  /*!< SCB 
 663:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_CFSR_DIVBYZERO_Msk            (1UL << SCB_CFSR_DIVBYZERO_Pos)                 /*!< SCB 
 664:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 665:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_CFSR_UNALIGNED_Pos            (SCB_CFSR_USGFAULTSR_Pos + 8U)                  /*!< SCB 
 666:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_CFSR_UNALIGNED_Msk            (1UL << SCB_CFSR_UNALIGNED_Pos)                 /*!< SCB 
 667:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 668:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_CFSR_NOCP_Pos                 (SCB_CFSR_USGFAULTSR_Pos + 3U)                  /*!< SCB 
 669:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_CFSR_NOCP_Msk                 (1UL << SCB_CFSR_NOCP_Pos)                      /*!< SCB 
 670:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 671:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_CFSR_INVPC_Pos                (SCB_CFSR_USGFAULTSR_Pos + 2U)                  /*!< SCB 
 672:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_CFSR_INVPC_Msk                (1UL << SCB_CFSR_INVPC_Pos)                     /*!< SCB 
 673:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 674:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_CFSR_INVSTATE_Pos             (SCB_CFSR_USGFAULTSR_Pos + 1U)                  /*!< SCB 
 675:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_CFSR_INVSTATE_Msk             (1UL << SCB_CFSR_INVSTATE_Pos)                  /*!< SCB 
 676:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 677:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_CFSR_UNDEFINSTR_Pos           (SCB_CFSR_USGFAULTSR_Pos + 0U)                  /*!< SCB 
 678:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_CFSR_UNDEFINSTR_Msk           (1UL << SCB_CFSR_UNDEFINSTR_Pos)                /*!< SCB 
 679:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 680:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /* SCB Hard Fault Status Register Definitions */
 681:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Pos              31U                                            /*!< SCB 
 682:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1UL << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 683:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 684:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_HFSR_FORCED_Pos                30U                                            /*!< SCB 
 685:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_HFSR_FORCED_Msk                (1UL << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 686:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 687:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_HFSR_VECTTBL_Pos                1U                                            /*!< SCB 
 688:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_HFSR_VECTTBL_Msk               (1UL << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 689:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 690:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /* SCB Debug Fault Status Register Definitions */
 691:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_DFSR_EXTERNAL_Pos               4U                                            /*!< SCB 
 692:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_DFSR_EXTERNAL_Msk              (1UL << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 693:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 694:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_DFSR_VCATCH_Pos                 3U                                            /*!< SCB 
 695:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_DFSR_VCATCH_Msk                (1UL << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 696:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 697:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_DFSR_DWTTRAP_Pos                2U                                            /*!< SCB 
 698:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_DFSR_DWTTRAP_Msk               (1UL << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 699:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 700:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_DFSR_BKPT_Pos                   1U                                            /*!< SCB 
 701:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_DFSR_BKPT_Msk                  (1UL << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 702:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 703:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_DFSR_HALTED_Pos                 0U                                            /*!< SCB 
 704:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_DFSR_HALTED_Msk                (1UL /*<< SCB_DFSR_HALTED_Pos*/)               /*!< SCB 
 705:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 706:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /*@} end of group CMSIS_SCB */
 707:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 708:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 709:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /**
 710:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \ingroup  CMSIS_core_register
 711:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \defgroup CMSIS_SCnSCB System Controls not in SCB (SCnSCB)
 712:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \brief    Type definitions for the System Control and ID Register not in the SCB
 713:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   @{
 714:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****  */
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 14


 715:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 716:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /**
 717:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \brief  Structure type to access the System Control and ID Register not in the SCB.
 718:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****  */
 719:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** typedef struct
 720:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** {
 721:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****         uint32_t RESERVED0[1U];
 722:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IM  uint32_t ICTR;                   /*!< Offset: 0x004 (R/ )  Interrupt Controller Type Regist
 723:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IOM uint32_t ACTLR;                  /*!< Offset: 0x008 (R/W)  Auxiliary Control Register */
 724:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** } SCnSCB_Type;
 725:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 726:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /* Interrupt Controller Type Register Definitions */
 727:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Pos         0U                                         /*!< ICTR: I
 728:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Msk        (0xFUL /*<< SCnSCB_ICTR_INTLINESNUM_Pos*/)  /*!< ICTR: I
 729:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 730:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /* Auxiliary Control Register Definitions */
 731:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Pos            9U                                         /*!< ACTLR: 
 732:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Msk           (1UL << SCnSCB_ACTLR_DISOOFP_Pos)           /*!< ACTLR: 
 733:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 734:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Pos            8U                                         /*!< ACTLR: 
 735:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Msk           (1UL << SCnSCB_ACTLR_DISFPCA_Pos)           /*!< ACTLR: 
 736:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 737:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Pos            2U                                         /*!< ACTLR: 
 738:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Msk           (1UL << SCnSCB_ACTLR_DISFOLD_Pos)           /*!< ACTLR: 
 739:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 740:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Pos         1U                                         /*!< ACTLR: 
 741:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Msk        (1UL << SCnSCB_ACTLR_DISDEFWBUF_Pos)        /*!< ACTLR: 
 742:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 743:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Pos         0U                                         /*!< ACTLR: 
 744:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Msk        (1UL /*<< SCnSCB_ACTLR_DISMCYCINT_Pos*/)    /*!< ACTLR: 
 745:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 746:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /*@} end of group CMSIS_SCnotSCB */
 747:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 748:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 749:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /**
 750:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \ingroup  CMSIS_core_register
 751:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \defgroup CMSIS_SysTick     System Tick Timer (SysTick)
 752:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \brief    Type definitions for the System Timer Registers.
 753:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   @{
 754:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****  */
 755:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 756:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /**
 757:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \brief  Structure type to access the System Timer (SysTick).
 758:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****  */
 759:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** typedef struct
 760:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** {
 761:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
 762:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IOM uint32_t LOAD;                   /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register */
 763:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IOM uint32_t VAL;                    /*!< Offset: 0x008 (R/W)  SysTick Current Value Register *
 764:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IM  uint32_t CALIB;                  /*!< Offset: 0x00C (R/ )  SysTick Calibration Register */
 765:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** } SysTick_Type;
 766:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 767:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /* SysTick Control / Status Register Definitions */
 768:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16U                                            /*!< SysT
 769:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 770:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 771:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2U                                            /*!< SysT
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 15


 772:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 773:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 774:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SysTick_CTRL_TICKINT_Pos            1U                                            /*!< SysT
 775:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 776:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 777:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SysTick_CTRL_ENABLE_Pos             0U                                            /*!< SysT
 778:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL /*<< SysTick_CTRL_ENABLE_Pos*/)           /*!< SysT
 779:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 780:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /* SysTick Reload Register Definitions */
 781:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SysTick_LOAD_RELOAD_Pos             0U                                            /*!< SysT
 782:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL /*<< SysTick_LOAD_RELOAD_Pos*/)    /*!< SysT
 783:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 784:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /* SysTick Current Register Definitions */
 785:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SysTick_VAL_CURRENT_Pos             0U                                            /*!< SysT
 786:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL /*<< SysTick_VAL_CURRENT_Pos*/)    /*!< SysT
 787:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 788:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /* SysTick Calibration Register Definitions */
 789:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SysTick_CALIB_NOREF_Pos            31U                                            /*!< SysT
 790:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 791:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 792:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SysTick_CALIB_SKEW_Pos             30U                                            /*!< SysT
 793:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 794:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 795:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SysTick_CALIB_TENMS_Pos             0U                                            /*!< SysT
 796:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL /*<< SysTick_CALIB_TENMS_Pos*/)    /*!< SysT
 797:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 798:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /*@} end of group CMSIS_SysTick */
 799:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 800:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 801:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /**
 802:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \ingroup  CMSIS_core_register
 803:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \defgroup CMSIS_ITM     Instrumentation Trace Macrocell (ITM)
 804:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \brief    Type definitions for the Instrumentation Trace Macrocell (ITM)
 805:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   @{
 806:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****  */
 807:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 808:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /**
 809:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \brief  Structure type to access the Instrumentation Trace Macrocell Register (ITM).
 810:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****  */
 811:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** typedef struct
 812:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** {
 813:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __OM  union
 814:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   {
 815:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     __OM  uint8_t    u8;                 /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 8-bit */
 816:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     __OM  uint16_t   u16;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 16-bit */
 817:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     __OM  uint32_t   u32;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 32-bit */
 818:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   }  PORT [32U];                         /*!< Offset: 0x000 ( /W)  ITM Stimulus Port Registers */
 819:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****         uint32_t RESERVED0[864U];
 820:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IOM uint32_t TER;                    /*!< Offset: 0xE00 (R/W)  ITM Trace Enable Register */
 821:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****         uint32_t RESERVED1[15U];
 822:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IOM uint32_t TPR;                    /*!< Offset: 0xE40 (R/W)  ITM Trace Privilege Register */
 823:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****         uint32_t RESERVED2[15U];
 824:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IOM uint32_t TCR;                    /*!< Offset: 0xE80 (R/W)  ITM Trace Control Register */
 825:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****         uint32_t RESERVED3[29U];
 826:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __OM  uint32_t IWR;                    /*!< Offset: 0xEF8 ( /W)  ITM Integration Write Register *
 827:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IM  uint32_t IRR;                    /*!< Offset: 0xEFC (R/ )  ITM Integration Read Register */
 828:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IOM uint32_t IMCR;                   /*!< Offset: 0xF00 (R/W)  ITM Integration Mode Control Reg
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 16


 829:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****         uint32_t RESERVED4[43U];
 830:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __OM  uint32_t LAR;                    /*!< Offset: 0xFB0 ( /W)  ITM Lock Access Register */
 831:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IM  uint32_t LSR;                    /*!< Offset: 0xFB4 (R/ )  ITM Lock Status Register */
 832:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****         uint32_t RESERVED5[6U];
 833:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IM  uint32_t PID4;                   /*!< Offset: 0xFD0 (R/ )  ITM Peripheral Identification Re
 834:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IM  uint32_t PID5;                   /*!< Offset: 0xFD4 (R/ )  ITM Peripheral Identification Re
 835:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IM  uint32_t PID6;                   /*!< Offset: 0xFD8 (R/ )  ITM Peripheral Identification Re
 836:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IM  uint32_t PID7;                   /*!< Offset: 0xFDC (R/ )  ITM Peripheral Identification Re
 837:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IM  uint32_t PID0;                   /*!< Offset: 0xFE0 (R/ )  ITM Peripheral Identification Re
 838:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IM  uint32_t PID1;                   /*!< Offset: 0xFE4 (R/ )  ITM Peripheral Identification Re
 839:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IM  uint32_t PID2;                   /*!< Offset: 0xFE8 (R/ )  ITM Peripheral Identification Re
 840:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IM  uint32_t PID3;                   /*!< Offset: 0xFEC (R/ )  ITM Peripheral Identification Re
 841:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IM  uint32_t CID0;                   /*!< Offset: 0xFF0 (R/ )  ITM Component  Identification Re
 842:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IM  uint32_t CID1;                   /*!< Offset: 0xFF4 (R/ )  ITM Component  Identification Re
 843:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IM  uint32_t CID2;                   /*!< Offset: 0xFF8 (R/ )  ITM Component  Identification Re
 844:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IM  uint32_t CID3;                   /*!< Offset: 0xFFC (R/ )  ITM Component  Identification Re
 845:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** } ITM_Type;
 846:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 847:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /* ITM Trace Privilege Register Definitions */
 848:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define ITM_TPR_PRIVMASK_Pos                0U                                            /*!< ITM 
 849:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFFFFFFFFUL /*<< ITM_TPR_PRIVMASK_Pos*/)     /*!< ITM 
 850:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 851:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /* ITM Trace Control Register Definitions */
 852:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define ITM_TCR_BUSY_Pos                   23U                                            /*!< ITM 
 853:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define ITM_TCR_BUSY_Msk                   (1UL << ITM_TCR_BUSY_Pos)                      /*!< ITM 
 854:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 855:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define ITM_TCR_TraceBusID_Pos             16U                                            /*!< ITM 
 856:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define ITM_TCR_TraceBusID_Msk             (0x7FUL << ITM_TCR_TraceBusID_Pos)             /*!< ITM 
 857:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 858:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define ITM_TCR_GTSFREQ_Pos                10U                                            /*!< ITM 
 859:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define ITM_TCR_GTSFREQ_Msk                (3UL << ITM_TCR_GTSFREQ_Pos)                   /*!< ITM 
 860:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 861:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define ITM_TCR_TSPrescale_Pos              8U                                            /*!< ITM 
 862:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define ITM_TCR_TSPrescale_Msk             (3UL << ITM_TCR_TSPrescale_Pos)                /*!< ITM 
 863:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 864:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define ITM_TCR_SWOENA_Pos                  4U                                            /*!< ITM 
 865:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define ITM_TCR_SWOENA_Msk                 (1UL << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
 866:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 867:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define ITM_TCR_DWTENA_Pos                  3U                                            /*!< ITM 
 868:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define ITM_TCR_DWTENA_Msk                 (1UL << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
 869:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 870:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define ITM_TCR_SYNCENA_Pos                 2U                                            /*!< ITM 
 871:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define ITM_TCR_SYNCENA_Msk                (1UL << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
 872:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 873:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define ITM_TCR_TSENA_Pos                   1U                                            /*!< ITM 
 874:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define ITM_TCR_TSENA_Msk                  (1UL << ITM_TCR_TSENA_Pos)                     /*!< ITM 
 875:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 876:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define ITM_TCR_ITMENA_Pos                  0U                                            /*!< ITM 
 877:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define ITM_TCR_ITMENA_Msk                 (1UL /*<< ITM_TCR_ITMENA_Pos*/)                /*!< ITM 
 878:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 879:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /* ITM Integration Write Register Definitions */
 880:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define ITM_IWR_ATVALIDM_Pos                0U                                            /*!< ITM 
 881:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define ITM_IWR_ATVALIDM_Msk               (1UL /*<< ITM_IWR_ATVALIDM_Pos*/)              /*!< ITM 
 882:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 883:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /* ITM Integration Read Register Definitions */
 884:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define ITM_IRR_ATREADYM_Pos                0U                                            /*!< ITM 
 885:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define ITM_IRR_ATREADYM_Msk               (1UL /*<< ITM_IRR_ATREADYM_Pos*/)              /*!< ITM 
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 17


 886:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 887:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /* ITM Integration Mode Control Register Definitions */
 888:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define ITM_IMCR_INTEGRATION_Pos            0U                                            /*!< ITM 
 889:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define ITM_IMCR_INTEGRATION_Msk           (1UL /*<< ITM_IMCR_INTEGRATION_Pos*/)          /*!< ITM 
 890:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 891:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /* ITM Lock Status Register Definitions */
 892:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define ITM_LSR_ByteAcc_Pos                 2U                                            /*!< ITM 
 893:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define ITM_LSR_ByteAcc_Msk                (1UL << ITM_LSR_ByteAcc_Pos)                   /*!< ITM 
 894:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 895:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define ITM_LSR_Access_Pos                  1U                                            /*!< ITM 
 896:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define ITM_LSR_Access_Msk                 (1UL << ITM_LSR_Access_Pos)                    /*!< ITM 
 897:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 898:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define ITM_LSR_Present_Pos                 0U                                            /*!< ITM 
 899:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define ITM_LSR_Present_Msk                (1UL /*<< ITM_LSR_Present_Pos*/)               /*!< ITM 
 900:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 901:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /*@}*/ /* end of group CMSIS_ITM */
 902:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 903:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 904:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /**
 905:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \ingroup  CMSIS_core_register
 906:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \defgroup CMSIS_DWT     Data Watchpoint and Trace (DWT)
 907:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \brief    Type definitions for the Data Watchpoint and Trace (DWT)
 908:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   @{
 909:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****  */
 910:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 911:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /**
 912:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \brief  Structure type to access the Data Watchpoint and Trace Register (DWT).
 913:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****  */
 914:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** typedef struct
 915:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** {
 916:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  Control Register */
 917:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IOM uint32_t CYCCNT;                 /*!< Offset: 0x004 (R/W)  Cycle Count Register */
 918:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IOM uint32_t CPICNT;                 /*!< Offset: 0x008 (R/W)  CPI Count Register */
 919:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IOM uint32_t EXCCNT;                 /*!< Offset: 0x00C (R/W)  Exception Overhead Count Registe
 920:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IOM uint32_t SLEEPCNT;               /*!< Offset: 0x010 (R/W)  Sleep Count Register */
 921:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IOM uint32_t LSUCNT;                 /*!< Offset: 0x014 (R/W)  LSU Count Register */
 922:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IOM uint32_t FOLDCNT;                /*!< Offset: 0x018 (R/W)  Folded-instruction Count Registe
 923:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IM  uint32_t PCSR;                   /*!< Offset: 0x01C (R/ )  Program Counter Sample Register 
 924:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IOM uint32_t COMP0;                  /*!< Offset: 0x020 (R/W)  Comparator Register 0 */
 925:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IOM uint32_t MASK0;                  /*!< Offset: 0x024 (R/W)  Mask Register 0 */
 926:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IOM uint32_t FUNCTION0;              /*!< Offset: 0x028 (R/W)  Function Register 0 */
 927:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****         uint32_t RESERVED0[1U];
 928:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IOM uint32_t COMP1;                  /*!< Offset: 0x030 (R/W)  Comparator Register 1 */
 929:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IOM uint32_t MASK1;                  /*!< Offset: 0x034 (R/W)  Mask Register 1 */
 930:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IOM uint32_t FUNCTION1;              /*!< Offset: 0x038 (R/W)  Function Register 1 */
 931:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****         uint32_t RESERVED1[1U];
 932:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IOM uint32_t COMP2;                  /*!< Offset: 0x040 (R/W)  Comparator Register 2 */
 933:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IOM uint32_t MASK2;                  /*!< Offset: 0x044 (R/W)  Mask Register 2 */
 934:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IOM uint32_t FUNCTION2;              /*!< Offset: 0x048 (R/W)  Function Register 2 */
 935:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****         uint32_t RESERVED2[1U];
 936:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IOM uint32_t COMP3;                  /*!< Offset: 0x050 (R/W)  Comparator Register 3 */
 937:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IOM uint32_t MASK3;                  /*!< Offset: 0x054 (R/W)  Mask Register 3 */
 938:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IOM uint32_t FUNCTION3;              /*!< Offset: 0x058 (R/W)  Function Register 3 */
 939:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** } DWT_Type;
 940:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 941:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /* DWT Control Register Definitions */
 942:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define DWT_CTRL_NUMCOMP_Pos               28U                                         /*!< DWT CTR
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 18


 943:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define DWT_CTRL_NUMCOMP_Msk               (0xFUL << DWT_CTRL_NUMCOMP_Pos)             /*!< DWT CTR
 944:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 945:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define DWT_CTRL_NOTRCPKT_Pos              27U                                         /*!< DWT CTR
 946:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define DWT_CTRL_NOTRCPKT_Msk              (0x1UL << DWT_CTRL_NOTRCPKT_Pos)            /*!< DWT CTR
 947:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 948:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define DWT_CTRL_NOEXTTRIG_Pos             26U                                         /*!< DWT CTR
 949:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define DWT_CTRL_NOEXTTRIG_Msk             (0x1UL << DWT_CTRL_NOEXTTRIG_Pos)           /*!< DWT CTR
 950:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 951:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define DWT_CTRL_NOCYCCNT_Pos              25U                                         /*!< DWT CTR
 952:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define DWT_CTRL_NOCYCCNT_Msk              (0x1UL << DWT_CTRL_NOCYCCNT_Pos)            /*!< DWT CTR
 953:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 954:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define DWT_CTRL_NOPRFCNT_Pos              24U                                         /*!< DWT CTR
 955:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define DWT_CTRL_NOPRFCNT_Msk              (0x1UL << DWT_CTRL_NOPRFCNT_Pos)            /*!< DWT CTR
 956:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 957:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define DWT_CTRL_CYCEVTENA_Pos             22U                                         /*!< DWT CTR
 958:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define DWT_CTRL_CYCEVTENA_Msk             (0x1UL << DWT_CTRL_CYCEVTENA_Pos)           /*!< DWT CTR
 959:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 960:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define DWT_CTRL_FOLDEVTENA_Pos            21U                                         /*!< DWT CTR
 961:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define DWT_CTRL_FOLDEVTENA_Msk            (0x1UL << DWT_CTRL_FOLDEVTENA_Pos)          /*!< DWT CTR
 962:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 963:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define DWT_CTRL_LSUEVTENA_Pos             20U                                         /*!< DWT CTR
 964:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define DWT_CTRL_LSUEVTENA_Msk             (0x1UL << DWT_CTRL_LSUEVTENA_Pos)           /*!< DWT CTR
 965:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 966:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define DWT_CTRL_SLEEPEVTENA_Pos           19U                                         /*!< DWT CTR
 967:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define DWT_CTRL_SLEEPEVTENA_Msk           (0x1UL << DWT_CTRL_SLEEPEVTENA_Pos)         /*!< DWT CTR
 968:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 969:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define DWT_CTRL_EXCEVTENA_Pos             18U                                         /*!< DWT CTR
 970:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define DWT_CTRL_EXCEVTENA_Msk             (0x1UL << DWT_CTRL_EXCEVTENA_Pos)           /*!< DWT CTR
 971:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 972:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define DWT_CTRL_CPIEVTENA_Pos             17U                                         /*!< DWT CTR
 973:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define DWT_CTRL_CPIEVTENA_Msk             (0x1UL << DWT_CTRL_CPIEVTENA_Pos)           /*!< DWT CTR
 974:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 975:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define DWT_CTRL_EXCTRCENA_Pos             16U                                         /*!< DWT CTR
 976:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define DWT_CTRL_EXCTRCENA_Msk             (0x1UL << DWT_CTRL_EXCTRCENA_Pos)           /*!< DWT CTR
 977:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 978:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define DWT_CTRL_PCSAMPLENA_Pos            12U                                         /*!< DWT CTR
 979:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define DWT_CTRL_PCSAMPLENA_Msk            (0x1UL << DWT_CTRL_PCSAMPLENA_Pos)          /*!< DWT CTR
 980:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 981:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define DWT_CTRL_SYNCTAP_Pos               10U                                         /*!< DWT CTR
 982:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define DWT_CTRL_SYNCTAP_Msk               (0x3UL << DWT_CTRL_SYNCTAP_Pos)             /*!< DWT CTR
 983:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 984:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define DWT_CTRL_CYCTAP_Pos                 9U                                         /*!< DWT CTR
 985:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define DWT_CTRL_CYCTAP_Msk                (0x1UL << DWT_CTRL_CYCTAP_Pos)              /*!< DWT CTR
 986:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 987:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define DWT_CTRL_POSTINIT_Pos               5U                                         /*!< DWT CTR
 988:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define DWT_CTRL_POSTINIT_Msk              (0xFUL << DWT_CTRL_POSTINIT_Pos)            /*!< DWT CTR
 989:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 990:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define DWT_CTRL_POSTPRESET_Pos             1U                                         /*!< DWT CTR
 991:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define DWT_CTRL_POSTPRESET_Msk            (0xFUL << DWT_CTRL_POSTPRESET_Pos)          /*!< DWT CTR
 992:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 993:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define DWT_CTRL_CYCCNTENA_Pos              0U                                         /*!< DWT CTR
 994:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define DWT_CTRL_CYCCNTENA_Msk             (0x1UL /*<< DWT_CTRL_CYCCNTENA_Pos*/)       /*!< DWT CTR
 995:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
 996:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /* DWT CPI Count Register Definitions */
 997:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define DWT_CPICNT_CPICNT_Pos               0U                                         /*!< DWT CPI
 998:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define DWT_CPICNT_CPICNT_Msk              (0xFFUL /*<< DWT_CPICNT_CPICNT_Pos*/)       /*!< DWT CPI
 999:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 19


1000:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /* DWT Exception Overhead Count Register Definitions */
1001:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define DWT_EXCCNT_EXCCNT_Pos               0U                                         /*!< DWT EXC
1002:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define DWT_EXCCNT_EXCCNT_Msk              (0xFFUL /*<< DWT_EXCCNT_EXCCNT_Pos*/)       /*!< DWT EXC
1003:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1004:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /* DWT Sleep Count Register Definitions */
1005:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define DWT_SLEEPCNT_SLEEPCNT_Pos           0U                                         /*!< DWT SLE
1006:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define DWT_SLEEPCNT_SLEEPCNT_Msk          (0xFFUL /*<< DWT_SLEEPCNT_SLEEPCNT_Pos*/)   /*!< DWT SLE
1007:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1008:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /* DWT LSU Count Register Definitions */
1009:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define DWT_LSUCNT_LSUCNT_Pos               0U                                         /*!< DWT LSU
1010:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define DWT_LSUCNT_LSUCNT_Msk              (0xFFUL /*<< DWT_LSUCNT_LSUCNT_Pos*/)       /*!< DWT LSU
1011:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1012:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /* DWT Folded-instruction Count Register Definitions */
1013:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define DWT_FOLDCNT_FOLDCNT_Pos             0U                                         /*!< DWT FOL
1014:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define DWT_FOLDCNT_FOLDCNT_Msk            (0xFFUL /*<< DWT_FOLDCNT_FOLDCNT_Pos*/)     /*!< DWT FOL
1015:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1016:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /* DWT Comparator Mask Register Definitions */
1017:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define DWT_MASK_MASK_Pos                   0U                                         /*!< DWT MAS
1018:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define DWT_MASK_MASK_Msk                  (0x1FUL /*<< DWT_MASK_MASK_Pos*/)           /*!< DWT MAS
1019:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1020:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /* DWT Comparator Function Register Definitions */
1021:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define DWT_FUNCTION_MATCHED_Pos           24U                                         /*!< DWT FUN
1022:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define DWT_FUNCTION_MATCHED_Msk           (0x1UL << DWT_FUNCTION_MATCHED_Pos)         /*!< DWT FUN
1023:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1024:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR1_Pos        16U                                         /*!< DWT FUN
1025:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR1_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR1_Pos)      /*!< DWT FUN
1026:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1027:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR0_Pos        12U                                         /*!< DWT FUN
1028:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR0_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR0_Pos)      /*!< DWT FUN
1029:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1030:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define DWT_FUNCTION_DATAVSIZE_Pos         10U                                         /*!< DWT FUN
1031:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define DWT_FUNCTION_DATAVSIZE_Msk         (0x3UL << DWT_FUNCTION_DATAVSIZE_Pos)       /*!< DWT FUN
1032:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1033:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define DWT_FUNCTION_LNK1ENA_Pos            9U                                         /*!< DWT FUN
1034:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define DWT_FUNCTION_LNK1ENA_Msk           (0x1UL << DWT_FUNCTION_LNK1ENA_Pos)         /*!< DWT FUN
1035:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1036:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define DWT_FUNCTION_DATAVMATCH_Pos         8U                                         /*!< DWT FUN
1037:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define DWT_FUNCTION_DATAVMATCH_Msk        (0x1UL << DWT_FUNCTION_DATAVMATCH_Pos)      /*!< DWT FUN
1038:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1039:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define DWT_FUNCTION_CYCMATCH_Pos           7U                                         /*!< DWT FUN
1040:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define DWT_FUNCTION_CYCMATCH_Msk          (0x1UL << DWT_FUNCTION_CYCMATCH_Pos)        /*!< DWT FUN
1041:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1042:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define DWT_FUNCTION_EMITRANGE_Pos          5U                                         /*!< DWT FUN
1043:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define DWT_FUNCTION_EMITRANGE_Msk         (0x1UL << DWT_FUNCTION_EMITRANGE_Pos)       /*!< DWT FUN
1044:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1045:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define DWT_FUNCTION_FUNCTION_Pos           0U                                         /*!< DWT FUN
1046:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define DWT_FUNCTION_FUNCTION_Msk          (0xFUL /*<< DWT_FUNCTION_FUNCTION_Pos*/)    /*!< DWT FUN
1047:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1048:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /*@}*/ /* end of group CMSIS_DWT */
1049:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1050:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1051:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /**
1052:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \ingroup  CMSIS_core_register
1053:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \defgroup CMSIS_TPI     Trace Port Interface (TPI)
1054:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \brief    Type definitions for the Trace Port Interface (TPI)
1055:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   @{
1056:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****  */
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 20


1057:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1058:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /**
1059:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \brief  Structure type to access the Trace Port Interface Register (TPI).
1060:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****  */
1061:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** typedef struct
1062:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** {
1063:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IOM uint32_t SSPSR;                  /*!< Offset: 0x000 (R/ )  Supported Parallel Port Size Reg
1064:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IOM uint32_t CSPSR;                  /*!< Offset: 0x004 (R/W)  Current Parallel Port Size Regis
1065:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****         uint32_t RESERVED0[2U];
1066:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IOM uint32_t ACPR;                   /*!< Offset: 0x010 (R/W)  Asynchronous Clock Prescaler Reg
1067:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****         uint32_t RESERVED1[55U];
1068:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IOM uint32_t SPPR;                   /*!< Offset: 0x0F0 (R/W)  Selected Pin Protocol Register *
1069:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****         uint32_t RESERVED2[131U];
1070:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IM  uint32_t FFSR;                   /*!< Offset: 0x300 (R/ )  Formatter and Flush Status Regis
1071:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IOM uint32_t FFCR;                   /*!< Offset: 0x304 (R/W)  Formatter and Flush Control Regi
1072:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IM  uint32_t FSCR;                   /*!< Offset: 0x308 (R/ )  Formatter Synchronization Counte
1073:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****         uint32_t RESERVED3[759U];
1074:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IM  uint32_t TRIGGER;                /*!< Offset: 0xEE8 (R/ )  TRIGGER */
1075:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IM  uint32_t FIFO0;                  /*!< Offset: 0xEEC (R/ )  Integration ETM Data */
1076:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IM  uint32_t ITATBCTR2;              /*!< Offset: 0xEF0 (R/ )  ITATBCTR2 */
1077:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****         uint32_t RESERVED4[1U];
1078:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IM  uint32_t ITATBCTR0;              /*!< Offset: 0xEF8 (R/ )  ITATBCTR0 */
1079:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IM  uint32_t FIFO1;                  /*!< Offset: 0xEFC (R/ )  Integration ITM Data */
1080:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IOM uint32_t ITCTRL;                 /*!< Offset: 0xF00 (R/W)  Integration Mode Control */
1081:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****         uint32_t RESERVED5[39U];
1082:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IOM uint32_t CLAIMSET;               /*!< Offset: 0xFA0 (R/W)  Claim tag set */
1083:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IOM uint32_t CLAIMCLR;               /*!< Offset: 0xFA4 (R/W)  Claim tag clear */
1084:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****         uint32_t RESERVED7[8U];
1085:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IM  uint32_t DEVID;                  /*!< Offset: 0xFC8 (R/ )  TPIU_DEVID */
1086:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IM  uint32_t DEVTYPE;                /*!< Offset: 0xFCC (R/ )  TPIU_DEVTYPE */
1087:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** } TPI_Type;
1088:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1089:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /* TPI Asynchronous Clock Prescaler Register Definitions */
1090:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define TPI_ACPR_PRESCALER_Pos              0U                                         /*!< @Deprec
1091:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define TPI_ACPR_PRESCALER_Msk             (0x1FFFUL /*<< TPI_ACPR_PRESCALER_Pos*/)    /*!< @Deprec
1092:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1093:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define TPI_ACPR_SWOSCALER_Pos              0U                                         /*!< TPI ACP
1094:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define TPI_ACPR_SWOSCALER_Msk             (0xFFFFUL /*<< TPI_ACPR_SWOSCALER_Pos*/)    /*!< TPI ACP
1095:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1096:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /* TPI Selected Pin Protocol Register Definitions */
1097:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define TPI_SPPR_TXMODE_Pos                 0U                                         /*!< TPI SPP
1098:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define TPI_SPPR_TXMODE_Msk                (0x3UL /*<< TPI_SPPR_TXMODE_Pos*/)          /*!< TPI SPP
1099:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1100:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /* TPI Formatter and Flush Status Register Definitions */
1101:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define TPI_FFSR_FtNonStop_Pos              3U                                         /*!< TPI FFS
1102:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define TPI_FFSR_FtNonStop_Msk             (0x1UL << TPI_FFSR_FtNonStop_Pos)           /*!< TPI FFS
1103:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1104:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define TPI_FFSR_TCPresent_Pos              2U                                         /*!< TPI FFS
1105:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define TPI_FFSR_TCPresent_Msk             (0x1UL << TPI_FFSR_TCPresent_Pos)           /*!< TPI FFS
1106:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1107:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define TPI_FFSR_FtStopped_Pos              1U                                         /*!< TPI FFS
1108:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define TPI_FFSR_FtStopped_Msk             (0x1UL << TPI_FFSR_FtStopped_Pos)           /*!< TPI FFS
1109:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1110:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define TPI_FFSR_FlInProg_Pos               0U                                         /*!< TPI FFS
1111:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define TPI_FFSR_FlInProg_Msk              (0x1UL /*<< TPI_FFSR_FlInProg_Pos*/)        /*!< TPI FFS
1112:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1113:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /* TPI Formatter and Flush Control Register Definitions */
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 21


1114:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define TPI_FFCR_TrigIn_Pos                 8U                                         /*!< TPI FFC
1115:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define TPI_FFCR_TrigIn_Msk                (0x1UL << TPI_FFCR_TrigIn_Pos)              /*!< TPI FFC
1116:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1117:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define TPI_FFCR_EnFCont_Pos                1U                                         /*!< TPI FFC
1118:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define TPI_FFCR_EnFCont_Msk               (0x1UL << TPI_FFCR_EnFCont_Pos)             /*!< TPI FFC
1119:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1120:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /* TPI TRIGGER Register Definitions */
1121:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define TPI_TRIGGER_TRIGGER_Pos             0U                                         /*!< TPI TRI
1122:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define TPI_TRIGGER_TRIGGER_Msk            (0x1UL /*<< TPI_TRIGGER_TRIGGER_Pos*/)      /*!< TPI TRI
1123:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1124:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /* TPI Integration ETM Data Register Definitions (FIFO0) */
1125:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define TPI_FIFO0_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1126:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define TPI_FIFO0_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ITM_ATVALID_Pos)        /*!< TPI FIF
1127:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1128:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define TPI_FIFO0_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1129:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define TPI_FIFO0_ITM_bytecount_Msk        (0x3UL << TPI_FIFO0_ITM_bytecount_Pos)      /*!< TPI FIF
1130:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1131:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define TPI_FIFO0_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1132:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define TPI_FIFO0_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ETM_ATVALID_Pos)        /*!< TPI FIF
1133:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1134:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define TPI_FIFO0_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1135:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define TPI_FIFO0_ETM_bytecount_Msk        (0x3UL << TPI_FIFO0_ETM_bytecount_Pos)      /*!< TPI FIF
1136:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1137:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define TPI_FIFO0_ETM2_Pos                 16U                                         /*!< TPI FIF
1138:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define TPI_FIFO0_ETM2_Msk                 (0xFFUL << TPI_FIFO0_ETM2_Pos)              /*!< TPI FIF
1139:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1140:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define TPI_FIFO0_ETM1_Pos                  8U                                         /*!< TPI FIF
1141:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define TPI_FIFO0_ETM1_Msk                 (0xFFUL << TPI_FIFO0_ETM1_Pos)              /*!< TPI FIF
1142:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1143:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define TPI_FIFO0_ETM0_Pos                  0U                                         /*!< TPI FIF
1144:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define TPI_FIFO0_ETM0_Msk                 (0xFFUL /*<< TPI_FIFO0_ETM0_Pos*/)          /*!< TPI FIF
1145:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1146:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /* TPI ITATBCTR2 Register Definitions */
1147:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY_Pos           0U                                         /*!< TPI ITA
1148:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY_Msk          (0x1UL /*<< TPI_ITATBCTR2_ATREADY_Pos*/)    /*!< TPI ITA
1149:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1150:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /* TPI Integration ITM Data Register Definitions (FIFO1) */
1151:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define TPI_FIFO1_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1152:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define TPI_FIFO1_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ITM_ATVALID_Pos)        /*!< TPI FIF
1153:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1154:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define TPI_FIFO1_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1155:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define TPI_FIFO1_ITM_bytecount_Msk        (0x3UL << TPI_FIFO1_ITM_bytecount_Pos)      /*!< TPI FIF
1156:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1157:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define TPI_FIFO1_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1158:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define TPI_FIFO1_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ETM_ATVALID_Pos)        /*!< TPI FIF
1159:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1160:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define TPI_FIFO1_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1161:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define TPI_FIFO1_ETM_bytecount_Msk        (0x3UL << TPI_FIFO1_ETM_bytecount_Pos)      /*!< TPI FIF
1162:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1163:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define TPI_FIFO1_ITM2_Pos                 16U                                         /*!< TPI FIF
1164:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define TPI_FIFO1_ITM2_Msk                 (0xFFUL << TPI_FIFO1_ITM2_Pos)              /*!< TPI FIF
1165:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1166:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define TPI_FIFO1_ITM1_Pos                  8U                                         /*!< TPI FIF
1167:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define TPI_FIFO1_ITM1_Msk                 (0xFFUL << TPI_FIFO1_ITM1_Pos)              /*!< TPI FIF
1168:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1169:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define TPI_FIFO1_ITM0_Pos                  0U                                         /*!< TPI FIF
1170:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define TPI_FIFO1_ITM0_Msk                 (0xFFUL /*<< TPI_FIFO1_ITM0_Pos*/)          /*!< TPI FIF
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 22


1171:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1172:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /* TPI ITATBCTR0 Register Definitions */
1173:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY_Pos           0U                                         /*!< TPI ITA
1174:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY_Msk          (0x1UL /*<< TPI_ITATBCTR0_ATREADY_Pos*/)    /*!< TPI ITA
1175:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1176:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /* TPI Integration Mode Control Register Definitions */
1177:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define TPI_ITCTRL_Mode_Pos                 0U                                         /*!< TPI ITC
1178:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define TPI_ITCTRL_Mode_Msk                (0x1UL /*<< TPI_ITCTRL_Mode_Pos*/)          /*!< TPI ITC
1179:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1180:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /* TPI DEVID Register Definitions */
1181:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define TPI_DEVID_NRZVALID_Pos             11U                                         /*!< TPI DEV
1182:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define TPI_DEVID_NRZVALID_Msk             (0x1UL << TPI_DEVID_NRZVALID_Pos)           /*!< TPI DEV
1183:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1184:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define TPI_DEVID_MANCVALID_Pos            10U                                         /*!< TPI DEV
1185:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define TPI_DEVID_MANCVALID_Msk            (0x1UL << TPI_DEVID_MANCVALID_Pos)          /*!< TPI DEV
1186:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1187:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define TPI_DEVID_PTINVALID_Pos             9U                                         /*!< TPI DEV
1188:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define TPI_DEVID_PTINVALID_Msk            (0x1UL << TPI_DEVID_PTINVALID_Pos)          /*!< TPI DEV
1189:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1190:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define TPI_DEVID_MinBufSz_Pos              6U                                         /*!< TPI DEV
1191:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define TPI_DEVID_MinBufSz_Msk             (0x7UL << TPI_DEVID_MinBufSz_Pos)           /*!< TPI DEV
1192:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1193:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define TPI_DEVID_AsynClkIn_Pos             5U                                         /*!< TPI DEV
1194:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define TPI_DEVID_AsynClkIn_Msk            (0x1UL << TPI_DEVID_AsynClkIn_Pos)          /*!< TPI DEV
1195:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1196:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define TPI_DEVID_NrTraceInput_Pos          0U                                         /*!< TPI DEV
1197:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define TPI_DEVID_NrTraceInput_Msk         (0x1FUL /*<< TPI_DEVID_NrTraceInput_Pos*/)  /*!< TPI DEV
1198:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1199:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /* TPI DEVTYPE Register Definitions */
1200:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define TPI_DEVTYPE_MajorType_Pos           4U                                         /*!< TPI DEV
1201:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define TPI_DEVTYPE_MajorType_Msk          (0xFUL << TPI_DEVTYPE_MajorType_Pos)        /*!< TPI DEV
1202:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1203:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define TPI_DEVTYPE_SubType_Pos             0U                                         /*!< TPI DEV
1204:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define TPI_DEVTYPE_SubType_Msk            (0xFUL /*<< TPI_DEVTYPE_SubType_Pos*/)      /*!< TPI DEV
1205:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1206:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /*@}*/ /* end of group CMSIS_TPI */
1207:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1208:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1209:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
1210:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /**
1211:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \ingroup  CMSIS_core_register
1212:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \defgroup CMSIS_MPU     Memory Protection Unit (MPU)
1213:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \brief    Type definitions for the Memory Protection Unit (MPU)
1214:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   @{
1215:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****  */
1216:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1217:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /**
1218:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \brief  Structure type to access the Memory Protection Unit (MPU).
1219:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****  */
1220:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** typedef struct
1221:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** {
1222:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IM  uint32_t TYPE;                   /*!< Offset: 0x000 (R/ )  MPU Type Register */
1223:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x004 (R/W)  MPU Control Register */
1224:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IOM uint32_t RNR;                    /*!< Offset: 0x008 (R/W)  MPU Region RNRber Register */
1225:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IOM uint32_t RBAR;                   /*!< Offset: 0x00C (R/W)  MPU Region Base Address Register
1226:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IOM uint32_t RASR;                   /*!< Offset: 0x010 (R/W)  MPU Region Attribute and Size Re
1227:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IOM uint32_t RBAR_A1;                /*!< Offset: 0x014 (R/W)  MPU Alias 1 Region Base Address 
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 23


1228:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IOM uint32_t RASR_A1;                /*!< Offset: 0x018 (R/W)  MPU Alias 1 Region Attribute and
1229:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IOM uint32_t RBAR_A2;                /*!< Offset: 0x01C (R/W)  MPU Alias 2 Region Base Address 
1230:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IOM uint32_t RASR_A2;                /*!< Offset: 0x020 (R/W)  MPU Alias 2 Region Attribute and
1231:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IOM uint32_t RBAR_A3;                /*!< Offset: 0x024 (R/W)  MPU Alias 3 Region Base Address 
1232:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IOM uint32_t RASR_A3;                /*!< Offset: 0x028 (R/W)  MPU Alias 3 Region Attribute and
1233:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** } MPU_Type;
1234:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1235:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define MPU_TYPE_RALIASES                  4U
1236:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1237:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /* MPU Type Register Definitions */
1238:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define MPU_TYPE_IREGION_Pos               16U                                            /*!< MPU 
1239:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define MPU_TYPE_IREGION_Msk               (0xFFUL << MPU_TYPE_IREGION_Pos)               /*!< MPU 
1240:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1241:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define MPU_TYPE_DREGION_Pos                8U                                            /*!< MPU 
1242:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define MPU_TYPE_DREGION_Msk               (0xFFUL << MPU_TYPE_DREGION_Pos)               /*!< MPU 
1243:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1244:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define MPU_TYPE_SEPARATE_Pos               0U                                            /*!< MPU 
1245:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define MPU_TYPE_SEPARATE_Msk              (1UL /*<< MPU_TYPE_SEPARATE_Pos*/)             /*!< MPU 
1246:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1247:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /* MPU Control Register Definitions */
1248:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2U                                            /*!< MPU 
1249:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1UL << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
1250:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1251:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define MPU_CTRL_HFNMIENA_Pos               1U                                            /*!< MPU 
1252:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define MPU_CTRL_HFNMIENA_Msk              (1UL << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
1253:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1254:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define MPU_CTRL_ENABLE_Pos                 0U                                            /*!< MPU 
1255:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define MPU_CTRL_ENABLE_Msk                (1UL /*<< MPU_CTRL_ENABLE_Pos*/)               /*!< MPU 
1256:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1257:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /* MPU Region Number Register Definitions */
1258:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define MPU_RNR_REGION_Pos                  0U                                            /*!< MPU 
1259:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define MPU_RNR_REGION_Msk                 (0xFFUL /*<< MPU_RNR_REGION_Pos*/)             /*!< MPU 
1260:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1261:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /* MPU Region Base Address Register Definitions */
1262:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define MPU_RBAR_ADDR_Pos                   5U                                            /*!< MPU 
1263:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFUL << MPU_RBAR_ADDR_Pos)             /*!< MPU 
1264:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1265:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define MPU_RBAR_VALID_Pos                  4U                                            /*!< MPU 
1266:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define MPU_RBAR_VALID_Msk                 (1UL << MPU_RBAR_VALID_Pos)                    /*!< MPU 
1267:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1268:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define MPU_RBAR_REGION_Pos                 0U                                            /*!< MPU 
1269:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define MPU_RBAR_REGION_Msk                (0xFUL /*<< MPU_RBAR_REGION_Pos*/)             /*!< MPU 
1270:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1271:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /* MPU Region Attribute and Size Register Definitions */
1272:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define MPU_RASR_ATTRS_Pos                 16U                                            /*!< MPU 
1273:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define MPU_RASR_ATTRS_Msk                 (0xFFFFUL << MPU_RASR_ATTRS_Pos)               /*!< MPU 
1274:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1275:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define MPU_RASR_XN_Pos                    28U                                            /*!< MPU 
1276:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define MPU_RASR_XN_Msk                    (1UL << MPU_RASR_XN_Pos)                       /*!< MPU 
1277:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1278:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define MPU_RASR_AP_Pos                    24U                                            /*!< MPU 
1279:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define MPU_RASR_AP_Msk                    (0x7UL << MPU_RASR_AP_Pos)                     /*!< MPU 
1280:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1281:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define MPU_RASR_TEX_Pos                   19U                                            /*!< MPU 
1282:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define MPU_RASR_TEX_Msk                   (0x7UL << MPU_RASR_TEX_Pos)                    /*!< MPU 
1283:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1284:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define MPU_RASR_S_Pos                     18U                                            /*!< MPU 
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 24


1285:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define MPU_RASR_S_Msk                     (1UL << MPU_RASR_S_Pos)                        /*!< MPU 
1286:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1287:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define MPU_RASR_C_Pos                     17U                                            /*!< MPU 
1288:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define MPU_RASR_C_Msk                     (1UL << MPU_RASR_C_Pos)                        /*!< MPU 
1289:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1290:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define MPU_RASR_B_Pos                     16U                                            /*!< MPU 
1291:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define MPU_RASR_B_Msk                     (1UL << MPU_RASR_B_Pos)                        /*!< MPU 
1292:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1293:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define MPU_RASR_SRD_Pos                    8U                                            /*!< MPU 
1294:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define MPU_RASR_SRD_Msk                   (0xFFUL << MPU_RASR_SRD_Pos)                   /*!< MPU 
1295:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1296:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define MPU_RASR_SIZE_Pos                   1U                                            /*!< MPU 
1297:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define MPU_RASR_SIZE_Msk                  (0x1FUL << MPU_RASR_SIZE_Pos)                  /*!< MPU 
1298:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1299:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define MPU_RASR_ENABLE_Pos                 0U                                            /*!< MPU 
1300:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define MPU_RASR_ENABLE_Msk                (1UL /*<< MPU_RASR_ENABLE_Pos*/)               /*!< MPU 
1301:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1302:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /*@} end of group CMSIS_MPU */
1303:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #endif /* defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U) */
1304:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1305:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1306:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /**
1307:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \ingroup  CMSIS_core_register
1308:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \defgroup CMSIS_FPU     Floating Point Unit (FPU)
1309:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \brief    Type definitions for the Floating Point Unit (FPU)
1310:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   @{
1311:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****  */
1312:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1313:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /**
1314:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \brief  Structure type to access the Floating Point Unit (FPU).
1315:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****  */
1316:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** typedef struct
1317:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** {
1318:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****         uint32_t RESERVED0[1U];
1319:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IOM uint32_t FPCCR;                  /*!< Offset: 0x004 (R/W)  Floating-Point Context Control R
1320:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IOM uint32_t FPCAR;                  /*!< Offset: 0x008 (R/W)  Floating-Point Context Address R
1321:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IOM uint32_t FPDSCR;                 /*!< Offset: 0x00C (R/W)  Floating-Point Default Status Co
1322:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IM  uint32_t MVFR0;                  /*!< Offset: 0x010 (R/ )  Media and FP Feature Register 0 
1323:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IM  uint32_t MVFR1;                  /*!< Offset: 0x014 (R/ )  Media and FP Feature Register 1 
1324:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** } FPU_Type;
1325:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1326:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /* Floating-Point Context Control Register Definitions */
1327:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define FPU_FPCCR_ASPEN_Pos                31U                                            /*!< FPCC
1328:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define FPU_FPCCR_ASPEN_Msk                (1UL << FPU_FPCCR_ASPEN_Pos)                   /*!< FPCC
1329:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1330:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define FPU_FPCCR_LSPEN_Pos                30U                                            /*!< FPCC
1331:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define FPU_FPCCR_LSPEN_Msk                (1UL << FPU_FPCCR_LSPEN_Pos)                   /*!< FPCC
1332:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1333:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define FPU_FPCCR_MONRDY_Pos                8U                                            /*!< FPCC
1334:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define FPU_FPCCR_MONRDY_Msk               (1UL << FPU_FPCCR_MONRDY_Pos)                  /*!< FPCC
1335:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1336:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define FPU_FPCCR_BFRDY_Pos                 6U                                            /*!< FPCC
1337:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define FPU_FPCCR_BFRDY_Msk                (1UL << FPU_FPCCR_BFRDY_Pos)                   /*!< FPCC
1338:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1339:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define FPU_FPCCR_MMRDY_Pos                 5U                                            /*!< FPCC
1340:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define FPU_FPCCR_MMRDY_Msk                (1UL << FPU_FPCCR_MMRDY_Pos)                   /*!< FPCC
1341:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 25


1342:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define FPU_FPCCR_HFRDY_Pos                 4U                                            /*!< FPCC
1343:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define FPU_FPCCR_HFRDY_Msk                (1UL << FPU_FPCCR_HFRDY_Pos)                   /*!< FPCC
1344:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1345:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define FPU_FPCCR_THREAD_Pos                3U                                            /*!< FPCC
1346:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define FPU_FPCCR_THREAD_Msk               (1UL << FPU_FPCCR_THREAD_Pos)                  /*!< FPCC
1347:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1348:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define FPU_FPCCR_USER_Pos                  1U                                            /*!< FPCC
1349:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define FPU_FPCCR_USER_Msk                 (1UL << FPU_FPCCR_USER_Pos)                    /*!< FPCC
1350:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1351:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define FPU_FPCCR_LSPACT_Pos                0U                                            /*!< FPCC
1352:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define FPU_FPCCR_LSPACT_Msk               (1UL /*<< FPU_FPCCR_LSPACT_Pos*/)              /*!< FPCC
1353:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1354:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /* Floating-Point Context Address Register Definitions */
1355:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define FPU_FPCAR_ADDRESS_Pos               3U                                            /*!< FPCA
1356:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define FPU_FPCAR_ADDRESS_Msk              (0x1FFFFFFFUL << FPU_FPCAR_ADDRESS_Pos)        /*!< FPCA
1357:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1358:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /* Floating-Point Default Status Control Register Definitions */
1359:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define FPU_FPDSCR_AHP_Pos                 26U                                            /*!< FPDS
1360:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define FPU_FPDSCR_AHP_Msk                 (1UL << FPU_FPDSCR_AHP_Pos)                    /*!< FPDS
1361:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1362:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define FPU_FPDSCR_DN_Pos                  25U                                            /*!< FPDS
1363:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define FPU_FPDSCR_DN_Msk                  (1UL << FPU_FPDSCR_DN_Pos)                     /*!< FPDS
1364:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1365:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define FPU_FPDSCR_FZ_Pos                  24U                                            /*!< FPDS
1366:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define FPU_FPDSCR_FZ_Msk                  (1UL << FPU_FPDSCR_FZ_Pos)                     /*!< FPDS
1367:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1368:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define FPU_FPDSCR_RMode_Pos               22U                                            /*!< FPDS
1369:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define FPU_FPDSCR_RMode_Msk               (3UL << FPU_FPDSCR_RMode_Pos)                  /*!< FPDS
1370:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1371:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /* Media and FP Feature Register 0 Definitions */
1372:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Pos    28U                                            /*!< MVFR
1373:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Msk    (0xFUL << FPU_MVFR0_FP_rounding_modes_Pos)     /*!< MVFR
1374:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1375:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define FPU_MVFR0_Short_vectors_Pos        24U                                            /*!< MVFR
1376:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define FPU_MVFR0_Short_vectors_Msk        (0xFUL << FPU_MVFR0_Short_vectors_Pos)         /*!< MVFR
1377:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1378:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define FPU_MVFR0_Square_root_Pos          20U                                            /*!< MVFR
1379:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define FPU_MVFR0_Square_root_Msk          (0xFUL << FPU_MVFR0_Square_root_Pos)           /*!< MVFR
1380:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1381:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define FPU_MVFR0_Divide_Pos               16U                                            /*!< MVFR
1382:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define FPU_MVFR0_Divide_Msk               (0xFUL << FPU_MVFR0_Divide_Pos)                /*!< MVFR
1383:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1384:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Pos    12U                                            /*!< MVFR
1385:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Msk    (0xFUL << FPU_MVFR0_FP_excep_trapping_Pos)     /*!< MVFR
1386:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1387:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define FPU_MVFR0_Double_precision_Pos      8U                                            /*!< MVFR
1388:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define FPU_MVFR0_Double_precision_Msk     (0xFUL << FPU_MVFR0_Double_precision_Pos)      /*!< MVFR
1389:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1390:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define FPU_MVFR0_Single_precision_Pos      4U                                            /*!< MVFR
1391:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define FPU_MVFR0_Single_precision_Msk     (0xFUL << FPU_MVFR0_Single_precision_Pos)      /*!< MVFR
1392:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1393:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Pos      0U                                            /*!< MVFR
1394:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Msk     (0xFUL /*<< FPU_MVFR0_A_SIMD_registers_Pos*/)  /*!< MVFR
1395:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1396:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /* Media and FP Feature Register 1 Definitions */
1397:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Pos         28U                                            /*!< MVFR
1398:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Msk         (0xFUL << FPU_MVFR1_FP_fused_MAC_Pos)          /*!< MVFR
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 26


1399:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1400:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Pos              24U                                            /*!< MVFR
1401:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Msk              (0xFUL << FPU_MVFR1_FP_HPFP_Pos)               /*!< MVFR
1402:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1403:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Pos            4U                                            /*!< MVFR
1404:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Msk           (0xFUL << FPU_MVFR1_D_NaN_mode_Pos)            /*!< MVFR
1405:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1406:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Pos              0U                                            /*!< MVFR
1407:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Msk             (0xFUL /*<< FPU_MVFR1_FtZ_mode_Pos*/)          /*!< MVFR
1408:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1409:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /*@} end of group CMSIS_FPU */
1410:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1411:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1412:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /**
1413:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \ingroup  CMSIS_core_register
1414:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \defgroup CMSIS_CoreDebug       Core Debug Registers (CoreDebug)
1415:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \brief    Type definitions for the Core Debug Registers
1416:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   @{
1417:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****  */
1418:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1419:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /**
1420:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \brief  Structure type to access the Core Debug Register (CoreDebug).
1421:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****  */
1422:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** typedef struct
1423:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** {
1424:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IOM uint32_t DHCSR;                  /*!< Offset: 0x000 (R/W)  Debug Halting Control and Status
1425:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __OM  uint32_t DCRSR;                  /*!< Offset: 0x004 ( /W)  Debug Core Register Selector Reg
1426:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IOM uint32_t DCRDR;                  /*!< Offset: 0x008 (R/W)  Debug Core Register Data Registe
1427:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   __IOM uint32_t DEMCR;                  /*!< Offset: 0x00C (R/W)  Debug Exception and Monitor Cont
1428:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** } CoreDebug_Type;
1429:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1430:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /* Debug Halting Control and Status Register Definitions */
1431:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16U                                            /*!< Core
1432:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFUL << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
1433:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1434:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25U                                            /*!< Core
1435:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1UL << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
1436:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1437:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24U                                            /*!< Core
1438:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1UL << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
1439:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1440:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19U                                            /*!< Core
1441:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1UL << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
1442:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1443:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18U                                            /*!< Core
1444:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1UL << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
1445:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1446:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17U                                            /*!< Core
1447:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1UL << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
1448:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1449:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16U                                            /*!< Core
1450:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1UL << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
1451:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1452:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5U                                            /*!< Core
1453:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1UL << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
1454:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1455:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3U                                            /*!< Core
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 27


1456:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1UL << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
1457:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1458:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2U                                            /*!< Core
1459:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1UL << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
1460:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1461:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1U                                            /*!< Core
1462:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1UL << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
1463:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1464:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0U                                            /*!< Core
1465:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1UL /*<< CoreDebug_DHCSR_C_DEBUGEN_Pos*/)     /*!< Core
1466:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1467:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /* Debug Core Register Selector Register Definitions */
1468:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16U                                            /*!< Core
1469:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1UL << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
1470:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1471:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0U                                            /*!< Core
1472:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1FUL /*<< CoreDebug_DCRSR_REGSEL_Pos*/)     /*!< Core
1473:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1474:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /* Debug Exception and Monitor Control Register Definitions */
1475:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24U                                            /*!< Core
1476:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1UL << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
1477:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1478:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19U                                            /*!< Core
1479:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1UL << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
1480:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1481:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18U                                            /*!< Core
1482:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1UL << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
1483:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1484:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17U                                            /*!< Core
1485:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1UL << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
1486:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1487:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16U                                            /*!< Core
1488:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1UL << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
1489:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1490:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10U                                            /*!< Core
1491:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1UL << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
1492:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1493:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9U                                            /*!< Core
1494:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1UL << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
1495:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1496:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8U                                            /*!< Core
1497:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1UL << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
1498:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1499:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7U                                            /*!< Core
1500:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1UL << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
1501:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1502:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6U                                            /*!< Core
1503:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1UL << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
1504:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1505:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5U                                            /*!< Core
1506:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1UL << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
1507:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1508:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4U                                            /*!< Core
1509:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1UL << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
1510:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1511:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0U                                            /*!< Core
1512:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1UL /*<< CoreDebug_DEMCR_VC_CORERESET_Pos*/)  /*!< Core
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 28


1513:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1514:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /*@} end of group CMSIS_CoreDebug */
1515:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1516:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1517:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /**
1518:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \ingroup    CMSIS_core_register
1519:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \defgroup   CMSIS_core_bitfield     Core register bit field macros
1520:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \brief      Macros for use with bit field definitions (xxx_Pos, xxx_Msk).
1521:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   @{
1522:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****  */
1523:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1524:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /**
1525:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \brief   Mask and shift a bit field value for use in a register bit range.
1526:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \param[in] field  Name of the register bit field.
1527:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \param[in] value  Value of the bit field. This parameter is interpreted as an uint32_t type.
1528:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \return           Masked and shifted value.
1529:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** */
1530:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define _VAL2FLD(field, value)    (((uint32_t)(value) << field ## _Pos) & field ## _Msk)
1531:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1532:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /**
1533:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \brief     Mask and shift a register value to extract a bit filed value.
1534:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \param[in] field  Name of the register bit field.
1535:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \param[in] value  Value of register. This parameter is interpreted as an uint32_t type.
1536:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \return           Masked and shifted bit field value.
1537:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** */
1538:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define _FLD2VAL(field, value)    (((uint32_t)(value) & field ## _Msk) >> field ## _Pos)
1539:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1540:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /*@} end of group CMSIS_core_bitfield */
1541:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1542:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1543:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /**
1544:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \ingroup    CMSIS_core_register
1545:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \defgroup   CMSIS_core_base     Core Definitions
1546:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \brief      Definitions for base addresses, unions, and structures.
1547:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   @{
1548:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****  */
1549:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1550:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /* Memory mapping of Core Hardware */
1551:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCS_BASE            (0xE000E000UL)                            /*!< System Control Space Bas
1552:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define ITM_BASE            (0xE0000000UL)                            /*!< ITM Base Address */
1553:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define DWT_BASE            (0xE0001000UL)                            /*!< DWT Base Address */
1554:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define TPI_BASE            (0xE0040000UL)                            /*!< TPI Base Address */
1555:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define CoreDebug_BASE      (0xE000EDF0UL)                            /*!< Core Debug Base Address 
1556:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SysTick_BASE        (SCS_BASE +  0x0010UL)                    /*!< SysTick Base Address */
1557:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define NVIC_BASE           (SCS_BASE +  0x0100UL)                    /*!< NVIC Base Address */
1558:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB_BASE            (SCS_BASE +  0x0D00UL)                    /*!< System Control Block Bas
1559:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1560:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCnSCB              ((SCnSCB_Type    *)     SCS_BASE      )   /*!< System control Register 
1561:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct
1562:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration st
1563:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struc
1564:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define ITM                 ((ITM_Type       *)     ITM_BASE      )   /*!< ITM configuration struct
1565:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define DWT                 ((DWT_Type       *)     DWT_BASE      )   /*!< DWT configuration struct
1566:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define TPI                 ((TPI_Type       *)     TPI_BASE      )   /*!< TPI configuration struct
1567:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
1568:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1569:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 29


1570:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90UL)                    /*!< Memory Protection Unit *
1571:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   #define MPU               ((MPU_Type       *)     MPU_BASE      )   /*!< Memory Protection Unit *
1572:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #endif
1573:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1574:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define FPU_BASE            (SCS_BASE +  0x0F30UL)                    /*!< Floating Point Unit */
1575:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define FPU                 ((FPU_Type       *)     FPU_BASE      )   /*!< Floating Point Unit */
1576:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1577:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /*@} */
1578:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1579:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1580:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1581:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /*******************************************************************************
1582:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****  *                Hardware Abstraction Layer
1583:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   Core Function Interface contains:
1584:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   - Core NVIC Functions
1585:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   - Core SysTick Functions
1586:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   - Core Debug Functions
1587:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   - Core Register Access Functions
1588:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****  ******************************************************************************/
1589:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /**
1590:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \defgroup CMSIS_Core_FunctionInterface Functions and Instructions Reference
1591:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** */
1592:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1593:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1594:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1595:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /* ##########################   NVIC functions  #################################### */
1596:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /**
1597:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \ingroup  CMSIS_Core_FunctionInterface
1598:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \defgroup CMSIS_Core_NVICFunctions NVIC Functions
1599:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \brief    Functions that manage interrupts and exceptions via the NVIC.
1600:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   @{
1601:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****  */
1602:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1603:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #ifdef CMSIS_NVIC_VIRTUAL
1604:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   #ifndef CMSIS_NVIC_VIRTUAL_HEADER_FILE
1605:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     #define CMSIS_NVIC_VIRTUAL_HEADER_FILE "cmsis_nvic_virtual.h"
1606:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   #endif
1607:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   #include CMSIS_NVIC_VIRTUAL_HEADER_FILE
1608:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #else
1609:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   #define NVIC_SetPriorityGrouping    __NVIC_SetPriorityGrouping
1610:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   #define NVIC_GetPriorityGrouping    __NVIC_GetPriorityGrouping
1611:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   #define NVIC_EnableIRQ              __NVIC_EnableIRQ
1612:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   #define NVIC_GetEnableIRQ           __NVIC_GetEnableIRQ
1613:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   #define NVIC_DisableIRQ             __NVIC_DisableIRQ
1614:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   #define NVIC_GetPendingIRQ          __NVIC_GetPendingIRQ
1615:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   #define NVIC_SetPendingIRQ          __NVIC_SetPendingIRQ
1616:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   #define NVIC_ClearPendingIRQ        __NVIC_ClearPendingIRQ
1617:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   #define NVIC_GetActive              __NVIC_GetActive
1618:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   #define NVIC_SetPriority            __NVIC_SetPriority
1619:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   #define NVIC_GetPriority            __NVIC_GetPriority
1620:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   #define NVIC_SystemReset            __NVIC_SystemReset
1621:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #endif /* CMSIS_NVIC_VIRTUAL */
1622:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1623:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #ifdef CMSIS_VECTAB_VIRTUAL
1624:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   #ifndef CMSIS_VECTAB_VIRTUAL_HEADER_FILE
1625:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****    #define CMSIS_VECTAB_VIRTUAL_HEADER_FILE "cmsis_vectab_virtual.h"
1626:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   #endif
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 30


1627:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   #include CMSIS_VECTAB_VIRTUAL_HEADER_FILE
1628:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #else
1629:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   #define NVIC_SetVector              __NVIC_SetVector
1630:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   #define NVIC_GetVector              __NVIC_GetVector
1631:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #endif  /* (CMSIS_VECTAB_VIRTUAL) */
1632:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1633:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** #define NVIC_USER_IRQ_OFFSET          16
1634:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1635:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1636:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1637:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /**
1638:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \brief   Set Priority Grouping
1639:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \details Sets the priority grouping field using the required unlock sequence.
1640:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****            The parameter PriorityGroup is assigned to the field SCB->AIRCR [10:8] PRIGROUP field.
1641:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****            Only values from 0..7 are used.
1642:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****            In case of a conflict between priority grouping and available
1643:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1644:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \param [in]      PriorityGroup  Priority grouping field.
1645:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****  */
1646:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** __STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
1647:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** {
1648:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   uint32_t reg_value;
1649:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 a
1650:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1651:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
1652:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to chan
1653:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   reg_value  =  (reg_value                                   |
1654:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****                 ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
1655:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****                 (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key a
1656:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   SCB->AIRCR =  reg_value;
1657:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** }
1658:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1659:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1660:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /**
1661:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \brief   Get Priority Grouping
1662:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \details Reads the priority grouping field from the NVIC Interrupt Controller.
1663:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
1664:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****  */
1665:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
1666:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** {
1667:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
1668:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** }
1669:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1670:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1671:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /**
1672:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \brief   Enable Interrupt
1673:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \details Enables a device specific interrupt in the NVIC interrupt controller.
1674:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1675:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \note    IRQn must not be negative.
1676:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****  */
1677:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** __STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
1678:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** {
  28              		.loc 1 1678 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 8
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32              		@ link register save eliminated.
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 31


  33 0000 80B4     		push	{r7}
  34              		.cfi_def_cfa_offset 4
  35              		.cfi_offset 7, -4
  36 0002 83B0     		sub	sp, sp, #12
  37              		.cfi_def_cfa_offset 16
  38 0004 00AF     		add	r7, sp, #0
  39              		.cfi_def_cfa_register 7
  40 0006 0346     		mov	r3, r0
  41 0008 FB80     		strh	r3, [r7, #6]	@ movhi
1679:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
  42              		.loc 1 1679 0
  43 000a B7F90630 		ldrsh	r3, [r7, #6]
  44 000e 002B     		cmp	r3, #0
  45 0010 0BDB     		blt	.L3
1680:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   {
1681:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
  46              		.loc 1 1681 0
  47 0012 0949     		ldr	r1, .L4
  48 0014 B7F90630 		ldrsh	r3, [r7, #6]
  49 0018 5B09     		lsrs	r3, r3, #5
  50 001a FA88     		ldrh	r2, [r7, #6]
  51 001c 02F01F02 		and	r2, r2, #31
  52 0020 0120     		movs	r0, #1
  53 0022 00FA02F2 		lsl	r2, r0, r2
  54 0026 41F82320 		str	r2, [r1, r3, lsl #2]
  55              	.L3:
1682:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   }
1683:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** }
  56              		.loc 1 1683 0
  57 002a 00BF     		nop
  58 002c 0C37     		adds	r7, r7, #12
  59              		.cfi_def_cfa_offset 4
  60 002e BD46     		mov	sp, r7
  61              		.cfi_def_cfa_register 13
  62              		@ sp needed
  63 0030 5DF8047B 		ldr	r7, [sp], #4
  64              		.cfi_restore 7
  65              		.cfi_def_cfa_offset 0
  66 0034 7047     		bx	lr
  67              	.L5:
  68 0036 00BF     		.align	2
  69              	.L4:
  70 0038 00E100E0 		.word	-536813312
  71              		.cfi_endproc
  72              	.LFE104:
  73              		.size	__NVIC_EnableIRQ, .-__NVIC_EnableIRQ
  74              		.section	.text.__NVIC_DisableIRQ,"ax",%progbits
  75              		.align	2
  76              		.thumb
  77              		.thumb_func
  78              		.type	__NVIC_DisableIRQ, %function
  79              	__NVIC_DisableIRQ:
  80              	.LFB106:
1684:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1685:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1686:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /**
1687:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \brief   Get Interrupt Enable status
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 32


1688:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \details Returns a device specific interrupt enable status from the NVIC interrupt controller.
1689:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1690:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \return             0  Interrupt is not enabled.
1691:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \return             1  Interrupt is enabled.
1692:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \note    IRQn must not be negative.
1693:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****  */
1694:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetEnableIRQ(IRQn_Type IRQn)
1695:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** {
1696:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1697:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   {
1698:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     return((uint32_t)(((NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
1699:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   }
1700:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   else
1701:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   {
1702:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     return(0U);
1703:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   }
1704:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** }
1705:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1706:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** 
1707:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** /**
1708:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \brief   Disable Interrupt
1709:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \details Disables a device specific interrupt in the NVIC interrupt controller.
1710:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1711:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   \note    IRQn must not be negative.
1712:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****  */
1713:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** __STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
1714:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** {
  81              		.loc 1 1714 0
  82              		.cfi_startproc
  83              		@ args = 0, pretend = 0, frame = 8
  84              		@ frame_needed = 1, uses_anonymous_args = 0
  85              		@ link register save eliminated.
  86 0000 80B4     		push	{r7}
  87              		.cfi_def_cfa_offset 4
  88              		.cfi_offset 7, -4
  89 0002 83B0     		sub	sp, sp, #12
  90              		.cfi_def_cfa_offset 16
  91 0004 00AF     		add	r7, sp, #0
  92              		.cfi_def_cfa_register 7
  93 0006 0346     		mov	r3, r0
  94 0008 FB80     		strh	r3, [r7, #6]	@ movhi
1715:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
  95              		.loc 1 1715 0
  96 000a B7F90630 		ldrsh	r3, [r7, #6]
  97 000e 002B     		cmp	r3, #0
  98 0010 10DB     		blt	.L8
1716:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   {
1717:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
  99              		.loc 1 1717 0
 100 0012 0B49     		ldr	r1, .L9
 101 0014 B7F90630 		ldrsh	r3, [r7, #6]
 102 0018 5B09     		lsrs	r3, r3, #5
 103 001a FA88     		ldrh	r2, [r7, #6]
 104 001c 02F01F02 		and	r2, r2, #31
 105 0020 0120     		movs	r0, #1
 106 0022 00FA02F2 		lsl	r2, r0, r2
 107 0026 2033     		adds	r3, r3, #32
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 33


 108 0028 41F82320 		str	r2, [r1, r3, lsl #2]
 109              	.LBB6:
 110              	.LBB7:
 111              		.file 2 "Generated_Source\\PSoC6\\pdl\\cmsis/include/cmsis_gcc.h"
   1:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**************************************************************************//**
   2:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  * @version  V5.0.3
   5:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  * @date     16. January 2018
   6:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  ******************************************************************************/
   7:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /*
   8:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  * Copyright (c) 2009-2017 ARM Limited. All rights reserved.
   9:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  *
  10:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  *
  12:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  *
  16:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  *
  18:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  * limitations under the License.
  23:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
  24:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
  25:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
  28:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
  34:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
  38:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
  39:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #ifndef   __ASM
  41:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
  43:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
  46:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
  49:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif                                           
  52:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 34


  54:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
  55:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #ifndef   __USED
  56:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
  58:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
  61:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
  64:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
  67:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
  70:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
  78:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
  86:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
  94:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
 102:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
 110:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #ifndef   __ALIGNED
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 35


 111:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
 113:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
 116:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 117:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 118:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   @{
 122:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 123:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 124:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 125:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 129:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
 131:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
 133:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 134:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 135:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 136:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 140:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 141:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
 142:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 143:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
 144:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 145:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 146:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 147:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Get Control Register
 148:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 149:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \return               Control Register value
 150:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 151:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 152:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
 153:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   uint32_t result;
 154:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 155:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 156:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   return(result);
 157:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
 158:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 159:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 160:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 161:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 162:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 163:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 164:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \return               non-secure Control Register value
 165:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 166:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 167:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 36


 168:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   uint32_t result;
 169:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 170:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 171:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   return(result);
 172:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
 173:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
 174:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 175:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 176:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 177:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Set Control Register
 178:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 179:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 180:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 181:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 182:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
 183:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 184:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
 185:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 186:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 187:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 188:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 189:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 190:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 191:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 192:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 193:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 194:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
 195:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 196:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
 197:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
 198:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 199:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 200:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 201:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Get IPSR Register
 202:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 203:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \return               IPSR Register value
 204:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 205:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 206:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
 207:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   uint32_t result;
 208:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 209:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 210:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   return(result);
 211:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
 212:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 213:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 214:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 215:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Get APSR Register
 216:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 217:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \return               APSR Register value
 218:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 219:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 220:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
 221:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   uint32_t result;
 222:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 223:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 224:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   return(result);
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 37


 225:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
 226:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 227:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 228:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 229:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Get xPSR Register
 230:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 231:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \return               xPSR Register value
 232:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 233:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 234:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
 235:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   uint32_t result;
 236:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 237:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 238:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   return(result);
 239:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
 240:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 241:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 242:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 243:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 244:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 245:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \return               PSP Register value
 246:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 247:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 248:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
 249:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   register uint32_t result;
 250:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 251:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 252:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   return(result);
 253:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
 254:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 255:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 256:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 257:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 258:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 259:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 260:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \return               PSP Register value
 261:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 262:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 263:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
 264:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   register uint32_t result;
 265:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 266:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 267:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   return(result);
 268:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
 269:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
 270:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 271:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 272:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 273:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 274:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 275:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 276:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 277:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 278:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
 279:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 280:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
 281:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 38


 282:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 283:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 284:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 285:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 286:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 287:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 288:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 289:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 290:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
 291:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 292:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
 293:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
 294:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 295:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 296:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 297:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 298:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 299:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \return               MSP Register value
 300:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 301:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 302:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
 303:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   register uint32_t result;
 304:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 305:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 306:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   return(result);
 307:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
 308:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 309:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 310:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 311:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 312:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 313:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 314:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \return               MSP Register value
 315:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 316:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 317:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
 318:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   register uint32_t result;
 319:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 320:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 321:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   return(result);
 322:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
 323:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
 324:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 325:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 326:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 327:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 328:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 329:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 330:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 331:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 332:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
 333:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 334:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
 335:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 336:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 337:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 338:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 39


 339:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 340:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 341:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 342:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 343:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 344:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
 345:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 346:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
 347:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
 348:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 349:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 350:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 352:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 353:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 354:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \return               SP Register value
 355:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 356:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 357:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
 358:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   register uint32_t result;
 359:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 360:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 361:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   return(result);
 362:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
 363:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 364:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 365:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 366:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 367:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 368:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 369:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 370:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 371:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
 372:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 373:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
 374:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
 375:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 376:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 377:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 378:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Get Priority Mask
 379:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 380:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \return               Priority Mask value
 381:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 382:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 383:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
 384:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   uint32_t result;
 385:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 386:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 387:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   return(result);
 388:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
 389:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 390:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 391:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 392:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 393:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 394:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 395:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \return               Priority Mask value
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 40


 396:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 397:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 398:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
 399:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   uint32_t result;
 400:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 401:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 402:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   return(result);
 403:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
 404:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
 405:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 406:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 407:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 408:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Set Priority Mask
 409:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 410:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 411:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 412:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 413:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
 414:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 415:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
 416:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 417:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 418:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 419:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 420:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 421:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 422:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 423:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 424:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 425:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
 426:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 427:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
 428:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
 429:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 430:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 431:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 432:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 433:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 434:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 435:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Enable FIQ
 436:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 437:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 438:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 439:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 440:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
 441:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 442:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
 443:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 444:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 445:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 446:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Disable FIQ
 447:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 448:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 449:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 450:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 451:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
 452:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 41


 453:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
 454:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 455:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 456:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 457:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Get Base Priority
 458:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 459:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \return               Base Priority register value
 460:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 461:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 462:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
 463:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   uint32_t result;
 464:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 465:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 466:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   return(result);
 467:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
 468:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 469:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 470:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 471:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 472:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 473:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 474:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \return               Base Priority register value
 475:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 476:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 477:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
 478:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   uint32_t result;
 479:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 480:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 481:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   return(result);
 482:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
 483:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
 484:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 485:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 486:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 487:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Set Base Priority
 488:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 489:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 490:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 491:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 492:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
 493:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 494:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
 495:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 496:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 497:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 498:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 499:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 500:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 501:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 502:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 503:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 504:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
 505:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 506:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
 507:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
 508:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 509:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 42


 510:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 511:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 512:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 513:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 514:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 515:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 516:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI_MAX(uint32_t basePri)
 517:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
 518:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 519:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
 520:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 521:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 522:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 523:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Get Fault Mask
 524:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 525:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \return               Fault Mask register value
 526:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 527:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FAULTMASK(void)
 528:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
 529:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   uint32_t result;
 530:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 531:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 532:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   return(result);
 533:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
 534:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 535:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 536:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 537:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 538:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 539:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 540:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \return               Fault Mask register value
 541:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 542:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 543:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
 544:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   uint32_t result;
 545:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 546:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 547:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   return(result);
 548:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
 549:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
 550:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 551:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 552:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 553:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Set Fault Mask
 554:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 555:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 556:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 557:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FAULTMASK(uint32_t faultMask)
 558:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
 559:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 560:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
 561:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 562:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 563:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 564:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 565:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 566:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 43


 567:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 568:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 569:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 570:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
 571:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 572:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
 573:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
 574:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 575:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 576:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 577:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 578:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 579:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 580:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 581:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 582:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 583:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 584:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 585:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 586:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 587:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   mode.
 588:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   
 589:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 590:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \return               PSPLIM Register value
 591:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 592:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSPLIM(void)
 593:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
 594:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 595:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 596:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****     // without main extensions, the non-secure PSPLIM is RAZ/WI
 597:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   return 0U;
 598:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #else
 599:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   register uint32_t result;
 600:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 601:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   return result;
 602:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
 603:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
 604:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 605:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3))
 606:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 607:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 608:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 609:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 610:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 611:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 612:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \return               PSPLIM Register value
 613:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 614:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSPLIM_NS(void)
 615:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
 616:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 617:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 618:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   return 0U;
 619:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #else
 620:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   register uint32_t result;
 621:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 622:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   return result;
 623:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 44


 624:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
 625:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
 626:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 627:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 628:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 629:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 630:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 631:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 632:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   mode.
 633:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   
 634:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 635:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 636:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 637:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 638:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
 639:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 640:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 641:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 642:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 643:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #else
 644:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 645:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
 646:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
 647:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 648:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 649:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 650:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 651:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 652:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 653:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 654:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 655:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 656:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 657:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 658:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 659:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
 660:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 661:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 662:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 663:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #else
 664:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 665:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
 666:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
 667:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
 668:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 669:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 670:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 671:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 672:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 673:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 674:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   mode.
 675:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 676:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 677:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \return               MSPLIM Register value
 678:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 679:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSPLIM(void)
 680:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 45


 681:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 682:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 683:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 684:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   return 0U;
 685:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #else
 686:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   register uint32_t result;
 687:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 688:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   return result;
 689:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
 690:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
 691:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 692:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 693:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 694:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 695:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 696:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 697:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 698:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 699:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 700:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \return               MSPLIM Register value
 701:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 702:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSPLIM_NS(void)
 703:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
 704:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 705:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 706:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   return 0U;
 707:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #else
 708:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   register uint32_t result;
 709:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 710:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   return result;
 711:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
 712:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
 713:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
 714:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 715:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 716:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 717:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 718:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 719:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 720:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   mode.
 721:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 722:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 723:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 724:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 725:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 726:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
 727:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 728:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 729:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 730:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 731:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #else
 732:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 733:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
 734:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
 735:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 736:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 737:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 46


 738:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 739:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 740:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 741:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 742:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 743:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 744:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 745:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 746:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 747:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
 748:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 749:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 750:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 751:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #else
 752:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 753:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
 754:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
 755:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
 756:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 757:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 758:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 759:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 760:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 761:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 762:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 763:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 764:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 765:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Get FPSCR
 766:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 767:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 768:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 769:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FPSCR(void)
 770:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
 771:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 772:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 773:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_get_fpscr) || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >=
 774:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 775:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   return __builtin_arm_get_fpscr();
 776:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #else
 777:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   uint32_t result;
 778:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 779:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 780:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   return(result);
 781:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
 782:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #else
 783:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   return(0U);
 784:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
 785:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
 786:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 787:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 788:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 789:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Set FPSCR
 790:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 791:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 792:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 793:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FPSCR(uint32_t fpscr)
 794:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 47


 795:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 796:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 797:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_set_fpscr) || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >=
 798:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 799:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __builtin_arm_set_fpscr(fpscr);
 800:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #else
 801:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 802:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
 803:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #else
 804:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   (void)fpscr;
 805:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
 806:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
 807:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 808:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 809:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 810:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 811:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 812:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 813:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 814:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 815:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 816:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 817:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 818:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   Access to dedicated instructions
 819:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   @{
 820:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** */
 821:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 822:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 823:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 824:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 825:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 826:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 827:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 828:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 829:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #else
 830:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 831:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 832:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 833:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #endif
 834:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 835:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 836:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   No Operation
 837:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 838:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 839:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 840:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 841:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 842:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 843:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 844:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 845:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")
 846:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 847:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 848:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 849:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Wait For Event
 850:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 851:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 48


 852:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 853:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")
 854:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 855:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 856:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 857:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Send Event
 858:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 859:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 860:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 861:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 862:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 863:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 864:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 865:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 866:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 867:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****            after the instruction has been completed.
 868:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 869:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 870:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
 871:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 872:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
 873:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 874:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** 
 875:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** /**
 876:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 877:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 878:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 879:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****  */
 880:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 881:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** {
 882:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 112              		.loc 2 882 0
 113              		.syntax unified
 114              	@ 882 "Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h" 1
 115 002c BFF34F8F 		dsb 0xF
 116              	@ 0 "" 2
 117              		.thumb
 118              		.syntax unified
 119              	.LBE7:
 120              	.LBE6:
 121              	.LBB8:
 122              	.LBB9:
 871:Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h **** }
 123              		.loc 2 871 0
 124              		.syntax unified
 125              	@ 871 "Generated_Source\PSoC6\pdl\cmsis/include/cmsis_gcc.h" 1
 126 0030 BFF36F8F 		isb 0xF
 127              	@ 0 "" 2
 128              		.thumb
 129              		.syntax unified
 130              	.L8:
 131              	.LBE9:
 132              	.LBE8:
1718:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     __DSB();
1719:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****     __ISB();
1720:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h ****   }
1721:Generated_Source\PSoC6\pdl\cmsis/include/core_cm4.h **** }
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 49


 133              		.loc 1 1721 0
 134 0034 00BF     		nop
 135 0036 0C37     		adds	r7, r7, #12
 136              		.cfi_def_cfa_offset 4
 137 0038 BD46     		mov	sp, r7
 138              		.cfi_def_cfa_register 13
 139              		@ sp needed
 140 003a 5DF8047B 		ldr	r7, [sp], #4
 141              		.cfi_restore 7
 142              		.cfi_def_cfa_offset 0
 143 003e 7047     		bx	lr
 144              	.L10:
 145              		.align	2
 146              	.L9:
 147 0040 00E100E0 		.word	-536813312
 148              		.cfi_endproc
 149              	.LFE106:
 150              		.size	__NVIC_DisableIRQ, .-__NVIC_DisableIRQ
 151              		.section	.text.Cy_SAR_Disable,"ax",%progbits
 152              		.align	2
 153              		.thumb
 154              		.thumb_func
 155              		.type	Cy_SAR_Disable, %function
 156              	Cy_SAR_Disable:
 157              	.LFB166:
 158              		.file 3 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/sar/cy_sar.h"
   1:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /***************************************************************************//**
   2:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \file cy_sar.h
   3:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \version 1.20
   4:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
   5:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Header file for the SAR driver.
   6:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
   7:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ********************************************************************************
   8:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \copyright
   9:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Copyright 2017-2018, Cypress Semiconductor Corporation. All rights reserved.
  10:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * You may use this file only in accordance with the license, terms, conditions,
  11:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * disclaimers, and limitations in the end user license agreement accompanying
  12:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * the software package with which this file was provided.
  13:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
  14:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
  15:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /**
  16:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \addtogroup group_sar
  17:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
  18:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This driver configures and controls the SAR ADC subsystem block.
  19:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  20:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The functions and other declarations used in this driver are in cy_sar.h. 
  21:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * You can include cy_pdl.h (ModusToolbox only) to get access to all functions 
  22:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * and declarations in the PDL. 
  23:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  24:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This SAR ADC subsystem is comprised of:
  25:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - a 12-bit SAR converter (SARADC)
  26:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - an embedded reference block (SARREF)
  27:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - a mux (\ref group_sar_sarmux "SARMUX") at the inputs of the converter
  28:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - a sequence controller (\ref group_sar_sarmux "SARSEQ") that enables multi-channel acquisition
  29:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       in a round robin fashion, without CPU intervention, to maximize scan rates.
  30:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  31:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_block_diagram.png
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 50


  32:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  33:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The high level features of the subsystem are:
  34:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - maximum sample rate of 1 Msps
  35:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Sixteen individually configurable channels (depends on device routing capabilities)
  36:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - per channel selectable
  37:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       - single-ended or differential input mode
  38:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       - input from external pin (8 channels in single-ended mode or 4 channels in differential mo
  39:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *         or from internal signals (AMUXBUS, CTB, Die Temperature Sensor)
  40:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       - choose one of four programmable acquisition times
  41:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       - averaging and accumulation
  42:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - scan can be triggered by firmware or hardware in single shot or continuous mode
  43:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - hardware averaging from 2 to 256 samples
  44:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - selectable voltage references
  45:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       - internal VDDA and VDDA/2 references
  46:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       - buffered 1.2 V bandgap reference from \ref group_sysanalog "AREF"
  47:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       - external reference from dedicated pin
  48:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Interrupt generation
  49:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  50:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_usage Usage
  51:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  52:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The high level steps to use this driver are:
  53:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  54:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   -# \ref group_sar_initialization
  55:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   -# \ref group_sar_trigger_conversions
  56:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   -# \ref group_sar_handle_interrupts
  57:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   -# \ref group_sar_retrieve_result
  58:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  59:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_initialization Initialization and Enable
  60:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  61:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * To configure the SAR subsystem, call \ref Cy_SAR_Init. Pass in a pointer to the \ref SAR_Type
  62:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * structure for the base hardware register address and pass in the configuration structure,
  63:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref cy_stc_sar_config_t.
  64:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  65:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * After initialization, call \ref Cy_SAR_Enable to enable the hardware.
  66:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  67:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Here is guidance on how to set the data fields of the configuration structure:
  68:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  69:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_ctrl uint32_t ctrl
  70:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  71:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field specifies configurations that apply to all channels such as the Vref
  72:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * source or the negative terminal selection for all single-ended channels.
  73:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Select a value from each of the following enums that begin with "cy_en_sar_ctrl_" and "OR" them t
  74:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_pwr_ctrl_vref_t
  75:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_vref_sel_t
  76:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_bypass_cap_t
  77:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_neg_sel_t
  78:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_hw_ctrl_negvref_t
  79:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_comp_delay_t
  80:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_comp_pwr_t
  81:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_sarmux_deep_sleep_t
  82:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_sarseq_routing_switches_t
  83:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  84:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SAR_CTRL
  85:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  86:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_sampleCtrl uint32_t sampleCtrl
  87:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  88:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures sampling details that apply to all channels.
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 51


  89:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Select a value from each of the following enums that begin with "cy_en_sar_sample_" and "OR" them
  90:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_result_align_t
  91:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_single_ended_format_t
  92:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_differential_format_t
  93:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_avg_cnt_t
  94:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_avg_mode_t
  95:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_trigger_mode_t
  96:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  97:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SAMPLE_CTRL
  98:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  99:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_sampleTime01 uint32_t sampleTime01
 100:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 101:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures the value for sample times 0 and 1 in ADC clock cycles.
 102:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 103:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SAR has four programmable 10-bit aperture times that are configured using two data fields,
 104:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref group_sar_init_struct_sampleTime01 and
 105:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref group_sar_init_struct_sampleTime23.
 106:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Ten bits allow for a range of 0 to 1023 cycles, however 0 and 1 are invalid.
 107:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The minimum aperture time is 167 ns. With an 18 MHz ADC clock, this is
 108:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * equal to 3 cycles or a value of 4 in this field. The actual aperture time is one cycle less than
 109:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * the value stored in this field.
 110:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 111:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Use the shifts defined in \ref cy_en_sar_sample_time_shift_t.
 112:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 113:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SAMPLE_TIME01
 114:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 115:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_sampleTime23 uint32_t sampleTime23
 116:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 117:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures the value for sample times 2 and 3 in ADC clock cycles.
 118:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Use the shifts defined in \ref cy_en_sar_sample_time_shift_t.
 119:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 120:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SAMPLE_TIME23
 121:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 122:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_rangeThres uint32_t rangeThres
 123:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 124:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures the upper and lower thresholds for the range interrupt.
 125:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * These thresholds apply on a global level for all channels with range detection enabled.
 126:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 127:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SARSEQ supports range detection to allow for automatic detection of sample values
 128:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * compared to two programmable thresholds without CPU involvement.
 129:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Range detection is done after averaging, alignment, and sign extension (if applicable). In other 
 130:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * threshold values need to have the same data format as the result data.
 131:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The values are interpreted as signed or unsigned according to each channel's configuration.
 132:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 133:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Use the shifts defined in \ref cy_en_sar_range_thres_shift_t.
 134:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 135:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The \ref Cy_SAR_SetLowLimit and \ref Cy_SAR_SetHighLimit provide run-time configurability of thes
 136:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 137:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_RANGE_THRES
 138:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 139:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_rangeCond cy_en_sar_range_detect_condition_t rangeCond
 140:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 141:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures the condition (below, inside, outside, or above) that will trigger
 142:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * the range interrupt. Select a value from the \ref cy_en_sar_range_detect_condition_t enum.
 143:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 144:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_chanEn uint32_t chanEn
 145:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 52


 146:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures which channels will be scanned.
 147:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Each bit corresponds to a channel. Bit 0 enables channel 0, bit 1 enables channel 1,
 148:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * bit 2 enables channel 2, and so on.
 149:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 150:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_chanConfig uint32_t chanConfig[16]
 151:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 152:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Each channel has its own channel configuration register.
 153:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The channel configuration specifies which pin/signal is connected to that channel
 154:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * and how the channel is sampled.
 155:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 156:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Select a value from each of the following enums that begin with "cy_en_sar_chan_config_" and "OR"
 157:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 158:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_input_mode_t
 159:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_pos_pin_addr_t
 160:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_pos_port_addr_t
 161:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_avg_en_t
 162:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_sample_time_t
 163:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_neg_pin_addr_t
 164:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_neg_port_addr_t
 165:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 166:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Some important considerations are:
 167:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - The POS_PORT_ADDR and POS_PIN_ADDR bit fields are used by the SARSEQ to select
 168:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   the connection to the positive terminal (Vplus) of the ADC for each channel.
 169:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - When the channel is an unpaired differential input (\ref CY_SAR_CHAN_DIFFERENTIAL_UNPAIRED), 
 170:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   NEG_PORT_ADDR and NEG_PIN_ADDR are used by the SARSEQ to select the connection
 171:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   to the negative terminal (Vminus) of the ADC.
 172:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - When the channel is a differential input pair (\ref CY_SAR_CHAN_DIFFERENTIAL_PAIRED), the NEG
 173:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   For differential input pairs, only the pin for the positive terminal needs to be
 174:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   specified and this pin must be even. For example, Pin 0 (positive terminal) and Pin 1 (negative
 175:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   are a pair. Pin 2 (positive terminal) and Pin 3 (negative terminal) are a pair.
 176:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 177:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * If the SARSEQ is disabled (\ref cy_en_sar_ctrl_sarseq_routing_switches_t) or
 178:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * it is not controlling any switches (\ref group_sar_init_struct_muxSwitchSqCtrl = 0), the port and
 179:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * are ignored. This is possible when there is only one channel to scan.
 180:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 181:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_CHAN_CONFIG
 182:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 183:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_intrMask uint32_t intrMask
 184:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 185:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures which interrupt events (end of scan, overflow, or firmware collision) will 
 186:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 187:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Select one or more values from the \ref cy_en_sar_intr_mask_t enum and "OR" them
 188:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * together.
 189:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 190:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_INTR_MASK
 191:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 192:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_satIntrMask uint32_t satIntrMask
 193:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 194:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures which channels will cause a saturation interrupt.
 195:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 196:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SARSEQ has a saturation detect that is always applied to every conversion.
 197:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This feature detects whether a channel's sample value is equal to the minimum or maximum values.
 198:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This allows the firmware to take action, for example, discard the result, when the SARADC saturat
 199:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The sample value is tested right after conversion, that is, before averaging. This means that it
 200:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * can happen that the interrupt is set while the averaged result in the data register is not
 201:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * equal to the minimum or maximum.
 202:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 53


 203:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Each bit corresponds to a channel. A value of 0 disables saturation detection for all channels.
 204:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 205:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_rangeIntrMask uint32_t rangeIntrMask
 206:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 207:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures which channels will cause a range detection interrupt.
 208:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Each bit corresponds to a channel. A value of 0 disables range detection for all channels.
 209:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 210:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_muxSwitch uint32_t muxSwitch
 211:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 212:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field is the firmware control of the SARMUX switches.
 213:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 214:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Use one or more values from the \ref cy_en_sar_mux_switch_fw_ctrl_t enum and "OR" them together.
 215:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * If the SARSEQ is enabled, the SARMUX switches that will be used must
 216:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * also be closed using this firmware control.
 217:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 218:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_MUX_SWITCH
 219:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 220:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Firmware control can be changed at run-time by calling \ref Cy_SAR_SetAnalogSwitch with \ref CY_S
 221:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * and the desired switch states.
 222:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 223:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_muxSwitchSqCtrl uint32_t muxSwitchSqCtrl
 224:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 225:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field enables or disables SARSEQ control of the SARMUX switches.
 226:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * To disable control of all switches, set this field to 0. To disable the SARSEQ all together,
 227:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * use \ref CY_SAR_SARSEQ_SWITCH_DISABLE when configuring the \ref group_sar_init_struct_ctrl regist
 228:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 229:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Use one or more values from the \ref cy_en_sar_mux_switch_sq_ctrl_t enum and "OR" them together.
 230:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 231:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_MUX_SQ_CTRL
 232:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 233:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * SARSEQ control can be changed at run-time by calling \ref Cy_SAR_SetSwitchSarSeqCtrl.
 234:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 235:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_configRouting bool configRouting
 236:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 237:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * If true, the \ref group_sar_init_struct_muxSwitch and \ref group_sar_init_struct_muxSwitchSqCtrl 
 238:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * will be used. If false, the fields will be ignored.
 239:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 240:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_vrefMvValue uint32_t vrefMvValue
 241:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 242:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field sets the value of the reference voltage in millivolts used. This value
 243:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * is used for converting counts to volts in the \ref Cy_SAR_CountsTo_Volts, \ref Cy_SAR_CountsTo_mV
 244:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref Cy_SAR_CountsTo_uVolts functions.
 245:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 246:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_trigger_conversions Triggering Conversions
 247:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 248:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SAR subsystem has the following modes for triggering a conversion:
 249:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * <table class="doxtable">
 250:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 251:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>Mode</th>
 252:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>Description</th>
 253:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>Usage</th>
 254:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 255:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 256:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Continuous</td>
 257:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>After completing a scan, the
 258:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     SARSEQ will immediately start the next scan. That is, the SARSEQ will always be BUSY.
 259:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     As a result all other triggers, firmware or hardware, are essentially ignored.
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 54


 260:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *  </td>
 261:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>To enter this mode, call \ref Cy_SAR_StartConvert with \ref CY_SAR_START_CONVERT_CONTINUO
 262:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     To stop continuous conversions, call \ref Cy_SAR_StopConvert.
 263:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     </td>
 264:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 265:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 266:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Firmware single shot</td>
 267:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>A single conversion of all enabled channels is triggered with a function call to \ref Cy_
 268:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     \ref CY_SAR_START_CONVERT_SINGLE_SHOT.
 269:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     </td>
 270:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>
 271:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     Firmware triggering is always available by calling \ref Cy_SAR_StartConvert with \ref CY_SAR_
 272:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     To allow only firmware triggering, or disable
 273:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     hardware triggering, set up the \ref cy_stc_sar_config_t config structure with \ref CY_SAR_TR
 274:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     </td>
 275:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 276:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 277:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Hardware edge sensitive</td>
 278:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>A single conversion of all enabled channels is triggered on the rising edge of the hardwa
 279:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     trigger signal.</td>
 280:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>To enable this mode, set up the \ref cy_stc_sar_config_t config structure with
 281:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     \ref CY_SAR_TRIGGER_MODE_FW_AND_HWEDGE.</td>
 282:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *    </tr>
 283:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *    <tr>
 284:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Hardware level sensitive</td>
 285:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Conversions are triggered continuously when the hardware trigger signal is high.</td>
 286:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>To enable this mode, set up the \ref cy_stc_sar_config_t config structure with
 287:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     \ref CY_SAR_TRIGGER_MODE_FW_AND_HWLEVEL.</td>
 288:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *    </tr>
 289:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * </table>
 290:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 291:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The trigger mode can be changed during run time with \ref Cy_SAR_SetConvertMode.
 292:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 293:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * For the hardware trigger modes, use the \ref group_trigmux driver to route an internal or externa
 294:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * signal to the SAR trigger input.
 295:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * When making the required \ref Cy_TrigMux_Connect calls, use the pre-defined enum, TRIG6_OUT_PASS_
 296:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * for the SAR trigger input.
 297:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 298:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_CONFIG_TRIGGER
 299:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 300:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_handle_interrupts Handling Interrupts
 301:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 302:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SAR can generate interrupts on these events:
 303:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 304:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - End of scan (EOS): when scanning of all enabled channels complete.
 305:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Overflow: when the result register is updated before the previous result is read.
 306:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - FW collision: when a new trigger is received while the SAR is still processing the previous t
 307:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Saturation detection: when the channel result is equal to the minimum or maximum value.
 308:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Range detection: when the channel result meets the programmed upper or lower threshold values
 309:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 310:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SAR interrupt to the NVIC is raised any time the intersection (logic and) of the interrupt
 311:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * flags and the corresponding interrupt masks are non-zero.
 312:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 313:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Implement an interrupt routine and assign it to the SAR interrupt.
 314:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Use the pre-defined enum, pass_interrupt_sar_IRQn, as the interrupt source for the SAR.
 315:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 316:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The following code snippet demonstrates how to implement a routine to handle the interrupt.
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 55


 317:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The routine gets called when any one of the SAR interrupts are triggered.
 318:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * When servicing an interrupt, the user must clear the interrupt so that subsequent
 319:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * interrupts can be handled.
 320:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 321:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_ISR
 322:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 323:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The following code snippet demonstrates how to configure and enable the interrupt.
 324:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 325:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_CONFIG_INTR
 326:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 327:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Alternately, instead of handling the interrupts, the \ref Cy_SAR_IsEndConversion function
 328:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * allows for firmware polling of the end of conversion status.
 329:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 330:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_retrieve_result Retrieve Channel Results
 331:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 332:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Retrieve the ADC result by calling \ref Cy_SAR_GetResult16 with the desired channel.
 333:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * To convert the result to a voltage, pass the ADC result to \ref Cy_SAR_CountsTo_Volts, \ref Cy_SA
 334:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref Cy_SAR_CountsTo_uVolts.
 335:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 336:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_clock SAR Clock Configuration
 337:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 338:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SAR requires a clock. Assign a clock to the SAR using the
 339:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * pre-defined enum, PCLK_PASS_CLOCK_SAR, to identify the SAR subsystem.
 340:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Set the clock divider value to achieve the desired clock rate. The SAR can support
 341:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * a maximum frequency of 18 MHz.
 342:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 343:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm4.c SAR_SNIPPET_CONFIGURE_CLOCK
 344:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 345:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_scan_time Scan Rate
 346:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 347:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The scan rate is dependent on the following:
 348:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 349:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - ADC clock rate
 350:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Number of channels
 351:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Averaging
 352:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Resolution
 353:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Acquisition times
 354:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 355:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_acquisition_time Acquisition Time
 356:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 357:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The acquisition time of a channel is based on which of the four global aperture times are selecte
 358:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * channel. The selection is done during initialization per channel with \ref group_sar_init_struct_
 359:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The four global aperture times are also set during initialization with \ref group_sar_init_struct
 360:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref group_sar_init_struct_sampleTime23. Note that these global aperture times are in SAR clock c
 361:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * acquisition time is 1 less than that value in the register.
 362:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 363:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_acquisition_time_eqn.png
 364:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 365:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_channel_sample_time Channel Sample Time
 366:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 367:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The sample time for a channel is the time required to acquire the analog signal
 368:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * and convert it to a digital code.
 369:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 370:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_channel_sample_time_eqn.png
 371:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 372:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SAR ADC is a 12-bit converter so Resolution = 12.
 373:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 56


 374:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_total_scan_time Total Scan Time
 375:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 376:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Channels using one of the sequential averaging modes (\ref CY_SAR_AVG_MODE_SEQUENTIAL_ACCUM or \r
 377:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * are sampled multiple times per scan. The number of samples averaged are set during initialization
 378:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * with \ref group_sar_init_struct_sampleCtrl using one of the values from \ref cy_en_sar_sample_ctr
 379:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Channels that are not averaged or use the \ref CY_SAR_AVG_MODE_INTERLEAVED mode are only sampled 
 380:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 381:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The total scan time is the sum of each channel's sample time multiplied by the samples per scan.
 382:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 383:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_scan_rate_eqn.png
 384:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 385:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * where N is the total number of channels in the scan.
 386:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 387:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_sarmux SARMUX and SARSEQ
 388:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 389:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SARMUX is an analog programmable multiplexer. Its switches can be controlled by the SARSEQ or
 390:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * and the inputs can come from:
 391:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - a dedicated port (can support 8 single-ended channels or 4 differential channels)
 392:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - an internal die temperature (DieTemp) sensor
 393:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - CTB output via SARBUS0/1 (if CTBs are available on the device)
 394:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - AMUXBUSA/B
 395:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 396:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The following figure shows the SARMUX switches. See the device datasheet for the exact location o
 397:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 398:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_sarmux_switches.png
 399:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 400:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * When using the SARSEQ, the following configurations must be performed:
 401:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - enable SARSEQ control of required switches (see \ref group_sar_init_struct_muxSwitchSqCtrl)
 402:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - close the required switches with firmware (see \ref group_sar_init_struct_muxSwitch)
 403:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - configure the POS_PORT_ADDR and POS_PIN_ADDR, and if used, the NEG_PORT_ADDR and NEG_PIN_ADDR
 404:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 405:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * While firmware can control every switch in the SARMUX, not every switch can be controlled by the 
 406:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Additionally, switches outside of the SARMUX such as the AMUXBUSA/B switches or
 407:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * CTB switches will require separate function calls (see \ref group_gpio "GPIO" and \ref group_ctb 
 408:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SARSEQ can control three switches in the \ref group_ctb "CTB" driver (see \ref Cy_CTB_EnableS
 409:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * These switches need to be enabled for SARSEQ control if the CTB outputs are used as the SARMUX in
 410:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 411:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The following table shows the required POS_PORT_ADDR and POS_PIN_ADDR settings
 412:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * for different input connections.
 413:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 414:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * <table class="doxtable">
 415:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 416:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>Input Connection Selection</th>
 417:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>POS_PORT_ADDR</th>
 418:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>POS_PIN_ADDR</th>
 419:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 420:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 421:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>SARMUX dedicated port</td>
 422:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_SARMUX</td>
 423:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_0 through \ref CY_SAR_CHAN_POS_PIN_ADDR_7</td>
 424:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 425:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 426:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>DieTemp sensor</td>
 427:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_SARMUX_VIRT</td>
 428:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_0</td>
 429:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 430:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 57


 431:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>AMUXBUSA</td>
 432:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_SARMUX_VIRT</td>
 433:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_2</td>
 434:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 435:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 436:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>AMUXBUSB</td>
 437:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_SARMUX_VIRT</td>
 438:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_3</td>
 439:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 440:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 441:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>CTB0 Opamp0 1x output</td>
 442:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_CTB0</td>
 443:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_2</td>
 444:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 445:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 446:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>CTB0 Opamp1 1x output</td>
 447:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_CTB0</td>
 448:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_3</td>
 449:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 450:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * </table>
 451:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 452:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_sarmux_dietemp Input from DieTemp sensor
 453:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 454:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * When using the DieTemp sensor, always use single-ended mode.
 455:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The temperature sensor can be routed to Vplus using the \ref CY_SAR_MUX_FW_TEMP_VPLUS switch.
 456:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Connecting this switch will also enable the sensor. Set the \ref group_sar_acquisition_time "acqu
 457:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * be at least 1 us to meet the settling time of the temperature sensor.
 458:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 459:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_sarmux_dietemp.png
 460:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 461:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_02.cydsn/main_cm4.c SNIPPET_SAR_SARMUX_DIETEMP
 462:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 463:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_sarmux_se_diff Input from SARMUX port
 464:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 465:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The following figure and code snippet show how two GPIOs on the SARMUX dedicated port
 466:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * are connected to the SARADC as separate single-ended channels and as a differential-pair channel.
 467:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 468:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_sarmux_dedicated_port.png
 469:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 470:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_02.cydsn/main_cm4.c SNIPPET_SAR_SARMUX_SE_DIFF
 471:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 472:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_sarmux_ctb Input from CTB output visa SARBUS0/1
 473:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 474:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The following figure and code snippet show how the two opamp outputs from the CTB
 475:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * are connected to the SARADC as separate single-ended channels and as a differential-pair channel.
 476:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Note that separate function calls are needed to configure and enable the opamps, perform required
 477:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * and enable SARSEQ control of the switches contained in the CTB.
 478:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 479:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_sarmux_ctb.png
 480:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 481:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_02.cydsn/main_cm4.c SNIPPET_SAR_SARMUX_CTB
 482:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 483:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_sarmux_amuxbus Input from other pins through AMUXBUSA/B
 484:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 485:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The following figure and code snippet show how two GPIOs on any port through the AMUXBUSA and AMU
 486:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * are connected to the SARADC as separate single-ended channels and as a differential-pair channel.
 487:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Note that separate function calls are needed to route the device pins to the SARMUX. The AMUXBUSe
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 58


 488:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * are separated into multiple segments and these segments are connected/disconnected using the AMUX
 489:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * registers in the HSIOM. In the following code snippet, to connect Port 1 to the SARMUX, the left 
 490:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * switches of AMUX_SPLIT_CTL[1] and AMUX_SPLIT_CTL[6] need to be closed.
 491:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 492:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_sarmux_amuxbus.png
 493:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 494:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_02.cydsn/main_cm4.c SNIPPET_SAR_SARMUX_AMUXBUS
 495:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 496:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_low_power Low Power Support
 497:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This SAR driver provides a callback function to handle power mode transitions.
 498:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The \ref Cy_SAR_DeepSleepCallback function ensures that SAR conversions are stopped
 499:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * before Deep Sleep entry. Upon wakeup, the callback
 500:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * enables the hardware and continuous conversions, if previously enabled.
 501:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 502:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * To trigger the callback execution, the callback must be registered before calling \ref Cy_SysPm_C
 503:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref group_syspm driver for more information about power mode transitions and
 504:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * callback registration.
 505:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 506:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Recall that during configuration of the \ref group_sar_init_struct_ctrl "ctrl" field,
 507:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * the SARMUX can be configured to remain enabled in Deep Sleep mode.
 508:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * All other blocks (SARADC, REFBUF, and SARSEQ) do not support Deep Sleep mode operation.
 509:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 510:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_more_information More Information
 511:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * For more information on the SAR ADC subsystem, refer to the technical reference manual (TRM).
 512:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 513:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_MISRA MISRA-C Compliance]
 514:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 515:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This driver has the following specific deviations:
 516:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 517:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * <table class="doxtable">
 518:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 519:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>MISRA Rule</th>
 520:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>Rule Class (Required/Advisory)</th>
 521:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>Rule Description</th>
 522:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>Description of Deviation(s)</th>
 523:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 524:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 525:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>11.4</td>
 526:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Advisory</td>
 527:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>A cast should not be performed between a pointer to object type and a different pointer t
 528:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>The cy_syspm driver defines the pointer to void in the \ref cy_stc_syspm_callback_params_
 529:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       This SAR driver implements a Deep Sleep callback conforming to the cy_syspm driver requirem
 530:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       When the callback is called, the base should point to the SAR_Type register address.
 531:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     </td>
 532:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 533:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * </table>
 534:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 535:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_changelog Changelog
 536:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * <table class="doxtable">
 537:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr><th>Version</th><th>Changes</th><th>Reason for Change</th></tr>
 538:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 539:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td rowspan="2">1.20</td>
 540:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Flattened the organization of the driver source code into the single source directory and
 541:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Driver library directory-structure simplification.</td>
 542:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 543:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 544:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Added register access layer. Use register access macros instead
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 59


 545:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *         of direct register access using dereferenced pointers.</td>
 546:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Makes register access device-independent, so that the PDL does 
 547:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *         not need to be recompiled for each supported part number.</td>
 548:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 549:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 550:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td rowspan="3">1.10</td>
 551:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td> Added workaround for parts with out of range CAP_TRIM in Init API.</td>
 552:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td> Correct CAP_TRIM is necessary achieving specified SAR ADC linearity</td>
 553:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 554:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 555:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td> Turn off the entire hardware block only if the SARMUX is not enabled 
 556:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *          for Deep Sleep operation.                
 557:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     </td>
 558:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td> Improvement of the \ref Cy_SAR_DeepSleep flow</td>
 559:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 560:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 561:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Updated "Low Power Support" section to describe registering the Deep Sleep callback.
 562:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *         Added parenthesis around logical AND operation in Sleep API.</td>
 563:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Documentation update and clarification</td>
 564:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 565:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 566:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>1.0</td>
 567:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Initial version</td>
 568:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td></td>
 569:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 570:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * </table>
 571:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 572:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \defgroup group_sar_macros Macros
 573:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \defgroup group_sar_functions Functions
 574:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   \{
 575:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_functions_basic         Initialization and Basic Functions
 576:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_functions_power         Low Power Callback
 577:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_functions_config        Run-time Configuration Functions
 578:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_functions_countsto      Counts Conversion Functions
 579:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_functions_interrupt     Interrupt Functions
 580:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_functions_switches      SARMUX Switch Control Functions
 581:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_functions_helper        Useful Configuration Query Functions
 582:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   \}
 583:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \defgroup group_sar_globals Global Variables
 584:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \defgroup group_sar_data_structures Data Structures
 585:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \defgroup group_sar_enums Enumerated Types
 586:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   \{
 587:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_ctrl_register_enums         Control Register Enums
 588:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_sample_ctrl_register_enums  Sample Control Register Enums
 589:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_sample_time_shift_enums     Sample Time Register Enums
 590:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_range_thres_register_enums  Range Interrupt Register Enums
 591:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_chan_config_register_enums  Channel Configuration Register Enums
 592:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_intr_mask_t_register_enums  Interrupt Mask Register Enums
 593:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_mux_switch_register_enums   SARMUX Switch Control Register Enums
 594:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   \}
 595:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 596:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 597:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #if !defined(CY_SAR_H)
 598:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_H
 599:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 600:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #include <stdint.h>
 601:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #include <stdbool.h>
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 60


 602:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #include <stddef.h>
 603:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #include "cy_device_headers.h"
 604:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #include "cy_syslib.h"
 605:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #include "cy_syspm.h"
 606:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #include "cy_device.h"
 607:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 608:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #ifdef CY_IP_MXS40PASS_SAR
 609:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 610:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #if defined(__cplusplus)
 611:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** extern "C" {
 612:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #endif
 613:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 614:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_macros
 615:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
 616:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 617:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 618:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Driver major version */
 619:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_DRV_VERSION_MAJOR        1
 620:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 621:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Driver minor version */
 622:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_DRV_VERSION_MINOR        20
 623:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 624:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** SAR driver identifier */
 625:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_ID                       CY_PDL_DRV_ID(0x01u)
 626:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 627:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Maximum number of channels */
 628:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_MAX_NUM_CHANNELS         (PASS_SAR_SAR_CHANNELS)
 629:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 630:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \cond INTERNAL */
 631:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_DEINIT                   (0uL)             /**< De-init value for most SAR registers
 632:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SAMPLE_TIME_DEINIT       ((3uL << SAR_SAMPLE_TIME01_SAMPLE_TIME0_Pos) | (3uL << SAR_
 633:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CLEAR_ALL_SWITCHES       (0x3FFFFFFFuL)    /**< Value to clear all SARMUX switches *
 634:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_DEINIT_SQ_CTRL           (SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P0_Msk \
 635:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P1_Msk \
 636:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P2_Msk \
 637:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P3_Msk \
 638:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P4_Msk \
 639:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P5_Msk \
 640:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P6_Msk \
 641:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P7_Msk \
 642:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_VSSA_Msk \
 643:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_TEMP_Msk \
 644:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_AMUXBUSA_Msk \
 645:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_AMUXBUSB_Msk \
 646:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_SARBUS0_Msk \
 647:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_SARBUS1_Msk)
 648:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_REG_CTRL_MASK            (SAR_CTRL_PWR_CTRL_VREF_Msk \
 649:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_VREF_SEL_Msk \
 650:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_VREF_BYP_CAP_EN_Msk \
 651:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_NEG_SEL_Msk \
 652:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_SAR_HW_CTRL_NEGVREF_Msk \
 653:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_COMP_DLY_Msk \
 654:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_REFBUF_EN_Msk \
 655:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_COMP_PWR_Msk \
 656:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_DEEPSLEEP_ON_Msk \
 657:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_DSI_SYNC_CONFIG_Msk \
 658:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_DSI_MODE_Msk \
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 61


 659:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_SWITCH_DISABLE_Msk \
 660:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_ENABLED_Msk)
 661:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_REG_SAMPLE_CTRL_MASK     (SAR_SAMPLE_CTRL_LEFT_ALIGN_Msk \
 662:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_Msk \
 663:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_DIFFERENTIAL_SIGNED_Msk \
 664:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_AVG_CNT_Msk \
 665:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_AVG_SHIFT_Msk \
 666:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_AVG_MODE_Msk \
 667:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_CONTINUOUS_Msk \
 668:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_DSI_TRIGGER_EN_Msk \
 669:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_Msk \
 670:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_DSI_SYNC_TRIGGER_Msk \
 671:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_UAB_SCAN_MODE_Msk \
 672:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_REPEAT_INVALID_Msk \
 673:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_VALID_SEL_Msk \
 674:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_VALID_SEL_EN_Msk \
 675:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_VALID_IGNORE_Msk \
 676:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_TRIGGER_OUT_EN_Msk \
 677:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_EOS_DSI_OUT_EN_Msk)
 678:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_REG_CHAN_CONFIG_MASK     (SAR_CHAN_CONFIG_POS_PIN_ADDR_Msk \
 679:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_POS_PORT_ADDR_Msk \
 680:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_DIFFERENTIAL_EN_Msk \
 681:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_AVG_EN_Msk \
 682:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_SAMPLE_TIME_SEL_Msk \
 683:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_NEG_PIN_ADDR_Msk \
 684:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_NEG_PORT_ADDR_Msk \
 685:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_NEG_ADDR_EN_Msk \
 686:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_DSI_OUT_EN_Msk)
 687:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_REG_SAMPLE_TIME_MASK     (SAR_SAMPLE_TIME01_SAMPLE_TIME0_Msk | SAR_SAMPLE_TIME01_SAM
 688:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 689:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_2US_DELAY                (2u)              /**< Delay used in Enable API function to
 690:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_10V_COUNTS               (10.0F)           /**< Value of 10 in volts */
 691:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_10MV_COUNTS              (10000)           /**< Value of 10 in millivolts */
 692:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_10UV_COUNTS              (10000000L)       /**< Value of 10 in microvolts */
 693:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_WRK_MAX_12BIT            (0x00001000uL)    /**< Maximum SAR work register value for 
 694:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_RANGE_LIMIT_MAX          (0xFFFFuL)        /**< Maximum value for the low and high r
 695:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CAP_TRIM_MAX             (0x3FuL)          /**< Maximum value for CAP_TRIM */
 696:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CAP_TRIM_MIN             (0x00uL)          /**< Maximum value for CAP_TRIM */
 697:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CAP_TRIM                 (0x0BuL)          /**< Correct cap trim value */
 698:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 699:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /**< Macros for conditions used in CY_ASSERT calls */
 700:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CHANNUM(chan)            ((chan) < CY_SAR_MAX_NUM_CHANNELS)
 701:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CHANMASK(mask)           ((mask) < (1uL << CY_SAR_MAX_NUM_CHANNELS))
 702:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_RANGECOND(cond)          ((cond) <= CY_SAR_RANGE_COND_OUTSIDE)
 703:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_INTRMASK(mask)           ((mask) <= (uint32_t)(CY_SAR_INTR_EOS_MASK | CY_SAR_INTR_OV
 704:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_TRIGGER(mode)            (((mode) == CY_SAR_TRIGGER_MODE_FW_ONLY) \
 705:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         || ((mode) == CY_SAR_TRIGGER_MODE_FW_AND_HWEDGE) \
 706:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         || ((mode) == CY_SAR_TRIGGER_MODE_FW_AND_HWLEVEL))
 707:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_RETURN(mode)             (((mode) == CY_SAR_RETURN_STATUS) || ((mode) == CY_SAR_WAIT
 708:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_STARTCONVERT(mode)       (((mode) == CY_SAR_START_CONVERT_SINGLE_SHOT) || ((mode) ==
 709:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_RANGE_LIMIT(limit)       ((limit) <= CY_SAR_RANGE_LIMIT_MAX)
 710:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SWITCHSELECT(select)     ((select) == CY_SAR_MUX_SWITCH0)
 711:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SWITCHMASK(mask)         ((mask) <= CY_SAR_CLEAR_ALL_SWITCHES)
 712:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SWITCHSTATE(state)       (((state) == CY_SAR_SWITCH_OPEN) || ((state) == CY_SAR_SWIT
 713:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SQMASK(mask)             (((mask) & (~CY_SAR_DEINIT_SQ_CTRL)) == 0uL)
 714:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SQCTRL(ctrl)             (((ctrl) == CY_SAR_SWITCH_SEQ_CTRL_ENABLE) || ((ctrl) == CY
 715:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 62


 716:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CTRL(value)              (((value) & (~CY_SAR_REG_CTRL_MASK)) == 0uL)
 717:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SAMPLE_CTRL(value)       (((value) & (~CY_SAR_REG_SAMPLE_CTRL_MASK)) == 0uL)
 718:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SAMPLE_TIME(value)       (((value) & (~CY_SAR_REG_SAMPLE_TIME_MASK)) == 0uL)
 719:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CHAN_CONFIG(value)       (((value) & (~CY_SAR_REG_CHAN_CONFIG_MASK)) == 0uL)
 720:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \endcond */
 721:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 722:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} group_sar_macro */
 723:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 724:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_globals
 725:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
 726:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 727:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /***************************************
 728:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *        Global Variables
 729:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ***************************************/
 730:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 731:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** This array is used to calibrate the offset for each channel.
 732:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 733:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * At initialization, channels that are single-ended, signed, and with Vneg = Vref
 734:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * have an offset of -(2^12)/2 = -2048. All other channels have an offset of 0.
 735:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The offset can be overridden using \ref Cy_SAR_SetOffset.
 736:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 737:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The channel offsets are used by the \ref Cy_SAR_CountsTo_Volts, \ref Cy_SAR_CountsTo_mVolts, and
 738:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref Cy_SAR_CountsTo_uVolts functions to convert counts to voltage.
 739:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 740:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 741:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** extern volatile int16_t Cy_SAR_offset[CY_SAR_MAX_NUM_CHANNELS];
 742:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 743:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** This array is used to calibrate the gain for each channel.
 744:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 745:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * It is set at initialization and the value depends on the SARADC resolution
 746:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * and voltage reference, 10*(2^12)/(2*Vref).
 747:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The gain can be overridden using \ref Cy_SAR_SetGain.
 748:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 749:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The channel gains are used by the \ref Cy_SAR_CountsTo_Volts, \ref Cy_SAR_CountsTo_mVolts, and
 750:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref Cy_SAR_CountsTo_uVolts functions to convert counts to voltage.
 751:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 752:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** extern volatile int32_t Cy_SAR_countsPer10Volt[CY_SAR_MAX_NUM_CHANNELS];
 753:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 754:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} group_sar_globals */
 755:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 756:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_enums
 757:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
 758:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 759:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 760:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /******************************************************************************
 761:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****  * Enumerations
 762:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****  *****************************************************************************/
 763:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 764:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** The SAR status/error code definitions */
 765:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 766:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 767:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SUCCESS    = 0x00uL,                                      /**< Success */
 768:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_BAD_PARAM  = CY_SAR_ID | CY_PDL_STATUS_ERROR | 0x01uL,    /**< Invalid input parameters 
 769:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_TIMEOUT    = CY_SAR_ID | CY_PDL_STATUS_ERROR | 0x02uL,    /**< A timeout occurred */
 770:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CONVERSION_NOT_COMPLETE = CY_SAR_ID | CY_PDL_STATUS_ERROR | 0x03uL,    /**< SAR conversi
 771:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_status_t;
 772:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 63


 773:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Definitions for starting a conversion used in \ref Cy_SAR_StartConvert */
 774:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 775:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 776:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_START_CONVERT_SINGLE_SHOT = 0uL, /**< Start a single scan (one shot) from firmware */
 777:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_START_CONVERT_CONTINUOUS  = 1uL, /**< Continuously scan enabled channels and ignores all
 778:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_start_convert_sel_t;
 779:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 780:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Definitions for the return mode used in \ref Cy_SAR_IsEndConversion */
 781:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 782:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 783:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RETURN_STATUS    = 0uL,      /**< Immediately returns the conversion status. */
 784:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_WAIT_FOR_RESULT  = 1uL,    /**< Does not return a result until the conversion of all seq
 785:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_return_mode_t;
 786:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 787:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Switch state definitions */
 788:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 789:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 790:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SWITCH_OPEN      = 0uL,    /**< Open the switch */
 791:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SWITCH_CLOSE     = 1uL     /**< Close the switch */
 792:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_switch_state_t;
 793:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 794:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Definitions for sequencer control of switches */
 795:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 796:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 797:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SWITCH_SEQ_CTRL_DISABLE = 0uL, /**< Disable sequencer control of switch */
 798:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SWITCH_SEQ_CTRL_ENABLE  = 1uL  /**< Enable sequencer control of switch */
 799:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_switch_sar_seq_ctrl_t;
 800:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 801:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Switch register selection for \ref Cy_SAR_SetAnalogSwitch and \ref Cy_SAR_GetAnalogSwitch */
 802:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 803:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 804:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SWITCH0  = 0uL,      /**< SARMUX switch control register */
 805:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_switch_register_sel_t;
 806:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 807:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_ctrl_register_enums
 808:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of enumerations aids in configuring the SAR CTRL register
 809:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
 810:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 811:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Reference voltage buffer power mode definitions */
 812:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 813:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 814:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_100     = 0uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< Full power (100%) */
 815:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_80      = 1uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 80% power */
 816:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_60      = 2uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 60% power */
 817:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_50      = 3uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 50% power */
 818:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_40      = 4uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 40% power */
 819:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_30      = 5uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 30% power */
 820:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_20      = 6uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 20% power */
 821:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_10      = 7uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 10% power */
 822:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_pwr_ctrl_vref_t;
 823:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 824:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Reference voltage selection definitions */
 825:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 826:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 827:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_SEL_BGR         = 4uL << SAR_CTRL_VREF_SEL_Pos,     /**< System wide bandgap from \
 828:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_SEL_EXT         = 5uL << SAR_CTRL_VREF_SEL_Pos,     /**< External Vref direct from 
 829:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_SEL_VDDA_DIV_2  = 6uL << SAR_CTRL_VREF_SEL_Pos,     /**< Vdda/2 (Vref buffer on) */
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 64


 830:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_SEL_VDDA        = 7uL << SAR_CTRL_VREF_SEL_Pos      /**< Vdda */
 831:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_vref_sel_t;
 832:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 833:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Vref bypass cap enable.
 834:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * When enabled, a bypass capacitor should
 835:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * be connected to the dedicated Vref pin of the device.
 836:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Refer to the device datasheet for the minimum bypass capacitor value to use.
 837:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 838:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 839:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 840:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_BYPASS_CAP_DISABLE = 0uL << SAR_CTRL_VREF_BYP_CAP_EN_Pos,    /**< Disable Vref bypass ca
 841:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_BYPASS_CAP_ENABLE  = 1uL << SAR_CTRL_VREF_BYP_CAP_EN_Pos     /**< Enable Vref bypass cap
 842:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_bypass_cap_t;
 843:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 844:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Negative terminal (Vminus) selection definitions for single-ended channels.
 845:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 846:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The Vminus input for single ended channels can be connected to
 847:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Vref, VSSA, or routed out to an external pin.
 848:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The options for routing to a pin are through Pin 1, Pin 3, Pin 5, or Pin 7
 849:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * of the SARMUX dedicated port or an acore wire in AROUTE, if available on the device.
 850:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 851:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref CY_SAR_NEG_SEL_VSSA_KELVIN comes straight from a Vssa pad without any shared branches
 852:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * so as to keep quiet and avoid voltage drops.
 853:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 854:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 855:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 856:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_SEL_VSSA_KELVIN  = 0uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to VSSA_KELVIN 
 857:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_SEL_P1           = 2uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to Pin 1 of SAR
 858:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_SEL_P3           = 3uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to Pin 3 of SAR
 859:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_SEL_P5           = 4uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to Pin 5 of SAR
 860:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_SEL_P7           = 5uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to Pin 6 of SAR
 861:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_SEL_ACORE        = 6uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to an ACORE in 
 862:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_SEL_VREF         = 7uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to VREF input o
 863:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_neg_sel_t;
 864:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 865:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Enable hardware control of the switch between Vref and the Vminus input */
 866:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 867:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 868:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CTRL_NEGVREF_FW_ONLY = 0uL << SAR_CTRL_SAR_HW_CTRL_NEGVREF_Pos,    /**< Only firmware co
 869:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CTRL_NEGVREF_HW      = 1uL << SAR_CTRL_SAR_HW_CTRL_NEGVREF_Pos     /**< Enable hardware 
 870:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_hw_ctrl_negvref_t;
 871:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 872:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the comparator latch delay */
 873:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 874:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 875:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CTRL_COMP_DLY_2P5    = 0uL << SAR_CTRL_COMP_DLY_Pos,    /**< 2.5 ns delay, use for SAR c
 876:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CTRL_COMP_DLY_4      = 1uL << SAR_CTRL_COMP_DLY_Pos,    /**< 4 ns delay, use for SAR con
 877:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CTRL_COMP_DLY_10     = 2uL << SAR_CTRL_COMP_DLY_Pos,    /**< 10 ns delay, use for SAR co
 878:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CTRL_COMP_DLY_12     = 3uL << SAR_CTRL_COMP_DLY_Pos     /**< 12 ns delay, use for SAR co
 879:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_comp_delay_t;
 880:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 881:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the comparator power mode */
 882:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 883:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 884:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_100     = 0uL << SAR_CTRL_COMP_PWR_Pos,      /**< 100% power, use this for > 2 
 885:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_80      = 1uL << SAR_CTRL_COMP_PWR_Pos,      /**< 80% power, use this for 1.5 -
 886:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_60      = 2uL << SAR_CTRL_COMP_PWR_Pos,      /**< 60% power, use this for 1.0 -
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 65


 887:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_50      = 3uL << SAR_CTRL_COMP_PWR_Pos,      /**< 50% power, use this for 500 k
 888:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_40      = 4uL << SAR_CTRL_COMP_PWR_Pos,      /**< 40% power, use this for 250 -
 889:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_30      = 5uL << SAR_CTRL_COMP_PWR_Pos,      /**< 30% power, use this for 100 -
 890:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_20      = 6uL << SAR_CTRL_COMP_PWR_Pos,      /**< 20% power, use this for TDB s
 891:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_10      = 7uL << SAR_CTRL_COMP_PWR_Pos,      /**< 10% power, use this for < 100
 892:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_comp_pwr_t;
 893:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 894:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Enable or disable the SARMUX during Deep Sleep power mode. */
 895:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 896:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 897:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_DEEPSLEEP_SARMUX_OFF = 0uL << SAR_CTRL_DEEPSLEEP_ON_Pos,    /**< Disable SARMUX operatio
 898:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_DEEPSLEEP_SARMUX_ON  = 1uL << SAR_CTRL_DEEPSLEEP_ON_Pos     /**< Enable SARMUX operation
 899:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_sarmux_deep_sleep_t;
 900:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 901:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Enable or disable the SARSEQ control of routing switches */
 902:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 903:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 904:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SARSEQ_SWITCH_ENABLE    = 0uL << SAR_CTRL_SWITCH_DISABLE_Pos,    /**< Enable the SARSEQ 
 905:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SARSEQ_SWITCH_DISABLE   = 1uL << SAR_CTRL_SWITCH_DISABLE_Pos     /**< Disable the SARSEQ
 906:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_sarseq_routing_switches_t;
 907:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 908:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /* \} */
 909:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 910:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_sample_ctrl_register_enums
 911:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of enumerations are used in configuring the SAR SAMPLE_CTRL register
 912:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
 913:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 914:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure result alignment, either left or right aligned.
 915:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 916:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \note
 917:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Averaging always uses right alignment. If the \ref CY_SAR_LEFT_ALIGN
 918:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * is selected with averaging enabled, it is ignored.
 919:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 920:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \note
 921:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The voltage conversion functions (\ref Cy_SAR_CountsTo_Volts, \ref Cy_SAR_CountsTo_mVolts,
 922:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref Cy_SAR_CountsTo_uVolts) are only valid for right alignment.
 923:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * */
 924:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 925:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 926:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RIGHT_ALIGN  = 0uL << SAR_SAMPLE_CTRL_LEFT_ALIGN_Pos,    /**< Right align result data to
 927:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_LEFT_ALIGN   = 1uL << SAR_SAMPLE_CTRL_LEFT_ALIGN_Pos     /**< Left align result data to 
 928:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_sample_ctrl_result_align_t;
 929:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 930:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure format, signed or unsigned, of single-ended channels */
 931:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 932:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 933:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SINGLE_ENDED_UNSIGNED  = 0uL << SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_Pos,    /**< Result 
 934:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SINGLE_ENDED_SIGNED    = 1uL << SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_Pos     /**< Result 
 935:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_sample_ctrl_single_ended_format_t;
 936:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 937:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure format, signed or unsigned, of differential channels */
 938:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 939:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 940:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_DIFFERENTIAL_UNSIGNED  = 0uL << SAR_SAMPLE_CTRL_DIFFERENTIAL_SIGNED_Pos,    /**< Result 
 941:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_DIFFERENTIAL_SIGNED    = 1uL << SAR_SAMPLE_CTRL_DIFFERENTIAL_SIGNED_Pos     /**< Result 
 942:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_sample_ctrl_differential_format_t;
 943:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 66


 944:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure number of samples for averaging.
 945:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This applies only to channels with averaging enabled.
 946:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 947:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 948:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 949:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_2          = 0uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 950:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_4          = 1uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 951:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_8          = 2uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 952:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_16         = 3uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 953:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_32         = 4uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 954:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_64         = 5uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 955:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_128        = 6uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 956:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_256        = 7uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos     /**< Set samples averaged to
 957:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_sample_ctrl_avg_cnt_t;
 958:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 959:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the averaging mode.
 960:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 961:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Sequential accumulate and dump: a channel will be sampled back to back.
 962:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   The result is added to a running sum in a 20-bit register. At the end
 963:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   of the scan, the accumulated value is shifted right to fit into 16 bits
 964:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   and stored into the CHAN_RESULT register.
 965:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Sequential fixed:  a channel will be sampled back to back.
 966:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   The result is added to a running sum in a 20-bit register. At the end
 967:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   of the scan, the accumulated value is shifted right to fit into 12 bits
 968:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   and stored into the CHAN_RESULT register.
 969:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Interleaved: a channel will be sampled once per scan.
 970:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   The result is added to a running sum in a 16-bit register.
 971:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   In the scan where the final averaging count is reached,
 972:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   the accumulated value is shifted right to fit into 12 bits
 973:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   and stored into the CHAN_RESULT register.
 974:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   In all other scans, the CHAN_RESULT will have an invalid result.
 975:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   In interleaved mode, make sure that the averaging
 976:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   count is low enough to ensure that the intermediate value does not exceed 16 bits,
 977:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   that is averaging count is 16 or less. Otherwise, the MSBs will be lost.
 978:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   In the special case that averaging is enabled for all enabled channels
 979:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   and interleaved mode is used, the interrupt frequency
 980:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   will be reduced by a factor of the number of samples averaged.
 981:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 982:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 983:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 984:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_MODE_SEQUENTIAL_ACCUM    = 0uL,                               /**< Set mode to seque
 985:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_MODE_SEQUENTIAL_FIXED    = SAR_SAMPLE_CTRL_AVG_SHIFT_Msk,     /**< Set mode to seque
 986:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_MODE_INTERLEAVED         = SAR_SAMPLE_CTRL_AVG_MODE_Msk,      /**< Set mode to inter
 987:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_sample_ctrl_avg_mode_t;
 988:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 989:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the trigger mode.
 990:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 991:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Firmware triggering is always enabled and can be single shot or continuous.
 992:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Additionally, hardware triggering can be enabled with the option to be
 993:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * edge or level sensitive.
 994:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 995:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 996:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 997:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_TRIGGER_MODE_FW_ONLY        = 0uL,                                /**< Firmware trigger 
 998:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_TRIGGER_MODE_FW_AND_HWEDGE  = SAR_SAMPLE_CTRL_DSI_TRIGGER_EN_Msk, /**< Enable edge sensi
 999:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_TRIGGER_MODE_FW_AND_HWLEVEL = SAR_SAMPLE_CTRL_DSI_TRIGGER_EN_Msk | SAR_SAMPLE_CTRL_DSI_T
1000:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_sample_ctrl_trigger_mode_t;
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 67


1001:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1002:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /* \} */
1003:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1004:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_sample_time_shift_enums
1005:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of enumerations aids in configuring the SAR SAMPLE_TIME* registers
1006:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1007:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1008:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the sample time by using these shifts */
1009:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1010:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1011:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SAMPLE_TIME0_SHIFT       = SAR_SAMPLE_TIME01_SAMPLE_TIME0_Pos,             /**< Shift fo
1012:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SAMPLE_TIME1_SHIFT       = SAR_SAMPLE_TIME01_SAMPLE_TIME1_Pos,             /**< Shift fo
1013:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SAMPLE_TIME2_SHIFT       = SAR_SAMPLE_TIME23_SAMPLE_TIME2_Pos,             /**< Shift fo
1014:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SAMPLE_TIME3_SHIFT       = SAR_SAMPLE_TIME23_SAMPLE_TIME3_Pos,             /**< Shift fo
1015:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_sample_time_shift_t;
1016:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /* \} */
1017:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1018:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_range_thres_register_enums
1019:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of enumerations aids in configuring the SAR RANGE* registers
1020:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1021:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1022:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the lower and upper thresholds for range detection
1023:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1024:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SARSEQ supports range detection to allow for automatic detection of sample
1025:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * values compared to two programmable thresholds without CPU involvement.
1026:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Range detection is defined by two global thresholds and a condition.
1027:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The RANGE_LOW value defines the lower threshold and RANGE_HIGH defines
1028:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * the upper threshold of the range.
1029:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1030:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Range detect is done after averaging, alignment, and sign extension (if applicable).
1031:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * In other words, the thresholds values must have the same data format as the result data.
1032:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Range detection is always done for all channels scanned. By making RANGE_INTR_MASK=0,
1033:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * the firmware can choose to ignore the range detect interrupt for any channel.
1034:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1035:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1036:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1037:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RANGE_LOW_SHIFT      = SAR_RANGE_THRES_RANGE_LOW_Pos,        /**< Shift for setting lowe
1038:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RANGE_HIGH_SHIFT     = SAR_RANGE_THRES_RANGE_HIGH_Pos,       /**< Shift for setting uppe
1039:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_range_thres_shift_t;
1040:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1041:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the condition (below, inside, above, or outside) of the range detection interrupt */
1042:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1043:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1044:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RANGE_COND_BELOW     = 0uL,  /**< Range interrupt detected when result < RANGE_LOW */
1045:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RANGE_COND_INSIDE    = 1uL,  /**< Range interrupt detected when RANGE_LOW <= result < RA
1046:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RANGE_COND_ABOVE     = 2uL,  /**< Range interrupt detected when RANGE_HIGH <= result */
1047:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RANGE_COND_OUTSIDE   = 3uL,  /**< Range interrupt detected when result < RANGE_LOW || RA
1048:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_range_detect_condition_t;
1049:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /* \} */
1050:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1051:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_chan_config_register_enums
1052:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of enumerations aids in configuring the SAR CHAN_CONFIG register
1053:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1054:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1055:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the input mode of the channel
1056:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1057:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Single ended channel: the \ref cy_en_sar_ctrl_neg_sel_t selection in the \ref group_sar_init_st
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 68


1058:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   determines what drives the Vminus pin
1059:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Differential paired: Vplus and Vminus are a pair. Bit 0 of \ref cy_en_sar_chan_config_pos_pin_a
1060:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   is ignored and considered to be 0.
1061:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   In other words, \ref cy_en_sar_chan_config_pos_pin_addr_t "POS_PIN_ADDR" points to the even pin
1062:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   The even pin is connected to Vplus and the odd pin is connected to Vminus.
1063:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   \ref cy_en_sar_chan_config_pos_port_addr_t "POS_PORT_ADDR" is used to identify the port that co
1064:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Differential unpaired: The \ref cy_en_sar_chan_config_neg_pin_addr_t "NEG_PIN_ADDR" and
1065:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   \ref cy_en_sar_chan_config_neg_port_addr_t "NEG_PORT_ADDR" determine what drives the Vminus pin
1066:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   This is a variation of differential mode with no even-odd pair limitation
1067:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1068:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1069:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1070:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_SINGLE_ENDED            = 0uL,                                     /**< Single ende
1071:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_DIFFERENTIAL_PAIRED     = SAR_CHAN_CONFIG_DIFFERENTIAL_EN_Msk,     /**< Differentia
1072:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_DIFFERENTIAL_UNPAIRED   = SAR_CHAN_CONFIG_NEG_ADDR_EN_Msk          /**< Differentia
1073:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_chan_config_input_mode_t;
1074:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1075:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure address of the pin connected to the Vplus terminal of the SARADC. */
1076:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1077:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1078:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_0     = 0uL,                                            /**< Pin 0 on 
1079:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_1     = 1uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 1 on 
1080:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_2     = 2uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 2 on 
1081:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_3     = 3uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 3 on 
1082:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_4     = 4uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 4 on 
1083:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_5     = 5uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 5 on 
1084:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_6     = 6uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 6 on 
1085:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_7     = 7uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 7 on 
1086:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_chan_config_pos_pin_addr_t;
1087:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1088:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure address of the port that contains the pin connected to the Vplus terminal of the SARA
1089:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1090:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - \ref CY_SAR_POS_PORT_ADDR_SARMUX is for the dedicated SARMUX port (8 pins)
1091:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Port 1 through 4 are respectively the pins of CTB0, CTB1, CTB2, and CTB3 (if present)
1092:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Port 7, 5, and 6 (VPORT0/1/2) are the groups of internal signals that can be selected
1093:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   in the SARMUX or AROUTE (if present).
1094:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1095:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * See the \ref group_sar_sarmux section for more guidance.
1096:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1097:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1098:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1099:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_SARMUX         = 0uL,                                       /**< Dedicated
1100:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_CTB0           = 1uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< Outputs f
1101:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_CTB1           = 2uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< Outputs f
1102:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_CTB2           = 3uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< Outputs f
1103:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_CTB3           = 4uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< Outputs f
1104:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_AROUTE_VIRT2   = 5uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< AROUTE vi
1105:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_AROUTE_VIRT1   = 6uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< AROUTE vi
1106:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_SARMUX_VIRT    = 7uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< SARMUX vi
1107:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_chan_config_pos_port_addr_t;
1108:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1109:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Enable or disable averaging for the channel */
1110:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1111:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1112:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_AVG_DISABLE      = 0uL,                                 /**< Disable averaging for 
1113:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_AVG_ENABLE       = 1uL << SAR_CHAN_CONFIG_AVG_EN_Pos    /**< Enable averaging for t
1114:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_chan_config_avg_en_t;
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 69


1115:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1116:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Select which sample time to use for the channel.
1117:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * There are four global samples times available set by \ref group_sar_init_struct_sampleTime01 and
1118:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref group_sar_init_struct_sampleTime23.
1119:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1120:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1121:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1122:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_SAMPLE_TIME_0     = 0uL,                                          /**< Use sample t
1123:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_SAMPLE_TIME_1     = 1uL << SAR_CHAN_CONFIG_SAMPLE_TIME_SEL_Pos,   /**< Use sample t
1124:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_SAMPLE_TIME_2     = 2uL << SAR_CHAN_CONFIG_SAMPLE_TIME_SEL_Pos,   /**< Use sample t
1125:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_SAMPLE_TIME_3     = 3uL << SAR_CHAN_CONFIG_SAMPLE_TIME_SEL_Pos,   /**< Use sample t
1126:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_chan_config_sample_time_t;
1127:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1128:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure address of the pin connected to the Vminus terminal of the SARADC. */
1129:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1130:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1131:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_0     = 0uL,                                            /**< Pin 0 on 
1132:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_1     = 1uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 1 on 
1133:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_2     = 2uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 2 on 
1134:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_3     = 3uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 3 on 
1135:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_4     = 4uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 4 on 
1136:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_5     = 5uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 5 on 
1137:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_6     = 6uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 6 on 
1138:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_7     = 7uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 7 on 
1139:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_chan_config_neg_pin_addr_t;
1140:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1141:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure address of the port that contains the pin connected to the Vminus terminal of the SAR
1142:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1143:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Port 0 is 8 pins of the SARMUX
1144:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Port 7, 5, and 6 (VPORT0/1/2) are the groups of internal signals that can be selected
1145:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   in the SARMUX or AROUTE (if present).
1146:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1147:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1148:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1149:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_PORT_ADDR_SARMUX         = 0uL,                                       /**< Dedicated
1150:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_PORT_ADDR_AROUTE_VIRT2   = 5uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< AROUTE vi
1151:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_PORT_ADDR_AROUTE_VIRT1   = 6uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< AROUTE vi
1152:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_PORT_ADDR_SARMUX_VIRT    = 7uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< SARMUX vi
1153:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_chan_config_neg_port_addr_t;
1154:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1155:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /* \} */
1156:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1157:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_intr_mask_t_register_enums
1158:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of enumerations aids in configuring the SAR INTR_MASK register
1159:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1160:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1161:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure which signal will cause an interrupt event.
1162:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1163:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - End of scan (EOS): occurs after completing a scan of all enabled channels
1164:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Overflow: occurs when hardware sets a new EOS interrupt while the previous interrupt
1165:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   has not be cleared by the firmware
1166:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Firmware collision: occurs when firmware attempts to start one-shot
1167:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   conversion while the SAR is busy.
1168:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1169:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Enable all, one, or none of the interrupt events.
1170:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1171:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 70


1172:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1173:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_INTR_MASK_NONE           = 0uL,                                  /**< Disable all interr
1174:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_INTR_EOS_MASK            = SAR_INTR_MASK_EOS_MASK_Msk,           /**< Enable end of scan
1175:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_INTR_OVERFLOW_MASK       = SAR_INTR_MASK_OVERFLOW_MASK_Msk,      /**< Enable overflow in
1176:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_INTR_FW_COLLISION_MASK   = SAR_INTR_MASK_FW_COLLISION_MASK_Msk,  /**< Enable firmware co
1177:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_intr_mask_t;
1178:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1179:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /* \} */
1180:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1181:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_mux_switch_register_enums
1182:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of enumerations aids in configuring the \ref group_sar_init_struct_muxSwitch and \ref gr
1183:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1184:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1185:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1186:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Firmware control for the SARMUX switches to connect analog signals to the SAR ADC
1187:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1188:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * To close multiple switches, "OR" the enum values together.
1189:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1190:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * See the \ref group_sar_sarmux section for more guidance.
1191:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1192:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1193:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1194:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     /* SARMUX pins to Vplus */
1195:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P0_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P0_VPLUS_Msk,    /**< Switch between Pi
1196:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P1_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P1_VPLUS_Msk,    /**< Switch between Pi
1197:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P2_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P2_VPLUS_Msk,    /**< Switch between Pi
1198:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P3_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P3_VPLUS_Msk,    /**< Switch between Pi
1199:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P4_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P4_VPLUS_Msk,    /**< Switch between Pi
1200:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P5_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P5_VPLUS_Msk,    /**< Switch between Pi
1201:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P6_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P6_VPLUS_Msk,    /**< Switch between Pi
1202:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P7_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P7_VPLUS_Msk,    /**< Switch between Pi
1203:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1204:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     /* SARMUX pins to Vminus */
1205:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P0_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P0_VMINUS_Msk,   /**< Switch between Pi
1206:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P1_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P1_VMINUS_Msk,   /**< Switch between Pi
1207:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P2_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P2_VMINUS_Msk,   /**< Switch between Pi
1208:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P3_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P3_VMINUS_Msk,   /**< Switch between Pi
1209:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P4_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P4_VMINUS_Msk,   /**< Switch between Pi
1210:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P5_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P5_VMINUS_Msk,   /**< Switch between Pi
1211:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P6_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P6_VMINUS_Msk,   /**< Switch between Pi
1212:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P7_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P7_VMINUS_Msk,   /**< Switch between Pi
1213:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1214:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     /* Vssa to Vminus and temperature sensor to Vplus */
1215:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_VSSA_VMINUS      = SAR_MUX_SWITCH0_MUX_FW_VSSA_VMINUS_Msk,    /**< Switch between
1216:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_TEMP_VPLUS       = SAR_MUX_SWITCH0_MUX_FW_TEMP_VPLUS_Msk,     /**< Switch between
1217:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1218:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     /* Amuxbus A and B to Vplus and Vminus */
1219:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_AMUXBUSA_VPLUS   = SAR_MUX_SWITCH0_MUX_FW_AMUXBUSA_VPLUS_Msk,     /**< Switch bet
1220:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_AMUXBUSB_VPLUS   = SAR_MUX_SWITCH0_MUX_FW_AMUXBUSB_VPLUS_Msk,     /**< Switch bet
1221:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_AMUXBUSA_VMINUS  = SAR_MUX_SWITCH0_MUX_FW_AMUXBUSA_VMINUS_Msk,    /**< Switch bet
1222:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_AMUXBUSB_VMINUS  = SAR_MUX_SWITCH0_MUX_FW_AMUXBUSB_VMINUS_Msk,    /**< Switch bet
1223:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1224:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     /* Sarbus 0 and 1 to Vplus and Vminus */
1225:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_SARBUS0_VPLUS    = SAR_MUX_SWITCH0_MUX_FW_SARBUS0_VPLUS_Msk,      /**< Switch bet
1226:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_SARBUS1_VPLUS    = SAR_MUX_SWITCH0_MUX_FW_SARBUS1_VPLUS_Msk,      /**< Switch bet
1227:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_SARBUS0_VMINUS   = SAR_MUX_SWITCH0_MUX_FW_SARBUS0_VMINUS_Msk,     /**< Switch bet
1228:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_SARBUS1_VMINUS   = SAR_MUX_SWITCH0_MUX_FW_SARBUS1_VMINUS_Msk,     /**< Switch bet
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 71


1229:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1230:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     /* SARMUX pins to Core IO */
1231:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P4_COREIO0       = SAR_MUX_SWITCH0_MUX_FW_P4_COREIO0_Msk,      /**< Switch betwee
1232:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P5_COREIO1       = SAR_MUX_SWITCH0_MUX_FW_P5_COREIO1_Msk,      /**< Switch betwee
1233:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P6_COREIO2       = SAR_MUX_SWITCH0_MUX_FW_P6_COREIO2_Msk,      /**< Switch betwee
1234:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P7_COREIO3       = SAR_MUX_SWITCH0_MUX_FW_P7_COREIO3_Msk,      /**< Switch betwee
1235:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_mux_switch_fw_ctrl_t;
1236:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1237:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Mask definitions of SARMUX switches that can be controlled by the SARSEQ.
1238:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1239:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * To enable sequencer control of multiple switches, "OR" the enum values together.
1240:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1241:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * See the \ref group_sar_sarmux section for more guidance.
1242:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1243:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1244:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1245:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P0           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P0_Msk,        /**< Enable
1246:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P1           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P1_Msk,        /**< Enable
1247:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P2           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P2_Msk,        /**< Enable
1248:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P3           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P3_Msk,        /**< Enable
1249:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P4           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P4_Msk,        /**< Enable
1250:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P5           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P5_Msk,        /**< Enable
1251:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P6           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P6_Msk,        /**< Enable
1252:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P7           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P7_Msk,        /**< Enable
1253:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_VSSA         = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_VSSA_Msk,      /**< Enable
1254:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_TEMP         = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_TEMP_Msk,      /**< Enable
1255:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_AMUXBUSA     = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_AMUXBUSA_Msk,  /**< Enable
1256:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_AMUXBUSB     = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_AMUXBUSB_Msk,  /**< Enable
1257:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_SARBUS0      = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_SARBUS0_Msk,   /**< Enable
1258:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_SARBUS1      = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_SARBUS1_Msk,   /**< Enable
1259:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_mux_switch_sq_ctrl_t;
1260:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1261:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /* \} */
1262:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1263:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} group_sar_enums */
1264:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1265:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_data_structures
1266:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1267:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1268:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1269:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /***************************************
1270:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       Configuration Structures
1271:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ***************************************/
1272:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1273:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** This structure is used to initialize the SAR ADC subsystem.
1274:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1275:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SAR ADC subsystem is highly configurable with many options.
1276:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * When calling \ref Cy_SAR_Init, provide a pointer to the structure containing this configuration d
1277:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * A set of enumerations is provided in this
1278:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * driver to help with configuring this structure.
1279:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1280:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * See the \ref group_sar_initialization section for guidance.
1281:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** **/
1282:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef struct
1283:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1284:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t ctrl;                                      /**< Control register settings (applies to 
1285:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t sampleCtrl;                                /**< Sample control register settings (appl
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 72


1286:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t sampleTime01;                              /**< Sample time in ADC clocks for Sample T
1287:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t sampleTime23;                              /**< Sample time in ADC clocks for Sample T
1288:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t rangeThres;                                /**< Range detect threshold register for al
1289:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     cy_en_sar_range_detect_condition_t rangeCond;       /**< Range detect condition (below, inside,
1290:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t chanEn;                                    /**< Enable bits for the channels */
1291:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t chanConfig[CY_SAR_MAX_NUM_CHANNELS];       /**< Channel configuration */
1292:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t intrMask;                                  /**< Interrupt enable mask */
1293:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t satIntrMask;                               /**< Saturation detection interrupt enable 
1294:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t rangeIntrMask;                             /**< Range detection interrupt enable mask 
1295:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t muxSwitch;                                 /**< SARMUX firmware switches to connect an
1296:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t muxSwitchSqCtrl;                           /**< Enable SARSEQ control of specific SARM
1297:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     bool configRouting;                                 /**< Configure or ignore routing related re
1298:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t vrefMvValue;                               /**< Reference voltage in millivolts used i
1299:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** } cy_stc_sar_config_t;
1300:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1301:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** This structure is used by the driver to backup the state of the SAR
1302:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * before entering sleep so that it can be re-enabled after waking up */
1303:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef struct
1304:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1305:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t hwEnabled;         /**< SAR enabled state */
1306:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t continuous;        /**< State of the continuous bit */
1307:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** } cy_stc_sar_state_backup_t;
1308:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1309:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} group_sar_data_structures */
1310:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1311:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions
1312:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1313:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1314:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1315:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** This macro is for backward compatibility macro for driver v1.10 and before, 
1316:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****  * the preferred API is \ref Cy_SAR_DeepSleep */
1317:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define Cy_SAR_Sleep    Cy_SAR_DeepSleep
1318:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1319:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /***************************************
1320:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *        Function Prototypes
1321:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ***************************************/
1322:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1323:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_basic
1324:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of functions is for initialization and basic usage
1325:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1326:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1327:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** cy_en_sar_status_t Cy_SAR_Init(SAR_Type *base, const cy_stc_sar_config_t *config);
1328:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** cy_en_sar_status_t Cy_SAR_DeInit(SAR_Type *base, bool deInitRouting);
1329:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_Enable(SAR_Type *base);
1330:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_Disable(SAR_Type *base);
1331:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_StartConvert(SAR_Type *base, cy_en_sar_start_convert_sel_t startSelect);
1332:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_StopConvert(SAR_Type *base);
1333:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** cy_en_sar_status_t Cy_SAR_IsEndConversion(SAR_Type *base, cy_en_sar_return_mode_t retMode);
1334:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** int16_t Cy_SAR_GetResult16(const SAR_Type *base, uint32_t chan);
1335:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** int32_t Cy_SAR_GetResult32(const SAR_Type *base, uint32_t chan);
1336:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetChanResultUpdated(const SAR_Type *base);
1337:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1338:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1339:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_power
1340:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of functions is for Deep Sleep entry and exit
1341:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1342:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 73


1343:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** cy_en_syspm_status_t Cy_SAR_DeepSleepCallback(cy_stc_syspm_callback_params_t *callbackParams, cy_en
1344:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_DeepSleep(SAR_Type *base);
1345:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_Wakeup(SAR_Type *base);
1346:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1347:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1348:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_config
1349:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of functions allows changes to the SAR configuration
1350:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * after initialization.
1351:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1352:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1353:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_SetConvertMode(SAR_Type *base, cy_en_sar_sample_ctrl_trigger_mode_t mode);
1354:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetChanMask(SAR_Type *base, uint32_t enableMask);
1355:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_SetLowLimit(SAR_Type *base, uint32_t lowLimit);
1356:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_SetHighLimit(SAR_Type *base, uint32_t highLimit);
1357:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetRangeCond(SAR_Type *base, cy_en_sar_range_detect_condition_t cond);
1358:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1359:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1360:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_countsto
1361:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of functions performs counts to *volts conversions.
1362:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1363:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1364:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** int16_t Cy_SAR_RawCounts2Counts(const SAR_Type *base, uint32_t chan, int16_t adcCounts);
1365:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** float32_t Cy_SAR_CountsTo_Volts(const SAR_Type *base, uint32_t chan, int16_t adcCounts);
1366:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** int16_t Cy_SAR_CountsTo_mVolts(const SAR_Type *base, uint32_t chan, int16_t adcCounts);
1367:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** int32_t Cy_SAR_CountsTo_uVolts(const SAR_Type *base, uint32_t chan, int16_t adcCounts);
1368:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** cy_en_sar_status_t Cy_SAR_SetOffset(uint32_t chan, int16_t offset);
1369:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** cy_en_sar_status_t Cy_SAR_SetGain(uint32_t chan, int32_t adcGain);
1370:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1371:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1372:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_switches
1373:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of functions is for controlling/querying the SARMUX switches
1374:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1375:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1376:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_SetAnalogSwitch(SAR_Type *base, cy_en_sar_switch_register_sel_t switchSelect, uint32_t 
1377:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** uint32_t Cy_SAR_GetAnalogSwitch(const SAR_Type *base, cy_en_sar_switch_register_sel_t switchSelect)
1378:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetVssaVminusSwitch(SAR_Type *base, cy_en_sar_switch_state_t state);
1379:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_SetSwitchSarSeqCtrl(SAR_Type *base, uint32_t switchMask, cy_en_sar_switch_sar_seq_ctrl_
1380:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetVssaSarSeqCtrl(SAR_Type *base, cy_en_sar_switch_sar_seq_ctrl_t ctrl)
1381:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1382:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1383:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_interrupt
1384:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of functions are related to SAR interrupts.
1385:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1386:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1387:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetInterruptStatus(const SAR_Type *base);
1388:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_ClearInterrupt(SAR_Type *base, uint32_t intrMask);
1389:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetInterrupt(SAR_Type *base, uint32_t intrMask);
1390:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetInterruptMask(SAR_Type *base, uint32_t intrMask);
1391:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetInterruptMask(const SAR_Type *base);
1392:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetInterruptStatusMasked(const SAR_Type *base);
1393:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1394:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetRangeInterruptStatus(const SAR_Type *base);
1395:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_ClearRangeInterrupt(SAR_Type *base, uint32_t chanMask);
1396:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetRangeInterrupt(SAR_Type *base, uint32_t chanMask);
1397:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetRangeInterruptMask(SAR_Type *base, uint32_t chanMask);
1398:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetRangeInterruptMask(const SAR_Type *base);
1399:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetRangeInterruptStatusMasked(const SAR_Type *base);
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 74


1400:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1401:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetSatInterruptStatus(const SAR_Type *base);
1402:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_ClearSatInterrupt(SAR_Type *base, uint32_t chanMask);
1403:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetSatInterrupt(SAR_Type *base, uint32_t chanMask);
1404:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetSatInterruptMask(SAR_Type *base, uint32_t chanMask);
1405:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetSatInterruptMask(const SAR_Type *base);
1406:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetSatInterruptStatusMasked(const SAR_Type *base);
1407:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1408:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetInterruptCause(const SAR_Type *base);
1409:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1410:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1411:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1412:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_helper
1413:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of functions is for useful configuration query
1414:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1415:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1416:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** bool Cy_SAR_IsChannelSigned(const SAR_Type *base, uint32_t chan);
1417:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** bool Cy_SAR_IsChannelSingleEnded(const SAR_Type *base, uint32_t chan);
1418:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE bool Cy_SAR_IsChannelDifferential(const SAR_Type *base, uint32_t chan);
1419:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1420:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1421:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_basic
1422:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1423:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1424:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1425:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1426:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1427:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_Disable
1428:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1429:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1430:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Turn off the hardware block.
1431:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1432:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1433:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1434:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1435:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return None
1436:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1437:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
1438:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_Disable(SAR_Type *base)
1439:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 159              		.loc 3 1439 0
 160              		.cfi_startproc
 161              		@ args = 0, pretend = 0, frame = 8
 162              		@ frame_needed = 1, uses_anonymous_args = 0
 163              		@ link register save eliminated.
 164 0000 80B4     		push	{r7}
 165              		.cfi_def_cfa_offset 4
 166              		.cfi_offset 7, -4
 167 0002 83B0     		sub	sp, sp, #12
 168              		.cfi_def_cfa_offset 16
 169 0004 00AF     		add	r7, sp, #0
 170              		.cfi_def_cfa_register 7
 171 0006 7860     		str	r0, [r7, #4]
1440:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     SAR_CTRL(base) &= ~SAR_CTRL_ENABLED_Msk;
 172              		.loc 3 1440 0
 173 0008 7B68     		ldr	r3, [r7, #4]
 174 000a 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 75


 175 000c 23F00042 		bic	r2, r3, #-2147483648
 176 0010 7B68     		ldr	r3, [r7, #4]
 177 0012 1A60     		str	r2, [r3]
1441:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
 178              		.loc 3 1441 0
 179 0014 00BF     		nop
 180 0016 0C37     		adds	r7, r7, #12
 181              		.cfi_def_cfa_offset 4
 182 0018 BD46     		mov	sp, r7
 183              		.cfi_def_cfa_register 13
 184              		@ sp needed
 185 001a 5DF8047B 		ldr	r7, [sp], #4
 186              		.cfi_restore 7
 187              		.cfi_def_cfa_offset 0
 188 001e 7047     		bx	lr
 189              		.cfi_endproc
 190              	.LFE166:
 191              		.size	Cy_SAR_Disable, .-Cy_SAR_Disable
 192              		.section	.rodata
 193              		.align	2
 194              	.LC0:
 195 0000 47656E65 		.ascii	"Generated_Source\\PSoC6\\pdl\\drivers/peripheral/sa"
 195      72617465 
 195      645F536F 
 195      75726365 
 195      5C50536F 
 196 0030 722F6379 		.ascii	"r/cy_sar.h\000"
 196      5F736172 
 196      2E6800
 197              		.section	.text.Cy_SAR_SetChanMask,"ax",%progbits
 198              		.align	2
 199              		.thumb
 200              		.thumb_func
 201              		.type	Cy_SAR_SetChanMask, %function
 202              	Cy_SAR_SetChanMask:
 203              	.LFB168:
1442:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1443:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1444:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1445:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_GetChanResultUpdated
1446:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1447:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1448:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Return whether the RESULT register has been updated or not.
1449:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * If the bit is high, the corresponding channel RESULT register was updated,
1450:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * i.e. was sampled during the previous scan and, in case of Interleaved averaging,
1451:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * reached the averaging count.
1452:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * If the bit is low, the corresponding channel is not enabled or the averaging count
1453:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * is not yet reached for Interleaved averaging.
1454:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1455:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1456:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1457:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1458:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return
1459:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Each bit of the result corresponds to the channel.
1460:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Bit 0 is for channel 0, etc.
1461:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1462:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \funcusage
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 76


1463:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1464:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_GET_CHAN_RESULT_UPDATED
1465:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1466:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
1467:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetChanResultUpdated(const SAR_Type *base)
1468:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1469:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     return SAR_CHAN_RESULT_UPDATED(base);
1470:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
1471:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1472:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1473:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_config
1474:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1475:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1476:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1477:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1478:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1479:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_SetChanMask
1480:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1481:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1482:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Set the enable/disable mask for the channels.
1483:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1484:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1485:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1486:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1487:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param enableMask
1488:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Channel enable/disable mask. Each bit corresponds to a channel.
1489:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - 0: the corresponding channel is disabled.
1490:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - 1: the corresponding channel is enabled; it will be included in the next scan.
1491:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1492:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return None
1493:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1494:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \funcusage
1495:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1496:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SET_CHAN_MASK
1497:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1498:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
1499:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetChanMask(SAR_Type *base, uint32_t enableMask)
1500:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 204              		.loc 3 1500 0
 205              		.cfi_startproc
 206              		@ args = 0, pretend = 0, frame = 8
 207              		@ frame_needed = 1, uses_anonymous_args = 0
 208 0000 80B5     		push	{r7, lr}
 209              		.cfi_def_cfa_offset 8
 210              		.cfi_offset 7, -8
 211              		.cfi_offset 14, -4
 212 0002 82B0     		sub	sp, sp, #8
 213              		.cfi_def_cfa_offset 16
 214 0004 00AF     		add	r7, sp, #0
 215              		.cfi_def_cfa_register 7
 216 0006 7860     		str	r0, [r7, #4]
 217 0008 3960     		str	r1, [r7]
1501:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_ASSERT_L2(CY_SAR_CHANMASK(enableMask));
 218              		.loc 3 1501 0
 219 000a 3B68     		ldr	r3, [r7]
 220 000c B3F5803F 		cmp	r3, #65536
 221 0010 04D3     		bcc	.L13
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 77


 222              		.loc 3 1501 0 is_stmt 0 discriminator 1
 223 0012 40F2DD51 		movw	r1, #1501
 224 0016 0548     		ldr	r0, .L14
 225 0018 FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 226              	.L13:
1502:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1503:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     SAR_CHAN_EN(base) = enableMask;
 227              		.loc 3 1503 0 is_stmt 1
 228 001c 7B68     		ldr	r3, [r7, #4]
 229 001e 3A68     		ldr	r2, [r7]
 230 0020 1A62     		str	r2, [r3, #32]
1504:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
 231              		.loc 3 1504 0
 232 0022 00BF     		nop
 233 0024 0837     		adds	r7, r7, #8
 234              		.cfi_def_cfa_offset 8
 235 0026 BD46     		mov	sp, r7
 236              		.cfi_def_cfa_register 13
 237              		@ sp needed
 238 0028 80BD     		pop	{r7, pc}
 239              	.L15:
 240 002a 00BF     		.align	2
 241              	.L14:
 242 002c 00000000 		.word	.LC0
 243              		.cfi_endproc
 244              	.LFE168:
 245              		.size	Cy_SAR_SetChanMask, .-Cy_SAR_SetChanMask
 246              		.section	.text.Cy_SAR_SetInterruptMask,"ax",%progbits
 247              		.align	2
 248              		.thumb
 249              		.thumb_func
 250              		.type	Cy_SAR_SetInterruptMask, %function
 251              	Cy_SAR_SetInterruptMask:
 252              	.LFB173:
1505:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1506:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1507:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1508:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_SetRangeCond
1509:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1510:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1511:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Set the condition in which range detection interrupts are triggered.
1512:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1513:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1514:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1515:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1516:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param cond
1517:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * A value of the enum \ref cy_en_sar_range_detect_condition_t.
1518:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1519:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return None
1520:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1521:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \funcusage
1522:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1523:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SET_RANGE_COND
1524:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1525:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
1526:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetRangeCond(SAR_Type *base, cy_en_sar_range_detect_condition_t cond)
1527:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 78


1528:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_ASSERT_L3(CY_SAR_RANGECOND(cond));
1529:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1530:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     SAR_RANGE_COND(base) = (uint32_t)cond << SAR_RANGE_COND_RANGE_COND_Pos;
1531:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
1532:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1533:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1534:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1535:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_interrupt
1536:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1537:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1538:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1539:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_GetInterruptStatus
1540:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1541:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1542:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Return the interrupt register status.
1543:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1544:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1545:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1546:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1547:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return Interrupt status
1548:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1549:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \funcusage
1550:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1551:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_ISR
1552:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1553:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
1554:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetInterruptStatus(const SAR_Type *base)
1555:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1556:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     return SAR_INTR(base);
1557:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
1558:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1559:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1560:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1561:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_ClearInterrupt
1562:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1563:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1564:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Clear the interrupt.
1565:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The interrupt must be cleared with this function so that the hardware
1566:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * can set subsequent interrupts and those interrupts can be forwarded
1567:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * to the interrupt controller, if enabled.
1568:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1569:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1570:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1571:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1572:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param intrMask
1573:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The mask of interrupts to clear. Typically this will be the value returned
1574:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * from \ref Cy_SAR_GetInterruptStatus.
1575:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Alternately, select one or more values from \ref cy_en_sar_intr_mask_t and "OR" them together.
1576:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - \ref CY_SAR_INTR_EOS_MASK
1577:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - \ref CY_SAR_INTR_OVERFLOW_MASK
1578:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - \ref CY_SAR_INTR_FW_COLLISION_MASK
1579:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1580:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return None
1581:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1582:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
1583:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_ClearInterrupt(SAR_Type *base, uint32_t intrMask)
1584:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 79


1585:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_ASSERT_L2(CY_SAR_INTRMASK(intrMask));
1586:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1587:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     SAR_INTR(base) = intrMask;
1588:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1589:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     /* Dummy read for buffered writes. */
1590:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     (void) SAR_INTR(base);
1591:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
1592:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1593:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1594:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1595:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_SetInterrupt
1596:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1597:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1598:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Trigger an interrupt with software.
1599:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1600:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1601:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1602:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1603:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param intrMask
1604:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The mask of interrupts to set.
1605:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Select one or more values from \ref cy_en_sar_intr_mask_t and "OR" them together.
1606:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - \ref CY_SAR_INTR_EOS_MASK
1607:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - \ref CY_SAR_INTR_OVERFLOW_MASK
1608:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - \ref CY_SAR_INTR_FW_COLLISION_MASK
1609:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1610:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return None
1611:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1612:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
1613:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetInterrupt(SAR_Type *base, uint32_t intrMask)
1614:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1615:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_ASSERT_L2(CY_SAR_INTRMASK(intrMask));
1616:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1617:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     SAR_INTR_SET(base) = intrMask;
1618:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
1619:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1620:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1621:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1622:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_SetInterruptMask
1623:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1624:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1625:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Enable which interrupts can trigger the CPU interrupt controller.
1626:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1627:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1628:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1629:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1630:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param intrMask
1631:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The mask of interrupts. Select one or more values from \ref cy_en_sar_intr_mask_t
1632:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * and "OR" them together.
1633:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - \ref CY_SAR_INTR_MASK_NONE : Disable EOS, overflow, and firmware collision interrupts.
1634:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - \ref CY_SAR_INTR_EOS_MASK
1635:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - \ref CY_SAR_INTR_OVERFLOW_MASK
1636:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - \ref CY_SAR_INTR_FW_COLLISION_MASK
1637:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1638:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return None
1639:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1640:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \funcusage
1641:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 80


1642:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SET_INTERRUPT_MASK
1643:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1644:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
1645:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetInterruptMask(SAR_Type *base, uint32_t intrMask)
1646:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 253              		.loc 3 1646 0
 254              		.cfi_startproc
 255              		@ args = 0, pretend = 0, frame = 8
 256              		@ frame_needed = 1, uses_anonymous_args = 0
 257 0000 80B5     		push	{r7, lr}
 258              		.cfi_def_cfa_offset 8
 259              		.cfi_offset 7, -8
 260              		.cfi_offset 14, -4
 261 0002 82B0     		sub	sp, sp, #8
 262              		.cfi_def_cfa_offset 16
 263 0004 00AF     		add	r7, sp, #0
 264              		.cfi_def_cfa_register 7
 265 0006 7860     		str	r0, [r7, #4]
 266 0008 3960     		str	r1, [r7]
1647:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_ASSERT_L2(CY_SAR_INTRMASK(intrMask));
 267              		.loc 3 1647 0
 268 000a 3B68     		ldr	r3, [r7]
 269 000c 072B     		cmp	r3, #7
 270 000e 04D9     		bls	.L17
 271              		.loc 3 1647 0 is_stmt 0 discriminator 1
 272 0010 40F26F61 		movw	r1, #1647
 273 0014 0548     		ldr	r0, .L18
 274 0016 FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 275              	.L17:
1648:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1649:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     SAR_INTR_MASK(base) = intrMask;
 276              		.loc 3 1649 0 is_stmt 1
 277 001a 7B68     		ldr	r3, [r7, #4]
 278 001c 3A68     		ldr	r2, [r7]
 279 001e C3F81822 		str	r2, [r3, #536]
1650:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
 280              		.loc 3 1650 0
 281 0022 00BF     		nop
 282 0024 0837     		adds	r7, r7, #8
 283              		.cfi_def_cfa_offset 8
 284 0026 BD46     		mov	sp, r7
 285              		.cfi_def_cfa_register 13
 286              		@ sp needed
 287 0028 80BD     		pop	{r7, pc}
 288              	.L19:
 289 002a 00BF     		.align	2
 290              	.L18:
 291 002c 00000000 		.word	.LC0
 292              		.cfi_endproc
 293              	.LFE173:
 294              		.size	Cy_SAR_SetInterruptMask, .-Cy_SAR_SetInterruptMask
 295              		.section	.text.Cy_SAR_SetVssaVminusSwitch,"ax",%progbits
 296              		.align	2
 297              		.thumb
 298              		.thumb_func
 299              		.type	Cy_SAR_SetVssaVminusSwitch, %function
 300              	Cy_SAR_SetVssaVminusSwitch:
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 81


 301              	.LFB190:
1651:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1652:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1653:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1654:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_GetInterruptMask
1655:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1656:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1657:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Return which interrupts can trigger the CPU interrupt controller
1658:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * as configured by \ref Cy_SAR_SetInterruptMask.
1659:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1660:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1661:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1662:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1663:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return
1664:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Interrupt mask. Compare this value with masks in \ref cy_en_sar_intr_mask_t.
1665:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1666:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \funcusage
1667:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1668:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_GET_INTERRUPT_MASK
1669:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1670:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
1671:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetInterruptMask(const SAR_Type *base)
1672:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1673:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     return SAR_INTR_MASK(base);
1674:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
1675:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1676:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1677:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1678:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_GetInterruptStatusMasked
1679:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1680:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1681:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Return the bitwise AND between the interrupt request and mask registers.
1682:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * See \ref Cy_SAR_GetInterruptStatus and \ref Cy_SAR_GetInterruptMask.
1683:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1684:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1685:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1686:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1687:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return
1688:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Bitwise AND of the interrupt request and mask registers
1689:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1690:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
1691:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetInterruptStatusMasked(const SAR_Type *base)
1692:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1693:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     return SAR_INTR_MASKED(base);
1694:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
1695:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1696:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1697:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1698:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_GetRangeInterruptStatus
1699:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1700:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1701:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Return the range interrupt register status.
1702:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * If the status bit is low for a channel, the channel may not be enabled
1703:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * (\ref Cy_SAR_SetChanMask), range detection is not enabled for the
1704:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * channel (\ref Cy_SAR_SetRangeInterruptMask), or range detection was not
1705:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * triggered for the channel.
1706:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 82


1707:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1708:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1709:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1710:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return
1711:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The range interrupt status for all channels. Bit 0 is for channel 0, etc.
1712:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1713:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \funcusage
1714:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1715:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_GET_RANGE_INTERRUPT_STATUS
1716:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1717:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
1718:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetRangeInterruptStatus(const SAR_Type *base)
1719:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1720:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     return SAR_RANGE_INTR(base);
1721:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
1722:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1723:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1724:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1725:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_ClearRangeInterrupt
1726:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1727:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1728:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Clear the range interrupt for the specified channel mask.
1729:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The interrupt must be cleared with this function so that
1730:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * the hardware can set subset interrupts and those interrupts can
1731:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * be forwarded to the interrupt controller, if enabled.
1732:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1733:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1734:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1735:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1736:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param chanMask
1737:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The channel mask. Bit 0 is for channel 0, etc.
1738:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Typically, this is the value returned from \ref Cy_SAR_GetRangeInterruptStatus.
1739:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1740:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return None
1741:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1742:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
1743:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_ClearRangeInterrupt(SAR_Type *base, uint32_t chanMask)
1744:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1745:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_ASSERT_L2(CY_SAR_CHANMASK(chanMask));
1746:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1747:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     SAR_RANGE_INTR(base) = chanMask;
1748:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1749:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     /* Dummy read for buffered writes. */
1750:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     (void) SAR_RANGE_INTR(base);
1751:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
1752:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1753:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1754:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1755:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_SetRangeInterrupt
1756:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1757:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1758:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Trigger a range interrupt with software for the specific channel mask.
1759:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1760:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1761:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1762:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1763:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param chanMask
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 83


1764:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The channel mask. Bit 0 is for channel 0, etc.
1765:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1766:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return None
1767:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1768:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
1769:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetRangeInterrupt(SAR_Type *base, uint32_t chanMask)
1770:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1771:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_ASSERT_L2(CY_SAR_CHANMASK(chanMask));
1772:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1773:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     SAR_RANGE_INTR_SET(base) = chanMask;
1774:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
1775:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1776:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1777:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1778:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_SetRangeInterruptMask
1779:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1780:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1781:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Enable which channels can trigger a range interrupt.
1782:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1783:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1784:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1785:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1786:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param chanMask
1787:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The channel mask. Bit 0 is for channel 0, etc.
1788:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1789:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return None
1790:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1791:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \funcusage
1792:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1793:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SET_RANGE_INTERRUPT_MASK
1794:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1795:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
1796:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetRangeInterruptMask(SAR_Type *base, uint32_t chanMask)
1797:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1798:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_ASSERT_L2(CY_SAR_CHANMASK(chanMask));
1799:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1800:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     SAR_RANGE_INTR_MASK(base) = chanMask;
1801:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
1802:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1803:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1804:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1805:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_GetRangeInterruptMask
1806:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1807:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1808:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Return which interrupts can trigger a range interrupt as configured by
1809:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref Cy_SAR_SetRangeInterruptMask.
1810:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1811:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1812:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1813:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1814:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return
1815:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The range interrupt mask
1816:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1817:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
1818:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetRangeInterruptMask(const SAR_Type *base)
1819:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1820:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     return SAR_RANGE_INTR_MASK(base);
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 84


1821:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
1822:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1823:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1824:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1825:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_GetRangeInterruptStatusMasked
1826:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1827:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1828:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Return the bitwise AND between the range interrupt request and mask registers.
1829:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * See \ref Cy_SAR_GetRangeInterruptStatus and \ref Cy_SAR_GetRangeInterruptMask.
1830:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1831:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1832:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1833:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1834:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return
1835:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Bitwise AND between of range interrupt request and mask
1836:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1837:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
1838:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetRangeInterruptStatusMasked(const SAR_Type *base)
1839:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1840:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     return SAR_RANGE_INTR_MASKED(base);
1841:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
1842:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1843:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1844:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1845:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_GetSatInterruptStatus
1846:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1847:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1848:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Return the saturate interrupt register status.
1849:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * If the status bit is low for a channel, the channel may not be enabled
1850:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * (\ref Cy_SAR_SetChanMask), saturation detection is not enabled for the
1851:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * channel (\ref Cy_SAR_SetSatInterruptMask), or saturation detection was not
1852:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * triggered for the channel.
1853:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1854:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1855:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1856:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1857:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return
1858:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The saturate interrupt status for all channels. Bit 0 is for channel 0, etc.
1859:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1860:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \funcusage
1861:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1862:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_GET_SAT_INTERRUPT_STATUS
1863:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1864:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
1865:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetSatInterruptStatus(const SAR_Type *base)
1866:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1867:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     return SAR_SATURATE_INTR(base);
1868:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
1869:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1870:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1871:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1872:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_ClearSatInterrupt
1873:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1874:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1875:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Clear the saturate interrupt for the specified channel mask.
1876:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The interrupt must be cleared with this function so that the hardware
1877:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * can set subsequent interrupts and those interrupts can be forwarded
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 85


1878:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * to the interrupt controller, if enabled.
1879:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1880:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1881:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1882:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1883:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param chanMask
1884:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The channel mask. Bit 0 is for channel 0, etc.
1885:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Typically, this is the value returned from \ref Cy_SAR_GetSatInterruptStatus.
1886:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1887:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return None
1888:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1889:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
1890:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_ClearSatInterrupt(SAR_Type *base, uint32_t chanMask)
1891:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1892:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_ASSERT_L2(CY_SAR_CHANMASK(chanMask));
1893:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1894:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     SAR_SATURATE_INTR(base) = chanMask;
1895:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1896:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     /* Dummy read for buffered writes. */
1897:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     (void) SAR_SATURATE_INTR(base);
1898:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
1899:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1900:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1901:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1902:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_SetSatInterrupt
1903:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1904:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1905:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Trigger a saturate interrupt with software for the specific channel mask.
1906:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1907:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1908:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1909:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1910:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param chanMask
1911:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The channel mask. Bit 0 is for channel 0, etc.
1912:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1913:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return None
1914:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1915:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
1916:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetSatInterrupt(SAR_Type *base, uint32_t chanMask)
1917:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1918:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_ASSERT_L2(CY_SAR_CHANMASK(chanMask));
1919:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1920:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     SAR_SATURATE_INTR_SET(base) = chanMask;
1921:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
1922:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1923:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1924:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1925:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_SetSatInterruptMask
1926:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1927:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1928:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Enable which channels can trigger a saturate interrupt.
1929:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1930:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1931:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1932:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1933:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param chanMask
1934:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The channel mask. Bit 0 is for channel 0, etc.
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 86


1935:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1936:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return None
1937:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1938:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \funcusage
1939:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1940:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_GET_SAT_INTERRUPT_MASK
1941:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1942:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
1943:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetSatInterruptMask(SAR_Type *base, uint32_t chanMask)
1944:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1945:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_ASSERT_L2(CY_SAR_CHANMASK(chanMask));
1946:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1947:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     SAR_SATURATE_INTR_MASK(base) = chanMask;
1948:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
1949:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1950:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1951:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1952:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_GetSatInterruptMask
1953:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1954:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1955:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Return which interrupts can trigger a saturate interrupt as configured
1956:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * by \ref Cy_SAR_SetSatInterruptMask.
1957:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1958:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1959:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1960:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1961:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return
1962:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The saturate interrupt mask. Bit 0 is for channel 0, etc.
1963:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1964:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
1965:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetSatInterruptMask(const SAR_Type *base)
1966:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1967:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     return SAR_SATURATE_INTR_MASK(base);
1968:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
1969:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1970:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1971:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_GetSatInterruptStatusMasked
1972:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1973:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1974:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Return the bitwise AND between the saturate interrupt request and mask registers.
1975:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * See \ref Cy_SAR_GetSatInterruptStatus and \ref Cy_SAR_GetSatInterruptMask.
1976:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1977:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1978:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1979:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1980:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return
1981:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Bitwise AND of the saturate interrupt request and mask
1982:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1983:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
1984:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetSatInterruptStatusMasked(const SAR_Type *base)
1985:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1986:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     return SAR_SATURATE_INTR_MASKED(base);
1987:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
1988:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1989:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1990:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1991:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_GetInterruptCause
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 87


1992:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1993:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1994:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Return the cause of the interrupt.
1995:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The interrupt routine can be called due to one of the following events:
1996:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - End of scan (EOS)
1997:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Overflow
1998:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Firmware collision
1999:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Saturation detected on one or more channels
2000:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Range detected on one or more channels
2001:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
2002:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
2003:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
2004:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
2005:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return
2006:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Mask of what caused the interrupt. Compare this value with one of these masks:
2007:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - SAR_INTR_CAUSE_EOS_MASKED_MIR_Msk : EOS caused the interrupt
2008:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - SAR_INTR_CAUSE_OVERFLOW_MASKED_MIR_Msk : Overflow caused the interrupt
2009:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - SAR_INTR_CAUSE_FW_COLLISION_MASKED_MIR_Msk : Firmware collision cause the interrupt
2010:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - SAR_INTR_CAUSE_SATURATE_MASKED_RED_Msk : Saturation detection on one or more channels caused 
2011:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - SAR_INTR_CAUSE_RANGE_MASKED_RED_Msk : Range detection on one or more channels caused the inte
2012:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
2013:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
2014:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetInterruptCause(const SAR_Type *base)
2015:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
2016:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     return SAR_INTR_CAUSE(base);
2017:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
2018:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
2019:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
2020:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_helper
2021:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
2022:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
2023:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
2024:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
2025:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
2026:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_IsChannelDifferential
2027:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
2028:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
2029:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Return true of channel is differential, else false.
2030:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
2031:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
2032:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
2033:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
2034:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param chan
2035:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The channel to check, starting at 0.
2036:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
2037:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return
2038:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * A false is return if chan is invalid.
2039:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
2040:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \funcusage
2041:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
2042:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_IS_CHANNEL_DIFF
2043:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
2044:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
2045:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE bool Cy_SAR_IsChannelDifferential(const SAR_Type *base, uint32_t chan)
2046:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
2047:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     return !Cy_SAR_IsChannelSingleEnded(base, chan);
2048:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 88


2049:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
2050:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
2051:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_switches
2052:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
2053:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
2054:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
2055:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_SetVssaVminusSwitch
2056:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
2057:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
2058:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Open or close the switch between VSSA and Vminus of the SARADC through firmware.
2059:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This function calls \ref Cy_SAR_SetAnalogSwitch with switchSelect set to
2060:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref CY_SAR_MUX_SWITCH0 and switchMask set to SAR_MUX_SWITCH0_MUX_FW_VSSA_VMINUS_Msk.
2061:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
2062:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
2063:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
2064:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
2065:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param state
2066:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Open or close the switch. Select a value from \ref cy_en_sar_switch_state_t.
2067:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
2068:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return None
2069:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
2070:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \funcusage
2071:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
2072:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_VSSA_VMINUS_SWITCH
2073:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
2074:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
2075:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetVssaVminusSwitch(SAR_Type *base, cy_en_sar_switch_state_t state)
2076:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 302              		.loc 3 2076 0
 303              		.cfi_startproc
 304              		@ args = 0, pretend = 0, frame = 8
 305              		@ frame_needed = 1, uses_anonymous_args = 0
 306 0000 80B5     		push	{r7, lr}
 307              		.cfi_def_cfa_offset 8
 308              		.cfi_offset 7, -8
 309              		.cfi_offset 14, -4
 310 0002 82B0     		sub	sp, sp, #8
 311              		.cfi_def_cfa_offset 16
 312 0004 00AF     		add	r7, sp, #0
 313              		.cfi_def_cfa_register 7
 314 0006 7860     		str	r0, [r7, #4]
 315 0008 0B46     		mov	r3, r1
 316 000a FB70     		strb	r3, [r7, #3]
2077:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     Cy_SAR_SetAnalogSwitch(base, CY_SAR_MUX_SWITCH0, SAR_MUX_SWITCH0_MUX_FW_VSSA_VMINUS_Msk, state)
 317              		.loc 3 2077 0
 318 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 319 000e 4FF48032 		mov	r2, #65536
 320 0012 0021     		movs	r1, #0
 321 0014 7868     		ldr	r0, [r7, #4]
 322 0016 FFF7FEFF 		bl	Cy_SAR_SetAnalogSwitch
2078:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
 323              		.loc 3 2078 0
 324 001a 00BF     		nop
 325 001c 0837     		adds	r7, r7, #8
 326              		.cfi_def_cfa_offset 8
 327 001e BD46     		mov	sp, r7
 328              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 89


 329              		@ sp needed
 330 0020 80BD     		pop	{r7, pc}
 331              		.cfi_endproc
 332              	.LFE190:
 333              		.size	Cy_SAR_SetVssaVminusSwitch, .-Cy_SAR_SetVssaVminusSwitch
 334 0022 00BF     		.section	.text.Cy_SAR_SetVssaSarSeqCtrl,"ax",%progbits
 335              		.align	2
 336              		.thumb
 337              		.thumb_func
 338              		.type	Cy_SAR_SetVssaSarSeqCtrl, %function
 339              	Cy_SAR_SetVssaSarSeqCtrl:
 340              	.LFB191:
2079:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
2080:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
2081:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
2082:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_SetVssaSarSeqCtrl
2083:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
2084:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
2085:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Enable or disable SARSEQ control of the switch between VSSA and Vminus of the SARADC.
2086:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This function calls \ref Cy_SAR_SetSwitchSarSeqCtrl
2087:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * with switchMask set to SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_VSSA_Msk.
2088:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
2089:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
2090:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
2091:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
2092:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param ctrl
2093:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Enable or disable control. Select a value from \ref cy_en_sar_switch_sar_seq_ctrl_t.
2094:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
2095:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return None
2096:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
2097:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \funcusage
2098:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
2099:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_VSSA_SARSEQ_CTRL
2100:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
2101:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
2102:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetVssaSarSeqCtrl(SAR_Type *base, cy_en_sar_switch_sar_seq_ctrl_t ctrl)
2103:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 341              		.loc 3 2103 0
 342              		.cfi_startproc
 343              		@ args = 0, pretend = 0, frame = 8
 344              		@ frame_needed = 1, uses_anonymous_args = 0
 345 0000 80B5     		push	{r7, lr}
 346              		.cfi_def_cfa_offset 8
 347              		.cfi_offset 7, -8
 348              		.cfi_offset 14, -4
 349 0002 82B0     		sub	sp, sp, #8
 350              		.cfi_def_cfa_offset 16
 351 0004 00AF     		add	r7, sp, #0
 352              		.cfi_def_cfa_register 7
 353 0006 7860     		str	r0, [r7, #4]
 354 0008 0B46     		mov	r3, r1
 355 000a FB70     		strb	r3, [r7, #3]
2104:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     Cy_SAR_SetSwitchSarSeqCtrl(base, SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_VSSA_Msk, ctrl);
 356              		.loc 3 2104 0
 357 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 358 000e 1A46     		mov	r2, r3
 359 0010 4FF48031 		mov	r1, #65536
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 90


 360 0014 7868     		ldr	r0, [r7, #4]
 361 0016 FFF7FEFF 		bl	Cy_SAR_SetSwitchSarSeqCtrl
2105:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
 362              		.loc 3 2105 0
 363 001a 00BF     		nop
 364 001c 0837     		adds	r7, r7, #8
 365              		.cfi_def_cfa_offset 8
 366 001e BD46     		mov	sp, r7
 367              		.cfi_def_cfa_register 13
 368              		@ sp needed
 369 0020 80BD     		pop	{r7, pc}
 370              		.cfi_endproc
 371              	.LFE191:
 372              		.size	Cy_SAR_SetVssaSarSeqCtrl, .-Cy_SAR_SetVssaSarSeqCtrl
 373 0022 00BF     		.section	.text.Cy_SysClk_PeriphSetDivider,"ax",%progbits
 374              		.align	2
 375              		.thumb
 376              		.thumb_func
 377              		.type	Cy_SysClk_PeriphSetDivider, %function
 378              	Cy_SysClk_PeriphSetDivider:
 379              	.LFB221:
 380              		.file 4 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/sysclk/cy_sysclk.h"
   1:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /***************************************************************************//**
   2:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \file cy_sysclk.h
   3:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \version 2.0
   4:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
   5:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Provides an API declaration of the sysclk driver.
   6:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
   7:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ********************************************************************************
   8:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \copyright
   9:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Copyright 2016-2020, Cypress Semiconductor Corporation. All rights reserved.
  10:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * You may use this file only in accordance with the license, terms, conditions,
  11:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * disclaimers, and limitations in the end user license agreement accompanying
  12:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * the software package with which this file was provided.
  13:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
  14:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
  15:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
  16:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk
  17:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
  18:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The System Clock (SysClk) driver contains the API for configuring system and
  19:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * peripheral clocks. 
  20:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
  21:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The functions and other declarations used in this driver are in cy_sysclk.h. 
  22:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * You can include cy_pdl.h (ModusToolbox only) to get access to all functions 
  23:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * and declarations in the PDL. 
  24:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
  25:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Firmware uses the API to configure , enable, or disable a clock.
  26:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * 
  27:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The clock system includes a variety of resources that can vary per device, including:
  28:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * - Internal clock sources such as internal oscillators
  29:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * - External clock sources such as crystal oscillators or a signal on an I/O pin
  30:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * - Generated clocks such as an FLL, a PLL, and peripheral clocks
  31:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
  32:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Consult the Technical Reference Manual for your device for details of the 
  33:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * clock system.
  34:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
  35:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The PDL defines clock system capabilities in:\n
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 91


  36:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * devices\<family\>/<series\>/include\<series\>_config.h. (E.g.
  37:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * devices/psoc6/include/psoc6_01_config.h).
  38:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * User-configurable clock speeds are defined in the file system_<series>.h.
  39:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
  40:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * As an illustration of the clocking system, the following diagram shows the
  41:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * PSoC 63 series clock tree. The actual tree may vary depending on the device series.
  42:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Consult the Technical Reference Manual for your device for details.
  43:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * ![](sysclk_tree.png)
  44:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
  45:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The sysclk driver supports multiple peripheral clocks, as well as the fast 
  46:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * clock, slow clock, backup domain clock, timer clock, and pump clock. The API
  47:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * for any given clock contains the functions to manage that clock. Functions
  48:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * for clock measurement and trimming are also provided.
  49:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
  50:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \section group_sysclk_configuration Configuration Considerations
  51:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The availability of clock functions depend on the availability of the chip
  52:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * resources that support those functions. Consult the device TRM before
  53:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * attempting to use these functions.
  54:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
  55:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * LPActive and LPSleep power modes limit the maximum clock frequency allowed
  56:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * on the device. Refer to the SysPm driver and the TRM for details.
  57:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
  58:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \section group_sysclk_more_information More Information
  59:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Refer to the technical reference manual (TRM) and the device datasheet.
  60:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
  61:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \section group_sysclk_MISRA MISRA-C Compliance
  62:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * <table class="doxtable">
  63:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
  64:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <th>MISRA Rule</th>
  65:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <th>Rule Class (Required/Advisory)</th>
  66:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <th>Rule Description</th>
  67:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <th>Description of Deviation(s)</th>
  68:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
  69:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
  70:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>10.3</td>
  71:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>R</td>
  72:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>A composite expression of the "essentially unsigned" type is being
  73:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         cast to a different type category.</td>
  74:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>The value got from the bitfield physically cannot exceed the enumeration
  75:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         that describes this bitfield. So, the code is safe by design.</td>
  76:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
  77:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
  78:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>10.4</td>
  79:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>R</td>
  80:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>A composite floating point expression is being cast to double, or unsigned.</td>
  81:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Casting a floating-point calculation result to an integer.</td>
  82:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
  83:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
  84:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>13.4</td>
  85:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>R</td>
  86:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>The controlling expression of a for statement shall not contain any objects of floating t
  87:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Scanning through a list of floating point values: only greater_than/less_then checks are 
  88:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         with floating point numbers, the loop counter is integer. </td>
  89:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
  90:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
  91:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>16.7</td>
  92:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>R</td>
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 92


  93:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>The object addressed by the pointer parameter is not modified and so the pointer could be
  94:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         type 'pointer to const'.</td>
  95:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>The callback function for system power management (SysPm) must be of generic callback typ
  96:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         contains non-const pointer parameter.</td>
  97:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
  98:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * </table>
  99:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 100:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \section group_sysclk_changelog Changelog
 101:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * <table class="doxtable">
 102:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr><th>Version</th><th>Changes</th><th>Reason for Change</th></tr>
 103:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
 104:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>2.0</td>
 105:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Updated the ECO trimming values calculation algorithm in the \ref Cy_SysClk_EcoConfigure 
 106:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         This change may invalidate the already used crystals, in cases: \n
 107:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         * The crystal frequency is less than 16 MHz (the supported crystal frequency range was ch
 108:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         * The maximum amplitude (internal calculation value) is less than 0.65 V. \n
 109:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 110:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         Also the second parameter cSum takes into account both C0 (the crystal itself shunt capac
 111:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         For detail, refer the \ref Cy_SysClk_EcoConfigure documentation and the ECO Trimming sect
 112:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Enhanced the ECO performance for high-noise conditions that result from simultaneous swit
 113:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
 114:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
 115:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td rowspan="4">1.20</td>
 116:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Flattened the organization of the driver source code into the single 
 117:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         source directory and the single include directory.
 118:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     </td>
 119:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Driver library directory-structure simplification.</td>
 120:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
 121:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
 122:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Updated \ref Cy_SysClk_FllLocked function description</td>
 123:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>The SRSS_ver1 HW details clarification</td>
 124:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
 125:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
 126:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Removed the following functions:
 127:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         - Cy_SysClk_FllLostLock
 128:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         - Cy_SysClk_WcoConfigureCsv
 129:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         - Cy_SysClk_ClkHfConfigureCsv
 130:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     </td>
 131:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>No hardware support for the removed functions.</td>
 132:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
 133:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
 134:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Added register access layer. Use register access macros instead
 135:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         of direct register access using dereferenced pointers.</td>
 136:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Makes register access device-independent, so that the PDL does 
 137:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         not need to be recompiled for each supported part number.</td>
 138:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
 139:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
 140:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>1.11</td>
 141:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Updated the following functions. Now they use a semaphore when 
 142:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         try to read the status or configure the SysClk measurement counters:
 143:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         * Cy_SysClk_StartClkMeasurementCounters()
 144:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         * Cy_SysClk_ClkMeasurementCountersGetFreq()
 145:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 146:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         Now Cy_SysClk_ClkMeasurementCountersGetFreq() returns zero value,
 147:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         if during measurement device was in the Deep Sleep or partially
 148:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         blocking flash operation occurred </td>
 149:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Added arbiter mechanism for correct usage of the SysClk measurement 
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 93


 150:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         counters</td>
 151:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
 152:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
 153:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>1.10.1</td>
 154:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Renamed Power Management section to Low Power Callback section</td>
 155:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Documentation update and clarification</td>
 156:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
 157:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
 158:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td rowspan="5">1.10</td>
 159:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Updated FLL parameter calculation</td>
 160:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Support low frequency sources</td>
 161:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
 162:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
 163:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Added Cy_SysClk_PiloSetTrim() and Cy_SysclkPiloGetTrim() functions</td>
 164:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Support PILO manual trims</td>
 165:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
 166:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
 167:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Made Cy_SysClk_FllLostLock() function dependent on SRSS v1</td>
 168:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Feature is not supported in SRSS v1</td>
 169:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
 170:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
 171:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Updated Cy_SysClk_DeepSleepCallback() to save/restore both FLL and PLL settings</td>
 172:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>The function should return when the lock is established or a timeout has occurred</td>
 173:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
 174:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
 175:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>General documentation updates</td>
 176:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td></td>
 177:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
 178:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
 179:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>1.0</td>
 180:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Initial version</td>
 181:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td></td>
 182:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
 183:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * </table>
 184:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 185:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_macros           Macros
 186:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 187:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 188:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_enums           General Enumerated Types
 189:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 190:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_returns         Function return values
 191:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 192:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_eco             External Crystal Oscillator (ECO)
 193:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 194:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The External Crystal Oscillator (ECO) is a clock source that consists
 195:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   of an oscillator circuit that drives an external crystal through its
 196:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   dedicated ECO pins. The ECO is a source clock that can be used to
 197:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   source one or more clock paths (Refer to \ref group_sysclk_path_src).
 198:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   These clock paths can then source the processors and peripherals in
 199:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   the device.
 200:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 201:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The ECO relies on the presence of an external crystal. The pins
 202:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   connected to this crystal must be configured to operate in analog
 203:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   drive mode with HSIOM connection set to GPIO control (HSIOM_SEL_GPIO).
 204:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 205:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_eco_funcs       Functions
 206:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 94


 207:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_path_src           Clock Path Source
 208:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 209:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Clock paths are a series of multiplexers that allow a source clock
 210:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   to drive multiple clocking resources down the chain. These paths are
 211:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   used for active domain clocks that are not operational during chip 
 212:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   deep-sleep, hibernate and off modes. Illustrated below is a diagram
 213:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   of the clock paths for the PSoC 63 series, showing the first three
 214:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   clock paths. The source clocks for these paths are highlighted in
 215:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   the red box.
 216:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 217:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - IMO: 8 MHz Internal Main Oscillator (Default)
 218:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - EXTCLK: External clock (signal brought in through dedicated pins)
 219:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - ECO: External Crystal Oscillator (requires external crystal on dedicated pins)
 220:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - ALTHF: Select on-chip signals (e.g. BLE ECO)
 221:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - Digital Signal (DSI): Digital signal from a UDB source
 222:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 223:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Some clock paths such as path 0 and path 1 have additional resources
 224:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   that can be utilized to provide a higher frequency clock. For example, 
 225:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   path 0 source clock can be used as the reference clock for the FLL and 
 226:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   path 1 source clock can be used as the reference clock for the PLL.
 227:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 228:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_path_source.png)
 229:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 230:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \note The PDL driver cannot configure a clock path to use Digital Signal
 231:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Interconnect (DSI) outputs as sources. This must be done through DSI
 232:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   configuration tool such as PSoC Creator.
 233:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 234:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_path_src_funcs     Functions
 235:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_path_src_enums     Enumerated Types
 236:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 237:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_fll             Frequency Locked Loop (FLL)
 238:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 239:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The FLL is a clock generation circuit that can be used to produce a
 240:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   higher frequency clock from a reference clock. The output clock exhibits
 241:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   some characteristics of the reference clock such as the accuracy of the
 242:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   source. However other attributes such as the clock phase are not preserved.
 243:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The FLL is similar in purpose to a (Phase locked loop) PLL but they are
 244:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   not equivalent.
 245:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 246:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - They may have different frequency ranges.
 247:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - The FLL starts up (locks) faster and consumes less current than the PLL.
 248:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - The FLL accepts a source clock with lower frequency than PLL, such as the WCO (32 KHz). 
 249:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - The FLL does not lock phase. The hardware consist of a counter with a
 250:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     current-controlled oscillator (CCO). The counter counts the number of output
 251:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     clock edges in a reference clock period and adjusts the CCO until the
 252:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     expected ratio is achieved (locked). After initial lock, the CCO is
 253:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     adjusted dynamically to keep the ratio within tolerance. The lock tolerance
 254:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     is user-adjustable.
 255:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_fll.png)
 256:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 257:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The SysClk driver supports two models for configuring the FLL. The first
 258:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   model is to call the Cy_SysClk_FllConfigure() function, which calculates the 
 259:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   necessary parameters for the FLL at run-time. This may be necessary for dynamic
 260:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   run-time changes to the FLL. However this method is slow as it needs to perform 
 261:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   the calculation before configuring the FLL. The other model is to call 
 262:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Cy_SysClk_FllManualConfigure() function with pre-calculated parameter values. 
 263:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   This method is faster but requires prior knowledge of the necessary parameters.
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 95


 264:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Consult the device TRM for the FLL calculation equations.
 265:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 266:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_fll_funcs       Functions
 267:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_fll_structs     Data Structures
 268:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_fll_enums       Enumerated Types
 269:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 270:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_pll             Phase Locked Loop (PLL)
 271:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 272:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The PLL is a clock generation circuit that can be used to produce a
 273:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   higher frequency clock from a reference clock. The output clock exhibits
 274:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   characteristics of the reference clock such as the accuracy of the source
 275:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   and its phase. The PLL is similar in purpose to a (Frequency locked loop) FLL
 276:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   but they are not equivalent.
 277:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 278:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - They may have different frequency ranges.
 279:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - The PLL starts up more slowly and consumes more current than the FLL.
 280:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - The PLL requires a higher frequency source clock than PLL. 
 281:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_pll.png)
 282:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 283:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The SysClk driver supports two models for configuring the PLL. The first
 284:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   model is to call the Cy_SysClk_PllConfigure() function, which calculates the 
 285:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   necessary parameters for the PLL at run-time. This may be necessary for dynamic
 286:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   run-time changes to the PLL. However this method is slow as it needs to perform 
 287:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   the calculation before configuring the PLL. The other model is to call 
 288:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Cy_SysClk_PllManualConfigure() function with pre-calculated parameter values. 
 289:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   This method is faster but requires prior knowledge of the necessary parameters.
 290:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Consult the device TRM for the PLL calculation equations.
 291:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 292:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_pll_funcs       Functions
 293:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_pll_structs     Data Structures
 294:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 295:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_ilo             Internal Low-Speed Oscillator (ILO)
 296:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 297:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The ILO operates with no external components and outputs a stable clock at
 298:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   32.768 kHz nominal. The ILO is relatively low power and low accuracy. It is 
 299:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   available in all power modes and can be used as a source for the Backup domain clock.
 300:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_backup.png)
 301:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 302:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   To ensure the ILO remains active in Hibernate mode, and across power-on-reset
 303:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   (POR) or brown out detect (BOD), firmware must call Cy_SysClk_IloHibernateOn(). 
 304:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 305:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Additionally, the ILO clock can be trimmed to +/- 1.5% of nominal frequency using
 306:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   a higher precision clock source. Use the \ref group_sysclk_calclk API to measure 
 307:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   the current ILO frequency before trimming.
 308:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 309:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \note The ILO is always the source clock for the \ref group_wdt. Therefore:
 310:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - The WDT must be unlocked when making an ILO function call in the PDL
 311:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - It is recommended to always have the ILO enabled
 312:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 313:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_ilo_funcs       Functions
 314:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 315:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_pilo            Precision Internal Low-Speed Oscillator (PILO)
 316:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 317:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   PILO provides a higher accuracy 32.768 kHz clock than the \ref group_sysclk_ilo "ILO".
 318:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   When periodically calibrated using a high-accuracy clock such as the
 319:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \ref group_sysclk_eco "ECO", the PILO can achieve 250 ppm accuracy of nominal frequency.
 320:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The PILO is capable of operating in device Active, Sleep and Deep-Sleep power modes. 
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 96


 321:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   It is not available in Hibernate mode.
 322:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 323:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The PILO can be used as a source for the \ref group_sysclk_clk_lf. However,
 324:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   because PILO is disabled in Hibernate mode, RTC timers cannot operate in this mode
 325:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   when clocked using the PILO. Instead, either the \ref group_sysclk_ilo "ILO" or
 326:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \ref group_sysclk_wco "WCO" should be used when hibernate operation is required. 
 327:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 328:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_backup.png)
 329:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 330:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Periodic calibration to a high-accuracy clock (such as ECO) is required to
 331:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   maintain accuracy. The application should use the functions described in the 
 332:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \ref group_sysclk_calclk API to measure the current PILO frequency before trimming.
 333:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 334:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_pilo_funcs      Functions
 335:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 336:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_calclk          Clock Measurement
 337:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 338:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   These functions measure the frequency of a specified clock relative to a
 339:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   reference clock. They are typically called in the following order:
 340:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 341:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   1. Specify the measured clock, the count, and the reference clock
 342:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   2. Start the counters
 343:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   3. Wait for the measurement counter to finish counting
 344:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   4. Retrieve the measured frequency
 345:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 346:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \note These functions may also be used as part of a clock trimming
 347:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   process. Refer to the \ref group_sysclk_trim "Clock Trim" API.
 348:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 349:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_calclk_funcs    Functions
 350:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_calclk_enums    Enumerated Types
 351:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 352:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_trim            Clock Trim (ILO, PILO)
 353:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 354:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   These functions perform a single trim operation on the ILO or PILO. Each
 355:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   function's parameter is the actual frequency of the clock. To measure the
 356:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   frequency, use the functions described in the \ref group_sysclk_calclk API.
 357:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 358:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   To trim the clock as close as possible to the target frequency, multiple
 359:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   calls to the trim function may be needed. A typical usage example is to:
 360:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   1. Call the clock measurement functions to get the actual frequency of the clock
 361:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   2. Call the trim function, passing in the measured frequency
 362:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   3. Repeat the above until the trim function reports that the clock is trimmed to within limits.
 363:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 364:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_trim_funcs      Functions
 365:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 366:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_pm              Low Power Callback
 367:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 368:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Entering and exiting low power modes require compatible clock configurations
 369:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   to be set before entering low power and restored upon wake-up and exit. The
 370:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   SysClk driver provides a Cy_SysClk_DeepSleepCallback() function to support
 371:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   deep-sleep mode entry. 
 372:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 373:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   This function can be called either by itself before initiating low-power mode
 374:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   entry or it can be used in conjunction with the SysPm driver as a registered 
 375:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   callback. To do so, register this function as a callback before calling 
 376:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Cy_SysPm_DeepSleep(). Specify \ref CY_SYSPM_DEEPSLEEP as the callback type, 
 377:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   and call Cy_SysPm_RegisterCallback().
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 97


 378:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   
 379:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \note If the FLL or PLL source is the ECO, this function must be called.
 380:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 381:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_pm_funcs        Functions
 382:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 383:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_wco             Watch Crystal Oscillator (WCO)
 384:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 385:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The WCO is a highly accurate 32.768 kHz clock source capable of operating
 386:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   in all power modes (excluding the Off mode). It is the primary clock source for
 387:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   the backup domain clock, which is used by the real-time clock (RTC). The 
 388:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   WCO can also be used as a source for the low-frequency clock to support other
 389:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   low power mode peripherals.
 390:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 391:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_backup.png)
 392:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 393:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The WCO requires the configuration of the dedicated WCO pins (SRSS_WCO_IN_PIN,
 394:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   SRSS_WCO_OUT_PIN). These must be configured as Analog Hi-Z drive modes and the
 395:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   HSIOM selection set to GPIO. The WCO can also be used in bypass mode, where
 396:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   an external 32.768 kHz square wave is brought in directly through the 
 397:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   SRSS_WCO_OUT_PIN pin.
 398:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 399:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Some devices support a built-in clock supervisor (CSV) in the WCO. The clock
 400:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   supervisor detects if the WCO has been lost; that is, the WCO is no longer 
 401:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   producing clock pulses. The CSV does this by checking to ensure there is at 
 402:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   least one WCO clock pulse within a certain time window. The ILO or PILO can be
 403:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   the supervising clock. Firmware can configure the CSV to trigger a fault,
 404:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   a reset, or both after specified cycles of the supervising clock.
 405:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 406:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_wco_funcs       Functions
 407:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_wco_structs     Data Structures
 408:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_wco_enums       Enumerated Types
 409:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 410:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_clk_hf          High-Frequency Clocks
 411:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 412:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Multiple high frequency clocks (CLK_HF) are available in the device. For example,
 413:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   PSoC 63 series has five high-frequency root clocks. Each CLK_HF has a particular
 414:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   connection and chip-specific destination on the device.
 415:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 416:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   |Name     |Description                                             |
 417:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   |:--------|:-------------------------------------------------------|
 418:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   |CLK_HF[0]| Root clock for CPUs, PERI, and AHB infrastructure      |
 419:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   |CLK_HF[1]| Root clock for the PDM/PCM and I2S audio subsystem     |
 420:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   |CLK_HF[2]| Root clock for the Serial Memory Interface subsystem   |
 421:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   |CLK_HF[3]| Root clock for USB communications                      |
 422:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   |CLK_HF[4]| Clock output on clk_ext pin (when used as an output)   |
 423:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 424:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_hf.png)
 425:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 426:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Note this is a particular example. The actual tree may vary depending on the device series.
 427:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Consult the Technical Reference Manual for your device for details.
 428:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   
 429:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   High frequency clocks are sourced by path clocks, which should be configured
 430:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   first. An exception to this rule is CLK_HF[0], which cannot be disabled. 
 431:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   This divided clock drives the core processors and the peripherals in the system.
 432:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   In order to update its clock source, CLK_HF[0] source must be selected without
 433:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   disabling the clock.
 434:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 98


 435:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_hf_dist.png)
 436:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 437:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Some devices support a clock supervisor (CSV) for each root clock. These
 438:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   can detect frequency loss, or monitor that the clock frequency stays within
 439:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   a specified range. The possible supervising clocks are IMO, ECO, or ALTHF. 
 440:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Loss detection and frequency monitoring can be enabled or disabled independently.
 441:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Each has its own programmable action that occurs on detection of an error.
 442:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 443:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_hf_funcs    Functions
 444:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_hf_structs  Data Structures
 445:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_hf_enums    Enumerated Types
 446:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 447:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_clk_fast        Fast Clock
 448:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 449:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The fast clock drives the "fast" processor (e.g. Cortex-M4 processor in PSoC 6).
 450:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   This clock is sourced by CLK_HF[0] (\ref group_sysclk_clk_hf "HF Clocks").
 451:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   A divider value of 1~256 can be used to further divide the CLK_HF[0] to a
 452:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   desired clock speed for the processor.
 453:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 454:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_fast.png)
 455:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 456:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_fast_funcs  Functions
 457:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 458:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_clk_peri        Peripheral Clock
 459:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 460:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The peripheral clock is a divided clock of CLK_HF0 (\ref group_sysclk_clk_hf "HF Clocks").
 461:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   It is the source clock for the \ref group_sysclk_clk_slow, and most active domain
 462:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   peripheral clocks (\ref group_sysclk_clk_peripheral). A divider value of 1~256 
 463:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   can be used to further divide the CLK_HF[0] to a desired clock speed for the peripherals.
 464:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 465:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_peri.png)
 466:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 467:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_peri_funcs  Functions
 468:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 469:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_clk_peripheral  Peripherals Clock Dividers
 470:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 471:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   There are multiple peripheral clock dividers that, in effect, create 
 472:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   multiple separate peripheral clocks. The available dividers vary per device 
 473:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   series. As an example, for the PSoC 63 series there are 29 dividers:
 474:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 475:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - eight 8-bit dividers
 476:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - sixteen 16-bit dividers
 477:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - four fractional 16.5-bit dividers (16 integer bits, 5 fractional bits)
 478:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - one fractional 24.5-bit divider (24 integer bits, 5 fractional bits)
 479:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 480:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 481:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The 8-bit and 16-bit dividers are integer dividers. A divider value of 1 
 482:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   means the output frequency matches the input frequency (that is, there is
 483:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   no change). Otherwise the frequency is divided by the value of the divider.
 484:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   For example, if the input frequency is 50 MHz, and the divider is value 10,
 485:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   the output frequency is 5 MHz.
 486:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 487:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The five fractional bits supports further precision in 1/32nd increments. For
 488:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   example, a divider with an integer value of 3 and a fractional value of
 489:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   4 (4/32) results in a divider of 3.125. Fractional dividers are useful when
 490:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   a high-precision clock is required, for example, for a UART/SPI serial
 491:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   interface.
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 99


 492:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 493:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_peri_divs.png)
 494:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 495:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Each peripheral can connect to any one of the programmable dividers. A
 496:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   particular peripheral clock divider can drive multiple peripherals.
 497:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   
 498:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The SysClk driver also supports phase aligning two peripheral clock dividers using
 499:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Cy_SysClk_PeriphEnablePhaseAlignDivider(). Alignment works for both integer
 500:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   and fractional dividers. The divider to which a second divider is aligned
 501:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   must already be enabled.
 502:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 503:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_peripheral_funcs Functions
 504:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_peripheral_enums Enumerated Types
 505:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 506:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_clk_slow        Slow Clock
 507:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 508:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The slow clock is the source clock for the "slow" processor (e.g. Cortex-M0+ in PSoC 6).
 509:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   This clock is a divided version of the \ref group_sysclk_clk_peri, which in turn is 
 510:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   a divided version of CLK_HF[0] (\ref group_sysclk_clk_hf "HF Clocks"). A divider 
 511:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   value of 1~256 can be used to further divide the Peri clock to a desired clock speed
 512:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   for the processor.
 513:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 514:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_slow.png)
 515:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 516:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_slow_funcs  Functions
 517:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 518:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_clk_lf          Low-Frequency Clock
 519:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 520:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The low-frequency clock is the source clock for the \ref group_mcwdt
 521:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   and can be the source clock for \ref group_sysclk_clk_bak, which drives the
 522:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \ref group_rtc.
 523:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   
 524:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The low-frequency clock has three possible source clocks:
 525:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \ref group_sysclk_ilo "ILO", \ref group_sysclk_pilo "PILO", and
 526:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \ref group_sysclk_wco "WCO".
 527:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 528:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_lf.png)
 529:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 530:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_lf_funcs    Functions
 531:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_lf_enums    Enumerated Types
 532:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 533:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_clk_timer       Timer Clock
 534:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 535:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The timer clock can be a source for the alternative clock driving 
 536:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   the \ref group_arm_system_timer. It can also be used as a reference clock 
 537:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   for a counter in the \ref group_energy_profiler "Energy Profiler".
 538:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   
 539:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The timer clock is a divided clock of either the IMO or CLK_HF[0]
 540:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   (\ref group_sysclk_clk_hf "HF Clocks").
 541:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 542:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_timer_funcs Functions
 543:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_timer_enums Enumerated Types
 544:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 545:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_clk_pump        Pump Clock
 546:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 547:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The pump clock is a clock source used to provide analog precision in low voltage
 548:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   applications. Depending on the usage scenario, it may be required to drive the
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 100


 549:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   internal voltage pump for the Continuous Time Block mini (CTBm) in the analog 
 550:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   subsystem. The pump clock is a divided clock of one of the clock paths 
 551:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   (\ref group_sysclk_path_src).
 552:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 553:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_pump_funcs  Functions
 554:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_pump_enums  Enumerated Types
 555:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 556:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_clk_bak         Backup Domain Clock
 557:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 558:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The backup domain clock drives the \ref group_rtc.
 559:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   This clock has two possible source clocks: \ref group_sysclk_wco "WCO"
 560:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   or the \ref group_sysclk_clk_lf. In turn the low frequency clock is sourced by
 561:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \ref group_sysclk_ilo "ILO", \ref group_sysclk_pilo "PILO", or
 562:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \ref group_sysclk_wco "WCO". Typically the ILO is not suitable as an RTC source,
 563:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   because of its low accuracy. However the ILO does operate in hibernate mode and
 564:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   may be used as an alternative to the WCO with a tradeoff in precision.
 565:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 566:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_bak_funcs   Functions
 567:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_bak_enums   Enumerated Types
 568:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 569:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 570:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 571:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #if !defined(CY_SYSCLK_H)
 572:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #define CY_SYSCLK_H
 573:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 574:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #include <stdbool.h>
 575:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #include "cy_device.h"
 576:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #include "cy_device_headers.h"
 577:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #include "cy_syslib.h"
 578:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #include "cy_syspm.h"
 579:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 580:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 581:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #if defined(__cplusplus)
 582:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** extern "C" {
 583:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #endif /* __cplusplus */
 584:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 585:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 586:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_macros
 587:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 588:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 589:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** Driver major version */
 590:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #define  CY_SYSCLK_DRV_VERSION_MAJOR   2
 591:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** Driver minor version */
 592:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #define  CY_SYSCLK_DRV_VERSION_MINOR   0
 593:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** Sysclk driver identifier */
 594:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #define CY_SYSCLK_ID   CY_PDL_DRV_ID(0x12U)
 595:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 596:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_macros */
 597:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 598:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 599:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_returns
 600:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 601:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 602:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** Defines general-purpose function return values. */
 603:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
 604:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 605:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_SUCCESS       = 0u, /**< Command completed with no errors */
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 101


 606:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_BAD_PARAM     = (CY_SYSCLK_ID | CY_PDL_STATUS_ERROR | 1U), /**< Invalid function inpu
 607:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_TIMEOUT       = (CY_SYSCLK_ID | CY_PDL_STATUS_ERROR | 2U), /**< Timeout occurred */
 608:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_INVALID_STATE = (CY_SYSCLK_ID | CY_PDL_STATUS_ERROR | 3U)  /**< Clock is in an invali
 609:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_sysclk_status_t;
 610:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_returns */
 611:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 612:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \cond INTERNAL */
 613:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* Calculate a / b with rounding to the nearest integer. a and b must have the same sign. */
 614:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #define CY_SYSCLK_DIV_ROUND(a, b) (((a) + ((b) / 2u)) / (b))
 615:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* Calculate a / b with rounding up if remainder != 0. a and b must both be positive. */
 616:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #define CY_SYSCLK_DIV_ROUNDUP(a, b) ((((a) - 1U) / (b)) + 1U)
 617:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \endcond */
 618:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 619:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 620:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
 621:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ===========================    ECO SECTION    ============================ */
 622:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
 623:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 624:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 625:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_macros
 626:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 627:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 628:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 629:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 630:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_ecostatus ECO status
 631:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 632:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Constants used for expressing ECO status.
 633:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 634:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #define CY_SYSCLK_ECOSTAT_AMPLITUDE  0UL /**< \brief ECO does not have sufficient amplitude */
 635:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #define CY_SYSCLK_ECOSTAT_INACCURATE 1UL /**< \brief ECO may not be meeting accuracy and duty cycle
 636:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #define CY_SYSCLK_ECOSTAT_STABLE     2UL /**< \brief ECO has fully stabilized */
 637:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} */
 638:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 639:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_macros */
 640:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 641:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 642:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 643:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_eco_funcs
 644:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 645:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 646:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_sysclk_status_t Cy_SysClk_EcoConfigure(uint32_t freq, uint32_t cLoad, uint32_t esr, uint32_t 
 647:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_sysclk_status_t Cy_SysClk_EcoEnable(uint32_t timeoutus);
 648:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_EcoDisable(void);
 649:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint32_t Cy_SysClk_EcoGetStatus(void);
 650:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 651:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
 652:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_EcoDisable
 653:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
 654:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 655:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Disables the external crystal oscillator (ECO). This function should not be
 656:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * called if the ECO is sourcing clkHf[0].
 657:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 658:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
 659:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_EcoDisable
 660:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 661:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
 662:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_EcoDisable(void)
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 102


 663:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 664:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     SRSS_CLK_ECO_CONFIG &= (uint32_t)~_VAL2FLD(SRSS_CLK_ECO_CONFIG_ECO_EN, 1U); /* 0 = disable */
 665:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
 666:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 667:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
 668:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_EcoGetStatus
 669:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
 670:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 671:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Reports the current status of the external crystal oscillator (ECO).
 672:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 673:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return
 674:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CY_SYSCLK_ECOSTAT_AMPLITUDE = ECO does not have sufficient amplitude<br>
 675:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CY_SYSCLK_ECOSTAT_INACCURATE = ECO has sufficient amplitude but may not be meeting accuracy and d
 676:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CY_SYSCLK_ECOSTAT_STABLE = ECO has fully stabilized
 677:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 678:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
 679:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_EcoGetStatus
 680:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 681:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
 682:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint32_t Cy_SysClk_EcoGetStatus(void)
 683:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 684:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint32_t retVal = (SRSS_CLK_ECO_STATUS & (SRSS_CLK_ECO_STATUS_ECO_OK_Msk | SRSS_CLK_ECO_STATUS_
 685:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     /* if ECO is not ready, just report the ECO_OK bit. Otherwise report 2 = ECO ready */
 686:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return ((0UL == (retVal & SRSS_CLK_ECO_STATUS_ECO_READY_Msk)) ? retVal : CY_SYSCLK_ECOSTAT_STAB
 687:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
 688:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_eco_funcs */
 689:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 690:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 691:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
 692:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ====================    INPUT MULTIPLEXER SECTION    ===================== */
 693:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
 694:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 695:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_path_src_enums
 696:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 697:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 698:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 699:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Input multiplexer clock sources
 700:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 701:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
 702:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 703:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKPATH_IN_IMO    =     0U, /**< Select the IMO as the output of the path mux */
 704:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKPATH_IN_EXT    =     1U, /**< Select the EXT as the output of the path mux */
 705:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKPATH_IN_ECO    =     2U, /**< Select the ECO as the output of the path mux */
 706:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKPATH_IN_ALTHF  =     3U, /**< Select the ALTHF as the output of the path mux.
 707:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                            *   Make sure the ALTHF clock source is available on use
 708:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                            */
 709:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKPATH_IN_DSIMUX =     4U, /**< Select the DSI MUX output as the output of the path 
 710:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKPATH_IN_DSI    = 0x100U, /**< Select a DSI signal (0 - 15) as the output of the DS
 711:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                            *   Make sure the DSI clock sources are available on use
 712:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                            */
 713:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKPATH_IN_ILO    = 0x110U, /**< Select the ILO (16) as the output of the DSI mux and
 714:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKPATH_IN_WCO    = 0x111U, /**< Select the WCO (17) as the output of the DSI mux and
 715:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKPATH_IN_ALTLF  = 0x112U, /**< Select the ALTLF (18) as the output of the DSI mux a
 716:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                            *   Make sure the ALTLF clock sources in available on us
 717:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                            */
 718:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKPATH_IN_PILO   = 0x113U  /**< Select the PILO (19) as the output of the DSI mux an
 719:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                            *   Make sure the PILO clock sources in available on use
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 103


 720:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                            */
 721:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_clkpath_in_sources_t;
 722:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_path_src_enums */
 723:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 724:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 725:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_path_src_funcs
 726:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 727:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 728:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_sysclk_status_t Cy_SysClk_ClkPathSetSource(uint32_t clkPath, cy_en_clkpath_in_sources_t sourc
 729:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_clkpath_in_sources_t Cy_SysClk_ClkPathGetSource(uint32_t clkPath);
 730:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_path_src_funcs */
 731:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 732:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 733:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
 734:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ===========================    FLL SECTION    ============================ */
 735:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
 736:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 737:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_fll_enums
 738:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 739:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 740:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** FLL and PLL output mode.
 741:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * See registers CLK_FLL_CONFIG3 and CLK_PLL_CONFIG0, bits BYPASS_SEL.
 742:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 743:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
 744:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 745:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_FLLPLL_OUTPUT_AUTO   = 0U, /**< Output FLL/PLL input source when not locked, and FLL/
 746:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_FLLPLL_OUTPUT_AUTO1  = 1U, /**< Same as AUTO */
 747:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_FLLPLL_OUTPUT_INPUT  = 2U, /**< Output FLL/PLL input source regardless of lock status
 748:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_FLLPLL_OUTPUT_OUTPUT = 3U  /**< Output FLL/PLL output regardless of lock status. This
 749:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_fll_pll_output_mode_t;
 750:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 751:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** FLL current-controlled oscillator (CCO) frequency ranges.
 752:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * See register CLK_FLL_CONFIG4, bits CCO_RANGE.
 753:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 754:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
 755:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 756:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_FLL_CCO_RANGE0, /**< Target frequency is in range  48 -  64 MHz. */
 757:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_FLL_CCO_RANGE1, /**< Target frequency is in range  64 -  85 MHz. */
 758:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_FLL_CCO_RANGE2, /**< Target frequency is in range  85 - 113 MHz. */
 759:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_FLL_CCO_RANGE3, /**< Target frequency is in range 113 - 150 MHz. */
 760:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_FLL_CCO_RANGE4  /**< Target frequency is in range 150 - 200 MHz. */
 761:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_fll_cco_ranges_t;
 762:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_fll_enums */
 763:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 764:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 765:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_fll_structs
 766:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 767:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 768:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** Structure containing information for manual configuration of FLL.
 769:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 770:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef struct
 771:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 772:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint32_t                    fllMult;         /**< CLK_FLL_CONFIG  register, FLL_MULT bits */
 773:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint16_t                    refDiv;          /**< CLK_FLL_CONFIG2 register, FLL_REF_DIV bits */
 774:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_fll_cco_ranges_t      ccoRange;        /**< CLK_FLL_CONFIG4 register, CCO_RANGE bits */
 775:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     bool                        enableOutputDiv; /**< CLK_FLL_CONFIG  register, FLL_OUTPUT_DIV bit 
 776:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint16_t                    lockTolerance;   /**< CLK_FLL_CONFIG2 register, LOCK_TOL bits */
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 104


 777:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint8_t                     igain;           /**< CLK_FLL_CONFIG3 register, FLL_LF_IGAIN bits *
 778:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint8_t                     pgain;           /**< CLK_FLL_CONFIG3 register, FLL_LF_PGAIN bits *
 779:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint16_t                    settlingCount;   /**< CLK_FLL_CONFIG3 register, SETTLING_COUNT bits
 780:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_fll_pll_output_mode_t outputMode;      /**< CLK_FLL_CONFIG3 register, BYPASS_SEL bits */
 781:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint16_t                    cco_Freq;        /**< CLK_FLL_CONFIG4 register, CCO_FREQ bits */
 782:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_stc_fll_manual_config_t;
 783:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_fll_structs */
 784:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 785:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 786:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_fll_funcs
 787:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 788:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 789:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_sysclk_status_t Cy_SysClk_FllConfigure(uint32_t inputFreq, uint32_t outputFreq, cy_en_fll_pll
 790:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_sysclk_status_t Cy_SysClk_FllManualConfigure(const cy_stc_fll_manual_config_t *config);
 791:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** void Cy_SysClk_FllGetConfiguration(cy_stc_fll_manual_config_t *config);
 792:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_sysclk_status_t Cy_SysClk_FllEnable(uint32_t timeoutus);
 793:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE bool Cy_SysClk_FllLocked(void);
 794:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_FllDisable(void);
 795:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 796:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
 797:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_FllLocked
 798:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
 799:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 800:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Reports whether the FLL is locked first time during FLL starting.
 801:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Intended to be used with \ref Cy_SysClk_FllEnable with zero timeout.
 802:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 803:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return 
 804:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * false = not locked<br>
 805:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * true = locked
 806:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 807:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note
 808:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The unlock occurrence may appear during FLL normal operation, so this function 
 809:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * is not recommended to check the FLL normal operation stability.
 810:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 811:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
 812:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_FllLocked
 813:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 814:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
 815:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE bool Cy_SysClk_FllLocked(void)
 816:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 817:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (_FLD2BOOL(SRSS_CLK_FLL_STATUS_LOCKED, SRSS_CLK_FLL_STATUS));
 818:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
 819:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 820:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 821:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
 822:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_FllDisable
 823:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
 824:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 825:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Disables the FLL and the CCO.
 826:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 827:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return \ref cy_en_sysclk_status_t
 828:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 829:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note 
 830:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref SystemCoreClockUpdate after this function calling 
 831:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * if it affects the CLK_HF0 frequency.
 832:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 833:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 105


 834:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref Cy_SysLib_SetWaitStates after calling this function if
 835:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * the FLL is the source of CLK_HF0 and the CLK_HF0 frequency is decreasing.
 836:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 837:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
 838:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_FllDisable
 839:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 840:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
 841:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_FllDisable(void)
 842:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 843:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_REG32_CLR_SET(SRSS_CLK_FLL_CONFIG3, SRSS_CLK_FLL_CONFIG3_BYPASS_SEL, CY_SYSCLK_FLLPLL_OUTPUT
 844:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     SRSS_CLK_FLL_CONFIG  &= ~SRSS_CLK_FLL_CONFIG_FLL_ENABLE_Msk;
 845:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     SRSS_CLK_FLL_CONFIG4 &= ~SRSS_CLK_FLL_CONFIG4_CCO_ENABLE_Msk;
 846:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return CY_SYSCLK_SUCCESS;
 847:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
 848:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_fll_funcs */
 849:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 850:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 851:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
 852:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ===========================    PLL SECTION    ============================ */
 853:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
 854:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 855:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_pll_structs
 856:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 857:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 858:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** Structure containing information for configuration of a PLL.
 859:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 860:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef struct
 861:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 862:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint32_t                    inputFreq;  /**< frequency of PLL source, in Hz */
 863:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint32_t                    outputFreq; /**< frequency of PLL output, in Hz */
 864:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     bool                        lfMode;     /**< CLK_PLL_CONFIG register, PLL_LF_MODE bit */
 865:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_fll_pll_output_mode_t outputMode; /**< CLK_PLL_CONFIG register, BYPASS_SEL bits */
 866:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_stc_pll_config_t;
 867:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 868:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** Structure containing information for manual configuration of a PLL.
 869:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 870:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef struct
 871:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 872:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint8_t                     feedbackDiv;  /**< CLK_PLL_CONFIG register, FEEDBACK_DIV (P) bits *
 873:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint8_t                     referenceDiv; /**< CLK_PLL_CONFIG register, REFERENCE_DIV (Q) bits 
 874:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint8_t                     outputDiv;    /**< CLK_PLL_CONFIG register, OUTPUT_DIV bits */
 875:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     bool                        lfMode;       /**< CLK_PLL_CONFIG register, PLL_LF_MODE bit */
 876:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_fll_pll_output_mode_t outputMode;   /**< CLK_PLL_CONFIG register, BYPASS_SEL bits */
 877:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_stc_pll_manual_config_t;
 878:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_pll_structs */
 879:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 880:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 881:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_pll_funcs
 882:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 883:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 884:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_sysclk_status_t Cy_SysClk_PllConfigure(uint32_t clkPath, const cy_stc_pll_config_t *config);
 885:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_sysclk_status_t Cy_SysClk_PllManualConfigure(uint32_t clkPath, const cy_stc_pll_manual_config
 886:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_sysclk_status_t Cy_SysClk_PllGetConfiguration(uint32_t clkPath, cy_stc_pll_manual_config_t *c
 887:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_sysclk_status_t Cy_SysClk_PllEnable(uint32_t clkPath, uint32_t timeoutus);
 888:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE bool Cy_SysClk_PllLocked(uint32_t clkPath);
 889:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE bool Cy_SysClk_PllLostLock(uint32_t clkPath);
 890:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_PllDisable(uint32_t clkPath);
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 106


 891:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 892:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
 893:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PllLocked
 894:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
 895:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 896:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Reports whether or not the selected PLL is locked.
 897:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 898:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param clkPath Selects which PLL to check. 1 is the first PLL; 0 is invalid.
 899:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 900:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return 
 901:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * false = not locked<br>
 902:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * true = locked
 903:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 904:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
 905:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_PllLocked
 906:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 907:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
 908:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE bool Cy_SysClk_PllLocked(uint32_t clkPath)
 909:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 910:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     clkPath--; /* to correctly access PLL config and status registers structures */
 911:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_ASSERT_L1(clkPath < CY_SRSS_NUM_PLL);
 912:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (_FLD2BOOL(SRSS_CLK_PLL_STATUS_LOCKED, SRSS_CLK_PLL_STATUS[clkPath]));
 913:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
 914:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 915:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
 916:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PllLostLock
 917:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
 918:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 919:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Reports whether or not the selected PLL lost its lock since the last time this
 920:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * function was called. Clears the lost lock indicator.
 921:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 922:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param clkPath Selects which PLL to check. 1 is the first PLL; 0 is invalid.
 923:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 924:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return 
 925:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * false = did not lose lock<br>
 926:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * true = lost lock
 927:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 928:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
 929:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_PllLostLock
 930:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 931:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
 932:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE bool Cy_SysClk_PllLostLock(uint32_t clkPath)
 933:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 934:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     clkPath--; /* to correctly access PLL config and status registers structures */
 935:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_ASSERT_L1(clkPath < CY_SRSS_NUM_PLL);
 936:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     bool retVal = _FLD2BOOL(SRSS_CLK_PLL_STATUS_UNLOCK_OCCURRED, SRSS_CLK_PLL_STATUS[clkPath]);
 937:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     /* write a 1 to clear the unlock occurred bit */
 938:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     SRSS_CLK_PLL_STATUS[clkPath] = SRSS_CLK_PLL_STATUS_UNLOCK_OCCURRED_Msk;
 939:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (retVal);
 940:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
 941:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 942:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
 943:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PllDisable
 944:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
 945:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 946:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Disables the selected PLL.
 947:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 107


 948:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param clkPath Selects which PLL to disable. 1 is the first PLL; 0 is invalid.
 949:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 950:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return Error / status code:<br>
 951:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CY_SYSCLK_SUCCESS - PLL successfully disabled<br>
 952:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CY_SYSCLK_BAD_PARAM - invalid clock path number
 953:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 954:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note 
 955:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref SystemCoreClockUpdate after this function calling 
 956:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * if it affects the CLK_HF0 frequency.
 957:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 958:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note
 959:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref Cy_SysLib_SetWaitStates before calling this function if
 960:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * the PLL is the source of CLK_HF0 and the CLK_HF0 frequency is increasing.
 961:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 962:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note
 963:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref Cy_SysLib_SetWaitStates after calling this function if
 964:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * the PLL is the source of CLK_HF0 and the CLK_HF0 frequency is decreasing.
 965:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 966:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
 967:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_PllDisable
 968:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 969:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
 970:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_PllDisable(uint32_t clkPath)
 971:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 972:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_sysclk_status_t retVal = CY_SYSCLK_BAD_PARAM;
 973:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     clkPath--; /* to correctly access PLL config and status registers structures */
 974:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if (clkPath < CY_SRSS_NUM_PLL)
 975:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
 976:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         /* First bypass PLL */
 977:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         CY_REG32_CLR_SET(SRSS_CLK_PLL_CONFIG[clkPath], SRSS_CLK_PLL_CONFIG_BYPASS_SEL, CY_SYSCLK_FL
 978:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         /* Wait at least 6 PLL clock cycles */
 979:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         Cy_SysLib_DelayUs(1U);
 980:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         /* And now disable the PLL itself */
 981:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         SRSS_CLK_PLL_CONFIG[clkPath] &= ~SRSS_CLK_PLL_CONFIG_ENABLE_Msk;
 982:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         retVal = CY_SYSCLK_SUCCESS;
 983:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
 984:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (retVal);
 985:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
 986:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_pll_funcs */
 987:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 988:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 989:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
 990:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ===========================    ILO SECTION    ============================ */
 991:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
 992:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 993:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_ilo_funcs
 994:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 995:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 996:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_IloEnable(void);
 997:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_IloDisable(void);
 998:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_IloHibernateOn(bool on);
 999:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1000:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1001:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_IloEnable
1002:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1003:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1004:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Enables the ILO.
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 108


1005:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1006:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note The watchdog timer (WDT) must be unlocked before calling this function.
1007:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1008:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1009:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_IloEnable
1010:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1011:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1012:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_IloEnable(void)
1013:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1014:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     SRSS_CLK_ILO_CONFIG |= SRSS_CLK_ILO_CONFIG_ENABLE_Msk;
1015:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1016:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1017:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1018:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_IloDisable
1019:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1020:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1021:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Disables the ILO. ILO can't be disabled if WDT is enabled.
1022:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1023:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return Error / status code:<br>
1024:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CY_SYSCLK_SUCCESS - ILO successfully disabled<br>
1025:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CY_SYSCLK_INVALID_STATE - Cannot disable the ILO if the WDT is enabled.
1026:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1027:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note The watchdog timer (WDT) must be unlocked before calling this function.
1028:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Do not call this function if the WDT is enabled, because the WDT is clocked by
1029:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * the ILO.
1030:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1031:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1032:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_IloDisable
1033:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1034:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1035:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_IloDisable(void)
1036:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1037:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_sysclk_status_t retVal = CY_SYSCLK_INVALID_STATE;
1038:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if (!_FLD2BOOL(SRSS_WDT_CTL_WDT_EN, SRSS_WDT_CTL)) /* if disabled */
1039:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
1040:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         SRSS_CLK_ILO_CONFIG &= ~SRSS_CLK_ILO_CONFIG_ENABLE_Msk;
1041:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         retVal = CY_SYSCLK_SUCCESS;
1042:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1043:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return retVal;
1044:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1045:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1046:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1047:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_IloHibernateOn
1048:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1049:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1050:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Controls whether the ILO stays on during a hibernate, or through an XRES or
1051:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * brown-out detect (BOD) event.
1052:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1053:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param on
1054:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * true = ILO stays on during hibernate or across XRES/BOD.<br> 
1055:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * false = ILO turns off for hibernate or XRES/BOD.
1056:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1057:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note Writes to the register/bit are ignored if the watchdog (WDT) is locked.
1058:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1059:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1060:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_IloHibernateOn
1061:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 109


1062:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1063:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_IloHibernateOn(bool on)
1064:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1065:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_REG32_CLR_SET(SRSS_CLK_ILO_CONFIG, SRSS_CLK_ILO_CONFIG_ILO_BACKUP, (uint32_t)on);
1066:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1067:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_ilo_funcs */
1068:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1069:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1070:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1071:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ===========================    PILO SECTION    =========================== */
1072:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1073:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1074:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_pilo_funcs
1075:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1076:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1077:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_PiloEnable(void);
1078:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_PiloDisable(void);
1079:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_PiloSetTrim(uint32_t trimVal);
1080:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint32_t Cy_SysClk_PiloGetTrim(void);
1081:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1082:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1083:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PiloEnable
1084:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1085:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1086:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Enables the PILO. 
1087:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1088:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note This function blocks for 1 millisecond between enabling the PILO and 
1089:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * releasing the PILO reset.
1090:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1091:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1092:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_PiloEnable
1093:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1094:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1095:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_PiloEnable(void)
1096:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1097:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     SRSS_CLK_PILO_CONFIG |= _VAL2FLD(SRSS_CLK_PILO_CONFIG_PILO_EN, 1U); /* 1 = enable */
1098:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     Cy_SysLib_Delay(1U/*msec*/);
1099:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     /* release the reset and enable clock output */
1100:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     SRSS_CLK_PILO_CONFIG |= SRSS_CLK_PILO_CONFIG_PILO_RESET_N_Msk |
1101:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                             SRSS_CLK_PILO_CONFIG_PILO_CLK_EN_Msk;
1102:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1103:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1104:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1105:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PiloDisable
1106:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1107:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1108:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Disables the PILO.
1109:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1110:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1111:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_PiloDisable
1112:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1113:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1114:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_PiloDisable(void)
1115:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1116:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     /* Clear PILO_EN, PILO_RESET_N, and PILO_CLK_EN bitfields. This disables the
1117:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****        PILO and holds the PILO in a reset state. */
1118:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     SRSS_CLK_PILO_CONFIG &= (uint32_t)~(SRSS_CLK_PILO_CONFIG_PILO_EN_Msk      |
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 110


1119:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                         SRSS_CLK_PILO_CONFIG_PILO_RESET_N_Msk |
1120:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                         SRSS_CLK_PILO_CONFIG_PILO_CLK_EN_Msk);
1121:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1122:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1123:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1124:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PiloSetTrim
1125:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1126:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1127:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Sets the PILO trim bits, which adjusts the PILO frequency. This is typically
1128:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * done after measuring the PILO frequency; see \ref Cy_SysClk_StartClkMeasurementCounters().
1129:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1130:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1131:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_PiloSetTrim
1132:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1133:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1134:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_PiloSetTrim(uint32_t trimVal)
1135:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1136:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_REG32_CLR_SET(SRSS_CLK_PILO_CONFIG, SRSS_CLK_PILO_CONFIG_PILO_FFREQ, trimVal);
1137:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1138:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1139:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1140:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PiloGetTrim
1141:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1142:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1143:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Reports the current PILO trim bits value.
1144:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1145:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1146:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Refer to the Cy_SysClk_PiloSetTrim() function usage.
1147:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1148:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1149:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint32_t Cy_SysClk_PiloGetTrim(void)
1150:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1151:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (_FLD2VAL(SRSS_CLK_PILO_CONFIG_PILO_FFREQ, SRSS_CLK_PILO_CONFIG));
1152:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1153:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_pilo_funcs */
1154:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1155:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1156:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1157:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ====================    CLOCK MEASUREMENT SECTION    ===================== */
1158:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1159:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1160:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_calclk_enums
1161:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1162:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1163:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** Defines all possible clock sources. */
1164:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
1165:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1166:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_NC =            0U,
1167:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_ILO =           1U,
1168:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_WCO =           2U,
1169:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_BAK =           3U,
1170:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_ALTLF =         4U,
1171:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_LFCLK =         5U,
1172:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_IMO =           6U,
1173:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PILO =          8U,
1174:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_FAST_CLKS =     0x100U,
1175:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_ECO =           0x101U,
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 111


1176:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_EXT =           0x102U,
1177:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_ALTHF =         0x103U,
1178:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_TIMERCLK =      0x104U,
1179:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH_CLKS =     0x500U,
1180:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH0 =         0x500U,
1181:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH1 =         0x501U,
1182:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH2 =         0x502U,
1183:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH3 =         0x503U,
1184:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH4 =         0x504U,
1185:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH5 =         0x505U,
1186:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH6 =         0x506U,
1187:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH7 =         0x507U,
1188:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH8 =         0x508U,
1189:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH9 =         0x509U,
1190:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH10 =        0x50AU,
1191:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH11 =        0x50BU,
1192:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH12 =        0x50CU,
1193:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH13 =        0x50DU,
1194:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH14 =        0x50EU,
1195:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH15 =        0x50FU,
1196:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHFS =        0x600U,
1197:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF0 =        0x600U,
1198:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF1 =        0x601U,
1199:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF2 =        0x602U,
1200:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF3 =        0x603U,
1201:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF4 =        0x604U,
1202:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF5 =        0x605U,
1203:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF6 =        0x606U,
1204:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF7 =        0x607U,
1205:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF8 =        0x608U,
1206:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF9 =        0x609U,
1207:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF10 =       0x60AU,
1208:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF11 =       0x60BU,
1209:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF12 =       0x60CU,
1210:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF13 =       0x60DU,
1211:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF14 =       0x60EU,
1212:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF15 =       0x60FU,
1213:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_LAST_CLK =      0x610U
1214:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_meas_clks_t;
1215:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_calclk_enums */
1216:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1217:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1218:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_calclk_funcs
1219:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1220:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1221:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_sysclk_status_t Cy_SysClk_StartClkMeasurementCounters(cy_en_meas_clks_t clock1, uint32_t coun
1222:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE bool Cy_SysClk_ClkMeasurementCountersDone(void);
1223:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** uint32_t Cy_SysClk_ClkMeasurementCountersGetFreq(bool measuredClock, uint32_t refClkFreq);
1224:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1225:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1226:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkMeasurementCountersDone
1227:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1228:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1229:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Checks if clock measurement counting is done, that is, counter1 has counted down
1230:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * to zero. Call \ref Cy_SysClk_StartClkMeasurementCounters() before calling this function.
1231:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1232:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return Status of calibration counters:<br>
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 112


1233:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * true = done<br>
1234:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * false = not done
1235:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1236:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1237:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Refer to the Cy_SysClk_StartClkMeasurementCounters() function usage.
1238:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1239:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1240:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE bool Cy_SysClk_ClkMeasurementCountersDone(void)
1241:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1242:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (_FLD2BOOL(SRSS_CLK_CAL_CNT1_CAL_COUNTER_DONE, SRSS_CLK_CAL_CNT1));
1243:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1244:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_calclk_funcs */
1245:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1246:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1247:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1248:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ==========================    TRIM SECTION    ============================ */
1249:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1250:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1251:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_trim_funcs
1252:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1253:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1254:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** int32_t Cy_SysClk_IloTrim(uint32_t iloFreq);
1255:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** int32_t Cy_SysClk_PiloTrim(uint32_t piloFreq);
1256:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_trim_funcs */
1257:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1258:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1259:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1260:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ======================    POWER MANAGEMENT SECTION    ==================== */
1261:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1262:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1263:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_pm_funcs
1264:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1265:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1266:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_syspm_status_t Cy_SysClk_DeepSleepCallback(cy_stc_syspm_callback_params_t *callbackParams, cy
1267:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_pm_funcs */
1268:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1269:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1270:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1271:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ===========================    WCO SECTION    ============================ */
1272:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1273:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1274:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_wco_enums
1275:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1276:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1277:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** WCO bypass modes */
1278:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
1279:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1280:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_WCO_NOT_BYPASSED = 0u, /**< WCO is not bypassed crystal is used */
1281:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_WCO_BYPASSED = 1U      /**< WCO is bypassed external clock must be supplied  on XTAL 
1282:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_wco_bypass_modes_t;
1283:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1284:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** WCO CSV supervisor clock selections */
1285:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
1286:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1287:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_WCO_CSV_SUPERVISOR_ILO,   /**< WCO CSV supervisor clock source is the ILO */
1288:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_WCO_CSV_SUPERVISOR_ALTLF, /**< WCO CSV supervisor clock source is the alternate low-f
1289:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_WCO_CSV_SUPERVISOR_PILO   /**< WCO CSV supervisor clock source is the PILO */
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 113


1290:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_wco_csv_supervisor_clock_t;
1291:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1292:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1293:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Clock supervisor clock loss window. There must be one clock of the supervised
1294:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * clock within this many clocks of the supervising clock.
1295:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * See registers CLK_CSV_HF_CTL and CLK_CSV_WCO_CTL, bitfield CSV_LOSS_WINDOW.
1296:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1297:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
1298:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1299:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CSV_LOSS_4_CYCLES =   0u, /**< 1 clock must be seen within 4 cycles of the supervisin
1300:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CSV_LOSS_8_CYCLES =   1U, /**< 1 clock must be seen within 8 cycles of the supervisin
1301:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CSV_LOSS_16_CYCLES =  2u, /**< 1 clock must be seen within 16 cycles of the supervisi
1302:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CSV_LOSS_32_CYCLES =  3u, /**< 1 clock must be seen within 32 cycles of the supervisi
1303:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CSV_LOSS_64_CYCLES =  4u, /**< 1 clock must be seen within 64 cycles of the supervisi
1304:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CSV_LOSS_128_CYCLES = 5u, /**< 1 clock must be seen within 128 cycles of the supervis
1305:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CSV_LOSS_256_CYCLES = 6u, /**< 1 clock must be seen within 256 cycles of the supervis
1306:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CSV_LOSS_512_CYCLES = 7u  /**< 1 clock must be seen within 512 cycles of the supervis
1307:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_csv_loss_window_t;
1308:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1309:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1310:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Clock supervisor error actions. See register CLK_CSV_HF_CTL[CSV_FREQ_ACTION and CSV_LOSS_ACTION].
1311:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1312:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
1313:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1314:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CSV_ERROR_IGNORE = 0u,     /**< Ignore the error reported by the clock supervisor. */
1315:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CSV_ERROR_FAULT = 1U,      /**< Trigger a fault when an error is reported by the cloc
1316:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CSV_ERROR_RESET = 2u,      /**< Trigger a reset when an error is reported by the cloc
1317:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CSV_ERROR_FAULT_RESET = 3u /**< Trigger a fault then reset when an error is reported 
1318:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_csv_error_actions_t;
1319:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_wco_enums */
1320:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1321:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1322:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_wco_structs
1323:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1324:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1325:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1326:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * This structure is used to configure the clock supervisor for the WCO.
1327:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1328:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef struct
1329:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1330:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_wco_csv_supervisor_clock_t supervisorClock; /**< supervisor clock selection */
1331:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     bool enableLossDetection;                         /**< 1= enabled, 0= disabled. Note that if lo
1332:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_csv_loss_window_t lossWindow;               /**< \ref cy_en_csv_loss_window_t */
1333:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_csv_error_actions_t lossAction;             /**< \ref cy_en_csv_error_actions_t */
1334:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_stc_wco_csv_config_t;
1335:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_wco_structs */
1336:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1337:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1338:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_wco_funcs
1339:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1340:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1341:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_WcoEnable(uint32_t timeoutus);
1342:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE bool Cy_SysClk_WcoOkay(void);
1343:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_WcoDisable(void);
1344:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_WcoBypass(cy_en_wco_bypass_modes_t bypass);
1345:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1346:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 114


1347:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1348:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_WcoEnable
1349:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1350:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1351:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Enables the WCO.
1352:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1353:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param timeoutus amount of time in microseconds to wait for the WCO to be ready.
1354:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * If WCO is not ready, WCO is stopped. To avoid waiting for WCO ready set this to 0,
1355:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * and manually check if WCO is okay using \ref Cy_SysClk_WcoOkay.
1356:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1357:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return Error / status code:<br>
1358:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CY_SYSCLK_SUCCESS - WCO successfully enabled<br>
1359:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CY_SYSCLK_TIMEOUT - Timeout waiting for WCO to stabilize
1360:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1361:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1362:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_WcoEnable
1363:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1364:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1365:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_WcoEnable(uint32_t timeoutus)
1366:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1367:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_sysclk_status_t rtnval = CY_SYSCLK_TIMEOUT;
1368:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1369:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     /* first set the WCO enable bit */
1370:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     BACKUP_CTL |= BACKUP_CTL_WCO_EN_Msk;
1371:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1372:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     /* now do the timeout wait for STATUS, bit WCO_OK */
1373:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     for (; (Cy_SysClk_WcoOkay() == false) && (0UL != timeoutus); timeoutus--)
1374:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
1375:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         Cy_SysLib_DelayUs(1U);
1376:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1377:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if (0UL != timeoutus)
1378:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
1379:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         rtnval = CY_SYSCLK_SUCCESS;
1380:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1381:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1382:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (rtnval);
1383:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1384:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1385:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1386:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_WcoOkay
1387:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1388:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1389:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Reports the status of the WCO_OK bit.
1390:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1391:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return 
1392:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * true = okay<br>
1393:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * false = not okay
1394:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1395:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1396:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_WcoOkay
1397:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1398:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1399:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE bool Cy_SysClk_WcoOkay(void)
1400:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1401:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (_FLD2BOOL(BACKUP_STATUS_WCO_OK, BACKUP_STATUS));
1402:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1403:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 115


1404:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1405:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_WcoDisable
1406:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1407:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1408:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Disables the WCO.
1409:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1410:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1411:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_WcoDisable
1412:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1413:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1414:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_WcoDisable(void)
1415:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1416:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     BACKUP_CTL &= (uint32_t)~BACKUP_CTL_WCO_EN_Msk;
1417:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1418:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1419:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1420:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_WcoBypass
1421:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1422:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1423:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Sets whether the WCO is bypassed or not. If it is bypassed, then a 32-kHz clock
1424:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * must be provided on the wco_out pin.
1425:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1426:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param bypass \ref cy_en_wco_bypass_modes_t
1427:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1428:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1429:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_WcoBypass
1430:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1431:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1432:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_WcoBypass(cy_en_wco_bypass_modes_t bypass)
1433:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1434:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_REG32_CLR_SET(BACKUP_CTL, BACKUP_CTL_WCO_BYPASS, bypass);
1435:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1436:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_wco_funcs */
1437:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1438:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1439:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1440:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* =========================    clkHf[n] SECTION    ========================= */
1441:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1442:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1443:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_clk_hf_enums
1444:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1445:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1446:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1447:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Selects which clkHf input, or root mux, to configure.
1448:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * See CLK_ROOT_SELECT registers, bits ROOT_MUX.
1449:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Used with functions \ref Cy_SysClk_ClkHfSetSource and \ref Cy_SysClk_ClkHfGetSource.
1450:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1451:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
1452:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1453:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH0  = 0U,  /**< clkHf input is Clock Path 0 */
1454:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH1  = 1U,  /**< clkHf input is Clock Path 1 */
1455:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH2  = 2U,  /**< clkHf input is Clock Path 2 */
1456:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH3  = 3U,  /**< clkHf input is Clock Path 3 */
1457:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH4  = 4U,  /**< clkHf input is Clock Path 4 */
1458:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH5  = 5U,  /**< clkHf input is Clock Path 5 */
1459:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH6  = 6U,  /**< clkHf input is Clock Path 6 */
1460:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH7  = 7U,  /**< clkHf input is Clock Path 7 */
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 116


1461:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH8  = 8U,  /**< clkHf input is Clock Path 8 */
1462:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH9  = 9U,  /**< clkHf input is Clock Path 9 */
1463:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH10 = 10U, /**< clkHf input is Clock Path 10 */
1464:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH11 = 11U, /**< clkHf input is Clock Path 11 */
1465:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH12 = 12U, /**< clkHf input is Clock Path 12 */
1466:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH13 = 13U, /**< clkHf input is Clock Path 13 */
1467:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH14 = 14U, /**< clkHf input is Clock Path 14 */
1468:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH15 = 15U, /**< clkHf input is Clock Path 15 */
1469:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_clkhf_in_sources_t;
1470:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1471:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1472:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1473:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * clkHf divider values. See CLK_ROOT_SELECT registers, bits ROOT_DIV.
1474:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Used with functions \ref Cy_SysClk_ClkHfSetDivider and \ref Cy_SysClk_ClkHfGetDivider.
1475:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1476:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
1477:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1478:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_NO_DIVIDE   = 0U,    /**< don't divide clkHf. */
1479:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_DIVIDE_BY_2 = 1U,    /**< divide clkHf by 2 */
1480:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_DIVIDE_BY_4 = 2U,    /**< divide clkHf by 4 */
1481:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_DIVIDE_BY_8 = 3U     /**< divide clkHf by 8 */
1482:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_clkhf_dividers_t;
1483:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1484:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1485:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * clkHf clock supervisor input sources. See register CLK_CSV_HF_CTL[CSV_MUX].
1486:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1487:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
1488:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1489:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_CSV_SUPERVISOR_IMO   = 0U,  /**< Supervising clock is the IMO. */
1490:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_CSV_SUPERVISOR_EXT   = 1U,  /**< Supervising clock is the external clock */
1491:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_CSV_SUPERVISOR_ALTHF = 2U   /**< Supervising clock is clk_althf */
1492:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_clkhf_csv_supervisor_clock_t;
1493:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_clk_hf_enums */
1494:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1495:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1496:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_clk_hf_structs
1497:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{SupervisingWindow
1498:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1499:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1500:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * This structure is used to configure the clock supervisor for clkHf.
1501:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1502:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef struct
1503:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1504:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_clkhf_csv_supervisor_clock_t supervisorClock; /**< \ref cy_en_clkhf_csv_supervisor_clock_
1505:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint16_t supervisingWindow;                         /**< Number of supervising clock cycles */
1506:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     bool enableFrequencyFaultDetection;                 /**< 1= enabled, 0= disabled */
1507:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint16_t frequencyLowerLimit;                       /**< Lowest frequency in kHz that supervise
1508:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint16_t frequencyUpperLimit;                       /**< Highest frequency in kHz that supervis
1509:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_csv_error_actions_t frequencyAction;          /**< \ref cy_en_csv_error_actions_t */
1510:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     bool enableLossDetection;                           /**< 1= enabled, 0= disabled */
1511:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_csv_loss_window_t lossWindow;                 /**< \ref cy_en_csv_loss_window_t */
1512:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_csv_error_actions_t lossAction;               /**< \ref cy_en_csv_error_actions_t */
1513:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_stc_clkhf_csv_config_t;
1514:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_clk_hf_structs */
1515:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1516:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1517:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_clk_hf_funcs
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 117


1518:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1519:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1520:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_ClkHfEnable(uint32_t clkHf);
1521:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_ClkHfDisable(uint32_t clkHf);
1522:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_ClkHfSetSource(uint32_t clkHf, cy_en_clkhf_in_sourc
1523:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_clkhf_in_sources_t Cy_SysClk_ClkHfGetSource(uint32_t clkHf);
1524:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_ClkHfSetDivider(uint32_t clkHf, cy_en_clkhf_divider
1525:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_clkhf_dividers_t Cy_SysClk_ClkHfGetDivider(uint32_t clkHf);
1526:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1527:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1528:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1529:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkHfEnable
1530:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1531:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1532:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Enables the selected clkHf.
1533:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1534:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param clkHf Selects which clkHf to enable.
1535:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1536:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return \ref cy_en_sysclk_status_t
1537:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1538:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1539:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_ClkHfEnable
1540:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1541:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1542:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_ClkHfEnable(uint32_t clkHf)
1543:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1544:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_sysclk_status_t retVal = CY_SYSCLK_BAD_PARAM;
1545:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if (clkHf < CY_SRSS_NUM_HFROOT)
1546:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
1547:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         SRSS_CLK_ROOT_SELECT[clkHf] |= SRSS_CLK_ROOT_SELECT_ENABLE_Msk;
1548:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         retVal = CY_SYSCLK_SUCCESS;
1549:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1550:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (retVal);
1551:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1552:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1553:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1554:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkHfDisable
1555:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1556:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1557:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Disables the selected clkHf.
1558:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1559:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param clkHf Selects which clkHf to enable.
1560:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1561:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return \ref cy_en_sysclk_status_t
1562:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1563:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note clkHf[0] cannot be disabled.
1564:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1565:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1566:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_ClkHfDisable
1567:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1568:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1569:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_ClkHfDisable(uint32_t clkHf)
1570:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1571:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_sysclk_status_t retVal = CY_SYSCLK_BAD_PARAM;
1572:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if ((0UL < clkHf) /* prevent CLK_HF0 disabling */
1573:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****            && (clkHf < CY_SRSS_NUM_HFROOT))
1574:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 118


1575:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         SRSS_CLK_ROOT_SELECT[clkHf] &= ~SRSS_CLK_ROOT_SELECT_ENABLE_Msk;
1576:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         retVal = CY_SYSCLK_SUCCESS;
1577:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1578:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (retVal);
1579:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1580:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1581:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1582:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkHfSetSource
1583:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1584:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1585:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Selects the source of the selected clkHf.
1586:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1587:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param clkHf selects which clkHf mux to configure.
1588:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1589:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param source \ref cy_en_clkhf_in_sources_t
1590:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1591:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return \ref cy_en_sysclk_status_t
1592:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1593:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note 
1594:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref SystemCoreClockUpdate after this function calling 
1595:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * if it affects the CLK_HF0 frequency.
1596:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1597:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note 
1598:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref Cy_SysLib_SetWaitStates before calling this function if
1599:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CLK_HF0 frequency is increasing.
1600:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1601:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note
1602:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref Cy_SysLib_SetWaitStates after calling this function if
1603:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CLK_HF0 frequency is decreasing.
1604:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1605:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1606:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_ClkHfSetSource
1607:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1608:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1609:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_ClkHfSetSource(uint32_t clkHf, cy_en_clkhf_in_sourc
1610:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1611:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_sysclk_status_t retVal = CY_SYSCLK_BAD_PARAM;
1612:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if ((clkHf < CY_SRSS_NUM_HFROOT) && (source <= CY_SYSCLK_CLKHF_IN_CLKPATH15))
1613:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
1614:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         CY_REG32_CLR_SET(SRSS_CLK_ROOT_SELECT[clkHf], SRSS_CLK_ROOT_SELECT_ROOT_MUX, source);
1615:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         retVal = CY_SYSCLK_SUCCESS;
1616:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1617:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (retVal);
1618:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1619:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1620:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1621:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkHfGetSource
1622:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1623:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1624:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Reports the source of the selected clkHf.
1625:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1626:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param clkHf selects which clkHf to get the source of.
1627:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1628:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return \ref cy_en_clkhf_in_sources_t
1629:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1630:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1631:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_ClkHfSetSource
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 119


1632:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1633:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1634:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_clkhf_in_sources_t Cy_SysClk_ClkHfGetSource(uint32_t clkHf)
1635:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1636:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_ASSERT_L1(clkHf < CY_SRSS_NUM_HFROOT);
1637:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (cy_en_clkhf_in_sources_t)(_FLD2VAL(SRSS_CLK_ROOT_SELECT_ROOT_MUX, SRSS_CLK_ROOT_SELECT[
1638:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1639:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1640:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1641:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkHfSetDivider
1642:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1643:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1644:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Sets the pre-divider for a clkHf.
1645:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1646:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param clkHf selects which clkHf divider to configure.
1647:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1648:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param divider \ref cy_en_clkhf_dividers_t
1649:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1650:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return \ref cy_en_sysclk_status_t
1651:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1652:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note Also call \ref Cy_SysClk_ClkHfSetSource to set the clkHf source.
1653:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1654:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note 
1655:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref SystemCoreClockUpdate after this function calling 
1656:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * if it affects the CLK_HF0 frequency.
1657:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1658:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note 
1659:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref Cy_SysLib_SetWaitStates before calling this function if
1660:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CLK_HF0 frequency is increasing.
1661:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1662:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note
1663:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref Cy_SysLib_SetWaitStates after calling this function if
1664:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CLK_HF0 frequency is decreasing.
1665:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1666:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1667:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_ClkHfSetDivider
1668:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1669:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1670:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_ClkHfSetDivider(uint32_t clkHf, cy_en_clkhf_divider
1671:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1672:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_sysclk_status_t retVal = CY_SYSCLK_BAD_PARAM;
1673:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if ((clkHf < CY_SRSS_NUM_HFROOT) && (divider <= CY_SYSCLK_CLKHF_DIVIDE_BY_8))
1674:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
1675:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         CY_REG32_CLR_SET(SRSS_CLK_ROOT_SELECT[clkHf], SRSS_CLK_ROOT_SELECT_ROOT_DIV, divider);
1676:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         retVal = CY_SYSCLK_SUCCESS;
1677:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1678:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (retVal);
1679:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1680:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1681:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1682:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkHfGetDivider
1683:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1684:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1685:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Reports the pre-divider value for a clkHf.
1686:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1687:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param clkHf selects which clkHf to check divider of.
1688:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 120


1689:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return \ref cy_en_clkhf_dividers_t
1690:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1691:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1692:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_ClkHfSetDivider
1693:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1694:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1695:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_clkhf_dividers_t Cy_SysClk_ClkHfGetDivider(uint32_t clkHf)
1696:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1697:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_ASSERT_L1(clkHf < CY_SRSS_NUM_HFROOT);
1698:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (cy_en_clkhf_dividers_t)(_FLD2VAL(SRSS_CLK_ROOT_SELECT_ROOT_DIV, SRSS_CLK_ROOT_SELECT[cl
1699:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1700:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_clk_hf_funcs */
1701:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1702:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1703:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1704:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* =========================    clk_fast SECTION    ========================= */
1705:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1706:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1707:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_clk_fast_funcs
1708:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1709:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1710:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_ClkFastSetDivider(uint8_t divider);
1711:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint8_t Cy_SysClk_ClkFastGetDivider(void);
1712:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1713:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1714:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkFastSetDivider
1715:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1716:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1717:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Sets the clock divider for the fast clock, which sources the main processor.
1718:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The source of this divider is clkHf[0].
1719:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1720:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param divider divider value between 0 and 255.
1721:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Causes integer division of (divider value + 1), or division by 1 to 256.
1722:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1723:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note 
1724:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref SystemCoreClockUpdate after this function calling.
1725:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1726:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note 
1727:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref Cy_SysLib_SetWaitStates before calling this function if
1728:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CLK_FAST frequency is increasing.
1729:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1730:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note
1731:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref Cy_SysLib_SetWaitStates after calling this function if
1732:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CLK_FAST frequency is decreasing.
1733:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1734:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1735:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_ClkFastSetDivider
1736:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1737:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1738:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_ClkFastSetDivider(uint8_t divider)
1739:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1740:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_REG32_CLR_SET(CPUSS_CM4_CLOCK_CTL, CPUSS_CM4_CLOCK_CTL_FAST_INT_DIV, divider);
1741:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1742:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1743:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1744:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkFastGetDivider
1745:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 121


1746:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1747:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Returns the clock divider for the fast clock.
1748:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1749:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return The divider value for the fast clock.
1750:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The integer division done is by (divider value + 1), or division by 1 to 256.
1751:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1752:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1753:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_ClkFastSetDivider
1754:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1755:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1756:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint8_t Cy_SysClk_ClkFastGetDivider(void)
1757:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1758:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return ((uint8_t)_FLD2VAL(CPUSS_CM4_CLOCK_CTL_FAST_INT_DIV, CPUSS_CM4_CLOCK_CTL));
1759:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1760:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_clk_fast_funcs */
1761:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1762:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1763:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1764:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================    clk_peri SECTION    ========================== */
1765:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1766:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1767:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_clk_peri_funcs
1768:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1769:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1770:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_ClkPeriSetDivider(uint8_t divider);
1771:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint8_t Cy_SysClk_ClkPeriGetDivider(void);
1772:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1773:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1774:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkPeriSetDivider
1775:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1776:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1777:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Sets the clock divider for the peripheral clock tree. All peripheral clock
1778:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * dividers are sourced from this clock. Also the Cortex M0+ clock divider is
1779:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * sourced from this clock. The source of this divider is clkHf[0]
1780:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1781:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param divider divider value between 0 and 255
1782:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Causes integer division of (divider value + 1), or division by 1 to 256.
1783:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1784:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note 
1785:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref SystemCoreClockUpdate after this function calling.
1786:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1787:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1788:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_ClkPeriSetDivider
1789:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1790:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1791:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_ClkPeriSetDivider(uint8_t divider)
1792:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1793:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_REG32_CLR_SET(CPUSS_CM0_CLOCK_CTL, CPUSS_CM0_CLOCK_CTL_PERI_INT_DIV, divider);
1794:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1795:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1796:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1797:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkPeriGetDivider
1798:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1799:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1800:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Returns the clock divider of the peripheral (peri) clock.
1801:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1802:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return The divider value.
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 122


1803:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The integer division done is by (divider value + 1), or division by 1 to 256.
1804:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1805:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1806:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_ClkPeriSetDivider
1807:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1808:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1809:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint8_t Cy_SysClk_ClkPeriGetDivider(void)
1810:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1811:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return ((uint8_t)_FLD2VAL(CPUSS_CM0_CLOCK_CTL_PERI_INT_DIV, CPUSS_CM0_CLOCK_CTL));
1812:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1813:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_clk_peri_funcs */
1814:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1815:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1816:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1817:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* =====================    clk_peripherals SECTION    ====================== */
1818:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1819:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1820:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_clk_peripheral_enums
1821:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1822:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1823:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** Programmable clock divider types */
1824:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
1825:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1826:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_DIV_8_BIT    = 0U, /**< Divider Type is an 8 bit divider */
1827:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_DIV_16_BIT   = 1U, /**< Divider Type is a 16 bit divider */
1828:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_DIV_16_5_BIT = 2U, /**< Divider Type is a 16.5 bit fractional divider */
1829:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_DIV_24_5_BIT = 3U  /**< Divider Type is a 24.5 bit fractional divider */
1830:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_divider_types_t;
1831:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_clk_peripheral_enums */
1832:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1833:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1834:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_clk_peripheral_funcs
1835:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1836:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1837:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_PeriphSetDivider(cy_en_divider_types_t dividerType,
1838:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint32_t Cy_SysClk_PeriphGetDivider(cy_en_divider_types_t dividerType, uint32_t div
1839:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_PeriphSetFracDivider(cy_en_divider_types_t dividerT
1840:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_PeriphGetFracDivider(cy_en_divider_types_t dividerType, uint32_t div
1841:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_PeriphAssignDivider(en_clk_dst_t ipBlock, cy_en_div
1842:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint32_t Cy_SysClk_PeriphGetAssignedDivider(en_clk_dst_t ipBlock);
1843:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_PeriphEnableDivider(cy_en_divider_types_t dividerTy
1844:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_PeriphDisableDivider(cy_en_divider_types_t dividerT
1845:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_PeriphEnablePhaseAlignDivider(cy_en_divider_types_t
1846:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE bool Cy_SysClk_PeriphGetDividerEnabled(cy_en_divider_types_t dividerType, uint32_t 
1847:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** uint32_t Cy_SysClk_PeriphGetFrequency(cy_en_divider_types_t dividerType, uint32_t dividerNum);
1848:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1849:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1850:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PeriphSetDivider
1851:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1852:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1853:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Sets one of the programmable clock dividers. This is only used for integer
1854:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * dividers. Use \ref Cy_SysClk_PeriphSetFracDivider for setting factional dividers.
1855:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1856:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \pre If the specified clock divider is already enabled - it should be disabled
1857:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * prior to use this function by \ref Cy_SysClk_PeriphDisableDivider.
1858:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1859:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerType specifies which type of divider to use; \ref cy_en_divider_types_t
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 123


1860:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1861:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerNum the divider number.
1862:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1863:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerValue divider value
1864:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Causes integer division of (divider value + 1), or division by 1 to 256
1865:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * (8-bit divider) or 1 to 65536 (16-bit divider).
1866:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1867:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return \ref cy_en_sysclk_status_t
1868:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1869:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1870:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_PeriphSetDivider
1871:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1872:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1873:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t
1874:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                 Cy_SysClk_PeriphSetDivider(cy_en_divider_types_t dividerType,
1875:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                            uint32_t dividerNum, uint32_t dividerValue)
1876:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 381              		.loc 4 1876 0
 382              		.cfi_startproc
 383              		@ args = 0, pretend = 0, frame = 24
 384              		@ frame_needed = 1, uses_anonymous_args = 0
 385              		@ link register save eliminated.
 386 0000 80B4     		push	{r7}
 387              		.cfi_def_cfa_offset 4
 388              		.cfi_offset 7, -4
 389 0002 87B0     		sub	sp, sp, #28
 390              		.cfi_def_cfa_offset 32
 391 0004 00AF     		add	r7, sp, #0
 392              		.cfi_def_cfa_register 7
 393 0006 0346     		mov	r3, r0
 394 0008 B960     		str	r1, [r7, #8]
 395 000a 7A60     		str	r2, [r7, #4]
 396 000c FB73     		strb	r3, [r7, #15]
1877:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_sysclk_status_t retVal = CY_SYSCLK_BAD_PARAM;
 397              		.loc 4 1877 0
 398 000e 324B     		ldr	r3, .L28
 399 0010 7B61     		str	r3, [r7, #20]
1878:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if (dividerType == CY_SYSCLK_DIV_8_BIT)
 400              		.loc 4 1878 0
 401 0012 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 402 0014 002B     		cmp	r3, #0
 403 0016 27D1     		bne	.L23
1879:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
1880:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         if ((dividerNum < PERI_DIV_8_NR) &&
 404              		.loc 4 1880 0
 405 0018 BB68     		ldr	r3, [r7, #8]
 406 001a 072B     		cmp	r3, #7
 407 001c 54D8     		bhi	.L25
 408              		.loc 4 1880 0 is_stmt 0 discriminator 1
 409 001e 7B68     		ldr	r3, [r7, #4]
 410 0020 FF2B     		cmp	r3, #255
 411 0022 51D8     		bhi	.L25
1881:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             (dividerValue <= (PERI_DIV_8_CTL_INT8_DIV_Msk >> PERI_DIV_8_CTL_INT8_DIV_Pos)))
1882:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         {
1883:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             CY_REG32_CLR_SET(PERI_DIV_8_CTL[dividerNum], PERI_DIV_8_CTL_INT8_DIV, dividerValue);
 412              		.loc 4 1883 0 is_stmt 1
 413 0024 BB68     		ldr	r3, [r7, #8]
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 124


 414 0026 9A00     		lsls	r2, r3, #2
 415 0028 2C4B     		ldr	r3, .L28+4
 416 002a 1B68     		ldr	r3, [r3]
 417 002c 9B68     		ldr	r3, [r3, #8]
 418 002e 2B49     		ldr	r1, .L28+4
 419 0030 0968     		ldr	r1, [r1]
 420 0032 B1F87410 		ldrh	r1, [r1, #116]
 421 0036 0B44     		add	r3, r3, r1
 422 0038 1344     		add	r3, r3, r2
 423 003a 1846     		mov	r0, r3
 424 003c BB68     		ldr	r3, [r7, #8]
 425 003e 9A00     		lsls	r2, r3, #2
 426 0040 264B     		ldr	r3, .L28+4
 427 0042 1B68     		ldr	r3, [r3]
 428 0044 9B68     		ldr	r3, [r3, #8]
 429 0046 2549     		ldr	r1, .L28+4
 430 0048 0968     		ldr	r1, [r1]
 431 004a B1F87410 		ldrh	r1, [r1, #116]
 432 004e 0B44     		add	r3, r3, r1
 433 0050 1344     		add	r3, r3, r2
 434 0052 1B68     		ldr	r3, [r3]
 435 0054 23F47F42 		bic	r2, r3, #65280
 436 0058 7B68     		ldr	r3, [r7, #4]
 437 005a 1B02     		lsls	r3, r3, #8
 438 005c 9BB2     		uxth	r3, r3
 439 005e 1343     		orrs	r3, r3, r2
 440 0060 0360     		str	r3, [r0]
1884:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             retVal = CY_SYSCLK_SUCCESS;
 441              		.loc 4 1884 0
 442 0062 0023     		movs	r3, #0
 443 0064 7B61     		str	r3, [r7, #20]
 444 0066 2FE0     		b	.L25
 445              	.L23:
1885:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         }
1886:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1887:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     else if (dividerType == CY_SYSCLK_DIV_16_BIT)
 446              		.loc 4 1887 0
 447 0068 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 448 006a 012B     		cmp	r3, #1
 449 006c 2CD1     		bne	.L25
1888:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
1889:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         if ((dividerNum < PERI_DIV_16_NR) &&
 450              		.loc 4 1889 0
 451 006e BB68     		ldr	r3, [r7, #8]
 452 0070 0F2B     		cmp	r3, #15
 453 0072 29D8     		bhi	.L25
 454              		.loc 4 1889 0 is_stmt 0 discriminator 1
 455 0074 7B68     		ldr	r3, [r7, #4]
 456 0076 B3F5803F 		cmp	r3, #65536
 457 007a 25D2     		bcs	.L25
1890:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             (dividerValue <= (PERI_DIV_16_CTL_INT16_DIV_Msk >> PERI_DIV_16_CTL_INT16_DIV_Pos)))
1891:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         {
1892:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             CY_REG32_CLR_SET(PERI_DIV_16_CTL[dividerNum], PERI_DIV_16_CTL_INT16_DIV, dividerValue);
 458              		.loc 4 1892 0 is_stmt 1
 459 007c BB68     		ldr	r3, [r7, #8]
 460 007e 9A00     		lsls	r2, r3, #2
 461 0080 164B     		ldr	r3, .L28+4
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 125


 462 0082 1B68     		ldr	r3, [r3]
 463 0084 9B68     		ldr	r3, [r3, #8]
 464 0086 1549     		ldr	r1, .L28+4
 465 0088 0968     		ldr	r1, [r1]
 466 008a B1F87610 		ldrh	r1, [r1, #118]
 467 008e 0B44     		add	r3, r3, r1
 468 0090 1344     		add	r3, r3, r2
 469 0092 1846     		mov	r0, r3
 470 0094 BB68     		ldr	r3, [r7, #8]
 471 0096 9A00     		lsls	r2, r3, #2
 472 0098 104B     		ldr	r3, .L28+4
 473 009a 1B68     		ldr	r3, [r3]
 474 009c 9B68     		ldr	r3, [r3, #8]
 475 009e 0F49     		ldr	r1, .L28+4
 476 00a0 0968     		ldr	r1, [r1]
 477 00a2 B1F87610 		ldrh	r1, [r1, #118]
 478 00a6 0B44     		add	r3, r3, r1
 479 00a8 1344     		add	r3, r3, r2
 480 00aa 1B68     		ldr	r3, [r3]
 481 00ac 23F47F02 		bic	r2, r3, #16711680
 482 00b0 22F47F42 		bic	r2, r2, #65280
 483 00b4 7B68     		ldr	r3, [r7, #4]
 484 00b6 1B02     		lsls	r3, r3, #8
 485 00b8 23F07F43 		bic	r3, r3, #-16777216
 486 00bc 23F0FF03 		bic	r3, r3, #255
 487 00c0 1343     		orrs	r3, r3, r2
 488 00c2 0360     		str	r3, [r0]
1893:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             retVal = CY_SYSCLK_SUCCESS;
 489              		.loc 4 1893 0
 490 00c4 0023     		movs	r3, #0
 491 00c6 7B61     		str	r3, [r7, #20]
 492              	.L25:
1894:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         }
1895:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1896:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     else
1897:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     { /* return bad parameter */
1898:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1899:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (retVal);
 493              		.loc 4 1899 0
 494 00c8 7B69     		ldr	r3, [r7, #20]
1900:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
 495              		.loc 4 1900 0
 496 00ca 1846     		mov	r0, r3
 497 00cc 1C37     		adds	r7, r7, #28
 498              		.cfi_def_cfa_offset 4
 499 00ce BD46     		mov	sp, r7
 500              		.cfi_def_cfa_register 13
 501              		@ sp needed
 502 00d0 5DF8047B 		ldr	r7, [sp], #4
 503              		.cfi_restore 7
 504              		.cfi_def_cfa_offset 0
 505 00d4 7047     		bx	lr
 506              	.L29:
 507 00d6 00BF     		.align	2
 508              	.L28:
 509 00d8 01004A00 		.word	4849665
 510 00dc 00000000 		.word	cy_device
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 126


 511              		.cfi_endproc
 512              	.LFE221:
 513              		.size	Cy_SysClk_PeriphSetDivider, .-Cy_SysClk_PeriphSetDivider
 514              		.section	.text.Cy_SysClk_PeriphEnableDivider,"ax",%progbits
 515              		.align	2
 516              		.thumb
 517              		.thumb_func
 518              		.type	Cy_SysClk_PeriphEnableDivider, %function
 519              	Cy_SysClk_PeriphEnableDivider:
 520              	.LFB227:
1901:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1902:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1903:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PeriphGetDivider
1904:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1905:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1906:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Returns the integer divider value for the specified divider. One works for
1907:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * integer dividers. Use \ref Cy_SysClk_PeriphGetFracDivider to get the fractional
1908:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * divider value
1909:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1910:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerType specifies which type of divider to use; \ref cy_en_divider_types_t
1911:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1912:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerNum specifies which divider of the selected type to configure
1913:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1914:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return The divider value.
1915:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The integer division done is by (divider value + 1), or division by 1 to 256
1916:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * (8-bit divider) or 1 to 65536 (16-bit divider).
1917:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1918:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1919:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_PeriphSetDivider
1920:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1921:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1922:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint32_t Cy_SysClk_PeriphGetDivider(cy_en_divider_types_t dividerType, uint32_t div
1923:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1924:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint32_t retVal;
1925:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1926:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_ASSERT_L1(dividerType <= CY_SYSCLK_DIV_16_BIT);
1927:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1928:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if (dividerType == CY_SYSCLK_DIV_8_BIT)
1929:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
1930:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         CY_ASSERT_L1(dividerNum < PERI_DIV_8_NR);
1931:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         retVal = _FLD2VAL(PERI_DIV_8_CTL_INT8_DIV, PERI_DIV_8_CTL[dividerNum]);
1932:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1933:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     else
1934:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     { /* 16-bit divider */
1935:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         CY_ASSERT_L1(dividerNum < PERI_DIV_16_NR);
1936:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         retVal = _FLD2VAL(PERI_DIV_16_CTL_INT16_DIV, PERI_DIV_16_CTL[dividerNum]);
1937:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1938:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (retVal);
1939:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1940:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1941:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1942:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PeriphSetFracDivider
1943:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1944:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1945:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Sets one of the programmable clock dividers. This function should only be used
1946:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * for fractional clock dividers.
1947:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 127


1948:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \pre If the specified clock divider is already enabled - it should be disabled
1949:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * prior to use this function by \ref Cy_SysClk_PeriphDisableDivider.
1950:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1951:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerType specifies which type of divider to use; \ref cy_en_divider_types_t
1952:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1953:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerNum specifies which divider of the selected type to configure
1954:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1955:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerIntValue the integer divider value
1956:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The source of the divider is peri_clk, which is a divided version of hf_clk[0].
1957:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The divider value causes integer division of (divider value + 1), or division
1958:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * by 1 to 65536 (16-bit divider) or 1 to 16777216 (24-bit divider).
1959:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1960:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerFracValue the fraction part of the divider
1961:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The fractional divider can be 1-32, thus it divides the clock by 1/32 for each
1962:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * count. To divide the clock by 11/32nds set this value to 11.
1963:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1964:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return \ref cy_en_sysclk_status_t
1965:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1966:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1967:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_PeriphSetFracDivider
1968:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1969:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1970:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t
1971:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                 Cy_SysClk_PeriphSetFracDivider(cy_en_divider_types_t dividerType, uint32_t dividerN
1972:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                                uint32_t dividerIntValue, uint32_t dividerFracValue)
1973:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1974:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_sysclk_status_t retVal = CY_SYSCLK_BAD_PARAM;
1975:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if (dividerType == CY_SYSCLK_DIV_16_5_BIT)
1976:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
1977:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         if ((dividerNum < PERI_DIV_16_5_NR) &&
1978:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             (dividerIntValue <= (PERI_DIV_16_5_CTL_INT16_DIV_Msk >> PERI_DIV_16_5_CTL_INT16_DIV_Pos
1979:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             (dividerFracValue <= (PERI_DIV_16_5_CTL_FRAC5_DIV_Msk >> PERI_DIV_16_5_CTL_FRAC5_DIV_Po
1980:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         {
1981:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             CY_REG32_CLR_SET(PERI_DIV_16_5_CTL[dividerNum], PERI_DIV_16_5_CTL_INT16_DIV, dividerInt
1982:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             CY_REG32_CLR_SET(PERI_DIV_16_5_CTL[dividerNum], PERI_DIV_16_5_CTL_FRAC5_DIV, dividerFra
1983:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             retVal = CY_SYSCLK_SUCCESS;
1984:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         }
1985:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1986:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     else if (dividerType == CY_SYSCLK_DIV_24_5_BIT)
1987:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
1988:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         if ((dividerNum < PERI_DIV_24_5_NR) &&
1989:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             (dividerIntValue <= (PERI_DIV_24_5_CTL_INT24_DIV_Msk >> PERI_DIV_24_5_CTL_INT24_DIV_Pos
1990:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             (dividerFracValue <= (PERI_DIV_24_5_CTL_FRAC5_DIV_Msk >> PERI_DIV_24_5_CTL_FRAC5_DIV_Po
1991:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         {
1992:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             CY_REG32_CLR_SET(PERI_DIV_24_5_CTL[dividerNum], PERI_DIV_24_5_CTL_INT24_DIV, dividerInt
1993:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             CY_REG32_CLR_SET(PERI_DIV_24_5_CTL[dividerNum], PERI_DIV_24_5_CTL_FRAC5_DIV, dividerFra
1994:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             retVal = CY_SYSCLK_SUCCESS;
1995:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         }
1996:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1997:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     else
1998:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     { /* return bad parameter */
1999:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
2000:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (retVal);
2001:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
2002:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2003:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
2004:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PeriphGetFracDivider
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 128


2005:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
2006:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2007:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Reports the integer and fractional parts of the divider
2008:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2009:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerType specifies which type of divider to use; \ref cy_en_divider_types_t
2010:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2011:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerNum specifies which divider of the selected type to configure
2012:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2013:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param *dividerIntValue pointer to return integer divider value
2014:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2015:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param *dividerFracValue pointer to return fractional divider value
2016:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2017:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return None. Loads pointed-to variables.
2018:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2019:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
2020:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_PeriphSetFracDivider
2021:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2022:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
2023:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_PeriphGetFracDivider(cy_en_divider_types_t dividerType, uint32_t div
2024:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                                     uint32_t *dividerIntValue, uint32_t *dividerFra
2025:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
2026:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_ASSERT_L1(((dividerType == CY_SYSCLK_DIV_16_5_BIT) || (dividerType == CY_SYSCLK_DIV_24_5_BIT
2027:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                  (dividerIntValue != NULL) && (dividerFracValue != NULL));
2028:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2029:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if (dividerType == CY_SYSCLK_DIV_16_5_BIT)
2030:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
2031:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         CY_ASSERT_L1(dividerNum < PERI_DIV_16_5_NR);
2032:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         *dividerIntValue  = _FLD2VAL(PERI_DIV_16_5_CTL_INT16_DIV, PERI_DIV_16_5_CTL[dividerNum]);
2033:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         *dividerFracValue = _FLD2VAL(PERI_DIV_16_5_CTL_FRAC5_DIV, PERI_DIV_16_5_CTL[dividerNum]);
2034:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
2035:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     else
2036:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     { /* 24.5-bit divider */
2037:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         CY_ASSERT_L1(dividerNum < PERI_DIV_24_5_NR);
2038:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         *dividerIntValue  = _FLD2VAL(PERI_DIV_24_5_CTL_INT24_DIV, PERI_DIV_24_5_CTL[dividerNum]);
2039:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         *dividerFracValue = _FLD2VAL(PERI_DIV_24_5_CTL_FRAC5_DIV, PERI_DIV_24_5_CTL[dividerNum]);
2040:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
2041:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
2042:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2043:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
2044:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PeriphAssignDivider
2045:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
2046:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2047:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Assigns a programmable divider to a selected IP block, such as a TCPWM or SCB.
2048:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2049:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param ipBlock specifies ip block to connect the clock divider to.
2050:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2051:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerType specifies which type of divider to use; \ref cy_en_divider_types_t
2052:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2053:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerNum specifies which divider of the selected type to configure
2054:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2055:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return \ref cy_en_sysclk_status_t
2056:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2057:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
2058:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_PeriphAssignDivider
2059:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2060:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
2061:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 129


2062:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                 Cy_SysClk_PeriphAssignDivider(en_clk_dst_t ipBlock,
2063:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                               cy_en_divider_types_t dividerType, uint32_t dividerNu
2064:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
2065:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_sysclk_status_t retVal = CY_SYSCLK_BAD_PARAM;
2066:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if ((CY_PERI_CLOCK_NR > (uint32_t)ipBlock) && (CY_SYSCLK_DIV_24_5_BIT >= dividerType))
2067:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
2068:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         if (((dividerType == CY_SYSCLK_DIV_8_BIT)    && (dividerNum < PERI_DIV_8_NR))    ||
2069:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             ((dividerType == CY_SYSCLK_DIV_16_BIT)   && (dividerNum < PERI_DIV_16_NR))   ||
2070:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             ((dividerType == CY_SYSCLK_DIV_16_5_BIT) && (dividerNum < PERI_DIV_16_5_NR)) ||
2071:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             ((dividerType == CY_SYSCLK_DIV_24_5_BIT) && (dividerNum < PERI_DIV_24_5_NR)))
2072:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         {
2073:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             PERI_CLOCK_CTL[ipBlock] = _VAL2FLD(CY_PERI_CLOCK_CTL_TYPE_SEL, dividerType) |
2074:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                       _VAL2FLD(CY_PERI_CLOCK_CTL_DIV_SEL, dividerNum);
2075:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             retVal = CY_SYSCLK_SUCCESS;
2076:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         }
2077:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
2078:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (retVal);
2079:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
2080:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2081:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
2082:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PeriphGetAssignedDivider
2083:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
2084:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2085:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Reports which clock divider is assigned to a selected IP block.
2086:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2087:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param ipBlock specifies ip block to connect the clock divider to.
2088:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2089:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return The divider type and number, where bits [7:6] = type, bits[5:0] = divider
2090:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * number within that type
2091:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2092:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
2093:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_PeriphAssignDivider
2094:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2095:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
2096:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint32_t Cy_SysClk_PeriphGetAssignedDivider(en_clk_dst_t ipBlock)
2097:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
2098:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_ASSERT_L1(CY_PERI_CLOCK_NR > (uint32_t)ipBlock);
2099:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (PERI_CLOCK_CTL[ipBlock] & (CY_PERI_CLOCK_CTL_DIV_SEL_Msk | CY_PERI_CLOCK_CTL_TYPE_SEL_M
2100:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
2101:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2102:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
2103:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PeriphEnableDivider
2104:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
2105:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2106:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Enables the selected divider.
2107:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2108:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerType specifies which type of divider to use; \ref cy_en_divider_types_t
2109:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2110:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerNum specifies which divider of the selected type to configure
2111:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2112:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note This function also sets the phase alignment bits such that the enabled
2113:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * divider is aligned to clk_peri. See \ref Cy_SysClk_PeriphDisableDivider()
2114:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * for information on how to phase-align a divider after it is enabled.
2115:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2116:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
2117:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_PeriphEnableDivider
2118:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 130


2119:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
2120:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t
2121:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                 Cy_SysClk_PeriphEnableDivider(cy_en_divider_types_t dividerType, uint32_t dividerNu
2122:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 521              		.loc 4 2122 0
 522              		.cfi_startproc
 523              		@ args = 0, pretend = 0, frame = 16
 524              		@ frame_needed = 1, uses_anonymous_args = 0
 525              		@ link register save eliminated.
 526 0000 90B4     		push	{r4, r7}
 527              		.cfi_def_cfa_offset 8
 528              		.cfi_offset 4, -8
 529              		.cfi_offset 7, -4
 530 0002 84B0     		sub	sp, sp, #16
 531              		.cfi_def_cfa_offset 24
 532 0004 00AF     		add	r7, sp, #0
 533              		.cfi_def_cfa_register 7
 534 0006 0346     		mov	r3, r0
 535 0008 3960     		str	r1, [r7]
 536 000a FB71     		strb	r3, [r7, #7]
2123:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_sysclk_status_t retVal = CY_SYSCLK_BAD_PARAM;
 537              		.loc 4 2123 0
 538 000c 2E4B     		ldr	r3, .L37
 539 000e FB60     		str	r3, [r7, #12]
2124:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if (dividerType <= CY_SYSCLK_DIV_24_5_BIT)
 540              		.loc 4 2124 0
 541 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 542 0012 032B     		cmp	r3, #3
 543 0014 52D8     		bhi	.L31
2125:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
2126:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         if (((dividerType == CY_SYSCLK_DIV_8_BIT)    && (dividerNum < PERI_DIV_8_NR))    ||
 544              		.loc 4 2126 0
 545 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 546 0018 002B     		cmp	r3, #0
 547 001a 02D1     		bne	.L32
 548              		.loc 4 2126 0 is_stmt 0 discriminator 1
 549 001c 3B68     		ldr	r3, [r7]
 550 001e 072B     		cmp	r3, #7
 551 0020 11D9     		bls	.L33
 552              	.L32:
 553              		.loc 4 2126 0 discriminator 3
 554 0022 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 555 0024 012B     		cmp	r3, #1
 556 0026 02D1     		bne	.L34
2127:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             ((dividerType == CY_SYSCLK_DIV_16_BIT)   && (dividerNum < PERI_DIV_16_NR))   ||
 557              		.loc 4 2127 0 is_stmt 1
 558 0028 3B68     		ldr	r3, [r7]
 559 002a 0F2B     		cmp	r3, #15
 560 002c 0BD9     		bls	.L33
 561              	.L34:
 562              		.loc 4 2127 0 is_stmt 0 discriminator 1
 563 002e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 564 0030 022B     		cmp	r3, #2
 565 0032 02D1     		bne	.L35
2128:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             ((dividerType == CY_SYSCLK_DIV_16_5_BIT) && (dividerNum < PERI_DIV_16_5_NR)) ||
 566              		.loc 4 2128 0 is_stmt 1
 567 0034 3B68     		ldr	r3, [r7]
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 131


 568 0036 032B     		cmp	r3, #3
 569 0038 05D9     		bls	.L33
 570              	.L35:
 571              		.loc 4 2128 0 is_stmt 0 discriminator 1
 572 003a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 573 003c 032B     		cmp	r3, #3
 574 003e 3DD1     		bne	.L31
2129:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             ((dividerType == CY_SYSCLK_DIV_24_5_BIT) && (dividerNum < PERI_DIV_24_5_NR)))
 575              		.loc 4 2129 0 is_stmt 1
 576 0040 3B68     		ldr	r3, [r7]
 577 0042 002B     		cmp	r3, #0
 578 0044 3AD1     		bne	.L31
 579              	.L33:
2130:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         {
2131:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             /* specify the divider, make the reference = clk_peri, and enable the divider */
2132:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             PERI_DIV_CMD = PERI_DIV_CMD_ENABLE_Msk                         |
 580              		.loc 4 2132 0
 581 0046 214B     		ldr	r3, .L37+4
 582 0048 1B68     		ldr	r3, [r3]
 583 004a 9B68     		ldr	r3, [r3, #8]
 584 004c 1846     		mov	r0, r3
2133:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                            CY_PERI_DIV_CMD_PA_TYPE_SEL_Msk                 |
 585              		.loc 4 2133 0
 586 004e 1F4B     		ldr	r3, .L37+4
 587 0050 1B68     		ldr	r3, [r3]
 588 0052 93F87330 		ldrb	r3, [r3, #115]	@ zero_extendqisi2
 589 0056 1A46     		mov	r2, r3
 590 0058 0323     		movs	r3, #3
 591 005a 03FA02F2 		lsl	r2, r3, r2
2134:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                            CY_PERI_DIV_CMD_PA_DIV_SEL_Msk                  |
 592              		.loc 4 2134 0
 593 005e 1B4B     		ldr	r3, .L37+4
 594 0060 1B68     		ldr	r3, [r3]
 595 0062 93F87030 		ldrb	r3, [r3, #112]	@ zero_extendqisi2
 596 0066 1946     		mov	r1, r3
 597 0068 184B     		ldr	r3, .L37+4
 598 006a 1B68     		ldr	r3, [r3]
 599 006c 93F87230 		ldrb	r3, [r3, #114]	@ zero_extendqisi2
 600 0070 01FA03F3 		lsl	r3, r1, r3
2133:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                            CY_PERI_DIV_CMD_PA_TYPE_SEL_Msk                 |
 601              		.loc 4 2133 0
 602 0074 1A43     		orrs	r2, r2, r3
2135:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                            _VAL2FLD(CY_PERI_DIV_CMD_TYPE_SEL, dividerType) |
 603              		.loc 4 2135 0
 604 0076 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 605 0078 1449     		ldr	r1, .L37+4
 606 007a 0968     		ldr	r1, [r1]
 607 007c 91F87110 		ldrb	r1, [r1, #113]	@ zero_extendqisi2
 608 0080 03FA01F1 		lsl	r1, r3, r1
 609 0084 114B     		ldr	r3, .L37+4
 610 0086 1B68     		ldr	r3, [r3]
 611 0088 93F87130 		ldrb	r3, [r3, #113]	@ zero_extendqisi2
 612 008c 1C46     		mov	r4, r3
 613 008e 0323     		movs	r3, #3
 614 0090 A340     		lsls	r3, r3, r4
 615 0092 0B40     		ands	r3, r3, r1
2134:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                            CY_PERI_DIV_CMD_PA_DIV_SEL_Msk                  |
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 132


 616              		.loc 4 2134 0
 617 0094 1A43     		orrs	r2, r2, r3
2136:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                            _VAL2FLD(CY_PERI_DIV_CMD_DIV_SEL,  dividerNum);
 618              		.loc 4 2136 0
 619 0096 0D4B     		ldr	r3, .L37+4
 620 0098 1B68     		ldr	r3, [r3]
 621 009a 93F87030 		ldrb	r3, [r3, #112]	@ zero_extendqisi2
 622 009e 1946     		mov	r1, r3
 623 00a0 3B68     		ldr	r3, [r7]
 624 00a2 0B40     		ands	r3, r3, r1
2135:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                            _VAL2FLD(CY_PERI_DIV_CMD_TYPE_SEL, dividerType) |
 625              		.loc 4 2135 0
 626 00a4 1343     		orrs	r3, r3, r2
 627 00a6 43F00043 		orr	r3, r3, #-2147483648
2132:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                            CY_PERI_DIV_CMD_PA_TYPE_SEL_Msk                 |
 628              		.loc 4 2132 0
 629 00aa C0F80034 		str	r3, [r0, #1024]
2137:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             (void)PERI_DIV_CMD; /* dummy read to handle buffered writes */
 630              		.loc 4 2137 0
 631 00ae 074B     		ldr	r3, .L37+4
 632 00b0 1B68     		ldr	r3, [r3]
 633 00b2 9B68     		ldr	r3, [r3, #8]
 634 00b4 D3F80034 		ldr	r3, [r3, #1024]
2138:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             retVal = CY_SYSCLK_SUCCESS;
 635              		.loc 4 2138 0
 636 00b8 0023     		movs	r3, #0
 637 00ba FB60     		str	r3, [r7, #12]
 638              	.L31:
2139:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         }
2140:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
2141:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (retVal);
 639              		.loc 4 2141 0
 640 00bc FB68     		ldr	r3, [r7, #12]
2142:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
 641              		.loc 4 2142 0
 642 00be 1846     		mov	r0, r3
 643 00c0 1037     		adds	r7, r7, #16
 644              		.cfi_def_cfa_offset 8
 645 00c2 BD46     		mov	sp, r7
 646              		.cfi_def_cfa_register 13
 647              		@ sp needed
 648 00c4 90BC     		pop	{r4, r7}
 649              		.cfi_restore 7
 650              		.cfi_restore 4
 651              		.cfi_def_cfa_offset 0
 652 00c6 7047     		bx	lr
 653              	.L38:
 654              		.align	2
 655              	.L37:
 656 00c8 01004A00 		.word	4849665
 657 00cc 00000000 		.word	cy_device
 658              		.cfi_endproc
 659              	.LFE227:
 660              		.size	Cy_SysClk_PeriphEnableDivider, .-Cy_SysClk_PeriphEnableDivider
 661              		.section	.text.Cy_SysClk_PeriphDisableDivider,"ax",%progbits
 662              		.align	2
 663              		.thumb
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 133


 664              		.thumb_func
 665              		.type	Cy_SysClk_PeriphDisableDivider, %function
 666              	Cy_SysClk_PeriphDisableDivider:
 667              	.LFB228:
2143:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2144:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
2145:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PeriphDisableDivider
2146:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
2147:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2148:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Disables a selected divider.
2149:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2150:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerType specifies which type of divider to use; \ref cy_en_divider_types_t.
2151:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2152:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerNum specifies which divider of the selected type to configure.
2153:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2154:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
2155:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_PeriphDisableDivider
2156:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2157:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
2158:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t
2159:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                 Cy_SysClk_PeriphDisableDivider(cy_en_divider_types_t dividerType, uint32_t dividerN
2160:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 668              		.loc 4 2160 0
 669              		.cfi_startproc
 670              		@ args = 0, pretend = 0, frame = 16
 671              		@ frame_needed = 1, uses_anonymous_args = 0
 672              		@ link register save eliminated.
 673 0000 80B4     		push	{r7}
 674              		.cfi_def_cfa_offset 4
 675              		.cfi_offset 7, -4
 676 0002 85B0     		sub	sp, sp, #20
 677              		.cfi_def_cfa_offset 24
 678 0004 00AF     		add	r7, sp, #0
 679              		.cfi_def_cfa_register 7
 680 0006 0346     		mov	r3, r0
 681 0008 3960     		str	r1, [r7]
 682 000a FB71     		strb	r3, [r7, #7]
2161:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_sysclk_status_t retVal = CY_SYSCLK_BAD_PARAM;
 683              		.loc 4 2161 0
 684 000c 224B     		ldr	r3, .L46
 685 000e FB60     		str	r3, [r7, #12]
2162:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if (dividerType <= CY_SYSCLK_DIV_24_5_BIT)
 686              		.loc 4 2162 0
 687 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 688 0012 032B     		cmp	r3, #3
 689 0014 38D8     		bhi	.L40
2163:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
2164:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         if (((dividerType == CY_SYSCLK_DIV_8_BIT)    && (dividerNum < PERI_DIV_8_NR))    ||
 690              		.loc 4 2164 0
 691 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 692 0018 002B     		cmp	r3, #0
 693 001a 02D1     		bne	.L41
 694              		.loc 4 2164 0 is_stmt 0 discriminator 1
 695 001c 3B68     		ldr	r3, [r7]
 696 001e 072B     		cmp	r3, #7
 697 0020 11D9     		bls	.L42
 698              	.L41:
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 134


 699              		.loc 4 2164 0 discriminator 3
 700 0022 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 701 0024 012B     		cmp	r3, #1
 702 0026 02D1     		bne	.L43
2165:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             ((dividerType == CY_SYSCLK_DIV_16_BIT)   && (dividerNum < PERI_DIV_16_NR))   ||
 703              		.loc 4 2165 0 is_stmt 1
 704 0028 3B68     		ldr	r3, [r7]
 705 002a 0F2B     		cmp	r3, #15
 706 002c 0BD9     		bls	.L42
 707              	.L43:
 708              		.loc 4 2165 0 is_stmt 0 discriminator 1
 709 002e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 710 0030 022B     		cmp	r3, #2
 711 0032 02D1     		bne	.L44
2166:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             ((dividerType == CY_SYSCLK_DIV_16_5_BIT) && (dividerNum < PERI_DIV_16_5_NR)) ||
 712              		.loc 4 2166 0 is_stmt 1
 713 0034 3B68     		ldr	r3, [r7]
 714 0036 032B     		cmp	r3, #3
 715 0038 05D9     		bls	.L42
 716              	.L44:
 717              		.loc 4 2166 0 is_stmt 0 discriminator 1
 718 003a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 719 003c 032B     		cmp	r3, #3
 720 003e 23D1     		bne	.L40
2167:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             ((dividerType == CY_SYSCLK_DIV_24_5_BIT) && (dividerNum < PERI_DIV_24_5_NR)))
 721              		.loc 4 2167 0 is_stmt 1
 722 0040 3B68     		ldr	r3, [r7]
 723 0042 002B     		cmp	r3, #0
 724 0044 20D1     		bne	.L40
 725              	.L42:
2168:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         {
2169:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             /* specify the divider and disable it */
2170:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             PERI_DIV_CMD = PERI_DIV_CMD_DISABLE_Msk          |
 726              		.loc 4 2170 0
 727 0046 154B     		ldr	r3, .L46+4
 728 0048 1B68     		ldr	r3, [r3]
 729 004a 9B68     		ldr	r3, [r3, #8]
 730 004c 1946     		mov	r1, r3
2171:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****              _VAL2FLD(CY_PERI_DIV_CMD_TYPE_SEL, dividerType) |
 731              		.loc 4 2171 0
 732 004e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 733 0050 124A     		ldr	r2, .L46+4
 734 0052 1268     		ldr	r2, [r2]
 735 0054 92F87120 		ldrb	r2, [r2, #113]	@ zero_extendqisi2
 736 0058 03FA02F2 		lsl	r2, r3, r2
 737 005c 0F4B     		ldr	r3, .L46+4
 738 005e 1B68     		ldr	r3, [r3]
 739 0060 93F87130 		ldrb	r3, [r3, #113]	@ zero_extendqisi2
 740 0064 1846     		mov	r0, r3
 741 0066 0323     		movs	r3, #3
 742 0068 8340     		lsls	r3, r3, r0
 743 006a 1A40     		ands	r2, r2, r3
2172:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****              _VAL2FLD(CY_PERI_DIV_CMD_DIV_SEL,  dividerNum);
 744              		.loc 4 2172 0
 745 006c 0B4B     		ldr	r3, .L46+4
 746 006e 1B68     		ldr	r3, [r3]
 747 0070 93F87030 		ldrb	r3, [r3, #112]	@ zero_extendqisi2
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 135


 748 0074 1846     		mov	r0, r3
 749 0076 3B68     		ldr	r3, [r7]
 750 0078 0340     		ands	r3, r3, r0
2171:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****              _VAL2FLD(CY_PERI_DIV_CMD_TYPE_SEL, dividerType) |
 751              		.loc 4 2171 0
 752 007a 1343     		orrs	r3, r3, r2
 753 007c 43F08043 		orr	r3, r3, #1073741824
2170:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****              _VAL2FLD(CY_PERI_DIV_CMD_TYPE_SEL, dividerType) |
 754              		.loc 4 2170 0
 755 0080 C1F80034 		str	r3, [r1, #1024]
2173:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             retVal = CY_SYSCLK_SUCCESS;
 756              		.loc 4 2173 0
 757 0084 0023     		movs	r3, #0
 758 0086 FB60     		str	r3, [r7, #12]
 759              	.L40:
2174:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         }
2175:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
2176:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (retVal);
 760              		.loc 4 2176 0
 761 0088 FB68     		ldr	r3, [r7, #12]
2177:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
 762              		.loc 4 2177 0
 763 008a 1846     		mov	r0, r3
 764 008c 1437     		adds	r7, r7, #20
 765              		.cfi_def_cfa_offset 4
 766 008e BD46     		mov	sp, r7
 767              		.cfi_def_cfa_register 13
 768              		@ sp needed
 769 0090 5DF8047B 		ldr	r7, [sp], #4
 770              		.cfi_restore 7
 771              		.cfi_def_cfa_offset 0
 772 0094 7047     		bx	lr
 773              	.L47:
 774 0096 00BF     		.align	2
 775              	.L46:
 776 0098 01004A00 		.word	4849665
 777 009c 00000000 		.word	cy_device
 778              		.cfi_endproc
 779              	.LFE228:
 780              		.size	Cy_SysClk_PeriphDisableDivider, .-Cy_SysClk_PeriphDisableDivider
 781              		.section	.text.ADC_1_intSarClock_Enable,"ax",%progbits
 782              		.align	2
 783              		.thumb
 784              		.thumb_func
 785              		.type	ADC_1_intSarClock_Enable, %function
 786              	ADC_1_intSarClock_Enable:
 787              	.LFB249:
 788              		.file 5 "Generated_Source\\PSoC6\\ADC_1_intSarClock.h"
   1:Generated_Source\PSoC6/ADC_1_intSarClock.h **** /***************************************************************************//**
   2:Generated_Source\PSoC6/ADC_1_intSarClock.h **** * \file     ADC_1_intSarClock.h
   3:Generated_Source\PSoC6/ADC_1_intSarClock.h **** * \version  1.0
   4:Generated_Source\PSoC6/ADC_1_intSarClock.h **** *
   5:Generated_Source\PSoC6/ADC_1_intSarClock.h **** * \brief
   6:Generated_Source\PSoC6/ADC_1_intSarClock.h **** * Provides the source code to the API for the ADC_1_intSarClock Component.
   7:Generated_Source\PSoC6/ADC_1_intSarClock.h **** *
   8:Generated_Source\PSoC6/ADC_1_intSarClock.h **** ********************************************************************************
   9:Generated_Source\PSoC6/ADC_1_intSarClock.h **** * \copyright
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 136


  10:Generated_Source\PSoC6/ADC_1_intSarClock.h **** * Copyright 2015, Cypress Semiconductor Corporation. All rights reserved.
  11:Generated_Source\PSoC6/ADC_1_intSarClock.h **** * You may use this file only in accordance with the license, terms, conditions,
  12:Generated_Source\PSoC6/ADC_1_intSarClock.h **** * disclaimers, and limitations in the end user license agreement accompanying
  13:Generated_Source\PSoC6/ADC_1_intSarClock.h **** * the software package with which this file was provided.
  14:Generated_Source\PSoC6/ADC_1_intSarClock.h **** *******************************************************************************/
  15:Generated_Source\PSoC6/ADC_1_intSarClock.h **** 
  16:Generated_Source\PSoC6/ADC_1_intSarClock.h **** #if !defined(CY_ADC_1_intSarClock_NAME_ADC_1_intSarClock_H)
  17:Generated_Source\PSoC6/ADC_1_intSarClock.h **** #define CY_ADC_1_intSarClock_NAME_ADC_1_intSarClock_H
  18:Generated_Source\PSoC6/ADC_1_intSarClock.h **** 
  19:Generated_Source\PSoC6/ADC_1_intSarClock.h **** /* For _DIV_TYPE and _DIV_NUM #defines */
  20:Generated_Source\PSoC6/ADC_1_intSarClock.h **** #include "cyfitter.h"
  21:Generated_Source\PSoC6/ADC_1_intSarClock.h **** 
  22:Generated_Source\PSoC6/ADC_1_intSarClock.h **** /* makes uint32_t defined */
  23:Generated_Source\PSoC6/ADC_1_intSarClock.h **** #include <stdint.h>
  24:Generated_Source\PSoC6/ADC_1_intSarClock.h **** 
  25:Generated_Source\PSoC6/ADC_1_intSarClock.h **** #include "sysclk/cy_sysclk.h"
  26:Generated_Source\PSoC6/ADC_1_intSarClock.h **** 
  27:Generated_Source\PSoC6/ADC_1_intSarClock.h **** /***************************************
  28:Generated_Source\PSoC6/ADC_1_intSarClock.h **** * Preprocessor Macros
  29:Generated_Source\PSoC6/ADC_1_intSarClock.h **** ***************************************/
  30:Generated_Source\PSoC6/ADC_1_intSarClock.h **** /**
  31:Generated_Source\PSoC6/ADC_1_intSarClock.h **** * \addtogroup group_macros
  32:Generated_Source\PSoC6/ADC_1_intSarClock.h **** * @{
  33:Generated_Source\PSoC6/ADC_1_intSarClock.h **** */
  34:Generated_Source\PSoC6/ADC_1_intSarClock.h **** /** The peripheral clock divider number */
  35:Generated_Source\PSoC6/ADC_1_intSarClock.h **** #define ADC_1_intSarClock_DIV_NUM ((uint32_t)ADC_1_intSarClock__DIV_NUM)
  36:Generated_Source\PSoC6/ADC_1_intSarClock.h **** /** The peripheral clock divider type */
  37:Generated_Source\PSoC6/ADC_1_intSarClock.h **** #define ADC_1_intSarClock_DIV_TYPE ((cy_en_divider_types_t)ADC_1_intSarClock__DIV_TYPE)
  38:Generated_Source\PSoC6/ADC_1_intSarClock.h **** /** @} group_macros */
  39:Generated_Source\PSoC6/ADC_1_intSarClock.h **** 
  40:Generated_Source\PSoC6/ADC_1_intSarClock.h **** /***************************************
  41:Generated_Source\PSoC6/ADC_1_intSarClock.h **** * Function Prototypes
  42:Generated_Source\PSoC6/ADC_1_intSarClock.h **** ***************************************/
  43:Generated_Source\PSoC6/ADC_1_intSarClock.h **** 
  44:Generated_Source\PSoC6/ADC_1_intSarClock.h **** /**
  45:Generated_Source\PSoC6/ADC_1_intSarClock.h **** * \addtogroup group_general
  46:Generated_Source\PSoC6/ADC_1_intSarClock.h **** * @{
  47:Generated_Source\PSoC6/ADC_1_intSarClock.h **** */
  48:Generated_Source\PSoC6/ADC_1_intSarClock.h **** 
  49:Generated_Source\PSoC6/ADC_1_intSarClock.h **** /*******************************************************************************
  50:Generated_Source\PSoC6/ADC_1_intSarClock.h **** * Function Name: ADC_1_intSarClock_Enable
  51:Generated_Source\PSoC6/ADC_1_intSarClock.h **** ****************************************************************************//**
  52:Generated_Source\PSoC6/ADC_1_intSarClock.h **** *
  53:Generated_Source\PSoC6/ADC_1_intSarClock.h **** * Enables the programmable clock divider assigned to this Component.
  54:Generated_Source\PSoC6/ADC_1_intSarClock.h **** *
  55:Generated_Source\PSoC6/ADC_1_intSarClock.h **** * \param None
  56:Generated_Source\PSoC6/ADC_1_intSarClock.h **** *
  57:Generated_Source\PSoC6/ADC_1_intSarClock.h **** * \return None
  58:Generated_Source\PSoC6/ADC_1_intSarClock.h **** *
  59:Generated_Source\PSoC6/ADC_1_intSarClock.h **** *******************************************************************************/
  60:Generated_Source\PSoC6/ADC_1_intSarClock.h **** __STATIC_INLINE void ADC_1_intSarClock_Enable(void)
  61:Generated_Source\PSoC6/ADC_1_intSarClock.h **** {
 789              		.loc 5 61 0
 790              		.cfi_startproc
 791              		@ args = 0, pretend = 0, frame = 0
 792              		@ frame_needed = 1, uses_anonymous_args = 0
 793 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 137


 794              		.cfi_def_cfa_offset 8
 795              		.cfi_offset 7, -8
 796              		.cfi_offset 14, -4
 797 0002 00AF     		add	r7, sp, #0
 798              		.cfi_def_cfa_register 7
  62:Generated_Source\PSoC6/ADC_1_intSarClock.h ****     (void)Cy_SysClk_PeriphEnableDivider(ADC_1_intSarClock_DIV_TYPE, ADC_1_intSarClock_DIV_NUM);
 799              		.loc 5 62 0
 800 0004 0121     		movs	r1, #1
 801 0006 0020     		movs	r0, #0
 802 0008 FFF7FEFF 		bl	Cy_SysClk_PeriphEnableDivider
  63:Generated_Source\PSoC6/ADC_1_intSarClock.h **** }
 803              		.loc 5 63 0
 804 000c 00BF     		nop
 805 000e 80BD     		pop	{r7, pc}
 806              		.cfi_endproc
 807              	.LFE249:
 808              		.size	ADC_1_intSarClock_Enable, .-ADC_1_intSarClock_Enable
 809              		.section	.text.ADC_1_intSarClock_Disable,"ax",%progbits
 810              		.align	2
 811              		.thumb
 812              		.thumb_func
 813              		.type	ADC_1_intSarClock_Disable, %function
 814              	ADC_1_intSarClock_Disable:
 815              	.LFB250:
  64:Generated_Source\PSoC6/ADC_1_intSarClock.h **** 
  65:Generated_Source\PSoC6/ADC_1_intSarClock.h **** /*******************************************************************************
  66:Generated_Source\PSoC6/ADC_1_intSarClock.h **** * Function Name: ADC_1_intSarClock_Disable
  67:Generated_Source\PSoC6/ADC_1_intSarClock.h **** ****************************************************************************//**
  68:Generated_Source\PSoC6/ADC_1_intSarClock.h **** *
  69:Generated_Source\PSoC6/ADC_1_intSarClock.h **** * Disables the programmable clock divider assigned to this Component.
  70:Generated_Source\PSoC6/ADC_1_intSarClock.h **** *
  71:Generated_Source\PSoC6/ADC_1_intSarClock.h **** * \param None
  72:Generated_Source\PSoC6/ADC_1_intSarClock.h **** *
  73:Generated_Source\PSoC6/ADC_1_intSarClock.h **** * \return None
  74:Generated_Source\PSoC6/ADC_1_intSarClock.h **** *
  75:Generated_Source\PSoC6/ADC_1_intSarClock.h **** *******************************************************************************/
  76:Generated_Source\PSoC6/ADC_1_intSarClock.h **** __STATIC_INLINE void ADC_1_intSarClock_Disable(void)
  77:Generated_Source\PSoC6/ADC_1_intSarClock.h **** {
 816              		.loc 5 77 0
 817              		.cfi_startproc
 818              		@ args = 0, pretend = 0, frame = 0
 819              		@ frame_needed = 1, uses_anonymous_args = 0
 820 0000 80B5     		push	{r7, lr}
 821              		.cfi_def_cfa_offset 8
 822              		.cfi_offset 7, -8
 823              		.cfi_offset 14, -4
 824 0002 00AF     		add	r7, sp, #0
 825              		.cfi_def_cfa_register 7
  78:Generated_Source\PSoC6/ADC_1_intSarClock.h ****     (void)Cy_SysClk_PeriphDisableDivider(ADC_1_intSarClock_DIV_TYPE, ADC_1_intSarClock_DIV_NUM);
 826              		.loc 5 78 0
 827 0004 0121     		movs	r1, #1
 828 0006 0020     		movs	r0, #0
 829 0008 FFF7FEFF 		bl	Cy_SysClk_PeriphDisableDivider
  79:Generated_Source\PSoC6/ADC_1_intSarClock.h **** }
 830              		.loc 5 79 0
 831 000c 00BF     		nop
 832 000e 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 138


 833              		.cfi_endproc
 834              	.LFE250:
 835              		.size	ADC_1_intSarClock_Disable, .-ADC_1_intSarClock_Disable
 836              		.section	.text.ADC_1_intSarClock_SetDivider,"ax",%progbits
 837              		.align	2
 838              		.thumb
 839              		.thumb_func
 840              		.type	ADC_1_intSarClock_SetDivider, %function
 841              	ADC_1_intSarClock_SetDivider:
 842              	.LFB251:
  80:Generated_Source\PSoC6/ADC_1_intSarClock.h **** 
  81:Generated_Source\PSoC6/ADC_1_intSarClock.h **** /*******************************************************************************
  82:Generated_Source\PSoC6/ADC_1_intSarClock.h **** * Function Name: ADC_1_intSarClock_SetDivider
  83:Generated_Source\PSoC6/ADC_1_intSarClock.h **** ****************************************************************************//**
  84:Generated_Source\PSoC6/ADC_1_intSarClock.h **** *
  85:Generated_Source\PSoC6/ADC_1_intSarClock.h **** * Sets the value of a programmable clock divider assigned to this Component.
  86:Generated_Source\PSoC6/ADC_1_intSarClock.h **** * This is only used for integer dividers. Use ADC_1_intSarClock_SetFracDivider()
  87:Generated_Source\PSoC6/ADC_1_intSarClock.h **** * for setting factional dividers.
  88:Generated_Source\PSoC6/ADC_1_intSarClock.h **** *
  89:Generated_Source\PSoC6/ADC_1_intSarClock.h **** * \param dividerValue
  90:Generated_Source\PSoC6/ADC_1_intSarClock.h **** * The divider value. The source of the divider is peri_clk which is a divided
  91:Generated_Source\PSoC6/ADC_1_intSarClock.h **** * version of hf_clk[0]. The divider value causes integer division of
  92:Generated_Source\PSoC6/ADC_1_intSarClock.h **** * (divider value + 1), or division by 1 to 256 (8-bit divider) or
  93:Generated_Source\PSoC6/ADC_1_intSarClock.h **** * 1 to 65536 (16-bit divider).
  94:Generated_Source\PSoC6/ADC_1_intSarClock.h **** *
  95:Generated_Source\PSoC6/ADC_1_intSarClock.h **** * \return None
  96:Generated_Source\PSoC6/ADC_1_intSarClock.h **** *
  97:Generated_Source\PSoC6/ADC_1_intSarClock.h **** *******************************************************************************/
  98:Generated_Source\PSoC6/ADC_1_intSarClock.h **** __STATIC_INLINE void ADC_1_intSarClock_SetDivider(uint32_t dividerValue)
  99:Generated_Source\PSoC6/ADC_1_intSarClock.h **** {
 843              		.loc 5 99 0
 844              		.cfi_startproc
 845              		@ args = 0, pretend = 0, frame = 8
 846              		@ frame_needed = 1, uses_anonymous_args = 0
 847 0000 80B5     		push	{r7, lr}
 848              		.cfi_def_cfa_offset 8
 849              		.cfi_offset 7, -8
 850              		.cfi_offset 14, -4
 851 0002 82B0     		sub	sp, sp, #8
 852              		.cfi_def_cfa_offset 16
 853 0004 00AF     		add	r7, sp, #0
 854              		.cfi_def_cfa_register 7
 855 0006 7860     		str	r0, [r7, #4]
 100:Generated_Source\PSoC6/ADC_1_intSarClock.h ****     (void)Cy_SysClk_PeriphSetDivider(ADC_1_intSarClock_DIV_TYPE, ADC_1_intSarClock_DIV_NUM, divider
 856              		.loc 5 100 0
 857 0008 7A68     		ldr	r2, [r7, #4]
 858 000a 0121     		movs	r1, #1
 859 000c 0020     		movs	r0, #0
 860 000e FFF7FEFF 		bl	Cy_SysClk_PeriphSetDivider
 101:Generated_Source\PSoC6/ADC_1_intSarClock.h **** }
 861              		.loc 5 101 0
 862 0012 00BF     		nop
 863 0014 0837     		adds	r7, r7, #8
 864              		.cfi_def_cfa_offset 8
 865 0016 BD46     		mov	sp, r7
 866              		.cfi_def_cfa_register 13
 867              		@ sp needed
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 139


 868 0018 80BD     		pop	{r7, pc}
 869              		.cfi_endproc
 870              	.LFE251:
 871              		.size	ADC_1_intSarClock_SetDivider, .-ADC_1_intSarClock_SetDivider
 872 001a 00BF     		.section	.text.ADC_1_Enable,"ax",%progbits
 873              		.align	2
 874              		.thumb
 875              		.thumb_func
 876              		.type	ADC_1_Enable, %function
 877              	ADC_1_Enable:
 878              	.LFB255:
 879              		.file 6 "Generated_Source\\PSoC6\\ADC_1.h"
   1:Generated_Source\PSoC6/ADC_1.h **** /***************************************************************************//**
   2:Generated_Source\PSoC6/ADC_1.h **** * \file     ADC_1.h
   3:Generated_Source\PSoC6/ADC_1.h **** * \version  3.10
   4:Generated_Source\PSoC6/ADC_1.h **** *
   5:Generated_Source\PSoC6/ADC_1.h **** * \brief
   6:Generated_Source\PSoC6/ADC_1.h **** * Provides the source code to the API for the ADC_1 Component.
   7:Generated_Source\PSoC6/ADC_1.h **** *
   8:Generated_Source\PSoC6/ADC_1.h **** ********************************************************************************
   9:Generated_Source\PSoC6/ADC_1.h **** * \copyright
  10:Generated_Source\PSoC6/ADC_1.h **** * (c) 2017-2018, Cypress Semiconductor Corporation. All rights reserved.
  11:Generated_Source\PSoC6/ADC_1.h **** * This software, including source code, documentation and related
  12:Generated_Source\PSoC6/ADC_1.h **** * materials ("Software"), is owned by Cypress Semiconductor
  13:Generated_Source\PSoC6/ADC_1.h **** * Corporation ("Cypress") and is protected by and subject to worldwide
  14:Generated_Source\PSoC6/ADC_1.h **** * patent protection (United States and foreign), United States copyright
  15:Generated_Source\PSoC6/ADC_1.h **** * laws and international treaty provisions. Therefore, you may use this
  16:Generated_Source\PSoC6/ADC_1.h **** * Software only as provided in the license agreement accompanying the
  17:Generated_Source\PSoC6/ADC_1.h **** * software package from which you obtained this Software ("EULA").
  18:Generated_Source\PSoC6/ADC_1.h **** * If no EULA applies, Cypress hereby grants you a personal, nonexclusive,
  19:Generated_Source\PSoC6/ADC_1.h **** * non-transferable license to copy, modify, and compile the
  20:Generated_Source\PSoC6/ADC_1.h **** * Software source code solely for use in connection with Cypress's
  21:Generated_Source\PSoC6/ADC_1.h **** * integrated circuit products. Any reproduction, modification, translation,
  22:Generated_Source\PSoC6/ADC_1.h **** * compilation, or representation of this Software except as specified
  23:Generated_Source\PSoC6/ADC_1.h **** * above is prohibited without the express written permission of Cypress.
  24:Generated_Source\PSoC6/ADC_1.h **** * Disclaimer: THIS SOFTWARE IS PROVIDED AS-IS, WITH NO
  25:Generated_Source\PSoC6/ADC_1.h **** * WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING,
  26:Generated_Source\PSoC6/ADC_1.h **** * BUT NOT LIMITED TO, NONINFRINGEMENT, IMPLIED
  27:Generated_Source\PSoC6/ADC_1.h **** * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
  28:Generated_Source\PSoC6/ADC_1.h **** * PARTICULAR PURPOSE. Cypress reserves the right to make
  29:Generated_Source\PSoC6/ADC_1.h **** * changes to the Software without notice. Cypress does not assume any
  30:Generated_Source\PSoC6/ADC_1.h **** * liability arising out of the application or use of the Software or any
  31:Generated_Source\PSoC6/ADC_1.h **** * product or circuit described in the Software. Cypress does not
  32:Generated_Source\PSoC6/ADC_1.h **** * authorize its products for use in any products where a malfunction or
  33:Generated_Source\PSoC6/ADC_1.h **** * failure of the Cypress product may reasonably be expected to result in
  34:Generated_Source\PSoC6/ADC_1.h **** * significant property damage, injury or death ("High Risk Product"). By
  35:Generated_Source\PSoC6/ADC_1.h **** * including Cypress's product in a High Risk Product, the manufacturer
  36:Generated_Source\PSoC6/ADC_1.h **** * of such system or application assumes all risk of such use and in doing
  37:Generated_Source\PSoC6/ADC_1.h **** * so agrees to indemnify Cypress against all liability.
  38:Generated_Source\PSoC6/ADC_1.h **** *******************************************************************************/
  39:Generated_Source\PSoC6/ADC_1.h **** #if !defined(CY_ADC_1_H)
  40:Generated_Source\PSoC6/ADC_1.h **** #define CY_ADC_1_H
  41:Generated_Source\PSoC6/ADC_1.h **** 
  42:Generated_Source\PSoC6/ADC_1.h **** #include <cy_device_headers.h>
  43:Generated_Source\PSoC6/ADC_1.h **** #include <sar/cy_sar.h>
  44:Generated_Source\PSoC6/ADC_1.h **** 
  45:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_VREF_ROUTED                  ((0) == 1u)
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 140


  46:Generated_Source\PSoC6/ADC_1.h **** #if (ADC_1_VREF_ROUTED)
  47:Generated_Source\PSoC6/ADC_1.h **** #include "ADC_1_vrefAMux.h"
  48:Generated_Source\PSoC6/ADC_1.h **** #endif
  49:Generated_Source\PSoC6/ADC_1.h **** 
  50:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CLOCK_INTERNAL               ((1) == 1u)
  51:Generated_Source\PSoC6/ADC_1.h **** #if (ADC_1_CLOCK_INTERNAL)
  52:Generated_Source\PSoC6/ADC_1.h **** #include "ADC_1_intSarClock.h"
  53:Generated_Source\PSoC6/ADC_1.h **** #endif /* ADC_1_CLOCK_INTERNAL */
  54:Generated_Source\PSoC6/ADC_1.h **** 
  55:Generated_Source\PSoC6/ADC_1.h **** /**
  56:Generated_Source\PSoC6/ADC_1.h **** * \addtogroup group_structures
  57:Generated_Source\PSoC6/ADC_1.h **** *
  58:Generated_Source\PSoC6/ADC_1.h **** */
  59:Generated_Source\PSoC6/ADC_1.h **** typedef struct
  60:Generated_Source\PSoC6/ADC_1.h **** {
  61:Generated_Source\PSoC6/ADC_1.h ****     uint32_t channelBase;                   /* Start of channels for the configuration */
  62:Generated_Source\PSoC6/ADC_1.h ****     uint32_t numChannels;                   /* Number of channels in the configuration */
  63:Generated_Source\PSoC6/ADC_1.h ****     const cy_stc_sar_config_t *hwConfigStc; /* PDL structure */
  64:Generated_Source\PSoC6/ADC_1.h ****     uint32_t miscConfig;                    /* Miscellaneous configuration bits broken down as foll
  65:Generated_Source\PSoC6/ADC_1.h ****                                             [0] - Freerunning: Set if the sample mode is freerunnin
  66:Generated_Source\PSoC6/ADC_1.h ****                                             [2] - Mux Switch 0: Set when VSSA is used for the neg i
  67:Generated_Source\PSoC6/ADC_1.h ****                                             */
  68:Generated_Source\PSoC6/ADC_1.h **** #if (ADC_1_CLOCK_INTERNAL)
  69:Generated_Source\PSoC6/ADC_1.h ****     uint32_t clkDivider;                    /* Clock divider */
  70:Generated_Source\PSoC6/ADC_1.h **** #endif /* ADC_1_CLOCK_INTERNAL */
  71:Generated_Source\PSoC6/ADC_1.h **** 
  72:Generated_Source\PSoC6/ADC_1.h **** } ADC_1_CONFIG_STRUCT;
  73:Generated_Source\PSoC6/ADC_1.h **** /** @} structures */
  74:Generated_Source\PSoC6/ADC_1.h **** 
  75:Generated_Source\PSoC6/ADC_1.h **** /*******************************************************************************
  76:Generated_Source\PSoC6/ADC_1.h **** * Function Prototypes
  77:Generated_Source\PSoC6/ADC_1.h **** *******************************************************************************/
  78:Generated_Source\PSoC6/ADC_1.h **** void ADC_1_SelectConfig(uint32_t config, uint32_t restart);
  79:Generated_Source\PSoC6/ADC_1.h **** void ADC_1_InitConfig(const ADC_1_CONFIG_STRUCT *config);
  80:Generated_Source\PSoC6/ADC_1.h **** void ADC_1_Init(void);
  81:Generated_Source\PSoC6/ADC_1.h **** __STATIC_INLINE void ADC_1_Enable(void);
  82:Generated_Source\PSoC6/ADC_1.h **** 
  83:Generated_Source\PSoC6/ADC_1.h **** /**
  84:Generated_Source\PSoC6/ADC_1.h **** * \addtogroup group_general
  85:Generated_Source\PSoC6/ADC_1.h **** * @{
  86:Generated_Source\PSoC6/ADC_1.h **** */
  87:Generated_Source\PSoC6/ADC_1.h **** void ADC_1_Start(void);
  88:Generated_Source\PSoC6/ADC_1.h **** void ADC_1_StartEx(cy_israddress userIsr);
  89:Generated_Source\PSoC6/ADC_1.h **** __STATIC_INLINE void ADC_1_Stop(void);
  90:Generated_Source\PSoC6/ADC_1.h **** void ADC_1_StartConvert(void);
  91:Generated_Source\PSoC6/ADC_1.h **** __STATIC_INLINE void ADC_1_StopConvert(void);
  92:Generated_Source\PSoC6/ADC_1.h **** void ADC_1_SetConvertMode(cy_en_sar_start_convert_sel_t mode);
  93:Generated_Source\PSoC6/ADC_1.h **** void ADC_1_SetEosMask(uint32_t mask);
  94:Generated_Source\PSoC6/ADC_1.h **** uint32_t ADC_1_IsEndConversion(cy_en_sar_return_mode_t retMode);
  95:Generated_Source\PSoC6/ADC_1.h **** __STATIC_INLINE int16_t ADC_1_GetResult16(uint32_t chan);
  96:Generated_Source\PSoC6/ADC_1.h **** __STATIC_INLINE int32_t ADC_1_GetResult32(uint32_t chan);
  97:Generated_Source\PSoC6/ADC_1.h **** __STATIC_INLINE void ADC_1_SetLowLimit(uint32_t lowLimit);
  98:Generated_Source\PSoC6/ADC_1.h **** __STATIC_INLINE void ADC_1_SetHighLimit(uint32_t highLimit);
  99:Generated_Source\PSoC6/ADC_1.h **** __STATIC_INLINE void ADC_1_SetLimitMask(uint32_t limitMask);
 100:Generated_Source\PSoC6/ADC_1.h **** __STATIC_INLINE void ADC_1_SetSatMask(uint32_t satMask);
 101:Generated_Source\PSoC6/ADC_1.h **** __STATIC_INLINE cy_en_sar_status_t ADC_1_SetOffset(uint32_t chan, int16_t offset);
 102:Generated_Source\PSoC6/ADC_1.h **** __STATIC_INLINE cy_en_sar_status_t ADC_1_SetGain(uint32_t chan, int32_t adcGain);
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 141


 103:Generated_Source\PSoC6/ADC_1.h **** __STATIC_INLINE float32_t ADC_1_CountsTo_Volts(uint32_t chan, int16_t adcCounts);
 104:Generated_Source\PSoC6/ADC_1.h **** __STATIC_INLINE int16_t ADC_1_CountsTo_mVolts(uint32_t chan, int16_t adcCounts);
 105:Generated_Source\PSoC6/ADC_1.h **** __STATIC_INLINE int32_t ADC_1_CountsTo_uVolts(uint32_t chan, int16_t adcCounts);
 106:Generated_Source\PSoC6/ADC_1.h **** 
 107:Generated_Source\PSoC6/ADC_1.h **** /** @} general */
 108:Generated_Source\PSoC6/ADC_1.h **** 
 109:Generated_Source\PSoC6/ADC_1.h **** void ADC_1_SetChanMask(uint32_t enableMask);
 110:Generated_Source\PSoC6/ADC_1.h **** 
 111:Generated_Source\PSoC6/ADC_1.h **** /**
 112:Generated_Source\PSoC6/ADC_1.h **** * \addtogroup group_power
 113:Generated_Source\PSoC6/ADC_1.h **** * @{
 114:Generated_Source\PSoC6/ADC_1.h **** */
 115:Generated_Source\PSoC6/ADC_1.h **** __STATIC_INLINE void ADC_1_Sleep(void);
 116:Generated_Source\PSoC6/ADC_1.h **** __STATIC_INLINE void ADC_1_Wakeup(void);
 117:Generated_Source\PSoC6/ADC_1.h **** 
 118:Generated_Source\PSoC6/ADC_1.h **** /** @} power */
 119:Generated_Source\PSoC6/ADC_1.h **** 
 120:Generated_Source\PSoC6/ADC_1.h **** /**
 121:Generated_Source\PSoC6/ADC_1.h **** * \addtogroup group_interrupt
 122:Generated_Source\PSoC6/ADC_1.h **** * @{
 123:Generated_Source\PSoC6/ADC_1.h **** */
 124:Generated_Source\PSoC6/ADC_1.h **** void ADC_1_ISR(void);
 125:Generated_Source\PSoC6/ADC_1.h **** void ADC_1_IRQ_Enable(void);
 126:Generated_Source\PSoC6/ADC_1.h **** void ADC_1_IRQ_Disable(void);
 127:Generated_Source\PSoC6/ADC_1.h **** 
 128:Generated_Source\PSoC6/ADC_1.h **** /** @} interrupt */
 129:Generated_Source\PSoC6/ADC_1.h **** 
 130:Generated_Source\PSoC6/ADC_1.h **** /*******************************************************************************
 131:Generated_Source\PSoC6/ADC_1.h ****                                   Parameters
 132:Generated_Source\PSoC6/ADC_1.h **** The parameters that are set in the customizer are redefined as constants here.
 133:Generated_Source\PSoC6/ADC_1.h **** *******************************************************************************/
 134:Generated_Source\PSoC6/ADC_1.h **** 
 135:Generated_Source\PSoC6/ADC_1.h **** /*  Sample Mode setting constants */
 136:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_TOTAL_CONFIGS                (1ul)
 137:Generated_Source\PSoC6/ADC_1.h **** 
 138:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 139:Generated_Source\PSoC6/ADC_1.h **** /* Begin configuration 0 customizer defines                                   */
 140:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 141:Generated_Source\PSoC6/ADC_1.h **** 
 142:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_SAMPLE_RATE             (100000)
 143:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_CHANNEL_BASE            (0u)
 144:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_CHANNEL_COUNT           (1u)
 145:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_VREF_SEL_MASK           (0xf0u)
 146:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_NOMINAL_CLOCK_FREQ      (16666666u)
 147:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_CHANNEL_EN              (0x1u)
 148:Generated_Source\PSoC6/ADC_1.h **** 
 149:Generated_Source\PSoC6/ADC_1.h **** /* Sample Control Register */
 150:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_SINGLE_ENDED_FORMAT     (1uL)
 151:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_DIFFERENTIAL_FORMAT     (1uL)
 152:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_SAMPLES_AVERAGED        (3uL)
 153:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_RANGE_INTR_MASK         (0x0u)
 154:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_SATURATE_INTR_MASK      (0x0u)
 155:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_VNEG_INPUT_SEL          (0)
 156:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_SINGLE_PRESENT          (1)
 157:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_VREF_MV_VALUE           (3300)
 158:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_APERTURE_TIME0          (4uL)
 159:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_APERTURE_TIME1          (2uL)
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 142


 160:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_APERTURE_TIME2          (2uL)
 161:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_APERTURE_TIME3          (2uL)
 162:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_FREERUNNING             (0u)
 163:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_AVGERAGING_MODE         (1uL)
 164:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_LOW_LIMIT               (512u)
 165:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_HIGH_LIMIT              (3584u)
 166:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_RANGE_COND              (0uL)
 167:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_USE_SOC                 (0uL)
 168:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_VREF_PWR                (3uL)
 169:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_COMP_PWR                (3uL)
 170:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_COMP_DLY                (3uL)
 171:Generated_Source\PSoC6/ADC_1.h **** 
 172:Generated_Source\PSoC6/ADC_1.h **** /* Clock parameters*/
 173:Generated_Source\PSoC6/ADC_1.h **** #if (ADC_1_CLOCK_INTERNAL)
 174:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG0_CLOCKDIVIDER        (((CYDEV_CLK_PERICLK__HZ) / (ADC_1_CFG0_NOMINAL_CLOCK_FR
 175:Generated_Source\PSoC6/ADC_1.h **** #endif /* (ADC_1_CLOCK_INTERNAL) */
 176:Generated_Source\PSoC6/ADC_1.h **** 
 177:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 178:Generated_Source\PSoC6/ADC_1.h **** /* End configuration 0 customizer defines                                     */
 179:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 180:Generated_Source\PSoC6/ADC_1.h **** 
 181:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 182:Generated_Source\PSoC6/ADC_1.h **** /* Begin configuration 1 customizer defines                                   */
 183:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 184:Generated_Source\PSoC6/ADC_1.h **** 
 185:Generated_Source\PSoC6/ADC_1.h **** #if(ADC_1_TOTAL_CONFIGS > 1)
 186:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_SAMPLE_RATE             ()
 187:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_CHANNEL_BASE            (u)
 188:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_CHANNEL_COUNT           (u)
 189:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_VREF_SEL_MASK           (u)
 190:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_NOMINAL_CLOCK_FREQ      (u)
 191:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_CHANNEL_EN              (u)
 192:Generated_Source\PSoC6/ADC_1.h **** 
 193:Generated_Source\PSoC6/ADC_1.h ****     /* Sample Control Register */
 194:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_SINGLE_ENDED_FORMAT     (uL)
 195:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_DIFFERENTIAL_FORMAT     (uL)
 196:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_SAMPLES_AVERAGED        (uL)
 197:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_RANGE_INTR_MASK         (u)
 198:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_SATURATE_INTR_MASK      (u)
 199:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_VNEG_INPUT_SEL          ()
 200:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_SINGLE_PRESENT          ()
 201:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_VREF_MV_VALUE           ()
 202:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_APERTURE_TIME0          (uL)
 203:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_APERTURE_TIME1          (uL)
 204:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_APERTURE_TIME2          (uL)
 205:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_APERTURE_TIME3          (uL)
 206:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_FREERUNNING             (u)
 207:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_AVGERAGING_MODE         (uL)
 208:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_LOW_LIMIT               (u)
 209:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_HIGH_LIMIT              (u)
 210:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_RANGE_COND              (uL)
 211:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_USE_SOC                 (0uL)
 212:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_VREF_PWR                (uL)
 213:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_COMP_PWR                (uL)
 214:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_COMP_DLY                (uL)
 215:Generated_Source\PSoC6/ADC_1.h **** 
 216:Generated_Source\PSoC6/ADC_1.h ****     /* Clock parameters*/
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 143


 217:Generated_Source\PSoC6/ADC_1.h ****     #if (ADC_1_CLOCK_INTERNAL)
 218:Generated_Source\PSoC6/ADC_1.h ****         #define ADC_1_CFG1_CLOCKDIVIDER        (((CYDEV_CLK_PERICLK__HZ) / (ADC_1_CFG1_NOMINAL_CLOC
 219:Generated_Source\PSoC6/ADC_1.h ****     #endif /* (ADC_1_CLOCK_INTERNAL) */
 220:Generated_Source\PSoC6/ADC_1.h **** #endif /* #if(ADC_1_TOTAL_CONFIGS > 1) */
 221:Generated_Source\PSoC6/ADC_1.h **** 
 222:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 223:Generated_Source\PSoC6/ADC_1.h **** /* End configuration 1 customizer defines                                     */
 224:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 225:Generated_Source\PSoC6/ADC_1.h **** 
 226:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 227:Generated_Source\PSoC6/ADC_1.h **** /* Begin configuration 2 customizer defines                                         */
 228:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 229:Generated_Source\PSoC6/ADC_1.h **** 
 230:Generated_Source\PSoC6/ADC_1.h **** #if(ADC_1_TOTAL_CONFIGS > 2)
 231:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_SAMPLE_RATE             ()
 232:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_CHANNEL_BASE            (u)
 233:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_CHANNEL_COUNT           (u)
 234:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_VREF_SEL_MASK           (u)
 235:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_NOMINAL_CLOCK_FREQ      (u)
 236:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_CHANNEL_EN              (u)
 237:Generated_Source\PSoC6/ADC_1.h **** 
 238:Generated_Source\PSoC6/ADC_1.h ****     /* Sample Control Register */
 239:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_SINGLE_ENDED_FORMAT     (uL)
 240:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_DIFFERENTIAL_FORMAT     (uL)
 241:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_SAMPLES_AVERAGED        (uL)
 242:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_RANGE_INTR_MASK         (u)
 243:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_SATURATE_INTR_MASK      (u)
 244:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_VNEG_INPUT_SEL          ()
 245:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_SINGLE_PRESENT          ()
 246:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_VREF_MV_VALUE           ()
 247:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_APERTURE_TIME0          (uL)
 248:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_APERTURE_TIME1          (uL)
 249:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_APERTURE_TIME2          (uL)
 250:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_APERTURE_TIME3          (uL)
 251:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_FREERUNNING             (u)
 252:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_AVGERAGING_MODE         (uL)
 253:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_LOW_LIMIT               (u)
 254:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_HIGH_LIMIT              (u)
 255:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_RANGE_COND              (uL)
 256:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_USE_SOC                 (0uL)
 257:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_VREF_PWR                (uL)
 258:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_COMP_PWR                (uL)
 259:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_COMP_DLY                (uL)
 260:Generated_Source\PSoC6/ADC_1.h **** 
 261:Generated_Source\PSoC6/ADC_1.h ****     /* Clock parameters*/
 262:Generated_Source\PSoC6/ADC_1.h ****     #if (ADC_1_CLOCK_INTERNAL)
 263:Generated_Source\PSoC6/ADC_1.h ****         #define ADC_1_CFG2_CLOCKDIVIDER        (((CYDEV_CLK_PERICLK__HZ) / (ADC_1_CFG2_NOMINAL_CLOC
 264:Generated_Source\PSoC6/ADC_1.h ****     #endif /* (ADC_1_CLOCK_INTERNAL) */
 265:Generated_Source\PSoC6/ADC_1.h **** #endif /* (ADC_1_TOTAL_CONFIGS > 2) */
 266:Generated_Source\PSoC6/ADC_1.h **** 
 267:Generated_Source\PSoC6/ADC_1.h **** 
 268:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 269:Generated_Source\PSoC6/ADC_1.h **** /* End configuration 2 customizer defines                                     */
 270:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 271:Generated_Source\PSoC6/ADC_1.h **** 
 272:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 273:Generated_Source\PSoC6/ADC_1.h **** /* Begin configuration 3 customizer defines                                   */
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 144


 274:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 275:Generated_Source\PSoC6/ADC_1.h **** #if(ADC_1_TOTAL_CONFIGS > 3)
 276:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_SAMPLE_RATE             ()
 277:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_CHANNEL_BASE            (u)
 278:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_CHANNEL_COUNT           (u)
 279:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_VREF_SEL_MASK           (u)
 280:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_NOMINAL_CLOCK_FREQ      (u)
 281:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_CHANNEL_EN              (u)
 282:Generated_Source\PSoC6/ADC_1.h **** 
 283:Generated_Source\PSoC6/ADC_1.h ****     /* Sample Control Register */
 284:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_SINGLE_ENDED_FORMAT     (uL)
 285:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_DIFFERENTIAL_FORMAT     (uL)
 286:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_SAMPLES_AVERAGED        (uL)
 287:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_RANGE_INTR_MASK         (u)
 288:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_SATURATE_INTR_MASK      (u)
 289:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_VNEG_INPUT_SEL          ()
 290:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_SINGLE_PRESENT          ()
 291:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_VREF_MV_VALUE           ()
 292:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_APERTURE_TIME0          (uL)
 293:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_APERTURE_TIME1          (uL)
 294:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_APERTURE_TIME2          (uL)
 295:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_APERTURE_TIME3          (uL)
 296:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_FREERUNNING             (u)
 297:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_AVGERAGING_MODE         (uL)
 298:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_LOW_LIMIT               (u)
 299:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_HIGH_LIMIT              (u)
 300:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_RANGE_COND              (uL)
 301:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_USE_SOC                 (0uL)
 302:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_VREF_PWR                (uL)
 303:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_COMP_PWR                (uL)
 304:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_COMP_DLY                (uL)
 305:Generated_Source\PSoC6/ADC_1.h **** 
 306:Generated_Source\PSoC6/ADC_1.h ****     /* Clock parameters*/
 307:Generated_Source\PSoC6/ADC_1.h ****     #if (ADC_1_CLOCK_INTERNAL)
 308:Generated_Source\PSoC6/ADC_1.h ****         #define ADC_1_CFG3_CLOCKDIVIDER        (((CYDEV_CLK_PERICLK__HZ) / (ADC_1_CFG3_NOMINAL_CLOC
 309:Generated_Source\PSoC6/ADC_1.h ****     #endif /* (ADC_1_CLOCK_INTERNAL) */
 310:Generated_Source\PSoC6/ADC_1.h **** #endif /* (ADC_1_TOTAL_CONFIGS > 3) */
 311:Generated_Source\PSoC6/ADC_1.h **** 
 312:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 313:Generated_Source\PSoC6/ADC_1.h **** /* End configuration 3 customizer defines                                     */
 314:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 315:Generated_Source\PSoC6/ADC_1.h **** 
 316:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_DEFAULT_SAMPLE_MODE_SEL      (0u)
 317:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_FREERUNNING                  (1u)
 318:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_HARDWARESOC                  (1u)
 319:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_NEG_SEL_VSSA_KELVIN          (0x0uL)
 320:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_NEG_SEL_VREF                 (0x7uL)
 321:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_PWR_CTRL_VREF_NORMAL_PWR     (0x0uL)
 322:Generated_Source\PSoC6/ADC_1.h **** 
 323:Generated_Source\PSoC6/ADC_1.h **** /** ADC_1_TOTAL_CHANNELS_NUM
 324:Generated_Source\PSoC6/ADC_1.h **** * This constant represents the number of input channels available for scanning.
 325:Generated_Source\PSoC6/ADC_1.h **** */
 326:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_TOTAL_CHANNELS_NUM           (1u)
 327:Generated_Source\PSoC6/ADC_1.h **** 
 328:Generated_Source\PSoC6/ADC_1.h **** /*******************************************************************************
 329:Generated_Source\PSoC6/ADC_1.h **** *    Variables with External Linkage
 330:Generated_Source\PSoC6/ADC_1.h **** *******************************************************************************/
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 145


 331:Generated_Source\PSoC6/ADC_1.h **** /**
 332:Generated_Source\PSoC6/ADC_1.h **** * \addtogroup group_globals
 333:Generated_Source\PSoC6/ADC_1.h **** * Globals are noted in the descriptions of the functions that use globals.
 334:Generated_Source\PSoC6/ADC_1.h **** * They are marked with (R), (W), or (RW) noting whether the variable is read,
 335:Generated_Source\PSoC6/ADC_1.h **** * write, or read/write.
 336:Generated_Source\PSoC6/ADC_1.h **** * @{
 337:Generated_Source\PSoC6/ADC_1.h **** */
 338:Generated_Source\PSoC6/ADC_1.h **** 
 339:Generated_Source\PSoC6/ADC_1.h **** /** ADC_1_initVar
 340:Generated_Source\PSoC6/ADC_1.h **** * The ADC_1_initVar variable is used to indicate
 341:Generated_Source\PSoC6/ADC_1.h **** * initial configuration of this component. The variable is initialized to zero and
 342:Generated_Source\PSoC6/ADC_1.h **** * set to 1 the first time ADC_1_Start() is called. This allows for
 343:Generated_Source\PSoC6/ADC_1.h **** * component initialization without reinitialization in all subsequent calls to the
 344:Generated_Source\PSoC6/ADC_1.h **** * ADC_1_Start() routine.
 345:Generated_Source\PSoC6/ADC_1.h **** *
 346:Generated_Source\PSoC6/ADC_1.h **** * If reinitialization of the component is required, then the ADC_1_Init() function
 347:Generated_Source\PSoC6/ADC_1.h **** * can be called before the ADC_1_Start() or ADC_1_Enable()
 348:Generated_Source\PSoC6/ADC_1.h **** * functions.
 349:Generated_Source\PSoC6/ADC_1.h **** */
 350:Generated_Source\PSoC6/ADC_1.h **** extern uint8_t ADC_1_initVar;
 351:Generated_Source\PSoC6/ADC_1.h **** extern uint8_t ADC_1_selected;
 352:Generated_Source\PSoC6/ADC_1.h **** extern uint32_t ADC_1_currentConfig;
 353:Generated_Source\PSoC6/ADC_1.h **** 
 354:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_INIT_VAR_INIT_FLAG     (0x01u)
 355:Generated_Source\PSoC6/ADC_1.h **** 
 356:Generated_Source\PSoC6/ADC_1.h **** extern const ADC_1_CONFIG_STRUCT ADC_1_allConfigs[ADC_1_TOTAL_CONFIGS];
 357:Generated_Source\PSoC6/ADC_1.h **** 
 358:Generated_Source\PSoC6/ADC_1.h **** /* SysPm callback structure for deep sleep entry and exit.
 359:Generated_Source\PSoC6/ADC_1.h ****  * Call the Cy_SysPm_RegisterCallback function with this
 360:Generated_Source\PSoC6/ADC_1.h ****  * structure before calling Cy_SysPm_DeepSleep.
 361:Generated_Source\PSoC6/ADC_1.h **** */
 362:Generated_Source\PSoC6/ADC_1.h **** extern cy_stc_syspm_callback_t ADC_1_DeepSleepCallbackStruct;
 363:Generated_Source\PSoC6/ADC_1.h **** 
 364:Generated_Source\PSoC6/ADC_1.h **** /** @} globals */
 365:Generated_Source\PSoC6/ADC_1.h **** 
 366:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 367:Generated_Source\PSoC6/ADC_1.h **** /* *******************Global MUX_SWITCH0 Definitions ************************ */
 368:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 369:Generated_Source\PSoC6/ADC_1.h **** #if(ADC_1_CFG0_VNEG_INPUT_SEL == ADC_1_NEG_SEL_VSSA_KELVIN)
 370:Generated_Source\PSoC6/ADC_1.h ****     /* Do not connect VSSA to VMINUS when one channel in differential mode used */
 371:Generated_Source\PSoC6/ADC_1.h ****     #if((ADC_1_TOTAL_CHANNELS_NUM == 1u) && (ADC_1_CFG0_SINGLE_PRESENT == 0u))
 372:Generated_Source\PSoC6/ADC_1.h ****         #define ADC_1_MUX_SWITCH0_INIT      0u
 373:Generated_Source\PSoC6/ADC_1.h ****     #else    /* multiple channels or one single ended channel */
 374:Generated_Source\PSoC6/ADC_1.h ****         #define ADC_1_MUX_SWITCH0_INIT      1u
 375:Generated_Source\PSoC6/ADC_1.h ****     #endif /* ((ADC_1_TOTAL_CHANNELS_NUM == 1u) && (ADC_1_CFG0_SINGLE_PRESENT == 0u)) */
 376:Generated_Source\PSoC6/ADC_1.h **** #else
 377:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_MUX_SWITCH0_INIT          0u
 378:Generated_Source\PSoC6/ADC_1.h **** #endif /* ADC_1_CFG0_VNEG_INPUT_SEL == ADC_1_NEG_SEL_VSSA_KELVIN */
 379:Generated_Source\PSoC6/ADC_1.h **** 
 380:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 381:Generated_Source\PSoC6/ADC_1.h **** /* Begin configuration 0 calculated defines                                   */
 382:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 383:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_SAMPLE_TIME01_INIT \
 384:Generated_Source\PSoC6/ADC_1.h ****         ((ADC_1_CFG0_APERTURE_TIME0 \
 385:Generated_Source\PSoC6/ADC_1.h ****         << SAR_SAMPLE_TIME01_SAMPLE_TIME0_Pos) \
 386:Generated_Source\PSoC6/ADC_1.h ****         | (ADC_1_CFG0_APERTURE_TIME1 \
 387:Generated_Source\PSoC6/ADC_1.h ****         << SAR_SAMPLE_TIME01_SAMPLE_TIME1_Pos))
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 146


 388:Generated_Source\PSoC6/ADC_1.h **** 
 389:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_SAMPLE_TIME23_INIT \
 390:Generated_Source\PSoC6/ADC_1.h ****         ((ADC_1_CFG0_APERTURE_TIME2 \
 391:Generated_Source\PSoC6/ADC_1.h ****         << SAR_SAMPLE_TIME23_SAMPLE_TIME2_Pos) \
 392:Generated_Source\PSoC6/ADC_1.h ****         | (ADC_1_CFG0_APERTURE_TIME3 \
 393:Generated_Source\PSoC6/ADC_1.h ****         << SAR_SAMPLE_TIME23_SAMPLE_TIME3_Pos))
 394:Generated_Source\PSoC6/ADC_1.h **** 
 395:Generated_Source\PSoC6/ADC_1.h **** /* Enable soc pin if used */
 396:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_DSI_TRIGGER_EN_INIT \
 397:Generated_Source\PSoC6/ADC_1.h ****         (ADC_1_CFG0_USE_SOC \
 398:Generated_Source\PSoC6/ADC_1.h ****         << SAR_SAMPLE_CTRL_DSI_TRIGGER_EN_Pos)
 399:Generated_Source\PSoC6/ADC_1.h **** 
 400:Generated_Source\PSoC6/ADC_1.h **** /* Set soc operation to edge or level based on sample mode */
 401:Generated_Source\PSoC6/ADC_1.h **** #if(ADC_1_CFG0_FREERUNNING == ADC_1_FREERUNNING)
 402:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG0_DSI_TRIGGER_LEVEL_INIT    (SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_Msk)
 403:Generated_Source\PSoC6/ADC_1.h **** #else /* Edge trigger */
 404:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG0_DSI_TRIGGER_LEVEL_INIT    (0u)
 405:Generated_Source\PSoC6/ADC_1.h **** #endif /* End ADC_1_CFG0_FREERUNNING == ADC_1_FREERUNNING */
 406:Generated_Source\PSoC6/ADC_1.h **** 
 407:Generated_Source\PSoC6/ADC_1.h **** /* Set SE_NEG_INPUT */
 408:Generated_Source\PSoC6/ADC_1.h **** #if(ADC_1_CFG0_VNEG_INPUT_SEL == ADC_1_NEG_SEL_VSSA_KELVIN)
 409:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG0_SE_NEG_INPUT_INIT \
 410:Generated_Source\PSoC6/ADC_1.h ****             ((uint32)(ADC_1_NEG_SEL_VSSA_KELVIN \
 411:Generated_Source\PSoC6/ADC_1.h ****             << SAR_CTRL_NEG_SEL_Pos ))
 412:Generated_Source\PSoC6/ADC_1.h **** #elif(ADC_1_CFG0_VNEG_INPUT_SEL == ADC_1_NEG_SEL_VREF)
 413:Generated_Source\PSoC6/ADC_1.h **** 
 414:Generated_Source\PSoC6/ADC_1.h ****     /* Do not connect VNEG to VREF when one channel in differential mode used */
 415:Generated_Source\PSoC6/ADC_1.h ****     /* Only needed for config 0 since 2+ configs == 2+ channels */
 416:Generated_Source\PSoC6/ADC_1.h ****     #if((ADC_1_CFG0_CHANNEL_COUNT == 1u) && (ADC_1_CFG0_SINGLE_PRESENT == 0u))
 417:Generated_Source\PSoC6/ADC_1.h ****         #define ADC_1_CFG0_SE_NEG_INPUT_INIT     0u
 418:Generated_Source\PSoC6/ADC_1.h ****     #else    /* multiple channels or one single channel */
 419:Generated_Source\PSoC6/ADC_1.h ****         #define ADC_1_CFG0_SE_NEG_INPUT_INIT     (ADC_1_NEG_SEL_VREF \
 420:Generated_Source\PSoC6/ADC_1.h ****                                                             << SAR_CTRL_NEG_SEL_Pos )
 421:Generated_Source\PSoC6/ADC_1.h ****     #endif /* (ADC_1_CFG0_CHANNEL_COUNT == 1u) && (ADC_1_CFG0_CHANNELS_MODE != 0u) */
 422:Generated_Source\PSoC6/ADC_1.h **** #elif (ADC_1_CFG0_SINGLE_PRESENT != 0u)
 423:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG0_SE_NEG_INPUT_INIT         ADC_1_CFG0_NEG_OTHER
 424:Generated_Source\PSoC6/ADC_1.h **** #else
 425:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG0_SE_NEG_INPUT_INIT         0u
 426:Generated_Source\PSoC6/ADC_1.h **** #endif /* ADC_1_CFG0_VNEG_INPUT_SEL == ADC_1_NEG_SEL_VSSA_KELVIN */
 427:Generated_Source\PSoC6/ADC_1.h **** 
 428:Generated_Source\PSoC6/ADC_1.h **** #if(ADC_1_TOTAL_CHANNELS_NUM > 1u)
 429:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG0_NEG_OTHER                 (uint16)((uint16)ADC_1_SARMUX__VNEG0 << SAR_CTRL_N
 430:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG0_SWITCH_CONF_INIT          0u
 431:Generated_Source\PSoC6/ADC_1.h **** #else /* Disable SAR sequencer from enabling routing switches in single channel mode */
 432:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG0_SWITCH_CONF_INIT          SAR_CTRL_SWITCH_DISABLE_Msk
 433:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG0_NEG_OTHER                 0u
 434:Generated_Source\PSoC6/ADC_1.h **** #endif /* ADC_1_CFG0_CHANNEL_COUNT > 1u */
 435:Generated_Source\PSoC6/ADC_1.h **** 
 436:Generated_Source\PSoC6/ADC_1.h **** /* If the SAR is configured for multiple channels, always set SAR_HW_CTRL_NEGVREF to 1 */
 437:Generated_Source\PSoC6/ADC_1.h **** #if(ADC_1_TOTAL_CHANNELS_NUM == 1u)
 438:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG0_HW_CTRL_NEGVREF_INIT      0u
 439:Generated_Source\PSoC6/ADC_1.h **** #else
 440:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG0_HW_CTRL_NEGVREF_INIT      SAR_CTRL_SAR_HW_CTRL_NEGVREF_Msk
 441:Generated_Source\PSoC6/ADC_1.h **** #endif /* ADC_1_CFG0_CHANNEL_COUNT == 1u */
 442:Generated_Source\PSoC6/ADC_1.h **** 
 443:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_POWER_INIT  (ADC_1_PWR_CTRL_VREF_NORMAL_PWR)
 444:Generated_Source\PSoC6/ADC_1.h **** 
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 147


 445:Generated_Source\PSoC6/ADC_1.h **** /* SAMPLE_CTRL initial values */
 446:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_SE_RESULT_FORMAT_INIT \
 447:Generated_Source\PSoC6/ADC_1.h ****         (ADC_1_CFG0_SINGLE_ENDED_FORMAT \
 448:Generated_Source\PSoC6/ADC_1.h ****         << SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_Pos)
 449:Generated_Source\PSoC6/ADC_1.h **** 
 450:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_DIFF_RESULT_FORMAT_INIT \
 451:Generated_Source\PSoC6/ADC_1.h ****         (ADC_1_CFG0_DIFFERENTIAL_FORMAT \
 452:Generated_Source\PSoC6/ADC_1.h ****         << SAR_SAMPLE_CTRL_DIFFERENTIAL_SIGNED_Pos)
 453:Generated_Source\PSoC6/ADC_1.h **** 
 454:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_AVG_SAMPLES_NUM_INIT \
 455:Generated_Source\PSoC6/ADC_1.h ****         (ADC_1_CFG0_SAMPLES_AVERAGED \
 456:Generated_Source\PSoC6/ADC_1.h ****         << SAR_SAMPLE_CTRL_AVG_CNT_Pos)
 457:Generated_Source\PSoC6/ADC_1.h **** 
 458:Generated_Source\PSoC6/ADC_1.h **** /* Combination of Average Mode and Average Shift */
 459:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_AVG_MODE_INIT \
 460:Generated_Source\PSoC6/ADC_1.h ****         (ADC_1_CFG0_AVGERAGING_MODE \
 461:Generated_Source\PSoC6/ADC_1.h ****         << SAR_SAMPLE_CTRL_AVG_SHIFT_Pos)
 462:Generated_Source\PSoC6/ADC_1.h **** 
 463:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_TRIGGER_OUT_INIT      (0u)
 464:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_UAB_SCAN_MODE_INIT    (0u)
 465:Generated_Source\PSoC6/ADC_1.h **** 
 466:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_VREF_POWER_INIT  \
 467:Generated_Source\PSoC6/ADC_1.h ****         (ADC_1_CFG0_VREF_PWR \
 468:Generated_Source\PSoC6/ADC_1.h ****         << SAR_CTRL_PWR_CTRL_VREF_Pos)
 469:Generated_Source\PSoC6/ADC_1.h **** 
 470:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_COMP_PWR_INIT  \
 471:Generated_Source\PSoC6/ADC_1.h ****         (ADC_1_CFG0_COMP_PWR \
 472:Generated_Source\PSoC6/ADC_1.h ****         << SAR_CTRL_COMP_PWR_Pos)
 473:Generated_Source\PSoC6/ADC_1.h **** 
 474:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_COMP_DLY_INIT  \
 475:Generated_Source\PSoC6/ADC_1.h ****         (ADC_1_CFG0_COMP_DLY \
 476:Generated_Source\PSoC6/ADC_1.h ****         << SAR_CTRL_COMP_DLY_Pos)
 477:Generated_Source\PSoC6/ADC_1.h **** 
 478:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_CTRL_INIT  \
 479:Generated_Source\PSoC6/ADC_1.h ****         (ADC_1_CFG0_VREF_POWER_INIT \
 480:Generated_Source\PSoC6/ADC_1.h ****         | ADC_1_CFG0_VREF_SEL_MASK \
 481:Generated_Source\PSoC6/ADC_1.h ****         | ADC_1_CFG0_SE_NEG_INPUT_INIT \
 482:Generated_Source\PSoC6/ADC_1.h ****         | ADC_1_CFG0_HW_CTRL_NEGVREF_INIT \
 483:Generated_Source\PSoC6/ADC_1.h ****         | ADC_1_CFG0_COMP_DLY_INIT \
 484:Generated_Source\PSoC6/ADC_1.h ****         | SAR_CTRL_REFBUF_EN_Msk \
 485:Generated_Source\PSoC6/ADC_1.h ****         | ADC_1_CFG0_COMP_PWR_INIT \
 486:Generated_Source\PSoC6/ADC_1.h ****         | SAR_CTRL_DSI_SYNC_CONFIG_Msk  \
 487:Generated_Source\PSoC6/ADC_1.h ****         | ADC_1_CFG0_SWITCH_CONF_INIT )
 488:Generated_Source\PSoC6/ADC_1.h **** 
 489:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_SAMPLE_CTRL_INIT \
 490:Generated_Source\PSoC6/ADC_1.h ****         (ADC_1_CFG0_SE_RESULT_FORMAT_INIT \
 491:Generated_Source\PSoC6/ADC_1.h ****         | ADC_1_CFG0_DIFF_RESULT_FORMAT_INIT \
 492:Generated_Source\PSoC6/ADC_1.h ****         | ADC_1_CFG0_AVG_SAMPLES_NUM_INIT \
 493:Generated_Source\PSoC6/ADC_1.h ****         | ADC_1_CFG0_AVG_MODE_INIT \
 494:Generated_Source\PSoC6/ADC_1.h ****         | ADC_1_CFG0_DSI_TRIGGER_LEVEL_INIT \
 495:Generated_Source\PSoC6/ADC_1.h ****         | ADC_1_CFG0_DSI_TRIGGER_EN_INIT \
 496:Generated_Source\PSoC6/ADC_1.h ****         | ADC_1_CFG0_UAB_SCAN_MODE_INIT \
 497:Generated_Source\PSoC6/ADC_1.h ****         | SAR_SAMPLE_CTRL_VALID_IGNORE_Msk \
 498:Generated_Source\PSoC6/ADC_1.h ****         | ADC_1_CFG0_TRIGGER_OUT_INIT \
 499:Generated_Source\PSoC6/ADC_1.h ****         | SAR_SAMPLE_CTRL_EOS_DSI_OUT_EN_Msk \
 500:Generated_Source\PSoC6/ADC_1.h **** )
 501:Generated_Source\PSoC6/ADC_1.h **** 
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 148


 502:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_RANGE_THRES_INIT \
 503:Generated_Source\PSoC6/ADC_1.h ****         (ADC_1_CFG0_LOW_LIMIT \
 504:Generated_Source\PSoC6/ADC_1.h ****         | (uint32)((uint32)ADC_1_CFG0_HIGH_LIMIT \
 505:Generated_Source\PSoC6/ADC_1.h ****         << SAR_RANGE_THRES_RANGE_HIGH_Pos))
 506:Generated_Source\PSoC6/ADC_1.h **** 
 507:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_RANGE_COND_INIT   (cy_en_sar_range_detect_condition_t)ADC_1_CFG0_RANGE_COND
 508:Generated_Source\PSoC6/ADC_1.h **** 
 509:Generated_Source\PSoC6/ADC_1.h **** /* Misc Config
 510:Generated_Source\PSoC6/ADC_1.h ****     [0] - Freerunning: Set if the sample mode is freerunning
 511:Generated_Source\PSoC6/ADC_1.h **** */
 512:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_MISC_CONFIG_INIT \
 513:Generated_Source\PSoC6/ADC_1.h ****         (ADC_1_CFG0_FREERUNNING)
 514:Generated_Source\PSoC6/ADC_1.h **** 
 515:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 516:Generated_Source\PSoC6/ADC_1.h **** /* End configuration 0 calculated defines                                     */
 517:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 518:Generated_Source\PSoC6/ADC_1.h **** 
 519:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 520:Generated_Source\PSoC6/ADC_1.h **** /* Begin configuration 1 calculated defines                                   */
 521:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 522:Generated_Source\PSoC6/ADC_1.h **** #if(ADC_1_TOTAL_CONFIGS > 1)
 523:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_SAMPLE_TIME01_INIT \
 524:Generated_Source\PSoC6/ADC_1.h ****             ((ADC_1_CFG1_APERTURE_TIME0 \
 525:Generated_Source\PSoC6/ADC_1.h ****             << SAR_SAMPLE_TIME01_SAMPLE_TIME0_Pos) \
 526:Generated_Source\PSoC6/ADC_1.h ****             | (ADC_1_CFG1_APERTURE_TIME1 \
 527:Generated_Source\PSoC6/ADC_1.h ****             << SAR_SAMPLE_TIME01_SAMPLE_TIME1_Pos))
 528:Generated_Source\PSoC6/ADC_1.h **** 
 529:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_SAMPLE_TIME23_INIT \
 530:Generated_Source\PSoC6/ADC_1.h ****             ((ADC_1_CFG1_APERTURE_TIME2 \
 531:Generated_Source\PSoC6/ADC_1.h ****             << SAR_SAMPLE_TIME23_SAMPLE_TIME2_Pos) \
 532:Generated_Source\PSoC6/ADC_1.h ****             | (ADC_1_CFG1_APERTURE_TIME3 \
 533:Generated_Source\PSoC6/ADC_1.h ****             << SAR_SAMPLE_TIME23_SAMPLE_TIME3_Pos))
 534:Generated_Source\PSoC6/ADC_1.h **** 
 535:Generated_Source\PSoC6/ADC_1.h ****     /* Enable soc pin if used */
 536:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_DSI_TRIGGER_EN_INIT \
 537:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG1_USE_SOC \
 538:Generated_Source\PSoC6/ADC_1.h ****             << SAR_SAMPLE_CTRL_DSI_TRIGGER_EN_Pos)
 539:Generated_Source\PSoC6/ADC_1.h **** 
 540:Generated_Source\PSoC6/ADC_1.h ****     /* Set soc operation to edge or level based on sample mode */
 541:Generated_Source\PSoC6/ADC_1.h ****     #if(ADC_1_CFG1_FREERUNNING == ADC_1_FREERUNNING)
 542:Generated_Source\PSoC6/ADC_1.h ****         #define ADC_1_CFG1_DSI_TRIGGER_LEVEL_INIT    (SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_Msk)
 543:Generated_Source\PSoC6/ADC_1.h ****     #else /* Edge trigger */
 544:Generated_Source\PSoC6/ADC_1.h ****         #define ADC_1_CFG1_DSI_TRIGGER_LEVEL_INIT    (0u)
 545:Generated_Source\PSoC6/ADC_1.h ****     #endif /* End ADC_1_CFG1_FREERUNNING == ADC_1_FREERUNNING */
 546:Generated_Source\PSoC6/ADC_1.h **** 
 547:Generated_Source\PSoC6/ADC_1.h ****     /* Set SE_NEG_INPUT */
 548:Generated_Source\PSoC6/ADC_1.h ****     #if(ADC_1_CFG1_VNEG_INPUT_SEL == ADC_1_NEG_SEL_VSSA_KELVIN)
 549:Generated_Source\PSoC6/ADC_1.h ****         #define ADC_1_CFG1_SE_NEG_INPUT_INIT \
 550:Generated_Source\PSoC6/ADC_1.h ****             ((uint32)(ADC_1_NEG_SEL_VSSA_KELVIN \
 551:Generated_Source\PSoC6/ADC_1.h ****             << SAR_CTRL_NEG_SEL_Pos ))
 552:Generated_Source\PSoC6/ADC_1.h ****     #elif(ADC_1_CFG1_VNEG_INPUT_SEL == ADC_1_NEG_SEL_VREF)
 553:Generated_Source\PSoC6/ADC_1.h ****         #define ADC_1_CFG1_SE_NEG_INPUT_INIT     (ADC_1_NEG_SEL_VREF \
 554:Generated_Source\PSoC6/ADC_1.h ****                                                             << SAR_CTRL_NEG_SEL_Pos )
 555:Generated_Source\PSoC6/ADC_1.h ****     #elif (ADC_1_CFG1_SINGLE_PRESENT != 0u)
 556:Generated_Source\PSoC6/ADC_1.h ****         #define ADC_1_CFG1_SE_NEG_INPUT_INIT         ADC_1_CFG1_NEG_OTHER
 557:Generated_Source\PSoC6/ADC_1.h ****     #else
 558:Generated_Source\PSoC6/ADC_1.h ****         #define ADC_1_CFG1_SE_NEG_INPUT_INIT         0u
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 149


 559:Generated_Source\PSoC6/ADC_1.h ****     #endif /* ADC_1_CFG1_VNEG_INPUT_SEL == ADC_1_NEG_SEL_VSSA_KELVIN */
 560:Generated_Source\PSoC6/ADC_1.h **** 
 561:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_NEG_OTHER                 (uint16)((uint16)ADC_1_SARMUX__VNEG1 << SAR_CTRL_N
 562:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_SWITCH_CONF_INIT          0u
 563:Generated_Source\PSoC6/ADC_1.h **** 
 564:Generated_Source\PSoC6/ADC_1.h ****     /* If the SAR is configured for multiple channels, always set SAR_HW_CTRL_NEGVREF to 1 */
 565:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_HW_CTRL_NEGVREF_INIT      SAR_CTRL_SAR_HW_CTRL_NEGVREF_Msk
 566:Generated_Source\PSoC6/ADC_1.h **** 
 567:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_POWER_INIT  (ADC_1_PWR_CTRL_VREF_NORMAL_PWR)
 568:Generated_Source\PSoC6/ADC_1.h **** 
 569:Generated_Source\PSoC6/ADC_1.h ****     /* SAMPLE_CTRL initial values */
 570:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_SE_RESULT_FORMAT_INIT \
 571:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG1_SINGLE_ENDED_FORMAT \
 572:Generated_Source\PSoC6/ADC_1.h ****             << SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_Pos)
 573:Generated_Source\PSoC6/ADC_1.h **** 
 574:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_DIFF_RESULT_FORMAT_INIT \
 575:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG1_DIFFERENTIAL_FORMAT \
 576:Generated_Source\PSoC6/ADC_1.h ****             << SAR_SAMPLE_CTRL_DIFFERENTIAL_SIGNED_Pos)
 577:Generated_Source\PSoC6/ADC_1.h **** 
 578:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_AVG_SAMPLES_NUM_INIT \
 579:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG1_SAMPLES_AVERAGED \
 580:Generated_Source\PSoC6/ADC_1.h ****             << SAR_SAMPLE_CTRL_AVG_CNT_Pos)
 581:Generated_Source\PSoC6/ADC_1.h **** 
 582:Generated_Source\PSoC6/ADC_1.h ****     /* Combination of Average Mode and Average Shift */
 583:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_AVG_MODE_INIT \
 584:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG1_AVGERAGING_MODE \
 585:Generated_Source\PSoC6/ADC_1.h ****             << SAR_SAMPLE_CTRL_AVG_SHIFT_Pos)
 586:Generated_Source\PSoC6/ADC_1.h **** 
 587:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_TRIGGER_OUT_INIT      (0u)
 588:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_UAB_SCAN_MODE_INIT    (0u)
 589:Generated_Source\PSoC6/ADC_1.h **** 
 590:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_VREF_POWER_INIT  \
 591:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG1_VREF_PWR \
 592:Generated_Source\PSoC6/ADC_1.h ****             << SAR_CTRL_PWR_CTRL_VREF_Pos)
 593:Generated_Source\PSoC6/ADC_1.h **** 
 594:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_COMP_PWR_INIT  \
 595:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG1_COMP_PWR \
 596:Generated_Source\PSoC6/ADC_1.h ****             << SAR_CTRL_COMP_PWR_Pos)
 597:Generated_Source\PSoC6/ADC_1.h **** 
 598:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_COMP_DLY_INIT  \
 599:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG1_COMP_DLY \
 600:Generated_Source\PSoC6/ADC_1.h ****             << SAR_CTRL_COMP_DLY_Pos)
 601:Generated_Source\PSoC6/ADC_1.h **** 
 602:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_CTRL_INIT  \
 603:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG1_VREF_POWER_INIT \
 604:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG1_VREF_SEL_MASK \
 605:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG1_SE_NEG_INPUT_INIT \
 606:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG1_HW_CTRL_NEGVREF_INIT \
 607:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG1_COMP_DLY_INIT \
 608:Generated_Source\PSoC6/ADC_1.h ****             | SAR_CTRL_REFBUF_EN_Msk \
 609:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG1_COMP_PWR_INIT \
 610:Generated_Source\PSoC6/ADC_1.h ****             | SAR_CTRL_DSI_SYNC_CONFIG_Msk  \
 611:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG1_SWITCH_CONF_INIT )
 612:Generated_Source\PSoC6/ADC_1.h **** 
 613:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_SAMPLE_CTRL_INIT \
 614:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG1_SE_RESULT_FORMAT_INIT \
 615:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG1_DIFF_RESULT_FORMAT_INIT \
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 150


 616:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG1_AVG_SAMPLES_NUM_INIT \
 617:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG1_AVG_MODE_INIT \
 618:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG1_DSI_TRIGGER_LEVEL_INIT \
 619:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG1_DSI_TRIGGER_EN_INIT \
 620:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG1_UAB_SCAN_MODE_INIT \
 621:Generated_Source\PSoC6/ADC_1.h ****             | SAR_SAMPLE_CTRL_VALID_IGNORE_Msk \
 622:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG1_TRIGGER_OUT_INIT \
 623:Generated_Source\PSoC6/ADC_1.h ****             | SAR_SAMPLE_CTRL_EOS_DSI_OUT_EN_Msk \
 624:Generated_Source\PSoC6/ADC_1.h ****     )
 625:Generated_Source\PSoC6/ADC_1.h **** 
 626:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_RANGE_THRES_INIT \
 627:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG1_LOW_LIMIT \
 628:Generated_Source\PSoC6/ADC_1.h ****             | (uint32)((uint32)ADC_1_CFG1_HIGH_LIMIT \
 629:Generated_Source\PSoC6/ADC_1.h ****             << SAR_RANGE_THRES_RANGE_HIGH_Pos))
 630:Generated_Source\PSoC6/ADC_1.h **** 
 631:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_RANGE_COND_INIT   (cy_en_sar_range_detect_condition_t)ADC_1_CFG1_RANGE_COND
 632:Generated_Source\PSoC6/ADC_1.h **** 
 633:Generated_Source\PSoC6/ADC_1.h ****     /* Misc Config
 634:Generated_Source\PSoC6/ADC_1.h ****         [0] - Freerunning: Set if the sample mode is freerunning
 635:Generated_Source\PSoC6/ADC_1.h ****     */
 636:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_MISC_CONFIG_INIT \
 637:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG1_FREERUNNING)
 638:Generated_Source\PSoC6/ADC_1.h **** #endif /* ADC_1_TOTAL_CONFIGS > 1 */
 639:Generated_Source\PSoC6/ADC_1.h **** 
 640:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 641:Generated_Source\PSoC6/ADC_1.h **** /* End configuration 1 calculated defines                                     */
 642:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 643:Generated_Source\PSoC6/ADC_1.h **** 
 644:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 645:Generated_Source\PSoC6/ADC_1.h **** /* Begin configuration 2 calculated defines                                   */
 646:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 647:Generated_Source\PSoC6/ADC_1.h **** #if(ADC_1_TOTAL_CONFIGS > 2)
 648:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_SAMPLE_TIME01_INIT \
 649:Generated_Source\PSoC6/ADC_1.h ****             ((ADC_1_CFG2_APERTURE_TIME0 \
 650:Generated_Source\PSoC6/ADC_1.h ****             << SAR_SAMPLE_TIME01_SAMPLE_TIME0_Pos) \
 651:Generated_Source\PSoC6/ADC_1.h ****             | (ADC_1_CFG2_APERTURE_TIME1 \
 652:Generated_Source\PSoC6/ADC_1.h ****             << SAR_SAMPLE_TIME01_SAMPLE_TIME1_Pos))
 653:Generated_Source\PSoC6/ADC_1.h **** 
 654:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_SAMPLE_TIME23_INIT \
 655:Generated_Source\PSoC6/ADC_1.h ****             ((ADC_1_CFG2_APERTURE_TIME2 \
 656:Generated_Source\PSoC6/ADC_1.h ****             << SAR_SAMPLE_TIME23_SAMPLE_TIME2_Pos) \
 657:Generated_Source\PSoC6/ADC_1.h ****             | (ADC_1_CFG2_APERTURE_TIME3 \
 658:Generated_Source\PSoC6/ADC_1.h ****             << SAR_SAMPLE_TIME23_SAMPLE_TIME3_Pos))
 659:Generated_Source\PSoC6/ADC_1.h **** 
 660:Generated_Source\PSoC6/ADC_1.h ****     /* Enable soc pin if used */
 661:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_DSI_TRIGGER_EN_INIT \
 662:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG2_USE_SOC \
 663:Generated_Source\PSoC6/ADC_1.h ****             << SAR_SAMPLE_CTRL_DSI_TRIGGER_EN_Pos)
 664:Generated_Source\PSoC6/ADC_1.h **** 
 665:Generated_Source\PSoC6/ADC_1.h ****     /* Set soc operation to edge or level based on sample mode */
 666:Generated_Source\PSoC6/ADC_1.h ****     #if(ADC_1_CFG2_FREERUNNING == ADC_1_FREERUNNING)
 667:Generated_Source\PSoC6/ADC_1.h ****         #define ADC_1_CFG2_DSI_TRIGGER_LEVEL_INIT    (SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_Msk)
 668:Generated_Source\PSoC6/ADC_1.h ****     #else /* Edge trigger */
 669:Generated_Source\PSoC6/ADC_1.h ****         #define ADC_1_CFG2_DSI_TRIGGER_LEVEL_INIT    (0u)
 670:Generated_Source\PSoC6/ADC_1.h ****     #endif /* End ADC_1_CFG2_FREERUNNING == ADC_1_FREERUNNING */
 671:Generated_Source\PSoC6/ADC_1.h **** 
 672:Generated_Source\PSoC6/ADC_1.h ****     /* Set SE_NEG_INPUT */
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 151


 673:Generated_Source\PSoC6/ADC_1.h ****     #if(ADC_1_CFG2_VNEG_INPUT_SEL == ADC_1_NEG_SEL_VSSA_KELVIN)
 674:Generated_Source\PSoC6/ADC_1.h ****         #define ADC_1_CFG2_SE_NEG_INPUT_INIT \
 675:Generated_Source\PSoC6/ADC_1.h ****             ((uint32)(ADC_1_NEG_SEL_VSSA_KELVIN \
 676:Generated_Source\PSoC6/ADC_1.h ****             << SAR_CTRL_NEG_SEL_Pos ))
 677:Generated_Source\PSoC6/ADC_1.h ****     #elif(ADC_1_CFG2_VNEG_INPUT_SEL == ADC_1_NEG_SEL_VREF)
 678:Generated_Source\PSoC6/ADC_1.h ****         #define ADC_1_CFG2_SE_NEG_INPUT_INIT     (ADC_1_NEG_SEL_VREF \
 679:Generated_Source\PSoC6/ADC_1.h ****                                                                 << SAR_CTRL_NEG_SEL_Pos )
 680:Generated_Source\PSoC6/ADC_1.h ****     #elif (ADC_1_CFG2_SINGLE_PRESENT != 0u)
 681:Generated_Source\PSoC6/ADC_1.h ****         #define ADC_1_CFG2_SE_NEG_INPUT_INIT         ADC_1_CFG2_NEG_OTHER
 682:Generated_Source\PSoC6/ADC_1.h ****     #else
 683:Generated_Source\PSoC6/ADC_1.h ****         #define ADC_1_CFG2_SE_NEG_INPUT_INIT         0u
 684:Generated_Source\PSoC6/ADC_1.h ****     #endif /* ADC_1_CFG2_VNEG_INPUT_SEL == ADC_1_NEG_SEL_VSSA_KELVIN */
 685:Generated_Source\PSoC6/ADC_1.h **** 
 686:Generated_Source\PSoC6/ADC_1.h ****    #define ADC_1_CFG2_NEG_OTHER                 (uint16)((uint16)ADC_1_SARMUX__VNEG2 << SAR_CTRL_NE
 687:Generated_Source\PSoC6/ADC_1.h **** 
 688:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_SWITCH_CONF_INIT          0u
 689:Generated_Source\PSoC6/ADC_1.h **** 
 690:Generated_Source\PSoC6/ADC_1.h ****     /* If the SAR is configured for multiple channels, always set SAR_HW_CTRL_NEGVREF to 1 */
 691:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_HW_CTRL_NEGVREF_INIT      SAR_CTRL_SAR_HW_CTRL_NEGVREF_Msk
 692:Generated_Source\PSoC6/ADC_1.h **** 
 693:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_POWER_INIT  (ADC_1_PWR_CTRL_VREF_NORMAL_PWR)
 694:Generated_Source\PSoC6/ADC_1.h **** 
 695:Generated_Source\PSoC6/ADC_1.h ****     /* SAMPLE_CTRL initial values */
 696:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_SE_RESULT_FORMAT_INIT \
 697:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG2_SINGLE_ENDED_FORMAT \
 698:Generated_Source\PSoC6/ADC_1.h ****             << SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_Pos)
 699:Generated_Source\PSoC6/ADC_1.h **** 
 700:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_DIFF_RESULT_FORMAT_INIT \
 701:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG2_DIFFERENTIAL_FORMAT \
 702:Generated_Source\PSoC6/ADC_1.h ****             << SAR_SAMPLE_CTRL_DIFFERENTIAL_SIGNED_Pos)
 703:Generated_Source\PSoC6/ADC_1.h **** 
 704:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_AVG_SAMPLES_NUM_INIT \
 705:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG2_SAMPLES_AVERAGED \
 706:Generated_Source\PSoC6/ADC_1.h ****             << SAR_SAMPLE_CTRL_AVG_CNT_Pos)
 707:Generated_Source\PSoC6/ADC_1.h **** 
 708:Generated_Source\PSoC6/ADC_1.h ****     /* Combination of Average Mode and Average Shift */
 709:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_AVG_MODE_INIT \
 710:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG2_AVGERAGING_MODE \
 711:Generated_Source\PSoC6/ADC_1.h ****             << SAR_SAMPLE_CTRL_AVG_SHIFT_Pos)
 712:Generated_Source\PSoC6/ADC_1.h **** 
 713:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_TRIGGER_OUT_INIT      (0u)
 714:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_UAB_SCAN_MODE_INIT    (0u)
 715:Generated_Source\PSoC6/ADC_1.h **** 
 716:Generated_Source\PSoC6/ADC_1.h **** 
 717:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_VREF_POWER_INIT  \
 718:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG2_VREF_PWR \
 719:Generated_Source\PSoC6/ADC_1.h ****             << SAR_CTRL_PWR_CTRL_VREF_Pos)
 720:Generated_Source\PSoC6/ADC_1.h **** 
 721:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_COMP_PWR_INIT  \
 722:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG2_COMP_PWR \
 723:Generated_Source\PSoC6/ADC_1.h ****             << SAR_CTRL_COMP_PWR_Pos)
 724:Generated_Source\PSoC6/ADC_1.h **** 
 725:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_COMP_DLY_INIT  \
 726:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG2_COMP_DLY \
 727:Generated_Source\PSoC6/ADC_1.h ****             << SAR_CTRL_COMP_DLY_Pos)
 728:Generated_Source\PSoC6/ADC_1.h **** 
 729:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_CTRL_INIT  \
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 152


 730:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG2_VREF_POWER_INIT \
 731:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG2_VREF_SEL_MASK \
 732:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG2_SE_NEG_INPUT_INIT \
 733:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG2_HW_CTRL_NEGVREF_INIT \
 734:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG2_COMP_DLY_INIT \
 735:Generated_Source\PSoC6/ADC_1.h ****             | SAR_CTRL_REFBUF_EN_Msk \
 736:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG2_COMP_PWR_INIT \
 737:Generated_Source\PSoC6/ADC_1.h ****             | SAR_CTRL_DSI_SYNC_CONFIG_Msk  \
 738:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG2_SWITCH_CONF_INIT )
 739:Generated_Source\PSoC6/ADC_1.h **** 
 740:Generated_Source\PSoC6/ADC_1.h **** 
 741:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_SAMPLE_CTRL_INIT \
 742:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG2_SE_RESULT_FORMAT_INIT \
 743:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG2_DIFF_RESULT_FORMAT_INIT \
 744:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG2_AVG_SAMPLES_NUM_INIT \
 745:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG2_AVG_MODE_INIT \
 746:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG2_DSI_TRIGGER_LEVEL_INIT \
 747:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG2_DSI_TRIGGER_EN_INIT \
 748:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG2_UAB_SCAN_MODE_INIT \
 749:Generated_Source\PSoC6/ADC_1.h ****             | SAR_SAMPLE_CTRL_VALID_IGNORE_Msk \
 750:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG2_TRIGGER_OUT_INIT \
 751:Generated_Source\PSoC6/ADC_1.h ****             | SAR_SAMPLE_CTRL_EOS_DSI_OUT_EN_Msk \
 752:Generated_Source\PSoC6/ADC_1.h ****     )
 753:Generated_Source\PSoC6/ADC_1.h **** 
 754:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_RANGE_THRES_INIT \
 755:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG2_LOW_LIMIT \
 756:Generated_Source\PSoC6/ADC_1.h ****             | (uint32)((uint32)ADC_1_CFG2_HIGH_LIMIT \
 757:Generated_Source\PSoC6/ADC_1.h ****             << SAR_RANGE_THRES_RANGE_HIGH_Pos))
 758:Generated_Source\PSoC6/ADC_1.h **** 
 759:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_RANGE_COND_INIT   (cy_en_sar_range_detect_condition_t)ADC_1_CFG2_RANGE_COND
 760:Generated_Source\PSoC6/ADC_1.h **** 
 761:Generated_Source\PSoC6/ADC_1.h ****     /* Misc Config
 762:Generated_Source\PSoC6/ADC_1.h ****         [0] - Freerunning: Set if the sample mode is freerunning
 763:Generated_Source\PSoC6/ADC_1.h ****     */
 764:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_MISC_CONFIG_INIT \
 765:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG2_FREERUNNING)
 766:Generated_Source\PSoC6/ADC_1.h **** #endif /* ADC_1_TOTAL_CONFIGS > 2 */
 767:Generated_Source\PSoC6/ADC_1.h **** 
 768:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 769:Generated_Source\PSoC6/ADC_1.h **** /* End configuration 2 calculated defines                                     */
 770:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 771:Generated_Source\PSoC6/ADC_1.h **** 
 772:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 773:Generated_Source\PSoC6/ADC_1.h **** /* Begin configuration 3 calculated defines                                   */
 774:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 775:Generated_Source\PSoC6/ADC_1.h **** #if(ADC_1_TOTAL_CONFIGS > 3)
 776:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_SAMPLE_TIME01_INIT \
 777:Generated_Source\PSoC6/ADC_1.h ****             ((ADC_1_CFG3_APERTURE_TIME0 \
 778:Generated_Source\PSoC6/ADC_1.h ****             << SAR_SAMPLE_TIME01_SAMPLE_TIME0_Pos) \
 779:Generated_Source\PSoC6/ADC_1.h ****             | (ADC_1_CFG3_APERTURE_TIME1 \
 780:Generated_Source\PSoC6/ADC_1.h ****             << SAR_SAMPLE_TIME01_SAMPLE_TIME1_Pos))
 781:Generated_Source\PSoC6/ADC_1.h **** 
 782:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_SAMPLE_TIME23_INIT \
 783:Generated_Source\PSoC6/ADC_1.h ****             ((ADC_1_CFG3_APERTURE_TIME2 \
 784:Generated_Source\PSoC6/ADC_1.h ****             << SAR_SAMPLE_TIME23_SAMPLE_TIME2_Pos) \
 785:Generated_Source\PSoC6/ADC_1.h ****             | (ADC_1_CFG3_APERTURE_TIME3 \
 786:Generated_Source\PSoC6/ADC_1.h ****             << SAR_SAMPLE_TIME23_SAMPLE_TIME3_Pos))
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 153


 787:Generated_Source\PSoC6/ADC_1.h **** 
 788:Generated_Source\PSoC6/ADC_1.h ****     /* Enable soc pin if used */
 789:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_DSI_TRIGGER_EN_INIT \
 790:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG3_USE_SOC \
 791:Generated_Source\PSoC6/ADC_1.h ****              << SAR_SAMPLE_CTRL_DSI_TRIGGER_EN_Pos)
 792:Generated_Source\PSoC6/ADC_1.h **** 
 793:Generated_Source\PSoC6/ADC_1.h ****     /* Set soc operation to edge or level based on sample mode */
 794:Generated_Source\PSoC6/ADC_1.h ****     #if(ADC_1_CFG3_FREERUNNING == ADC_1_FREERUNNING)
 795:Generated_Source\PSoC6/ADC_1.h ****         #define ADC_1_CFG3_DSI_TRIGGER_LEVEL_INIT    (SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_Msk)
 796:Generated_Source\PSoC6/ADC_1.h ****     #else /* Edge trigger */
 797:Generated_Source\PSoC6/ADC_1.h ****         #define ADC_1_CFG3_DSI_TRIGGER_LEVEL_INIT    (0u)
 798:Generated_Source\PSoC6/ADC_1.h ****     #endif /* End ADC_1_CFG3_FREERUNNING == ADC_1_FREERUNNING */
 799:Generated_Source\PSoC6/ADC_1.h **** 
 800:Generated_Source\PSoC6/ADC_1.h ****     /* Set SE_NEG_INPUT  */
 801:Generated_Source\PSoC6/ADC_1.h ****     #if(ADC_1_CFG3_VNEG_INPUT_SEL == ADC_1_NEG_SEL_VSSA_KELVIN)
 802:Generated_Source\PSoC6/ADC_1.h ****         #define ADC_1_CFG3_SE_NEG_INPUT_INIT \
 803:Generated_Source\PSoC6/ADC_1.h ****             ((uint32)(ADC_1_NEG_SEL_VSSA_KELVIN \
 804:Generated_Source\PSoC6/ADC_1.h ****             << SAR_CTRL_NEG_SEL_Pos ))
 805:Generated_Source\PSoC6/ADC_1.h ****     #elif(ADC_1_CFG3_VNEG_INPUT_SEL == ADC_1_NEG_SEL_VREF)
 806:Generated_Source\PSoC6/ADC_1.h ****         #define ADC_1_CFG3_SE_NEG_INPUT_INIT     (ADC_1_NEG_SEL_VREF \
 807:Generated_Source\PSoC6/ADC_1.h ****                                                                 << SAR_CTRL_NEG_SEL_Pos )
 808:Generated_Source\PSoC6/ADC_1.h ****     #elif (ADC_1_CFG3_SINGLE_PRESENT != 0u)
 809:Generated_Source\PSoC6/ADC_1.h ****         #define ADC_1_CFG3_SE_NEG_INPUT_INIT         ADC_1_CFG3_NEG_OTHER
 810:Generated_Source\PSoC6/ADC_1.h ****     #else
 811:Generated_Source\PSoC6/ADC_1.h ****         #define ADC_1_CFG3_SE_NEG_INPUT_INIT         0u
 812:Generated_Source\PSoC6/ADC_1.h ****     #endif /* ADC_1_CFG3_VNEG_INPUT_SEL == ADC_1_NEG_SEL_VSSA_KELVIN */
 813:Generated_Source\PSoC6/ADC_1.h **** 
 814:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_NEG_OTHER                 (uint16)((uint16)ADC_1_SARMUX__VNEG3 << SAR_CTRL_N
 815:Generated_Source\PSoC6/ADC_1.h **** 
 816:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_SWITCH_CONF_INIT          0u
 817:Generated_Source\PSoC6/ADC_1.h **** 
 818:Generated_Source\PSoC6/ADC_1.h ****     /* If the SAR is configured for multiple channels, always set SAR_HW_CTRL_NEGVREF to 1 */
 819:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_HW_CTRL_NEGVREF_INIT      SAR_CTRL_SAR_HW_CTRL_NEGVREF_Msk
 820:Generated_Source\PSoC6/ADC_1.h **** 
 821:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_POWER_INIT  (ADC_1_PWR_CTRL_VREF_NORMAL_PWR)
 822:Generated_Source\PSoC6/ADC_1.h **** 
 823:Generated_Source\PSoC6/ADC_1.h ****     /* SAMPLE_CTRL initial values */
 824:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_SE_RESULT_FORMAT_INIT \
 825:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG3_SINGLE_ENDED_FORMAT \
 826:Generated_Source\PSoC6/ADC_1.h ****             << SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_Pos)
 827:Generated_Source\PSoC6/ADC_1.h **** 
 828:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_DIFF_RESULT_FORMAT_INIT \
 829:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG3_DIFFERENTIAL_FORMAT \
 830:Generated_Source\PSoC6/ADC_1.h ****             << SAR_SAMPLE_CTRL_DIFFERENTIAL_SIGNED_Pos)
 831:Generated_Source\PSoC6/ADC_1.h **** 
 832:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_AVG_SAMPLES_NUM_INIT \
 833:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG3_SAMPLES_AVERAGED \
 834:Generated_Source\PSoC6/ADC_1.h ****             << SAR_SAMPLE_CTRL_AVG_CNT_Pos)
 835:Generated_Source\PSoC6/ADC_1.h **** 
 836:Generated_Source\PSoC6/ADC_1.h ****     /* Combination of Average Mode and Average Shift */
 837:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_AVG_MODE_INIT \
 838:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG3_AVGERAGING_MODE \
 839:Generated_Source\PSoC6/ADC_1.h ****             << SAR_SAMPLE_CTRL_AVG_SHIFT_Pos)
 840:Generated_Source\PSoC6/ADC_1.h **** 
 841:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_TRIGGER_OUT_INIT      (0u)
 842:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_UAB_SCAN_MODE_INIT    (0u)
 843:Generated_Source\PSoC6/ADC_1.h **** 
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 154


 844:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_VREF_POWER_INIT  \
 845:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG3_VREF_PWR \
 846:Generated_Source\PSoC6/ADC_1.h ****             << SAR_CTRL_PWR_CTRL_VREF_Pos)
 847:Generated_Source\PSoC6/ADC_1.h **** 
 848:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_COMP_PWR_INIT  \
 849:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG3_COMP_PWR \
 850:Generated_Source\PSoC6/ADC_1.h ****             << SAR_CTRL_COMP_PWR_Pos)
 851:Generated_Source\PSoC6/ADC_1.h **** 
 852:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_COMP_DLY_INIT  \
 853:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG3_COMP_DLY \
 854:Generated_Source\PSoC6/ADC_1.h ****             << SAR_CTRL_COMP_DLY_Pos)
 855:Generated_Source\PSoC6/ADC_1.h **** 
 856:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_CTRL_INIT  \
 857:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG3_VREF_POWER_INIT \
 858:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG3_VREF_SEL_MASK \
 859:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG3_SE_NEG_INPUT_INIT \
 860:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG3_HW_CTRL_NEGVREF_INIT \
 861:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG3_COMP_DLY_INIT \
 862:Generated_Source\PSoC6/ADC_1.h ****             | SAR_CTRL_REFBUF_EN_Msk \
 863:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG3_COMP_PWR_INIT \
 864:Generated_Source\PSoC6/ADC_1.h ****             | SAR_CTRL_DSI_SYNC_CONFIG_Msk  \
 865:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG3_SWITCH_CONF_INIT )
 866:Generated_Source\PSoC6/ADC_1.h **** 
 867:Generated_Source\PSoC6/ADC_1.h **** 
 868:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_SAMPLE_CTRL_INIT \
 869:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG3_SE_RESULT_FORMAT_INIT \
 870:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG3_DIFF_RESULT_FORMAT_INIT \
 871:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG3_AVG_SAMPLES_NUM_INIT \
 872:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG3_AVG_MODE_INIT \
 873:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG3_DSI_TRIGGER_LEVEL_INIT \
 874:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG3_DSI_TRIGGER_EN_INIT \
 875:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG3_UAB_SCAN_MODE_INIT \
 876:Generated_Source\PSoC6/ADC_1.h ****             | SAR_SAMPLE_CTRL_VALID_IGNORE_Msk \
 877:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG3_TRIGGER_OUT_INIT \
 878:Generated_Source\PSoC6/ADC_1.h ****             | SAR_SAMPLE_CTRL_EOS_DSI_OUT_EN_Msk \
 879:Generated_Source\PSoC6/ADC_1.h ****     )
 880:Generated_Source\PSoC6/ADC_1.h **** 
 881:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_RANGE_THRES_INIT \
 882:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG3_LOW_LIMIT \
 883:Generated_Source\PSoC6/ADC_1.h ****             | (uint32)((uint32)ADC_1_CFG3_HIGH_LIMIT \
 884:Generated_Source\PSoC6/ADC_1.h ****             << SAR_RANGE_THRES_RANGE_HIGH_Pos))
 885:Generated_Source\PSoC6/ADC_1.h **** 
 886:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_RANGE_COND_INIT   (cy_en_sar_range_detect_condition_t)ADC_1_CFG3_RANGE_COND
 887:Generated_Source\PSoC6/ADC_1.h **** 
 888:Generated_Source\PSoC6/ADC_1.h ****     /* Misc Config
 889:Generated_Source\PSoC6/ADC_1.h ****         [0] - Freerunning: Set if the sample mode is freerunning
 890:Generated_Source\PSoC6/ADC_1.h ****     */
 891:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_MISC_CONFIG_INIT \
 892:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG3_FREERUNNING )
 893:Generated_Source\PSoC6/ADC_1.h **** 
 894:Generated_Source\PSoC6/ADC_1.h **** #endif /* ADC_1_TOTAL_CONFIGS > 3 */
 895:Generated_Source\PSoC6/ADC_1.h **** 
 896:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 897:Generated_Source\PSoC6/ADC_1.h **** /* End configuration 3 calculated defines                                     */
 898:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 899:Generated_Source\PSoC6/ADC_1.h **** 
 900:Generated_Source\PSoC6/ADC_1.h **** /******************************************************************************
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 155


 901:Generated_Source\PSoC6/ADC_1.h **** * Function Name: ADC_1_Enable
 902:Generated_Source\PSoC6/ADC_1.h **** ****************************************************************************//*
 903:Generated_Source\PSoC6/ADC_1.h **** *
 904:Generated_Source\PSoC6/ADC_1.h **** * \brief Enables the component.
 905:Generated_Source\PSoC6/ADC_1.h **** *
 906:Generated_Source\PSoC6/ADC_1.h **** * \param None
 907:Generated_Source\PSoC6/ADC_1.h **** *
 908:Generated_Source\PSoC6/ADC_1.h **** * \return None
 909:Generated_Source\PSoC6/ADC_1.h **** *
 910:Generated_Source\PSoC6/ADC_1.h **** * \sideeffect
 911:Generated_Source\PSoC6/ADC_1.h **** *  None
 912:Generated_Source\PSoC6/ADC_1.h **** *
 913:Generated_Source\PSoC6/ADC_1.h **** *******************************************************************************/
 914:Generated_Source\PSoC6/ADC_1.h **** __STATIC_INLINE void ADC_1_Enable(void)
 915:Generated_Source\PSoC6/ADC_1.h **** {
 880              		.loc 6 915 0
 881              		.cfi_startproc
 882              		@ args = 0, pretend = 0, frame = 0
 883              		@ frame_needed = 1, uses_anonymous_args = 0
 884 0000 80B5     		push	{r7, lr}
 885              		.cfi_def_cfa_offset 8
 886              		.cfi_offset 7, -8
 887              		.cfi_offset 14, -4
 888 0002 00AF     		add	r7, sp, #0
 889              		.cfi_def_cfa_register 7
 916:Generated_Source\PSoC6/ADC_1.h ****     Cy_SAR_Enable(ADC_1_SAR__HW);
 890              		.loc 6 916 0
 891 0004 0248     		ldr	r0, .L52
 892 0006 FFF7FEFF 		bl	Cy_SAR_Enable
 917:Generated_Source\PSoC6/ADC_1.h **** }
 893              		.loc 6 917 0
 894 000a 00BF     		nop
 895 000c 80BD     		pop	{r7, pc}
 896              	.L53:
 897 000e 00BF     		.align	2
 898              	.L52:
 899 0010 00001D41 		.word	1092419584
 900              		.cfi_endproc
 901              	.LFE255:
 902              		.size	ADC_1_Enable, .-ADC_1_Enable
 903              		.section	.text.ADC_1_Stop,"ax",%progbits
 904              		.align	2
 905              		.thumb
 906              		.thumb_func
 907              		.type	ADC_1_Stop, %function
 908              	ADC_1_Stop:
 909              	.LFB256:
 918:Generated_Source\PSoC6/ADC_1.h **** 
 919:Generated_Source\PSoC6/ADC_1.h **** /*******************************************************************************
 920:Generated_Source\PSoC6/ADC_1.h **** * Function Name: ADC_1_Stop
 921:Generated_Source\PSoC6/ADC_1.h **** ****************************************************************************//**
 922:Generated_Source\PSoC6/ADC_1.h **** *
 923:Generated_Source\PSoC6/ADC_1.h **** * \brief This function stops ADC conversions and puts the ADC into its lowest
 924:Generated_Source\PSoC6/ADC_1.h **** * power mode.
 925:Generated_Source\PSoC6/ADC_1.h **** *
 926:Generated_Source\PSoC6/ADC_1.h **** * \param None
 927:Generated_Source\PSoC6/ADC_1.h **** *
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 156


 928:Generated_Source\PSoC6/ADC_1.h **** * \return None
 929:Generated_Source\PSoC6/ADC_1.h **** *
 930:Generated_Source\PSoC6/ADC_1.h **** * \sideeffect
 931:Generated_Source\PSoC6/ADC_1.h **** * Do not use the ADC_1_Stop() API to halt conversions. Instead use the
 932:Generated_Source\PSoC6/ADC_1.h **** * ADC_1_StopConvert() API. If you use the ADC_1_Stop() API
 933:Generated_Source\PSoC6/ADC_1.h **** * to halt conversions then later use the ADC_1_Start() and
 934:Generated_Source\PSoC6/ADC_1.h **** * ADC_1_StartConvert() APIs to resume conversions, the first channel
 935:Generated_Source\PSoC6/ADC_1.h **** * of the scan may be corrupt. The ADC_1_StopConvert() API will enable
 936:Generated_Source\PSoC6/ADC_1.h **** * the ADC_1 to complete the current scan of channels. After the
 937:Generated_Source\PSoC6/ADC_1.h **** * channel scan is complete, the ADC_1 will stop all conversions, which
 938:Generated_Source\PSoC6/ADC_1.h **** * can be detected by the use of an ISR or the ADC_1_IsEndConversion()
 939:Generated_Source\PSoC6/ADC_1.h **** * function.
 940:Generated_Source\PSoC6/ADC_1.h **** *
 941:Generated_Source\PSoC6/ADC_1.h **** *******************************************************************************/
 942:Generated_Source\PSoC6/ADC_1.h **** __STATIC_INLINE void ADC_1_Stop(void)
 943:Generated_Source\PSoC6/ADC_1.h **** {
 910              		.loc 6 943 0
 911              		.cfi_startproc
 912              		@ args = 0, pretend = 0, frame = 0
 913              		@ frame_needed = 1, uses_anonymous_args = 0
 914 0000 80B5     		push	{r7, lr}
 915              		.cfi_def_cfa_offset 8
 916              		.cfi_offset 7, -8
 917              		.cfi_offset 14, -4
 918 0002 00AF     		add	r7, sp, #0
 919              		.cfi_def_cfa_register 7
 944:Generated_Source\PSoC6/ADC_1.h ****     Cy_SAR_Disable(ADC_1_SAR__HW);
 920              		.loc 6 944 0
 921 0004 0248     		ldr	r0, .L55
 922 0006 FFF7FEFF 		bl	Cy_SAR_Disable
 945:Generated_Source\PSoC6/ADC_1.h **** }
 923              		.loc 6 945 0
 924 000a 00BF     		nop
 925 000c 80BD     		pop	{r7, pc}
 926              	.L56:
 927 000e 00BF     		.align	2
 928              	.L55:
 929 0010 00001D41 		.word	1092419584
 930              		.cfi_endproc
 931              	.LFE256:
 932              		.size	ADC_1_Stop, .-ADC_1_Stop
 933              		.global	ADC_1_initVar
 934              		.bss
 935              		.type	ADC_1_initVar, %object
 936              		.size	ADC_1_initVar, 1
 937              	ADC_1_initVar:
 938 0000 00       		.space	1
 939              		.global	ADC_1_selected
 940              		.type	ADC_1_selected, %object
 941              		.size	ADC_1_selected, 1
 942              	ADC_1_selected:
 943 0001 00       		.space	1
 944              		.global	ADC_1_currentConfig
 945 0002 0000     		.align	2
 946              		.type	ADC_1_currentConfig, %object
 947              		.size	ADC_1_currentConfig, 4
 948              	ADC_1_currentConfig:
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 157


 949 0004 00000000 		.space	4
 950              		.section	.text.ADC_1_Start,"ax",%progbits
 951              		.align	2
 952              		.global	ADC_1_Start
 953              		.thumb
 954              		.thumb_func
 955              		.type	ADC_1_Start, %function
 956              	ADC_1_Start:
 957              	.LFB274:
 958              		.file 7 "Generated_Source\\PSoC6\\ADC_1.c"
   1:Generated_Source\PSoC6/ADC_1.c **** /***************************************************************************//**
   2:Generated_Source\PSoC6/ADC_1.c **** * \file     ADC_1.c
   3:Generated_Source\PSoC6/ADC_1.c **** * \version  3.10
   4:Generated_Source\PSoC6/ADC_1.c **** *
   5:Generated_Source\PSoC6/ADC_1.c **** * \brief
   6:Generated_Source\PSoC6/ADC_1.c **** * Provides the source code to the API for the ADC_1 Component.
   7:Generated_Source\PSoC6/ADC_1.c **** *
   8:Generated_Source\PSoC6/ADC_1.c **** ********************************************************************************
   9:Generated_Source\PSoC6/ADC_1.c **** * \copyright
  10:Generated_Source\PSoC6/ADC_1.c **** * (c) 2017-2018, Cypress Semiconductor Corporation. All rights reserved.
  11:Generated_Source\PSoC6/ADC_1.c **** * This software, including source code, documentation and related
  12:Generated_Source\PSoC6/ADC_1.c **** * materials ("Software"), is owned by Cypress Semiconductor
  13:Generated_Source\PSoC6/ADC_1.c **** * Corporation ("Cypress") and is protected by and subject to worldwide
  14:Generated_Source\PSoC6/ADC_1.c **** * patent protection (United States and foreign), United States copyright
  15:Generated_Source\PSoC6/ADC_1.c **** * laws and international treaty provisions. Therefore, you may use this
  16:Generated_Source\PSoC6/ADC_1.c **** * Software only as provided in the license agreement accompanying the
  17:Generated_Source\PSoC6/ADC_1.c **** * software package from which you obtained this Software ("EULA").
  18:Generated_Source\PSoC6/ADC_1.c **** * If no EULA applies, Cypress hereby grants you a personal, nonexclusive,
  19:Generated_Source\PSoC6/ADC_1.c **** * non-transferable license to copy, modify, and compile the
  20:Generated_Source\PSoC6/ADC_1.c **** * Software source code solely for use in connection with Cypress's
  21:Generated_Source\PSoC6/ADC_1.c **** * integrated circuit products. Any reproduction, modification, translation,
  22:Generated_Source\PSoC6/ADC_1.c **** * compilation, or representation of this Software except as specified
  23:Generated_Source\PSoC6/ADC_1.c **** * above is prohibited without the express written permission of Cypress.
  24:Generated_Source\PSoC6/ADC_1.c **** * Disclaimer: THIS SOFTWARE IS PROVIDED AS-IS, WITH NO
  25:Generated_Source\PSoC6/ADC_1.c **** * WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING,
  26:Generated_Source\PSoC6/ADC_1.c **** * BUT NOT LIMITED TO, NONINFRINGEMENT, IMPLIED
  27:Generated_Source\PSoC6/ADC_1.c **** * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
  28:Generated_Source\PSoC6/ADC_1.c **** * PARTICULAR PURPOSE. Cypress reserves the right to make
  29:Generated_Source\PSoC6/ADC_1.c **** * changes to the Software without notice. Cypress does not assume any
  30:Generated_Source\PSoC6/ADC_1.c **** * liability arising out of the application or use of the Software or any
  31:Generated_Source\PSoC6/ADC_1.c **** * product or circuit described in the Software. Cypress does not
  32:Generated_Source\PSoC6/ADC_1.c **** * authorize its products for use in any products where a malfunction or
  33:Generated_Source\PSoC6/ADC_1.c **** * failure of the Cypress product may reasonably be expected to result in
  34:Generated_Source\PSoC6/ADC_1.c **** * significant property damage, injury or death ("High Risk Product"). By
  35:Generated_Source\PSoC6/ADC_1.c **** * including Cypress's product in a High Risk Product, the manufacturer
  36:Generated_Source\PSoC6/ADC_1.c **** * of such system or application assumes all risk of such use and in doing
  37:Generated_Source\PSoC6/ADC_1.c **** * so agrees to indemnify Cypress against all liability.
  38:Generated_Source\PSoC6/ADC_1.c **** *******************************************************************************/
  39:Generated_Source\PSoC6/ADC_1.c **** #include "ADC_1.h"
  40:Generated_Source\PSoC6/ADC_1.c **** #include <sysint/cy_sysint.h>
  41:Generated_Source\PSoC6/ADC_1.c **** #include <cyfitter_sysint_cfg.h>
  42:Generated_Source\PSoC6/ADC_1.c **** 
  43:Generated_Source\PSoC6/ADC_1.c **** uint8_t ADC_1_initVar = 0u;
  44:Generated_Source\PSoC6/ADC_1.c **** uint8_t ADC_1_selected = 0u; /* 0 if no configuration selected. 1 otherwise. */
  45:Generated_Source\PSoC6/ADC_1.c **** uint32_t ADC_1_currentConfig = 0u; /* Currently active configuration */
  46:Generated_Source\PSoC6/ADC_1.c **** 
  47:Generated_Source\PSoC6/ADC_1.c **** /*******************************************************************************
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 158


  48:Generated_Source\PSoC6/ADC_1.c **** * Function Name: ADC_1_Start
  49:Generated_Source\PSoC6/ADC_1.c **** ****************************************************************************//**
  50:Generated_Source\PSoC6/ADC_1.c **** *
  51:Generated_Source\PSoC6/ADC_1.c **** * \brief Performs all required initialization for this component and enables the
  52:Generated_Source\PSoC6/ADC_1.c **** *  power. The power will be set to the appropriate power based on the clock
  53:Generated_Source\PSoC6/ADC_1.c **** *  frequency.
  54:Generated_Source\PSoC6/ADC_1.c **** *
  55:Generated_Source\PSoC6/ADC_1.c **** * \param None
  56:Generated_Source\PSoC6/ADC_1.c **** *
  57:Generated_Source\PSoC6/ADC_1.c **** * \return None
  58:Generated_Source\PSoC6/ADC_1.c **** *
  59:Generated_Source\PSoC6/ADC_1.c **** * \sideeffect None
  60:Generated_Source\PSoC6/ADC_1.c **** *
  61:Generated_Source\PSoC6/ADC_1.c **** * \globalvars
  62:Generated_Source\PSoC6/ADC_1.c **** *  \ref ADC_1_initVar (RW)
  63:Generated_Source\PSoC6/ADC_1.c **** *
  64:Generated_Source\PSoC6/ADC_1.c **** *******************************************************************************/
  65:Generated_Source\PSoC6/ADC_1.c **** void ADC_1_Start(void)
  66:Generated_Source\PSoC6/ADC_1.c **** {
 959              		.loc 7 66 0
 960              		.cfi_startproc
 961              		@ args = 0, pretend = 0, frame = 0
 962              		@ frame_needed = 1, uses_anonymous_args = 0
 963 0000 80B5     		push	{r7, lr}
 964              		.cfi_def_cfa_offset 8
 965              		.cfi_offset 7, -8
 966              		.cfi_offset 14, -4
 967 0002 00AF     		add	r7, sp, #0
 968              		.cfi_def_cfa_register 7
  67:Generated_Source\PSoC6/ADC_1.c ****     if (ADC_1_INIT_VAR_INIT_FLAG != (ADC_1_INIT_VAR_INIT_FLAG & ADC_1_initVar))
 969              		.loc 7 67 0
 970 0004 094B     		ldr	r3, .L60
 971 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 972 0008 03F00103 		and	r3, r3, #1
 973 000c DBB2     		uxtb	r3, r3
 974 000e 002B     		cmp	r3, #0
 975 0010 08D1     		bne	.L58
  68:Generated_Source\PSoC6/ADC_1.c ****     {
  69:Generated_Source\PSoC6/ADC_1.c ****         ADC_1_Init();
 976              		.loc 7 69 0
 977 0012 FFF7FEFF 		bl	ADC_1_Init
  70:Generated_Source\PSoC6/ADC_1.c ****         ADC_1_initVar |= ADC_1_INIT_VAR_INIT_FLAG;
 978              		.loc 7 70 0
 979 0016 054B     		ldr	r3, .L60
 980 0018 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 981 001a 43F00103 		orr	r3, r3, #1
 982 001e DAB2     		uxtb	r2, r3
 983 0020 024B     		ldr	r3, .L60
 984 0022 1A70     		strb	r2, [r3]
 985              	.L58:
  71:Generated_Source\PSoC6/ADC_1.c ****     }
  72:Generated_Source\PSoC6/ADC_1.c **** 
  73:Generated_Source\PSoC6/ADC_1.c ****     ADC_1_Enable();
 986              		.loc 7 73 0
 987 0024 FFF7FEFF 		bl	ADC_1_Enable
  74:Generated_Source\PSoC6/ADC_1.c **** 
  75:Generated_Source\PSoC6/ADC_1.c ****     return;
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 159


 988              		.loc 7 75 0
 989 0028 00BF     		nop
  76:Generated_Source\PSoC6/ADC_1.c **** }
 990              		.loc 7 76 0
 991 002a 80BD     		pop	{r7, pc}
 992              	.L61:
 993              		.align	2
 994              	.L60:
 995 002c 00000000 		.word	ADC_1_initVar
 996              		.cfi_endproc
 997              	.LFE274:
 998              		.size	ADC_1_Start, .-ADC_1_Start
 999              		.section	.text.ADC_1_StartEx,"ax",%progbits
 1000              		.align	2
 1001              		.global	ADC_1_StartEx
 1002              		.thumb
 1003              		.thumb_func
 1004              		.type	ADC_1_StartEx, %function
 1005              	ADC_1_StartEx:
 1006              	.LFB275:
  77:Generated_Source\PSoC6/ADC_1.c **** 
  78:Generated_Source\PSoC6/ADC_1.c **** /*******************************************************************************
  79:Generated_Source\PSoC6/ADC_1.c **** * Function Name: ADC_1_StartEx
  80:Generated_Source\PSoC6/ADC_1.c **** ****************************************************************************//**
  81:Generated_Source\PSoC6/ADC_1.c **** *
  82:Generated_Source\PSoC6/ADC_1.c **** * \brief This function starts the ADC_1 and sets the Interrupt
  83:Generated_Source\PSoC6/ADC_1.c **** * Service Routine to the provided address using the
  84:Generated_Source\PSoC6/ADC_1.c **** * Cy_SysInt_Init() function. Refer to the Interrupt component
  85:Generated_Source\PSoC6/ADC_1.c **** * datasheet for more information on the Cy_SysInt_Init() function.
  86:Generated_Source\PSoC6/ADC_1.c **** *
  87:Generated_Source\PSoC6/ADC_1.c **** * \param address This is the address of a user defined function for the ISR.
  88:Generated_Source\PSoC6/ADC_1.c **** *
  89:Generated_Source\PSoC6/ADC_1.c **** * \return None
  90:Generated_Source\PSoC6/ADC_1.c **** *
  91:Generated_Source\PSoC6/ADC_1.c **** * \sideeffect None
  92:Generated_Source\PSoC6/ADC_1.c **** *
  93:Generated_Source\PSoC6/ADC_1.c **** *******************************************************************************/
  94:Generated_Source\PSoC6/ADC_1.c **** void ADC_1_StartEx(cy_israddress userIsr)
  95:Generated_Source\PSoC6/ADC_1.c **** {
 1007              		.loc 7 95 0
 1008              		.cfi_startproc
 1009              		@ args = 0, pretend = 0, frame = 8
 1010              		@ frame_needed = 1, uses_anonymous_args = 0
 1011 0000 80B5     		push	{r7, lr}
 1012              		.cfi_def_cfa_offset 8
 1013              		.cfi_offset 7, -8
 1014              		.cfi_offset 14, -4
 1015 0002 82B0     		sub	sp, sp, #8
 1016              		.cfi_def_cfa_offset 16
 1017 0004 00AF     		add	r7, sp, #0
 1018              		.cfi_def_cfa_register 7
 1019 0006 7860     		str	r0, [r7, #4]
  96:Generated_Source\PSoC6/ADC_1.c ****     ADC_1_Start();
 1020              		.loc 7 96 0
 1021 0008 FFF7FEFF 		bl	ADC_1_Start
  97:Generated_Source\PSoC6/ADC_1.c **** 
  98:Generated_Source\PSoC6/ADC_1.c ****     /* Interrupt core assignment will be up to the user. Initialize and enable the interrupt*/
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 160


  99:Generated_Source\PSoC6/ADC_1.c ****     #ifdef ADC_1_IRQ__INTC_CORTEXM4_ASSIGNED
 100:Generated_Source\PSoC6/ADC_1.c ****     #if (CY_CPU_CORTEX_M4)
 101:Generated_Source\PSoC6/ADC_1.c ****         (void)Cy_SysInt_Init(&ADC_1_IRQ_cfg, userIsr);
 1022              		.loc 7 101 0
 1023 000c 7968     		ldr	r1, [r7, #4]
 1024 000e 0648     		ldr	r0, .L63
 1025 0010 FFF7FEFF 		bl	Cy_SysInt_Init
 102:Generated_Source\PSoC6/ADC_1.c ****         NVIC_EnableIRQ(ADC_1_IRQ_cfg.intrSrc);
 1026              		.loc 7 102 0
 1027 0014 044B     		ldr	r3, .L63
 1028 0016 B3F90030 		ldrsh	r3, [r3]
 1029 001a 1846     		mov	r0, r3
 1030 001c FFF7FEFF 		bl	__NVIC_EnableIRQ
 103:Generated_Source\PSoC6/ADC_1.c ****     #endif
 104:Generated_Source\PSoC6/ADC_1.c ****     #endif
 105:Generated_Source\PSoC6/ADC_1.c **** 
 106:Generated_Source\PSoC6/ADC_1.c ****     #ifdef ADC_1_IRQ__INTC_CORTEXM0P_ASSIGNED
 107:Generated_Source\PSoC6/ADC_1.c ****     #if (CY_CPU_CORTEX_M0P)
 108:Generated_Source\PSoC6/ADC_1.c ****         (void)Cy_SysInt_Init(&ADC_1_IRQ_cfg, userIsr);
 109:Generated_Source\PSoC6/ADC_1.c ****         NVIC_EnableIRQ(ADC_1_IRQ_cfg.intrSrc);
 110:Generated_Source\PSoC6/ADC_1.c ****     #endif
 111:Generated_Source\PSoC6/ADC_1.c ****     #endif
 112:Generated_Source\PSoC6/ADC_1.c **** 
 113:Generated_Source\PSoC6/ADC_1.c **** }
 1031              		.loc 7 113 0
 1032 0020 00BF     		nop
 1033 0022 0837     		adds	r7, r7, #8
 1034              		.cfi_def_cfa_offset 8
 1035 0024 BD46     		mov	sp, r7
 1036              		.cfi_def_cfa_register 13
 1037              		@ sp needed
 1038 0026 80BD     		pop	{r7, pc}
 1039              	.L64:
 1040              		.align	2
 1041              	.L63:
 1042 0028 00000000 		.word	ADC_1_IRQ_cfg
 1043              		.cfi_endproc
 1044              	.LFE275:
 1045              		.size	ADC_1_StartEx, .-ADC_1_StartEx
 1046              		.section	.text.ADC_1_InitConfig,"ax",%progbits
 1047              		.align	2
 1048              		.global	ADC_1_InitConfig
 1049              		.thumb
 1050              		.thumb_func
 1051              		.type	ADC_1_InitConfig, %function
 1052              	ADC_1_InitConfig:
 1053              	.LFB276:
 114:Generated_Source\PSoC6/ADC_1.c **** 
 115:Generated_Source\PSoC6/ADC_1.c **** /* ****************************************************************************
 116:Generated_Source\PSoC6/ADC_1.c **** * Function Name: ADC_1_InitConfig
 117:Generated_Source\PSoC6/ADC_1.c **** ****************************************************************************//*
 118:Generated_Source\PSoC6/ADC_1.c **** *
 119:Generated_Source\PSoC6/ADC_1.c **** * \brief Configures all of the registers for a given configuration for scanning.
 120:Generated_Source\PSoC6/ADC_1.c **** *
 121:Generated_Source\PSoC6/ADC_1.c **** * \param scan Number of scan defined in the ADC_1.
 122:Generated_Source\PSoC6/ADC_1.c **** *
 123:Generated_Source\PSoC6/ADC_1.c **** * \return None
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 161


 124:Generated_Source\PSoC6/ADC_1.c **** *
 125:Generated_Source\PSoC6/ADC_1.c **** * \sideeffect None
 126:Generated_Source\PSoC6/ADC_1.c **** *
 127:Generated_Source\PSoC6/ADC_1.c **** *******************************************************************************/
 128:Generated_Source\PSoC6/ADC_1.c **** void ADC_1_InitConfig(const ADC_1_CONFIG_STRUCT *config)
 129:Generated_Source\PSoC6/ADC_1.c **** {
 1054              		.loc 7 129 0
 1055              		.cfi_startproc
 1056              		@ args = 0, pretend = 0, frame = 16
 1057              		@ frame_needed = 1, uses_anonymous_args = 0
 1058 0000 80B5     		push	{r7, lr}
 1059              		.cfi_def_cfa_offset 8
 1060              		.cfi_offset 7, -8
 1061              		.cfi_offset 14, -4
 1062 0002 84B0     		sub	sp, sp, #16
 1063              		.cfi_def_cfa_offset 24
 1064 0004 00AF     		add	r7, sp, #0
 1065              		.cfi_def_cfa_register 7
 1066 0006 7860     		str	r0, [r7, #4]
 130:Generated_Source\PSoC6/ADC_1.c ****     bool deInitRouting = false;
 1067              		.loc 7 130 0
 1068 0008 0023     		movs	r3, #0
 1069 000a FB73     		strb	r3, [r7, #15]
 131:Generated_Source\PSoC6/ADC_1.c **** 
 132:Generated_Source\PSoC6/ADC_1.c ****     /* If there is an internal SAR clock, set up its divider values. */
 133:Generated_Source\PSoC6/ADC_1.c ****     #if (ADC_1_CLOCK_INTERNAL)
 134:Generated_Source\PSoC6/ADC_1.c ****         ADC_1_intSarClock_Disable();
 1070              		.loc 7 134 0
 1071 000c FFF7FEFF 		bl	ADC_1_intSarClock_Disable
 135:Generated_Source\PSoC6/ADC_1.c ****         ADC_1_intSarClock_SetDivider(config->clkDivider);
 1072              		.loc 7 135 0
 1073 0010 7B68     		ldr	r3, [r7, #4]
 1074 0012 1B69     		ldr	r3, [r3, #16]
 1075 0014 1846     		mov	r0, r3
 1076 0016 FFF7FEFF 		bl	ADC_1_intSarClock_SetDivider
 136:Generated_Source\PSoC6/ADC_1.c ****         ADC_1_intSarClock_Enable();
 1077              		.loc 7 136 0
 1078 001a FFF7FEFF 		bl	ADC_1_intSarClock_Enable
 137:Generated_Source\PSoC6/ADC_1.c ****     #endif /* ADC_1_CLOCK_INTERNAL */
 138:Generated_Source\PSoC6/ADC_1.c **** 
 139:Generated_Source\PSoC6/ADC_1.c ****     /* Init SAR and MUX registers */
 140:Generated_Source\PSoC6/ADC_1.c ****     (void)Cy_SAR_DeInit(ADC_1_SAR__HW, deInitRouting);
 1079              		.loc 7 140 0
 1080 001e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1081 0020 1946     		mov	r1, r3
 1082 0022 0D48     		ldr	r0, .L69
 1083 0024 FFF7FEFF 		bl	Cy_SAR_DeInit
 141:Generated_Source\PSoC6/ADC_1.c ****     (void)Cy_SAR_Init(ADC_1_SAR__HW, config->hwConfigStc);
 1084              		.loc 7 141 0
 1085 0028 7B68     		ldr	r3, [r7, #4]
 1086 002a 9B68     		ldr	r3, [r3, #8]
 1087 002c 1946     		mov	r1, r3
 1088 002e 0A48     		ldr	r0, .L69
 1089 0030 FFF7FEFF 		bl	Cy_SAR_Init
 142:Generated_Source\PSoC6/ADC_1.c **** 
 143:Generated_Source\PSoC6/ADC_1.c ****     /* Connect Vminus to VSSA when even one channel is single-ended or multiple channels configured
 144:Generated_Source\PSoC6/ADC_1.c ****     if(1uL == ADC_1_MUX_SWITCH0_INIT)
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 162


 145:Generated_Source\PSoC6/ADC_1.c ****     {
 146:Generated_Source\PSoC6/ADC_1.c ****         Cy_SAR_SetVssaVminusSwitch(ADC_1_SAR__HW, CY_SAR_SWITCH_CLOSE);
 1090              		.loc 7 146 0
 1091 0034 0121     		movs	r1, #1
 1092 0036 0848     		ldr	r0, .L69
 1093 0038 FFF7FEFF 		bl	Cy_SAR_SetVssaVminusSwitch
 147:Generated_Source\PSoC6/ADC_1.c **** 
 148:Generated_Source\PSoC6/ADC_1.c ****         /* Set MUX_HW_CTRL_VSSA in MUX_SWITCH_HW_CTRL when multiple channels enabled */
 149:Generated_Source\PSoC6/ADC_1.c ****         if(1uL < config->numChannels)
 1094              		.loc 7 149 0
 1095 003c 7B68     		ldr	r3, [r7, #4]
 1096 003e 5B68     		ldr	r3, [r3, #4]
 1097 0040 012B     		cmp	r3, #1
 1098 0042 04D9     		bls	.L68
 150:Generated_Source\PSoC6/ADC_1.c ****         {
 151:Generated_Source\PSoC6/ADC_1.c ****             Cy_SAR_SetVssaSarSeqCtrl(ADC_1_SAR__HW, CY_SAR_SWITCH_SEQ_CTRL_ENABLE);
 1099              		.loc 7 151 0
 1100 0044 0121     		movs	r1, #1
 1101 0046 0448     		ldr	r0, .L69
 1102 0048 FFF7FEFF 		bl	Cy_SAR_SetVssaSarSeqCtrl
 152:Generated_Source\PSoC6/ADC_1.c ****         }
 153:Generated_Source\PSoC6/ADC_1.c ****     }
 154:Generated_Source\PSoC6/ADC_1.c **** 
 155:Generated_Source\PSoC6/ADC_1.c ****     return;
 1103              		.loc 7 155 0
 1104 004c 00BF     		nop
 1105              	.L68:
 1106 004e 00BF     		nop
 156:Generated_Source\PSoC6/ADC_1.c **** }
 1107              		.loc 7 156 0
 1108 0050 1037     		adds	r7, r7, #16
 1109              		.cfi_def_cfa_offset 8
 1110 0052 BD46     		mov	sp, r7
 1111              		.cfi_def_cfa_register 13
 1112              		@ sp needed
 1113 0054 80BD     		pop	{r7, pc}
 1114              	.L70:
 1115 0056 00BF     		.align	2
 1116              	.L69:
 1117 0058 00001D41 		.word	1092419584
 1118              		.cfi_endproc
 1119              	.LFE276:
 1120              		.size	ADC_1_InitConfig, .-ADC_1_InitConfig
 1121              		.section	.text.ADC_1_SelectConfig,"ax",%progbits
 1122              		.align	2
 1123              		.global	ADC_1_SelectConfig
 1124              		.thumb
 1125              		.thumb_func
 1126              		.type	ADC_1_SelectConfig, %function
 1127              	ADC_1_SelectConfig:
 1128              	.LFB277:
 157:Generated_Source\PSoC6/ADC_1.c **** 
 158:Generated_Source\PSoC6/ADC_1.c **** /* ****************************************************************************
 159:Generated_Source\PSoC6/ADC_1.c **** * Function Name: ADC_1_SelectConfig
 160:Generated_Source\PSoC6/ADC_1.c **** ****************************************************************************//*
 161:Generated_Source\PSoC6/ADC_1.c **** *
 162:Generated_Source\PSoC6/ADC_1.c **** * \brief Selects the predefined configuration for scanning.
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 163


 163:Generated_Source\PSoC6/ADC_1.c **** *
 164:Generated_Source\PSoC6/ADC_1.c **** * \param config Number of configuration in the ADC_1.
 165:Generated_Source\PSoC6/ADC_1.c **** *
 166:Generated_Source\PSoC6/ADC_1.c **** * \param restart Set to 1u if the ADC_1 should be  restarted after
 167:Generated_Source\PSoC6/ADC_1.c **** * selecting the configuration.
 168:Generated_Source\PSoC6/ADC_1.c **** *
 169:Generated_Source\PSoC6/ADC_1.c **** *******************************************************************************/
 170:Generated_Source\PSoC6/ADC_1.c **** void ADC_1_SelectConfig(uint32_t config, uint32_t restart)
 171:Generated_Source\PSoC6/ADC_1.c **** {
 1129              		.loc 7 171 0
 1130              		.cfi_startproc
 1131              		@ args = 0, pretend = 0, frame = 8
 1132              		@ frame_needed = 1, uses_anonymous_args = 0
 1133 0000 80B5     		push	{r7, lr}
 1134              		.cfi_def_cfa_offset 8
 1135              		.cfi_offset 7, -8
 1136              		.cfi_offset 14, -4
 1137 0002 82B0     		sub	sp, sp, #8
 1138              		.cfi_def_cfa_offset 16
 1139 0004 00AF     		add	r7, sp, #0
 1140              		.cfi_def_cfa_register 7
 1141 0006 7860     		str	r0, [r7, #4]
 1142 0008 3960     		str	r1, [r7]
 172:Generated_Source\PSoC6/ADC_1.c ****     /* Check whether the configuration number is valid or not */
 173:Generated_Source\PSoC6/ADC_1.c ****     if(ADC_1_TOTAL_CONFIGS > config)
 1143              		.loc 7 173 0
 1144 000a 7B68     		ldr	r3, [r7, #4]
 1145 000c 002B     		cmp	r3, #0
 1146 000e 26D1     		bne	.L75
 174:Generated_Source\PSoC6/ADC_1.c ****     {
 175:Generated_Source\PSoC6/ADC_1.c ****         /* Stop the ADC before changing configurations */
 176:Generated_Source\PSoC6/ADC_1.c ****         ADC_1_Stop();
 1147              		.loc 7 176 0
 1148 0010 FFF7FEFF 		bl	ADC_1_Stop
 177:Generated_Source\PSoC6/ADC_1.c ****         ADC_1_selected = 1u;
 1149              		.loc 7 177 0
 1150 0014 144B     		ldr	r3, .L76
 1151 0016 0122     		movs	r2, #1
 1152 0018 1A70     		strb	r2, [r3]
 178:Generated_Source\PSoC6/ADC_1.c **** 
 179:Generated_Source\PSoC6/ADC_1.c ****         if(0u == ADC_1_initVar)
 1153              		.loc 7 179 0
 1154 001a 144B     		ldr	r3, .L76+4
 1155 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1156 001e 002B     		cmp	r3, #0
 1157 0020 08D1     		bne	.L73
 180:Generated_Source\PSoC6/ADC_1.c ****         {
 181:Generated_Source\PSoC6/ADC_1.c ****             ADC_1_Init();
 1158              		.loc 7 181 0
 1159 0022 FFF7FEFF 		bl	ADC_1_Init
 182:Generated_Source\PSoC6/ADC_1.c ****             ADC_1_initVar |= ADC_1_INIT_VAR_INIT_FLAG;
 1160              		.loc 7 182 0
 1161 0026 114B     		ldr	r3, .L76+4
 1162 0028 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1163 002a 43F00103 		orr	r3, r3, #1
 1164 002e DAB2     		uxtb	r2, r3
 1165 0030 0E4B     		ldr	r3, .L76+4
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 164


 1166 0032 1A70     		strb	r2, [r3]
 1167              	.L73:
 183:Generated_Source\PSoC6/ADC_1.c ****         }
 184:Generated_Source\PSoC6/ADC_1.c ****         #if (ADC_1_VREF_ROUTED)
 185:Generated_Source\PSoC6/ADC_1.c ****             ADC_1_vrefAMux_DisconnectAll();
 186:Generated_Source\PSoC6/ADC_1.c ****         #endif
 187:Generated_Source\PSoC6/ADC_1.c **** 
 188:Generated_Source\PSoC6/ADC_1.c ****         ADC_1_InitConfig(&ADC_1_allConfigs[config]);
 1168              		.loc 7 188 0
 1169 0034 7A68     		ldr	r2, [r7, #4]
 1170 0036 1346     		mov	r3, r2
 1171 0038 9B00     		lsls	r3, r3, #2
 1172 003a 1344     		add	r3, r3, r2
 1173 003c 9B00     		lsls	r3, r3, #2
 1174 003e 0C4A     		ldr	r2, .L76+8
 1175 0040 1344     		add	r3, r3, r2
 1176 0042 1846     		mov	r0, r3
 1177 0044 FFF7FEFF 		bl	ADC_1_InitConfig
 189:Generated_Source\PSoC6/ADC_1.c **** 
 190:Generated_Source\PSoC6/ADC_1.c ****         #if (ADC_1_VREF_ROUTED)
 191:Generated_Source\PSoC6/ADC_1.c ****             ADC_1_vrefAMux_Select((uint8)config);
 192:Generated_Source\PSoC6/ADC_1.c ****         #endif
 193:Generated_Source\PSoC6/ADC_1.c **** 
 194:Generated_Source\PSoC6/ADC_1.c ****         ADC_1_currentConfig = config;
 1178              		.loc 7 194 0
 1179 0048 0A4A     		ldr	r2, .L76+12
 1180 004a 7B68     		ldr	r3, [r7, #4]
 1181 004c 1360     		str	r3, [r2]
 195:Generated_Source\PSoC6/ADC_1.c **** 
 196:Generated_Source\PSoC6/ADC_1.c ****         if(1u == restart)
 1182              		.loc 7 196 0
 1183 004e 3B68     		ldr	r3, [r7]
 1184 0050 012B     		cmp	r3, #1
 1185 0052 04D1     		bne	.L75
 197:Generated_Source\PSoC6/ADC_1.c ****         {
 198:Generated_Source\PSoC6/ADC_1.c ****             /* Restart the ADC */
 199:Generated_Source\PSoC6/ADC_1.c ****             ADC_1_Start();
 1186              		.loc 7 199 0
 1187 0054 FFF7FEFF 		bl	ADC_1_Start
 200:Generated_Source\PSoC6/ADC_1.c **** 
 201:Generated_Source\PSoC6/ADC_1.c ****             /* Restart the scan */
 202:Generated_Source\PSoC6/ADC_1.c ****             ADC_1_StartConvert();
 1188              		.loc 7 202 0
 1189 0058 FFF7FEFF 		bl	ADC_1_StartConvert
 203:Generated_Source\PSoC6/ADC_1.c ****         }
 204:Generated_Source\PSoC6/ADC_1.c ****     }
 205:Generated_Source\PSoC6/ADC_1.c ****     return;
 1190              		.loc 7 205 0
 1191 005c 00BF     		nop
 1192              	.L75:
 1193 005e 00BF     		nop
 206:Generated_Source\PSoC6/ADC_1.c **** }
 1194              		.loc 7 206 0
 1195 0060 0837     		adds	r7, r7, #8
 1196              		.cfi_def_cfa_offset 8
 1197 0062 BD46     		mov	sp, r7
 1198              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 165


 1199              		@ sp needed
 1200 0064 80BD     		pop	{r7, pc}
 1201              	.L77:
 1202 0066 00BF     		.align	2
 1203              	.L76:
 1204 0068 00000000 		.word	ADC_1_selected
 1205 006c 00000000 		.word	ADC_1_initVar
 1206 0070 00000000 		.word	ADC_1_allConfigs
 1207 0074 00000000 		.word	ADC_1_currentConfig
 1208              		.cfi_endproc
 1209              	.LFE277:
 1210              		.size	ADC_1_SelectConfig, .-ADC_1_SelectConfig
 1211              		.section	.text.ADC_1_StartConvert,"ax",%progbits
 1212              		.align	2
 1213              		.global	ADC_1_StartConvert
 1214              		.thumb
 1215              		.thumb_func
 1216              		.type	ADC_1_StartConvert, %function
 1217              	ADC_1_StartConvert:
 1218              	.LFB278:
 207:Generated_Source\PSoC6/ADC_1.c **** 
 208:Generated_Source\PSoC6/ADC_1.c **** /*******************************************************************************
 209:Generated_Source\PSoC6/ADC_1.c **** * Function Name: ADC_1_StartConvert
 210:Generated_Source\PSoC6/ADC_1.c **** ****************************************************************************//**
 211:Generated_Source\PSoC6/ADC_1.c **** *
 212:Generated_Source\PSoC6/ADC_1.c **** * \brief In continuous mode, this API starts the conversion process and it runs
 213:Generated_Source\PSoC6/ADC_1.c **** * continuously.
 214:Generated_Source\PSoC6/ADC_1.c **** 
 215:Generated_Source\PSoC6/ADC_1.c **** * In Single Shot mode, the function triggers a single scan and
 216:Generated_Source\PSoC6/ADC_1.c **** * every scan requires a call of this function. The mode is set with the
 217:Generated_Source\PSoC6/ADC_1.c **** * Sample Mode parameter in the customizer. The customizer setting can be
 218:Generated_Source\PSoC6/ADC_1.c **** * overridden at run time with the ADC_1_SetConvertMode() function.
 219:Generated_Source\PSoC6/ADC_1.c **** *
 220:Generated_Source\PSoC6/ADC_1.c **** * \param None
 221:Generated_Source\PSoC6/ADC_1.c **** *
 222:Generated_Source\PSoC6/ADC_1.c **** * \return None
 223:Generated_Source\PSoC6/ADC_1.c **** *
 224:Generated_Source\PSoC6/ADC_1.c **** * \sideeffect None
 225:Generated_Source\PSoC6/ADC_1.c **** *
 226:Generated_Source\PSoC6/ADC_1.c **** *******************************************************************************/
 227:Generated_Source\PSoC6/ADC_1.c **** void ADC_1_StartConvert(void)
 228:Generated_Source\PSoC6/ADC_1.c **** {
 1219              		.loc 7 228 0
 1220              		.cfi_startproc
 1221              		@ args = 0, pretend = 0, frame = 0
 1222              		@ frame_needed = 1, uses_anonymous_args = 0
 1223 0000 80B5     		push	{r7, lr}
 1224              		.cfi_def_cfa_offset 8
 1225              		.cfi_offset 7, -8
 1226              		.cfi_offset 14, -4
 1227 0002 00AF     		add	r7, sp, #0
 1228              		.cfi_def_cfa_register 7
 229:Generated_Source\PSoC6/ADC_1.c ****     if (SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_Msk == (ADC_1_SAR__HW->SAMPLE_CTRL & SAR_SAMPLE_CTRL_DSI_
 1229              		.loc 7 229 0
 1230 0004 084B     		ldr	r3, .L82
 1231 0006 5B68     		ldr	r3, [r3, #4]
 1232 0008 03F48023 		and	r3, r3, #262144
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 166


 1233 000c 002B     		cmp	r3, #0
 1234 000e 04D0     		beq	.L79
 230:Generated_Source\PSoC6/ADC_1.c ****     {
 231:Generated_Source\PSoC6/ADC_1.c ****         Cy_SAR_StartConvert(ADC_1_SAR__HW, CY_SAR_START_CONVERT_CONTINUOUS);
 1235              		.loc 7 231 0
 1236 0010 0121     		movs	r1, #1
 1237 0012 0548     		ldr	r0, .L82
 1238 0014 FFF7FEFF 		bl	Cy_SAR_StartConvert
 232:Generated_Source\PSoC6/ADC_1.c ****     }
 233:Generated_Source\PSoC6/ADC_1.c ****     else
 234:Generated_Source\PSoC6/ADC_1.c ****     {
 235:Generated_Source\PSoC6/ADC_1.c ****         Cy_SAR_StartConvert(ADC_1_SAR__HW, CY_SAR_START_CONVERT_SINGLE_SHOT);
 236:Generated_Source\PSoC6/ADC_1.c ****     }
 237:Generated_Source\PSoC6/ADC_1.c **** }
 1239              		.loc 7 237 0
 1240 0018 03E0     		b	.L81
 1241              	.L79:
 235:Generated_Source\PSoC6/ADC_1.c ****     }
 1242              		.loc 7 235 0
 1243 001a 0021     		movs	r1, #0
 1244 001c 0248     		ldr	r0, .L82
 1245 001e FFF7FEFF 		bl	Cy_SAR_StartConvert
 1246              	.L81:
 1247              		.loc 7 237 0
 1248 0022 00BF     		nop
 1249 0024 80BD     		pop	{r7, pc}
 1250              	.L83:
 1251 0026 00BF     		.align	2
 1252              	.L82:
 1253 0028 00001D41 		.word	1092419584
 1254              		.cfi_endproc
 1255              	.LFE278:
 1256              		.size	ADC_1_StartConvert, .-ADC_1_StartConvert
 1257              		.section	.text.ADC_1_SetConvertMode,"ax",%progbits
 1258              		.align	2
 1259              		.global	ADC_1_SetConvertMode
 1260              		.thumb
 1261              		.thumb_func
 1262              		.type	ADC_1_SetConvertMode, %function
 1263              	ADC_1_SetConvertMode:
 1264              	.LFB279:
 238:Generated_Source\PSoC6/ADC_1.c **** 
 239:Generated_Source\PSoC6/ADC_1.c **** /*******************************************************************************
 240:Generated_Source\PSoC6/ADC_1.c **** * Function Name: ADC_1_SetConvertMode
 241:Generated_Source\PSoC6/ADC_1.c **** ****************************************************************************//**
 242:Generated_Source\PSoC6/ADC_1.c **** *
 243:Generated_Source\PSoC6/ADC_1.c **** * \brief Sets the conversion mode to either Single-Shot or continuous. This
 244:Generated_Source\PSoC6/ADC_1.c **** * function overrides the settings applied in the customizer. Changing
 245:Generated_Source\PSoC6/ADC_1.c **** * configurations will restore the values set in the customizer.
 246:Generated_Source\PSoC6/ADC_1.c **** *
 247:Generated_Source\PSoC6/ADC_1.c **** * \param mode Sets the conversion mode.
 248:Generated_Source\PSoC6/ADC_1.c **** *
 249:Generated_Source\PSoC6/ADC_1.c **** * \return None
 250:Generated_Source\PSoC6/ADC_1.c **** *
 251:Generated_Source\PSoC6/ADC_1.c **** * \sideeffect None
 252:Generated_Source\PSoC6/ADC_1.c **** *
 253:Generated_Source\PSoC6/ADC_1.c **** *******************************************************************************/
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 167


 254:Generated_Source\PSoC6/ADC_1.c **** void ADC_1_SetConvertMode(cy_en_sar_start_convert_sel_t mode)
 255:Generated_Source\PSoC6/ADC_1.c **** {
 1265              		.loc 7 255 0
 1266              		.cfi_startproc
 1267              		@ args = 0, pretend = 0, frame = 8
 1268              		@ frame_needed = 1, uses_anonymous_args = 0
 1269              		@ link register save eliminated.
 1270 0000 80B4     		push	{r7}
 1271              		.cfi_def_cfa_offset 4
 1272              		.cfi_offset 7, -4
 1273 0002 83B0     		sub	sp, sp, #12
 1274              		.cfi_def_cfa_offset 16
 1275 0004 00AF     		add	r7, sp, #0
 1276              		.cfi_def_cfa_register 7
 1277 0006 0346     		mov	r3, r0
 1278 0008 FB71     		strb	r3, [r7, #7]
 256:Generated_Source\PSoC6/ADC_1.c ****     switch(mode)
 1279              		.loc 7 256 0
 1280 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1281 000c 012B     		cmp	r3, #1
 1282 000e 06D1     		bne	.L88
 257:Generated_Source\PSoC6/ADC_1.c ****     {
 258:Generated_Source\PSoC6/ADC_1.c ****     case CY_SAR_START_CONVERT_CONTINUOUS:
 259:Generated_Source\PSoC6/ADC_1.c ****         ADC_1_SAR__HW->SAMPLE_CTRL |= SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_Msk;
 1283              		.loc 7 259 0
 1284 0010 094A     		ldr	r2, .L89
 1285 0012 094B     		ldr	r3, .L89
 1286 0014 5B68     		ldr	r3, [r3, #4]
 1287 0016 43F48023 		orr	r3, r3, #262144
 1288 001a 5360     		str	r3, [r2, #4]
 260:Generated_Source\PSoC6/ADC_1.c ****         break;
 1289              		.loc 7 260 0
 1290 001c 06E0     		b	.L87
 1291              	.L88:
 261:Generated_Source\PSoC6/ADC_1.c ****     case CY_SAR_START_CONVERT_SINGLE_SHOT:
 262:Generated_Source\PSoC6/ADC_1.c ****     default:
 263:Generated_Source\PSoC6/ADC_1.c ****         ADC_1_SAR__HW->SAMPLE_CTRL &= ~SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_Msk;
 1292              		.loc 7 263 0
 1293 001e 064A     		ldr	r2, .L89
 1294 0020 054B     		ldr	r3, .L89
 1295 0022 5B68     		ldr	r3, [r3, #4]
 1296 0024 23F48023 		bic	r3, r3, #262144
 1297 0028 5360     		str	r3, [r2, #4]
 264:Generated_Source\PSoC6/ADC_1.c ****         break;
 1298              		.loc 7 264 0
 1299 002a 00BF     		nop
 1300              	.L87:
 265:Generated_Source\PSoC6/ADC_1.c ****     }
 266:Generated_Source\PSoC6/ADC_1.c **** }
 1301              		.loc 7 266 0
 1302 002c 00BF     		nop
 1303 002e 0C37     		adds	r7, r7, #12
 1304              		.cfi_def_cfa_offset 4
 1305 0030 BD46     		mov	sp, r7
 1306              		.cfi_def_cfa_register 13
 1307              		@ sp needed
 1308 0032 5DF8047B 		ldr	r7, [sp], #4
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 168


 1309              		.cfi_restore 7
 1310              		.cfi_def_cfa_offset 0
 1311 0036 7047     		bx	lr
 1312              	.L90:
 1313              		.align	2
 1314              	.L89:
 1315 0038 00001D41 		.word	1092419584
 1316              		.cfi_endproc
 1317              	.LFE279:
 1318              		.size	ADC_1_SetConvertMode, .-ADC_1_SetConvertMode
 1319              		.section	.text.ADC_1_IRQ_Enable,"ax",%progbits
 1320              		.align	2
 1321              		.global	ADC_1_IRQ_Enable
 1322              		.thumb
 1323              		.thumb_func
 1324              		.type	ADC_1_IRQ_Enable, %function
 1325              	ADC_1_IRQ_Enable:
 1326              	.LFB280:
 267:Generated_Source\PSoC6/ADC_1.c **** 
 268:Generated_Source\PSoC6/ADC_1.c **** /* ****************************************************************************
 269:Generated_Source\PSoC6/ADC_1.c **** * Function Name: ADC_1_IRQ_Enable
 270:Generated_Source\PSoC6/ADC_1.c **** ****************************************************************************//*
 271:Generated_Source\PSoC6/ADC_1.c **** *
 272:Generated_Source\PSoC6/ADC_1.c **** * \brief Enables interrupts to occur at the end of a conversion. Global
 273:Generated_Source\PSoC6/ADC_1.c **** * interrupts must also be enabled for the ADC_1 interrupts to occur.
 274:Generated_Source\PSoC6/ADC_1.c **** *
 275:Generated_Source\PSoC6/ADC_1.c **** * \param None
 276:Generated_Source\PSoC6/ADC_1.c **** *
 277:Generated_Source\PSoC6/ADC_1.c **** * \return None
 278:Generated_Source\PSoC6/ADC_1.c **** *
 279:Generated_Source\PSoC6/ADC_1.c **** * \sideeffect None
 280:Generated_Source\PSoC6/ADC_1.c **** *
 281:Generated_Source\PSoC6/ADC_1.c **** *******************************************************************************/
 282:Generated_Source\PSoC6/ADC_1.c **** void ADC_1_IRQ_Enable(void){
 1327              		.loc 7 282 0
 1328              		.cfi_startproc
 1329              		@ args = 0, pretend = 0, frame = 0
 1330              		@ frame_needed = 1, uses_anonymous_args = 0
 1331 0000 80B5     		push	{r7, lr}
 1332              		.cfi_def_cfa_offset 8
 1333              		.cfi_offset 7, -8
 1334              		.cfi_offset 14, -4
 1335 0002 00AF     		add	r7, sp, #0
 1336              		.cfi_def_cfa_register 7
 283:Generated_Source\PSoC6/ADC_1.c ****     /* Interrupt core assignment will be up to the user. */
 284:Generated_Source\PSoC6/ADC_1.c ****     #ifdef ADC_1_IRQ__INTC_CORTEXM4_ASSIGNED
 285:Generated_Source\PSoC6/ADC_1.c ****     #if (CY_CPU_CORTEX_M4)
 286:Generated_Source\PSoC6/ADC_1.c ****         NVIC_EnableIRQ(ADC_1_IRQ_cfg.intrSrc);
 1337              		.loc 7 286 0
 1338 0004 034B     		ldr	r3, .L92
 1339 0006 B3F90030 		ldrsh	r3, [r3]
 1340 000a 1846     		mov	r0, r3
 1341 000c FFF7FEFF 		bl	__NVIC_EnableIRQ
 287:Generated_Source\PSoC6/ADC_1.c ****     #endif
 288:Generated_Source\PSoC6/ADC_1.c ****     #endif
 289:Generated_Source\PSoC6/ADC_1.c **** 
 290:Generated_Source\PSoC6/ADC_1.c ****     #ifdef ADC_1_IRQ__INTC_CORTEXM0P_ASSIGNED
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 169


 291:Generated_Source\PSoC6/ADC_1.c ****     #if (CY_CPU_CORTEX_M0P)
 292:Generated_Source\PSoC6/ADC_1.c ****         NVIC_EnableIRQ(ADC_1_IRQ_cfg.intrSrc);
 293:Generated_Source\PSoC6/ADC_1.c ****     #endif
 294:Generated_Source\PSoC6/ADC_1.c ****     #endif
 295:Generated_Source\PSoC6/ADC_1.c **** }
 1342              		.loc 7 295 0
 1343 0010 00BF     		nop
 1344 0012 80BD     		pop	{r7, pc}
 1345              	.L93:
 1346              		.align	2
 1347              	.L92:
 1348 0014 00000000 		.word	ADC_1_IRQ_cfg
 1349              		.cfi_endproc
 1350              	.LFE280:
 1351              		.size	ADC_1_IRQ_Enable, .-ADC_1_IRQ_Enable
 1352              		.section	.text.ADC_1_IRQ_Disable,"ax",%progbits
 1353              		.align	2
 1354              		.global	ADC_1_IRQ_Disable
 1355              		.thumb
 1356              		.thumb_func
 1357              		.type	ADC_1_IRQ_Disable, %function
 1358              	ADC_1_IRQ_Disable:
 1359              	.LFB281:
 296:Generated_Source\PSoC6/ADC_1.c **** 
 297:Generated_Source\PSoC6/ADC_1.c **** /* ****************************************************************************
 298:Generated_Source\PSoC6/ADC_1.c **** * Function Name: ADC_1_IRQ_Disable
 299:Generated_Source\PSoC6/ADC_1.c **** ****************************************************************************//*
 300:Generated_Source\PSoC6/ADC_1.c **** *
 301:Generated_Source\PSoC6/ADC_1.c **** * \brief Disables end of conversion interrupts.
 302:Generated_Source\PSoC6/ADC_1.c **** *
 303:Generated_Source\PSoC6/ADC_1.c **** * \param None
 304:Generated_Source\PSoC6/ADC_1.c **** *
 305:Generated_Source\PSoC6/ADC_1.c **** * \return None
 306:Generated_Source\PSoC6/ADC_1.c **** *
 307:Generated_Source\PSoC6/ADC_1.c **** * \sideeffect None
 308:Generated_Source\PSoC6/ADC_1.c **** *
 309:Generated_Source\PSoC6/ADC_1.c **** *******************************************************************************/
 310:Generated_Source\PSoC6/ADC_1.c **** void ADC_1_IRQ_Disable(void){
 1360              		.loc 7 310 0
 1361              		.cfi_startproc
 1362              		@ args = 0, pretend = 0, frame = 0
 1363              		@ frame_needed = 1, uses_anonymous_args = 0
 1364 0000 80B5     		push	{r7, lr}
 1365              		.cfi_def_cfa_offset 8
 1366              		.cfi_offset 7, -8
 1367              		.cfi_offset 14, -4
 1368 0002 00AF     		add	r7, sp, #0
 1369              		.cfi_def_cfa_register 7
 311:Generated_Source\PSoC6/ADC_1.c ****     /* Interrupt core assignment will be up to the user. */
 312:Generated_Source\PSoC6/ADC_1.c ****     #ifdef ADC_1_IRQ__INTC_CORTEXM4_ASSIGNED
 313:Generated_Source\PSoC6/ADC_1.c ****     #if (CY_CPU_CORTEX_M4)
 314:Generated_Source\PSoC6/ADC_1.c ****         NVIC_DisableIRQ(ADC_1_IRQ_cfg.intrSrc);
 1370              		.loc 7 314 0
 1371 0004 034B     		ldr	r3, .L95
 1372 0006 B3F90030 		ldrsh	r3, [r3]
 1373 000a 1846     		mov	r0, r3
 1374 000c FFF7FEFF 		bl	__NVIC_DisableIRQ
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 170


 315:Generated_Source\PSoC6/ADC_1.c ****     #endif
 316:Generated_Source\PSoC6/ADC_1.c ****     #endif
 317:Generated_Source\PSoC6/ADC_1.c **** 
 318:Generated_Source\PSoC6/ADC_1.c ****     #ifdef ADC_1_IRQ__INTC_CORTEXM0P_ASSIGNED
 319:Generated_Source\PSoC6/ADC_1.c ****     #if (CY_CPU_CORTEX_M0P)
 320:Generated_Source\PSoC6/ADC_1.c ****         NVIC_DisableIRQ(ADC_1_IRQ_cfg.intrSrc);
 321:Generated_Source\PSoC6/ADC_1.c ****     #endif
 322:Generated_Source\PSoC6/ADC_1.c ****     #endif
 323:Generated_Source\PSoC6/ADC_1.c **** }
 1375              		.loc 7 323 0
 1376 0010 00BF     		nop
 1377 0012 80BD     		pop	{r7, pc}
 1378              	.L96:
 1379              		.align	2
 1380              	.L95:
 1381 0014 00000000 		.word	ADC_1_IRQ_cfg
 1382              		.cfi_endproc
 1383              	.LFE281:
 1384              		.size	ADC_1_IRQ_Disable, .-ADC_1_IRQ_Disable
 1385              		.section	.text.ADC_1_SetEosMask,"ax",%progbits
 1386              		.align	2
 1387              		.global	ADC_1_SetEosMask
 1388              		.thumb
 1389              		.thumb_func
 1390              		.type	ADC_1_SetEosMask, %function
 1391              	ADC_1_SetEosMask:
 1392              	.LFB282:
 324:Generated_Source\PSoC6/ADC_1.c **** 
 325:Generated_Source\PSoC6/ADC_1.c **** /*******************************************************************************
 326:Generated_Source\PSoC6/ADC_1.c **** * Function Name: ADC_1_SetEosMask
 327:Generated_Source\PSoC6/ADC_1.c **** ****************************************************************************//**
 328:Generated_Source\PSoC6/ADC_1.c **** *
 329:Generated_Source\PSoC6/ADC_1.c **** * \brief Sets or clears the End of Scan (EOS) interrupt mask.
 330:Generated_Source\PSoC6/ADC_1.c **** *
 331:Generated_Source\PSoC6/ADC_1.c **** * \param mask 1 to set the mask, 0 to clear the mask.
 332:Generated_Source\PSoC6/ADC_1.c **** *
 333:Generated_Source\PSoC6/ADC_1.c **** * \return None
 334:Generated_Source\PSoC6/ADC_1.c **** *
 335:Generated_Source\PSoC6/ADC_1.c **** * \sideeffect All other bits in the INTR register are cleared by this function.
 336:Generated_Source\PSoC6/ADC_1.c **** *
 337:Generated_Source\PSoC6/ADC_1.c **** *******************************************************************************/
 338:Generated_Source\PSoC6/ADC_1.c **** void ADC_1_SetEosMask(uint32_t mask)
 339:Generated_Source\PSoC6/ADC_1.c **** {
 1393              		.loc 7 339 0
 1394              		.cfi_startproc
 1395              		@ args = 0, pretend = 0, frame = 16
 1396              		@ frame_needed = 1, uses_anonymous_args = 0
 1397 0000 80B5     		push	{r7, lr}
 1398              		.cfi_def_cfa_offset 8
 1399              		.cfi_offset 7, -8
 1400              		.cfi_offset 14, -4
 1401 0002 84B0     		sub	sp, sp, #16
 1402              		.cfi_def_cfa_offset 24
 1403 0004 00AF     		add	r7, sp, #0
 1404              		.cfi_def_cfa_register 7
 1405 0006 7860     		str	r0, [r7, #4]
 340:Generated_Source\PSoC6/ADC_1.c ****     uint32_t intrMaskReg;
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 171


 341:Generated_Source\PSoC6/ADC_1.c **** 
 342:Generated_Source\PSoC6/ADC_1.c ****     intrMaskReg = (0uL == mask) ? CY_SAR_DEINIT : SAR_INTR_MASK_EOS_MASK_Msk;
 1406              		.loc 7 342 0
 1407 0008 7B68     		ldr	r3, [r7, #4]
 1408 000a 002B     		cmp	r3, #0
 1409 000c 14BF     		ite	ne
 1410 000e 0123     		movne	r3, #1
 1411 0010 0023     		moveq	r3, #0
 1412 0012 DBB2     		uxtb	r3, r3
 1413 0014 FB60     		str	r3, [r7, #12]
 343:Generated_Source\PSoC6/ADC_1.c **** 
 344:Generated_Source\PSoC6/ADC_1.c ****     Cy_SAR_SetInterruptMask(ADC_1_SAR__HW, intrMaskReg);
 1414              		.loc 7 344 0
 1415 0016 F968     		ldr	r1, [r7, #12]
 1416 0018 0348     		ldr	r0, .L98
 1417 001a FFF7FEFF 		bl	Cy_SAR_SetInterruptMask
 345:Generated_Source\PSoC6/ADC_1.c **** }
 1418              		.loc 7 345 0
 1419 001e 00BF     		nop
 1420 0020 1037     		adds	r7, r7, #16
 1421              		.cfi_def_cfa_offset 8
 1422 0022 BD46     		mov	sp, r7
 1423              		.cfi_def_cfa_register 13
 1424              		@ sp needed
 1425 0024 80BD     		pop	{r7, pc}
 1426              	.L99:
 1427 0026 00BF     		.align	2
 1428              	.L98:
 1429 0028 00001D41 		.word	1092419584
 1430              		.cfi_endproc
 1431              	.LFE282:
 1432              		.size	ADC_1_SetEosMask, .-ADC_1_SetEosMask
 1433              		.section	.text.ADC_1_SetChanMask,"ax",%progbits
 1434              		.align	2
 1435              		.global	ADC_1_SetChanMask
 1436              		.thumb
 1437              		.thumb_func
 1438              		.type	ADC_1_SetChanMask, %function
 1439              	ADC_1_SetChanMask:
 1440              	.LFB283:
 346:Generated_Source\PSoC6/ADC_1.c **** 
 347:Generated_Source\PSoC6/ADC_1.c **** /******************************************************************************
 348:Generated_Source\PSoC6/ADC_1.c **** * Function Name: ADC_1_SetChanMask
 349:Generated_Source\PSoC6/ADC_1.c **** ****************************************************************************//*
 350:Generated_Source\PSoC6/ADC_1.c **** *
 351:Generated_Source\PSoC6/ADC_1.c **** * \brief Sets enable/disable mask for all channels in current configuration.
 352:Generated_Source\PSoC6/ADC_1.c **** *
 353:Generated_Source\PSoC6/ADC_1.c **** *
 354:Generated_Source\PSoC6/ADC_1.c **** * \param enableMask
 355:Generated_Source\PSoC6/ADC_1.c **** *  Channel enable/disable mask.
 356:Generated_Source\PSoC6/ADC_1.c **** *
 357:Generated_Source\PSoC6/ADC_1.c **** * \sideeffect
 358:Generated_Source\PSoC6/ADC_1.c **** *  None.
 359:Generated_Source\PSoC6/ADC_1.c **** *
 360:Generated_Source\PSoC6/ADC_1.c **** *******************************************************************************/
 361:Generated_Source\PSoC6/ADC_1.c **** void ADC_1_SetChanMask(uint32_t enableMask)
 362:Generated_Source\PSoC6/ADC_1.c **** {
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 172


 1441              		.loc 7 362 0
 1442              		.cfi_startproc
 1443              		@ args = 0, pretend = 0, frame = 16
 1444              		@ frame_needed = 1, uses_anonymous_args = 0
 1445 0000 80B5     		push	{r7, lr}
 1446              		.cfi_def_cfa_offset 8
 1447              		.cfi_offset 7, -8
 1448              		.cfi_offset 14, -4
 1449 0002 84B0     		sub	sp, sp, #16
 1450              		.cfi_def_cfa_offset 24
 1451 0004 00AF     		add	r7, sp, #0
 1452              		.cfi_def_cfa_register 7
 1453 0006 7860     		str	r0, [r7, #4]
 363:Generated_Source\PSoC6/ADC_1.c ****     uint32 chanCount = ADC_1_allConfigs[ADC_1_currentConfig].numChannels;
 1454              		.loc 7 363 0
 1455 0008 0D4B     		ldr	r3, .L101
 1456 000a 1A68     		ldr	r2, [r3]
 1457 000c 0D49     		ldr	r1, .L101+4
 1458 000e 1346     		mov	r3, r2
 1459 0010 9B00     		lsls	r3, r3, #2
 1460 0012 1344     		add	r3, r3, r2
 1461 0014 9B00     		lsls	r3, r3, #2
 1462 0016 0B44     		add	r3, r3, r1
 1463 0018 0433     		adds	r3, r3, #4
 1464 001a 1B68     		ldr	r3, [r3]
 1465 001c FB60     		str	r3, [r7, #12]
 364:Generated_Source\PSoC6/ADC_1.c ****     enableMask &= (uint32)((uint32)(1ul << chanCount) - 1ul);
 1466              		.loc 7 364 0
 1467 001e 0122     		movs	r2, #1
 1468 0020 FB68     		ldr	r3, [r7, #12]
 1469 0022 02FA03F3 		lsl	r3, r2, r3
 1470 0026 013B     		subs	r3, r3, #1
 1471 0028 7A68     		ldr	r2, [r7, #4]
 1472 002a 1340     		ands	r3, r3, r2
 1473 002c 7B60     		str	r3, [r7, #4]
 365:Generated_Source\PSoC6/ADC_1.c **** 
 366:Generated_Source\PSoC6/ADC_1.c ****     Cy_SAR_SetChanMask(ADC_1_SAR__HW, enableMask);
 1474              		.loc 7 366 0
 1475 002e 7968     		ldr	r1, [r7, #4]
 1476 0030 0548     		ldr	r0, .L101+8
 1477 0032 FFF7FEFF 		bl	Cy_SAR_SetChanMask
 367:Generated_Source\PSoC6/ADC_1.c **** }
 1478              		.loc 7 367 0
 1479 0036 00BF     		nop
 1480 0038 1037     		adds	r7, r7, #16
 1481              		.cfi_def_cfa_offset 8
 1482 003a BD46     		mov	sp, r7
 1483              		.cfi_def_cfa_register 13
 1484              		@ sp needed
 1485 003c 80BD     		pop	{r7, pc}
 1486              	.L102:
 1487 003e 00BF     		.align	2
 1488              	.L101:
 1489 0040 00000000 		.word	ADC_1_currentConfig
 1490 0044 00000000 		.word	ADC_1_allConfigs
 1491 0048 00001D41 		.word	1092419584
 1492              		.cfi_endproc
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 173


 1493              	.LFE283:
 1494              		.size	ADC_1_SetChanMask, .-ADC_1_SetChanMask
 1495              		.section	.text.ADC_1_IsEndConversion,"ax",%progbits
 1496              		.align	2
 1497              		.global	ADC_1_IsEndConversion
 1498              		.thumb
 1499              		.thumb_func
 1500              		.type	ADC_1_IsEndConversion, %function
 1501              	ADC_1_IsEndConversion:
 1502              	.LFB284:
 368:Generated_Source\PSoC6/ADC_1.c **** 
 369:Generated_Source\PSoC6/ADC_1.c **** /*******************************************************************************
 370:Generated_Source\PSoC6/ADC_1.c **** * Function Name: ADC_1_IsEndConversion
 371:Generated_Source\PSoC6/ADC_1.c **** ****************************************************************************//**
 372:Generated_Source\PSoC6/ADC_1.c **** *
 373:Generated_Source\PSoC6/ADC_1.c **** * \brief Immediately returns the status of the conversion or does not return
 374:Generated_Source\PSoC6/ADC_1.c **** * (blocking) until the conversion completes, depending on the retMode parameter.
 375:Generated_Source\PSoC6/ADC_1.c **** * In blocking mode, there is a time out of about 10 seconds for a CPU speed of
 376:Generated_Source\PSoC6/ADC_1.c **** * 100 Mhz.
 377:Generated_Source\PSoC6/ADC_1.c **** *
 378:Generated_Source\PSoC6/ADC_1.c **** * \param retMode Check conversion return mode.
 379:Generated_Source\PSoC6/ADC_1.c **** *
 380:Generated_Source\PSoC6/ADC_1.c **** * \return uint32_t: If a nonzero value is returned, the last conversion is complete.
 381:Generated_Source\PSoC6/ADC_1.c **** * If the returned value is zero, the ADC_1 is still calculating the last result.
 382:Generated_Source\PSoC6/ADC_1.c **** *
 383:Generated_Source\PSoC6/ADC_1.c **** * \sideeffect This function reads the end of conversion status, and clears it afterward.
 384:Generated_Source\PSoC6/ADC_1.c **** *
 385:Generated_Source\PSoC6/ADC_1.c **** *******************************************************************************/
 386:Generated_Source\PSoC6/ADC_1.c **** uint32_t ADC_1_IsEndConversion(cy_en_sar_return_mode_t retMode)
 387:Generated_Source\PSoC6/ADC_1.c **** {
 1503              		.loc 7 387 0
 1504              		.cfi_startproc
 1505              		@ args = 0, pretend = 0, frame = 16
 1506              		@ frame_needed = 1, uses_anonymous_args = 0
 1507 0000 80B5     		push	{r7, lr}
 1508              		.cfi_def_cfa_offset 8
 1509              		.cfi_offset 7, -8
 1510              		.cfi_offset 14, -4
 1511 0002 84B0     		sub	sp, sp, #16
 1512              		.cfi_def_cfa_offset 24
 1513 0004 00AF     		add	r7, sp, #0
 1514              		.cfi_def_cfa_register 7
 1515 0006 0346     		mov	r3, r0
 1516 0008 FB71     		strb	r3, [r7, #7]
 388:Generated_Source\PSoC6/ADC_1.c ****     uint32 endOfConversion = 0u;
 1517              		.loc 7 388 0
 1518 000a 0023     		movs	r3, #0
 1519 000c FB60     		str	r3, [r7, #12]
 389:Generated_Source\PSoC6/ADC_1.c ****     cy_en_sar_status_t result;
 390:Generated_Source\PSoC6/ADC_1.c **** 
 391:Generated_Source\PSoC6/ADC_1.c ****     result = Cy_SAR_IsEndConversion(ADC_1_SAR__HW, retMode);
 1520              		.loc 7 391 0
 1521 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1522 0010 1946     		mov	r1, r3
 1523 0012 0748     		ldr	r0, .L106
 1524 0014 FFF7FEFF 		bl	Cy_SAR_IsEndConversion
 1525 0018 B860     		str	r0, [r7, #8]
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 174


 392:Generated_Source\PSoC6/ADC_1.c **** 
 393:Generated_Source\PSoC6/ADC_1.c ****     if (result == CY_SAR_SUCCESS)
 1526              		.loc 7 393 0
 1527 001a BB68     		ldr	r3, [r7, #8]
 1528 001c 002B     		cmp	r3, #0
 1529 001e 01D1     		bne	.L104
 394:Generated_Source\PSoC6/ADC_1.c ****     {
 395:Generated_Source\PSoC6/ADC_1.c ****         endOfConversion = 1u;
 1530              		.loc 7 395 0
 1531 0020 0123     		movs	r3, #1
 1532 0022 FB60     		str	r3, [r7, #12]
 1533              	.L104:
 396:Generated_Source\PSoC6/ADC_1.c ****     }
 397:Generated_Source\PSoC6/ADC_1.c **** 
 398:Generated_Source\PSoC6/ADC_1.c ****     return endOfConversion;
 1534              		.loc 7 398 0
 1535 0024 FB68     		ldr	r3, [r7, #12]
 399:Generated_Source\PSoC6/ADC_1.c **** }
 1536              		.loc 7 399 0
 1537 0026 1846     		mov	r0, r3
 1538 0028 1037     		adds	r7, r7, #16
 1539              		.cfi_def_cfa_offset 8
 1540 002a BD46     		mov	sp, r7
 1541              		.cfi_def_cfa_register 13
 1542              		@ sp needed
 1543 002c 80BD     		pop	{r7, pc}
 1544              	.L107:
 1545 002e 00BF     		.align	2
 1546              	.L106:
 1547 0030 00001D41 		.word	1092419584
 1548              		.cfi_endproc
 1549              	.LFE284:
 1550              		.size	ADC_1_IsEndConversion, .-ADC_1_IsEndConversion
 1551              		.section	.text.ADC_1_Init,"ax",%progbits
 1552              		.align	2
 1553              		.global	ADC_1_Init
 1554              		.thumb
 1555              		.thumb_func
 1556              		.type	ADC_1_Init, %function
 1557              	ADC_1_Init:
 1558              	.LFB285:
 400:Generated_Source\PSoC6/ADC_1.c **** 
 401:Generated_Source\PSoC6/ADC_1.c **** /* ****************************************************************************
 402:Generated_Source\PSoC6/ADC_1.c **** * Function Name: ADC_1_Init
 403:Generated_Source\PSoC6/ADC_1.c **** ****************************************************************************//*
 404:Generated_Source\PSoC6/ADC_1.c **** *
 405:Generated_Source\PSoC6/ADC_1.c **** * \brief Initialize the component according to parameters defined in the
 406:Generated_Source\PSoC6/ADC_1.c **** * customizer.
 407:Generated_Source\PSoC6/ADC_1.c **** *
 408:Generated_Source\PSoC6/ADC_1.c **** * \param None
 409:Generated_Source\PSoC6/ADC_1.c **** *
 410:Generated_Source\PSoC6/ADC_1.c **** * \return None
 411:Generated_Source\PSoC6/ADC_1.c **** *
 412:Generated_Source\PSoC6/ADC_1.c **** * \sideeffect None
 413:Generated_Source\PSoC6/ADC_1.c **** *
 414:Generated_Source\PSoC6/ADC_1.c **** *******************************************************************************/
 415:Generated_Source\PSoC6/ADC_1.c **** void ADC_1_Init(void)
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 175


 416:Generated_Source\PSoC6/ADC_1.c **** {
 1559              		.loc 7 416 0
 1560              		.cfi_startproc
 1561              		@ args = 0, pretend = 0, frame = 8
 1562              		@ frame_needed = 1, uses_anonymous_args = 0
 1563 0000 80B5     		push	{r7, lr}
 1564              		.cfi_def_cfa_offset 8
 1565              		.cfi_offset 7, -8
 1566              		.cfi_offset 14, -4
 1567 0002 82B0     		sub	sp, sp, #8
 1568              		.cfi_def_cfa_offset 16
 1569 0004 00AF     		add	r7, sp, #0
 1570              		.cfi_def_cfa_register 7
 417:Generated_Source\PSoC6/ADC_1.c ****     uint32_t configNum = 0u;
 1571              		.loc 7 417 0
 1572 0006 0023     		movs	r3, #0
 1573 0008 7B60     		str	r3, [r7, #4]
 418:Generated_Source\PSoC6/ADC_1.c **** 
 419:Generated_Source\PSoC6/ADC_1.c ****     if(0u == ADC_1_initVar)
 1574              		.loc 7 419 0
 1575 000a 0F4B     		ldr	r3, .L111
 1576 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1577 000e 002B     		cmp	r3, #0
 1578 0010 16D1     		bne	.L110
 420:Generated_Source\PSoC6/ADC_1.c ****     {
 421:Generated_Source\PSoC6/ADC_1.c ****         /* Interrupt core assignment will be up to the user. Initialize but do not enable the inter
 422:Generated_Source\PSoC6/ADC_1.c ****         #ifdef ADC_1_IRQ__INTC_CORTEXM4_ASSIGNED
 423:Generated_Source\PSoC6/ADC_1.c ****         #if (CY_CPU_CORTEX_M4)
 424:Generated_Source\PSoC6/ADC_1.c ****             (void)Cy_SysInt_Init(&ADC_1_IRQ_cfg, &ADC_1_ISR);
 1579              		.loc 7 424 0
 1580 0012 0E49     		ldr	r1, .L111+4
 1581 0014 0E48     		ldr	r0, .L111+8
 1582 0016 FFF7FEFF 		bl	Cy_SysInt_Init
 425:Generated_Source\PSoC6/ADC_1.c ****         #endif
 426:Generated_Source\PSoC6/ADC_1.c ****         #endif
 427:Generated_Source\PSoC6/ADC_1.c **** 
 428:Generated_Source\PSoC6/ADC_1.c ****         #ifdef ADC_1_IRQ__INTC_CORTEXM0P_ASSIGNED
 429:Generated_Source\PSoC6/ADC_1.c ****         #if (CY_CPU_CORTEX_M0P)
 430:Generated_Source\PSoC6/ADC_1.c ****             (void)Cy_SysInt_Init(&ADC_1_IRQ_cfg, &ADC_1_ISR);
 431:Generated_Source\PSoC6/ADC_1.c ****         #endif
 432:Generated_Source\PSoC6/ADC_1.c ****         #endif
 433:Generated_Source\PSoC6/ADC_1.c **** 
 434:Generated_Source\PSoC6/ADC_1.c ****         /* Initialize configuration zero if SelectConfig has not been called */
 435:Generated_Source\PSoC6/ADC_1.c ****         if(0u == ADC_1_selected)
 1583              		.loc 7 435 0
 1584 001a 0E4B     		ldr	r3, .L111+12
 1585 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1586 001e 002B     		cmp	r3, #0
 1587 0020 0ED1     		bne	.L110
 436:Generated_Source\PSoC6/ADC_1.c ****         {
 437:Generated_Source\PSoC6/ADC_1.c ****             ADC_1_selected = 1u;
 1588              		.loc 7 437 0
 1589 0022 0C4B     		ldr	r3, .L111+12
 1590 0024 0122     		movs	r2, #1
 1591 0026 1A70     		strb	r2, [r3]
 438:Generated_Source\PSoC6/ADC_1.c ****             configNum = 0uL;
 1592              		.loc 7 438 0
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 176


 1593 0028 0023     		movs	r3, #0
 1594 002a 7B60     		str	r3, [r7, #4]
 439:Generated_Source\PSoC6/ADC_1.c **** 
 440:Generated_Source\PSoC6/ADC_1.c ****             /* Change Vref selection if is was routed by Creator. Break. */
 441:Generated_Source\PSoC6/ADC_1.c ****             #if (ADC_1_VREF_ROUTED)
 442:Generated_Source\PSoC6/ADC_1.c ****                 ADC_1_vrefAMux_DisconnectAll();
 443:Generated_Source\PSoC6/ADC_1.c ****             #endif
 444:Generated_Source\PSoC6/ADC_1.c **** 
 445:Generated_Source\PSoC6/ADC_1.c ****             ADC_1_InitConfig(&ADC_1_allConfigs[configNum]);
 1595              		.loc 7 445 0
 1596 002c 7A68     		ldr	r2, [r7, #4]
 1597 002e 1346     		mov	r3, r2
 1598 0030 9B00     		lsls	r3, r3, #2
 1599 0032 1344     		add	r3, r3, r2
 1600 0034 9B00     		lsls	r3, r3, #2
 1601 0036 084A     		ldr	r2, .L111+16
 1602 0038 1344     		add	r3, r3, r2
 1603 003a 1846     		mov	r0, r3
 1604 003c FFF7FEFF 		bl	ADC_1_InitConfig
 1605              	.L110:
 446:Generated_Source\PSoC6/ADC_1.c **** 
 447:Generated_Source\PSoC6/ADC_1.c ****             /* Change Vref selection if is was routed by Creator. Make. */
 448:Generated_Source\PSoC6/ADC_1.c ****             #if (ADC_1_VREF_ROUTED)
 449:Generated_Source\PSoC6/ADC_1.c ****                 ADC_1_vrefAMux_Select((uint8)configNum);
 450:Generated_Source\PSoC6/ADC_1.c ****             #endif
 451:Generated_Source\PSoC6/ADC_1.c ****         }
 452:Generated_Source\PSoC6/ADC_1.c ****     }
 453:Generated_Source\PSoC6/ADC_1.c **** }
 1606              		.loc 7 453 0
 1607 0040 00BF     		nop
 1608 0042 0837     		adds	r7, r7, #8
 1609              		.cfi_def_cfa_offset 8
 1610 0044 BD46     		mov	sp, r7
 1611              		.cfi_def_cfa_register 13
 1612              		@ sp needed
 1613 0046 80BD     		pop	{r7, pc}
 1614              	.L112:
 1615              		.align	2
 1616              	.L111:
 1617 0048 00000000 		.word	ADC_1_initVar
 1618 004c 00000000 		.word	ADC_1_ISR
 1619 0050 00000000 		.word	ADC_1_IRQ_cfg
 1620 0054 00000000 		.word	ADC_1_selected
 1621 0058 00000000 		.word	ADC_1_allConfigs
 1622              		.cfi_endproc
 1623              	.LFE285:
 1624              		.size	ADC_1_Init, .-ADC_1_Init
 1625              		.text
 1626              	.Letext0:
 1627              		.file 8 "Generated_Source\\PSoC6\\pdl\\devices/psoc6/include/cyble_416045_02.h"
 1628              		.file 9 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 1629              		.file 10 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4
 1630              		.file 11 "Generated_Source\\PSoC6\\pdl\\devices/psoc6/include/ip/cyip_peri.h"
 1631              		.file 12 "Generated_Source\\PSoC6\\pdl\\devices/psoc6/include/ip/cyip_sar.h"
 1632              		.file 13 "Generated_Source\\PSoC6\\pdl\\devices/psoc6/include/psoc6_01_config.h"
 1633              		.file 14 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/device/cy_device.h"
 1634              		.file 15 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/syslib/cy_syslib.h"
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 177


 1635              		.file 16 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/sysint/cy_sysint.h"
 1636              		.file 17 "Generated_Source\\PSoC6/cyfitter_sysint_cfg.h"
 1637              		.section	.debug_info,"",%progbits
 1638              	.Ldebug_info0:
 1639 0000 AF190000 		.4byte	0x19af
 1640 0004 0400     		.2byte	0x4
 1641 0006 00000000 		.4byte	.Ldebug_abbrev0
 1642 000a 04       		.byte	0x4
 1643 000b 01       		.uleb128 0x1
 1644 000c 03210000 		.4byte	.LASF474
 1645 0010 0C       		.byte	0xc
 1646 0011 46020000 		.4byte	.LASF475
 1647 0015 FE140000 		.4byte	.LASF476
 1648 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1649 001d 00000000 		.4byte	0
 1650 0021 00000000 		.4byte	.Ldebug_line0
 1651 0025 02       		.uleb128 0x2
 1652 0026 02       		.byte	0x2
 1653 0027 E6030000 		.4byte	0x3e6
 1654 002b 08       		.byte	0x8
 1655 002c 24       		.byte	0x24
 1656 002d E6030000 		.4byte	0x3e6
 1657 0031 03       		.uleb128 0x3
 1658 0032 601E0000 		.4byte	.LASF0
 1659 0036 71       		.sleb128 -15
 1660 0037 03       		.uleb128 0x3
 1661 0038 07180000 		.4byte	.LASF1
 1662 003c 72       		.sleb128 -14
 1663 003d 03       		.uleb128 0x3
 1664 003e BB1E0000 		.4byte	.LASF2
 1665 0042 73       		.sleb128 -13
 1666 0043 03       		.uleb128 0x3
 1667 0044 91060000 		.4byte	.LASF3
 1668 0048 74       		.sleb128 -12
 1669 0049 03       		.uleb128 0x3
 1670 004a 65120000 		.4byte	.LASF4
 1671 004e 75       		.sleb128 -11
 1672 004f 03       		.uleb128 0x3
 1673 0050 4D1C0000 		.4byte	.LASF5
 1674 0054 76       		.sleb128 -10
 1675 0055 03       		.uleb128 0x3
 1676 0056 AC090000 		.4byte	.LASF6
 1677 005a 7B       		.sleb128 -5
 1678 005b 03       		.uleb128 0x3
 1679 005c 3B1C0000 		.4byte	.LASF7
 1680 0060 7C       		.sleb128 -4
 1681 0061 03       		.uleb128 0x3
 1682 0062 BF050000 		.4byte	.LASF8
 1683 0066 7E       		.sleb128 -2
 1684 0067 03       		.uleb128 0x3
 1685 0068 C51A0000 		.4byte	.LASF9
 1686 006c 7F       		.sleb128 -1
 1687 006d 04       		.uleb128 0x4
 1688 006e 73120000 		.4byte	.LASF10
 1689 0072 00       		.byte	0
 1690 0073 04       		.uleb128 0x4
 1691 0074 F6130000 		.4byte	.LASF11
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 178


 1692 0078 01       		.byte	0x1
 1693 0079 04       		.uleb128 0x4
 1694 007a 06040000 		.4byte	.LASF12
 1695 007e 02       		.byte	0x2
 1696 007f 04       		.uleb128 0x4
 1697 0080 C6190000 		.4byte	.LASF13
 1698 0084 03       		.byte	0x3
 1699 0085 04       		.uleb128 0x4
 1700 0086 B80D0000 		.4byte	.LASF14
 1701 008a 04       		.byte	0x4
 1702 008b 04       		.uleb128 0x4
 1703 008c 701F0000 		.4byte	.LASF15
 1704 0090 05       		.byte	0x5
 1705 0091 04       		.uleb128 0x4
 1706 0092 53130000 		.4byte	.LASF16
 1707 0096 06       		.byte	0x6
 1708 0097 04       		.uleb128 0x4
 1709 0098 32070000 		.4byte	.LASF17
 1710 009c 07       		.byte	0x7
 1711 009d 04       		.uleb128 0x4
 1712 009e 57190000 		.4byte	.LASF18
 1713 00a2 08       		.byte	0x8
 1714 00a3 04       		.uleb128 0x4
 1715 00a4 310D0000 		.4byte	.LASF19
 1716 00a8 09       		.byte	0x9
 1717 00a9 04       		.uleb128 0x4
 1718 00aa D40D0000 		.4byte	.LASF20
 1719 00ae 0A       		.byte	0xa
 1720 00af 04       		.uleb128 0x4
 1721 00b0 320A0000 		.4byte	.LASF21
 1722 00b4 0B       		.byte	0xb
 1723 00b5 04       		.uleb128 0x4
 1724 00b6 3B090000 		.4byte	.LASF22
 1725 00ba 0C       		.byte	0xc
 1726 00bb 04       		.uleb128 0x4
 1727 00bc 4E070000 		.4byte	.LASF23
 1728 00c0 0D       		.byte	0xd
 1729 00c1 04       		.uleb128 0x4
 1730 00c2 34140000 		.4byte	.LASF24
 1731 00c6 0E       		.byte	0xe
 1732 00c7 04       		.uleb128 0x4
 1733 00c8 37000000 		.4byte	.LASF25
 1734 00cc 0F       		.byte	0xf
 1735 00cd 04       		.uleb128 0x4
 1736 00ce 211E0000 		.4byte	.LASF26
 1737 00d2 10       		.byte	0x10
 1738 00d3 04       		.uleb128 0x4
 1739 00d4 B5040000 		.4byte	.LASF27
 1740 00d8 11       		.byte	0x11
 1741 00d9 04       		.uleb128 0x4
 1742 00da 7C060000 		.4byte	.LASF28
 1743 00de 12       		.byte	0x12
 1744 00df 04       		.uleb128 0x4
 1745 00e0 31100000 		.4byte	.LASF29
 1746 00e4 13       		.byte	0x13
 1747 00e5 04       		.uleb128 0x4
 1748 00e6 C6030000 		.4byte	.LASF30
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 179


 1749 00ea 14       		.byte	0x14
 1750 00eb 04       		.uleb128 0x4
 1751 00ec 20090000 		.4byte	.LASF31
 1752 00f0 15       		.byte	0x15
 1753 00f1 04       		.uleb128 0x4
 1754 00f2 0E0E0000 		.4byte	.LASF32
 1755 00f6 16       		.byte	0x16
 1756 00f7 04       		.uleb128 0x4
 1757 00f8 45030000 		.4byte	.LASF33
 1758 00fc 17       		.byte	0x17
 1759 00fd 04       		.uleb128 0x4
 1760 00fe 71170000 		.4byte	.LASF34
 1761 0102 18       		.byte	0x18
 1762 0103 04       		.uleb128 0x4
 1763 0104 28110000 		.4byte	.LASF35
 1764 0108 19       		.byte	0x19
 1765 0109 04       		.uleb128 0x4
 1766 010a 78080000 		.4byte	.LASF36
 1767 010e 1A       		.byte	0x1a
 1768 010f 04       		.uleb128 0x4
 1769 0110 1E0B0000 		.4byte	.LASF37
 1770 0114 1B       		.byte	0x1b
 1771 0115 04       		.uleb128 0x4
 1772 0116 4A220000 		.4byte	.LASF38
 1773 011a 1C       		.byte	0x1c
 1774 011b 04       		.uleb128 0x4
 1775 011c 001D0000 		.4byte	.LASF39
 1776 0120 1D       		.byte	0x1d
 1777 0121 04       		.uleb128 0x4
 1778 0122 AA100000 		.4byte	.LASF40
 1779 0126 1E       		.byte	0x1e
 1780 0127 04       		.uleb128 0x4
 1781 0128 17190000 		.4byte	.LASF41
 1782 012c 1F       		.byte	0x1f
 1783 012d 04       		.uleb128 0x4
 1784 012e 7B160000 		.4byte	.LASF42
 1785 0132 20       		.byte	0x20
 1786 0133 04       		.uleb128 0x4
 1787 0134 4F0A0000 		.4byte	.LASF43
 1788 0138 21       		.byte	0x21
 1789 0139 04       		.uleb128 0x4
 1790 013a 8C1F0000 		.4byte	.LASF44
 1791 013e 22       		.byte	0x22
 1792 013f 04       		.uleb128 0x4
 1793 0140 0D060000 		.4byte	.LASF45
 1794 0144 23       		.byte	0x23
 1795 0145 04       		.uleb128 0x4
 1796 0146 8F020000 		.4byte	.LASF46
 1797 014a 24       		.byte	0x24
 1798 014b 04       		.uleb128 0x4
 1799 014c F0180000 		.4byte	.LASF47
 1800 0150 25       		.byte	0x25
 1801 0151 04       		.uleb128 0x4
 1802 0152 F6080000 		.4byte	.LASF48
 1803 0156 26       		.byte	0x26
 1804 0157 04       		.uleb128 0x4
 1805 0158 431E0000 		.4byte	.LASF49
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 180


 1806 015c 27       		.byte	0x27
 1807 015d 04       		.uleb128 0x4
 1808 015e DD110000 		.4byte	.LASF50
 1809 0162 28       		.byte	0x28
 1810 0163 04       		.uleb128 0x4
 1811 0164 EB1C0000 		.4byte	.LASF51
 1812 0168 29       		.byte	0x29
 1813 0169 04       		.uleb128 0x4
 1814 016a 23130000 		.4byte	.LASF52
 1815 016e 2A       		.byte	0x2a
 1816 016f 04       		.uleb128 0x4
 1817 0170 9C190000 		.4byte	.LASF53
 1818 0174 2B       		.byte	0x2b
 1819 0175 04       		.uleb128 0x4
 1820 0176 87010000 		.4byte	.LASF54
 1821 017a 2C       		.byte	0x2c
 1822 017b 04       		.uleb128 0x4
 1823 017c E1070000 		.4byte	.LASF55
 1824 0180 2D       		.byte	0x2d
 1825 0181 04       		.uleb128 0x4
 1826 0182 A6110000 		.4byte	.LASF56
 1827 0186 2E       		.byte	0x2e
 1828 0187 04       		.uleb128 0x4
 1829 0188 5F180000 		.4byte	.LASF57
 1830 018c 2F       		.byte	0x2f
 1831 018d 04       		.uleb128 0x4
 1832 018e 7F220000 		.4byte	.LASF58
 1833 0192 30       		.byte	0x30
 1834 0193 04       		.uleb128 0x4
 1835 0194 080A0000 		.4byte	.LASF59
 1836 0198 31       		.byte	0x31
 1837 0199 04       		.uleb128 0x4
 1838 019a 521A0000 		.4byte	.LASF60
 1839 019e 32       		.byte	0x32
 1840 019f 04       		.uleb128 0x4
 1841 01a0 A30C0000 		.4byte	.LASF61
 1842 01a4 33       		.byte	0x33
 1843 01a5 04       		.uleb128 0x4
 1844 01a6 FA010000 		.4byte	.LASF62
 1845 01aa 34       		.byte	0x34
 1846 01ab 04       		.uleb128 0x4
 1847 01ac CC130000 		.4byte	.LASF63
 1848 01b0 35       		.byte	0x35
 1849 01b1 04       		.uleb128 0x4
 1850 01b2 471B0000 		.4byte	.LASF64
 1851 01b6 36       		.byte	0x36
 1852 01b7 04       		.uleb128 0x4
 1853 01b8 7C1D0000 		.4byte	.LASF65
 1854 01bc 37       		.byte	0x37
 1855 01bd 04       		.uleb128 0x4
 1856 01be 900D0000 		.4byte	.LASF66
 1857 01c2 38       		.byte	0x38
 1858 01c3 04       		.uleb128 0x4
 1859 01c4 39010000 		.4byte	.LASF67
 1860 01c8 39       		.byte	0x39
 1861 01c9 04       		.uleb128 0x4
 1862 01ca FA0C0000 		.4byte	.LASF68
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 181


 1863 01ce 3A       		.byte	0x3a
 1864 01cf 04       		.uleb128 0x4
 1865 01d0 AA130000 		.4byte	.LASF69
 1866 01d4 3B       		.byte	0x3b
 1867 01d5 04       		.uleb128 0x4
 1868 01d6 9E1E0000 		.4byte	.LASF70
 1869 01da 3C       		.byte	0x3c
 1870 01db 04       		.uleb128 0x4
 1871 01dc 44200000 		.4byte	.LASF71
 1872 01e0 3D       		.byte	0x3d
 1873 01e1 04       		.uleb128 0x4
 1874 01e2 17140000 		.4byte	.LASF72
 1875 01e6 3E       		.byte	0x3e
 1876 01e7 04       		.uleb128 0x4
 1877 01e8 37040000 		.4byte	.LASF73
 1878 01ec 3F       		.byte	0x3f
 1879 01ed 04       		.uleb128 0x4
 1880 01ee E2190000 		.4byte	.LASF74
 1881 01f2 40       		.byte	0x40
 1882 01f3 04       		.uleb128 0x4
 1883 01f4 F10D0000 		.4byte	.LASF75
 1884 01f8 41       		.byte	0x41
 1885 01f9 04       		.uleb128 0x4
 1886 01fa 72050000 		.4byte	.LASF76
 1887 01fe 42       		.byte	0x42
 1888 01ff 04       		.uleb128 0x4
 1889 0200 DF1A0000 		.4byte	.LASF77
 1890 0204 43       		.byte	0x43
 1891 0205 04       		.uleb128 0x4
 1892 0206 F90E0000 		.4byte	.LASF78
 1893 020a 44       		.byte	0x44
 1894 020b 04       		.uleb128 0x4
 1895 020c 8C200000 		.4byte	.LASF79
 1896 0210 45       		.byte	0x45
 1897 0211 04       		.uleb128 0x4
 1898 0212 72140000 		.4byte	.LASF80
 1899 0216 46       		.byte	0x46
 1900 0217 04       		.uleb128 0x4
 1901 0218 25080000 		.4byte	.LASF81
 1902 021c 47       		.byte	0x47
 1903 021d 04       		.uleb128 0x4
 1904 021e 0F1A0000 		.4byte	.LASF82
 1905 0222 48       		.byte	0x48
 1906 0223 04       		.uleb128 0x4
 1907 0224 9E160000 		.4byte	.LASF83
 1908 0228 49       		.byte	0x49
 1909 0229 04       		.uleb128 0x4
 1910 022a B8010000 		.4byte	.LASF84
 1911 022e 4A       		.byte	0x4a
 1912 022f 04       		.uleb128 0x4
 1913 0230 A40E0000 		.4byte	.LASF85
 1914 0234 4B       		.byte	0x4b
 1915 0235 04       		.uleb128 0x4
 1916 0236 8E140000 		.4byte	.LASF86
 1917 023a 4C       		.byte	0x4c
 1918 023b 04       		.uleb128 0x4
 1919 023c 54080000 		.4byte	.LASF87
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 182


 1920 0240 4D       		.byte	0x4d
 1921 0241 04       		.uleb128 0x4
 1922 0242 3A190000 		.4byte	.LASF88
 1923 0246 4E       		.byte	0x4e
 1924 0247 04       		.uleb128 0x4
 1925 0248 560E0000 		.4byte	.LASF89
 1926 024c 4F       		.byte	0x4f
 1927 024d 04       		.uleb128 0x4
 1928 024e D4010000 		.4byte	.LASF90
 1929 0252 50       		.byte	0x50
 1930 0253 04       		.uleb128 0x4
 1931 0254 C4170000 		.4byte	.LASF91
 1932 0258 51       		.byte	0x51
 1933 0259 04       		.uleb128 0x4
 1934 025a 7B0A0000 		.4byte	.LASF92
 1935 025e 52       		.byte	0x52
 1936 025f 04       		.uleb128 0x4
 1937 0260 D21F0000 		.4byte	.LASF93
 1938 0264 53       		.byte	0x53
 1939 0265 04       		.uleb128 0x4
 1940 0266 09220000 		.4byte	.LASF94
 1941 026a 54       		.byte	0x54
 1942 026b 04       		.uleb128 0x4
 1943 026c 510F0000 		.4byte	.LASF95
 1944 0270 55       		.byte	0x55
 1945 0271 04       		.uleb128 0x4
 1946 0272 990A0000 		.4byte	.LASF96
 1947 0276 56       		.byte	0x56
 1948 0277 04       		.uleb128 0x4
 1949 0278 9B070000 		.4byte	.LASF97
 1950 027c 57       		.byte	0x57
 1951 027d 04       		.uleb128 0x4
 1952 027e B2220000 		.4byte	.LASF98
 1953 0282 58       		.byte	0x58
 1954 0283 04       		.uleb128 0x4
 1955 0284 A8150000 		.4byte	.LASF99
 1956 0288 59       		.byte	0x59
 1957 0289 04       		.uleb128 0x4
 1958 028a 25220000 		.4byte	.LASF100
 1959 028e 5A       		.byte	0x5a
 1960 028f 04       		.uleb128 0x4
 1961 0290 75110000 		.4byte	.LASF101
 1962 0294 5B       		.byte	0x5b
 1963 0295 04       		.uleb128 0x4
 1964 0296 A5050000 		.4byte	.LASF102
 1965 029a 5C       		.byte	0x5c
 1966 029b 04       		.uleb128 0x4
 1967 029c 6E1A0000 		.4byte	.LASF103
 1968 02a0 5D       		.byte	0x5d
 1969 02a1 04       		.uleb128 0x4
 1970 02a2 830B0000 		.4byte	.LASF104
 1971 02a6 5E       		.byte	0x5e
 1972 02a7 04       		.uleb128 0x4
 1973 02a8 04120000 		.4byte	.LASF105
 1974 02ac 5F       		.byte	0x5f
 1975 02ad 04       		.uleb128 0x4
 1976 02ae AB140000 		.4byte	.LASF106
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 183


 1977 02b2 60       		.byte	0x60
 1978 02b3 04       		.uleb128 0x4
 1979 02b4 D9040000 		.4byte	.LASF107
 1980 02b8 61       		.byte	0x61
 1981 02b9 04       		.uleb128 0x4
 1982 02ba 5D1C0000 		.4byte	.LASF108
 1983 02be 62       		.byte	0x62
 1984 02bf 04       		.uleb128 0x4
 1985 02c0 5C0C0000 		.4byte	.LASF109
 1986 02c4 63       		.byte	0x63
 1987 02c5 04       		.uleb128 0x4
 1988 02c6 D2220000 		.4byte	.LASF110
 1989 02ca 64       		.byte	0x64
 1990 02cb 04       		.uleb128 0x4
 1991 02cc E0150000 		.4byte	.LASF111
 1992 02d0 65       		.byte	0x65
 1993 02d1 04       		.uleb128 0x4
 1994 02d2 DA090000 		.4byte	.LASF112
 1995 02d6 66       		.byte	0x66
 1996 02d7 04       		.uleb128 0x4
 1997 02d8 A51B0000 		.4byte	.LASF113
 1998 02dc 67       		.byte	0x67
 1999 02dd 04       		.uleb128 0x4
 2000 02de E2000000 		.4byte	.LASF114
 2001 02e2 68       		.byte	0x68
 2002 02e3 04       		.uleb128 0x4
 2003 02e4 08030000 		.4byte	.LASF115
 2004 02e8 69       		.byte	0x69
 2005 02e9 04       		.uleb128 0x4
 2006 02ea 45150000 		.4byte	.LASF116
 2007 02ee 6A       		.byte	0x6a
 2008 02ef 04       		.uleb128 0x4
 2009 02f0 58090000 		.4byte	.LASF117
 2010 02f4 6B       		.byte	0x6b
 2011 02f5 04       		.uleb128 0x4
 2012 02f6 1F200000 		.4byte	.LASF118
 2013 02fa 6C       		.byte	0x6c
 2014 02fb 04       		.uleb128 0x4
 2015 02fc 38130000 		.4byte	.LASF119
 2016 0300 6D       		.byte	0x6d
 2017 0301 04       		.uleb128 0x4
 2018 0302 17070000 		.4byte	.LASF120
 2019 0306 6E       		.byte	0x6e
 2020 0307 04       		.uleb128 0x4
 2021 0308 D01C0000 		.4byte	.LASF121
 2022 030c 6F       		.byte	0x6f
 2023 030d 04       		.uleb128 0x4
 2024 030e 160D0000 		.4byte	.LASF122
 2025 0312 70       		.byte	0x70
 2026 0313 04       		.uleb128 0x4
 2027 0314 70000000 		.4byte	.LASF123
 2028 0318 71       		.byte	0x71
 2029 0319 04       		.uleb128 0x4
 2030 031a 60160000 		.4byte	.LASF124
 2031 031e 72       		.byte	0x72
 2032 031f 04       		.uleb128 0x4
 2033 0320 5C100000 		.4byte	.LASF125
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 184


 2034 0324 73       		.byte	0x73
 2035 0325 04       		.uleb128 0x4
 2036 0326 201C0000 		.4byte	.LASF126
 2037 032a 74       		.byte	0x74
 2038 032b 04       		.uleb128 0x4
 2039 032c EF0F0000 		.4byte	.LASF127
 2040 0330 75       		.byte	0x75
 2041 0331 04       		.uleb128 0x4
 2042 0332 1B180000 		.4byte	.LASF128
 2043 0336 76       		.byte	0x76
 2044 0337 04       		.uleb128 0x4
 2045 0338 9A040000 		.4byte	.LASF129
 2046 033c 77       		.byte	0x77
 2047 033d 04       		.uleb128 0x4
 2048 033e 2B1A0000 		.4byte	.LASF130
 2049 0342 78       		.byte	0x78
 2050 0343 04       		.uleb128 0x4
 2051 0344 71040000 		.4byte	.LASF131
 2052 0348 79       		.byte	0x79
 2053 0349 04       		.uleb128 0x4
 2054 034a 011F0000 		.4byte	.LASF132
 2055 034e 7A       		.byte	0x7a
 2056 034f 04       		.uleb128 0x4
 2057 0350 CE120000 		.4byte	.LASF133
 2058 0354 7B       		.byte	0x7b
 2059 0355 04       		.uleb128 0x4
 2060 0356 C9060000 		.4byte	.LASF134
 2061 035a 7C       		.byte	0x7c
 2062 035b 04       		.uleb128 0x4
 2063 035c 771C0000 		.4byte	.LASF135
 2064 0360 7D       		.byte	0x7d
 2065 0361 04       		.uleb128 0x4
 2066 0362 8D0C0000 		.4byte	.LASF136
 2067 0366 7E       		.byte	0x7e
 2068 0367 04       		.uleb128 0x4
 2069 0368 3A0B0000 		.4byte	.LASF137
 2070 036c 7F       		.byte	0x7f
 2071 036d 04       		.uleb128 0x4
 2072 036e FA150000 		.4byte	.LASF138
 2073 0372 80       		.byte	0x80
 2074 0373 04       		.uleb128 0x4
 2075 0374 66060000 		.4byte	.LASF139
 2076 0378 81       		.byte	0x81
 2077 0379 04       		.uleb128 0x4
 2078 037a BF1B0000 		.4byte	.LASF140
 2079 037e 82       		.byte	0x82
 2080 037f 04       		.uleb128 0x4
 2081 0380 910F0000 		.4byte	.LASF141
 2082 0384 83       		.byte	0x83
 2083 0385 04       		.uleb128 0x4
 2084 0386 06010000 		.4byte	.LASF142
 2085 038a 84       		.byte	0x84
 2086 038b 04       		.uleb128 0x4
 2087 038c 070B0000 		.4byte	.LASF143
 2088 0390 85       		.byte	0x85
 2089 0391 04       		.uleb128 0x4
 2090 0392 AE1A0000 		.4byte	.LASF144
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 185


 2091 0396 86       		.byte	0x86
 2092 0397 04       		.uleb128 0x4
 2093 0398 760C0000 		.4byte	.LASF145
 2094 039c 87       		.byte	0x87
 2095 039d 04       		.uleb128 0x4
 2096 039e 8E050000 		.4byte	.LASF146
 2097 03a2 88       		.byte	0x88
 2098 03a3 04       		.uleb128 0x4
 2099 03a4 6B070000 		.4byte	.LASF147
 2100 03a8 89       		.byte	0x89
 2101 03a9 04       		.uleb128 0x4
 2102 03aa E91E0000 		.4byte	.LASF148
 2103 03ae 8A       		.byte	0x8a
 2104 03af 04       		.uleb128 0x4
 2105 03b0 180C0000 		.4byte	.LASF149
 2106 03b4 8B       		.byte	0x8b
 2107 03b5 04       		.uleb128 0x4
 2108 03b6 D40C0000 		.4byte	.LASF150
 2109 03ba 8C       		.byte	0x8c
 2110 03bb 04       		.uleb128 0x4
 2111 03bc 1B0A0000 		.4byte	.LASF151
 2112 03c0 8D       		.byte	0x8d
 2113 03c1 04       		.uleb128 0x4
 2114 03c2 88190000 		.4byte	.LASF152
 2115 03c6 8E       		.byte	0x8e
 2116 03c7 04       		.uleb128 0x4
 2117 03c8 FA120000 		.4byte	.LASF153
 2118 03cc 8F       		.byte	0x8f
 2119 03cd 04       		.uleb128 0x4
 2120 03ce 8F110000 		.4byte	.LASF154
 2121 03d2 90       		.byte	0x90
 2122 03d3 04       		.uleb128 0x4
 2123 03d4 260F0000 		.4byte	.LASF155
 2124 03d8 91       		.byte	0x91
 2125 03d9 04       		.uleb128 0x4
 2126 03da B6210000 		.4byte	.LASF156
 2127 03de 92       		.byte	0x92
 2128 03df 04       		.uleb128 0x4
 2129 03e0 DC0E0000 		.4byte	.LASF157
 2130 03e4 F0       		.byte	0xf0
 2131 03e5 00       		.byte	0
 2132 03e6 05       		.uleb128 0x5
 2133 03e7 02       		.byte	0x2
 2134 03e8 05       		.byte	0x5
 2135 03e9 67040000 		.4byte	.LASF158
 2136 03ed 06       		.uleb128 0x6
 2137 03ee CD0A0000 		.4byte	.LASF160
 2138 03f2 08       		.byte	0x8
 2139 03f3 F4       		.byte	0xf4
 2140 03f4 25000000 		.4byte	0x25
 2141 03f8 05       		.uleb128 0x5
 2142 03f9 01       		.byte	0x1
 2143 03fa 06       		.byte	0x6
 2144 03fb DD1E0000 		.4byte	.LASF159
 2145 03ff 06       		.uleb128 0x6
 2146 0400 391E0000 		.4byte	.LASF161
 2147 0404 09       		.byte	0x9
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 186


 2148 0405 1D       		.byte	0x1d
 2149 0406 0A040000 		.4byte	0x40a
 2150 040a 05       		.uleb128 0x5
 2151 040b 01       		.byte	0x1
 2152 040c 08       		.byte	0x8
 2153 040d 77100000 		.4byte	.LASF162
 2154 0411 06       		.uleb128 0x6
 2155 0412 FA110000 		.4byte	.LASF163
 2156 0416 09       		.byte	0x9
 2157 0417 29       		.byte	0x29
 2158 0418 E6030000 		.4byte	0x3e6
 2159 041c 06       		.uleb128 0x6
 2160 041d A1090000 		.4byte	.LASF164
 2161 0421 09       		.byte	0x9
 2162 0422 2B       		.byte	0x2b
 2163 0423 27040000 		.4byte	0x427
 2164 0427 05       		.uleb128 0x5
 2165 0428 02       		.byte	0x2
 2166 0429 07       		.byte	0x7
 2167 042a 69150000 		.4byte	.LASF165
 2168 042e 06       		.uleb128 0x6
 2169 042f 3B030000 		.4byte	.LASF166
 2170 0433 09       		.byte	0x9
 2171 0434 3F       		.byte	0x3f
 2172 0435 39040000 		.4byte	0x439
 2173 0439 05       		.uleb128 0x5
 2174 043a 04       		.byte	0x4
 2175 043b 05       		.byte	0x5
 2176 043c BB170000 		.4byte	.LASF167
 2177 0440 06       		.uleb128 0x6
 2178 0441 B71C0000 		.4byte	.LASF168
 2179 0445 09       		.byte	0x9
 2180 0446 41       		.byte	0x41
 2181 0447 4B040000 		.4byte	0x44b
 2182 044b 05       		.uleb128 0x5
 2183 044c 04       		.byte	0x4
 2184 044d 07       		.byte	0x7
 2185 044e 091B0000 		.4byte	.LASF169
 2186 0452 05       		.uleb128 0x5
 2187 0453 08       		.byte	0x8
 2188 0454 05       		.byte	0x5
 2189 0455 DE100000 		.4byte	.LASF170
 2190 0459 05       		.uleb128 0x5
 2191 045a 08       		.byte	0x8
 2192 045b 07       		.byte	0x7
 2193 045c A4080000 		.4byte	.LASF171
 2194 0460 07       		.uleb128 0x7
 2195 0461 04       		.byte	0x4
 2196 0462 05       		.byte	0x5
 2197 0463 696E7400 		.ascii	"int\000"
 2198 0467 05       		.uleb128 0x5
 2199 0468 04       		.byte	0x4
 2200 0469 07       		.byte	0x7
 2201 046a 77020000 		.4byte	.LASF172
 2202 046e 06       		.uleb128 0x6
 2203 046f D40F0000 		.4byte	.LASF173
 2204 0473 0A       		.byte	0xa
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 187


 2205 0474 18       		.byte	0x18
 2206 0475 FF030000 		.4byte	0x3ff
 2207 0479 06       		.uleb128 0x6
 2208 047a 2A060000 		.4byte	.LASF174
 2209 047e 0A       		.byte	0xa
 2210 047f 20       		.byte	0x20
 2211 0480 11040000 		.4byte	0x411
 2212 0484 06       		.uleb128 0x6
 2213 0485 88150000 		.4byte	.LASF175
 2214 0489 0A       		.byte	0xa
 2215 048a 24       		.byte	0x24
 2216 048b 1C040000 		.4byte	0x41c
 2217 048f 06       		.uleb128 0x6
 2218 0490 6D1B0000 		.4byte	.LASF176
 2219 0494 0A       		.byte	0xa
 2220 0495 2C       		.byte	0x2c
 2221 0496 2E040000 		.4byte	0x42e
 2222 049a 06       		.uleb128 0x6
 2223 049b F3060000 		.4byte	.LASF177
 2224 049f 0A       		.byte	0xa
 2225 04a0 30       		.byte	0x30
 2226 04a1 40040000 		.4byte	0x440
 2227 04a5 08       		.uleb128 0x8
 2228 04a6 040E     		.2byte	0xe04
 2229 04a8 01       		.byte	0x1
 2230 04a9 9601     		.2byte	0x196
 2231 04ab 61050000 		.4byte	0x561
 2232 04af 09       		.uleb128 0x9
 2233 04b0 96070000 		.4byte	.LASF178
 2234 04b4 01       		.byte	0x1
 2235 04b5 9801     		.2byte	0x198
 2236 04b7 7D050000 		.4byte	0x57d
 2237 04bb 00       		.byte	0
 2238 04bc 09       		.uleb128 0x9
 2239 04bd 0A170000 		.4byte	.LASF179
 2240 04c1 01       		.byte	0x1
 2241 04c2 9901     		.2byte	0x199
 2242 04c4 82050000 		.4byte	0x582
 2243 04c8 20       		.byte	0x20
 2244 04c9 09       		.uleb128 0x9
 2245 04ca B31D0000 		.4byte	.LASF180
 2246 04ce 01       		.byte	0x1
 2247 04cf 9A01     		.2byte	0x19a
 2248 04d1 92050000 		.4byte	0x592
 2249 04d5 80       		.byte	0x80
 2250 04d6 09       		.uleb128 0x9
 2251 04d7 B8090000 		.4byte	.LASF181
 2252 04db 01       		.byte	0x1
 2253 04dc 9B01     		.2byte	0x19b
 2254 04de 82050000 		.4byte	0x582
 2255 04e2 A0       		.byte	0xa0
 2256 04e3 0A       		.uleb128 0xa
 2257 04e4 981D0000 		.4byte	.LASF182
 2258 04e8 01       		.byte	0x1
 2259 04e9 9C01     		.2byte	0x19c
 2260 04eb 97050000 		.4byte	0x597
 2261 04ef 0001     		.2byte	0x100
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 188


 2262 04f1 0A       		.uleb128 0xa
 2263 04f2 26170000 		.4byte	.LASF183
 2264 04f6 01       		.byte	0x1
 2265 04f7 9D01     		.2byte	0x19d
 2266 04f9 82050000 		.4byte	0x582
 2267 04fd 2001     		.2byte	0x120
 2268 04ff 0A       		.uleb128 0xa
 2269 0500 12140000 		.4byte	.LASF184
 2270 0504 01       		.byte	0x1
 2271 0505 9E01     		.2byte	0x19e
 2272 0507 9C050000 		.4byte	0x59c
 2273 050b 8001     		.2byte	0x180
 2274 050d 0A       		.uleb128 0xa
 2275 050e 30170000 		.4byte	.LASF185
 2276 0512 01       		.byte	0x1
 2277 0513 9F01     		.2byte	0x19f
 2278 0515 82050000 		.4byte	0x582
 2279 0519 A001     		.2byte	0x1a0
 2280 051b 0A       		.uleb128 0xa
 2281 051c E61D0000 		.4byte	.LASF186
 2282 0520 01       		.byte	0x1
 2283 0521 A001     		.2byte	0x1a0
 2284 0523 A1050000 		.4byte	0x5a1
 2285 0527 0002     		.2byte	0x200
 2286 0529 0A       		.uleb128 0xa
 2287 052a 3A170000 		.4byte	.LASF187
 2288 052e 01       		.byte	0x1
 2289 052f A101     		.2byte	0x1a1
 2290 0531 A6050000 		.4byte	0x5a6
 2291 0535 2002     		.2byte	0x220
 2292 0537 0B       		.uleb128 0xb
 2293 0538 495000   		.ascii	"IP\000"
 2294 053b 01       		.byte	0x1
 2295 053c A201     		.2byte	0x1a2
 2296 053e CB050000 		.4byte	0x5cb
 2297 0542 0003     		.2byte	0x300
 2298 0544 0A       		.uleb128 0xa
 2299 0545 44170000 		.4byte	.LASF188
 2300 0549 01       		.byte	0x1
 2301 054a A301     		.2byte	0x1a3
 2302 054c D0050000 		.4byte	0x5d0
 2303 0550 F003     		.2byte	0x3f0
 2304 0552 0A       		.uleb128 0xa
 2305 0553 41020000 		.4byte	.LASF189
 2306 0557 01       		.byte	0x1
 2307 0558 A401     		.2byte	0x1a4
 2308 055a 78050000 		.4byte	0x578
 2309 055e 000E     		.2byte	0xe00
 2310 0560 00       		.byte	0
 2311 0561 0C       		.uleb128 0xc
 2312 0562 78050000 		.4byte	0x578
 2313 0566 71050000 		.4byte	0x571
 2314 056a 0D       		.uleb128 0xd
 2315 056b 71050000 		.4byte	0x571
 2316 056f 07       		.byte	0x7
 2317 0570 00       		.byte	0
 2318 0571 05       		.uleb128 0x5
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 189


 2319 0572 04       		.byte	0x4
 2320 0573 07       		.byte	0x7
 2321 0574 D8160000 		.4byte	.LASF190
 2322 0578 0E       		.uleb128 0xe
 2323 0579 9A040000 		.4byte	0x49a
 2324 057d 0E       		.uleb128 0xe
 2325 057e 61050000 		.4byte	0x561
 2326 0582 0C       		.uleb128 0xc
 2327 0583 9A040000 		.4byte	0x49a
 2328 0587 92050000 		.4byte	0x592
 2329 058b 0D       		.uleb128 0xd
 2330 058c 71050000 		.4byte	0x571
 2331 0590 17       		.byte	0x17
 2332 0591 00       		.byte	0
 2333 0592 0E       		.uleb128 0xe
 2334 0593 61050000 		.4byte	0x561
 2335 0597 0E       		.uleb128 0xe
 2336 0598 61050000 		.4byte	0x561
 2337 059c 0E       		.uleb128 0xe
 2338 059d 61050000 		.4byte	0x561
 2339 05a1 0E       		.uleb128 0xe
 2340 05a2 61050000 		.4byte	0x561
 2341 05a6 0C       		.uleb128 0xc
 2342 05a7 9A040000 		.4byte	0x49a
 2343 05ab B6050000 		.4byte	0x5b6
 2344 05af 0D       		.uleb128 0xd
 2345 05b0 71050000 		.4byte	0x571
 2346 05b4 37       		.byte	0x37
 2347 05b5 00       		.byte	0
 2348 05b6 0C       		.uleb128 0xc
 2349 05b7 C6050000 		.4byte	0x5c6
 2350 05bb C6050000 		.4byte	0x5c6
 2351 05bf 0D       		.uleb128 0xd
 2352 05c0 71050000 		.4byte	0x571
 2353 05c4 EF       		.byte	0xef
 2354 05c5 00       		.byte	0
 2355 05c6 0E       		.uleb128 0xe
 2356 05c7 6E040000 		.4byte	0x46e
 2357 05cb 0E       		.uleb128 0xe
 2358 05cc B6050000 		.4byte	0x5b6
 2359 05d0 0C       		.uleb128 0xc
 2360 05d1 9A040000 		.4byte	0x49a
 2361 05d5 E1050000 		.4byte	0x5e1
 2362 05d9 0F       		.uleb128 0xf
 2363 05da 71050000 		.4byte	0x571
 2364 05de 8302     		.2byte	0x283
 2365 05e0 00       		.byte	0
 2366 05e1 10       		.uleb128 0x10
 2367 05e2 B1190000 		.4byte	.LASF191
 2368 05e6 01       		.byte	0x1
 2369 05e7 A501     		.2byte	0x1a5
 2370 05e9 A5040000 		.4byte	0x4a5
 2371 05ed 11       		.uleb128 0x11
 2372 05ee 78050000 		.4byte	0x578
 2373 05f2 0C       		.uleb128 0xc
 2374 05f3 ED050000 		.4byte	0x5ed
 2375 05f7 02060000 		.4byte	0x602
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 190


 2376 05fb 0D       		.uleb128 0xd
 2377 05fc 71050000 		.4byte	0x571
 2378 0600 01       		.byte	0x1
 2379 0601 00       		.byte	0
 2380 0602 0C       		.uleb128 0xc
 2381 0603 78050000 		.4byte	0x578
 2382 0607 12060000 		.4byte	0x612
 2383 060b 0D       		.uleb128 0xd
 2384 060c 71050000 		.4byte	0x571
 2385 0610 7F       		.byte	0x7f
 2386 0611 00       		.byte	0
 2387 0612 0C       		.uleb128 0xc
 2388 0613 78050000 		.4byte	0x578
 2389 0617 22060000 		.4byte	0x622
 2390 061b 0D       		.uleb128 0xd
 2391 061c 71050000 		.4byte	0x571
 2392 0620 0F       		.byte	0xf
 2393 0621 00       		.byte	0
 2394 0622 0C       		.uleb128 0xc
 2395 0623 ED050000 		.4byte	0x5ed
 2396 0627 32060000 		.4byte	0x632
 2397 062b 0D       		.uleb128 0xd
 2398 062c 71050000 		.4byte	0x571
 2399 0630 06       		.byte	0x6
 2400 0631 00       		.byte	0
 2401 0632 12       		.uleb128 0x12
 2402 0633 40       		.byte	0x40
 2403 0634 0B       		.byte	0xb
 2404 0635 27       		.byte	0x27
 2405 0636 77060000 		.4byte	0x677
 2406 063a 13       		.uleb128 0x13
 2407 063b 631B0000 		.4byte	.LASF192
 2408 063f 0B       		.byte	0xb
 2409 0640 28       		.byte	0x28
 2410 0641 78050000 		.4byte	0x578
 2411 0645 00       		.byte	0
 2412 0646 13       		.uleb128 0x13
 2413 0647 04060000 		.4byte	.LASF193
 2414 064b 0B       		.byte	0xb
 2415 064c 29       		.byte	0x29
 2416 064d 7C060000 		.4byte	0x67c
 2417 0651 04       		.byte	0x4
 2418 0652 13       		.uleb128 0x13
 2419 0653 13080000 		.4byte	.LASF194
 2420 0657 0B       		.byte	0xb
 2421 0658 2A       		.byte	0x2a
 2422 0659 78050000 		.4byte	0x578
 2423 065d 20       		.byte	0x20
 2424 065e 13       		.uleb128 0x13
 2425 065f DD210000 		.4byte	.LASF195
 2426 0663 0B       		.byte	0xb
 2427 0664 2B       		.byte	0x2b
 2428 0665 78050000 		.4byte	0x578
 2429 0669 24       		.byte	0x24
 2430 066a 13       		.uleb128 0x13
 2431 066b 3A200000 		.4byte	.LASF196
 2432 066f 0B       		.byte	0xb
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 191


 2433 0670 2C       		.byte	0x2c
 2434 0671 96060000 		.4byte	0x696
 2435 0675 28       		.byte	0x28
 2436 0676 00       		.byte	0
 2437 0677 0E       		.uleb128 0xe
 2438 0678 22060000 		.4byte	0x622
 2439 067c 11       		.uleb128 0x11
 2440 067d 77060000 		.4byte	0x677
 2441 0681 0C       		.uleb128 0xc
 2442 0682 ED050000 		.4byte	0x5ed
 2443 0686 91060000 		.4byte	0x691
 2444 068a 0D       		.uleb128 0xd
 2445 068b 71050000 		.4byte	0x571
 2446 068f 05       		.byte	0x5
 2447 0690 00       		.byte	0
 2448 0691 0E       		.uleb128 0xe
 2449 0692 81060000 		.4byte	0x681
 2450 0696 11       		.uleb128 0x11
 2451 0697 91060000 		.4byte	0x691
 2452 069b 06       		.uleb128 0x6
 2453 069c 68200000 		.4byte	.LASF197
 2454 06a0 0B       		.byte	0xb
 2455 06a1 2D       		.byte	0x2d
 2456 06a2 32060000 		.4byte	0x632
 2457 06a6 14       		.uleb128 0x14
 2458 06a7 0002     		.2byte	0x200
 2459 06a9 0B       		.byte	0xb
 2460 06aa 32       		.byte	0x32
 2461 06ab BC060000 		.4byte	0x6bc
 2462 06af 13       		.uleb128 0x13
 2463 06b0 330E0000 		.4byte	.LASF198
 2464 06b4 0B       		.byte	0xb
 2465 06b5 33       		.byte	0x33
 2466 06b6 BC060000 		.4byte	0x6bc
 2467 06ba 00       		.byte	0
 2468 06bb 00       		.byte	0
 2469 06bc 0E       		.uleb128 0xe
 2470 06bd 02060000 		.4byte	0x602
 2471 06c1 06       		.uleb128 0x6
 2472 06c2 14000000 		.4byte	.LASF199
 2473 06c6 0B       		.byte	0xb
 2474 06c7 34       		.byte	0x34
 2475 06c8 A6060000 		.4byte	0x6a6
 2476 06cc 12       		.uleb128 0x12
 2477 06cd 40       		.byte	0x40
 2478 06ce 0B       		.byte	0xb
 2479 06cf 39       		.byte	0x39
 2480 06d0 1D070000 		.4byte	0x71d
 2481 06d4 13       		.uleb128 0x13
 2482 06d5 BA1F0000 		.4byte	.LASF200
 2483 06d9 0B       		.byte	0xb
 2484 06da 3A       		.byte	0x3a
 2485 06db 78050000 		.4byte	0x578
 2486 06df 00       		.byte	0
 2487 06e0 13       		.uleb128 0x13
 2488 06e1 15200000 		.4byte	.LASF201
 2489 06e5 0B       		.byte	0xb
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 192


 2490 06e6 3B       		.byte	0x3b
 2491 06e7 78050000 		.4byte	0x578
 2492 06eb 04       		.byte	0x4
 2493 06ec 13       		.uleb128 0x13
 2494 06ed 04060000 		.4byte	.LASF193
 2495 06f1 0B       		.byte	0xb
 2496 06f2 3C       		.byte	0x3c
 2497 06f3 22070000 		.4byte	0x722
 2498 06f7 08       		.byte	0x8
 2499 06f8 13       		.uleb128 0x13
 2500 06f9 C01F0000 		.4byte	.LASF202
 2501 06fd 0B       		.byte	0xb
 2502 06fe 3D       		.byte	0x3d
 2503 06ff ED050000 		.4byte	0x5ed
 2504 0703 20       		.byte	0x20
 2505 0704 13       		.uleb128 0x13
 2506 0705 1A200000 		.4byte	.LASF203
 2507 0709 0B       		.byte	0xb
 2508 070a 3E       		.byte	0x3e
 2509 070b 78050000 		.4byte	0x578
 2510 070f 24       		.byte	0x24
 2511 0710 13       		.uleb128 0x13
 2512 0711 3A200000 		.4byte	.LASF196
 2513 0715 0B       		.byte	0xb
 2514 0716 3F       		.byte	0x3f
 2515 0717 2C070000 		.4byte	0x72c
 2516 071b 28       		.byte	0x28
 2517 071c 00       		.byte	0
 2518 071d 0E       		.uleb128 0xe
 2519 071e 81060000 		.4byte	0x681
 2520 0722 11       		.uleb128 0x11
 2521 0723 1D070000 		.4byte	0x71d
 2522 0727 0E       		.uleb128 0xe
 2523 0728 81060000 		.4byte	0x681
 2524 072c 11       		.uleb128 0x11
 2525 072d 27070000 		.4byte	0x727
 2526 0731 06       		.uleb128 0x6
 2527 0732 DF060000 		.4byte	.LASF204
 2528 0736 0B       		.byte	0xb
 2529 0737 40       		.byte	0x40
 2530 0738 CC060000 		.4byte	0x6cc
 2531 073c 12       		.uleb128 0x12
 2532 073d 40       		.byte	0x40
 2533 073e 0B       		.byte	0xb
 2534 073f 45       		.byte	0x45
 2535 0740 8D070000 		.4byte	0x78d
 2536 0744 13       		.uleb128 0x13
 2537 0745 BA1F0000 		.4byte	.LASF200
 2538 0749 0B       		.byte	0xb
 2539 074a 46       		.byte	0x46
 2540 074b ED050000 		.4byte	0x5ed
 2541 074f 00       		.byte	0
 2542 0750 13       		.uleb128 0x13
 2543 0751 15200000 		.4byte	.LASF201
 2544 0755 0B       		.byte	0xb
 2545 0756 47       		.byte	0x47
 2546 0757 78050000 		.4byte	0x578
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 193


 2547 075b 04       		.byte	0x4
 2548 075c 13       		.uleb128 0x13
 2549 075d 04060000 		.4byte	.LASF193
 2550 0761 0B       		.byte	0xb
 2551 0762 48       		.byte	0x48
 2552 0763 92070000 		.4byte	0x792
 2553 0767 08       		.byte	0x8
 2554 0768 13       		.uleb128 0x13
 2555 0769 C01F0000 		.4byte	.LASF202
 2556 076d 0B       		.byte	0xb
 2557 076e 49       		.byte	0x49
 2558 076f ED050000 		.4byte	0x5ed
 2559 0773 20       		.byte	0x20
 2560 0774 13       		.uleb128 0x13
 2561 0775 1A200000 		.4byte	.LASF203
 2562 0779 0B       		.byte	0xb
 2563 077a 4A       		.byte	0x4a
 2564 077b 78050000 		.4byte	0x578
 2565 077f 24       		.byte	0x24
 2566 0780 13       		.uleb128 0x13
 2567 0781 3A200000 		.4byte	.LASF196
 2568 0785 0B       		.byte	0xb
 2569 0786 4B       		.byte	0x4b
 2570 0787 9C070000 		.4byte	0x79c
 2571 078b 28       		.byte	0x28
 2572 078c 00       		.byte	0
 2573 078d 0E       		.uleb128 0xe
 2574 078e 81060000 		.4byte	0x681
 2575 0792 11       		.uleb128 0x11
 2576 0793 8D070000 		.4byte	0x78d
 2577 0797 0E       		.uleb128 0xe
 2578 0798 81060000 		.4byte	0x681
 2579 079c 11       		.uleb128 0x11
 2580 079d 97070000 		.4byte	0x797
 2581 07a1 06       		.uleb128 0x6
 2582 07a2 171F0000 		.4byte	.LASF205
 2583 07a6 0B       		.byte	0xb
 2584 07a7 4C       		.byte	0x4c
 2585 07a8 3C070000 		.4byte	0x73c
 2586 07ac 14       		.uleb128 0x14
 2587 07ad 0054     		.2byte	0x5400
 2588 07af 0B       		.byte	0xb
 2589 07b0 69       		.byte	0x69
 2590 07b1 84080000 		.4byte	0x884
 2591 07b5 15       		.uleb128 0x15
 2592 07b6 475200   		.ascii	"GR\000"
 2593 07b9 0B       		.byte	0xb
 2594 07ba 6A       		.byte	0x6a
 2595 07bb 84080000 		.4byte	0x884
 2596 07bf 00       		.byte	0
 2597 07c0 16       		.uleb128 0x16
 2598 07c1 E4080000 		.4byte	.LASF206
 2599 07c5 0B       		.byte	0xb
 2600 07c6 6B       		.byte	0x6b
 2601 07c7 78050000 		.4byte	0x578
 2602 07cb 0004     		.2byte	0x400
 2603 07cd 16       		.uleb128 0x16
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 194


 2604 07ce 04060000 		.4byte	.LASF193
 2605 07d2 0B       		.byte	0xb
 2606 07d3 6C       		.byte	0x6c
 2607 07d4 A9080000 		.4byte	0x8a9
 2608 07d8 0404     		.2byte	0x404
 2609 07da 16       		.uleb128 0x16
 2610 07db 63010000 		.4byte	.LASF207
 2611 07df 0B       		.byte	0xb
 2612 07e0 6D       		.byte	0x6d
 2613 07e1 BE080000 		.4byte	0x8be
 2614 07e5 0008     		.2byte	0x800
 2615 07e7 16       		.uleb128 0x16
 2616 07e8 C90C0000 		.4byte	.LASF208
 2617 07ec 0B       		.byte	0xb
 2618 07ed 6E       		.byte	0x6e
 2619 07ee C3080000 		.4byte	0x8c3
 2620 07f2 0009     		.2byte	0x900
 2621 07f4 16       		.uleb128 0x16
 2622 07f5 9B030000 		.4byte	.LASF209
 2623 07f9 0B       		.byte	0xb
 2624 07fa 6F       		.byte	0x6f
 2625 07fb C8080000 		.4byte	0x8c8
 2626 07ff 000A     		.2byte	0xa00
 2627 0801 16       		.uleb128 0x16
 2628 0802 FA0B0000 		.4byte	.LASF210
 2629 0806 0B       		.byte	0xb
 2630 0807 70       		.byte	0x70
 2631 0808 DD080000 		.4byte	0x8dd
 2632 080c 000B     		.2byte	0xb00
 2633 080e 16       		.uleb128 0x16
 2634 080f 3A200000 		.4byte	.LASF196
 2635 0813 0B       		.byte	0xb
 2636 0814 71       		.byte	0x71
 2637 0815 ED050000 		.4byte	0x5ed
 2638 0819 FC0B     		.2byte	0xbfc
 2639 081b 16       		.uleb128 0x16
 2640 081c 631B0000 		.4byte	.LASF192
 2641 0820 0B       		.byte	0xb
 2642 0821 72       		.byte	0x72
 2643 0822 E2080000 		.4byte	0x8e2
 2644 0826 000C     		.2byte	0xc00
 2645 0828 16       		.uleb128 0x16
 2646 0829 26170000 		.4byte	.LASF183
 2647 082d 0B       		.byte	0xb
 2648 082e 73       		.byte	0x73
 2649 082f FC080000 		.4byte	0x8fc
 2650 0833 000E     		.2byte	0xe00
 2651 0835 16       		.uleb128 0x16
 2652 0836 000B0000 		.4byte	.LASF211
 2653 083a 0B       		.byte	0xb
 2654 083b 74       		.byte	0x74
 2655 083c 78050000 		.4byte	0x578
 2656 0840 0010     		.2byte	0x1000
 2657 0842 16       		.uleb128 0x16
 2658 0843 30170000 		.4byte	.LASF185
 2659 0847 0B       		.byte	0xb
 2660 0848 75       		.byte	0x75
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 195


 2661 0849 17090000 		.4byte	0x917
 2662 084d 0410     		.2byte	0x1004
 2663 084f 16       		.uleb128 0x16
 2664 0850 500E0000 		.4byte	.LASF212
 2665 0854 0B       		.byte	0xb
 2666 0855 76       		.byte	0x76
 2667 0856 1C090000 		.4byte	0x91c
 2668 085a 0020     		.2byte	0x2000
 2669 085c 16       		.uleb128 0x16
 2670 085d B4030000 		.4byte	.LASF213
 2671 0861 0B       		.byte	0xb
 2672 0862 77       		.byte	0x77
 2673 0863 2C090000 		.4byte	0x92c
 2674 0867 0040     		.2byte	0x4000
 2675 0869 16       		.uleb128 0x16
 2676 086a 3A170000 		.4byte	.LASF187
 2677 086e 0B       		.byte	0xb
 2678 086f 78       		.byte	0x78
 2679 0870 52090000 		.4byte	0x952
 2680 0874 0048     		.2byte	0x4800
 2681 0876 16       		.uleb128 0x16
 2682 0877 BB110000 		.4byte	.LASF214
 2683 087b 0B       		.byte	0xb
 2684 087c 79       		.byte	0x79
 2685 087d 57090000 		.4byte	0x957
 2686 0881 0050     		.2byte	0x5000
 2687 0883 00       		.byte	0
 2688 0884 0C       		.uleb128 0xc
 2689 0885 9B060000 		.4byte	0x69b
 2690 0889 94080000 		.4byte	0x894
 2691 088d 0D       		.uleb128 0xd
 2692 088e 71050000 		.4byte	0x571
 2693 0892 0F       		.byte	0xf
 2694 0893 00       		.byte	0
 2695 0894 0C       		.uleb128 0xc
 2696 0895 ED050000 		.4byte	0x5ed
 2697 0899 A4080000 		.4byte	0x8a4
 2698 089d 0D       		.uleb128 0xd
 2699 089e 71050000 		.4byte	0x571
 2700 08a2 FE       		.byte	0xfe
 2701 08a3 00       		.byte	0
 2702 08a4 0E       		.uleb128 0xe
 2703 08a5 94080000 		.4byte	0x894
 2704 08a9 11       		.uleb128 0x11
 2705 08aa A4080000 		.4byte	0x8a4
 2706 08ae 0C       		.uleb128 0xc
 2707 08af 78050000 		.4byte	0x578
 2708 08b3 BE080000 		.4byte	0x8be
 2709 08b7 0D       		.uleb128 0xd
 2710 08b8 71050000 		.4byte	0x571
 2711 08bc 3F       		.byte	0x3f
 2712 08bd 00       		.byte	0
 2713 08be 0E       		.uleb128 0xe
 2714 08bf AE080000 		.4byte	0x8ae
 2715 08c3 0E       		.uleb128 0xe
 2716 08c4 AE080000 		.4byte	0x8ae
 2717 08c8 0E       		.uleb128 0xe
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 196


 2718 08c9 AE080000 		.4byte	0x8ae
 2719 08cd 0C       		.uleb128 0xc
 2720 08ce 78050000 		.4byte	0x578
 2721 08d2 DD080000 		.4byte	0x8dd
 2722 08d6 0D       		.uleb128 0xd
 2723 08d7 71050000 		.4byte	0x571
 2724 08db 3E       		.byte	0x3e
 2725 08dc 00       		.byte	0
 2726 08dd 0E       		.uleb128 0xe
 2727 08de CD080000 		.4byte	0x8cd
 2728 08e2 0E       		.uleb128 0xe
 2729 08e3 02060000 		.4byte	0x602
 2730 08e7 0C       		.uleb128 0xc
 2731 08e8 ED050000 		.4byte	0x5ed
 2732 08ec F7080000 		.4byte	0x8f7
 2733 08f0 0D       		.uleb128 0xd
 2734 08f1 71050000 		.4byte	0x571
 2735 08f5 7F       		.byte	0x7f
 2736 08f6 00       		.byte	0
 2737 08f7 0E       		.uleb128 0xe
 2738 08f8 E7080000 		.4byte	0x8e7
 2739 08fc 11       		.uleb128 0x11
 2740 08fd F7080000 		.4byte	0x8f7
 2741 0901 0C       		.uleb128 0xc
 2742 0902 ED050000 		.4byte	0x5ed
 2743 0906 12090000 		.4byte	0x912
 2744 090a 0F       		.uleb128 0xf
 2745 090b 71050000 		.4byte	0x571
 2746 090f FE03     		.2byte	0x3fe
 2747 0911 00       		.byte	0
 2748 0912 0E       		.uleb128 0xe
 2749 0913 01090000 		.4byte	0x901
 2750 0917 11       		.uleb128 0x11
 2751 0918 12090000 		.4byte	0x912
 2752 091c 0C       		.uleb128 0xc
 2753 091d C1060000 		.4byte	0x6c1
 2754 0921 2C090000 		.4byte	0x92c
 2755 0925 0D       		.uleb128 0xd
 2756 0926 71050000 		.4byte	0x571
 2757 092a 0F       		.byte	0xf
 2758 092b 00       		.byte	0
 2759 092c 0C       		.uleb128 0xc
 2760 092d 31070000 		.4byte	0x731
 2761 0931 3C090000 		.4byte	0x93c
 2762 0935 0D       		.uleb128 0xd
 2763 0936 71050000 		.4byte	0x571
 2764 093a 1F       		.byte	0x1f
 2765 093b 00       		.byte	0
 2766 093c 0C       		.uleb128 0xc
 2767 093d ED050000 		.4byte	0x5ed
 2768 0941 4D090000 		.4byte	0x94d
 2769 0945 0F       		.uleb128 0xf
 2770 0946 71050000 		.4byte	0x571
 2771 094a FF01     		.2byte	0x1ff
 2772 094c 00       		.byte	0
 2773 094d 0E       		.uleb128 0xe
 2774 094e 3C090000 		.4byte	0x93c
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 197


 2775 0952 11       		.uleb128 0x11
 2776 0953 4D090000 		.4byte	0x94d
 2777 0957 0C       		.uleb128 0xc
 2778 0958 A1070000 		.4byte	0x7a1
 2779 095c 67090000 		.4byte	0x967
 2780 0960 0D       		.uleb128 0xd
 2781 0961 71050000 		.4byte	0x571
 2782 0965 0F       		.byte	0xf
 2783 0966 00       		.byte	0
 2784 0967 06       		.uleb128 0x6
 2785 0968 86170000 		.4byte	.LASF215
 2786 096c 0B       		.byte	0xb
 2787 096d 7B       		.byte	0x7b
 2788 096e AC070000 		.4byte	0x7ac
 2789 0972 0C       		.uleb128 0xc
 2790 0973 ED050000 		.4byte	0x5ed
 2791 0977 82090000 		.4byte	0x982
 2792 097b 0D       		.uleb128 0xd
 2793 097c 71050000 		.4byte	0x571
 2794 0980 0F       		.byte	0xf
 2795 0981 00       		.byte	0
 2796 0982 0C       		.uleb128 0xc
 2797 0983 ED050000 		.4byte	0x5ed
 2798 0987 92090000 		.4byte	0x992
 2799 098b 0D       		.uleb128 0xd
 2800 098c 71050000 		.4byte	0x571
 2801 0990 02       		.byte	0x2
 2802 0991 00       		.byte	0
 2803 0992 0C       		.uleb128 0xc
 2804 0993 ED050000 		.4byte	0x5ed
 2805 0997 A2090000 		.4byte	0x9a2
 2806 099b 0D       		.uleb128 0xd
 2807 099c 71050000 		.4byte	0x571
 2808 09a0 0E       		.byte	0xe
 2809 09a1 00       		.byte	0
 2810 09a2 14       		.uleb128 0x14
 2811 09a3 080F     		.2byte	0xf08
 2812 09a5 0C       		.byte	0xc
 2813 09a6 21       		.byte	0x21
 2814 09a7 2A0C0000 		.4byte	0xc2a
 2815 09ab 13       		.uleb128 0x13
 2816 09ac AD220000 		.4byte	.LASF216
 2817 09b0 0C       		.byte	0xc
 2818 09b1 22       		.byte	0x22
 2819 09b2 78050000 		.4byte	0x578
 2820 09b6 00       		.byte	0
 2821 09b7 13       		.uleb128 0x13
 2822 09b8 951A0000 		.4byte	.LASF217
 2823 09bc 0C       		.byte	0xc
 2824 09bd 23       		.byte	0x23
 2825 09be 78050000 		.4byte	0x578
 2826 09c2 04       		.byte	0x4
 2827 09c3 13       		.uleb128 0x13
 2828 09c4 04060000 		.4byte	.LASF193
 2829 09c8 0C       		.byte	0xc
 2830 09c9 24       		.byte	0x24
 2831 09ca 2F0C0000 		.4byte	0xc2f
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 198


 2832 09ce 08       		.byte	0x8
 2833 09cf 13       		.uleb128 0x13
 2834 09d0 CB040000 		.4byte	.LASF218
 2835 09d4 0C       		.byte	0xc
 2836 09d5 25       		.byte	0x25
 2837 09d6 78050000 		.4byte	0x578
 2838 09da 10       		.byte	0x10
 2839 09db 13       		.uleb128 0x13
 2840 09dc 88090000 		.4byte	.LASF219
 2841 09e0 0C       		.byte	0xc
 2842 09e1 26       		.byte	0x26
 2843 09e2 78050000 		.4byte	0x578
 2844 09e6 14       		.byte	0x14
 2845 09e7 13       		.uleb128 0x13
 2846 09e8 BE180000 		.4byte	.LASF220
 2847 09ec 0C       		.byte	0xc
 2848 09ed 27       		.byte	0x27
 2849 09ee 78050000 		.4byte	0x578
 2850 09f2 18       		.byte	0x18
 2851 09f3 13       		.uleb128 0x13
 2852 09f4 DB0B0000 		.4byte	.LASF221
 2853 09f8 0C       		.byte	0xc
 2854 09f9 28       		.byte	0x28
 2855 09fa 78050000 		.4byte	0x578
 2856 09fe 1C       		.byte	0x1c
 2857 09ff 13       		.uleb128 0x13
 2858 0a00 B0010000 		.4byte	.LASF222
 2859 0a04 0C       		.byte	0xc
 2860 0a05 29       		.byte	0x29
 2861 0a06 78050000 		.4byte	0x578
 2862 0a0a 20       		.byte	0x20
 2863 0a0b 13       		.uleb128 0x13
 2864 0a0c 850D0000 		.4byte	.LASF223
 2865 0a10 0C       		.byte	0xc
 2866 0a11 2A       		.byte	0x2a
 2867 0a12 78050000 		.4byte	0x578
 2868 0a16 24       		.byte	0x24
 2869 0a17 13       		.uleb128 0x13
 2870 0a18 3A200000 		.4byte	.LASF196
 2871 0a1c 0C       		.byte	0xc
 2872 0a1d 2B       		.byte	0x2b
 2873 0a1e 490C0000 		.4byte	0xc49
 2874 0a22 28       		.byte	0x28
 2875 0a23 13       		.uleb128 0x13
 2876 0a24 E31B0000 		.4byte	.LASF224
 2877 0a28 0C       		.byte	0xc
 2878 0a29 2C       		.byte	0x2c
 2879 0a2a 4E0C0000 		.4byte	0xc4e
 2880 0a2e 80       		.byte	0x80
 2881 0a2f 13       		.uleb128 0x13
 2882 0a30 26170000 		.4byte	.LASF183
 2883 0a34 0C       		.byte	0xc
 2884 0a35 2D       		.byte	0x2d
 2885 0a36 580C0000 		.4byte	0xc58
 2886 0a3a C0       		.byte	0xc0
 2887 0a3b 16       		.uleb128 0x16
 2888 0a3c 0D190000 		.4byte	.LASF225
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 199


 2889 0a40 0C       		.byte	0xc
 2890 0a41 2E       		.byte	0x2e
 2891 0a42 620C0000 		.4byte	0xc62
 2892 0a46 0001     		.2byte	0x100
 2893 0a48 16       		.uleb128 0x16
 2894 0a49 30170000 		.4byte	.LASF185
 2895 0a4d 0C       		.byte	0xc
 2896 0a4e 2F       		.byte	0x2f
 2897 0a4f 6C0C0000 		.4byte	0xc6c
 2898 0a53 4001     		.2byte	0x140
 2899 0a55 16       		.uleb128 0x16
 2900 0a56 59120000 		.4byte	.LASF226
 2901 0a5a 0C       		.byte	0xc
 2902 0a5b 30       		.byte	0x30
 2903 0a5c 760C0000 		.4byte	0xc76
 2904 0a60 8001     		.2byte	0x180
 2905 0a62 16       		.uleb128 0x16
 2906 0a63 3A170000 		.4byte	.LASF187
 2907 0a67 0C       		.byte	0xc
 2908 0a68 31       		.byte	0x31
 2909 0a69 800C0000 		.4byte	0xc80
 2910 0a6d C001     		.2byte	0x1c0
 2911 0a6f 16       		.uleb128 0x16
 2912 0a70 8B000000 		.4byte	.LASF227
 2913 0a74 0C       		.byte	0xc
 2914 0a75 32       		.byte	0x32
 2915 0a76 ED050000 		.4byte	0x5ed
 2916 0a7a 0002     		.2byte	0x200
 2917 0a7c 16       		.uleb128 0x16
 2918 0a7d 911B0000 		.4byte	.LASF228
 2919 0a81 0C       		.byte	0xc
 2920 0a82 33       		.byte	0x33
 2921 0a83 ED050000 		.4byte	0x5ed
 2922 0a87 0402     		.2byte	0x204
 2923 0a89 16       		.uleb128 0x16
 2924 0a8a 7E030000 		.4byte	.LASF229
 2925 0a8e 0C       		.byte	0xc
 2926 0a8f 34       		.byte	0x34
 2927 0a90 ED050000 		.4byte	0x5ed
 2928 0a94 0802     		.2byte	0x208
 2929 0a96 16       		.uleb128 0x16
 2930 0a97 3C0F0000 		.4byte	.LASF230
 2931 0a9b 0C       		.byte	0xc
 2932 0a9c 35       		.byte	0x35
 2933 0a9d ED050000 		.4byte	0x5ed
 2934 0aa1 0C02     		.2byte	0x20c
 2935 0aa3 16       		.uleb128 0x16
 2936 0aa4 630D0000 		.4byte	.LASF231
 2937 0aa8 0C       		.byte	0xc
 2938 0aa9 36       		.byte	0x36
 2939 0aaa 78050000 		.4byte	0x578
 2940 0aae 1002     		.2byte	0x210
 2941 0ab0 16       		.uleb128 0x16
 2942 0ab1 14050000 		.4byte	.LASF232
 2943 0ab5 0C       		.byte	0xc
 2944 0ab6 37       		.byte	0x37
 2945 0ab7 78050000 		.4byte	0x578
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 200


 2946 0abb 1402     		.2byte	0x214
 2947 0abd 16       		.uleb128 0x16
 2948 0abe F0120000 		.4byte	.LASF233
 2949 0ac2 0C       		.byte	0xc
 2950 0ac3 38       		.byte	0x38
 2951 0ac4 78050000 		.4byte	0x578
 2952 0ac8 1802     		.2byte	0x218
 2953 0aca 16       		.uleb128 0x16
 2954 0acb 461A0000 		.4byte	.LASF234
 2955 0acf 0C       		.byte	0xc
 2956 0ad0 39       		.byte	0x39
 2957 0ad1 ED050000 		.4byte	0x5ed
 2958 0ad5 1C02     		.2byte	0x21c
 2959 0ad7 16       		.uleb128 0x16
 2960 0ad8 8C040000 		.4byte	.LASF235
 2961 0adc 0C       		.byte	0xc
 2962 0add 3A       		.byte	0x3a
 2963 0ade 78050000 		.4byte	0x578
 2964 0ae2 2002     		.2byte	0x220
 2965 0ae4 16       		.uleb128 0x16
 2966 0ae5 3E0E0000 		.4byte	.LASF236
 2967 0ae9 0C       		.byte	0xc
 2968 0aea 3B       		.byte	0x3b
 2969 0aeb 78050000 		.4byte	0x578
 2970 0aef 2402     		.2byte	0x224
 2971 0af1 16       		.uleb128 0x16
 2972 0af2 461D0000 		.4byte	.LASF237
 2973 0af6 0C       		.byte	0xc
 2974 0af7 3C       		.byte	0x3c
 2975 0af8 78050000 		.4byte	0x578
 2976 0afc 2802     		.2byte	0x228
 2977 0afe 16       		.uleb128 0x16
 2978 0aff 93170000 		.4byte	.LASF238
 2979 0b03 0C       		.byte	0xc
 2980 0b04 3D       		.byte	0x3d
 2981 0b05 ED050000 		.4byte	0x5ed
 2982 0b09 2C02     		.2byte	0x22c
 2983 0b0b 16       		.uleb128 0x16
 2984 0b0c C3120000 		.4byte	.LASF239
 2985 0b10 0C       		.byte	0xc
 2986 0b11 3E       		.byte	0x3e
 2987 0b12 78050000 		.4byte	0x578
 2988 0b16 3002     		.2byte	0x230
 2989 0b18 16       		.uleb128 0x16
 2990 0b19 A7060000 		.4byte	.LASF240
 2991 0b1d 0C       		.byte	0xc
 2992 0b1e 3F       		.byte	0x3f
 2993 0b1f 78050000 		.4byte	0x578
 2994 0b23 3402     		.2byte	0x234
 2995 0b25 16       		.uleb128 0x16
 2996 0b26 AF0B0000 		.4byte	.LASF241
 2997 0b2a 0C       		.byte	0xc
 2998 0b2b 40       		.byte	0x40
 2999 0b2c 78050000 		.4byte	0x578
 3000 0b30 3802     		.2byte	0x238
 3001 0b32 16       		.uleb128 0x16
 3002 0b33 50000000 		.4byte	.LASF242
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 201


 3003 0b37 0C       		.byte	0xc
 3004 0b38 41       		.byte	0x41
 3005 0b39 ED050000 		.4byte	0x5ed
 3006 0b3d 3C02     		.2byte	0x23c
 3007 0b3f 16       		.uleb128 0x16
 3008 0b40 B4020000 		.4byte	.LASF243
 3009 0b44 0C       		.byte	0xc
 3010 0b45 42       		.byte	0x42
 3011 0b46 ED050000 		.4byte	0x5ed
 3012 0b4a 4002     		.2byte	0x240
 3013 0b4c 16       		.uleb128 0x16
 3014 0b4d 44170000 		.4byte	.LASF188
 3015 0b51 0C       		.byte	0xc
 3016 0b52 43       		.byte	0x43
 3017 0b53 8A0C0000 		.4byte	0xc8a
 3018 0b57 4402     		.2byte	0x244
 3019 0b59 16       		.uleb128 0x16
 3020 0b5a 6B0A0000 		.4byte	.LASF244
 3021 0b5e 0C       		.byte	0xc
 3022 0b5f 44       		.byte	0x44
 3023 0b60 78050000 		.4byte	0x578
 3024 0b64 8002     		.2byte	0x280
 3025 0b66 16       		.uleb128 0x16
 3026 0b67 4E170000 		.4byte	.LASF245
 3027 0b6b 0C       		.byte	0xc
 3028 0b6c 45       		.byte	0x45
 3029 0b6d 940C0000 		.4byte	0xc94
 3030 0b71 8402     		.2byte	0x284
 3031 0b73 16       		.uleb128 0x16
 3032 0b74 F3040000 		.4byte	.LASF246
 3033 0b78 0C       		.byte	0xc
 3034 0b79 46       		.byte	0x46
 3035 0b7a ED050000 		.4byte	0x5ed
 3036 0b7e 9002     		.2byte	0x290
 3037 0b80 16       		.uleb128 0x16
 3038 0b81 EC080000 		.4byte	.LASF247
 3039 0b85 0C       		.byte	0xc
 3040 0b86 47       		.byte	0x47
 3041 0b87 9E0C0000 		.4byte	0xc9e
 3042 0b8b 9402     		.2byte	0x294
 3043 0b8d 16       		.uleb128 0x16
 3044 0b8e 61200000 		.4byte	.LASF248
 3045 0b92 0C       		.byte	0xc
 3046 0b93 48       		.byte	0x48
 3047 0b94 ED050000 		.4byte	0x5ed
 3048 0b98 A002     		.2byte	0x2a0
 3049 0b9a 16       		.uleb128 0x16
 3050 0b9b A70F0000 		.4byte	.LASF249
 3051 0b9f 0C       		.byte	0xc
 3052 0ba0 49       		.byte	0x49
 3053 0ba1 ED050000 		.4byte	0x5ed
 3054 0ba5 A402     		.2byte	0x2a4
 3055 0ba7 16       		.uleb128 0x16
 3056 0ba8 67170000 		.4byte	.LASF250
 3057 0bac 0C       		.byte	0xc
 3058 0bad 4A       		.byte	0x4a
 3059 0bae A80C0000 		.4byte	0xca8
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 202


 3060 0bb2 A802     		.2byte	0x2a8
 3061 0bb4 16       		.uleb128 0x16
 3062 0bb5 851B0000 		.4byte	.LASF251
 3063 0bb9 0C       		.byte	0xc
 3064 0bba 4B       		.byte	0x4b
 3065 0bbb 78050000 		.4byte	0x578
 3066 0bbf 0003     		.2byte	0x300
 3067 0bc1 16       		.uleb128 0x16
 3068 0bc2 81130000 		.4byte	.LASF252
 3069 0bc6 0C       		.byte	0xc
 3070 0bc7 4C       		.byte	0x4c
 3071 0bc8 78050000 		.4byte	0x578
 3072 0bcc 0403     		.2byte	0x304
 3073 0bce 16       		.uleb128 0x16
 3074 0bcf F9200000 		.4byte	.LASF253
 3075 0bd3 0C       		.byte	0xc
 3076 0bd4 4D       		.byte	0x4d
 3077 0bd5 C20C0000 		.4byte	0xcc2
 3078 0bd9 0803     		.2byte	0x308
 3079 0bdb 16       		.uleb128 0x16
 3080 0bdc 481F0000 		.4byte	.LASF254
 3081 0be0 0C       		.byte	0xc
 3082 0be1 4E       		.byte	0x4e
 3083 0be2 78050000 		.4byte	0x578
 3084 0be6 4003     		.2byte	0x340
 3085 0be8 16       		.uleb128 0x16
 3086 0be9 A8170000 		.4byte	.LASF255
 3087 0bed 0C       		.byte	0xc
 3088 0bee 4F       		.byte	0x4f
 3089 0bef 78050000 		.4byte	0x578
 3090 0bf3 4403     		.2byte	0x344
 3091 0bf5 16       		.uleb128 0x16
 3092 0bf6 A81F0000 		.4byte	.LASF256
 3093 0bfa 0C       		.byte	0xc
 3094 0bfb 50       		.byte	0x50
 3095 0bfc ED050000 		.4byte	0x5ed
 3096 0c00 4803     		.2byte	0x348
 3097 0c02 16       		.uleb128 0x16
 3098 0c03 611D0000 		.4byte	.LASF257
 3099 0c07 0C       		.byte	0xc
 3100 0c08 51       		.byte	0x51
 3101 0c09 DD0C0000 		.4byte	0xcdd
 3102 0c0d 4C03     		.2byte	0x34c
 3103 0c0f 16       		.uleb128 0x16
 3104 0c10 A31C0000 		.4byte	.LASF258
 3105 0c14 0C       		.byte	0xc
 3106 0c15 52       		.byte	0x52
 3107 0c16 78050000 		.4byte	0x578
 3108 0c1a 000F     		.2byte	0xf00
 3109 0c1c 16       		.uleb128 0x16
 3110 0c1d AD1C0000 		.4byte	.LASF259
 3111 0c21 0C       		.byte	0xc
 3112 0c22 53       		.byte	0x53
 3113 0c23 78050000 		.4byte	0x578
 3114 0c27 040F     		.2byte	0xf04
 3115 0c29 00       		.byte	0
 3116 0c2a 0E       		.uleb128 0xe
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 203


 3117 0c2b F2050000 		.4byte	0x5f2
 3118 0c2f 11       		.uleb128 0x11
 3119 0c30 2A0C0000 		.4byte	0xc2a
 3120 0c34 0C       		.uleb128 0xc
 3121 0c35 ED050000 		.4byte	0x5ed
 3122 0c39 440C0000 		.4byte	0xc44
 3123 0c3d 0D       		.uleb128 0xd
 3124 0c3e 71050000 		.4byte	0x571
 3125 0c42 15       		.byte	0x15
 3126 0c43 00       		.byte	0
 3127 0c44 0E       		.uleb128 0xe
 3128 0c45 340C0000 		.4byte	0xc34
 3129 0c49 11       		.uleb128 0x11
 3130 0c4a 440C0000 		.4byte	0xc44
 3131 0c4e 0E       		.uleb128 0xe
 3132 0c4f 12060000 		.4byte	0x612
 3133 0c53 0E       		.uleb128 0xe
 3134 0c54 72090000 		.4byte	0x972
 3135 0c58 11       		.uleb128 0x11
 3136 0c59 530C0000 		.4byte	0xc53
 3137 0c5d 0E       		.uleb128 0xe
 3138 0c5e 72090000 		.4byte	0x972
 3139 0c62 11       		.uleb128 0x11
 3140 0c63 5D0C0000 		.4byte	0xc5d
 3141 0c67 0E       		.uleb128 0xe
 3142 0c68 72090000 		.4byte	0x972
 3143 0c6c 11       		.uleb128 0x11
 3144 0c6d 670C0000 		.4byte	0xc67
 3145 0c71 0E       		.uleb128 0xe
 3146 0c72 72090000 		.4byte	0x972
 3147 0c76 11       		.uleb128 0x11
 3148 0c77 710C0000 		.4byte	0xc71
 3149 0c7b 0E       		.uleb128 0xe
 3150 0c7c 72090000 		.4byte	0x972
 3151 0c80 11       		.uleb128 0x11
 3152 0c81 7B0C0000 		.4byte	0xc7b
 3153 0c85 0E       		.uleb128 0xe
 3154 0c86 92090000 		.4byte	0x992
 3155 0c8a 11       		.uleb128 0x11
 3156 0c8b 850C0000 		.4byte	0xc85
 3157 0c8f 0E       		.uleb128 0xe
 3158 0c90 82090000 		.4byte	0x982
 3159 0c94 11       		.uleb128 0x11
 3160 0c95 8F0C0000 		.4byte	0xc8f
 3161 0c99 0E       		.uleb128 0xe
 3162 0c9a 82090000 		.4byte	0x982
 3163 0c9e 11       		.uleb128 0x11
 3164 0c9f 990C0000 		.4byte	0xc99
 3165 0ca3 0E       		.uleb128 0xe
 3166 0ca4 340C0000 		.4byte	0xc34
 3167 0ca8 11       		.uleb128 0x11
 3168 0ca9 A30C0000 		.4byte	0xca3
 3169 0cad 0C       		.uleb128 0xc
 3170 0cae ED050000 		.4byte	0x5ed
 3171 0cb2 BD0C0000 		.4byte	0xcbd
 3172 0cb6 0D       		.uleb128 0xd
 3173 0cb7 71050000 		.4byte	0x571
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 204


 3174 0cbb 0D       		.byte	0xd
 3175 0cbc 00       		.byte	0
 3176 0cbd 0E       		.uleb128 0xe
 3177 0cbe AD0C0000 		.4byte	0xcad
 3178 0cc2 11       		.uleb128 0x11
 3179 0cc3 BD0C0000 		.4byte	0xcbd
 3180 0cc7 0C       		.uleb128 0xc
 3181 0cc8 ED050000 		.4byte	0x5ed
 3182 0ccc D80C0000 		.4byte	0xcd8
 3183 0cd0 0F       		.uleb128 0xf
 3184 0cd1 71050000 		.4byte	0x571
 3185 0cd5 EC02     		.2byte	0x2ec
 3186 0cd7 00       		.byte	0
 3187 0cd8 0E       		.uleb128 0xe
 3188 0cd9 C70C0000 		.4byte	0xcc7
 3189 0cdd 11       		.uleb128 0x11
 3190 0cde D80C0000 		.4byte	0xcd8
 3191 0ce2 06       		.uleb128 0x6
 3192 0ce3 790D0000 		.4byte	.LASF260
 3193 0ce7 0C       		.byte	0xc
 3194 0ce8 54       		.byte	0x54
 3195 0ce9 A2090000 		.4byte	0x9a2
 3196 0ced 10       		.uleb128 0x10
 3197 0cee 32060000 		.4byte	.LASF261
 3198 0cf2 0D       		.byte	0xd
 3199 0cf3 5206     		.2byte	0x652
 3200 0cf5 E20C0000 		.4byte	0xce2
 3201 0cf9 05       		.uleb128 0x5
 3202 0cfa 08       		.byte	0x8
 3203 0cfb 04       		.byte	0x4
 3204 0cfc 7C150000 		.4byte	.LASF262
 3205 0d00 12       		.uleb128 0x12
 3206 0d01 B8       		.byte	0xb8
 3207 0d02 0E       		.byte	0xe
 3208 0d03 34       		.byte	0x34
 3209 0d04 11110000 		.4byte	0x1111
 3210 0d08 13       		.uleb128 0x13
 3211 0d09 91030000 		.4byte	.LASF263
 3212 0d0d 0E       		.byte	0xe
 3213 0d0e 37       		.byte	0x37
 3214 0d0f 9A040000 		.4byte	0x49a
 3215 0d13 00       		.byte	0
 3216 0d14 13       		.uleb128 0x13
 3217 0d15 1A080000 		.4byte	.LASF264
 3218 0d19 0E       		.byte	0xe
 3219 0d1a 38       		.byte	0x38
 3220 0d1b 9A040000 		.4byte	0x49a
 3221 0d1f 04       		.byte	0x4
 3222 0d20 13       		.uleb128 0x13
 3223 0d21 F1010000 		.4byte	.LASF265
 3224 0d25 0E       		.byte	0xe
 3225 0d26 39       		.byte	0x39
 3226 0d27 9A040000 		.4byte	0x49a
 3227 0d2b 08       		.byte	0x8
 3228 0d2c 13       		.uleb128 0x13
 3229 0d2d D51B0000 		.4byte	.LASF266
 3230 0d31 0E       		.byte	0xe
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 205


 3231 0d32 3A       		.byte	0x3a
 3232 0d33 9A040000 		.4byte	0x49a
 3233 0d37 0C       		.byte	0xc
 3234 0d38 13       		.uleb128 0x13
 3235 0d39 56180000 		.4byte	.LASF267
 3236 0d3d 0E       		.byte	0xe
 3237 0d3e 3B       		.byte	0x3b
 3238 0d3f 9A040000 		.4byte	0x49a
 3239 0d43 10       		.byte	0x10
 3240 0d44 13       		.uleb128 0x13
 3241 0d45 3E120000 		.4byte	.LASF268
 3242 0d49 0E       		.byte	0xe
 3243 0d4a 3C       		.byte	0x3c
 3244 0d4b 9A040000 		.4byte	0x49a
 3245 0d4f 14       		.byte	0x14
 3246 0d50 13       		.uleb128 0x13
 3247 0d51 480C0000 		.4byte	.LASF269
 3248 0d55 0E       		.byte	0xe
 3249 0d56 3D       		.byte	0x3d
 3250 0d57 9A040000 		.4byte	0x49a
 3251 0d5b 18       		.byte	0x18
 3252 0d5c 13       		.uleb128 0x13
 3253 0d5d 0C200000 		.4byte	.LASF270
 3254 0d61 0E       		.byte	0xe
 3255 0d62 3E       		.byte	0x3e
 3256 0d63 9A040000 		.4byte	0x49a
 3257 0d67 1C       		.byte	0x1c
 3258 0d68 13       		.uleb128 0x13
 3259 0d69 EC100000 		.4byte	.LASF271
 3260 0d6d 0E       		.byte	0xe
 3261 0d6e 3F       		.byte	0x3f
 3262 0d6f 9A040000 		.4byte	0x49a
 3263 0d73 20       		.byte	0x20
 3264 0d74 13       		.uleb128 0x13
 3265 0d75 03110000 		.4byte	.LASF272
 3266 0d79 0E       		.byte	0xe
 3267 0d7a 40       		.byte	0x40
 3268 0d7b 9A040000 		.4byte	0x49a
 3269 0d7f 24       		.byte	0x24
 3270 0d80 13       		.uleb128 0x13
 3271 0d81 E1170000 		.4byte	.LASF273
 3272 0d85 0E       		.byte	0xe
 3273 0d86 43       		.byte	0x43
 3274 0d87 6E040000 		.4byte	0x46e
 3275 0d8b 28       		.byte	0x28
 3276 0d8c 13       		.uleb128 0x13
 3277 0d8d C1070000 		.4byte	.LASF274
 3278 0d91 0E       		.byte	0xe
 3279 0d92 44       		.byte	0x44
 3280 0d93 6E040000 		.4byte	0x46e
 3281 0d97 29       		.byte	0x29
 3282 0d98 13       		.uleb128 0x13
 3283 0d99 56160000 		.4byte	.LASF275
 3284 0d9d 0E       		.byte	0xe
 3285 0d9e 45       		.byte	0x45
 3286 0d9f 6E040000 		.4byte	0x46e
 3287 0da3 2A       		.byte	0x2a
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 206


 3288 0da4 13       		.uleb128 0x13
 3289 0da5 36180000 		.4byte	.LASF276
 3290 0da9 0E       		.byte	0xe
 3291 0daa 46       		.byte	0x46
 3292 0dab 6E040000 		.4byte	0x46e
 3293 0daf 2B       		.byte	0x2b
 3294 0db0 13       		.uleb128 0x13
 3295 0db1 FB170000 		.4byte	.LASF277
 3296 0db5 0E       		.byte	0xe
 3297 0db6 47       		.byte	0x47
 3298 0db7 6E040000 		.4byte	0x46e
 3299 0dbb 2C       		.byte	0x2c
 3300 0dbc 13       		.uleb128 0x13
 3301 0dbd D21A0000 		.4byte	.LASF278
 3302 0dc1 0E       		.byte	0xe
 3303 0dc2 48       		.byte	0x48
 3304 0dc3 6E040000 		.4byte	0x46e
 3305 0dc7 2D       		.byte	0x2d
 3306 0dc8 13       		.uleb128 0x13
 3307 0dc9 3F220000 		.4byte	.LASF279
 3308 0dcd 0E       		.byte	0xe
 3309 0dce 49       		.byte	0x49
 3310 0dcf 6E040000 		.4byte	0x46e
 3311 0dd3 2E       		.byte	0x2e
 3312 0dd4 13       		.uleb128 0x13
 3313 0dd5 C61F0000 		.4byte	.LASF280
 3314 0dd9 0E       		.byte	0xe
 3315 0dda 4A       		.byte	0x4a
 3316 0ddb 6E040000 		.4byte	0x46e
 3317 0ddf 2F       		.byte	0x2f
 3318 0de0 13       		.uleb128 0x13
 3319 0de1 E0050000 		.4byte	.LASF281
 3320 0de5 0E       		.byte	0xe
 3321 0de6 4B       		.byte	0x4b
 3322 0de7 6E040000 		.4byte	0x46e
 3323 0deb 30       		.byte	0x30
 3324 0dec 13       		.uleb128 0x13
 3325 0ded 76130000 		.4byte	.LASF282
 3326 0df1 0E       		.byte	0xe
 3327 0df2 4E       		.byte	0x4e
 3328 0df3 6E040000 		.4byte	0x46e
 3329 0df7 31       		.byte	0x31
 3330 0df8 13       		.uleb128 0x13
 3331 0df9 2B1F0000 		.4byte	.LASF283
 3332 0dfd 0E       		.byte	0xe
 3333 0dfe 4F       		.byte	0x4f
 3334 0dff 6E040000 		.4byte	0x46e
 3335 0e03 32       		.byte	0x32
 3336 0e04 13       		.uleb128 0x13
 3337 0e05 E4120000 		.4byte	.LASF284
 3338 0e09 0E       		.byte	0xe
 3339 0e0a 50       		.byte	0x50
 3340 0e0b 6E040000 		.4byte	0x46e
 3341 0e0f 33       		.byte	0x33
 3342 0e10 13       		.uleb128 0x13
 3343 0e11 220E0000 		.4byte	.LASF285
 3344 0e15 0E       		.byte	0xe
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 207


 3345 0e16 51       		.byte	0x51
 3346 0e17 6E040000 		.4byte	0x46e
 3347 0e1b 34       		.byte	0x34
 3348 0e1c 13       		.uleb128 0x13
 3349 0e1d 13090000 		.4byte	.LASF286
 3350 0e21 0E       		.byte	0xe
 3351 0e22 52       		.byte	0x52
 3352 0e23 79040000 		.4byte	0x479
 3353 0e27 36       		.byte	0x36
 3354 0e28 13       		.uleb128 0x13
 3355 0e29 BB030000 		.4byte	.LASF287
 3356 0e2d 0E       		.byte	0xe
 3357 0e2e 53       		.byte	0x53
 3358 0e2f 79040000 		.4byte	0x479
 3359 0e33 38       		.byte	0x38
 3360 0e34 13       		.uleb128 0x13
 3361 0e35 22040000 		.4byte	.LASF288
 3362 0e39 0E       		.byte	0xe
 3363 0e3a 54       		.byte	0x54
 3364 0e3b 79040000 		.4byte	0x479
 3365 0e3f 3A       		.byte	0x3a
 3366 0e40 13       		.uleb128 0x13
 3367 0e41 6F030000 		.4byte	.LASF289
 3368 0e45 0E       		.byte	0xe
 3369 0e46 55       		.byte	0x55
 3370 0e47 6E040000 		.4byte	0x46e
 3371 0e4b 3C       		.byte	0x3c
 3372 0e4c 13       		.uleb128 0x13
 3373 0e4d 67050000 		.4byte	.LASF290
 3374 0e51 0E       		.byte	0xe
 3375 0e52 56       		.byte	0x56
 3376 0e53 6E040000 		.4byte	0x46e
 3377 0e57 3D       		.byte	0x3d
 3378 0e58 13       		.uleb128 0x13
 3379 0e59 1D160000 		.4byte	.LASF291
 3380 0e5d 0E       		.byte	0xe
 3381 0e5e 57       		.byte	0x57
 3382 0e5f 6E040000 		.4byte	0x46e
 3383 0e63 3E       		.byte	0x3e
 3384 0e64 13       		.uleb128 0x13
 3385 0e65 1E120000 		.4byte	.LASF292
 3386 0e69 0E       		.byte	0xe
 3387 0e6a 58       		.byte	0x58
 3388 0e6b 6E040000 		.4byte	0x46e
 3389 0e6f 3F       		.byte	0x3f
 3390 0e70 13       		.uleb128 0x13
 3391 0e71 BF020000 		.4byte	.LASF293
 3392 0e75 0E       		.byte	0xe
 3393 0e76 59       		.byte	0x59
 3394 0e77 6E040000 		.4byte	0x46e
 3395 0e7b 40       		.byte	0x40
 3396 0e7c 13       		.uleb128 0x13
 3397 0e7d FF190000 		.4byte	.LASF294
 3398 0e81 0E       		.byte	0xe
 3399 0e82 5A       		.byte	0x5a
 3400 0e83 6E040000 		.4byte	0x46e
 3401 0e87 41       		.byte	0x41
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 208


 3402 0e88 13       		.uleb128 0x13
 3403 0e89 921E0000 		.4byte	.LASF295
 3404 0e8d 0E       		.byte	0xe
 3405 0e8e 5B       		.byte	0x5b
 3406 0e8f 6E040000 		.4byte	0x46e
 3407 0e93 42       		.byte	0x42
 3408 0e94 13       		.uleb128 0x13
 3409 0e95 12100000 		.4byte	.LASF296
 3410 0e99 0E       		.byte	0xe
 3411 0e9a 5C       		.byte	0x5c
 3412 0e9b 6E040000 		.4byte	0x46e
 3413 0e9f 43       		.byte	0x43
 3414 0ea0 13       		.uleb128 0x13
 3415 0ea1 150F0000 		.4byte	.LASF297
 3416 0ea5 0E       		.byte	0xe
 3417 0ea6 5D       		.byte	0x5d
 3418 0ea7 6E040000 		.4byte	0x46e
 3419 0eab 44       		.byte	0x44
 3420 0eac 13       		.uleb128 0x13
 3421 0ead 44180000 		.4byte	.LASF298
 3422 0eb1 0E       		.byte	0xe
 3423 0eb2 5E       		.byte	0x5e
 3424 0eb3 9A040000 		.4byte	0x49a
 3425 0eb7 48       		.byte	0x48
 3426 0eb8 13       		.uleb128 0x13
 3427 0eb9 1D050000 		.4byte	.LASF299
 3428 0ebd 0E       		.byte	0xe
 3429 0ebe 5F       		.byte	0x5f
 3430 0ebf 9A040000 		.4byte	0x49a
 3431 0ec3 4C       		.byte	0x4c
 3432 0ec4 13       		.uleb128 0x13
 3433 0ec5 701E0000 		.4byte	.LASF300
 3434 0ec9 0E       		.byte	0xe
 3435 0eca 60       		.byte	0x60
 3436 0ecb 6E040000 		.4byte	0x46e
 3437 0ecf 50       		.byte	0x50
 3438 0ed0 13       		.uleb128 0x13
 3439 0ed1 9D0B0000 		.4byte	.LASF301
 3440 0ed5 0E       		.byte	0xe
 3441 0ed6 61       		.byte	0x61
 3442 0ed7 6E040000 		.4byte	0x46e
 3443 0edb 51       		.byte	0x51
 3444 0edc 13       		.uleb128 0x13
 3445 0edd 94080000 		.4byte	.LASF302
 3446 0ee1 0E       		.byte	0xe
 3447 0ee2 62       		.byte	0x62
 3448 0ee3 6E040000 		.4byte	0x46e
 3449 0ee7 52       		.byte	0x52
 3450 0ee8 13       		.uleb128 0x13
 3451 0ee9 CF070000 		.4byte	.LASF303
 3452 0eed 0E       		.byte	0xe
 3453 0eee 63       		.byte	0x63
 3454 0eef 6E040000 		.4byte	0x46e
 3455 0ef3 53       		.byte	0x53
 3456 0ef4 13       		.uleb128 0x13
 3457 0ef5 6C1D0000 		.4byte	.LASF304
 3458 0ef9 0E       		.byte	0xe
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 209


 3459 0efa 64       		.byte	0x64
 3460 0efb 6E040000 		.4byte	0x46e
 3461 0eff 54       		.byte	0x54
 3462 0f00 13       		.uleb128 0x13
 3463 0f01 E60B0000 		.4byte	.LASF305
 3464 0f05 0E       		.byte	0xe
 3465 0f06 65       		.byte	0x65
 3466 0f07 6E040000 		.4byte	0x46e
 3467 0f0b 55       		.byte	0x55
 3468 0f0c 13       		.uleb128 0x13
 3469 0f0d 00000000 		.4byte	.LASF306
 3470 0f11 0E       		.byte	0xe
 3471 0f12 66       		.byte	0x66
 3472 0f13 6E040000 		.4byte	0x46e
 3473 0f17 56       		.byte	0x56
 3474 0f18 13       		.uleb128 0x13
 3475 0f19 2A120000 		.4byte	.LASF307
 3476 0f1d 0E       		.byte	0xe
 3477 0f1e 67       		.byte	0x67
 3478 0f1f 6E040000 		.4byte	0x46e
 3479 0f23 57       		.byte	0x57
 3480 0f24 13       		.uleb128 0x13
 3481 0f25 B90A0000 		.4byte	.LASF308
 3482 0f29 0E       		.byte	0xe
 3483 0f2a 68       		.byte	0x68
 3484 0f2b 6E040000 		.4byte	0x46e
 3485 0f2f 58       		.byte	0x58
 3486 0f30 13       		.uleb128 0x13
 3487 0f31 78200000 		.4byte	.LASF309
 3488 0f35 0E       		.byte	0xe
 3489 0f36 69       		.byte	0x69
 3490 0f37 6E040000 		.4byte	0x46e
 3491 0f3b 59       		.byte	0x59
 3492 0f3c 13       		.uleb128 0x13
 3493 0f3d 9D1D0000 		.4byte	.LASF310
 3494 0f41 0E       		.byte	0xe
 3495 0f42 6E       		.byte	0x6e
 3496 0f43 84040000 		.4byte	0x484
 3497 0f47 5A       		.byte	0x5a
 3498 0f48 13       		.uleb128 0x13
 3499 0f49 38020000 		.4byte	.LASF311
 3500 0f4d 0E       		.byte	0xe
 3501 0f4e 6F       		.byte	0x6f
 3502 0f4f 84040000 		.4byte	0x484
 3503 0f53 5C       		.byte	0x5c
 3504 0f54 13       		.uleb128 0x13
 3505 0f55 F4100000 		.4byte	.LASF312
 3506 0f59 0E       		.byte	0xe
 3507 0f5a 70       		.byte	0x70
 3508 0f5b 6E040000 		.4byte	0x46e
 3509 0f5f 5E       		.byte	0x5e
 3510 0f60 13       		.uleb128 0x13
 3511 0f61 2B160000 		.4byte	.LASF313
 3512 0f65 0E       		.byte	0xe
 3513 0f66 71       		.byte	0x71
 3514 0f67 6E040000 		.4byte	0x46e
 3515 0f6b 5F       		.byte	0x5f
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 210


 3516 0f6c 13       		.uleb128 0x13
 3517 0f6d 680D0000 		.4byte	.LASF314
 3518 0f71 0E       		.byte	0xe
 3519 0f72 72       		.byte	0x72
 3520 0f73 6E040000 		.4byte	0x46e
 3521 0f77 60       		.byte	0x60
 3522 0f78 13       		.uleb128 0x13
 3523 0f79 070C0000 		.4byte	.LASF315
 3524 0f7d 0E       		.byte	0xe
 3525 0f7e 73       		.byte	0x73
 3526 0f7f 9A040000 		.4byte	0x49a
 3527 0f83 64       		.byte	0x64
 3528 0f84 13       		.uleb128 0x13
 3529 0f85 6F220000 		.4byte	.LASF316
 3530 0f89 0E       		.byte	0xe
 3531 0f8a 76       		.byte	0x76
 3532 0f8b 84040000 		.4byte	0x484
 3533 0f8f 68       		.byte	0x68
 3534 0f90 13       		.uleb128 0x13
 3535 0f91 96150000 		.4byte	.LASF317
 3536 0f95 0E       		.byte	0xe
 3537 0f96 77       		.byte	0x77
 3538 0f97 84040000 		.4byte	0x484
 3539 0f9b 6A       		.byte	0x6a
 3540 0f9c 13       		.uleb128 0x13
 3541 0f9d B4120000 		.4byte	.LASF318
 3542 0fa1 0E       		.byte	0xe
 3543 0fa2 78       		.byte	0x78
 3544 0fa3 84040000 		.4byte	0x484
 3545 0fa7 6C       		.byte	0x6c
 3546 0fa8 13       		.uleb128 0x13
 3547 0fa9 5A050000 		.4byte	.LASF319
 3548 0fad 0E       		.byte	0xe
 3549 0fae 79       		.byte	0x79
 3550 0faf 84040000 		.4byte	0x484
 3551 0fb3 6E       		.byte	0x6e
 3552 0fb4 13       		.uleb128 0x13
 3553 0fb5 1D100000 		.4byte	.LASF320
 3554 0fb9 0E       		.byte	0xe
 3555 0fba 7B       		.byte	0x7b
 3556 0fbb 6E040000 		.4byte	0x46e
 3557 0fbf 70       		.byte	0x70
 3558 0fc0 13       		.uleb128 0x13
 3559 0fc1 3B060000 		.4byte	.LASF321
 3560 0fc5 0E       		.byte	0xe
 3561 0fc6 7C       		.byte	0x7c
 3562 0fc7 6E040000 		.4byte	0x46e
 3563 0fcb 71       		.byte	0x71
 3564 0fcc 13       		.uleb128 0x13
 3565 0fcd FE040000 		.4byte	.LASF322
 3566 0fd1 0E       		.byte	0xe
 3567 0fd2 7D       		.byte	0x7d
 3568 0fd3 6E040000 		.4byte	0x46e
 3569 0fd7 72       		.byte	0x72
 3570 0fd8 13       		.uleb128 0x13
 3571 0fd9 E6020000 		.4byte	.LASF323
 3572 0fdd 0E       		.byte	0xe
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 211


 3573 0fde 7E       		.byte	0x7e
 3574 0fdf 6E040000 		.4byte	0x46e
 3575 0fe3 73       		.byte	0x73
 3576 0fe4 13       		.uleb128 0x13
 3577 0fe5 14170000 		.4byte	.LASF324
 3578 0fe9 0E       		.byte	0xe
 3579 0fea 80       		.byte	0x80
 3580 0feb 84040000 		.4byte	0x484
 3581 0fef 74       		.byte	0x74
 3582 0ff0 13       		.uleb128 0x13
 3583 0ff1 EB140000 		.4byte	.LASF325
 3584 0ff5 0E       		.byte	0xe
 3585 0ff6 81       		.byte	0x81
 3586 0ff7 84040000 		.4byte	0x484
 3587 0ffb 76       		.byte	0x76
 3588 0ffc 13       		.uleb128 0x13
 3589 0ffd C70E0000 		.4byte	.LASF326
 3590 1001 0E       		.byte	0xe
 3591 1002 82       		.byte	0x82
 3592 1003 84040000 		.4byte	0x484
 3593 1007 78       		.byte	0x78
 3594 1008 13       		.uleb128 0x13
 3595 1009 BB080000 		.4byte	.LASF327
 3596 100d 0E       		.byte	0xe
 3597 100e 83       		.byte	0x83
 3598 100f 84040000 		.4byte	0x484
 3599 1013 7A       		.byte	0x7a
 3600 1014 13       		.uleb128 0x13
 3601 1015 85100000 		.4byte	.LASF328
 3602 1019 0E       		.byte	0xe
 3603 101a 86       		.byte	0x86
 3604 101b 6E040000 		.4byte	0x46e
 3605 101f 7C       		.byte	0x7c
 3606 1020 13       		.uleb128 0x13
 3607 1021 811E0000 		.4byte	.LASF329
 3608 1025 0E       		.byte	0xe
 3609 1026 87       		.byte	0x87
 3610 1027 6E040000 		.4byte	0x46e
 3611 102b 7D       		.byte	0x7d
 3612 102c 13       		.uleb128 0x13
 3613 102d 41080000 		.4byte	.LASF330
 3614 1031 0E       		.byte	0xe
 3615 1032 88       		.byte	0x88
 3616 1033 6E040000 		.4byte	0x46e
 3617 1037 7E       		.byte	0x7e
 3618 1038 13       		.uleb128 0x13
 3619 1039 82070000 		.4byte	.LASF331
 3620 103d 0E       		.byte	0xe
 3621 103e 89       		.byte	0x89
 3622 103f 6E040000 		.4byte	0x46e
 3623 1043 7F       		.byte	0x7f
 3624 1044 13       		.uleb128 0x13
 3625 1045 D0080000 		.4byte	.LASF332
 3626 1049 0E       		.byte	0xe
 3627 104a 8A       		.byte	0x8a
 3628 104b 6E040000 		.4byte	0x46e
 3629 104f 80       		.byte	0x80
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 212


 3630 1050 13       		.uleb128 0x13
 3631 1051 22010000 		.4byte	.LASF333
 3632 1055 0E       		.byte	0xe
 3633 1056 8D       		.byte	0x8d
 3634 1057 9A040000 		.4byte	0x49a
 3635 105b 84       		.byte	0x84
 3636 105c 13       		.uleb128 0x13
 3637 105d 8F120000 		.4byte	.LASF334
 3638 1061 0E       		.byte	0xe
 3639 1062 8E       		.byte	0x8e
 3640 1063 9A040000 		.4byte	0x49a
 3641 1067 88       		.byte	0x88
 3642 1068 13       		.uleb128 0x13
 3643 1069 5B1F0000 		.4byte	.LASF335
 3644 106d 0E       		.byte	0xe
 3645 106e 8F       		.byte	0x8f
 3646 106f 9A040000 		.4byte	0x49a
 3647 1073 8C       		.byte	0x8c
 3648 1074 13       		.uleb128 0x13
 3649 1075 EF1B0000 		.4byte	.LASF336
 3650 1079 0E       		.byte	0xe
 3651 107a 90       		.byte	0x90
 3652 107b 9A040000 		.4byte	0x49a
 3653 107f 90       		.byte	0x90
 3654 1080 13       		.uleb128 0x13
 3655 1081 73190000 		.4byte	.LASF337
 3656 1085 0E       		.byte	0xe
 3657 1086 91       		.byte	0x91
 3658 1087 9A040000 		.4byte	0x49a
 3659 108b 94       		.byte	0x94
 3660 108c 13       		.uleb128 0x13
 3661 108d 50060000 		.4byte	.LASF338
 3662 1091 0E       		.byte	0xe
 3663 1092 92       		.byte	0x92
 3664 1093 9A040000 		.4byte	0x49a
 3665 1097 98       		.byte	0x98
 3666 1098 13       		.uleb128 0x13
 3667 1099 2F150000 		.4byte	.LASF339
 3668 109d 0E       		.byte	0xe
 3669 109e 93       		.byte	0x93
 3670 109f 9A040000 		.4byte	0x49a
 3671 10a3 9C       		.byte	0x9c
 3672 10a4 13       		.uleb128 0x13
 3673 10a5 4D0D0000 		.4byte	.LASF340
 3674 10a9 0E       		.byte	0xe
 3675 10aa 94       		.byte	0x94
 3676 10ab 9A040000 		.4byte	0x49a
 3677 10af A0       		.byte	0xa0
 3678 10b0 13       		.uleb128 0x13
 3679 10b1 23020000 		.4byte	.LASF341
 3680 10b5 0E       		.byte	0xe
 3681 10b6 95       		.byte	0x95
 3682 10b7 84040000 		.4byte	0x484
 3683 10bb A4       		.byte	0xa4
 3684 10bc 13       		.uleb128 0x13
 3685 10bd F5160000 		.4byte	.LASF342
 3686 10c1 0E       		.byte	0xe
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 213


 3687 10c2 96       		.byte	0x96
 3688 10c3 84040000 		.4byte	0x484
 3689 10c7 A6       		.byte	0xa6
 3690 10c8 13       		.uleb128 0x13
 3691 10c9 3B1B0000 		.4byte	.LASF343
 3692 10cd 0E       		.byte	0xe
 3693 10ce 97       		.byte	0x97
 3694 10cf 84040000 		.4byte	0x484
 3695 10d3 A8       		.byte	0xa8
 3696 10d4 13       		.uleb128 0x13
 3697 10d5 D0100000 		.4byte	.LASF344
 3698 10d9 0E       		.byte	0xe
 3699 10da 98       		.byte	0x98
 3700 10db 84040000 		.4byte	0x484
 3701 10df AA       		.byte	0xaa
 3702 10e0 13       		.uleb128 0x13
 3703 10e1 A6120000 		.4byte	.LASF345
 3704 10e5 0E       		.byte	0xe
 3705 10e6 99       		.byte	0x99
 3706 10e7 84040000 		.4byte	0x484
 3707 10eb AC       		.byte	0xac
 3708 10ec 13       		.uleb128 0x13
 3709 10ed E8130000 		.4byte	.LASF346
 3710 10f1 0E       		.byte	0xe
 3711 10f2 9A       		.byte	0x9a
 3712 10f3 84040000 		.4byte	0x484
 3713 10f7 AE       		.byte	0xae
 3714 10f8 13       		.uleb128 0x13
 3715 10f9 FB1A0000 		.4byte	.LASF347
 3716 10fd 0E       		.byte	0xe
 3717 10fe 9D       		.byte	0x9d
 3718 10ff 84040000 		.4byte	0x484
 3719 1103 B0       		.byte	0xb0
 3720 1104 13       		.uleb128 0x13
 3721 1105 9D000000 		.4byte	.LASF348
 3722 1109 0E       		.byte	0xe
 3723 110a 9E       		.byte	0x9e
 3724 110b 9A040000 		.4byte	0x49a
 3725 110f B4       		.byte	0xb4
 3726 1110 00       		.byte	0
 3727 1111 06       		.uleb128 0x6
 3728 1112 751B0000 		.4byte	.LASF349
 3729 1116 0E       		.byte	0xe
 3730 1117 9F       		.byte	0x9f
 3731 1118 000D0000 		.4byte	0xd00
 3732 111c 10       		.uleb128 0x10
 3733 111d C21C0000 		.4byte	.LASF350
 3734 1121 0F       		.byte	0xf
 3735 1122 EE01     		.2byte	0x1ee
 3736 1124 28110000 		.4byte	0x1128
 3737 1128 17       		.uleb128 0x17
 3738 1129 04       		.byte	0x4
 3739 112a 2E110000 		.4byte	0x112e
 3740 112e 18       		.uleb128 0x18
 3741 112f 10       		.uleb128 0x10
 3742 1130 CA180000 		.4byte	.LASF351
 3743 1134 0F       		.byte	0xf
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 214


 3744 1135 F601     		.2byte	0x1f6
 3745 1137 3B110000 		.4byte	0x113b
 3746 113b 05       		.uleb128 0x5
 3747 113c 01       		.byte	0x1
 3748 113d 08       		.byte	0x8
 3749 113e 6B1E0000 		.4byte	.LASF352
 3750 1142 05       		.uleb128 0x5
 3751 1143 04       		.byte	0x4
 3752 1144 04       		.byte	0x4
 3753 1145 BB070000 		.4byte	.LASF353
 3754 1149 05       		.uleb128 0x5
 3755 114a 08       		.byte	0x8
 3756 114b 04       		.byte	0x4
 3757 114c 33190000 		.4byte	.LASF354
 3758 1150 10       		.uleb128 0x10
 3759 1151 6F130000 		.4byte	.LASF355
 3760 1155 0F       		.byte	0xf
 3761 1156 EC03     		.2byte	0x3ec
 3762 1158 9A040000 		.4byte	0x49a
 3763 115c 19       		.uleb128 0x19
 3764 115d 04       		.byte	0x4
 3765 115e 67040000 		.4byte	0x467
 3766 1162 03       		.byte	0x3
 3767 1163 FE02     		.2byte	0x2fe
 3768 1165 8B110000 		.4byte	0x118b
 3769 1169 04       		.uleb128 0x4
 3770 116a 4D100000 		.4byte	.LASF356
 3771 116e 00       		.byte	0
 3772 116f 1A       		.uleb128 0x1a
 3773 1170 48120000 		.4byte	.LASF357
 3774 1174 01000600 		.4byte	0x60001
 3775 1178 1A       		.uleb128 0x1a
 3776 1179 C5140000 		.4byte	.LASF358
 3777 117d 02000600 		.4byte	0x60002
 3778 1181 1A       		.uleb128 0x1a
 3779 1182 D1180000 		.4byte	.LASF359
 3780 1186 03000600 		.4byte	0x60003
 3781 118a 00       		.byte	0
 3782 118b 10       		.uleb128 0x10
 3783 118c DC0F0000 		.4byte	.LASF360
 3784 1190 03       		.byte	0x3
 3785 1191 0303     		.2byte	0x303
 3786 1193 5C110000 		.4byte	0x115c
 3787 1197 19       		.uleb128 0x19
 3788 1198 01       		.byte	0x1
 3789 1199 0A040000 		.4byte	0x40a
 3790 119d 03       		.byte	0x3
 3791 119e 0703     		.2byte	0x307
 3792 11a0 B1110000 		.4byte	0x11b1
 3793 11a4 04       		.uleb128 0x4
 3794 11a5 51140000 		.4byte	.LASF361
 3795 11a9 00       		.byte	0
 3796 11aa 04       		.uleb128 0x4
 3797 11ab E9210000 		.4byte	.LASF362
 3798 11af 01       		.byte	0x1
 3799 11b0 00       		.byte	0
 3800 11b1 10       		.uleb128 0x10
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 215


 3801 11b2 3C050000 		.4byte	.LASF363
 3802 11b6 03       		.byte	0x3
 3803 11b7 0A03     		.2byte	0x30a
 3804 11b9 97110000 		.4byte	0x1197
 3805 11bd 19       		.uleb128 0x19
 3806 11be 01       		.byte	0x1
 3807 11bf 0A040000 		.4byte	0x40a
 3808 11c3 03       		.byte	0x3
 3809 11c4 0E03     		.2byte	0x30e
 3810 11c6 D7110000 		.4byte	0x11d7
 3811 11ca 04       		.uleb128 0x4
 3812 11cb EB0A0000 		.4byte	.LASF364
 3813 11cf 00       		.byte	0
 3814 11d0 04       		.uleb128 0x4
 3815 11d1 BD0F0000 		.4byte	.LASF365
 3816 11d5 01       		.byte	0x1
 3817 11d6 00       		.byte	0
 3818 11d7 10       		.uleb128 0x10
 3819 11d8 790F0000 		.4byte	.LASF366
 3820 11dc 03       		.byte	0x3
 3821 11dd 1103     		.2byte	0x311
 3822 11df BD110000 		.4byte	0x11bd
 3823 11e3 19       		.uleb128 0x19
 3824 11e4 01       		.byte	0x1
 3825 11e5 0A040000 		.4byte	0x40a
 3826 11e9 03       		.byte	0x3
 3827 11ea 1503     		.2byte	0x315
 3828 11ec FD110000 		.4byte	0x11fd
 3829 11f0 04       		.uleb128 0x4
 3830 11f1 1C1D0000 		.4byte	.LASF367
 3831 11f5 00       		.byte	0
 3832 11f6 04       		.uleb128 0x4
 3833 11f7 B6200000 		.4byte	.LASF368
 3834 11fb 01       		.byte	0x1
 3835 11fc 00       		.byte	0
 3836 11fd 10       		.uleb128 0x10
 3837 11fe 22030000 		.4byte	.LASF369
 3838 1202 03       		.byte	0x3
 3839 1203 1803     		.2byte	0x318
 3840 1205 E3110000 		.4byte	0x11e3
 3841 1209 19       		.uleb128 0x19
 3842 120a 01       		.byte	0x1
 3843 120b 0A040000 		.4byte	0x40a
 3844 120f 03       		.byte	0x3
 3845 1210 1C03     		.2byte	0x31c
 3846 1212 23120000 		.4byte	0x1223
 3847 1216 04       		.uleb128 0x4
 3848 1217 F01D0000 		.4byte	.LASF370
 3849 121b 00       		.byte	0
 3850 121c 04       		.uleb128 0x4
 3851 121d BA160000 		.4byte	.LASF371
 3852 1221 01       		.byte	0x1
 3853 1222 00       		.byte	0
 3854 1223 10       		.uleb128 0x10
 3855 1224 730E0000 		.4byte	.LASF372
 3856 1228 03       		.byte	0x3
 3857 1229 1F03     		.2byte	0x31f
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 216


 3858 122b 09120000 		.4byte	0x1209
 3859 122f 19       		.uleb128 0x19
 3860 1230 01       		.byte	0x1
 3861 1231 0A040000 		.4byte	0x40a
 3862 1235 03       		.byte	0x3
 3863 1236 2303     		.2byte	0x323
 3864 1238 43120000 		.4byte	0x1243
 3865 123c 04       		.uleb128 0x4
 3866 123d B6060000 		.4byte	.LASF373
 3867 1241 00       		.byte	0
 3868 1242 00       		.byte	0
 3869 1243 19       		.uleb128 0x19
 3870 1244 01       		.byte	0x1
 3871 1245 0A040000 		.4byte	0x40a
 3872 1249 03       		.byte	0x3
 3873 124a 1304     		.2byte	0x413
 3874 124c 69120000 		.4byte	0x1269
 3875 1250 04       		.uleb128 0x4
 3876 1251 EC050000 		.4byte	.LASF374
 3877 1255 00       		.byte	0
 3878 1256 04       		.uleb128 0x4
 3879 1257 C1090000 		.4byte	.LASF375
 3880 125b 01       		.byte	0x1
 3881 125c 04       		.uleb128 0x4
 3882 125d 74180000 		.4byte	.LASF376
 3883 1261 02       		.byte	0x2
 3884 1262 04       		.uleb128 0x4
 3885 1263 CC020000 		.4byte	.LASF377
 3886 1267 03       		.byte	0x3
 3887 1268 00       		.byte	0
 3888 1269 10       		.uleb128 0x10
 3889 126a D6200000 		.4byte	.LASF378
 3890 126e 03       		.byte	0x3
 3891 126f 1804     		.2byte	0x418
 3892 1271 43120000 		.4byte	0x1243
 3893 1275 19       		.uleb128 0x19
 3894 1276 01       		.byte	0x1
 3895 1277 0A040000 		.4byte	0x40a
 3896 127b 03       		.byte	0x3
 3897 127c 9404     		.2byte	0x494
 3898 127e 9B120000 		.4byte	0x129b
 3899 1282 04       		.uleb128 0x4
 3900 1283 8D1C0000 		.4byte	.LASF379
 3901 1287 00       		.byte	0
 3902 1288 04       		.uleb128 0x4
 3903 1289 330C0000 		.4byte	.LASF380
 3904 128d 01       		.byte	0x1
 3905 128e 04       		.uleb128 0x4
 3906 128f 0E110000 		.4byte	.LASF381
 3907 1293 02       		.byte	0x2
 3908 1294 04       		.uleb128 0x4
 3909 1295 57110000 		.4byte	.LASF382
 3910 1299 04       		.byte	0x4
 3911 129a 00       		.byte	0
 3912 129b 1B       		.uleb128 0x1b
 3913 129c 78       		.byte	0x78
 3914 129d 03       		.byte	0x3
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 217


 3915 129e 0205     		.2byte	0x502
 3916 12a0 68130000 		.4byte	0x1368
 3917 12a4 09       		.uleb128 0x9
 3918 12a5 EB1D0000 		.4byte	.LASF383
 3919 12a9 03       		.byte	0x3
 3920 12aa 0405     		.2byte	0x504
 3921 12ac 9A040000 		.4byte	0x49a
 3922 12b0 00       		.byte	0
 3923 12b1 09       		.uleb128 0x9
 3924 12b2 041C0000 		.4byte	.LASF384
 3925 12b6 03       		.byte	0x3
 3926 12b7 0505     		.2byte	0x505
 3927 12b9 9A040000 		.4byte	0x49a
 3928 12bd 04       		.byte	0x4
 3929 12be 09       		.uleb128 0x9
 3930 12bf 10160000 		.4byte	.LASF385
 3931 12c3 03       		.byte	0x3
 3932 12c4 0605     		.2byte	0x506
 3933 12c6 9A040000 		.4byte	0x49a
 3934 12ca 08       		.byte	0x8
 3935 12cb 09       		.uleb128 0x9
 3936 12cc 881A0000 		.4byte	.LASF386
 3937 12d0 03       		.byte	0x3
 3938 12d1 0705     		.2byte	0x507
 3939 12d3 9A040000 		.4byte	0x49a
 3940 12d7 0C       		.byte	0xc
 3941 12d8 09       		.uleb128 0x9
 3942 12d9 96090000 		.4byte	.LASF387
 3943 12dd 03       		.byte	0x3
 3944 12de 0805     		.2byte	0x508
 3945 12e0 9A040000 		.4byte	0x49a
 3946 12e4 10       		.byte	0x10
 3947 12e5 09       		.uleb128 0x9
 3948 12e6 C6100000 		.4byte	.LASF388
 3949 12ea 03       		.byte	0x3
 3950 12eb 0905     		.2byte	0x509
 3951 12ed 69120000 		.4byte	0x1269
 3952 12f1 14       		.byte	0x14
 3953 12f2 09       		.uleb128 0x9
 3954 12f3 C00E0000 		.4byte	.LASF389
 3955 12f7 03       		.byte	0x3
 3956 12f8 0A05     		.2byte	0x50a
 3957 12fa 9A040000 		.4byte	0x49a
 3958 12fe 18       		.byte	0x18
 3959 12ff 09       		.uleb128 0x9
 3960 1300 10130000 		.4byte	.LASF390
 3961 1304 03       		.byte	0x3
 3962 1305 0B05     		.2byte	0x50b
 3963 1307 68130000 		.4byte	0x1368
 3964 130b 1C       		.byte	0x1c
 3965 130c 09       		.uleb128 0x9
 3966 130d 66220000 		.4byte	.LASF391
 3967 1311 03       		.byte	0x3
 3968 1312 0C05     		.2byte	0x50c
 3969 1314 9A040000 		.4byte	0x49a
 3970 1318 5C       		.byte	0x5c
 3971 1319 09       		.uleb128 0x9
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 218


 3972 131a 30050000 		.4byte	.LASF392
 3973 131e 03       		.byte	0x3
 3974 131f 0D05     		.2byte	0x50d
 3975 1321 9A040000 		.4byte	0x49a
 3976 1325 60       		.byte	0x60
 3977 1326 09       		.uleb128 0x9
 3978 1327 A8200000 		.4byte	.LASF393
 3979 132b 03       		.byte	0x3
 3980 132c 0E05     		.2byte	0x50e
 3981 132e 9A040000 		.4byte	0x49a
 3982 1332 64       		.byte	0x64
 3983 1333 09       		.uleb128 0x9
 3984 1334 5F150000 		.4byte	.LASF394
 3985 1338 03       		.byte	0x3
 3986 1339 0F05     		.2byte	0x50f
 3987 133b 9A040000 		.4byte	0x49a
 3988 133f 68       		.byte	0x68
 3989 1340 09       		.uleb128 0x9
 3990 1341 9A100000 		.4byte	.LASF395
 3991 1345 03       		.byte	0x3
 3992 1346 1005     		.2byte	0x510
 3993 1348 9A040000 		.4byte	0x49a
 3994 134c 6C       		.byte	0x6c
 3995 134d 09       		.uleb128 0x9
 3996 134e FE1F0000 		.4byte	.LASF396
 3997 1352 03       		.byte	0x3
 3998 1353 1105     		.2byte	0x511
 3999 1355 78130000 		.4byte	0x1378
 4000 1359 70       		.byte	0x70
 4001 135a 09       		.uleb128 0x9
 4002 135b AC0D0000 		.4byte	.LASF397
 4003 135f 03       		.byte	0x3
 4004 1360 1205     		.2byte	0x512
 4005 1362 9A040000 		.4byte	0x49a
 4006 1366 74       		.byte	0x74
 4007 1367 00       		.byte	0
 4008 1368 0C       		.uleb128 0xc
 4009 1369 9A040000 		.4byte	0x49a
 4010 136d 78130000 		.4byte	0x1378
 4011 1371 0D       		.uleb128 0xd
 4012 1372 71050000 		.4byte	0x571
 4013 1376 0F       		.byte	0xf
 4014 1377 00       		.byte	0
 4015 1378 05       		.uleb128 0x5
 4016 1379 01       		.byte	0x1
 4017 137a 02       		.byte	0x2
 4018 137b D50B0000 		.4byte	.LASF398
 4019 137f 10       		.uleb128 0x10
 4020 1380 F4090000 		.4byte	.LASF399
 4021 1384 03       		.byte	0x3
 4022 1385 1305     		.2byte	0x513
 4023 1387 9B120000 		.4byte	0x129b
 4024 138b 19       		.uleb128 0x19
 4025 138c 04       		.byte	0x4
 4026 138d 67040000 		.4byte	0x467
 4027 1391 04       		.byte	0x4
 4028 1392 5C02     		.2byte	0x25c
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 219


 4029 1394 BA130000 		.4byte	0x13ba
 4030 1398 04       		.uleb128 0x4
 4031 1399 E2030000 		.4byte	.LASF400
 4032 139d 00       		.byte	0
 4033 139e 1A       		.uleb128 0x1a
 4034 139f E1160000 		.4byte	.LASF401
 4035 13a3 01004A00 		.4byte	0x4a0001
 4036 13a7 1A       		.uleb128 0x1a
 4037 13a8 65020000 		.4byte	.LASF402
 4038 13ac 02004A00 		.4byte	0x4a0002
 4039 13b0 1A       		.uleb128 0x1a
 4040 13b1 C8150000 		.4byte	.LASF403
 4041 13b5 03004A00 		.4byte	0x4a0003
 4042 13b9 00       		.byte	0
 4043 13ba 10       		.uleb128 0x10
 4044 13bb 500B0000 		.4byte	.LASF404
 4045 13bf 04       		.byte	0x4
 4046 13c0 6102     		.2byte	0x261
 4047 13c2 8B130000 		.4byte	0x138b
 4048 13c6 19       		.uleb128 0x19
 4049 13c7 01       		.byte	0x1
 4050 13c8 0A040000 		.4byte	0x40a
 4051 13cc 04       		.byte	0x4
 4052 13cd 2107     		.2byte	0x721
 4053 13cf EC130000 		.4byte	0x13ec
 4054 13d3 04       		.uleb128 0x4
 4055 13d4 9C010000 		.4byte	.LASF405
 4056 13d8 00       		.byte	0
 4057 13d9 04       		.uleb128 0x4
 4058 13da 41160000 		.4byte	.LASF406
 4059 13de 01       		.byte	0x1
 4060 13df 04       		.uleb128 0x4
 4061 13e0 D4140000 		.4byte	.LASF407
 4062 13e4 02       		.byte	0x2
 4063 13e5 04       		.uleb128 0x4
 4064 13e6 2F1D0000 		.4byte	.LASF408
 4065 13ea 03       		.byte	0x3
 4066 13eb 00       		.byte	0
 4067 13ec 10       		.uleb128 0x10
 4068 13ed B81D0000 		.4byte	.LASF409
 4069 13f1 04       		.byte	0x4
 4070 13f2 2607     		.2byte	0x726
 4071 13f4 C6130000 		.4byte	0x13c6
 4072 13f8 12       		.uleb128 0x12
 4073 13f9 14       		.byte	0x14
 4074 13fa 06       		.byte	0x6
 4075 13fb 3B       		.byte	0x3b
 4076 13fc 3D140000 		.4byte	0x143d
 4077 1400 13       		.uleb128 0x13
 4078 1401 A8030000 		.4byte	.LASF410
 4079 1405 06       		.byte	0x6
 4080 1406 3D       		.byte	0x3d
 4081 1407 9A040000 		.4byte	0x49a
 4082 140b 00       		.byte	0
 4083 140c 13       		.uleb128 0x13
 4084 140d F6070000 		.4byte	.LASF411
 4085 1411 06       		.byte	0x6
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 220


 4086 1412 3E       		.byte	0x3e
 4087 1413 9A040000 		.4byte	0x49a
 4088 1417 04       		.byte	0x4
 4089 1418 13       		.uleb128 0x13
 4090 1419 F4030000 		.4byte	.LASF412
 4091 141d 06       		.byte	0x6
 4092 141e 3F       		.byte	0x3f
 4093 141f 3D140000 		.4byte	0x143d
 4094 1423 08       		.byte	0x8
 4095 1424 13       		.uleb128 0x13
 4096 1425 BB190000 		.4byte	.LASF413
 4097 1429 06       		.byte	0x6
 4098 142a 40       		.byte	0x40
 4099 142b 9A040000 		.4byte	0x49a
 4100 142f 0C       		.byte	0xc
 4101 1430 13       		.uleb128 0x13
 4102 1431 A81D0000 		.4byte	.LASF414
 4103 1435 06       		.byte	0x6
 4104 1436 45       		.byte	0x45
 4105 1437 9A040000 		.4byte	0x49a
 4106 143b 10       		.byte	0x10
 4107 143c 00       		.byte	0
 4108 143d 17       		.uleb128 0x17
 4109 143e 04       		.byte	0x4
 4110 143f 43140000 		.4byte	0x1443
 4111 1443 11       		.uleb128 0x11
 4112 1444 7F130000 		.4byte	0x137f
 4113 1448 06       		.uleb128 0x6
 4114 1449 D70A0000 		.4byte	.LASF415
 4115 144d 06       		.byte	0x6
 4116 144e 48       		.byte	0x48
 4117 144f F8130000 		.4byte	0x13f8
 4118 1453 1B       		.uleb128 0x1b
 4119 1454 08       		.byte	0x8
 4120 1455 10       		.byte	0x10
 4121 1456 2D01     		.2byte	0x12d
 4122 1458 77140000 		.4byte	0x1477
 4123 145c 09       		.uleb128 0x9
 4124 145d 0A100000 		.4byte	.LASF416
 4125 1461 10       		.byte	0x10
 4126 1462 2E01     		.2byte	0x12e
 4127 1464 ED030000 		.4byte	0x3ed
 4128 1468 00       		.byte	0
 4129 1469 09       		.uleb128 0x9
 4130 146a A11A0000 		.4byte	.LASF417
 4131 146e 10       		.byte	0x10
 4132 146f 3201     		.2byte	0x132
 4133 1471 9A040000 		.4byte	0x49a
 4134 1475 04       		.byte	0x4
 4135 1476 00       		.byte	0
 4136 1477 10       		.uleb128 0x10
 4137 1478 27000000 		.4byte	.LASF418
 4138 147c 10       		.byte	0x10
 4139 147d 3301     		.2byte	0x133
 4140 147f 53140000 		.4byte	0x1453
 4141 1483 1C       		.uleb128 0x1c
 4142 1484 00040000 		.4byte	.LASF419
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 221


 4143 1488 02       		.byte	0x2
 4144 1489 6503     		.2byte	0x365
 4145 148b 03       		.byte	0x3
 4146 148c 1C       		.uleb128 0x1c
 4147 148d C6130000 		.4byte	.LASF420
 4148 1491 02       		.byte	0x2
 4149 1492 7003     		.2byte	0x370
 4150 1494 03       		.byte	0x3
 4151 1495 1D       		.uleb128 0x1d
 4152 1496 0F1C0000 		.4byte	.LASF421
 4153 149a 01       		.byte	0x1
 4154 149b 8D06     		.2byte	0x68d
 4155 149d 00000000 		.4byte	.LFB104
 4156 14a1 3C000000 		.4byte	.LFE104-.LFB104
 4157 14a5 01       		.uleb128 0x1
 4158 14a6 9C       		.byte	0x9c
 4159 14a7 BB140000 		.4byte	0x14bb
 4160 14ab 1E       		.uleb128 0x1e
 4161 14ac 91150000 		.4byte	.LASF423
 4162 14b0 01       		.byte	0x1
 4163 14b1 8D06     		.2byte	0x68d
 4164 14b3 ED030000 		.4byte	0x3ed
 4165 14b7 02       		.uleb128 0x2
 4166 14b8 91       		.byte	0x91
 4167 14b9 76       		.sleb128 -10
 4168 14ba 00       		.byte	0
 4169 14bb 1D       		.uleb128 0x1d
 4170 14bc 93130000 		.4byte	.LASF422
 4171 14c0 01       		.byte	0x1
 4172 14c1 B106     		.2byte	0x6b1
 4173 14c3 00000000 		.4byte	.LFB106
 4174 14c7 44000000 		.4byte	.LFE106-.LFB106
 4175 14cb 01       		.uleb128 0x1
 4176 14cc 9C       		.byte	0x9c
 4177 14cd 01150000 		.4byte	0x1501
 4178 14d1 1E       		.uleb128 0x1e
 4179 14d2 91150000 		.4byte	.LASF423
 4180 14d6 01       		.byte	0x1
 4181 14d7 B106     		.2byte	0x6b1
 4182 14d9 ED030000 		.4byte	0x3ed
 4183 14dd 02       		.uleb128 0x2
 4184 14de 91       		.byte	0x91
 4185 14df 76       		.sleb128 -10
 4186 14e0 1F       		.uleb128 0x1f
 4187 14e1 8C140000 		.4byte	0x148c
 4188 14e5 2C000000 		.4byte	.LBB6
 4189 14e9 04000000 		.4byte	.LBE6-.LBB6
 4190 14ed 01       		.byte	0x1
 4191 14ee B606     		.2byte	0x6b6
 4192 14f0 1F       		.uleb128 0x1f
 4193 14f1 83140000 		.4byte	0x1483
 4194 14f5 30000000 		.4byte	.LBB8
 4195 14f9 04000000 		.4byte	.LBE8-.LBB8
 4196 14fd 01       		.byte	0x1
 4197 14fe B706     		.2byte	0x6b7
 4198 1500 00       		.byte	0
 4199 1501 1D       		.uleb128 0x1d
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 222


 4200 1502 58170000 		.4byte	.LASF424
 4201 1506 03       		.byte	0x3
 4202 1507 9E05     		.2byte	0x59e
 4203 1509 00000000 		.4byte	.LFB166
 4204 150d 20000000 		.4byte	.LFE166-.LFB166
 4205 1511 01       		.uleb128 0x1
 4206 1512 9C       		.byte	0x9c
 4207 1513 27150000 		.4byte	0x1527
 4208 1517 1E       		.uleb128 0x1e
 4209 1518 1D010000 		.4byte	.LASF425
 4210 151c 03       		.byte	0x3
 4211 151d 9E05     		.2byte	0x59e
 4212 151f 27150000 		.4byte	0x1527
 4213 1523 02       		.uleb128 0x2
 4214 1524 91       		.byte	0x91
 4215 1525 74       		.sleb128 -12
 4216 1526 00       		.byte	0
 4217 1527 17       		.uleb128 0x17
 4218 1528 04       		.byte	0x4
 4219 1529 ED0C0000 		.4byte	0xced
 4220 152d 20       		.uleb128 0x20
 4221 152e 44110000 		.4byte	.LASF426
 4222 1532 03       		.byte	0x3
 4223 1533 DB05     		.2byte	0x5db
 4224 1535 00000000 		.4byte	.LFB168
 4225 1539 30000000 		.4byte	.LFE168-.LFB168
 4226 153d 01       		.uleb128 0x1
 4227 153e 9C       		.byte	0x9c
 4228 153f 62150000 		.4byte	0x1562
 4229 1543 1E       		.uleb128 0x1e
 4230 1544 1D010000 		.4byte	.LASF425
 4231 1548 03       		.byte	0x3
 4232 1549 DB05     		.2byte	0x5db
 4233 154b 27150000 		.4byte	0x1527
 4234 154f 02       		.uleb128 0x2
 4235 1550 91       		.byte	0x91
 4236 1551 74       		.sleb128 -12
 4237 1552 1E       		.uleb128 0x1e
 4238 1553 EF0C0000 		.4byte	.LASF427
 4239 1557 03       		.byte	0x3
 4240 1558 DB05     		.2byte	0x5db
 4241 155a 9A040000 		.4byte	0x49a
 4242 155e 02       		.uleb128 0x2
 4243 155f 91       		.byte	0x91
 4244 1560 70       		.sleb128 -16
 4245 1561 00       		.byte	0
 4246 1562 20       		.uleb128 0x20
 4247 1563 CE1D0000 		.4byte	.LASF428
 4248 1567 03       		.byte	0x3
 4249 1568 6D06     		.2byte	0x66d
 4250 156a 00000000 		.4byte	.LFB173
 4251 156e 30000000 		.4byte	.LFE173-.LFB173
 4252 1572 01       		.uleb128 0x1
 4253 1573 9C       		.byte	0x9c
 4254 1574 97150000 		.4byte	0x1597
 4255 1578 1E       		.uleb128 0x1e
 4256 1579 1D010000 		.4byte	.LASF425
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 223


 4257 157d 03       		.byte	0x3
 4258 157e 6D06     		.2byte	0x66d
 4259 1580 27150000 		.4byte	0x1527
 4260 1584 02       		.uleb128 0x2
 4261 1585 91       		.byte	0x91
 4262 1586 74       		.sleb128 -12
 4263 1587 1E       		.uleb128 0x1e
 4264 1588 66220000 		.4byte	.LASF391
 4265 158c 03       		.byte	0x3
 4266 158d 6D06     		.2byte	0x66d
 4267 158f 9A040000 		.4byte	0x49a
 4268 1593 02       		.uleb128 0x2
 4269 1594 91       		.byte	0x91
 4270 1595 70       		.sleb128 -16
 4271 1596 00       		.byte	0
 4272 1597 20       		.uleb128 0x20
 4273 1598 FC060000 		.4byte	.LASF429
 4274 159c 03       		.byte	0x3
 4275 159d 1B08     		.2byte	0x81b
 4276 159f 00000000 		.4byte	.LFB190
 4277 15a3 22000000 		.4byte	.LFE190-.LFB190
 4278 15a7 01       		.uleb128 0x1
 4279 15a8 9C       		.byte	0x9c
 4280 15a9 CC150000 		.4byte	0x15cc
 4281 15ad 1E       		.uleb128 0x1e
 4282 15ae 1D010000 		.4byte	.LASF425
 4283 15b2 03       		.byte	0x3
 4284 15b3 1B08     		.2byte	0x81b
 4285 15b5 27150000 		.4byte	0x1527
 4286 15b9 02       		.uleb128 0x2
 4287 15ba 91       		.byte	0x91
 4288 15bb 74       		.sleb128 -12
 4289 15bc 1E       		.uleb128 0x1e
 4290 15bd DD1B0000 		.4byte	.LASF430
 4291 15c1 03       		.byte	0x3
 4292 15c2 1B08     		.2byte	0x81b
 4293 15c4 FD110000 		.4byte	0x11fd
 4294 15c8 02       		.uleb128 0x2
 4295 15c9 91       		.byte	0x91
 4296 15ca 73       		.sleb128 -13
 4297 15cb 00       		.byte	0
 4298 15cc 20       		.uleb128 0x20
 4299 15cd 221B0000 		.4byte	.LASF431
 4300 15d1 03       		.byte	0x3
 4301 15d2 3608     		.2byte	0x836
 4302 15d4 00000000 		.4byte	.LFB191
 4303 15d8 22000000 		.4byte	.LFE191-.LFB191
 4304 15dc 01       		.uleb128 0x1
 4305 15dd 9C       		.byte	0x9c
 4306 15de 01160000 		.4byte	0x1601
 4307 15e2 1E       		.uleb128 0x1e
 4308 15e3 1D010000 		.4byte	.LASF425
 4309 15e7 03       		.byte	0x3
 4310 15e8 3608     		.2byte	0x836
 4311 15ea 27150000 		.4byte	0x1527
 4312 15ee 02       		.uleb128 0x2
 4313 15ef 91       		.byte	0x91
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 224


 4314 15f0 74       		.sleb128 -12
 4315 15f1 1E       		.uleb128 0x1e
 4316 15f2 EB1D0000 		.4byte	.LASF383
 4317 15f6 03       		.byte	0x3
 4318 15f7 3608     		.2byte	0x836
 4319 15f9 23120000 		.4byte	0x1223
 4320 15fd 02       		.uleb128 0x2
 4321 15fe 91       		.byte	0x91
 4322 15ff 73       		.sleb128 -13
 4323 1600 00       		.byte	0
 4324 1601 21       		.uleb128 0x21
 4325 1602 C2110000 		.4byte	.LASF435
 4326 1606 04       		.byte	0x4
 4327 1607 5207     		.2byte	0x752
 4328 1609 BA130000 		.4byte	0x13ba
 4329 160d 00000000 		.4byte	.LFB221
 4330 1611 E0000000 		.4byte	.LFE221-.LFB221
 4331 1615 01       		.uleb128 0x1
 4332 1616 9C       		.byte	0x9c
 4333 1617 58160000 		.4byte	0x1658
 4334 161b 1E       		.uleb128 0x1e
 4335 161c ED0E0000 		.4byte	.LASF432
 4336 1620 04       		.byte	0x4
 4337 1621 5207     		.2byte	0x752
 4338 1623 EC130000 		.4byte	0x13ec
 4339 1627 02       		.uleb128 0x2
 4340 1628 91       		.byte	0x91
 4341 1629 6F       		.sleb128 -17
 4342 162a 1E       		.uleb128 0x1e
 4343 162b FD020000 		.4byte	.LASF433
 4344 162f 04       		.byte	0x4
 4345 1630 5307     		.2byte	0x753
 4346 1632 9A040000 		.4byte	0x49a
 4347 1636 02       		.uleb128 0x2
 4348 1637 91       		.byte	0x91
 4349 1638 68       		.sleb128 -24
 4350 1639 1E       		.uleb128 0x1e
 4351 163a B00F0000 		.4byte	.LASF434
 4352 163e 04       		.byte	0x4
 4353 163f 5307     		.2byte	0x753
 4354 1641 9A040000 		.4byte	0x49a
 4355 1645 02       		.uleb128 0x2
 4356 1646 91       		.byte	0x91
 4357 1647 64       		.sleb128 -28
 4358 1648 22       		.uleb128 0x22
 4359 1649 1B1B0000 		.4byte	.LASF437
 4360 164d 04       		.byte	0x4
 4361 164e 5507     		.2byte	0x755
 4362 1650 BA130000 		.4byte	0x13ba
 4363 1654 02       		.uleb128 0x2
 4364 1655 91       		.byte	0x91
 4365 1656 74       		.sleb128 -12
 4366 1657 00       		.byte	0
 4367 1658 21       		.uleb128 0x21
 4368 1659 8C180000 		.4byte	.LASF436
 4369 165d 04       		.byte	0x4
 4370 165e 4908     		.2byte	0x849
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 225


 4371 1660 BA130000 		.4byte	0x13ba
 4372 1664 00000000 		.4byte	.LFB227
 4373 1668 D0000000 		.4byte	.LFE227-.LFB227
 4374 166c 01       		.uleb128 0x1
 4375 166d 9C       		.byte	0x9c
 4376 166e A0160000 		.4byte	0x16a0
 4377 1672 1E       		.uleb128 0x1e
 4378 1673 ED0E0000 		.4byte	.LASF432
 4379 1677 04       		.byte	0x4
 4380 1678 4908     		.2byte	0x849
 4381 167a EC130000 		.4byte	0x13ec
 4382 167e 02       		.uleb128 0x2
 4383 167f 91       		.byte	0x91
 4384 1680 6F       		.sleb128 -17
 4385 1681 1E       		.uleb128 0x1e
 4386 1682 FD020000 		.4byte	.LASF433
 4387 1686 04       		.byte	0x4
 4388 1687 4908     		.2byte	0x849
 4389 1689 9A040000 		.4byte	0x49a
 4390 168d 02       		.uleb128 0x2
 4391 168e 91       		.byte	0x91
 4392 168f 68       		.sleb128 -24
 4393 1690 22       		.uleb128 0x22
 4394 1691 1B1B0000 		.4byte	.LASF437
 4395 1695 04       		.byte	0x4
 4396 1696 4B08     		.2byte	0x84b
 4397 1698 BA130000 		.4byte	0x13ba
 4398 169c 02       		.uleb128 0x2
 4399 169d 91       		.byte	0x91
 4400 169e 74       		.sleb128 -12
 4401 169f 00       		.byte	0
 4402 16a0 21       		.uleb128 0x21
 4403 16a1 C3000000 		.4byte	.LASF438
 4404 16a5 04       		.byte	0x4
 4405 16a6 6F08     		.2byte	0x86f
 4406 16a8 BA130000 		.4byte	0x13ba
 4407 16ac 00000000 		.4byte	.LFB228
 4408 16b0 A0000000 		.4byte	.LFE228-.LFB228
 4409 16b4 01       		.uleb128 0x1
 4410 16b5 9C       		.byte	0x9c
 4411 16b6 E8160000 		.4byte	0x16e8
 4412 16ba 1E       		.uleb128 0x1e
 4413 16bb ED0E0000 		.4byte	.LASF432
 4414 16bf 04       		.byte	0x4
 4415 16c0 6F08     		.2byte	0x86f
 4416 16c2 EC130000 		.4byte	0x13ec
 4417 16c6 02       		.uleb128 0x2
 4418 16c7 91       		.byte	0x91
 4419 16c8 6F       		.sleb128 -17
 4420 16c9 1E       		.uleb128 0x1e
 4421 16ca FD020000 		.4byte	.LASF433
 4422 16ce 04       		.byte	0x4
 4423 16cf 6F08     		.2byte	0x86f
 4424 16d1 9A040000 		.4byte	0x49a
 4425 16d5 02       		.uleb128 0x2
 4426 16d6 91       		.byte	0x91
 4427 16d7 68       		.sleb128 -24
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 226


 4428 16d8 22       		.uleb128 0x22
 4429 16d9 1B1B0000 		.4byte	.LASF437
 4430 16dd 04       		.byte	0x4
 4431 16de 7108     		.2byte	0x871
 4432 16e0 BA130000 		.4byte	0x13ba
 4433 16e4 02       		.uleb128 0x2
 4434 16e5 91       		.byte	0x91
 4435 16e6 74       		.sleb128 -12
 4436 16e7 00       		.byte	0
 4437 16e8 23       		.uleb128 0x23
 4438 16e9 94220000 		.4byte	.LASF439
 4439 16ed 05       		.byte	0x5
 4440 16ee 3C       		.byte	0x3c
 4441 16ef 00000000 		.4byte	.LFB249
 4442 16f3 10000000 		.4byte	.LFE249-.LFB249
 4443 16f7 01       		.uleb128 0x1
 4444 16f8 9C       		.byte	0x9c
 4445 16f9 23       		.uleb128 0x23
 4446 16fa 6D010000 		.4byte	.LASF440
 4447 16fe 05       		.byte	0x5
 4448 16ff 4C       		.byte	0x4c
 4449 1700 00000000 		.4byte	.LFB250
 4450 1704 10000000 		.4byte	.LFE250-.LFB250
 4451 1708 01       		.uleb128 0x1
 4452 1709 9C       		.byte	0x9c
 4453 170a 24       		.uleb128 0x24
 4454 170b 660B0000 		.4byte	.LASF441
 4455 170f 05       		.byte	0x5
 4456 1710 62       		.byte	0x62
 4457 1711 00000000 		.4byte	.LFB251
 4458 1715 1A000000 		.4byte	.LFE251-.LFB251
 4459 1719 01       		.uleb128 0x1
 4460 171a 9C       		.byte	0x9c
 4461 171b 2E170000 		.4byte	0x172e
 4462 171f 25       		.uleb128 0x25
 4463 1720 B00F0000 		.4byte	.LASF434
 4464 1724 05       		.byte	0x5
 4465 1725 62       		.byte	0x62
 4466 1726 9A040000 		.4byte	0x49a
 4467 172a 02       		.uleb128 0x2
 4468 172b 91       		.byte	0x91
 4469 172c 74       		.sleb128 -12
 4470 172d 00       		.byte	0
 4471 172e 26       		.uleb128 0x26
 4472 172f 16020000 		.4byte	.LASF442
 4473 1733 06       		.byte	0x6
 4474 1734 9203     		.2byte	0x392
 4475 1736 00000000 		.4byte	.LFB255
 4476 173a 14000000 		.4byte	.LFE255-.LFB255
 4477 173e 01       		.uleb128 0x1
 4478 173f 9C       		.byte	0x9c
 4479 1740 26       		.uleb128 0x26
 4480 1741 510C0000 		.4byte	.LASF443
 4481 1745 06       		.byte	0x6
 4482 1746 AE03     		.2byte	0x3ae
 4483 1748 00000000 		.4byte	.LFB256
 4484 174c 14000000 		.4byte	.LFE256-.LFB256
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 227


 4485 1750 01       		.uleb128 0x1
 4486 1751 9C       		.byte	0x9c
 4487 1752 27       		.uleb128 0x27
 4488 1753 C90B0000 		.4byte	.LASF451
 4489 1757 07       		.byte	0x7
 4490 1758 41       		.byte	0x41
 4491 1759 00000000 		.4byte	.LFB274
 4492 175d 30000000 		.4byte	.LFE274-.LFB274
 4493 1761 01       		.uleb128 0x1
 4494 1762 9C       		.byte	0x9c
 4495 1763 28       		.uleb128 0x28
 4496 1764 55010000 		.4byte	.LASF445
 4497 1768 07       		.byte	0x7
 4498 1769 5E       		.byte	0x5e
 4499 176a 00000000 		.4byte	.LFB275
 4500 176e 2C000000 		.4byte	.LFE275-.LFB275
 4501 1772 01       		.uleb128 0x1
 4502 1773 9C       		.byte	0x9c
 4503 1774 87170000 		.4byte	0x1787
 4504 1778 25       		.uleb128 0x25
 4505 1779 1B130000 		.4byte	.LASF444
 4506 177d 07       		.byte	0x7
 4507 177e 5E       		.byte	0x5e
 4508 177f 1C110000 		.4byte	0x111c
 4509 1783 02       		.uleb128 0x2
 4510 1784 91       		.byte	0x91
 4511 1785 74       		.sleb128 -12
 4512 1786 00       		.byte	0
 4513 1787 28       		.uleb128 0x28
 4514 1788 02080000 		.4byte	.LASF446
 4515 178c 07       		.byte	0x7
 4516 178d 80       		.byte	0x80
 4517 178e 00000000 		.4byte	.LFB276
 4518 1792 5C000000 		.4byte	.LFE276-.LFB276
 4519 1796 01       		.uleb128 0x1
 4520 1797 9C       		.byte	0x9c
 4521 1798 B9170000 		.4byte	0x17b9
 4522 179c 25       		.uleb128 0x25
 4523 179d 97160000 		.4byte	.LASF447
 4524 17a1 07       		.byte	0x7
 4525 17a2 80       		.byte	0x80
 4526 17a3 B9170000 		.4byte	0x17b9
 4527 17a7 02       		.uleb128 0x2
 4528 17a8 91       		.byte	0x91
 4529 17a9 6C       		.sleb128 -20
 4530 17aa 29       		.uleb128 0x29
 4531 17ab F01F0000 		.4byte	.LASF448
 4532 17af 07       		.byte	0x7
 4533 17b0 82       		.byte	0x82
 4534 17b1 78130000 		.4byte	0x1378
 4535 17b5 02       		.uleb128 0x2
 4536 17b6 91       		.byte	0x91
 4537 17b7 77       		.sleb128 -9
 4538 17b8 00       		.byte	0
 4539 17b9 17       		.uleb128 0x17
 4540 17ba 04       		.byte	0x4
 4541 17bb BF170000 		.4byte	0x17bf
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 228


 4542 17bf 11       		.uleb128 0x11
 4543 17c0 48140000 		.4byte	0x1448
 4544 17c4 28       		.uleb128 0x28
 4545 17c5 CA1E0000 		.4byte	.LASF449
 4546 17c9 07       		.byte	0x7
 4547 17ca AA       		.byte	0xaa
 4548 17cb 00000000 		.4byte	.LFB277
 4549 17cf 78000000 		.4byte	.LFE277-.LFB277
 4550 17d3 01       		.uleb128 0x1
 4551 17d4 9C       		.byte	0x9c
 4552 17d5 F6170000 		.4byte	0x17f6
 4553 17d9 25       		.uleb128 0x25
 4554 17da 97160000 		.4byte	.LASF447
 4555 17de 07       		.byte	0x7
 4556 17df AA       		.byte	0xaa
 4557 17e0 9A040000 		.4byte	0x49a
 4558 17e4 02       		.uleb128 0x2
 4559 17e5 91       		.byte	0x91
 4560 17e6 74       		.sleb128 -12
 4561 17e7 25       		.uleb128 0x25
 4562 17e8 AC020000 		.4byte	.LASF450
 4563 17ec 07       		.byte	0x7
 4564 17ed AA       		.byte	0xaa
 4565 17ee 9A040000 		.4byte	0x49a
 4566 17f2 02       		.uleb128 0x2
 4567 17f3 91       		.byte	0x91
 4568 17f4 70       		.sleb128 -16
 4569 17f5 00       		.byte	0
 4570 17f6 27       		.uleb128 0x27
 4571 17f7 54040000 		.4byte	.LASF452
 4572 17fb 07       		.byte	0x7
 4573 17fc E3       		.byte	0xe3
 4574 17fd 00000000 		.4byte	.LFB278
 4575 1801 2C000000 		.4byte	.LFE278-.LFB278
 4576 1805 01       		.uleb128 0x1
 4577 1806 9C       		.byte	0x9c
 4578 1807 2A       		.uleb128 0x2a
 4579 1808 CB050000 		.4byte	.LASF453
 4580 180c 07       		.byte	0x7
 4581 180d FE       		.byte	0xfe
 4582 180e 00000000 		.4byte	.LFB279
 4583 1812 3C000000 		.4byte	.LFE279-.LFB279
 4584 1816 01       		.uleb128 0x1
 4585 1817 9C       		.byte	0x9c
 4586 1818 2B180000 		.4byte	0x182b
 4587 181c 25       		.uleb128 0x25
 4588 181d 2B050000 		.4byte	.LASF454
 4589 1821 07       		.byte	0x7
 4590 1822 FE       		.byte	0xfe
 4591 1823 B1110000 		.4byte	0x11b1
 4592 1827 02       		.uleb128 0x2
 4593 1828 91       		.byte	0x91
 4594 1829 77       		.sleb128 -9
 4595 182a 00       		.byte	0
 4596 182b 2B       		.uleb128 0x2b
 4597 182c 930E0000 		.4byte	.LASF455
 4598 1830 07       		.byte	0x7
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 229


 4599 1831 1A01     		.2byte	0x11a
 4600 1833 00000000 		.4byte	.LFB280
 4601 1837 18000000 		.4byte	.LFE280-.LFB280
 4602 183b 01       		.uleb128 0x1
 4603 183c 9C       		.byte	0x9c
 4604 183d 2B       		.uleb128 0x2b
 4605 183e 0F1E0000 		.4byte	.LASF456
 4606 1842 07       		.byte	0x7
 4607 1843 3601     		.2byte	0x136
 4608 1845 00000000 		.4byte	.LFB281
 4609 1849 18000000 		.4byte	.LFE281-.LFB281
 4610 184d 01       		.uleb128 0x1
 4611 184e 9C       		.byte	0x9c
 4612 184f 2C       		.uleb128 0x2c
 4613 1850 5E030000 		.4byte	.LASF457
 4614 1854 07       		.byte	0x7
 4615 1855 5201     		.2byte	0x152
 4616 1857 00000000 		.4byte	.LFB282
 4617 185b 2C000000 		.4byte	.LFE282-.LFB282
 4618 185f 01       		.uleb128 0x1
 4619 1860 9C       		.byte	0x9c
 4620 1861 84180000 		.4byte	0x1884
 4621 1865 1E       		.uleb128 0x1e
 4622 1866 A5130000 		.4byte	.LASF458
 4623 186a 07       		.byte	0x7
 4624 186b 5201     		.2byte	0x152
 4625 186d 9A040000 		.4byte	0x49a
 4626 1871 02       		.uleb128 0x2
 4627 1872 91       		.byte	0x91
 4628 1873 6C       		.sleb128 -20
 4629 1874 22       		.uleb128 0x22
 4630 1875 CA200000 		.4byte	.LASF459
 4631 1879 07       		.byte	0x7
 4632 187a 5401     		.2byte	0x154
 4633 187c 9A040000 		.4byte	0x49a
 4634 1880 02       		.uleb128 0x2
 4635 1881 91       		.byte	0x91
 4636 1882 74       		.sleb128 -12
 4637 1883 00       		.byte	0
 4638 1884 2C       		.uleb128 0x2c
 4639 1885 B1000000 		.4byte	.LASF460
 4640 1889 07       		.byte	0x7
 4641 188a 6901     		.2byte	0x169
 4642 188c 00000000 		.4byte	.LFB283
 4643 1890 4C000000 		.4byte	.LFE283-.LFB283
 4644 1894 01       		.uleb128 0x1
 4645 1895 9C       		.byte	0x9c
 4646 1896 B9180000 		.4byte	0x18b9
 4647 189a 1E       		.uleb128 0x1e
 4648 189b EF0C0000 		.4byte	.LASF427
 4649 189f 07       		.byte	0x7
 4650 18a0 6901     		.2byte	0x169
 4651 18a2 9A040000 		.4byte	0x49a
 4652 18a6 02       		.uleb128 0x2
 4653 18a7 91       		.byte	0x91
 4654 18a8 6C       		.sleb128 -20
 4655 18a9 22       		.uleb128 0x22
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 230


 4656 18aa BF0C0000 		.4byte	.LASF461
 4657 18ae 07       		.byte	0x7
 4658 18af 6B01     		.2byte	0x16b
 4659 18b1 50110000 		.4byte	0x1150
 4660 18b5 02       		.uleb128 0x2
 4661 18b6 91       		.byte	0x91
 4662 18b7 74       		.sleb128 -12
 4663 18b8 00       		.byte	0
 4664 18b9 2D       		.uleb128 0x2d
 4665 18ba 72090000 		.4byte	.LASF477
 4666 18be 07       		.byte	0x7
 4667 18bf 8201     		.2byte	0x182
 4668 18c1 9A040000 		.4byte	0x49a
 4669 18c5 00000000 		.4byte	.LFB284
 4670 18c9 34000000 		.4byte	.LFE284-.LFB284
 4671 18cd 01       		.uleb128 0x1
 4672 18ce 9C       		.byte	0x9c
 4673 18cf 01190000 		.4byte	0x1901
 4674 18d3 1E       		.uleb128 0x1e
 4675 18d4 591D0000 		.4byte	.LASF462
 4676 18d8 07       		.byte	0x7
 4677 18d9 8201     		.2byte	0x182
 4678 18db D7110000 		.4byte	0x11d7
 4679 18df 02       		.uleb128 0x2
 4680 18e0 91       		.byte	0x91
 4681 18e1 6F       		.sleb128 -17
 4682 18e2 22       		.uleb128 0x22
 4683 18e3 690F0000 		.4byte	.LASF463
 4684 18e7 07       		.byte	0x7
 4685 18e8 8401     		.2byte	0x184
 4686 18ea 50110000 		.4byte	0x1150
 4687 18ee 02       		.uleb128 0x2
 4688 18ef 91       		.byte	0x91
 4689 18f0 74       		.sleb128 -12
 4690 18f1 22       		.uleb128 0x22
 4691 18f2 71080000 		.4byte	.LASF464
 4692 18f6 07       		.byte	0x7
 4693 18f7 8501     		.2byte	0x185
 4694 18f9 8B110000 		.4byte	0x118b
 4695 18fd 02       		.uleb128 0x2
 4696 18fe 91       		.byte	0x91
 4697 18ff 70       		.sleb128 -16
 4698 1900 00       		.byte	0
 4699 1901 2C       		.uleb128 0x2c
 4700 1902 84020000 		.4byte	.LASF465
 4701 1906 07       		.byte	0x7
 4702 1907 9F01     		.2byte	0x19f
 4703 1909 00000000 		.4byte	.LFB285
 4704 190d 5C000000 		.4byte	.LFE285-.LFB285
 4705 1911 01       		.uleb128 0x1
 4706 1912 9C       		.byte	0x9c
 4707 1913 27190000 		.4byte	0x1927
 4708 1917 22       		.uleb128 0x22
 4709 1918 BF0B0000 		.4byte	.LASF466
 4710 191c 07       		.byte	0x7
 4711 191d A101     		.2byte	0x1a1
 4712 191f 9A040000 		.4byte	0x49a
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 231


 4713 1923 02       		.uleb128 0x2
 4714 1924 91       		.byte	0x91
 4715 1925 74       		.sleb128 -12
 4716 1926 00       		.byte	0
 4717 1927 2E       		.uleb128 0x2e
 4718 1928 EE170000 		.4byte	.LASF467
 4719 192c 01       		.byte	0x1
 4720 192d F907     		.2byte	0x7f9
 4721 192f 33190000 		.4byte	0x1933
 4722 1933 0E       		.uleb128 0xe
 4723 1934 8F040000 		.4byte	0x48f
 4724 1938 2F       		.uleb128 0x2f
 4725 1939 FC000000 		.4byte	.LASF468
 4726 193d 0E       		.byte	0xe
 4727 193e A7       		.byte	0xa7
 4728 193f 43190000 		.4byte	0x1943
 4729 1943 17       		.uleb128 0x17
 4730 1944 04       		.byte	0x4
 4731 1945 49190000 		.4byte	0x1949
 4732 1949 11       		.uleb128 0x11
 4733 194a 11110000 		.4byte	0x1111
 4734 194e 30       		.uleb128 0x30
 4735 194f 62000000 		.4byte	.LASF469
 4736 1953 07       		.byte	0x7
 4737 1954 2B       		.byte	0x2b
 4738 1955 6E040000 		.4byte	0x46e
 4739 1959 05       		.uleb128 0x5
 4740 195a 03       		.byte	0x3
 4741 195b 00000000 		.4byte	ADC_1_initVar
 4742 195f 30       		.uleb128 0x30
 4743 1960 391F0000 		.4byte	.LASF470
 4744 1964 07       		.byte	0x7
 4745 1965 2C       		.byte	0x2c
 4746 1966 6E040000 		.4byte	0x46e
 4747 196a 05       		.uleb128 0x5
 4748 196b 03       		.byte	0x3
 4749 196c 00000000 		.4byte	ADC_1_selected
 4750 1970 30       		.uleb128 0x30
 4751 1971 AA180000 		.4byte	.LASF471
 4752 1975 07       		.byte	0x7
 4753 1976 2D       		.byte	0x2d
 4754 1977 9A040000 		.4byte	0x49a
 4755 197b 05       		.uleb128 0x5
 4756 197c 03       		.byte	0x3
 4757 197d 00000000 		.4byte	ADC_1_currentConfig
 4758 1981 0C       		.uleb128 0xc
 4759 1982 BF170000 		.4byte	0x17bf
 4760 1986 91190000 		.4byte	0x1991
 4761 198a 0D       		.uleb128 0xd
 4762 198b 71050000 		.4byte	0x571
 4763 198f 00       		.byte	0
 4764 1990 00       		.byte	0
 4765 1991 2E       		.uleb128 0x2e
 4766 1992 1E150000 		.4byte	.LASF472
 4767 1996 06       		.byte	0x6
 4768 1997 6401     		.2byte	0x164
 4769 1999 9D190000 		.4byte	0x199d
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 232


 4770 199d 11       		.uleb128 0x11
 4771 199e 81190000 		.4byte	0x1981
 4772 19a2 2F       		.uleb128 0x2f
 4773 19a3 CF210000 		.4byte	.LASF473
 4774 19a7 11       		.byte	0x11
 4775 19a8 1F       		.byte	0x1f
 4776 19a9 AD190000 		.4byte	0x19ad
 4777 19ad 11       		.uleb128 0x11
 4778 19ae 77140000 		.4byte	0x1477
 4779 19b2 00       		.byte	0
 4780              		.section	.debug_abbrev,"",%progbits
 4781              	.Ldebug_abbrev0:
 4782 0000 01       		.uleb128 0x1
 4783 0001 11       		.uleb128 0x11
 4784 0002 01       		.byte	0x1
 4785 0003 25       		.uleb128 0x25
 4786 0004 0E       		.uleb128 0xe
 4787 0005 13       		.uleb128 0x13
 4788 0006 0B       		.uleb128 0xb
 4789 0007 03       		.uleb128 0x3
 4790 0008 0E       		.uleb128 0xe
 4791 0009 1B       		.uleb128 0x1b
 4792 000a 0E       		.uleb128 0xe
 4793 000b 55       		.uleb128 0x55
 4794 000c 17       		.uleb128 0x17
 4795 000d 11       		.uleb128 0x11
 4796 000e 01       		.uleb128 0x1
 4797 000f 10       		.uleb128 0x10
 4798 0010 17       		.uleb128 0x17
 4799 0011 00       		.byte	0
 4800 0012 00       		.byte	0
 4801 0013 02       		.uleb128 0x2
 4802 0014 04       		.uleb128 0x4
 4803 0015 01       		.byte	0x1
 4804 0016 0B       		.uleb128 0xb
 4805 0017 0B       		.uleb128 0xb
 4806 0018 49       		.uleb128 0x49
 4807 0019 13       		.uleb128 0x13
 4808 001a 3A       		.uleb128 0x3a
 4809 001b 0B       		.uleb128 0xb
 4810 001c 3B       		.uleb128 0x3b
 4811 001d 0B       		.uleb128 0xb
 4812 001e 01       		.uleb128 0x1
 4813 001f 13       		.uleb128 0x13
 4814 0020 00       		.byte	0
 4815 0021 00       		.byte	0
 4816 0022 03       		.uleb128 0x3
 4817 0023 28       		.uleb128 0x28
 4818 0024 00       		.byte	0
 4819 0025 03       		.uleb128 0x3
 4820 0026 0E       		.uleb128 0xe
 4821 0027 1C       		.uleb128 0x1c
 4822 0028 0D       		.uleb128 0xd
 4823 0029 00       		.byte	0
 4824 002a 00       		.byte	0
 4825 002b 04       		.uleb128 0x4
 4826 002c 28       		.uleb128 0x28
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 233


 4827 002d 00       		.byte	0
 4828 002e 03       		.uleb128 0x3
 4829 002f 0E       		.uleb128 0xe
 4830 0030 1C       		.uleb128 0x1c
 4831 0031 0B       		.uleb128 0xb
 4832 0032 00       		.byte	0
 4833 0033 00       		.byte	0
 4834 0034 05       		.uleb128 0x5
 4835 0035 24       		.uleb128 0x24
 4836 0036 00       		.byte	0
 4837 0037 0B       		.uleb128 0xb
 4838 0038 0B       		.uleb128 0xb
 4839 0039 3E       		.uleb128 0x3e
 4840 003a 0B       		.uleb128 0xb
 4841 003b 03       		.uleb128 0x3
 4842 003c 0E       		.uleb128 0xe
 4843 003d 00       		.byte	0
 4844 003e 00       		.byte	0
 4845 003f 06       		.uleb128 0x6
 4846 0040 16       		.uleb128 0x16
 4847 0041 00       		.byte	0
 4848 0042 03       		.uleb128 0x3
 4849 0043 0E       		.uleb128 0xe
 4850 0044 3A       		.uleb128 0x3a
 4851 0045 0B       		.uleb128 0xb
 4852 0046 3B       		.uleb128 0x3b
 4853 0047 0B       		.uleb128 0xb
 4854 0048 49       		.uleb128 0x49
 4855 0049 13       		.uleb128 0x13
 4856 004a 00       		.byte	0
 4857 004b 00       		.byte	0
 4858 004c 07       		.uleb128 0x7
 4859 004d 24       		.uleb128 0x24
 4860 004e 00       		.byte	0
 4861 004f 0B       		.uleb128 0xb
 4862 0050 0B       		.uleb128 0xb
 4863 0051 3E       		.uleb128 0x3e
 4864 0052 0B       		.uleb128 0xb
 4865 0053 03       		.uleb128 0x3
 4866 0054 08       		.uleb128 0x8
 4867 0055 00       		.byte	0
 4868 0056 00       		.byte	0
 4869 0057 08       		.uleb128 0x8
 4870 0058 13       		.uleb128 0x13
 4871 0059 01       		.byte	0x1
 4872 005a 0B       		.uleb128 0xb
 4873 005b 05       		.uleb128 0x5
 4874 005c 3A       		.uleb128 0x3a
 4875 005d 0B       		.uleb128 0xb
 4876 005e 3B       		.uleb128 0x3b
 4877 005f 05       		.uleb128 0x5
 4878 0060 01       		.uleb128 0x1
 4879 0061 13       		.uleb128 0x13
 4880 0062 00       		.byte	0
 4881 0063 00       		.byte	0
 4882 0064 09       		.uleb128 0x9
 4883 0065 0D       		.uleb128 0xd
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 234


 4884 0066 00       		.byte	0
 4885 0067 03       		.uleb128 0x3
 4886 0068 0E       		.uleb128 0xe
 4887 0069 3A       		.uleb128 0x3a
 4888 006a 0B       		.uleb128 0xb
 4889 006b 3B       		.uleb128 0x3b
 4890 006c 05       		.uleb128 0x5
 4891 006d 49       		.uleb128 0x49
 4892 006e 13       		.uleb128 0x13
 4893 006f 38       		.uleb128 0x38
 4894 0070 0B       		.uleb128 0xb
 4895 0071 00       		.byte	0
 4896 0072 00       		.byte	0
 4897 0073 0A       		.uleb128 0xa
 4898 0074 0D       		.uleb128 0xd
 4899 0075 00       		.byte	0
 4900 0076 03       		.uleb128 0x3
 4901 0077 0E       		.uleb128 0xe
 4902 0078 3A       		.uleb128 0x3a
 4903 0079 0B       		.uleb128 0xb
 4904 007a 3B       		.uleb128 0x3b
 4905 007b 05       		.uleb128 0x5
 4906 007c 49       		.uleb128 0x49
 4907 007d 13       		.uleb128 0x13
 4908 007e 38       		.uleb128 0x38
 4909 007f 05       		.uleb128 0x5
 4910 0080 00       		.byte	0
 4911 0081 00       		.byte	0
 4912 0082 0B       		.uleb128 0xb
 4913 0083 0D       		.uleb128 0xd
 4914 0084 00       		.byte	0
 4915 0085 03       		.uleb128 0x3
 4916 0086 08       		.uleb128 0x8
 4917 0087 3A       		.uleb128 0x3a
 4918 0088 0B       		.uleb128 0xb
 4919 0089 3B       		.uleb128 0x3b
 4920 008a 05       		.uleb128 0x5
 4921 008b 49       		.uleb128 0x49
 4922 008c 13       		.uleb128 0x13
 4923 008d 38       		.uleb128 0x38
 4924 008e 05       		.uleb128 0x5
 4925 008f 00       		.byte	0
 4926 0090 00       		.byte	0
 4927 0091 0C       		.uleb128 0xc
 4928 0092 01       		.uleb128 0x1
 4929 0093 01       		.byte	0x1
 4930 0094 49       		.uleb128 0x49
 4931 0095 13       		.uleb128 0x13
 4932 0096 01       		.uleb128 0x1
 4933 0097 13       		.uleb128 0x13
 4934 0098 00       		.byte	0
 4935 0099 00       		.byte	0
 4936 009a 0D       		.uleb128 0xd
 4937 009b 21       		.uleb128 0x21
 4938 009c 00       		.byte	0
 4939 009d 49       		.uleb128 0x49
 4940 009e 13       		.uleb128 0x13
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 235


 4941 009f 2F       		.uleb128 0x2f
 4942 00a0 0B       		.uleb128 0xb
 4943 00a1 00       		.byte	0
 4944 00a2 00       		.byte	0
 4945 00a3 0E       		.uleb128 0xe
 4946 00a4 35       		.uleb128 0x35
 4947 00a5 00       		.byte	0
 4948 00a6 49       		.uleb128 0x49
 4949 00a7 13       		.uleb128 0x13
 4950 00a8 00       		.byte	0
 4951 00a9 00       		.byte	0
 4952 00aa 0F       		.uleb128 0xf
 4953 00ab 21       		.uleb128 0x21
 4954 00ac 00       		.byte	0
 4955 00ad 49       		.uleb128 0x49
 4956 00ae 13       		.uleb128 0x13
 4957 00af 2F       		.uleb128 0x2f
 4958 00b0 05       		.uleb128 0x5
 4959 00b1 00       		.byte	0
 4960 00b2 00       		.byte	0
 4961 00b3 10       		.uleb128 0x10
 4962 00b4 16       		.uleb128 0x16
 4963 00b5 00       		.byte	0
 4964 00b6 03       		.uleb128 0x3
 4965 00b7 0E       		.uleb128 0xe
 4966 00b8 3A       		.uleb128 0x3a
 4967 00b9 0B       		.uleb128 0xb
 4968 00ba 3B       		.uleb128 0x3b
 4969 00bb 05       		.uleb128 0x5
 4970 00bc 49       		.uleb128 0x49
 4971 00bd 13       		.uleb128 0x13
 4972 00be 00       		.byte	0
 4973 00bf 00       		.byte	0
 4974 00c0 11       		.uleb128 0x11
 4975 00c1 26       		.uleb128 0x26
 4976 00c2 00       		.byte	0
 4977 00c3 49       		.uleb128 0x49
 4978 00c4 13       		.uleb128 0x13
 4979 00c5 00       		.byte	0
 4980 00c6 00       		.byte	0
 4981 00c7 12       		.uleb128 0x12
 4982 00c8 13       		.uleb128 0x13
 4983 00c9 01       		.byte	0x1
 4984 00ca 0B       		.uleb128 0xb
 4985 00cb 0B       		.uleb128 0xb
 4986 00cc 3A       		.uleb128 0x3a
 4987 00cd 0B       		.uleb128 0xb
 4988 00ce 3B       		.uleb128 0x3b
 4989 00cf 0B       		.uleb128 0xb
 4990 00d0 01       		.uleb128 0x1
 4991 00d1 13       		.uleb128 0x13
 4992 00d2 00       		.byte	0
 4993 00d3 00       		.byte	0
 4994 00d4 13       		.uleb128 0x13
 4995 00d5 0D       		.uleb128 0xd
 4996 00d6 00       		.byte	0
 4997 00d7 03       		.uleb128 0x3
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 236


 4998 00d8 0E       		.uleb128 0xe
 4999 00d9 3A       		.uleb128 0x3a
 5000 00da 0B       		.uleb128 0xb
 5001 00db 3B       		.uleb128 0x3b
 5002 00dc 0B       		.uleb128 0xb
 5003 00dd 49       		.uleb128 0x49
 5004 00de 13       		.uleb128 0x13
 5005 00df 38       		.uleb128 0x38
 5006 00e0 0B       		.uleb128 0xb
 5007 00e1 00       		.byte	0
 5008 00e2 00       		.byte	0
 5009 00e3 14       		.uleb128 0x14
 5010 00e4 13       		.uleb128 0x13
 5011 00e5 01       		.byte	0x1
 5012 00e6 0B       		.uleb128 0xb
 5013 00e7 05       		.uleb128 0x5
 5014 00e8 3A       		.uleb128 0x3a
 5015 00e9 0B       		.uleb128 0xb
 5016 00ea 3B       		.uleb128 0x3b
 5017 00eb 0B       		.uleb128 0xb
 5018 00ec 01       		.uleb128 0x1
 5019 00ed 13       		.uleb128 0x13
 5020 00ee 00       		.byte	0
 5021 00ef 00       		.byte	0
 5022 00f0 15       		.uleb128 0x15
 5023 00f1 0D       		.uleb128 0xd
 5024 00f2 00       		.byte	0
 5025 00f3 03       		.uleb128 0x3
 5026 00f4 08       		.uleb128 0x8
 5027 00f5 3A       		.uleb128 0x3a
 5028 00f6 0B       		.uleb128 0xb
 5029 00f7 3B       		.uleb128 0x3b
 5030 00f8 0B       		.uleb128 0xb
 5031 00f9 49       		.uleb128 0x49
 5032 00fa 13       		.uleb128 0x13
 5033 00fb 38       		.uleb128 0x38
 5034 00fc 0B       		.uleb128 0xb
 5035 00fd 00       		.byte	0
 5036 00fe 00       		.byte	0
 5037 00ff 16       		.uleb128 0x16
 5038 0100 0D       		.uleb128 0xd
 5039 0101 00       		.byte	0
 5040 0102 03       		.uleb128 0x3
 5041 0103 0E       		.uleb128 0xe
 5042 0104 3A       		.uleb128 0x3a
 5043 0105 0B       		.uleb128 0xb
 5044 0106 3B       		.uleb128 0x3b
 5045 0107 0B       		.uleb128 0xb
 5046 0108 49       		.uleb128 0x49
 5047 0109 13       		.uleb128 0x13
 5048 010a 38       		.uleb128 0x38
 5049 010b 05       		.uleb128 0x5
 5050 010c 00       		.byte	0
 5051 010d 00       		.byte	0
 5052 010e 17       		.uleb128 0x17
 5053 010f 0F       		.uleb128 0xf
 5054 0110 00       		.byte	0
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 237


 5055 0111 0B       		.uleb128 0xb
 5056 0112 0B       		.uleb128 0xb
 5057 0113 49       		.uleb128 0x49
 5058 0114 13       		.uleb128 0x13
 5059 0115 00       		.byte	0
 5060 0116 00       		.byte	0
 5061 0117 18       		.uleb128 0x18
 5062 0118 15       		.uleb128 0x15
 5063 0119 00       		.byte	0
 5064 011a 27       		.uleb128 0x27
 5065 011b 19       		.uleb128 0x19
 5066 011c 00       		.byte	0
 5067 011d 00       		.byte	0
 5068 011e 19       		.uleb128 0x19
 5069 011f 04       		.uleb128 0x4
 5070 0120 01       		.byte	0x1
 5071 0121 0B       		.uleb128 0xb
 5072 0122 0B       		.uleb128 0xb
 5073 0123 49       		.uleb128 0x49
 5074 0124 13       		.uleb128 0x13
 5075 0125 3A       		.uleb128 0x3a
 5076 0126 0B       		.uleb128 0xb
 5077 0127 3B       		.uleb128 0x3b
 5078 0128 05       		.uleb128 0x5
 5079 0129 01       		.uleb128 0x1
 5080 012a 13       		.uleb128 0x13
 5081 012b 00       		.byte	0
 5082 012c 00       		.byte	0
 5083 012d 1A       		.uleb128 0x1a
 5084 012e 28       		.uleb128 0x28
 5085 012f 00       		.byte	0
 5086 0130 03       		.uleb128 0x3
 5087 0131 0E       		.uleb128 0xe
 5088 0132 1C       		.uleb128 0x1c
 5089 0133 06       		.uleb128 0x6
 5090 0134 00       		.byte	0
 5091 0135 00       		.byte	0
 5092 0136 1B       		.uleb128 0x1b
 5093 0137 13       		.uleb128 0x13
 5094 0138 01       		.byte	0x1
 5095 0139 0B       		.uleb128 0xb
 5096 013a 0B       		.uleb128 0xb
 5097 013b 3A       		.uleb128 0x3a
 5098 013c 0B       		.uleb128 0xb
 5099 013d 3B       		.uleb128 0x3b
 5100 013e 05       		.uleb128 0x5
 5101 013f 01       		.uleb128 0x1
 5102 0140 13       		.uleb128 0x13
 5103 0141 00       		.byte	0
 5104 0142 00       		.byte	0
 5105 0143 1C       		.uleb128 0x1c
 5106 0144 2E       		.uleb128 0x2e
 5107 0145 00       		.byte	0
 5108 0146 03       		.uleb128 0x3
 5109 0147 0E       		.uleb128 0xe
 5110 0148 3A       		.uleb128 0x3a
 5111 0149 0B       		.uleb128 0xb
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 238


 5112 014a 3B       		.uleb128 0x3b
 5113 014b 05       		.uleb128 0x5
 5114 014c 27       		.uleb128 0x27
 5115 014d 19       		.uleb128 0x19
 5116 014e 20       		.uleb128 0x20
 5117 014f 0B       		.uleb128 0xb
 5118 0150 00       		.byte	0
 5119 0151 00       		.byte	0
 5120 0152 1D       		.uleb128 0x1d
 5121 0153 2E       		.uleb128 0x2e
 5122 0154 01       		.byte	0x1
 5123 0155 03       		.uleb128 0x3
 5124 0156 0E       		.uleb128 0xe
 5125 0157 3A       		.uleb128 0x3a
 5126 0158 0B       		.uleb128 0xb
 5127 0159 3B       		.uleb128 0x3b
 5128 015a 05       		.uleb128 0x5
 5129 015b 27       		.uleb128 0x27
 5130 015c 19       		.uleb128 0x19
 5131 015d 11       		.uleb128 0x11
 5132 015e 01       		.uleb128 0x1
 5133 015f 12       		.uleb128 0x12
 5134 0160 06       		.uleb128 0x6
 5135 0161 40       		.uleb128 0x40
 5136 0162 18       		.uleb128 0x18
 5137 0163 9742     		.uleb128 0x2117
 5138 0165 19       		.uleb128 0x19
 5139 0166 01       		.uleb128 0x1
 5140 0167 13       		.uleb128 0x13
 5141 0168 00       		.byte	0
 5142 0169 00       		.byte	0
 5143 016a 1E       		.uleb128 0x1e
 5144 016b 05       		.uleb128 0x5
 5145 016c 00       		.byte	0
 5146 016d 03       		.uleb128 0x3
 5147 016e 0E       		.uleb128 0xe
 5148 016f 3A       		.uleb128 0x3a
 5149 0170 0B       		.uleb128 0xb
 5150 0171 3B       		.uleb128 0x3b
 5151 0172 05       		.uleb128 0x5
 5152 0173 49       		.uleb128 0x49
 5153 0174 13       		.uleb128 0x13
 5154 0175 02       		.uleb128 0x2
 5155 0176 18       		.uleb128 0x18
 5156 0177 00       		.byte	0
 5157 0178 00       		.byte	0
 5158 0179 1F       		.uleb128 0x1f
 5159 017a 1D       		.uleb128 0x1d
 5160 017b 00       		.byte	0
 5161 017c 31       		.uleb128 0x31
 5162 017d 13       		.uleb128 0x13
 5163 017e 11       		.uleb128 0x11
 5164 017f 01       		.uleb128 0x1
 5165 0180 12       		.uleb128 0x12
 5166 0181 06       		.uleb128 0x6
 5167 0182 58       		.uleb128 0x58
 5168 0183 0B       		.uleb128 0xb
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 239


 5169 0184 59       		.uleb128 0x59
 5170 0185 05       		.uleb128 0x5
 5171 0186 00       		.byte	0
 5172 0187 00       		.byte	0
 5173 0188 20       		.uleb128 0x20
 5174 0189 2E       		.uleb128 0x2e
 5175 018a 01       		.byte	0x1
 5176 018b 03       		.uleb128 0x3
 5177 018c 0E       		.uleb128 0xe
 5178 018d 3A       		.uleb128 0x3a
 5179 018e 0B       		.uleb128 0xb
 5180 018f 3B       		.uleb128 0x3b
 5181 0190 05       		.uleb128 0x5
 5182 0191 27       		.uleb128 0x27
 5183 0192 19       		.uleb128 0x19
 5184 0193 11       		.uleb128 0x11
 5185 0194 01       		.uleb128 0x1
 5186 0195 12       		.uleb128 0x12
 5187 0196 06       		.uleb128 0x6
 5188 0197 40       		.uleb128 0x40
 5189 0198 18       		.uleb128 0x18
 5190 0199 9642     		.uleb128 0x2116
 5191 019b 19       		.uleb128 0x19
 5192 019c 01       		.uleb128 0x1
 5193 019d 13       		.uleb128 0x13
 5194 019e 00       		.byte	0
 5195 019f 00       		.byte	0
 5196 01a0 21       		.uleb128 0x21
 5197 01a1 2E       		.uleb128 0x2e
 5198 01a2 01       		.byte	0x1
 5199 01a3 03       		.uleb128 0x3
 5200 01a4 0E       		.uleb128 0xe
 5201 01a5 3A       		.uleb128 0x3a
 5202 01a6 0B       		.uleb128 0xb
 5203 01a7 3B       		.uleb128 0x3b
 5204 01a8 05       		.uleb128 0x5
 5205 01a9 27       		.uleb128 0x27
 5206 01aa 19       		.uleb128 0x19
 5207 01ab 49       		.uleb128 0x49
 5208 01ac 13       		.uleb128 0x13
 5209 01ad 11       		.uleb128 0x11
 5210 01ae 01       		.uleb128 0x1
 5211 01af 12       		.uleb128 0x12
 5212 01b0 06       		.uleb128 0x6
 5213 01b1 40       		.uleb128 0x40
 5214 01b2 18       		.uleb128 0x18
 5215 01b3 9742     		.uleb128 0x2117
 5216 01b5 19       		.uleb128 0x19
 5217 01b6 01       		.uleb128 0x1
 5218 01b7 13       		.uleb128 0x13
 5219 01b8 00       		.byte	0
 5220 01b9 00       		.byte	0
 5221 01ba 22       		.uleb128 0x22
 5222 01bb 34       		.uleb128 0x34
 5223 01bc 00       		.byte	0
 5224 01bd 03       		.uleb128 0x3
 5225 01be 0E       		.uleb128 0xe
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 240


 5226 01bf 3A       		.uleb128 0x3a
 5227 01c0 0B       		.uleb128 0xb
 5228 01c1 3B       		.uleb128 0x3b
 5229 01c2 05       		.uleb128 0x5
 5230 01c3 49       		.uleb128 0x49
 5231 01c4 13       		.uleb128 0x13
 5232 01c5 02       		.uleb128 0x2
 5233 01c6 18       		.uleb128 0x18
 5234 01c7 00       		.byte	0
 5235 01c8 00       		.byte	0
 5236 01c9 23       		.uleb128 0x23
 5237 01ca 2E       		.uleb128 0x2e
 5238 01cb 00       		.byte	0
 5239 01cc 03       		.uleb128 0x3
 5240 01cd 0E       		.uleb128 0xe
 5241 01ce 3A       		.uleb128 0x3a
 5242 01cf 0B       		.uleb128 0xb
 5243 01d0 3B       		.uleb128 0x3b
 5244 01d1 0B       		.uleb128 0xb
 5245 01d2 27       		.uleb128 0x27
 5246 01d3 19       		.uleb128 0x19
 5247 01d4 11       		.uleb128 0x11
 5248 01d5 01       		.uleb128 0x1
 5249 01d6 12       		.uleb128 0x12
 5250 01d7 06       		.uleb128 0x6
 5251 01d8 40       		.uleb128 0x40
 5252 01d9 18       		.uleb128 0x18
 5253 01da 9642     		.uleb128 0x2116
 5254 01dc 19       		.uleb128 0x19
 5255 01dd 00       		.byte	0
 5256 01de 00       		.byte	0
 5257 01df 24       		.uleb128 0x24
 5258 01e0 2E       		.uleb128 0x2e
 5259 01e1 01       		.byte	0x1
 5260 01e2 03       		.uleb128 0x3
 5261 01e3 0E       		.uleb128 0xe
 5262 01e4 3A       		.uleb128 0x3a
 5263 01e5 0B       		.uleb128 0xb
 5264 01e6 3B       		.uleb128 0x3b
 5265 01e7 0B       		.uleb128 0xb
 5266 01e8 27       		.uleb128 0x27
 5267 01e9 19       		.uleb128 0x19
 5268 01ea 11       		.uleb128 0x11
 5269 01eb 01       		.uleb128 0x1
 5270 01ec 12       		.uleb128 0x12
 5271 01ed 06       		.uleb128 0x6
 5272 01ee 40       		.uleb128 0x40
 5273 01ef 18       		.uleb128 0x18
 5274 01f0 9642     		.uleb128 0x2116
 5275 01f2 19       		.uleb128 0x19
 5276 01f3 01       		.uleb128 0x1
 5277 01f4 13       		.uleb128 0x13
 5278 01f5 00       		.byte	0
 5279 01f6 00       		.byte	0
 5280 01f7 25       		.uleb128 0x25
 5281 01f8 05       		.uleb128 0x5
 5282 01f9 00       		.byte	0
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 241


 5283 01fa 03       		.uleb128 0x3
 5284 01fb 0E       		.uleb128 0xe
 5285 01fc 3A       		.uleb128 0x3a
 5286 01fd 0B       		.uleb128 0xb
 5287 01fe 3B       		.uleb128 0x3b
 5288 01ff 0B       		.uleb128 0xb
 5289 0200 49       		.uleb128 0x49
 5290 0201 13       		.uleb128 0x13
 5291 0202 02       		.uleb128 0x2
 5292 0203 18       		.uleb128 0x18
 5293 0204 00       		.byte	0
 5294 0205 00       		.byte	0
 5295 0206 26       		.uleb128 0x26
 5296 0207 2E       		.uleb128 0x2e
 5297 0208 00       		.byte	0
 5298 0209 03       		.uleb128 0x3
 5299 020a 0E       		.uleb128 0xe
 5300 020b 3A       		.uleb128 0x3a
 5301 020c 0B       		.uleb128 0xb
 5302 020d 3B       		.uleb128 0x3b
 5303 020e 05       		.uleb128 0x5
 5304 020f 27       		.uleb128 0x27
 5305 0210 19       		.uleb128 0x19
 5306 0211 11       		.uleb128 0x11
 5307 0212 01       		.uleb128 0x1
 5308 0213 12       		.uleb128 0x12
 5309 0214 06       		.uleb128 0x6
 5310 0215 40       		.uleb128 0x40
 5311 0216 18       		.uleb128 0x18
 5312 0217 9642     		.uleb128 0x2116
 5313 0219 19       		.uleb128 0x19
 5314 021a 00       		.byte	0
 5315 021b 00       		.byte	0
 5316 021c 27       		.uleb128 0x27
 5317 021d 2E       		.uleb128 0x2e
 5318 021e 00       		.byte	0
 5319 021f 3F       		.uleb128 0x3f
 5320 0220 19       		.uleb128 0x19
 5321 0221 03       		.uleb128 0x3
 5322 0222 0E       		.uleb128 0xe
 5323 0223 3A       		.uleb128 0x3a
 5324 0224 0B       		.uleb128 0xb
 5325 0225 3B       		.uleb128 0x3b
 5326 0226 0B       		.uleb128 0xb
 5327 0227 27       		.uleb128 0x27
 5328 0228 19       		.uleb128 0x19
 5329 0229 11       		.uleb128 0x11
 5330 022a 01       		.uleb128 0x1
 5331 022b 12       		.uleb128 0x12
 5332 022c 06       		.uleb128 0x6
 5333 022d 40       		.uleb128 0x40
 5334 022e 18       		.uleb128 0x18
 5335 022f 9642     		.uleb128 0x2116
 5336 0231 19       		.uleb128 0x19
 5337 0232 00       		.byte	0
 5338 0233 00       		.byte	0
 5339 0234 28       		.uleb128 0x28
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 242


 5340 0235 2E       		.uleb128 0x2e
 5341 0236 01       		.byte	0x1
 5342 0237 3F       		.uleb128 0x3f
 5343 0238 19       		.uleb128 0x19
 5344 0239 03       		.uleb128 0x3
 5345 023a 0E       		.uleb128 0xe
 5346 023b 3A       		.uleb128 0x3a
 5347 023c 0B       		.uleb128 0xb
 5348 023d 3B       		.uleb128 0x3b
 5349 023e 0B       		.uleb128 0xb
 5350 023f 27       		.uleb128 0x27
 5351 0240 19       		.uleb128 0x19
 5352 0241 11       		.uleb128 0x11
 5353 0242 01       		.uleb128 0x1
 5354 0243 12       		.uleb128 0x12
 5355 0244 06       		.uleb128 0x6
 5356 0245 40       		.uleb128 0x40
 5357 0246 18       		.uleb128 0x18
 5358 0247 9642     		.uleb128 0x2116
 5359 0249 19       		.uleb128 0x19
 5360 024a 01       		.uleb128 0x1
 5361 024b 13       		.uleb128 0x13
 5362 024c 00       		.byte	0
 5363 024d 00       		.byte	0
 5364 024e 29       		.uleb128 0x29
 5365 024f 34       		.uleb128 0x34
 5366 0250 00       		.byte	0
 5367 0251 03       		.uleb128 0x3
 5368 0252 0E       		.uleb128 0xe
 5369 0253 3A       		.uleb128 0x3a
 5370 0254 0B       		.uleb128 0xb
 5371 0255 3B       		.uleb128 0x3b
 5372 0256 0B       		.uleb128 0xb
 5373 0257 49       		.uleb128 0x49
 5374 0258 13       		.uleb128 0x13
 5375 0259 02       		.uleb128 0x2
 5376 025a 18       		.uleb128 0x18
 5377 025b 00       		.byte	0
 5378 025c 00       		.byte	0
 5379 025d 2A       		.uleb128 0x2a
 5380 025e 2E       		.uleb128 0x2e
 5381 025f 01       		.byte	0x1
 5382 0260 3F       		.uleb128 0x3f
 5383 0261 19       		.uleb128 0x19
 5384 0262 03       		.uleb128 0x3
 5385 0263 0E       		.uleb128 0xe
 5386 0264 3A       		.uleb128 0x3a
 5387 0265 0B       		.uleb128 0xb
 5388 0266 3B       		.uleb128 0x3b
 5389 0267 0B       		.uleb128 0xb
 5390 0268 27       		.uleb128 0x27
 5391 0269 19       		.uleb128 0x19
 5392 026a 11       		.uleb128 0x11
 5393 026b 01       		.uleb128 0x1
 5394 026c 12       		.uleb128 0x12
 5395 026d 06       		.uleb128 0x6
 5396 026e 40       		.uleb128 0x40
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 243


 5397 026f 18       		.uleb128 0x18
 5398 0270 9742     		.uleb128 0x2117
 5399 0272 19       		.uleb128 0x19
 5400 0273 01       		.uleb128 0x1
 5401 0274 13       		.uleb128 0x13
 5402 0275 00       		.byte	0
 5403 0276 00       		.byte	0
 5404 0277 2B       		.uleb128 0x2b
 5405 0278 2E       		.uleb128 0x2e
 5406 0279 00       		.byte	0
 5407 027a 3F       		.uleb128 0x3f
 5408 027b 19       		.uleb128 0x19
 5409 027c 03       		.uleb128 0x3
 5410 027d 0E       		.uleb128 0xe
 5411 027e 3A       		.uleb128 0x3a
 5412 027f 0B       		.uleb128 0xb
 5413 0280 3B       		.uleb128 0x3b
 5414 0281 05       		.uleb128 0x5
 5415 0282 27       		.uleb128 0x27
 5416 0283 19       		.uleb128 0x19
 5417 0284 11       		.uleb128 0x11
 5418 0285 01       		.uleb128 0x1
 5419 0286 12       		.uleb128 0x12
 5420 0287 06       		.uleb128 0x6
 5421 0288 40       		.uleb128 0x40
 5422 0289 18       		.uleb128 0x18
 5423 028a 9642     		.uleb128 0x2116
 5424 028c 19       		.uleb128 0x19
 5425 028d 00       		.byte	0
 5426 028e 00       		.byte	0
 5427 028f 2C       		.uleb128 0x2c
 5428 0290 2E       		.uleb128 0x2e
 5429 0291 01       		.byte	0x1
 5430 0292 3F       		.uleb128 0x3f
 5431 0293 19       		.uleb128 0x19
 5432 0294 03       		.uleb128 0x3
 5433 0295 0E       		.uleb128 0xe
 5434 0296 3A       		.uleb128 0x3a
 5435 0297 0B       		.uleb128 0xb
 5436 0298 3B       		.uleb128 0x3b
 5437 0299 05       		.uleb128 0x5
 5438 029a 27       		.uleb128 0x27
 5439 029b 19       		.uleb128 0x19
 5440 029c 11       		.uleb128 0x11
 5441 029d 01       		.uleb128 0x1
 5442 029e 12       		.uleb128 0x12
 5443 029f 06       		.uleb128 0x6
 5444 02a0 40       		.uleb128 0x40
 5445 02a1 18       		.uleb128 0x18
 5446 02a2 9642     		.uleb128 0x2116
 5447 02a4 19       		.uleb128 0x19
 5448 02a5 01       		.uleb128 0x1
 5449 02a6 13       		.uleb128 0x13
 5450 02a7 00       		.byte	0
 5451 02a8 00       		.byte	0
 5452 02a9 2D       		.uleb128 0x2d
 5453 02aa 2E       		.uleb128 0x2e
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 244


 5454 02ab 01       		.byte	0x1
 5455 02ac 3F       		.uleb128 0x3f
 5456 02ad 19       		.uleb128 0x19
 5457 02ae 03       		.uleb128 0x3
 5458 02af 0E       		.uleb128 0xe
 5459 02b0 3A       		.uleb128 0x3a
 5460 02b1 0B       		.uleb128 0xb
 5461 02b2 3B       		.uleb128 0x3b
 5462 02b3 05       		.uleb128 0x5
 5463 02b4 27       		.uleb128 0x27
 5464 02b5 19       		.uleb128 0x19
 5465 02b6 49       		.uleb128 0x49
 5466 02b7 13       		.uleb128 0x13
 5467 02b8 11       		.uleb128 0x11
 5468 02b9 01       		.uleb128 0x1
 5469 02ba 12       		.uleb128 0x12
 5470 02bb 06       		.uleb128 0x6
 5471 02bc 40       		.uleb128 0x40
 5472 02bd 18       		.uleb128 0x18
 5473 02be 9642     		.uleb128 0x2116
 5474 02c0 19       		.uleb128 0x19
 5475 02c1 01       		.uleb128 0x1
 5476 02c2 13       		.uleb128 0x13
 5477 02c3 00       		.byte	0
 5478 02c4 00       		.byte	0
 5479 02c5 2E       		.uleb128 0x2e
 5480 02c6 34       		.uleb128 0x34
 5481 02c7 00       		.byte	0
 5482 02c8 03       		.uleb128 0x3
 5483 02c9 0E       		.uleb128 0xe
 5484 02ca 3A       		.uleb128 0x3a
 5485 02cb 0B       		.uleb128 0xb
 5486 02cc 3B       		.uleb128 0x3b
 5487 02cd 05       		.uleb128 0x5
 5488 02ce 49       		.uleb128 0x49
 5489 02cf 13       		.uleb128 0x13
 5490 02d0 3F       		.uleb128 0x3f
 5491 02d1 19       		.uleb128 0x19
 5492 02d2 3C       		.uleb128 0x3c
 5493 02d3 19       		.uleb128 0x19
 5494 02d4 00       		.byte	0
 5495 02d5 00       		.byte	0
 5496 02d6 2F       		.uleb128 0x2f
 5497 02d7 34       		.uleb128 0x34
 5498 02d8 00       		.byte	0
 5499 02d9 03       		.uleb128 0x3
 5500 02da 0E       		.uleb128 0xe
 5501 02db 3A       		.uleb128 0x3a
 5502 02dc 0B       		.uleb128 0xb
 5503 02dd 3B       		.uleb128 0x3b
 5504 02de 0B       		.uleb128 0xb
 5505 02df 49       		.uleb128 0x49
 5506 02e0 13       		.uleb128 0x13
 5507 02e1 3F       		.uleb128 0x3f
 5508 02e2 19       		.uleb128 0x19
 5509 02e3 3C       		.uleb128 0x3c
 5510 02e4 19       		.uleb128 0x19
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 245


 5511 02e5 00       		.byte	0
 5512 02e6 00       		.byte	0
 5513 02e7 30       		.uleb128 0x30
 5514 02e8 34       		.uleb128 0x34
 5515 02e9 00       		.byte	0
 5516 02ea 03       		.uleb128 0x3
 5517 02eb 0E       		.uleb128 0xe
 5518 02ec 3A       		.uleb128 0x3a
 5519 02ed 0B       		.uleb128 0xb
 5520 02ee 3B       		.uleb128 0x3b
 5521 02ef 0B       		.uleb128 0xb
 5522 02f0 49       		.uleb128 0x49
 5523 02f1 13       		.uleb128 0x13
 5524 02f2 3F       		.uleb128 0x3f
 5525 02f3 19       		.uleb128 0x19
 5526 02f4 02       		.uleb128 0x2
 5527 02f5 18       		.uleb128 0x18
 5528 02f6 00       		.byte	0
 5529 02f7 00       		.byte	0
 5530 02f8 00       		.byte	0
 5531              		.section	.debug_aranges,"",%progbits
 5532 0000 EC000000 		.4byte	0xec
 5533 0004 0200     		.2byte	0x2
 5534 0006 00000000 		.4byte	.Ldebug_info0
 5535 000a 04       		.byte	0x4
 5536 000b 00       		.byte	0
 5537 000c 0000     		.2byte	0
 5538 000e 0000     		.2byte	0
 5539 0010 00000000 		.4byte	.LFB104
 5540 0014 3C000000 		.4byte	.LFE104-.LFB104
 5541 0018 00000000 		.4byte	.LFB106
 5542 001c 44000000 		.4byte	.LFE106-.LFB106
 5543 0020 00000000 		.4byte	.LFB166
 5544 0024 20000000 		.4byte	.LFE166-.LFB166
 5545 0028 00000000 		.4byte	.LFB168
 5546 002c 30000000 		.4byte	.LFE168-.LFB168
 5547 0030 00000000 		.4byte	.LFB173
 5548 0034 30000000 		.4byte	.LFE173-.LFB173
 5549 0038 00000000 		.4byte	.LFB190
 5550 003c 22000000 		.4byte	.LFE190-.LFB190
 5551 0040 00000000 		.4byte	.LFB191
 5552 0044 22000000 		.4byte	.LFE191-.LFB191
 5553 0048 00000000 		.4byte	.LFB221
 5554 004c E0000000 		.4byte	.LFE221-.LFB221
 5555 0050 00000000 		.4byte	.LFB227
 5556 0054 D0000000 		.4byte	.LFE227-.LFB227
 5557 0058 00000000 		.4byte	.LFB228
 5558 005c A0000000 		.4byte	.LFE228-.LFB228
 5559 0060 00000000 		.4byte	.LFB249
 5560 0064 10000000 		.4byte	.LFE249-.LFB249
 5561 0068 00000000 		.4byte	.LFB250
 5562 006c 10000000 		.4byte	.LFE250-.LFB250
 5563 0070 00000000 		.4byte	.LFB251
 5564 0074 1A000000 		.4byte	.LFE251-.LFB251
 5565 0078 00000000 		.4byte	.LFB255
 5566 007c 14000000 		.4byte	.LFE255-.LFB255
 5567 0080 00000000 		.4byte	.LFB256
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 246


 5568 0084 14000000 		.4byte	.LFE256-.LFB256
 5569 0088 00000000 		.4byte	.LFB274
 5570 008c 30000000 		.4byte	.LFE274-.LFB274
 5571 0090 00000000 		.4byte	.LFB275
 5572 0094 2C000000 		.4byte	.LFE275-.LFB275
 5573 0098 00000000 		.4byte	.LFB276
 5574 009c 5C000000 		.4byte	.LFE276-.LFB276
 5575 00a0 00000000 		.4byte	.LFB277
 5576 00a4 78000000 		.4byte	.LFE277-.LFB277
 5577 00a8 00000000 		.4byte	.LFB278
 5578 00ac 2C000000 		.4byte	.LFE278-.LFB278
 5579 00b0 00000000 		.4byte	.LFB279
 5580 00b4 3C000000 		.4byte	.LFE279-.LFB279
 5581 00b8 00000000 		.4byte	.LFB280
 5582 00bc 18000000 		.4byte	.LFE280-.LFB280
 5583 00c0 00000000 		.4byte	.LFB281
 5584 00c4 18000000 		.4byte	.LFE281-.LFB281
 5585 00c8 00000000 		.4byte	.LFB282
 5586 00cc 2C000000 		.4byte	.LFE282-.LFB282
 5587 00d0 00000000 		.4byte	.LFB283
 5588 00d4 4C000000 		.4byte	.LFE283-.LFB283
 5589 00d8 00000000 		.4byte	.LFB284
 5590 00dc 34000000 		.4byte	.LFE284-.LFB284
 5591 00e0 00000000 		.4byte	.LFB285
 5592 00e4 5C000000 		.4byte	.LFE285-.LFB285
 5593 00e8 00000000 		.4byte	0
 5594 00ec 00000000 		.4byte	0
 5595              		.section	.debug_ranges,"",%progbits
 5596              	.Ldebug_ranges0:
 5597 0000 00000000 		.4byte	.LFB104
 5598 0004 3C000000 		.4byte	.LFE104
 5599 0008 00000000 		.4byte	.LFB106
 5600 000c 44000000 		.4byte	.LFE106
 5601 0010 00000000 		.4byte	.LFB166
 5602 0014 20000000 		.4byte	.LFE166
 5603 0018 00000000 		.4byte	.LFB168
 5604 001c 30000000 		.4byte	.LFE168
 5605 0020 00000000 		.4byte	.LFB173
 5606 0024 30000000 		.4byte	.LFE173
 5607 0028 00000000 		.4byte	.LFB190
 5608 002c 22000000 		.4byte	.LFE190
 5609 0030 00000000 		.4byte	.LFB191
 5610 0034 22000000 		.4byte	.LFE191
 5611 0038 00000000 		.4byte	.LFB221
 5612 003c E0000000 		.4byte	.LFE221
 5613 0040 00000000 		.4byte	.LFB227
 5614 0044 D0000000 		.4byte	.LFE227
 5615 0048 00000000 		.4byte	.LFB228
 5616 004c A0000000 		.4byte	.LFE228
 5617 0050 00000000 		.4byte	.LFB249
 5618 0054 10000000 		.4byte	.LFE249
 5619 0058 00000000 		.4byte	.LFB250
 5620 005c 10000000 		.4byte	.LFE250
 5621 0060 00000000 		.4byte	.LFB251
 5622 0064 1A000000 		.4byte	.LFE251
 5623 0068 00000000 		.4byte	.LFB255
 5624 006c 14000000 		.4byte	.LFE255
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 247


 5625 0070 00000000 		.4byte	.LFB256
 5626 0074 14000000 		.4byte	.LFE256
 5627 0078 00000000 		.4byte	.LFB274
 5628 007c 30000000 		.4byte	.LFE274
 5629 0080 00000000 		.4byte	.LFB275
 5630 0084 2C000000 		.4byte	.LFE275
 5631 0088 00000000 		.4byte	.LFB276
 5632 008c 5C000000 		.4byte	.LFE276
 5633 0090 00000000 		.4byte	.LFB277
 5634 0094 78000000 		.4byte	.LFE277
 5635 0098 00000000 		.4byte	.LFB278
 5636 009c 2C000000 		.4byte	.LFE278
 5637 00a0 00000000 		.4byte	.LFB279
 5638 00a4 3C000000 		.4byte	.LFE279
 5639 00a8 00000000 		.4byte	.LFB280
 5640 00ac 18000000 		.4byte	.LFE280
 5641 00b0 00000000 		.4byte	.LFB281
 5642 00b4 18000000 		.4byte	.LFE281
 5643 00b8 00000000 		.4byte	.LFB282
 5644 00bc 2C000000 		.4byte	.LFE282
 5645 00c0 00000000 		.4byte	.LFB283
 5646 00c4 4C000000 		.4byte	.LFE283
 5647 00c8 00000000 		.4byte	.LFB284
 5648 00cc 34000000 		.4byte	.LFE284
 5649 00d0 00000000 		.4byte	.LFB285
 5650 00d4 5C000000 		.4byte	.LFE285
 5651 00d8 00000000 		.4byte	0
 5652 00dc 00000000 		.4byte	0
 5653              		.section	.debug_line,"",%progbits
 5654              	.Ldebug_line0:
 5655 0000 8B060000 		.section	.debug_str,"MS",%progbits,1
 5655      0200AD03 
 5655      00000201 
 5655      FB0E0D00 
 5655      01010101 
 5656              	.LASF306:
 5657 0000 666C6173 		.ascii	"flashCtlMainWs1Freq\000"
 5657      6843746C 
 5657      4D61696E 
 5657      57733146 
 5657      72657100 
 5658              	.LASF199:
 5659 0014 50455249 		.ascii	"PERI_TR_GR_V1_Type\000"
 5659      5F54525F 
 5659      47525F56 
 5659      315F5479 
 5659      706500
 5660              	.LASF418:
 5661 0027 63795F73 		.ascii	"cy_stc_sysint_t\000"
 5661      74635F73 
 5661      7973696E 
 5661      745F7400 
 5662              	.LASF25:
 5663 0037 696F7373 		.ascii	"ioss_interrupt_gpio_IRQn\000"
 5663      5F696E74 
 5663      65727275 
 5663      70745F67 
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 248


 5663      70696F5F 
 5664              	.LASF242:
 5665 0050 52414E47 		.ascii	"RANGE_INTR_MASKED\000"
 5665      455F494E 
 5665      54525F4D 
 5665      41534B45 
 5665      4400
 5666              	.LASF469:
 5667 0062 4144435F 		.ascii	"ADC_1_initVar\000"
 5667      315F696E 
 5667      69745661 
 5667      7200
 5668              	.LASF123:
 5669 0070 74637077 		.ascii	"tcpwm_1_interrupts_15_IRQn\000"
 5669      6D5F315F 
 5669      696E7465 
 5669      72727570 
 5669      74735F31 
 5670              	.LASF227:
 5671 008b 4348414E 		.ascii	"CHAN_WORK_UPDATED\000"
 5671      5F574F52 
 5671      4B5F5550 
 5671      44415445 
 5671      4400
 5672              	.LASF348:
 5673 009d 6970634C 		.ascii	"ipcLockStatusOffset\000"
 5673      6F636B53 
 5673      74617475 
 5673      734F6666 
 5673      73657400 
 5674              	.LASF460:
 5675 00b1 4144435F 		.ascii	"ADC_1_SetChanMask\000"
 5675      315F5365 
 5675      74436861 
 5675      6E4D6173 
 5675      6B00
 5676              	.LASF438:
 5677 00c3 43795F53 		.ascii	"Cy_SysClk_PeriphDisableDivider\000"
 5677      7973436C 
 5677      6B5F5065 
 5677      72697068 
 5677      44697361 
 5678              	.LASF114:
 5679 00e2 74637077 		.ascii	"tcpwm_1_interrupts_6_IRQn\000"
 5679      6D5F315F 
 5679      696E7465 
 5679      72727570 
 5679      74735F36 
 5680              	.LASF468:
 5681 00fc 63795F64 		.ascii	"cy_device\000"
 5681      65766963 
 5681      6500
 5682              	.LASF142:
 5683 0106 7564625F 		.ascii	"udb_interrupts_10_IRQn\000"
 5683      696E7465 
 5683      72727570 
 5683      74735F31 
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 249


 5683      305F4952 
 5684              	.LASF425:
 5685 011d 62617365 		.ascii	"base\000"
 5685      00
 5686              	.LASF333:
 5687 0122 63707573 		.ascii	"cpussCm0ClockCtlOffset\000"
 5687      73436D30 
 5687      436C6F63 
 5687      6B43746C 
 5687      4F666673 
 5688              	.LASF67:
 5689 0139 63707573 		.ascii	"cpuss_interrupts_dw0_7_IRQn\000"
 5689      735F696E 
 5689      74657272 
 5689      75707473 
 5689      5F647730 
 5690              	.LASF445:
 5691 0155 4144435F 		.ascii	"ADC_1_StartEx\000"
 5691      315F5374 
 5691      61727445 
 5691      7800
 5692              	.LASF207:
 5693 0163 4449565F 		.ascii	"DIV_8_CTL\000"
 5693      385F4354 
 5693      4C00
 5694              	.LASF440:
 5695 016d 4144435F 		.ascii	"ADC_1_intSarClock_Disable\000"
 5695      315F696E 
 5695      74536172 
 5695      436C6F63 
 5695      6B5F4469 
 5696              	.LASF54:
 5697 0187 7363625F 		.ascii	"scb_3_interrupt_IRQn\000"
 5697      335F696E 
 5697      74657272 
 5697      7570745F 
 5697      4952516E 
 5698              	.LASF405:
 5699 019c 43595F53 		.ascii	"CY_SYSCLK_DIV_8_BIT\000"
 5699      5953434C 
 5699      4B5F4449 
 5699      565F385F 
 5699      42495400 
 5700              	.LASF222:
 5701 01b0 4348414E 		.ascii	"CHAN_EN\000"
 5701      5F454E00 
 5702              	.LASF84:
 5703 01b8 63707573 		.ascii	"cpuss_interrupts_dw1_8_IRQn\000"
 5703      735F696E 
 5703      74657272 
 5703      75707473 
 5703      5F647731 
 5704              	.LASF90:
 5705 01d4 63707573 		.ascii	"cpuss_interrupts_dw1_14_IRQn\000"
 5705      735F696E 
 5705      74657272 
 5705      75707473 
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 250


 5705      5F647731 
 5706              	.LASF265:
 5707 01f1 70657269 		.ascii	"periBase\000"
 5707      42617365 
 5707      00
 5708              	.LASF62:
 5709 01fa 63707573 		.ascii	"cpuss_interrupts_dw0_2_IRQn\000"
 5709      735F696E 
 5709      74657272 
 5709      75707473 
 5709      5F647730 
 5710              	.LASF442:
 5711 0216 4144435F 		.ascii	"ADC_1_Enable\000"
 5711      315F456E 
 5711      61626C65 
 5711      00
 5712              	.LASF341:
 5713 0223 63707573 		.ascii	"cpussCm0NmiCtlOffset\000"
 5713      73436D30 
 5713      4E6D6943 
 5713      746C4F66 
 5713      66736574 
 5714              	.LASF311:
 5715 0238 64774368 		.ascii	"dwChSize\000"
 5715      53697A65 
 5715      00
 5716              	.LASF189:
 5717 0241 53544952 		.ascii	"STIR\000"
 5717      00
 5718              	.LASF475:
 5719 0246 47656E65 		.ascii	"Generated_Source\\PSoC6\\ADC_1.c\000"
 5719      72617465 
 5719      645F536F 
 5719      75726365 
 5719      5C50536F 
 5720              	.LASF402:
 5721 0265 43595F53 		.ascii	"CY_SYSCLK_TIMEOUT\000"
 5721      5953434C 
 5721      4B5F5449 
 5721      4D454F55 
 5721      5400
 5722              	.LASF172:
 5723 0277 756E7369 		.ascii	"unsigned int\000"
 5723      676E6564 
 5723      20696E74 
 5723      00
 5724              	.LASF465:
 5725 0284 4144435F 		.ascii	"ADC_1_Init\000"
 5725      315F496E 
 5725      697400
 5726              	.LASF46:
 5727 028f 63707573 		.ascii	"cpuss_interrupts_ipc_11_IRQn\000"
 5727      735F696E 
 5727      74657272 
 5727      75707473 
 5727      5F697063 
 5728              	.LASF450:
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 251


 5729 02ac 72657374 		.ascii	"restart\000"
 5729      61727400 
 5730              	.LASF243:
 5731 02b4 494E5452 		.ascii	"INTR_CAUSE\000"
 5731      5F434155 
 5731      534500
 5732              	.LASF293:
 5733 02bf 736D6966 		.ascii	"smifDeviceNr\000"
 5733      44657669 
 5733      63654E72 
 5733      00
 5734              	.LASF377:
 5735 02cc 43595F53 		.ascii	"CY_SAR_RANGE_COND_OUTSIDE\000"
 5735      41525F52 
 5735      414E4745 
 5735      5F434F4E 
 5735      445F4F55 
 5736              	.LASF323:
 5737 02e6 70657269 		.ascii	"periDivCmdPaTypeSelPos\000"
 5737      44697643 
 5737      6D645061 
 5737      54797065 
 5737      53656C50 
 5738              	.LASF433:
 5739 02fd 64697669 		.ascii	"dividerNum\000"
 5739      6465724E 
 5739      756D00
 5740              	.LASF115:
 5741 0308 74637077 		.ascii	"tcpwm_1_interrupts_7_IRQn\000"
 5741      6D5F315F 
 5741      696E7465 
 5741      72727570 
 5741      74735F37 
 5742              	.LASF369:
 5743 0322 63795F65 		.ascii	"cy_en_sar_switch_state_t\000"
 5743      6E5F7361 
 5743      725F7377 
 5743      69746368 
 5743      5F737461 
 5744              	.LASF166:
 5745 033b 5F5F696E 		.ascii	"__int32_t\000"
 5745      7433325F 
 5745      7400
 5746              	.LASF33:
 5747 0345 70617373 		.ascii	"pass_interrupt_ctbs_IRQn\000"
 5747      5F696E74 
 5747      65727275 
 5747      70745F63 
 5747      7462735F 
 5748              	.LASF457:
 5749 035e 4144435F 		.ascii	"ADC_1_SetEosMask\000"
 5749      315F5365 
 5749      74456F73 
 5749      4D61736B 
 5749      00
 5750              	.LASF289:
 5751 036f 73727373 		.ascii	"srssNumClkpath\000"
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 252


 5751      4E756D43 
 5751      6C6B7061 
 5751      746800
 5752              	.LASF229:
 5753 037e 4348414E 		.ascii	"CHAN_WORK_NEWVALUE\000"
 5753      5F574F52 
 5753      4B5F4E45 
 5753      5756414C 
 5753      554500
 5754              	.LASF263:
 5755 0391 63707573 		.ascii	"cpussBase\000"
 5755      73426173 
 5755      6500
 5756              	.LASF209:
 5757 039b 4449565F 		.ascii	"DIV_16_5_CTL\000"
 5757      31365F35 
 5757      5F43544C 
 5757      00
 5758              	.LASF410:
 5759 03a8 6368616E 		.ascii	"channelBase\000"
 5759      6E656C42 
 5759      61736500 
 5760              	.LASF213:
 5761 03b4 5050555F 		.ascii	"PPU_PR\000"
 5761      505200
 5762              	.LASF287:
 5763 03bb 63707573 		.ascii	"cpussFmIrq\000"
 5763      73466D49 
 5763      727100
 5764              	.LASF30:
 5765 03c6 73727373 		.ascii	"srss_interrupt_mcwdt_1_IRQn\000"
 5765      5F696E74 
 5765      65727275 
 5765      70745F6D 
 5765      63776474 
 5766              	.LASF400:
 5767 03e2 43595F53 		.ascii	"CY_SYSCLK_SUCCESS\000"
 5767      5953434C 
 5767      4B5F5355 
 5767      43434553 
 5767      5300
 5768              	.LASF412:
 5769 03f4 6877436F 		.ascii	"hwConfigStc\000"
 5769      6E666967 
 5769      53746300 
 5770              	.LASF419:
 5771 0400 5F5F4953 		.ascii	"__ISB\000"
 5771      4200
 5772              	.LASF12:
 5773 0406 696F7373 		.ascii	"ioss_interrupts_gpio_2_IRQn\000"
 5773      5F696E74 
 5773      65727275 
 5773      7074735F 
 5773      6770696F 
 5774              	.LASF288:
 5775 0422 63707573 		.ascii	"cpussNotConnectedIrq\000"
 5775      734E6F74 
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 253


 5775      436F6E6E 
 5775      65637465 
 5775      64497271 
 5776              	.LASF73:
 5777 0437 63707573 		.ascii	"cpuss_interrupts_dw0_13_IRQn\000"
 5777      735F696E 
 5777      74657272 
 5777      75707473 
 5777      5F647730 
 5778              	.LASF452:
 5779 0454 4144435F 		.ascii	"ADC_1_StartConvert\000"
 5779      315F5374 
 5779      61727443 
 5779      6F6E7665 
 5779      727400
 5780              	.LASF158:
 5781 0467 73686F72 		.ascii	"short int\000"
 5781      7420696E 
 5781      7400
 5782              	.LASF131:
 5783 0471 74637077 		.ascii	"tcpwm_1_interrupts_23_IRQn\000"
 5783      6D5F315F 
 5783      696E7465 
 5783      72727570 
 5783      74735F32 
 5784              	.LASF235:
 5785 048c 53415455 		.ascii	"SATURATE_INTR\000"
 5785      52415445 
 5785      5F494E54 
 5785      5200
 5786              	.LASF129:
 5787 049a 74637077 		.ascii	"tcpwm_1_interrupts_21_IRQn\000"
 5787      6D5F315F 
 5787      696E7465 
 5787      72727570 
 5787      74735F32 
 5788              	.LASF27:
 5789 04b5 6C70636F 		.ascii	"lpcomp_interrupt_IRQn\000"
 5789      6D705F69 
 5789      6E746572 
 5789      72757074 
 5789      5F495251 
 5790              	.LASF218:
 5791 04cb 53414D50 		.ascii	"SAMPLE_TIME01\000"
 5791      4C455F54 
 5791      494D4530 
 5791      3100
 5792              	.LASF107:
 5793 04d9 74637077 		.ascii	"tcpwm_0_interrupts_7_IRQn\000"
 5793      6D5F305F 
 5793      696E7465 
 5793      72727570 
 5793      74735F37 
 5794              	.LASF246:
 5795 04f3 494E4A5F 		.ascii	"INJ_RESULT\000"
 5795      52455355 
 5795      4C5400
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 254


 5796              	.LASF322:
 5797 04fe 70657269 		.ascii	"periDivCmdPaDivSelPos\000"
 5797      44697643 
 5797      6D645061 
 5797      44697653 
 5797      656C506F 
 5798              	.LASF232:
 5799 0514 494E5452 		.ascii	"INTR_SET\000"
 5799      5F534554 
 5799      00
 5800              	.LASF299:
 5801 051d 63727970 		.ascii	"cryptoMemSize\000"
 5801      746F4D65 
 5801      6D53697A 
 5801      6500
 5802              	.LASF454:
 5803 052b 6D6F6465 		.ascii	"mode\000"
 5803      00
 5804              	.LASF392:
 5805 0530 73617449 		.ascii	"satIntrMask\000"
 5805      6E74724D 
 5805      61736B00 
 5806              	.LASF363:
 5807 053c 63795F65 		.ascii	"cy_en_sar_start_convert_sel_t\000"
 5807      6E5F7361 
 5807      725F7374 
 5807      6172745F 
 5807      636F6E76 
 5808              	.LASF319:
 5809 055a 70657269 		.ascii	"periTrGrSize\000"
 5809      54724772 
 5809      53697A65 
 5809      00
 5810              	.LASF290:
 5811 0567 73727373 		.ascii	"srssNumPll\000"
 5811      4E756D50 
 5811      6C6C00
 5812              	.LASF76:
 5813 0572 63707573 		.ascii	"cpuss_interrupts_dw1_0_IRQn\000"
 5813      735F696E 
 5813      74657272 
 5813      75707473 
 5813      5F647731 
 5814              	.LASF146:
 5815 058e 7564625F 		.ascii	"udb_interrupts_14_IRQn\000"
 5815      696E7465 
 5815      72727570 
 5815      74735F31 
 5815      345F4952 
 5816              	.LASF102:
 5817 05a5 74637077 		.ascii	"tcpwm_0_interrupts_2_IRQn\000"
 5817      6D5F305F 
 5817      696E7465 
 5817      72727570 
 5817      74735F32 
 5818              	.LASF8:
 5819 05bf 50656E64 		.ascii	"PendSV_IRQn\000"
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 255


 5819      53565F49 
 5819      52516E00 
 5820              	.LASF453:
 5821 05cb 4144435F 		.ascii	"ADC_1_SetConvertMode\000"
 5821      315F5365 
 5821      74436F6E 
 5821      76657274 
 5821      4D6F6465 
 5822              	.LASF281:
 5823 05e0 70726F74 		.ascii	"protVersion\000"
 5823      56657273 
 5823      696F6E00 
 5824              	.LASF374:
 5825 05ec 43595F53 		.ascii	"CY_SAR_RANGE_COND_BELOW\000"
 5825      41525F52 
 5825      414E4745 
 5825      5F434F4E 
 5825      445F4245 
 5826              	.LASF193:
 5827 0604 52455345 		.ascii	"RESERVED\000"
 5827      52564544 
 5827      00
 5828              	.LASF45:
 5829 060d 63707573 		.ascii	"cpuss_interrupts_ipc_10_IRQn\000"
 5829      735F696E 
 5829      74657272 
 5829      75707473 
 5829      5F697063 
 5830              	.LASF174:
 5831 062a 696E7431 		.ascii	"int16_t\000"
 5831      365F7400 
 5832              	.LASF261:
 5833 0632 5341525F 		.ascii	"SAR_Type\000"
 5833      54797065 
 5833      00
 5834              	.LASF321:
 5835 063b 70657269 		.ascii	"periDivCmdTypeSelPos\000"
 5835      44697643 
 5835      6D645479 
 5835      70655365 
 5835      6C506F73 
 5836              	.LASF338:
 5837 0650 63707573 		.ascii	"cpussTrimRamCtlOffset\000"
 5837      73547269 
 5837      6D52616D 
 5837      43746C4F 
 5837      66667365 
 5838              	.LASF139:
 5839 0666 7564625F 		.ascii	"udb_interrupts_7_IRQn\000"
 5839      696E7465 
 5839      72727570 
 5839      74735F37 
 5839      5F495251 
 5840              	.LASF28:
 5841 067c 7363625F 		.ascii	"scb_8_interrupt_IRQn\000"
 5841      385F696E 
 5841      74657272 
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 256


 5841      7570745F 
 5841      4952516E 
 5842              	.LASF3:
 5843 0691 4D656D6F 		.ascii	"MemoryManagement_IRQn\000"
 5843      72794D61 
 5843      6E616765 
 5843      6D656E74 
 5843      5F495251 
 5844              	.LASF240:
 5845 06a7 52414E47 		.ascii	"RANGE_INTR_SET\000"
 5845      455F494E 
 5845      54525F53 
 5845      455400
 5846              	.LASF373:
 5847 06b6 43595F53 		.ascii	"CY_SAR_MUX_SWITCH0\000"
 5847      41525F4D 
 5847      55585F53 
 5847      57495443 
 5847      483000
 5848              	.LASF134:
 5849 06c9 7564625F 		.ascii	"udb_interrupts_2_IRQn\000"
 5849      696E7465 
 5849      72727570 
 5849      74735F32 
 5849      5F495251 
 5850              	.LASF204:
 5851 06df 50455249 		.ascii	"PERI_PPU_PR_V1_Type\000"
 5851      5F505055 
 5851      5F50525F 
 5851      56315F54 
 5851      79706500 
 5852              	.LASF177:
 5853 06f3 75696E74 		.ascii	"uint32_t\000"
 5853      33325F74 
 5853      00
 5854              	.LASF429:
 5855 06fc 43795F53 		.ascii	"Cy_SAR_SetVssaVminusSwitch\000"
 5855      41525F53 
 5855      65745673 
 5855      7361566D 
 5855      696E7573 
 5856              	.LASF120:
 5857 0717 74637077 		.ascii	"tcpwm_1_interrupts_12_IRQn\000"
 5857      6D5F315F 
 5857      696E7465 
 5857      72727570 
 5857      74735F31 
 5858              	.LASF17:
 5859 0732 696F7373 		.ascii	"ioss_interrupts_gpio_7_IRQn\000"
 5859      5F696E74 
 5859      65727275 
 5859      7074735F 
 5859      6770696F 
 5860              	.LASF23:
 5861 074e 696F7373 		.ascii	"ioss_interrupts_gpio_13_IRQn\000"
 5861      5F696E74 
 5861      65727275 
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 257


 5861      7074735F 
 5861      6770696F 
 5862              	.LASF147:
 5863 076b 7564625F 		.ascii	"udb_interrupts_15_IRQn\000"
 5863      696E7465 
 5863      72727570 
 5863      74735F31 
 5863      355F4952 
 5864              	.LASF331:
 5865 0782 6770696F 		.ascii	"gpioPrtCfgOutOffset\000"
 5865      50727443 
 5865      66674F75 
 5865      744F6666 
 5865      73657400 
 5866              	.LASF178:
 5867 0796 49534552 		.ascii	"ISER\000"
 5867      00
 5868              	.LASF97:
 5869 079b 63707573 		.ascii	"cpuss_interrupts_cm0_cti_1_IRQn\000"
 5869      735F696E 
 5869      74657272 
 5869      75707473 
 5869      5F636D30 
 5870              	.LASF353:
 5871 07bb 666C6F61 		.ascii	"float\000"
 5871      7400
 5872              	.LASF274:
 5873 07c1 63727970 		.ascii	"cryptoVersion\000"
 5873      746F5665 
 5873      7273696F 
 5873      6E00
 5874              	.LASF303:
 5875 07cf 666C6173 		.ascii	"flashProgramDelay\000"
 5875      6850726F 
 5875      6772616D 
 5875      44656C61 
 5875      7900
 5876              	.LASF55:
 5877 07e1 7363625F 		.ascii	"scb_4_interrupt_IRQn\000"
 5877      345F696E 
 5877      74657272 
 5877      7570745F 
 5877      4952516E 
 5878              	.LASF411:
 5879 07f6 6E756D43 		.ascii	"numChannels\000"
 5879      68616E6E 
 5879      656C7300 
 5880              	.LASF446:
 5881 0802 4144435F 		.ascii	"ADC_1_InitConfig\000"
 5881      315F496E 
 5881      6974436F 
 5881      6E666967 
 5881      00
 5882              	.LASF194:
 5883 0813 534C5F43 		.ascii	"SL_CTL\000"
 5883      544C00
 5884              	.LASF264:
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 258


 5885 081a 666C6173 		.ascii	"flashcBase\000"
 5885      68634261 
 5885      736500
 5886              	.LASF81:
 5887 0825 63707573 		.ascii	"cpuss_interrupts_dw1_5_IRQn\000"
 5887      735F696E 
 5887      74657272 
 5887      75707473 
 5887      5F647731 
 5888              	.LASF330:
 5889 0841 6770696F 		.ascii	"gpioPrtCfgInOffset\000"
 5889      50727443 
 5889      6667496E 
 5889      4F666673 
 5889      657400
 5890              	.LASF87:
 5891 0854 63707573 		.ascii	"cpuss_interrupts_dw1_11_IRQn\000"
 5891      735F696E 
 5891      74657272 
 5891      75707473 
 5891      5F647731 
 5892              	.LASF464:
 5893 0871 72657375 		.ascii	"result\000"
 5893      6C7400
 5894              	.LASF36:
 5895 0878 63707573 		.ascii	"cpuss_interrupts_ipc_1_IRQn\000"
 5895      735F696E 
 5895      74657272 
 5895      75707473 
 5895      5F697063 
 5896              	.LASF302:
 5897 0894 666C6173 		.ascii	"flashWriteDelay\000"
 5897      68577269 
 5897      74654465 
 5897      6C617900 
 5898              	.LASF171:
 5899 08a4 6C6F6E67 		.ascii	"long long unsigned int\000"
 5899      206C6F6E 
 5899      6720756E 
 5899      7369676E 
 5899      65642069 
 5900              	.LASF327:
 5901 08bb 70657269 		.ascii	"periDiv24_5CtlOffset\000"
 5901      44697632 
 5901      345F3543 
 5901      746C4F66 
 5901      66736574 
 5902              	.LASF332:
 5903 08d0 6770696F 		.ascii	"gpioPrtCfgSioOffset\000"
 5903      50727443 
 5903      66675369 
 5903      6F4F6666 
 5903      73657400 
 5904              	.LASF206:
 5905 08e4 4449565F 		.ascii	"DIV_CMD\000"
 5905      434D4400 
 5906              	.LASF247:
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 259


 5907 08ec 52455345 		.ascii	"RESERVED7\000"
 5907      52564544 
 5907      3700
 5908              	.LASF48:
 5909 08f6 63707573 		.ascii	"cpuss_interrupts_ipc_13_IRQn\000"
 5909      735F696E 
 5909      74657272 
 5909      75707473 
 5909      5F697063 
 5910              	.LASF286:
 5911 0913 63707573 		.ascii	"cpussIpc0Irq\000"
 5911      73497063 
 5911      30497271 
 5911      00
 5912              	.LASF31:
 5913 0920 73727373 		.ascii	"srss_interrupt_backup_IRQn\000"
 5913      5F696E74 
 5913      65727275 
 5913      70745F62 
 5913      61636B75 
 5914              	.LASF22:
 5915 093b 696F7373 		.ascii	"ioss_interrupts_gpio_12_IRQn\000"
 5915      5F696E74 
 5915      65727275 
 5915      7074735F 
 5915      6770696F 
 5916              	.LASF117:
 5917 0958 74637077 		.ascii	"tcpwm_1_interrupts_9_IRQn\000"
 5917      6D5F315F 
 5917      696E7465 
 5917      72727570 
 5917      74735F39 
 5918              	.LASF477:
 5919 0972 4144435F 		.ascii	"ADC_1_IsEndConversion\000"
 5919      315F4973 
 5919      456E6443 
 5919      6F6E7665 
 5919      7273696F 
 5920              	.LASF219:
 5921 0988 53414D50 		.ascii	"SAMPLE_TIME23\000"
 5921      4C455F54 
 5921      494D4532 
 5921      3300
 5922              	.LASF387:
 5923 0996 72616E67 		.ascii	"rangeThres\000"
 5923      65546872 
 5923      657300
 5924              	.LASF164:
 5925 09a1 5F5F7569 		.ascii	"__uint16_t\000"
 5925      6E743136 
 5925      5F7400
 5926              	.LASF6:
 5927 09ac 53564361 		.ascii	"SVCall_IRQn\000"
 5927      6C6C5F49 
 5927      52516E00 
 5928              	.LASF181:
 5929 09b8 52534552 		.ascii	"RSERVED1\000"
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 260


 5929      56454431 
 5929      00
 5930              	.LASF375:
 5931 09c1 43595F53 		.ascii	"CY_SAR_RANGE_COND_INSIDE\000"
 5931      41525F52 
 5931      414E4745 
 5931      5F434F4E 
 5931      445F494E 
 5932              	.LASF112:
 5933 09da 74637077 		.ascii	"tcpwm_1_interrupts_4_IRQn\000"
 5933      6D5F315F 
 5933      696E7465 
 5933      72727570 
 5933      74735F34 
 5934              	.LASF399:
 5935 09f4 63795F73 		.ascii	"cy_stc_sar_config_t\000"
 5935      74635F73 
 5935      61725F63 
 5935      6F6E6669 
 5935      675F7400 
 5936              	.LASF59:
 5937 0a08 6373645F 		.ascii	"csd_interrupt_IRQn\000"
 5937      696E7465 
 5937      72727570 
 5937      745F4952 
 5937      516E00
 5938              	.LASF151:
 5939 0a1b 70726F66 		.ascii	"profile_interrupt_IRQn\000"
 5939      696C655F 
 5939      696E7465 
 5939      72727570 
 5939      745F4952 
 5940              	.LASF21:
 5941 0a32 696F7373 		.ascii	"ioss_interrupts_gpio_11_IRQn\000"
 5941      5F696E74 
 5941      65727275 
 5941      7074735F 
 5941      6770696F 
 5942              	.LASF43:
 5943 0a4f 63707573 		.ascii	"cpuss_interrupts_ipc_8_IRQn\000"
 5943      735F696E 
 5943      74657272 
 5943      75707473 
 5943      5F697063 
 5944              	.LASF244:
 5945 0a6b 494E4A5F 		.ascii	"INJ_CHAN_CONFIG\000"
 5945      4348414E 
 5945      5F434F4E 
 5945      46494700 
 5946              	.LASF92:
 5947 0a7b 63707573 		.ascii	"cpuss_interrupts_fault_0_IRQn\000"
 5947      735F696E 
 5947      74657272 
 5947      75707473 
 5947      5F666175 
 5948              	.LASF96:
 5949 0a99 63707573 		.ascii	"cpuss_interrupts_cm0_cti_0_IRQn\000"
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 261


 5949      735F696E 
 5949      74657272 
 5949      75707473 
 5949      5F636D30 
 5950              	.LASF308:
 5951 0ab9 666C6173 		.ascii	"flashCtlMainWs3Freq\000"
 5951      6843746C 
 5951      4D61696E 
 5951      57733346 
 5951      72657100 
 5952              	.LASF160:
 5953 0acd 4952516E 		.ascii	"IRQn_Type\000"
 5953      5F547970 
 5953      6500
 5954              	.LASF415:
 5955 0ad7 4144435F 		.ascii	"ADC_1_CONFIG_STRUCT\000"
 5955      315F434F 
 5955      4E464947 
 5955      5F535452 
 5955      55435400 
 5956              	.LASF364:
 5957 0aeb 43595F53 		.ascii	"CY_SAR_RETURN_STATUS\000"
 5957      41525F52 
 5957      45545552 
 5957      4E5F5354 
 5957      41545553 
 5958              	.LASF211:
 5959 0b00 54525F43 		.ascii	"TR_CMD\000"
 5959      4D4400
 5960              	.LASF143:
 5961 0b07 7564625F 		.ascii	"udb_interrupts_11_IRQn\000"
 5961      696E7465 
 5961      72727570 
 5961      74735F31 
 5961      315F4952 
 5962              	.LASF37:
 5963 0b1e 63707573 		.ascii	"cpuss_interrupts_ipc_2_IRQn\000"
 5963      735F696E 
 5963      74657272 
 5963      75707473 
 5963      5F697063 
 5964              	.LASF137:
 5965 0b3a 7564625F 		.ascii	"udb_interrupts_5_IRQn\000"
 5965      696E7465 
 5965      72727570 
 5965      74735F35 
 5965      5F495251 
 5966              	.LASF404:
 5967 0b50 63795F65 		.ascii	"cy_en_sysclk_status_t\000"
 5967      6E5F7379 
 5967      73636C6B 
 5967      5F737461 
 5967      7475735F 
 5968              	.LASF441:
 5969 0b66 4144435F 		.ascii	"ADC_1_intSarClock_SetDivider\000"
 5969      315F696E 
 5969      74536172 
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 262


 5969      436C6F63 
 5969      6B5F5365 
 5970              	.LASF104:
 5971 0b83 74637077 		.ascii	"tcpwm_0_interrupts_4_IRQn\000"
 5971      6D5F305F 
 5971      696E7465 
 5971      72727570 
 5971      74735F34 
 5972              	.LASF301:
 5973 0b9d 666C6173 		.ascii	"flashPipeRequired\000"
 5973      68506970 
 5973      65526571 
 5973      75697265 
 5973      6400
 5974              	.LASF241:
 5975 0baf 52414E47 		.ascii	"RANGE_INTR_MASK\000"
 5975      455F494E 
 5975      54525F4D 
 5975      41534B00 
 5976              	.LASF466:
 5977 0bbf 636F6E66 		.ascii	"configNum\000"
 5977      69674E75 
 5977      6D00
 5978              	.LASF451:
 5979 0bc9 4144435F 		.ascii	"ADC_1_Start\000"
 5979      315F5374 
 5979      61727400 
 5980              	.LASF398:
 5981 0bd5 5F426F6F 		.ascii	"_Bool\000"
 5981      6C00
 5982              	.LASF221:
 5983 0bdb 52414E47 		.ascii	"RANGE_COND\000"
 5983      455F434F 
 5983      4E4400
 5984              	.LASF305:
 5985 0be6 666C6173 		.ascii	"flashCtlMainWs0Freq\000"
 5985      6843746C 
 5985      4D61696E 
 5985      57733046 
 5985      72657100 
 5986              	.LASF210:
 5987 0bfa 4449565F 		.ascii	"DIV_24_5_CTL\000"
 5987      32345F35 
 5987      5F43544C 
 5987      00
 5988              	.LASF315:
 5989 0c07 64775374 		.ascii	"dwStatusChIdxMsk\000"
 5989      61747573 
 5989      43684964 
 5989      784D736B 
 5989      00
 5990              	.LASF149:
 5991 0c18 61756469 		.ascii	"audioss_interrupt_i2s_IRQn\000"
 5991      6F73735F 
 5991      696E7465 
 5991      72727570 
 5991      745F6932 
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 263


 5992              	.LASF380:
 5993 0c33 43595F53 		.ascii	"CY_SAR_INTR_EOS_MASK\000"
 5993      41525F49 
 5993      4E54525F 
 5993      454F535F 
 5993      4D41534B 
 5994              	.LASF269:
 5995 0c48 6770696F 		.ascii	"gpioBase\000"
 5995      42617365 
 5995      00
 5996              	.LASF443:
 5997 0c51 4144435F 		.ascii	"ADC_1_Stop\000"
 5997      315F5374 
 5997      6F7000
 5998              	.LASF109:
 5999 0c5c 74637077 		.ascii	"tcpwm_1_interrupts_1_IRQn\000"
 5999      6D5F315F 
 5999      696E7465 
 5999      72727570 
 5999      74735F31 
 6000              	.LASF145:
 6001 0c76 7564625F 		.ascii	"udb_interrupts_13_IRQn\000"
 6001      696E7465 
 6001      72727570 
 6001      74735F31 
 6001      335F4952 
 6002              	.LASF136:
 6003 0c8d 7564625F 		.ascii	"udb_interrupts_4_IRQn\000"
 6003      696E7465 
 6003      72727570 
 6003      74735F34 
 6003      5F495251 
 6004              	.LASF61:
 6005 0ca3 63707573 		.ascii	"cpuss_interrupts_dw0_1_IRQn\000"
 6005      735F696E 
 6005      74657272 
 6005      75707473 
 6005      5F647730 
 6006              	.LASF461:
 6007 0cbf 6368616E 		.ascii	"chanCount\000"
 6007      436F756E 
 6007      7400
 6008              	.LASF208:
 6009 0cc9 4449565F 		.ascii	"DIV_16_CTL\000"
 6009      31365F43 
 6009      544C00
 6010              	.LASF150:
 6011 0cd4 61756469 		.ascii	"audioss_interrupt_pdm_IRQn\000"
 6011      6F73735F 
 6011      696E7465 
 6011      72727570 
 6011      745F7064 
 6012              	.LASF427:
 6013 0cef 656E6162 		.ascii	"enableMask\000"
 6013      6C654D61 
 6013      736B00
 6014              	.LASF68:
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 264


 6015 0cfa 63707573 		.ascii	"cpuss_interrupts_dw0_8_IRQn\000"
 6015      735F696E 
 6015      74657272 
 6015      75707473 
 6015      5F647730 
 6016              	.LASF122:
 6017 0d16 74637077 		.ascii	"tcpwm_1_interrupts_14_IRQn\000"
 6017      6D5F315F 
 6017      696E7465 
 6017      72727570 
 6017      74735F31 
 6018              	.LASF19:
 6019 0d31 696F7373 		.ascii	"ioss_interrupts_gpio_9_IRQn\000"
 6019      5F696E74 
 6019      65727275 
 6019      7074735F 
 6019      6770696F 
 6020              	.LASF340:
 6021 0d4d 63707573 		.ascii	"cpussSysTickCtlOffset\000"
 6021      73537973 
 6021      5469636B 
 6021      43746C4F 
 6021      66667365 
 6022              	.LASF231:
 6023 0d63 494E5452 		.ascii	"INTR\000"
 6023      00
 6024              	.LASF314:
 6025 0d68 64775374 		.ascii	"dwStatusChIdxPos\000"
 6025      61747573 
 6025      43684964 
 6025      78506F73 
 6025      00
 6026              	.LASF260:
 6027 0d79 5341525F 		.ascii	"SAR_V1_Type\000"
 6027      56315F54 
 6027      79706500 
 6028              	.LASF223:
 6029 0d85 53544152 		.ascii	"START_CTRL\000"
 6029      545F4354 
 6029      524C00
 6030              	.LASF66:
 6031 0d90 63707573 		.ascii	"cpuss_interrupts_dw0_6_IRQn\000"
 6031      735F696E 
 6031      74657272 
 6031      75707473 
 6031      5F647730 
 6032              	.LASF397:
 6033 0dac 76726566 		.ascii	"vrefMvValue\000"
 6033      4D765661 
 6033      6C756500 
 6034              	.LASF14:
 6035 0db8 696F7373 		.ascii	"ioss_interrupts_gpio_4_IRQn\000"
 6035      5F696E74 
 6035      65727275 
 6035      7074735F 
 6035      6770696F 
 6036              	.LASF20:
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 265


 6037 0dd4 696F7373 		.ascii	"ioss_interrupts_gpio_10_IRQn\000"
 6037      5F696E74 
 6037      65727275 
 6037      7074735F 
 6037      6770696F 
 6038              	.LASF75:
 6039 0df1 63707573 		.ascii	"cpuss_interrupts_dw0_15_IRQn\000"
 6039      735F696E 
 6039      74657272 
 6039      75707473 
 6039      5F647730 
 6040              	.LASF32:
 6041 0e0e 73727373 		.ascii	"srss_interrupt_IRQn\000"
 6041      5F696E74 
 6041      65727275 
 6041      70745F49 
 6041      52516E00 
 6042              	.LASF285:
 6043 0e22 63707573 		.ascii	"cpussFlashPaSize\000"
 6043      73466C61 
 6043      73685061 
 6043      53697A65 
 6043      00
 6044              	.LASF198:
 6045 0e33 54525F4F 		.ascii	"TR_OUT_CTL\000"
 6045      55545F43 
 6045      544C00
 6046              	.LASF236:
 6047 0e3e 53415455 		.ascii	"SATURATE_INTR_SET\000"
 6047      52415445 
 6047      5F494E54 
 6047      525F5345 
 6047      5400
 6048              	.LASF212:
 6049 0e50 54525F47 		.ascii	"TR_GR\000"
 6049      5200
 6050              	.LASF89:
 6051 0e56 63707573 		.ascii	"cpuss_interrupts_dw1_13_IRQn\000"
 6051      735F696E 
 6051      74657272 
 6051      75707473 
 6051      5F647731 
 6052              	.LASF372:
 6053 0e73 63795F65 		.ascii	"cy_en_sar_switch_sar_seq_ctrl_t\000"
 6053      6E5F7361 
 6053      725F7377 
 6053      69746368 
 6053      5F736172 
 6054              	.LASF455:
 6055 0e93 4144435F 		.ascii	"ADC_1_IRQ_Enable\000"
 6055      315F4952 
 6055      515F456E 
 6055      61626C65 
 6055      00
 6056              	.LASF85:
 6057 0ea4 63707573 		.ascii	"cpuss_interrupts_dw1_9_IRQn\000"
 6057      735F696E 
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 266


 6057      74657272 
 6057      75707473 
 6057      5F647731 
 6058              	.LASF389:
 6059 0ec0 6368616E 		.ascii	"chanEn\000"
 6059      456E00
 6060              	.LASF326:
 6061 0ec7 70657269 		.ascii	"periDiv16_5CtlOffset\000"
 6061      44697631 
 6061      365F3543 
 6061      746C4F66 
 6061      66736574 
 6062              	.LASF157:
 6063 0edc 756E636F 		.ascii	"unconnected_IRQn\000"
 6063      6E6E6563 
 6063      7465645F 
 6063      4952516E 
 6063      00
 6064              	.LASF432:
 6065 0eed 64697669 		.ascii	"dividerType\000"
 6065      64657254 
 6065      79706500 
 6066              	.LASF78:
 6067 0ef9 63707573 		.ascii	"cpuss_interrupts_dw1_2_IRQn\000"
 6067      735F696E 
 6067      74657272 
 6067      75707473 
 6067      5F647731 
 6068              	.LASF297:
 6069 0f15 73797350 		.ascii	"sysPmSimoPresent\000"
 6069      6D53696D 
 6069      6F507265 
 6069      73656E74 
 6069      00
 6070              	.LASF155:
 6071 0f26 7573625F 		.ascii	"usb_interrupt_lo_IRQn\000"
 6071      696E7465 
 6071      72727570 
 6071      745F6C6F 
 6071      5F495251 
 6072              	.LASF230:
 6073 0f3c 4348414E 		.ascii	"CHAN_RESULT_NEWVALUE\000"
 6073      5F524553 
 6073      554C545F 
 6073      4E455756 
 6073      414C5545 
 6074              	.LASF95:
 6075 0f51 63707573 		.ascii	"cpuss_interrupt_fm_IRQn\000"
 6075      735F696E 
 6075      74657272 
 6075      7570745F 
 6075      666D5F49 
 6076              	.LASF463:
 6077 0f69 656E644F 		.ascii	"endOfConversion\000"
 6077      66436F6E 
 6077      76657273 
 6077      696F6E00 
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 267


 6078              	.LASF366:
 6079 0f79 63795F65 		.ascii	"cy_en_sar_return_mode_t\000"
 6079      6E5F7361 
 6079      725F7265 
 6079      7475726E 
 6079      5F6D6F64 
 6080              	.LASF141:
 6081 0f91 7564625F 		.ascii	"udb_interrupts_9_IRQn\000"
 6081      696E7465 
 6081      72727570 
 6081      74735F39 
 6081      5F495251 
 6082              	.LASF249:
 6083 0fa7 4156475F 		.ascii	"AVG_STAT\000"
 6083      53544154 
 6083      00
 6084              	.LASF434:
 6085 0fb0 64697669 		.ascii	"dividerValue\000"
 6085      64657256 
 6085      616C7565 
 6085      00
 6086              	.LASF365:
 6087 0fbd 43595F53 		.ascii	"CY_SAR_WAIT_FOR_RESULT\000"
 6087      41525F57 
 6087      4149545F 
 6087      464F525F 
 6087      52455355 
 6088              	.LASF173:
 6089 0fd4 75696E74 		.ascii	"uint8_t\000"
 6089      385F7400 
 6090              	.LASF360:
 6091 0fdc 63795F65 		.ascii	"cy_en_sar_status_t\000"
 6091      6E5F7361 
 6091      725F7374 
 6091      61747573 
 6091      5F7400
 6092              	.LASF127:
 6093 0fef 74637077 		.ascii	"tcpwm_1_interrupts_19_IRQn\000"
 6093      6D5F315F 
 6093      696E7465 
 6093      72727570 
 6093      74735F31 
 6094              	.LASF416:
 6095 100a 696E7472 		.ascii	"intrSrc\000"
 6095      53726300 
 6096              	.LASF296:
 6097 1012 75646250 		.ascii	"udbPresent\000"
 6097      72657365 
 6097      6E7400
 6098              	.LASF320:
 6099 101d 70657269 		.ascii	"periDivCmdDivSelMsk\000"
 6099      44697643 
 6099      6D644469 
 6099      7653656C 
 6099      4D736B00 
 6100              	.LASF29:
 6101 1031 73727373 		.ascii	"srss_interrupt_mcwdt_0_IRQn\000"
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 268


 6101      5F696E74 
 6101      65727275 
 6101      70745F6D 
 6101      63776474 
 6102              	.LASF356:
 6103 104d 43595F53 		.ascii	"CY_SAR_SUCCESS\000"
 6103      41525F53 
 6103      55434345 
 6103      535300
 6104              	.LASF125:
 6105 105c 74637077 		.ascii	"tcpwm_1_interrupts_17_IRQn\000"
 6105      6D5F315F 
 6105      696E7465 
 6105      72727570 
 6105      74735F31 
 6106              	.LASF162:
 6107 1077 756E7369 		.ascii	"unsigned char\000"
 6107      676E6564 
 6107      20636861 
 6107      7200
 6108              	.LASF328:
 6109 1085 6770696F 		.ascii	"gpioPrtIntrCfgOffset\000"
 6109      50727449 
 6109      6E747243 
 6109      66674F66 
 6109      66736574 
 6110              	.LASF395:
 6111 109a 6D757853 		.ascii	"muxSwitchSqCtrl\000"
 6111      77697463 
 6111      68537143 
 6111      74726C00 
 6112              	.LASF40:
 6113 10aa 63707573 		.ascii	"cpuss_interrupts_ipc_5_IRQn\000"
 6113      735F696E 
 6113      74657272 
 6113      75707473 
 6113      5F697063 
 6114              	.LASF388:
 6115 10c6 72616E67 		.ascii	"rangeCond\000"
 6115      65436F6E 
 6115      6400
 6116              	.LASF344:
 6117 10d0 63707573 		.ascii	"cpussRam0Ctl0\000"
 6117      7352616D 
 6117      3043746C 
 6117      3000
 6118              	.LASF170:
 6119 10de 6C6F6E67 		.ascii	"long long int\000"
 6119      206C6F6E 
 6119      6720696E 
 6119      7400
 6120              	.LASF271:
 6121 10ec 69706342 		.ascii	"ipcBase\000"
 6121      61736500 
 6122              	.LASF312:
 6123 10f4 64774368 		.ascii	"dwChCtlPrioPos\000"
 6123      43746C50 
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 269


 6123      72696F50 
 6123      6F7300
 6124              	.LASF272:
 6125 1103 63727970 		.ascii	"cryptoBase\000"
 6125      746F4261 
 6125      736500
 6126              	.LASF381:
 6127 110e 43595F53 		.ascii	"CY_SAR_INTR_OVERFLOW_MASK\000"
 6127      41525F49 
 6127      4E54525F 
 6127      4F564552 
 6127      464C4F57 
 6128              	.LASF35:
 6129 1128 63707573 		.ascii	"cpuss_interrupts_ipc_0_IRQn\000"
 6129      735F696E 
 6129      74657272 
 6129      75707473 
 6129      5F697063 
 6130              	.LASF426:
 6131 1144 43795F53 		.ascii	"Cy_SAR_SetChanMask\000"
 6131      41525F53 
 6131      65744368 
 6131      616E4D61 
 6131      736B00
 6132              	.LASF382:
 6133 1157 43595F53 		.ascii	"CY_SAR_INTR_FW_COLLISION_MASK\000"
 6133      41525F49 
 6133      4E54525F 
 6133      46575F43 
 6133      4F4C4C49 
 6134              	.LASF101:
 6135 1175 74637077 		.ascii	"tcpwm_0_interrupts_1_IRQn\000"
 6135      6D5F305F 
 6135      696E7465 
 6135      72727570 
 6135      74735F31 
 6136              	.LASF154:
 6137 118f 7573625F 		.ascii	"usb_interrupt_med_IRQn\000"
 6137      696E7465 
 6137      72727570 
 6137      745F6D65 
 6137      645F4952 
 6138              	.LASF56:
 6139 11a6 7363625F 		.ascii	"scb_5_interrupt_IRQn\000"
 6139      355F696E 
 6139      74657272 
 6139      7570745F 
 6139      4952516E 
 6140              	.LASF214:
 6141 11bb 5050555F 		.ascii	"PPU_GR\000"
 6141      475200
 6142              	.LASF435:
 6143 11c2 43795F53 		.ascii	"Cy_SysClk_PeriphSetDivider\000"
 6143      7973436C 
 6143      6B5F5065 
 6143      72697068 
 6143      53657444 
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 270


 6144              	.LASF50:
 6145 11dd 63707573 		.ascii	"cpuss_interrupts_ipc_15_IRQn\000"
 6145      735F696E 
 6145      74657272 
 6145      75707473 
 6145      5F697063 
 6146              	.LASF163:
 6147 11fa 5F5F696E 		.ascii	"__int16_t\000"
 6147      7431365F 
 6147      7400
 6148              	.LASF105:
 6149 1204 74637077 		.ascii	"tcpwm_0_interrupts_5_IRQn\000"
 6149      6D5F305F 
 6149      696E7465 
 6149      72727570 
 6149      74735F35 
 6150              	.LASF292:
 6151 121e 70657269 		.ascii	"periClockNr\000"
 6151      436C6F63 
 6151      6B4E7200 
 6152              	.LASF307:
 6153 122a 666C6173 		.ascii	"flashCtlMainWs2Freq\000"
 6153      6843746C 
 6153      4D61696E 
 6153      57733246 
 6153      72657100 
 6154              	.LASF268:
 6155 123e 6873696F 		.ascii	"hsiomBase\000"
 6155      6D426173 
 6155      6500
 6156              	.LASF357:
 6157 1248 43595F53 		.ascii	"CY_SAR_BAD_PARAM\000"
 6157      41525F42 
 6157      41445F50 
 6157      4152414D 
 6157      00
 6158              	.LASF226:
 6159 1259 4348414E 		.ascii	"CHAN_RESULT\000"
 6159      5F524553 
 6159      554C5400 
 6160              	.LASF4:
 6161 1265 42757346 		.ascii	"BusFault_IRQn\000"
 6161      61756C74 
 6161      5F495251 
 6161      6E00
 6162              	.LASF10:
 6163 1273 696F7373 		.ascii	"ioss_interrupts_gpio_0_IRQn\000"
 6163      5F696E74 
 6163      65727275 
 6163      7074735F 
 6163      6770696F 
 6164              	.LASF334:
 6165 128f 63707573 		.ascii	"cpussCm4ClockCtlOffset\000"
 6165      73436D34 
 6165      436C6F63 
 6165      6B43746C 
 6165      4F666673 
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 271


 6166              	.LASF345:
 6167 12a6 63707573 		.ascii	"cpussRam1Ctl0\000"
 6167      7352616D 
 6167      3143746C 
 6167      3000
 6168              	.LASF318:
 6169 12b4 70657269 		.ascii	"periTrGrOffset\000"
 6169      54724772 
 6169      4F666673 
 6169      657400
 6170              	.LASF239:
 6171 12c3 52414E47 		.ascii	"RANGE_INTR\000"
 6171      455F494E 
 6171      545200
 6172              	.LASF133:
 6173 12ce 7564625F 		.ascii	"udb_interrupts_1_IRQn\000"
 6173      696E7465 
 6173      72727570 
 6173      74735F31 
 6173      5F495251 
 6174              	.LASF284:
 6175 12e4 63707573 		.ascii	"cpussDwChNr\000"
 6175      73447743 
 6175      684E7200 
 6176              	.LASF233:
 6177 12f0 494E5452 		.ascii	"INTR_MASK\000"
 6177      5F4D4153 
 6177      4B00
 6178              	.LASF153:
 6179 12fa 7573625F 		.ascii	"usb_interrupt_hi_IRQn\000"
 6179      696E7465 
 6179      72727570 
 6179      745F6869 
 6179      5F495251 
 6180              	.LASF390:
 6181 1310 6368616E 		.ascii	"chanConfig\000"
 6181      436F6E66 
 6181      696700
 6182              	.LASF444:
 6183 131b 75736572 		.ascii	"userIsr\000"
 6183      49737200 
 6184              	.LASF52:
 6185 1323 7363625F 		.ascii	"scb_1_interrupt_IRQn\000"
 6185      315F696E 
 6185      74657272 
 6185      7570745F 
 6185      4952516E 
 6186              	.LASF119:
 6187 1338 74637077 		.ascii	"tcpwm_1_interrupts_11_IRQn\000"
 6187      6D5F315F 
 6187      696E7465 
 6187      72727570 
 6187      74735F31 
 6188              	.LASF16:
 6189 1353 696F7373 		.ascii	"ioss_interrupts_gpio_6_IRQn\000"
 6189      5F696E74 
 6189      65727275 
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 272


 6189      7074735F 
 6189      6770696F 
 6190              	.LASF355:
 6191 136f 75696E74 		.ascii	"uint32\000"
 6191      333200
 6192              	.LASF282:
 6193 1376 63707573 		.ascii	"cpussIpcNr\000"
 6193      73497063 
 6193      4E7200
 6194              	.LASF252:
 6195 1381 4D55585F 		.ascii	"MUX_SWITCH_CLEAR0\000"
 6195      53574954 
 6195      43485F43 
 6195      4C454152 
 6195      3000
 6196              	.LASF422:
 6197 1393 5F5F4E56 		.ascii	"__NVIC_DisableIRQ\000"
 6197      49435F44 
 6197      69736162 
 6197      6C654952 
 6197      5100
 6198              	.LASF458:
 6199 13a5 6D61736B 		.ascii	"mask\000"
 6199      00
 6200              	.LASF69:
 6201 13aa 63707573 		.ascii	"cpuss_interrupts_dw0_9_IRQn\000"
 6201      735F696E 
 6201      74657272 
 6201      75707473 
 6201      5F647730 
 6202              	.LASF420:
 6203 13c6 5F5F4453 		.ascii	"__DSB\000"
 6203      4200
 6204              	.LASF63:
 6205 13cc 63707573 		.ascii	"cpuss_interrupts_dw0_3_IRQn\000"
 6205      735F696E 
 6205      74657272 
 6205      75707473 
 6205      5F647730 
 6206              	.LASF346:
 6207 13e8 63707573 		.ascii	"cpussRam2Ctl0\000"
 6207      7352616D 
 6207      3243746C 
 6207      3000
 6208              	.LASF11:
 6209 13f6 696F7373 		.ascii	"ioss_interrupts_gpio_1_IRQn\000"
 6209      5F696E74 
 6209      65727275 
 6209      7074735F 
 6209      6770696F 
 6210              	.LASF184:
 6211 1412 49435052 		.ascii	"ICPR\000"
 6211      00
 6212              	.LASF72:
 6213 1417 63707573 		.ascii	"cpuss_interrupts_dw0_12_IRQn\000"
 6213      735F696E 
 6213      74657272 
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 273


 6213      75707473 
 6213      5F647730 
 6214              	.LASF24:
 6215 1434 696F7373 		.ascii	"ioss_interrupts_gpio_14_IRQn\000"
 6215      5F696E74 
 6215      65727275 
 6215      7074735F 
 6215      6770696F 
 6216              	.LASF361:
 6217 1451 43595F53 		.ascii	"CY_SAR_START_CONVERT_SINGLE_SHOT\000"
 6217      41525F53 
 6217      54415254 
 6217      5F434F4E 
 6217      56455254 
 6218              	.LASF80:
 6219 1472 63707573 		.ascii	"cpuss_interrupts_dw1_4_IRQn\000"
 6219      735F696E 
 6219      74657272 
 6219      75707473 
 6219      5F647731 
 6220              	.LASF86:
 6221 148e 63707573 		.ascii	"cpuss_interrupts_dw1_10_IRQn\000"
 6221      735F696E 
 6221      74657272 
 6221      75707473 
 6221      5F647731 
 6222              	.LASF106:
 6223 14ab 74637077 		.ascii	"tcpwm_0_interrupts_6_IRQn\000"
 6223      6D5F305F 
 6223      696E7465 
 6223      72727570 
 6223      74735F36 
 6224              	.LASF358:
 6225 14c5 43595F53 		.ascii	"CY_SAR_TIMEOUT\000"
 6225      41525F54 
 6225      494D454F 
 6225      555400
 6226              	.LASF407:
 6227 14d4 43595F53 		.ascii	"CY_SYSCLK_DIV_16_5_BIT\000"
 6227      5953434C 
 6227      4B5F4449 
 6227      565F3136 
 6227      5F355F42 
 6228              	.LASF325:
 6229 14eb 70657269 		.ascii	"periDiv16CtlOffset\000"
 6229      44697631 
 6229      3643746C 
 6229      4F666673 
 6229      657400
 6230              	.LASF476:
 6231 14fe 443A5C74 		.ascii	"D:\\thesis\\VDAC_Saw_Export.cydsn\000"
 6231      68657369 
 6231      735C5644 
 6231      41435F53 
 6231      61775F45 
 6232              	.LASF472:
 6233 151e 4144435F 		.ascii	"ADC_1_allConfigs\000"
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 274


 6233      315F616C 
 6233      6C436F6E 
 6233      66696773 
 6233      00
 6234              	.LASF339:
 6235 152f 63707573 		.ascii	"cpussTrimRomCtlOffset\000"
 6235      73547269 
 6235      6D526F6D 
 6235      43746C4F 
 6235      66667365 
 6236              	.LASF116:
 6237 1545 74637077 		.ascii	"tcpwm_1_interrupts_8_IRQn\000"
 6237      6D5F315F 
 6237      696E7465 
 6237      72727570 
 6237      74735F38 
 6238              	.LASF394:
 6239 155f 6D757853 		.ascii	"muxSwitch\000"
 6239      77697463 
 6239      6800
 6240              	.LASF165:
 6241 1569 73686F72 		.ascii	"short unsigned int\000"
 6241      7420756E 
 6241      7369676E 
 6241      65642069 
 6241      6E7400
 6242              	.LASF262:
 6243 157c 6C6F6E67 		.ascii	"long double\000"
 6243      20646F75 
 6243      626C6500 
 6244              	.LASF175:
 6245 1588 75696E74 		.ascii	"uint16_t\000"
 6245      31365F74 
 6245      00
 6246              	.LASF423:
 6247 1591 4952516E 		.ascii	"IRQn\000"
 6247      00
 6248              	.LASF317:
 6249 1596 70657269 		.ascii	"periTrCmdGrSelMsk\000"
 6249      5472436D 
 6249      64477253 
 6249      656C4D73 
 6249      6B00
 6250              	.LASF99:
 6251 15a8 63707573 		.ascii	"cpuss_interrupts_cm4_cti_1_IRQn\000"
 6251      735F696E 
 6251      74657272 
 6251      75707473 
 6251      5F636D34 
 6252              	.LASF403:
 6253 15c8 43595F53 		.ascii	"CY_SYSCLK_INVALID_STATE\000"
 6253      5953434C 
 6253      4B5F494E 
 6253      56414C49 
 6253      445F5354 
 6254              	.LASF111:
 6255 15e0 74637077 		.ascii	"tcpwm_1_interrupts_3_IRQn\000"
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 275


 6255      6D5F315F 
 6255      696E7465 
 6255      72727570 
 6255      74735F33 
 6256              	.LASF138:
 6257 15fa 7564625F 		.ascii	"udb_interrupts_6_IRQn\000"
 6257      696E7465 
 6257      72727570 
 6257      74735F36 
 6257      5F495251 
 6258              	.LASF385:
 6259 1610 73616D70 		.ascii	"sampleTime01\000"
 6259      6C655469 
 6259      6D653031 
 6259      00
 6260              	.LASF291:
 6261 161d 73727373 		.ascii	"srssNumHfroot\000"
 6261      4E756D48 
 6261      66726F6F 
 6261      7400
 6262              	.LASF313:
 6263 162b 64774368 		.ascii	"dwChCtlPreemptablePos\000"
 6263      43746C50 
 6263      7265656D 
 6263      70746162 
 6263      6C65506F 
 6264              	.LASF406:
 6265 1641 43595F53 		.ascii	"CY_SYSCLK_DIV_16_BIT\000"
 6265      5953434C 
 6265      4B5F4449 
 6265      565F3136 
 6265      5F424954 
 6266              	.LASF275:
 6267 1656 64775665 		.ascii	"dwVersion\000"
 6267      7273696F 
 6267      6E00
 6268              	.LASF124:
 6269 1660 74637077 		.ascii	"tcpwm_1_interrupts_16_IRQn\000"
 6269      6D5F315F 
 6269      696E7465 
 6269      72727570 
 6269      74735F31 
 6270              	.LASF42:
 6271 167b 63707573 		.ascii	"cpuss_interrupts_ipc_7_IRQn\000"
 6271      735F696E 
 6271      74657272 
 6271      75707473 
 6271      5F697063 
 6272              	.LASF447:
 6273 1697 636F6E66 		.ascii	"config\000"
 6273      696700
 6274              	.LASF83:
 6275 169e 63707573 		.ascii	"cpuss_interrupts_dw1_7_IRQn\000"
 6275      735F696E 
 6275      74657272 
 6275      75707473 
 6275      5F647731 
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 276


 6276              	.LASF371:
 6277 16ba 43595F53 		.ascii	"CY_SAR_SWITCH_SEQ_CTRL_ENABLE\000"
 6277      41525F53 
 6277      57495443 
 6277      485F5345 
 6277      515F4354 
 6278              	.LASF190:
 6279 16d8 73697A65 		.ascii	"sizetype\000"
 6279      74797065 
 6279      00
 6280              	.LASF401:
 6281 16e1 43595F53 		.ascii	"CY_SYSCLK_BAD_PARAM\000"
 6281      5953434C 
 6281      4B5F4241 
 6281      445F5041 
 6281      52414D00 
 6282              	.LASF342:
 6283 16f5 63707573 		.ascii	"cpussCm4NmiCtlOffset\000"
 6283      73436D34 
 6283      4E6D6943 
 6283      746C4F66 
 6283      66736574 
 6284              	.LASF179:
 6285 170a 52455345 		.ascii	"RESERVED0\000"
 6285      52564544 
 6285      3000
 6286              	.LASF324:
 6287 1714 70657269 		.ascii	"periDiv8CtlOffset\000"
 6287      44697638 
 6287      43746C4F 
 6287      66667365 
 6287      7400
 6288              	.LASF183:
 6289 1726 52455345 		.ascii	"RESERVED2\000"
 6289      52564544 
 6289      3200
 6290              	.LASF185:
 6291 1730 52455345 		.ascii	"RESERVED3\000"
 6291      52564544 
 6291      3300
 6292              	.LASF187:
 6293 173a 52455345 		.ascii	"RESERVED4\000"
 6293      52564544 
 6293      3400
 6294              	.LASF188:
 6295 1744 52455345 		.ascii	"RESERVED5\000"
 6295      52564544 
 6295      3500
 6296              	.LASF245:
 6297 174e 52455345 		.ascii	"RESERVED6\000"
 6297      52564544 
 6297      3600
 6298              	.LASF424:
 6299 1758 43795F53 		.ascii	"Cy_SAR_Disable\000"
 6299      41525F44 
 6299      69736162 
 6299      6C6500
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 277


 6300              	.LASF250:
 6301 1767 52455345 		.ascii	"RESERVED8\000"
 6301      52564544 
 6301      3800
 6302              	.LASF34:
 6303 1771 626C6573 		.ascii	"bless_interrupt_IRQn\000"
 6303      735F696E 
 6303      74657272 
 6303      7570745F 
 6303      4952516E 
 6304              	.LASF215:
 6305 1786 50455249 		.ascii	"PERI_V1_Type\000"
 6305      5F56315F 
 6305      54797065 
 6305      00
 6306              	.LASF238:
 6307 1793 53415455 		.ascii	"SATURATE_INTR_MASKED\000"
 6307      52415445 
 6307      5F494E54 
 6307      525F4D41 
 6307      534B4544 
 6308              	.LASF255:
 6309 17a8 4D55585F 		.ascii	"MUX_SWITCH_SQ_CTRL\000"
 6309      53574954 
 6309      43485F53 
 6309      515F4354 
 6309      524C00
 6310              	.LASF167:
 6311 17bb 6C6F6E67 		.ascii	"long int\000"
 6311      20696E74 
 6311      00
 6312              	.LASF91:
 6313 17c4 63707573 		.ascii	"cpuss_interrupts_dw1_15_IRQn\000"
 6313      735F696E 
 6313      74657272 
 6313      75707473 
 6313      5F647731 
 6314              	.LASF273:
 6315 17e1 63707573 		.ascii	"cpussVersion\000"
 6315      73566572 
 6315      73696F6E 
 6315      00
 6316              	.LASF467:
 6317 17ee 49544D5F 		.ascii	"ITM_RxBuffer\000"
 6317      52784275 
 6317      66666572 
 6317      00
 6318              	.LASF277:
 6319 17fb 6770696F 		.ascii	"gpioVersion\000"
 6319      56657273 
 6319      696F6E00 
 6320              	.LASF1:
 6321 1807 4E6F6E4D 		.ascii	"NonMaskableInt_IRQn\000"
 6321      61736B61 
 6321      626C6549 
 6321      6E745F49 
 6321      52516E00 
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 278


 6322              	.LASF128:
 6323 181b 74637077 		.ascii	"tcpwm_1_interrupts_20_IRQn\000"
 6323      6D5F315F 
 6323      696E7465 
 6323      72727570 
 6323      74735F32 
 6324              	.LASF276:
 6325 1836 666C6173 		.ascii	"flashcVersion\000"
 6325      68635665 
 6325      7273696F 
 6325      6E00
 6326              	.LASF298:
 6327 1844 70726F74 		.ascii	"protBusMasterMask\000"
 6327      4275734D 
 6327      61737465 
 6327      724D6173 
 6327      6B00
 6328              	.LASF267:
 6329 1856 70726F74 		.ascii	"protBase\000"
 6329      42617365 
 6329      00
 6330              	.LASF57:
 6331 185f 7363625F 		.ascii	"scb_6_interrupt_IRQn\000"
 6331      365F696E 
 6331      74657272 
 6331      7570745F 
 6331      4952516E 
 6332              	.LASF376:
 6333 1874 43595F53 		.ascii	"CY_SAR_RANGE_COND_ABOVE\000"
 6333      41525F52 
 6333      414E4745 
 6333      5F434F4E 
 6333      445F4142 
 6334              	.LASF436:
 6335 188c 43795F53 		.ascii	"Cy_SysClk_PeriphEnableDivider\000"
 6335      7973436C 
 6335      6B5F5065 
 6335      72697068 
 6335      456E6162 
 6336              	.LASF471:
 6337 18aa 4144435F 		.ascii	"ADC_1_currentConfig\000"
 6337      315F6375 
 6337      7272656E 
 6337      74436F6E 
 6337      66696700 
 6338              	.LASF220:
 6339 18be 52414E47 		.ascii	"RANGE_THRES\000"
 6339      455F5448 
 6339      52455300 
 6340              	.LASF351:
 6341 18ca 63686172 		.ascii	"char_t\000"
 6341      5F7400
 6342              	.LASF359:
 6343 18d1 43595F53 		.ascii	"CY_SAR_CONVERSION_NOT_COMPLETE\000"
 6343      41525F43 
 6343      4F4E5645 
 6343      5253494F 
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 279


 6343      4E5F4E4F 
 6344              	.LASF47:
 6345 18f0 63707573 		.ascii	"cpuss_interrupts_ipc_12_IRQn\000"
 6345      735F696E 
 6345      74657272 
 6345      75707473 
 6345      5F697063 
 6346              	.LASF225:
 6347 190d 4348414E 		.ascii	"CHAN_WORK\000"
 6347      5F574F52 
 6347      4B00
 6348              	.LASF41:
 6349 1917 63707573 		.ascii	"cpuss_interrupts_ipc_6_IRQn\000"
 6349      735F696E 
 6349      74657272 
 6349      75707473 
 6349      5F697063 
 6350              	.LASF354:
 6351 1933 646F7562 		.ascii	"double\000"
 6351      6C6500
 6352              	.LASF88:
 6353 193a 63707573 		.ascii	"cpuss_interrupts_dw1_12_IRQn\000"
 6353      735F696E 
 6353      74657272 
 6353      75707473 
 6353      5F647731 
 6354              	.LASF18:
 6355 1957 696F7373 		.ascii	"ioss_interrupts_gpio_8_IRQn\000"
 6355      5F696E74 
 6355      65727275 
 6355      7074735F 
 6355      6770696F 
 6356              	.LASF337:
 6357 1973 63707573 		.ascii	"cpussCm4PwrCtlOffset\000"
 6357      73436D34 
 6357      50777243 
 6357      746C4F66 
 6357      66736574 
 6358              	.LASF152:
 6359 1988 736D6966 		.ascii	"smif_interrupt_IRQn\000"
 6359      5F696E74 
 6359      65727275 
 6359      70745F49 
 6359      52516E00 
 6360              	.LASF53:
 6361 199c 7363625F 		.ascii	"scb_2_interrupt_IRQn\000"
 6361      325F696E 
 6361      74657272 
 6361      7570745F 
 6361      4952516E 
 6362              	.LASF191:
 6363 19b1 4E564943 		.ascii	"NVIC_Type\000"
 6363      5F547970 
 6363      6500
 6364              	.LASF413:
 6365 19bb 6D697363 		.ascii	"miscConfig\000"
 6365      436F6E66 
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 280


 6365      696700
 6366              	.LASF13:
 6367 19c6 696F7373 		.ascii	"ioss_interrupts_gpio_3_IRQn\000"
 6367      5F696E74 
 6367      65727275 
 6367      7074735F 
 6367      6770696F 
 6368              	.LASF74:
 6369 19e2 63707573 		.ascii	"cpuss_interrupts_dw0_14_IRQn\000"
 6369      735F696E 
 6369      74657272 
 6369      75707473 
 6369      5F647730 
 6370              	.LASF294:
 6371 19ff 70617373 		.ascii	"passSarChannels\000"
 6371      53617243 
 6371      68616E6E 
 6371      656C7300 
 6372              	.LASF82:
 6373 1a0f 63707573 		.ascii	"cpuss_interrupts_dw1_6_IRQn\000"
 6373      735F696E 
 6373      74657272 
 6373      75707473 
 6373      5F647731 
 6374              	.LASF130:
 6375 1a2b 74637077 		.ascii	"tcpwm_1_interrupts_22_IRQn\000"
 6375      6D5F315F 
 6375      696E7465 
 6375      72727570 
 6375      74735F32 
 6376              	.LASF234:
 6377 1a46 494E5452 		.ascii	"INTR_MASKED\000"
 6377      5F4D4153 
 6377      4B454400 
 6378              	.LASF60:
 6379 1a52 63707573 		.ascii	"cpuss_interrupts_dw0_0_IRQn\000"
 6379      735F696E 
 6379      74657272 
 6379      75707473 
 6379      5F647730 
 6380              	.LASF103:
 6381 1a6e 74637077 		.ascii	"tcpwm_0_interrupts_3_IRQn\000"
 6381      6D5F305F 
 6381      696E7465 
 6381      72727570 
 6381      74735F33 
 6382              	.LASF386:
 6383 1a88 73616D70 		.ascii	"sampleTime23\000"
 6383      6C655469 
 6383      6D653233 
 6383      00
 6384              	.LASF217:
 6385 1a95 53414D50 		.ascii	"SAMPLE_CTRL\000"
 6385      4C455F43 
 6385      54524C00 
 6386              	.LASF417:
 6387 1aa1 696E7472 		.ascii	"intrPriority\000"
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 281


 6387      5072696F 
 6387      72697479 
 6387      00
 6388              	.LASF144:
 6389 1aae 7564625F 		.ascii	"udb_interrupts_12_IRQn\000"
 6389      696E7465 
 6389      72727570 
 6389      74735F31 
 6389      325F4952 
 6390              	.LASF9:
 6391 1ac5 53797354 		.ascii	"SysTick_IRQn\000"
 6391      69636B5F 
 6391      4952516E 
 6391      00
 6392              	.LASF278:
 6393 1ad2 6873696F 		.ascii	"hsiomVersion\000"
 6393      6D566572 
 6393      73696F6E 
 6393      00
 6394              	.LASF77:
 6395 1adf 63707573 		.ascii	"cpuss_interrupts_dw1_1_IRQn\000"
 6395      735F696E 
 6395      74657272 
 6395      75707473 
 6395      5F647731 
 6396              	.LASF347:
 6397 1afb 69706353 		.ascii	"ipcStructSize\000"
 6397      74727563 
 6397      7453697A 
 6397      6500
 6398              	.LASF169:
 6399 1b09 6C6F6E67 		.ascii	"long unsigned int\000"
 6399      20756E73 
 6399      69676E65 
 6399      6420696E 
 6399      7400
 6400              	.LASF437:
 6401 1b1b 72657456 		.ascii	"retVal\000"
 6401      616C00
 6402              	.LASF431:
 6403 1b22 43795F53 		.ascii	"Cy_SAR_SetVssaSarSeqCtrl\000"
 6403      41525F53 
 6403      65745673 
 6403      73615361 
 6403      72536571 
 6404              	.LASF343:
 6405 1b3b 63707573 		.ascii	"cpussRomCtl\000"
 6405      73526F6D 
 6405      43746C00 
 6406              	.LASF64:
 6407 1b47 63707573 		.ascii	"cpuss_interrupts_dw0_4_IRQn\000"
 6407      735F696E 
 6407      74657272 
 6407      75707473 
 6407      5F647730 
 6408              	.LASF192:
 6409 1b63 434C4F43 		.ascii	"CLOCK_CTL\000"
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 282


 6409      4B5F4354 
 6409      4C00
 6410              	.LASF176:
 6411 1b6d 696E7433 		.ascii	"int32_t\000"
 6411      325F7400 
 6412              	.LASF349:
 6413 1b75 63795F73 		.ascii	"cy_stc_device_t\000"
 6413      74635F64 
 6413      65766963 
 6413      655F7400 
 6414              	.LASF251:
 6415 1b85 4D55585F 		.ascii	"MUX_SWITCH0\000"
 6415      53574954 
 6415      43483000 
 6416              	.LASF228:
 6417 1b91 4348414E 		.ascii	"CHAN_RESULT_UPDATED\000"
 6417      5F524553 
 6417      554C545F 
 6417      55504441 
 6417      54454400 
 6418              	.LASF113:
 6419 1ba5 74637077 		.ascii	"tcpwm_1_interrupts_5_IRQn\000"
 6419      6D5F315F 
 6419      696E7465 
 6419      72727570 
 6419      74735F35 
 6420              	.LASF140:
 6421 1bbf 7564625F 		.ascii	"udb_interrupts_8_IRQn\000"
 6421      696E7465 
 6421      72727570 
 6421      74735F38 
 6421      5F495251 
 6422              	.LASF266:
 6423 1bd5 75646242 		.ascii	"udbBase\000"
 6423      61736500 
 6424              	.LASF430:
 6425 1bdd 73746174 		.ascii	"state\000"
 6425      6500
 6426              	.LASF224:
 6427 1be3 4348414E 		.ascii	"CHAN_CONFIG\000"
 6427      5F434F4E 
 6427      46494700 
 6428              	.LASF336:
 6429 1bef 63707573 		.ascii	"cpussCm0StatusOffset\000"
 6429      73436D30 
 6429      53746174 
 6429      75734F66 
 6429      66736574 
 6430              	.LASF384:
 6431 1c04 73616D70 		.ascii	"sampleCtrl\000"
 6431      6C654374 
 6431      726C00
 6432              	.LASF421:
 6433 1c0f 5F5F4E56 		.ascii	"__NVIC_EnableIRQ\000"
 6433      49435F45 
 6433      6E61626C 
 6433      65495251 
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 283


 6433      00
 6434              	.LASF126:
 6435 1c20 74637077 		.ascii	"tcpwm_1_interrupts_18_IRQn\000"
 6435      6D5F315F 
 6435      696E7465 
 6435      72727570 
 6435      74735F31 
 6436              	.LASF7:
 6437 1c3b 44656275 		.ascii	"DebugMonitor_IRQn\000"
 6437      674D6F6E 
 6437      69746F72 
 6437      5F495251 
 6437      6E00
 6438              	.LASF5:
 6439 1c4d 55736167 		.ascii	"UsageFault_IRQn\000"
 6439      65466175 
 6439      6C745F49 
 6439      52516E00 
 6440              	.LASF108:
 6441 1c5d 74637077 		.ascii	"tcpwm_1_interrupts_0_IRQn\000"
 6441      6D5F315F 
 6441      696E7465 
 6441      72727570 
 6441      74735F30 
 6442              	.LASF135:
 6443 1c77 7564625F 		.ascii	"udb_interrupts_3_IRQn\000"
 6443      696E7465 
 6443      72727570 
 6443      74735F33 
 6443      5F495251 
 6444              	.LASF379:
 6445 1c8d 43595F53 		.ascii	"CY_SAR_INTR_MASK_NONE\000"
 6445      41525F49 
 6445      4E54525F 
 6445      4D41534B 
 6445      5F4E4F4E 
 6446              	.LASF258:
 6447 1ca3 414E415F 		.ascii	"ANA_TRIM0\000"
 6447      5452494D 
 6447      3000
 6448              	.LASF259:
 6449 1cad 414E415F 		.ascii	"ANA_TRIM1\000"
 6449      5452494D 
 6449      3100
 6450              	.LASF168:
 6451 1cb7 5F5F7569 		.ascii	"__uint32_t\000"
 6451      6E743332 
 6451      5F7400
 6452              	.LASF350:
 6453 1cc2 63795F69 		.ascii	"cy_israddress\000"
 6453      73726164 
 6453      64726573 
 6453      7300
 6454              	.LASF121:
 6455 1cd0 74637077 		.ascii	"tcpwm_1_interrupts_13_IRQn\000"
 6455      6D5F315F 
 6455      696E7465 
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 284


 6455      72727570 
 6455      74735F31 
 6456              	.LASF51:
 6457 1ceb 7363625F 		.ascii	"scb_0_interrupt_IRQn\000"
 6457      305F696E 
 6457      74657272 
 6457      7570745F 
 6457      4952516E 
 6458              	.LASF39:
 6459 1d00 63707573 		.ascii	"cpuss_interrupts_ipc_4_IRQn\000"
 6459      735F696E 
 6459      74657272 
 6459      75707473 
 6459      5F697063 
 6460              	.LASF367:
 6461 1d1c 43595F53 		.ascii	"CY_SAR_SWITCH_OPEN\000"
 6461      41525F53 
 6461      57495443 
 6461      485F4F50 
 6461      454E00
 6462              	.LASF408:
 6463 1d2f 43595F53 		.ascii	"CY_SYSCLK_DIV_24_5_BIT\000"
 6463      5953434C 
 6463      4B5F4449 
 6463      565F3234 
 6463      5F355F42 
 6464              	.LASF237:
 6465 1d46 53415455 		.ascii	"SATURATE_INTR_MASK\000"
 6465      52415445 
 6465      5F494E54 
 6465      525F4D41 
 6465      534B00
 6466              	.LASF462:
 6467 1d59 7265744D 		.ascii	"retMode\000"
 6467      6F646500 
 6468              	.LASF257:
 6469 1d61 52455345 		.ascii	"RESERVED10\000"
 6469      52564544 
 6469      313000
 6470              	.LASF304:
 6471 1d6c 666C6173 		.ascii	"flashEraseDelay\000"
 6471      68457261 
 6471      73654465 
 6471      6C617900 
 6472              	.LASF65:
 6473 1d7c 63707573 		.ascii	"cpuss_interrupts_dw0_5_IRQn\000"
 6473      735F696E 
 6473      74657272 
 6473      75707473 
 6473      5F647730 
 6474              	.LASF182:
 6475 1d98 49535052 		.ascii	"ISPR\000"
 6475      00
 6476              	.LASF310:
 6477 1d9d 64774368 		.ascii	"dwChOffset\000"
 6477      4F666673 
 6477      657400
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 285


 6478              	.LASF414:
 6479 1da8 636C6B44 		.ascii	"clkDivider\000"
 6479      69766964 
 6479      657200
 6480              	.LASF180:
 6481 1db3 49434552 		.ascii	"ICER\000"
 6481      00
 6482              	.LASF409:
 6483 1db8 63795F65 		.ascii	"cy_en_divider_types_t\000"
 6483      6E5F6469 
 6483      76696465 
 6483      725F7479 
 6483      7065735F 
 6484              	.LASF428:
 6485 1dce 43795F53 		.ascii	"Cy_SAR_SetInterruptMask\000"
 6485      41525F53 
 6485      6574496E 
 6485      74657272 
 6485      7570744D 
 6486              	.LASF186:
 6487 1de6 49414252 		.ascii	"IABR\000"
 6487      00
 6488              	.LASF383:
 6489 1deb 6374726C 		.ascii	"ctrl\000"
 6489      00
 6490              	.LASF370:
 6491 1df0 43595F53 		.ascii	"CY_SAR_SWITCH_SEQ_CTRL_DISABLE\000"
 6491      41525F53 
 6491      57495443 
 6491      485F5345 
 6491      515F4354 
 6492              	.LASF456:
 6493 1e0f 4144435F 		.ascii	"ADC_1_IRQ_Disable\000"
 6493      315F4952 
 6493      515F4469 
 6493      7361626C 
 6493      6500
 6494              	.LASF26:
 6495 1e21 696F7373 		.ascii	"ioss_interrupt_vdd_IRQn\000"
 6495      5F696E74 
 6495      65727275 
 6495      70745F76 
 6495      64645F49 
 6496              	.LASF161:
 6497 1e39 5F5F7569 		.ascii	"__uint8_t\000"
 6497      6E74385F 
 6497      7400
 6498              	.LASF49:
 6499 1e43 63707573 		.ascii	"cpuss_interrupts_ipc_14_IRQn\000"
 6499      735F696E 
 6499      74657272 
 6499      75707473 
 6499      5F697063 
 6500              	.LASF0:
 6501 1e60 52657365 		.ascii	"Reset_IRQn\000"
 6501      745F4952 
 6501      516E00
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 286


 6502              	.LASF352:
 6503 1e6b 63686172 		.ascii	"char\000"
 6503      00
 6504              	.LASF300:
 6505 1e70 666C6173 		.ascii	"flashRwwRequired\000"
 6505      68527777 
 6505      52657175 
 6505      69726564 
 6505      00
 6506              	.LASF329:
 6507 1e81 6770696F 		.ascii	"gpioPrtCfgOffset\000"
 6507      50727443 
 6507      66674F66 
 6507      66736574 
 6507      00
 6508              	.LASF295:
 6509 1e92 65704D6F 		.ascii	"epMonitorNr\000"
 6509      6E69746F 
 6509      724E7200 
 6510              	.LASF70:
 6511 1e9e 63707573 		.ascii	"cpuss_interrupts_dw0_10_IRQn\000"
 6511      735F696E 
 6511      74657272 
 6511      75707473 
 6511      5F647730 
 6512              	.LASF2:
 6513 1ebb 48617264 		.ascii	"HardFault_IRQn\000"
 6513      4661756C 
 6513      745F4952 
 6513      516E00
 6514              	.LASF449:
 6515 1eca 4144435F 		.ascii	"ADC_1_SelectConfig\000"
 6515      315F5365 
 6515      6C656374 
 6515      436F6E66 
 6515      696700
 6516              	.LASF159:
 6517 1edd 7369676E 		.ascii	"signed char\000"
 6517      65642063 
 6517      68617200 
 6518              	.LASF148:
 6519 1ee9 70617373 		.ascii	"pass_interrupt_sar_IRQn\000"
 6519      5F696E74 
 6519      65727275 
 6519      70745F73 
 6519      61725F49 
 6520              	.LASF132:
 6521 1f01 7564625F 		.ascii	"udb_interrupts_0_IRQn\000"
 6521      696E7465 
 6521      72727570 
 6521      74735F30 
 6521      5F495251 
 6522              	.LASF205:
 6523 1f17 50455249 		.ascii	"PERI_PPU_GR_V1_Type\000"
 6523      5F505055 
 6523      5F47525F 
 6523      56315F54 
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 287


 6523      79706500 
 6524              	.LASF283:
 6525 1f2b 63707573 		.ascii	"cpussIpcIrqNr\000"
 6525      73497063 
 6525      4972714E 
 6525      7200
 6526              	.LASF470:
 6527 1f39 4144435F 		.ascii	"ADC_1_selected\000"
 6527      315F7365 
 6527      6C656374 
 6527      656400
 6528              	.LASF254:
 6529 1f48 4D55585F 		.ascii	"MUX_SWITCH_DS_CTRL\000"
 6529      53574954 
 6529      43485F44 
 6529      535F4354 
 6529      524C00
 6530              	.LASF335:
 6531 1f5b 63707573 		.ascii	"cpussCm4StatusOffset\000"
 6531      73436D34 
 6531      53746174 
 6531      75734F66 
 6531      66736574 
 6532              	.LASF15:
 6533 1f70 696F7373 		.ascii	"ioss_interrupts_gpio_5_IRQn\000"
 6533      5F696E74 
 6533      65727275 
 6533      7074735F 
 6533      6770696F 
 6534              	.LASF44:
 6535 1f8c 63707573 		.ascii	"cpuss_interrupts_ipc_9_IRQn\000"
 6535      735F696E 
 6535      74657272 
 6535      75707473 
 6535      5F697063 
 6536              	.LASF256:
 6537 1fa8 4D55585F 		.ascii	"MUX_SWITCH_STATUS\000"
 6537      53574954 
 6537      43485F53 
 6537      54415455 
 6537      5300
 6538              	.LASF200:
 6539 1fba 41444452 		.ascii	"ADDR0\000"
 6539      3000
 6540              	.LASF202:
 6541 1fc0 41444452 		.ascii	"ADDR1\000"
 6541      3100
 6542              	.LASF280:
 6543 1fc6 70657269 		.ascii	"periVersion\000"
 6543      56657273 
 6543      696F6E00 
 6544              	.LASF93:
 6545 1fd2 63707573 		.ascii	"cpuss_interrupts_fault_1_IRQn\000"
 6545      735F696E 
 6545      74657272 
 6545      75707473 
 6545      5F666175 
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 288


 6546              	.LASF448:
 6547 1ff0 6465496E 		.ascii	"deInitRouting\000"
 6547      6974526F 
 6547      7574696E 
 6547      6700
 6548              	.LASF396:
 6549 1ffe 636F6E66 		.ascii	"configRouting\000"
 6549      6967526F 
 6549      7574696E 
 6549      6700
 6550              	.LASF270:
 6551 200c 70617373 		.ascii	"passBase\000"
 6551      42617365 
 6551      00
 6552              	.LASF201:
 6553 2015 41545430 		.ascii	"ATT0\000"
 6553      00
 6554              	.LASF203:
 6555 201a 41545431 		.ascii	"ATT1\000"
 6555      00
 6556              	.LASF118:
 6557 201f 74637077 		.ascii	"tcpwm_1_interrupts_10_IRQn\000"
 6557      6D5F315F 
 6557      696E7465 
 6557      72727570 
 6557      74735F31 
 6558              	.LASF196:
 6559 203a 52455345 		.ascii	"RESERVED1\000"
 6559      52564544 
 6559      3100
 6560              	.LASF71:
 6561 2044 63707573 		.ascii	"cpuss_interrupts_dw0_11_IRQn\000"
 6561      735F696E 
 6561      74657272 
 6561      75707473 
 6561      5F647730 
 6562              	.LASF248:
 6563 2061 53544154 		.ascii	"STATUS\000"
 6563      555300
 6564              	.LASF197:
 6565 2068 50455249 		.ascii	"PERI_GR_V1_Type\000"
 6565      5F47525F 
 6565      56315F54 
 6565      79706500 
 6566              	.LASF309:
 6567 2078 666C6173 		.ascii	"flashCtlMainWs4Freq\000"
 6567      6843746C 
 6567      4D61696E 
 6567      57733446 
 6567      72657100 
 6568              	.LASF79:
 6569 208c 63707573 		.ascii	"cpuss_interrupts_dw1_3_IRQn\000"
 6569      735F696E 
 6569      74657272 
 6569      75707473 
 6569      5F647731 
 6570              	.LASF393:
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 289


 6571 20a8 72616E67 		.ascii	"rangeIntrMask\000"
 6571      65496E74 
 6571      724D6173 
 6571      6B00
 6572              	.LASF368:
 6573 20b6 43595F53 		.ascii	"CY_SAR_SWITCH_CLOSE\000"
 6573      41525F53 
 6573      57495443 
 6573      485F434C 
 6573      4F534500 
 6574              	.LASF459:
 6575 20ca 696E7472 		.ascii	"intrMaskReg\000"
 6575      4D61736B 
 6575      52656700 
 6576              	.LASF378:
 6577 20d6 63795F65 		.ascii	"cy_en_sar_range_detect_condition_t\000"
 6577      6E5F7361 
 6577      725F7261 
 6577      6E67655F 
 6577      64657465 
 6578              	.LASF253:
 6579 20f9 52455345 		.ascii	"RESERVED9\000"
 6579      52564544 
 6579      3900
 6580              	.LASF474:
 6581 2103 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 6581      43313120 
 6581      352E342E 
 6581      31203230 
 6581      31363036 
 6582 2136 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m4 -mfloat-abi=s"
 6582      20726576 
 6582      6973696F 
 6582      6E203233 
 6582      37373135 
 6583 2169 6F667466 		.ascii	"oftfp -mfpu=fpv4-sp-d16 -mthumb -g -O0 -ffunction-s"
 6583      70202D6D 
 6583      6670753D 
 6583      66707634 
 6583      2D73702D 
 6584 219c 65637469 		.ascii	"ections -ffat-lto-objects\000"
 6584      6F6E7320 
 6584      2D666661 
 6584      742D6C74 
 6584      6F2D6F62 
 6585              	.LASF156:
 6586 21b6 70617373 		.ascii	"pass_interrupt_dacs_IRQn\000"
 6586      5F696E74 
 6586      65727275 
 6586      70745F64 
 6586      6163735F 
 6587              	.LASF473:
 6588 21cf 4144435F 		.ascii	"ADC_1_IRQ_cfg\000"
 6588      315F4952 
 6588      515F6366 
 6588      6700
 6589              	.LASF195:
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 290


 6590 21dd 54494D45 		.ascii	"TIMEOUT_CTL\000"
 6590      4F55545F 
 6590      43544C00 
 6591              	.LASF362:
 6592 21e9 43595F53 		.ascii	"CY_SAR_START_CONVERT_CONTINUOUS\000"
 6592      41525F53 
 6592      54415254 
 6592      5F434F4E 
 6592      56455254 
 6593              	.LASF94:
 6594 2209 63707573 		.ascii	"cpuss_interrupt_crypto_IRQn\000"
 6594      735F696E 
 6594      74657272 
 6594      7570745F 
 6594      63727970 
 6595              	.LASF100:
 6596 2225 74637077 		.ascii	"tcpwm_0_interrupts_0_IRQn\000"
 6596      6D5F305F 
 6596      696E7465 
 6596      72727570 
 6596      74735F30 
 6597              	.LASF279:
 6598 223f 69706356 		.ascii	"ipcVersion\000"
 6598      65727369 
 6598      6F6E00
 6599              	.LASF38:
 6600 224a 63707573 		.ascii	"cpuss_interrupts_ipc_3_IRQn\000"
 6600      735F696E 
 6600      74657272 
 6600      75707473 
 6600      5F697063 
 6601              	.LASF391:
 6602 2266 696E7472 		.ascii	"intrMask\000"
 6602      4D61736B 
 6602      00
 6603              	.LASF316:
 6604 226f 70657269 		.ascii	"periTrCmdOffset\000"
 6604      5472436D 
 6604      644F6666 
 6604      73657400 
 6605              	.LASF58:
 6606 227f 7363625F 		.ascii	"scb_7_interrupt_IRQn\000"
 6606      375F696E 
 6606      74657272 
 6606      7570745F 
 6606      4952516E 
 6607              	.LASF439:
 6608 2294 4144435F 		.ascii	"ADC_1_intSarClock_Enable\000"
 6608      315F696E 
 6608      74536172 
 6608      436C6F63 
 6608      6B5F456E 
 6609              	.LASF216:
 6610 22ad 4354524C 		.ascii	"CTRL\000"
 6610      00
 6611              	.LASF98:
 6612 22b2 63707573 		.ascii	"cpuss_interrupts_cm4_cti_0_IRQn\000"
ARM GAS  C:\Users\JC\AppData\Local\Temp\ccNOMM6E.s 			page 291


 6612      735F696E 
 6612      74657272 
 6612      75707473 
 6612      5F636D34 
 6613              	.LASF110:
 6614 22d2 74637077 		.ascii	"tcpwm_1_interrupts_2_IRQn\000"
 6614      6D5F315F 
 6614      696E7465 
 6614      72727570 
 6614      74735F32 
 6615              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
